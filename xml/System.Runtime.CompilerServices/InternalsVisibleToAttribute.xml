<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InternalsVisibleToAttribute.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac572f45e174f70fa5053339a1308aae4feae8b8626.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72f45e174f70fa5053339a1308aae4feae8b8626</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Specifies that types that are ordinarily visible only within the current assembly are visible to a specified assembly.</source>
          <target state="translated">Задает, что типы, видимые обычно только в пределах текущей сборки, являются видимыми для заданной сборки.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Ordinarily, types and members with <ph id="ph1">`internal`</ph> scope (in C#) and <ph id="ph2">`friend`</ph> scope (in Visual Basic) are visible only in the assembly in which they are defined.</source>
          <target state="translated">Как правило, типы и члены с <ph id="ph1">`internal`</ph> области (в C#) и <ph id="ph2">`friend`</ph> области (в Visual Basic) отображаются только в сборке, в котором они определены.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute makes them also visible to the types in a specified assembly, which is known as a friend assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> Атрибут делает их также видимым типам в указанной сборке, которая называется дружественной сборки.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The attribute is applied at the assembly level.</source>
          <target state="translated">Атрибут применяется на уровне сборки.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>This means that it can be included at the beginning of a source code file, or it can be included in the AssemblyInfo file in a Visual Studio project.</source>
          <target state="translated">Это означает, что он может быть включено в начале файла исходного кода или может быть включено в файл AssemblyInfo в проект Visual Studio.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>You can use the attribute to specify a single friend assembly that can access the internal types and members of the current assembly.</source>
          <target state="translated">Атрибут можно использовать для указания одного дружественной сборки, можно получить доступ к внутренним типам и членам текущей сборки.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>You can define multiple friend assemblies in two ways.</source>
          <target state="translated">Можно определить несколько дружественных сборок двумя способами.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>They can appear as individual assembly-level attributes, as the following example illustrates.</source>
          <target state="translated">Они отображаются как отдельные атрибуты уровня сборки, как показано в следующем примере.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>They can also appear with separate <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> tags but a single <ph id="ph2">`assembly`</ph> keyword, as the following example illustrates.</source>
          <target state="translated">Они также могут отображаться с отдельными <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> теги, но один <ph id="ph2">`assembly`</ph> ключевое слово, как приведенный ниже пример иллюстрирует.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The friend assembly is identified by the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Дружественные сборки определяется <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> конструктор.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Both the current assembly and the friend assembly must be unsigned, or both assemblies must be signed with a strong name.</source>
          <target state="translated">Текущая сборка и дружественной сборки должны быть без знака или обе сборки должны быть подписаны строгим именем.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>If both assemblies are unsigned, the <ph id="ph1">`assemblyName`</ph> argument consists of the name of the friend assembly, specified without a directory path or file name extension.</source>
          <target state="translated">Если обе сборки без знака, <ph id="ph1">`assemblyName`</ph> аргумент состоит из имени дружественной сборки указано без расширения имени пути или файла каталога.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>If both assemblies are signed with a strong name, the argument to the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> constructor must consist of the name of the assembly without its directory path or file name extension, along with the full public key (and not its public key token).</source>
          <target state="translated">Если обе сборки должны быть подписаны строгим именем, аргумент <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> конструктор должен содержать имя сборки без его каталог путь или расширение имени файла, вместе с полного открытого ключа (а не его токеном открытого ключа).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>To get the full public key of a strong-named assembly, see the <bpt id="p1">[</bpt>Getting the full public key<ept id="p1">](#Key)</ept> section later in this article.</source>
          <target state="translated">Для получения полного открытого ключа сборки со строгими именами см <bpt id="p1">[</bpt>Получение полного открытого ключа<ept id="p1">](#Key)</ept> далее в этой статье.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>For more information about using <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> with strong-named assemblies, see the <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Дополнительные сведения об использовании <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> с сборки со строгими именами, в разделе <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> конструктор.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Do not include values for the <ph id="ph1">&lt;xref:System.Reflection.AssemblyName.CultureInfo%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A&gt;</ph> field in the argument; the Visual Basic, C#, and C++ compilers treat this as a compiler error.</source>
          <target state="translated">Не указывайте значения для <ph id="ph1">&lt;xref:System.Reflection.AssemblyName.CultureInfo%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph>, или <ph id="ph3">&lt;xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A&gt;</ph> поля в качестве аргумента; компиляторы Visual Basic, C# и C++ помечено как ошибку компилятора.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>If you use a compiler that does not treat it as an error (such as the <bpt id="p1">[</bpt>IL Assembler (ILAsm.exe)<ept id="p1">](~/docs/framework/tools/ilasm-exe-il-assembler.md)</ept>) and the assemblies are strong-named, a <ph id="ph1">&lt;xref:System.MethodAccessException&gt;</ph> exception is thrown the first time the specified friend assembly accesses the assembly that contains the <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute.</source>
          <target state="translated">Если вы используете компилятор, не обрабатывать как ошибки (такие как <bpt id="p1">[</bpt>ассемблера IL (ILAsm.exe)<ept id="p1">](~/docs/framework/tools/ilasm-exe-il-assembler.md)</ept>) и сборки со строгими именами, <ph id="ph1">&lt;xref:System.MethodAccessException&gt;</ph> исключения при первом обращении к заданной дружественной сборки сборка, содержащая <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> атрибута.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>For more information about how to use this attribute, see the following topics:</source>
          <target state="translated">Дополнительные сведения об использовании этого атрибута см. в следующих разделах:</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">[</bpt>Friend Assemblies (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Дружественные сборки (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">[</bpt>Friend Assemblies<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Дружественные сборки<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Getting the full public key</source>
          <target state="translated">Получение полного открытого ключа</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>You can use the <bpt id="p1">[</bpt>Strong Name Tool (Sn.exe)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept> to retrieve the full public key from a strong-named key (.snk) file.</source>
          <target state="translated">Можно использовать <bpt id="p1">[</bpt>средство строгих имен (Sn.exe)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept> для получения полного открытого ключа из файла ключа со строгими именами (SNK).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>To do this, you perform the following steps:</source>
          <target state="translated">Чтобы сделать это, выполните следующие действия:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Extract the public key from the strong-named key file to a separate file:</source>
          <target state="translated">Извлечь открытый ключ из файла ключа со строгими именами в отдельный файл:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">**</bpt>Sn -p<ept id="p1">**</ept>  <bpt id="p2">*</bpt>snk_file<ept id="p2">*</ept> <bpt id="p3">*</bpt>outfile<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sn -p<ept id="p1">**</ept>  <bpt id="p2">*</bpt>snk_file<ept id="p2">*</ept> <bpt id="p3">*</bpt>outfile<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Display the full public key to the console:</source>
          <target state="translated">Для отображения полного открытого ключа на консоль:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">**</bpt>Sn -tp<ept id="p1">**</ept>  <bpt id="p2">*</bpt>outfile<ept id="p2">*</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sn - tp<ept id="p1">**</ept><bpt id="p2">*</bpt>выходной_файл<ept id="p2">*</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Copy and paste the full public key value into your source code.</source>
          <target state="translated">Скопируйте и вставьте значение полного открытого ключа в исходном коде.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Compiling the friend assembly with C#</source>
          <target state="translated">Компиляция дружественной сборки с помощью C#</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler option.</source>
          <target state="translated">Если вы используете компилятор C# для компиляции дружественной сборки, необходимо явно указать имя выходного файла (.exe или .dll) с помощью <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> параметр компилятора.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</source>
          <target state="translated">Это необходимо потому, что компилятор еще не создал имя сборки, формируемой во время привязки к внешним ссылкам.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler option is optional for the Visual Basic compiler, and the corresponding <bpt id="p2">**</bpt>-out<ept id="p2">**</ept> or <bpt id="p3">**</bpt>-o<ept id="p3">**</ept> compiler option should not be used when compiling friend assemblies with the F# compiler.</source>
          <target state="translated"><bpt id="p1">**</bpt>/Out<ept id="p1">**</ept> параметр компилятора является необязательным для компилятора Visual Basic и соответствующие <bpt id="p2">**</bpt>-out<ept id="p2">**</ept> или <bpt id="p3">**</bpt>-o<ept id="p3">**</ept> не следует использовать параметр компилятора, при компиляции friend сборки с помощью компилятора F #.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Compiling the friend assembly with C++</source>
          <target state="translated">Компиляция дружественной сборки в C++</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>In C++, in order to make the internal members enabled by the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute accessible to a friend assembly, you must use the <ph id="ph2">`as_friend`</ph> attribute in the C++  directive.</source>
          <target state="translated">В C++, чтобы сделать внутренние элементы, включаемые <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> атрибут доступным для дружественной сборки, необходимо использовать <ph id="ph2">`as_friend`</ph> атрибут в директиве C++.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Friend Assemblies (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>дружественные сборки (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">**</bpt>Signed assemblies<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Подписанные сборки<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute to make an <ph id="ph2">`internal`</ph> method named <ph id="ph3">`AppendDirectorySeparator`</ph> in a signed assembly visible to another signed assembly.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> атрибута <ph id="ph2">`internal`</ph> метод с именем <ph id="ph3">`AppendDirectorySeparator`</ph> в подписанной сборки, видимой в другую сборку со знаком.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>It defines a <ph id="ph1">`FileUtilities`</ph> class that includes an internal <ph id="ph2">`AppendDirectorySeparator`</ph> method.</source>
          <target state="translated">Он определяет <ph id="ph1">`FileUtilities`</ph> класс, который включает внутреннего <ph id="ph2">`AppendDirectorySeparator`</ph> метод.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute is applied to the assembly that contains the <ph id="ph2">`FileUtilities`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> Атрибут сборки, содержащей <ph id="ph2">`FileUtilities`</ph> класса.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The attribute allows an assembly named <ph id="ph1">`Friend1`</ph> to access this internal member.</source>
          <target state="translated">Этот атрибут позволяет сборке с именем <ph id="ph1">`Friend1`</ph> для доступа к внутреннему элементу.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>If the following example is compiled into a strong-named assembly named <ph id="ph1">`Friend1`</ph>, the <ph id="ph2">`Example.Main`</ph> method in <ph id="ph3">`Friend1`</ph> can successfully call the <ph id="ph4">`FileUtilities.AppendDirectorySeparator`</ph> method, although the method is internal to the <ph id="ph5">`Assembly1`</ph> assembly.</source>
          <target state="translated">Если следующий пример компилируется в сборку строгим именем с именем <ph id="ph1">`Friend1`</ph>, <ph id="ph2">`Example.Main`</ph> метод в <ph id="ph3">`Friend1`</ph> успешно можно вызвать <ph id="ph4">`FileUtilities.AppendDirectorySeparator`</ph> метода, несмотря на то, что метод является внутренним для <ph id="ph5">`Assembly1`</ph> сборки.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Note that if you are compiling in C# from the command line, you must use the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</source>
          <target state="translated">Обратите внимание, что при компиляции из командной строки на языке C# необходимо использовать <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> переключатель компилятора для обеспечения имя дружественной сборки, когда компилятор выполняет привязку внешних ссылок.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">**</bpt>Unsigned assemblies<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Сборки без подписи<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute to make an <ph id="ph2">`internal`</ph> member of an unsigned assembly visible to another unsigned assembly.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> атрибута <ph id="ph2">`internal`</ph> членом неподписанную видимым в другую сборку без подписи сборки.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The attribute ensures that the <ph id="ph1">`internal`</ph> <ph id="ph2">`StringLib.IsFirstLetterUpperCase`</ph> method in an assembly named <ph id="ph3">`UtilityLib`</ph> is visible to the code in an assembly named <ph id="ph4">`Friend2`</ph>.</source>
          <target state="translated">Атрибут гарантирует, что <ph id="ph1">`internal`</ph> <ph id="ph2">`StringLib.IsFirstLetterUpperCase`</ph> метод в сборке с именем <ph id="ph3">`UtilityLib`</ph> отображается в коде в сборке с именем <ph id="ph4">`Friend2`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The following is the source code for UtilityLib.dll:</source>
          <target state="translated">Ниже приведен исходный код для UtilityLib.dll:</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The following example provides the source code for the <ph id="ph1">`Friend2`</ph> assembly.</source>
          <target state="translated">Ниже приведен исходный код для <ph id="ph1">`Friend2`</ph> сборки.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Note that if you are compiling in C# from the command line, you must use the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</source>
          <target state="translated">Обратите внимание, что при компиляции из командной строки на языке C# необходимо использовать <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> переключатель компилятора для обеспечения имя дружественной сборки, когда компилятор выполняет привязку внешних ссылок.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The name of a friend assembly.</source>
          <target state="translated">Имя дружественной сборки.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /&gt;</ph> class with the name of the specified friend assembly.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /&gt;</ph> с именем заданной дружественной сборки.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> constructor defines a friend assembly, which is an assembly that has access to the internal types and members of the current assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> Конструктор определяет дружественной сборки, — это сборка, имеет доступ к внутренним типам и членам текущей сборки.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Both the current assembly and the friend assembly must be unsigned, or both must be signed with a strong name.</source>
          <target state="translated">Текущая сборка и дружественной сборки должны быть без знака, или они должны быть подписаны строгим именем.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>(For more information about strong-named assemblies, see <bpt id="p1">[</bpt>Creating and Using Strong-Named Assemblies<ept id="p1">](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md)</ept>.) If both are unsigned, the <ph id="ph1">`assemblyName`</ph> argument consists of the name of the friend assembly, specified without a directory path or file extension.</source>
          <target state="translated">(Дополнительные сведения о сборках со строгими именами см. в разделе <bpt id="p1">[</bpt>Создание и использование сборок<ept id="p1">](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md)</ept>.) Если оба типа без знака, <ph id="ph1">`assemblyName`</ph> аргумент состоит из имени дружественной сборки указано без каталога путь или расширение.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>If both are signed, <ph id="ph1">`assemblyName`</ph> consists of the name of the friend assembly without its directory path or file name extension, along with its full public key (but not its public key token).</source>
          <target state="translated">Если оба имеют подписи <ph id="ph1">`assemblyName`</ph> состоит из имени дружественной сборки без его каталог путь или расширение имени файла, вместе с его полным открытым ключом (но не его токеном открытого ключа).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The other components of a strong name, such as those that provide culture, version, or processor architecture information, cannot be specified in the <ph id="ph1">`assemblyName`</ph> argument.</source>
          <target state="translated">Другие компоненты строгого имени, например те, которые предоставляют язык и региональные параметры, версии или сведения об архитектуре процессора, не может указываться в <ph id="ph1">`assemblyName`</ph> аргумент.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler option.</source>
          <target state="translated">Если вы используете компилятор C# для компиляции дружественной сборки, необходимо явно указать имя выходного файла (.exe или .dll) с помощью <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> параметр компилятора.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</source>
          <target state="translated">Это необходимо потому, что компилятор еще не создал имя сборки, формируемой во время привязки к внешним ссылкам.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler option is optional for the Visual Basic compiler, and the corresponding <bpt id="p2">**</bpt>-out<ept id="p2">**</ept> or <bpt id="p3">**</bpt>-o<ept id="p3">**</ept> compiler option should not be used when compiling friend assemblies with the F# compiler.</source>
          <target state="translated"><bpt id="p1">**</bpt>/Out<ept id="p1">**</ept> параметр компилятора является необязательным для компилятора Visual Basic и соответствующие <bpt id="p2">**</bpt>-out<ept id="p2">**</ept> или <bpt id="p3">**</bpt>-o<ept id="p3">**</ept> не следует использовать параметр компилятора, при компиляции friend сборки с помощью компилятора F #.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>You can use <bpt id="p1">[</bpt>Sn.exe (Strong Name Tool)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept> to retrieve the full public key from a strong-named key (.snk) file.</source>
          <target state="translated">Можно использовать <bpt id="p1">[</bpt>Sn.exe (средство строгих имен)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept> для получения полного открытого ключа из файла ключа со строгими именами (SNK).</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>To do this, you perform the following steps:</source>
          <target state="translated">Чтобы сделать это, выполните следующие действия:</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Extract the public key from the strong-named key file to a separate file:</source>
          <target state="translated">Извлечь открытый ключ из файла ключа со строгими именами в отдельный файл:</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">**</bpt>Sn -p<ept id="p1">**</ept>  <bpt id="p2">*</bpt>snk_file<ept id="p2">*</ept> <bpt id="p3">*</bpt>outfile<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sn -p<ept id="p1">**</ept>  <bpt id="p2">*</bpt>snk_file<ept id="p2">*</ept> <bpt id="p3">*</bpt>outfile<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Display the full public key to the console:</source>
          <target state="translated">Для отображения полного открытого ключа на консоль:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">**</bpt>Sn -tp<ept id="p1">**</ept>  <bpt id="p2">*</bpt>outfile<ept id="p2">*</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sn - tp<ept id="p1">**</ept><bpt id="p2">*</bpt>выходной_файл<ept id="p2">*</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Copy and paste the full public key value into your source code.</source>
          <target state="translated">Скопируйте и вставьте значение полного открытого ключа в исходном коде.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>For more information about how to use the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute, see the following topics:</source>
          <target state="translated">Дополнительные сведения об использовании <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> атрибут, см. в следующих разделах:</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>Friend Assemblies (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Дружественные сборки (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>Friend Assemblies<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Дружественные сборки<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">**</bpt>Signed assemblies<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Подписанные сборки<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute to make an <ph id="ph2">`internal`</ph> method named <ph id="ph3">`AppendDirectorySeparator`</ph> in a signed assembly visible to another signed assembly.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> атрибута <ph id="ph2">`internal`</ph> метод с именем <ph id="ph3">`AppendDirectorySeparator`</ph> в подписанной сборки, видимой в другую сборку со знаком.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>It defines a <ph id="ph1">`FileUtilities`</ph> class that includes an internal <ph id="ph2">`AppendDirectorySeparator`</ph> method.</source>
          <target state="translated">Он определяет <ph id="ph1">`FileUtilities`</ph> класс, который включает внутреннего <ph id="ph2">`AppendDirectorySeparator`</ph> метод.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute is applied to the assembly that contains the <ph id="ph2">`FileUtilities`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> Атрибут сборки, содержащей <ph id="ph2">`FileUtilities`</ph> класса.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The attribute allows an assembly named <ph id="ph1">`Friend1`</ph> to access this internal member.</source>
          <target state="translated">Этот атрибут позволяет сборке с именем <ph id="ph1">`Friend1`</ph> для доступа к внутреннему элементу.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>If the following example is compiled into a strong-named assembly named <ph id="ph1">`Friend1`</ph>, it can successfully call the <ph id="ph2">`FileUtilities.AppendDirectorySeparator`</ph> method, even though the method is internal to the <ph id="ph3">`Assembly1`</ph> assembly.</source>
          <target state="translated">Если следующий пример компилируется в сборку строгим именем с именем <ph id="ph1">`Friend1`</ph>, он может вызвать успешно <ph id="ph2">`FileUtilities.AppendDirectorySeparator`</ph> метод, даже если метод является внутренним для <ph id="ph3">`Assembly1`</ph> сборки.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Note that if you are compiling in C# from the command line, you must use the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</source>
          <target state="translated">Обратите внимание, что при компиляции из командной строки на языке C# необходимо использовать <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> переключатель компилятора для обеспечения имя дружественной сборки, когда компилятор выполняет привязку внешних ссылок.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute to make an <ph id="ph2">`internal`</ph> member of an unsigned assembly visible to another unsigned assembly.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> атрибута <ph id="ph2">`internal`</ph> членом неподписанную видимым в другую сборку без подписи сборки.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The attribute ensures that the <ph id="ph1">`internal`</ph> <ph id="ph2">`StringLib.IsFirstLetterUpperCase`</ph> method in an assembly named <ph id="ph3">`UtilityLib`</ph> is visible to the code in an assembly named <ph id="ph4">`Friend2`</ph>.</source>
          <target state="translated">Атрибут гарантирует, что <ph id="ph1">`internal`</ph> <ph id="ph2">`StringLib.IsFirstLetterUpperCase`</ph> метод в сборке с именем <ph id="ph3">`UtilityLib`</ph> отображается в коде в сборке с именем <ph id="ph4">`Friend2`</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The following is the source code for UtilityLib.dll:</source>
          <target state="translated">Ниже приведен исходный код для UtilityLib.dll:</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">**</bpt>Unsigned assemblies<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Сборки без подписи<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The following example provides the source code for the <ph id="ph1">`Friend2`</ph> assembly.</source>
          <target state="translated">Ниже приведен исходный код для <ph id="ph1">`Friend2`</ph> сборки.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Note that if you are compiling in C# from the command line, you must use the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</source>
          <target state="translated">Обратите внимание, что при компиляции из командной строки на языке C# необходимо использовать <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> переключатель компилятора для обеспечения имя дружественной сборки, когда компилятор выполняет привязку внешних ссылок.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible">
          <source>This property is not implemented.</source>
          <target state="translated">Это свойство не реализовано.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible">
          <source>This property does not return a value.</source>
          <target state="translated">Это свойство не возвращает значение.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
          <source>Gets the name of the friend assembly to which all types and type members that are marked with the <ph id="ph1">&lt;see langword="internal" /&gt;</ph> keyword are to be made visible.</source>
          <target state="translated">Получает имя дружественной сборки, для которой будут сделаны доступными все типы и члены типов, помеченные ключевым словом <ph id="ph1">&lt;see langword="internal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
          <source>A string that represents the name of the friend assembly.</source>
          <target state="translated">Строка, представляющая имя дружественной сборки.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
          <source>For more information about how to use the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute, see the following topics:</source>
          <target state="translated">Дополнительные сведения об использовании <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> атрибут, см. в следующих разделах:</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
          <source><bpt id="p1">[</bpt>Friend Assemblies (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Дружественные сборки (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
          <source><bpt id="p1">[</bpt>Friend Assemblies<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Дружественные сборки<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>