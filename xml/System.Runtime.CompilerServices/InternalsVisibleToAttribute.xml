<Type Name="InternalsVisibleToAttribute" FullName="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fa974547d214f0f2d15705349913a9698ec55f5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36541134" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class InternalsVisibleToAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InternalsVisibleToAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalsVisibleToAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalsVisibleToAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InternalsVisibleToAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f49c2-101">Задает, что типы, видимые обычно только в пределах текущей сборки, являются видимыми для заданной сборки.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f49c2-101">Specifies that types that are ordinarily visible only within the current assembly are visible to a specified assembly.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49c2-102">Как правило, типы и члены с `internal` области (в C#) и `friend` области (в Visual Basic) отображаются только в сборке, в котором они определены.</span><span class="sxs-lookup"><span data-stu-id="f49c2-102">Ordinarily, types and members with `internal` scope (in C#) and `friend` scope (in Visual Basic) are visible only in the assembly in which they are defined.</span></span> <span data-ttu-id="f49c2-103"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Атрибут делает их также видимым типам в указанной сборке, которая называется дружественной сборки.</span><span class="sxs-lookup"><span data-stu-id="f49c2-103">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute makes them also visible to the types in a specified assembly, which is known as a friend assembly.</span></span>  
  
 <span data-ttu-id="f49c2-104">Атрибут применяется на уровне сборки.</span><span class="sxs-lookup"><span data-stu-id="f49c2-104">The attribute is applied at the assembly level.</span></span> <span data-ttu-id="f49c2-105">Это означает, что он может быть включено в начале файла исходного кода или может быть включено в файл AssemblyInfo в проект Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="f49c2-105">This means that it can be included at the beginning of a source code file, or it can be included in the AssemblyInfo file in a Visual Studio project.</span></span> <span data-ttu-id="f49c2-106">Атрибут можно использовать для указания одного дружественной сборки, можно получить доступ к внутренним типам и членам текущей сборки.</span><span class="sxs-lookup"><span data-stu-id="f49c2-106">You can use the attribute to specify a single friend assembly that can access the internal types and members of the current assembly.</span></span> <span data-ttu-id="f49c2-107">Можно определить несколько дружественных сборок двумя способами.</span><span class="sxs-lookup"><span data-stu-id="f49c2-107">You can define multiple friend assemblies in two ways.</span></span> <span data-ttu-id="f49c2-108">Они отображаются как отдельные атрибуты уровня сборки, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="f49c2-108">They can appear as individual assembly-level attributes, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple1.cs#3)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple1.vb#3)]  
  
 <span data-ttu-id="f49c2-109">Они также могут отображаться с отдельными <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> теги, но один `assembly` ключевое слово, как приведенный ниже пример иллюстрирует.</span><span class="sxs-lookup"><span data-stu-id="f49c2-109">They can also appear with separate <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> tags but a single `assembly` keyword, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple2.cs#4)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple2.vb#4)]  
  
 <span data-ttu-id="f49c2-110">Дружественные сборки определяется <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> конструктор.</span><span class="sxs-lookup"><span data-stu-id="f49c2-110">The friend assembly is identified by the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor.</span></span> <span data-ttu-id="f49c2-111">Текущая сборка и дружественной сборки должны быть без знака или обе сборки должны быть подписаны строгим именем.</span><span class="sxs-lookup"><span data-stu-id="f49c2-111">Both the current assembly and the friend assembly must be unsigned, or both assemblies must be signed with a strong name.</span></span>  
  
 <span data-ttu-id="f49c2-112">Если обе сборки без знака, `assemblyName` аргумент состоит из имени дружественной сборки указано без расширения имени пути или файла каталога.</span><span class="sxs-lookup"><span data-stu-id="f49c2-112">If both assemblies are unsigned, the `assemblyName` argument consists of the name of the friend assembly, specified without a directory path or file name extension.</span></span>  
  
 <span data-ttu-id="f49c2-113">Если обе сборки должны быть подписаны строгим именем, аргумент <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> конструктор должен содержать имя сборки без его каталог путь или расширение имени файла, вместе с полного открытого ключа (а не его токеном открытого ключа).</span><span class="sxs-lookup"><span data-stu-id="f49c2-113">If both assemblies are signed with a strong name, the argument to the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor must consist of the name of the assembly without its directory path or file name extension, along with the full public key (and not its public key token).</span></span> <span data-ttu-id="f49c2-114">Для получения полного открытого ключа сборки со строгими именами см [Получение полного открытого ключа](#Key) далее в этой статье.</span><span class="sxs-lookup"><span data-stu-id="f49c2-114">To get the full public key of a strong-named assembly, see the [Getting the full public key](#Key) section later in this article.</span></span> <span data-ttu-id="f49c2-115">Дополнительные сведения об использовании <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> с сборки со строгими именами, в разделе <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> конструктор.</span><span class="sxs-lookup"><span data-stu-id="f49c2-115">For more information about using <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> with strong-named assemblies, see the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="f49c2-116">Не указывайте значения для <xref:System.Reflection.AssemblyName.CultureInfo%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, или <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> поля в качестве аргумента; компиляторы Visual Basic, C# и C++ помечено как ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="f49c2-116">Do not include values for the <xref:System.Reflection.AssemblyName.CultureInfo%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, or <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> field in the argument; the Visual Basic, C#, and C++ compilers treat this as a compiler error.</span></span> <span data-ttu-id="f49c2-117">Если вы используете компилятор, не обрабатывать как ошибки (такие как [ассемблера IL (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) и сборки со строгими именами, <xref:System.MethodAccessException> исключения при первом обращении к заданной дружественной сборки сборка, содержащая <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> атрибута.</span><span class="sxs-lookup"><span data-stu-id="f49c2-117">If you use a compiler that does not treat it as an error (such as the [IL Assembler (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) and the assemblies are strong-named, a <xref:System.MethodAccessException> exception is thrown the first time the specified friend assembly accesses the assembly that contains the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute.</span></span>  
  
 <span data-ttu-id="f49c2-118">Дополнительные сведения об использовании этого атрибута см. в следующих разделах:</span><span class="sxs-lookup"><span data-stu-id="f49c2-118">For more information about how to use this attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="f49c2-119">Дружественные сборки (C++)</span><span class="sxs-lookup"><span data-stu-id="f49c2-119">Friend Assemblies (C++)</span></span>](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="f49c2-120">Дружественные сборки</span><span class="sxs-lookup"><span data-stu-id="f49c2-120">Friend Assemblies</span></span>](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
<a name="Key"></a>   
## <a name="getting-the-full-public-key"></a><span data-ttu-id="f49c2-121">Получение полного открытого ключа</span><span class="sxs-lookup"><span data-stu-id="f49c2-121">Getting the full public key</span></span>  
 <span data-ttu-id="f49c2-122">Можно использовать [средство строгих имен (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md) для получения полного открытого ключа из файла ключа со строгими именами (SNK).</span><span class="sxs-lookup"><span data-stu-id="f49c2-122">You can use the [Strong Name Tool (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md) to retrieve the full public key from a strong-named key (.snk) file.</span></span> <span data-ttu-id="f49c2-123">Чтобы сделать это, выполните следующие действия:</span><span class="sxs-lookup"><span data-stu-id="f49c2-123">To do this, you perform the following steps:</span></span>  
  
1.  <span data-ttu-id="f49c2-124">Извлечь открытый ключ из файла ключа со строгими именами в отдельный файл:</span><span class="sxs-lookup"><span data-stu-id="f49c2-124">Extract the public key from the strong-named key file to a separate file:</span></span>  
  
     <span data-ttu-id="f49c2-125">**Sn -p***snk_file* *выходной_файл  *</span><span class="sxs-lookup"><span data-stu-id="f49c2-125">**Sn -p**  *snk_file* *outfile*</span></span>  
  
2.  <span data-ttu-id="f49c2-126">Для отображения полного открытого ключа на консоль:</span><span class="sxs-lookup"><span data-stu-id="f49c2-126">Display the full public key to the console:</span></span>  
  
     <span data-ttu-id="f49c2-127">**Sn - tp***выходной_файл  *</span><span class="sxs-lookup"><span data-stu-id="f49c2-127">**Sn -tp**  *outfile*</span></span>  
  
3.  <span data-ttu-id="f49c2-128">Скопируйте и вставьте значение полного открытого ключа в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="f49c2-128">Copy and paste the full public key value into your source code.</span></span>  
  
## <a name="compiling-the-friend-assembly-with-c"></a><span data-ttu-id="f49c2-129">Компиляция дружественной сборки с помощью C#</span><span class="sxs-lookup"><span data-stu-id="f49c2-129">Compiling the friend assembly with C#</span></span>  
 <span data-ttu-id="f49c2-130">Если вы используете компилятор C# для компиляции дружественной сборки, необходимо явно указать имя выходного файла (.exe или .dll) с помощью **/out** параметр компилятора.</span><span class="sxs-lookup"><span data-stu-id="f49c2-130">If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the **/out** compiler option.</span></span> <span data-ttu-id="f49c2-131">Это необходимо потому, что компилятор еще не создал имя сборки, формируемой во время привязки к внешним ссылкам.</span><span class="sxs-lookup"><span data-stu-id="f49c2-131">This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</span></span> <span data-ttu-id="f49c2-132">**/Out** параметр компилятора является необязательным для компилятора Visual Basic и соответствующие **-out** или **-o** не следует использовать параметр компилятора, при компиляции friend сборки с помощью компилятора F #.</span><span class="sxs-lookup"><span data-stu-id="f49c2-132">The **/out** compiler option is optional for the Visual Basic compiler, and the corresponding **-out** or **-o** compiler option should not be used when compiling friend assemblies with the F# compiler.</span></span>  
  
## <a name="compiling-the-friend-assembly-with-c"></a><span data-ttu-id="f49c2-133">Компиляция дружественной сборки в C++</span><span class="sxs-lookup"><span data-stu-id="f49c2-133">Compiling the friend assembly with C++</span></span>  
 <span data-ttu-id="f49c2-134">В C++, чтобы сделать внутренние элементы, включаемые <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> атрибут доступным для дружественной сборки, необходимо использовать `as_friend` атрибут в директиве C++.</span><span class="sxs-lookup"><span data-stu-id="f49c2-134">In C++, in order to make the internal members enabled by the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute accessible to a friend assembly, you must use the `as_friend` attribute in the C++  directive.</span></span> <span data-ttu-id="f49c2-135">Дополнительные сведения см. в разделе [дружественные сборки (C++)](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd).</span><span class="sxs-lookup"><span data-stu-id="f49c2-135">For more information, see [Friend Assemblies (C++)](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f49c2-136">**Подписанные сборки**</span><span class="sxs-lookup"><span data-stu-id="f49c2-136">**Signed assemblies**</span></span>  
  
 <span data-ttu-id="f49c2-137">В следующем примере используется <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> атрибута `internal` метод с именем `AppendDirectorySeparator` в подписанной сборки, видимой в другую сборку со знаком.</span><span class="sxs-lookup"><span data-stu-id="f49c2-137">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` method named `AppendDirectorySeparator` in a signed assembly visible to another signed assembly.</span></span> <span data-ttu-id="f49c2-138">Он определяет `FileUtilities` класс, который включает внутреннего `AppendDirectorySeparator` метод.</span><span class="sxs-lookup"><span data-stu-id="f49c2-138">It defines a `FileUtilities` class that includes an internal `AppendDirectorySeparator` method.</span></span> <span data-ttu-id="f49c2-139"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Атрибут сборки, содержащей `FileUtilities` класса.</span><span class="sxs-lookup"><span data-stu-id="f49c2-139">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute is applied to the assembly that contains the `FileUtilities` class.</span></span> <span data-ttu-id="f49c2-140">Этот атрибут позволяет сборке с именем `Friend1` для доступа к внутреннему элементу.</span><span class="sxs-lookup"><span data-stu-id="f49c2-140">The attribute allows an assembly named `Friend1` to access this internal member.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="f49c2-141">Если следующий пример компилируется в сборку строгим именем с именем `Friend1`, `Example.Main` метод в `Friend1` успешно можно вызвать `FileUtilities.AppendDirectorySeparator` метода, несмотря на то, что метод является внутренним для `Assembly1` сборки.</span><span class="sxs-lookup"><span data-stu-id="f49c2-141">If the following example is compiled into a strong-named assembly named `Friend1`, the `Example.Main` method in `Friend1` can successfully call the `FileUtilities.AppendDirectorySeparator` method, although the method is internal to the `Assembly1` assembly.</span></span> <span data-ttu-id="f49c2-142">Обратите внимание, что при компиляции из командной строки на языке C# необходимо использовать **/out** переключатель компилятора для обеспечения имя дружественной сборки, когда компилятор выполняет привязку внешних ссылок.</span><span class="sxs-lookup"><span data-stu-id="f49c2-142">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 <span data-ttu-id="f49c2-143">**Сборки без подписи**</span><span class="sxs-lookup"><span data-stu-id="f49c2-143">**Unsigned assemblies**</span></span>  
  
 <span data-ttu-id="f49c2-144">В следующем примере используется <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> атрибута `internal` членом неподписанную видимым в другую сборку без подписи сборки.</span><span class="sxs-lookup"><span data-stu-id="f49c2-144">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` member of an unsigned assembly visible to another unsigned assembly.</span></span> <span data-ttu-id="f49c2-145">Атрибут гарантирует, что `internal` `StringLib.IsFirstLetterUpperCase` метод в сборке с именем `UtilityLib` отображается в коде в сборке с именем `Friend2`.</span><span class="sxs-lookup"><span data-stu-id="f49c2-145">The attribute ensures that the `internal` `StringLib.IsFirstLetterUpperCase` method in an assembly named `UtilityLib` is visible to the code in an assembly named `Friend2`.</span></span>  <span data-ttu-id="f49c2-146">Ниже приведен исходный код для UtilityLib.dll:</span><span class="sxs-lookup"><span data-stu-id="f49c2-146">The following is the source code for UtilityLib.dll:</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 <span data-ttu-id="f49c2-147">Ниже приведен исходный код для `Friend2` сборки.</span><span class="sxs-lookup"><span data-stu-id="f49c2-147">The following example provides the source code for the `Friend2` assembly.</span></span> <span data-ttu-id="f49c2-148">Обратите внимание, что при компиляции из командной строки на языке C# необходимо использовать **/out** переключатель компилятора для обеспечения имя дружественной сборки, когда компилятор выполняет привязку внешних ссылок.</span><span class="sxs-lookup"><span data-stu-id="f49c2-148">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalsVisibleToAttribute (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalsVisibleToAttribute(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.InternalsVisibleToAttribute : string -&gt; System.Runtime.CompilerServices.InternalsVisibleToAttribute" Usage="new System.Runtime.CompilerServices.InternalsVisibleToAttribute assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="f49c2-149">Имя дружественной сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f49c2-149">The name of a friend assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f49c2-150">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> с именем заданной дружественной сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f49c2-150">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> class with the name of the specified friend assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49c2-151"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> Конструктор определяет дружественной сборки, — это сборка, имеет доступ к внутренним типам и членам текущей сборки.</span><span class="sxs-lookup"><span data-stu-id="f49c2-151">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor defines a friend assembly, which is an assembly that has access to the internal types and members of the current assembly.</span></span>  
  
 <span data-ttu-id="f49c2-152">Текущая сборка и дружественной сборки должны быть без знака, или они должны быть подписаны строгим именем.</span><span class="sxs-lookup"><span data-stu-id="f49c2-152">Both the current assembly and the friend assembly must be unsigned, or both must be signed with a strong name.</span></span> <span data-ttu-id="f49c2-153">(Дополнительные сведения о сборках со строгими именами см. в разделе [Создание и использование сборок](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).) Если оба типа без знака, `assemblyName` аргумент состоит из имени дружественной сборки указано без каталога путь или расширение.</span><span class="sxs-lookup"><span data-stu-id="f49c2-153">(For more information about strong-named assemblies, see [Creating and Using Strong-Named Assemblies](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).) If both are unsigned, the `assemblyName` argument consists of the name of the friend assembly, specified without a directory path or file extension.</span></span> <span data-ttu-id="f49c2-154">Если оба имеют подписи `assemblyName` состоит из имени дружественной сборки без его каталог путь или расширение имени файла, вместе с его полным открытым ключом (но не его токеном открытого ключа).</span><span class="sxs-lookup"><span data-stu-id="f49c2-154">If both are signed, `assemblyName` consists of the name of the friend assembly without its directory path or file name extension, along with its full public key (but not its public key token).</span></span> <span data-ttu-id="f49c2-155">Другие компоненты строгого имени, например те, которые предоставляют язык и региональные параметры, версии или сведения об архитектуре процессора, не может указываться в `assemblyName` аргумент.</span><span class="sxs-lookup"><span data-stu-id="f49c2-155">The other components of a strong name, such as those that provide culture, version, or processor architecture information, cannot be specified in the `assemblyName` argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f49c2-156">Если вы используете компилятор C# для компиляции дружественной сборки, необходимо явно указать имя выходного файла (.exe или .dll) с помощью **/out** параметр компилятора.</span><span class="sxs-lookup"><span data-stu-id="f49c2-156">If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the **/out** compiler option.</span></span> <span data-ttu-id="f49c2-157">Это необходимо потому, что компилятор еще не создал имя сборки, формируемой во время привязки к внешним ссылкам.</span><span class="sxs-lookup"><span data-stu-id="f49c2-157">This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</span></span> <span data-ttu-id="f49c2-158">**/Out** параметр компилятора является необязательным для компилятора Visual Basic и соответствующие **-out** или **-o** не следует использовать параметр компилятора, при компиляции friend сборки с помощью компилятора F #.</span><span class="sxs-lookup"><span data-stu-id="f49c2-158">The **/out** compiler option is optional for the Visual Basic compiler, and the corresponding **-out** or **-o** compiler option should not be used when compiling friend assemblies with the F# compiler.</span></span>  
  
 <span data-ttu-id="f49c2-159">Можно использовать [Sn.exe (средство строгих имен)](~/docs/framework/tools/sn-exe-strong-name-tool.md) для получения полного открытого ключа из файла ключа со строгими именами (SNK).</span><span class="sxs-lookup"><span data-stu-id="f49c2-159">You can use [Sn.exe (Strong Name Tool)](~/docs/framework/tools/sn-exe-strong-name-tool.md) to retrieve the full public key from a strong-named key (.snk) file.</span></span> <span data-ttu-id="f49c2-160">Чтобы сделать это, выполните следующие действия:</span><span class="sxs-lookup"><span data-stu-id="f49c2-160">To do this, you perform the following steps:</span></span>  
  
1.  <span data-ttu-id="f49c2-161">Извлечь открытый ключ из файла ключа со строгими именами в отдельный файл:</span><span class="sxs-lookup"><span data-stu-id="f49c2-161">Extract the public key from the strong-named key file to a separate file:</span></span>  
  
     <span data-ttu-id="f49c2-162">**Sn -p***snk_file* *выходной_файл  *</span><span class="sxs-lookup"><span data-stu-id="f49c2-162">**Sn -p**  *snk_file* *outfile*</span></span>  
  
2.  <span data-ttu-id="f49c2-163">Для отображения полного открытого ключа на консоль:</span><span class="sxs-lookup"><span data-stu-id="f49c2-163">Display the full public key to the console:</span></span>  
  
     <span data-ttu-id="f49c2-164">**Sn - tp***выходной_файл  *</span><span class="sxs-lookup"><span data-stu-id="f49c2-164">**Sn -tp**  *outfile*</span></span>  
  
3.  <span data-ttu-id="f49c2-165">Скопируйте и вставьте значение полного открытого ключа в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="f49c2-165">Copy and paste the full public key value into your source code.</span></span>  
  
 <span data-ttu-id="f49c2-166">Дополнительные сведения об использовании <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> атрибут, см. в следующих разделах:</span><span class="sxs-lookup"><span data-stu-id="f49c2-166">For more information about how to use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="f49c2-167">Дружественные сборки (C++)</span><span class="sxs-lookup"><span data-stu-id="f49c2-167">Friend Assemblies (C++)</span></span>](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="f49c2-168">Дружественные сборки</span><span class="sxs-lookup"><span data-stu-id="f49c2-168">Friend Assemblies</span></span>](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
   
  
## Examples  
 <span data-ttu-id="f49c2-169">**Подписанные сборки**</span><span class="sxs-lookup"><span data-stu-id="f49c2-169">**Signed assemblies**</span></span>  
  
 <span data-ttu-id="f49c2-170">В следующем примере используется <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> атрибута `internal` метод с именем `AppendDirectorySeparator` в подписанной сборки, видимой в другую сборку со знаком.</span><span class="sxs-lookup"><span data-stu-id="f49c2-170">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` method named `AppendDirectorySeparator` in a signed assembly visible to another signed assembly.</span></span> <span data-ttu-id="f49c2-171">Он определяет `FileUtilities` класс, который включает внутреннего `AppendDirectorySeparator` метод.</span><span class="sxs-lookup"><span data-stu-id="f49c2-171">It defines a `FileUtilities` class that includes an internal `AppendDirectorySeparator` method.</span></span> <span data-ttu-id="f49c2-172"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Атрибут сборки, содержащей `FileUtilities` класса.</span><span class="sxs-lookup"><span data-stu-id="f49c2-172">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute is applied to the assembly that contains the `FileUtilities` class.</span></span> <span data-ttu-id="f49c2-173">Этот атрибут позволяет сборке с именем `Friend1` для доступа к внутреннему элементу.</span><span class="sxs-lookup"><span data-stu-id="f49c2-173">The attribute allows an assembly named `Friend1` to access this internal member.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="f49c2-174">Если следующий пример компилируется в сборку строгим именем с именем `Friend1`, он может вызвать успешно `FileUtilities.AppendDirectorySeparator` метод, даже если метод является внутренним для `Assembly1` сборки.</span><span class="sxs-lookup"><span data-stu-id="f49c2-174">If the following example is compiled into a strong-named assembly named `Friend1`, it can successfully call the `FileUtilities.AppendDirectorySeparator` method, even though the method is internal to the `Assembly1` assembly.</span></span> <span data-ttu-id="f49c2-175">Обратите внимание, что при компиляции из командной строки на языке C# необходимо использовать **/out** переключатель компилятора для обеспечения имя дружественной сборки, когда компилятор выполняет привязку внешних ссылок.</span><span class="sxs-lookup"><span data-stu-id="f49c2-175">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 <span data-ttu-id="f49c2-176">В следующем примере используется <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> атрибута `internal` членом неподписанную видимым в другую сборку без подписи сборки.</span><span class="sxs-lookup"><span data-stu-id="f49c2-176">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` member of an unsigned assembly visible to another unsigned assembly.</span></span> <span data-ttu-id="f49c2-177">Атрибут гарантирует, что `internal` `StringLib.IsFirstLetterUpperCase` метод в сборке с именем `UtilityLib` отображается в коде в сборке с именем `Friend2`.</span><span class="sxs-lookup"><span data-stu-id="f49c2-177">The attribute ensures that the `internal` `StringLib.IsFirstLetterUpperCase` method in an assembly named `UtilityLib` is visible to the code in an assembly named `Friend2`.</span></span>  <span data-ttu-id="f49c2-178">Ниже приведен исходный код для UtilityLib.dll:</span><span class="sxs-lookup"><span data-stu-id="f49c2-178">The following is the source code for UtilityLib.dll:</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 <span data-ttu-id="f49c2-179">**Сборки без подписи**</span><span class="sxs-lookup"><span data-stu-id="f49c2-179">**Unsigned assemblies**</span></span>  
  
 <span data-ttu-id="f49c2-180">Ниже приведен исходный код для `Friend2` сборки.</span><span class="sxs-lookup"><span data-stu-id="f49c2-180">The following example provides the source code for the `Friend2` assembly.</span></span> <span data-ttu-id="f49c2-181">Обратите внимание, что при компиляции из командной строки на языке C# необходимо использовать **/out** переключатель компилятора для обеспечения имя дружественной сборки, когда компилятор выполняет привязку внешних ссылок.</span><span class="sxs-lookup"><span data-stu-id="f49c2-181">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllInternalsVisible">
      <MemberSignature Language="C#" Value="public bool AllInternalsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllInternalsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property AllInternalsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllInternalsVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllInternalsVisible : bool with get, set" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f49c2-182">Это свойство не реализовано.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f49c2-182">This property is not implemented.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f49c2-183">Это свойство не возвращает значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f49c2-183">This property does not return a value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f49c2-184">Получает имя дружественной сборки, для которой будут сделаны доступными все типы и члены типов, помеченные ключевым словом <see langword="internal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f49c2-184">Gets the name of the friend assembly to which all types and type members that are marked with the <see langword="internal" /> keyword are to be made visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f49c2-185">Строка, представляющая имя дружественной сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f49c2-185">A string that represents the name of the friend assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49c2-186">Дополнительные сведения об использовании <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> атрибут, см. в следующих разделах:</span><span class="sxs-lookup"><span data-stu-id="f49c2-186">For more information about how to use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="f49c2-187">Дружественные сборки (C++)</span><span class="sxs-lookup"><span data-stu-id="f49c2-187">Friend Assemblies (C++)</span></span>](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="f49c2-188">Дружественные сборки</span><span class="sxs-lookup"><span data-stu-id="f49c2-188">Friend Assemblies</span></span>](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>