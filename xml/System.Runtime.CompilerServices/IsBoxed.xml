<Type Name="IsBoxed" FullName="System.Runtime.CompilerServices.IsBoxed">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="470527176f784c70eb2fd8524e483d2cb7966b3e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30475768" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsBoxed" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsBoxed extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsBoxed" />
  <TypeSignature Language="VB.NET" Value="Public Class IsBoxed" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsBoxed abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Указывает, что измененный ссылочный тип является упакованным типом значения. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Компилятор Microsoft C++ поддерживает упакованные типы значений на языке.  Сведения о типах упакованное значение включается в метаданные в виде пользовательского модификатора, где модификатор декорирует ссылку на упаковываемый тип значения.  
  
 Компиляторы выдают в метаданные, чтобы изменить способ, которым компилятор just-in-time (JIT) обрабатывает значения, когда поведение по умолчанию не подходит пользовательские модификаторы.  Когда JIT-компилятор встречает пользовательский модификатор, он обрабатывает значение так, как указывает этот модификатор.  Компиляторы могут применять пользовательские модификаторы к методам, параметрам и возвращаемые значения.  JIT-компилятор должен учитывать обязательные модификаторы, но может игнорировать необязательные.  
  
 Существует возможность создавать пользовательские модификаторы в метаданные, используя один из следующих способов:  
  
-   С помощью методов в <xref:System.Reflection.Emit.TypeBuilder> класса, такие как <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, и <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Создания файла инструкций промежуточного языка MSIL Microsoft, которое содержит вызовы к `modopt` и `modreq`и сборка файла с [Ilasm.exe (ассемблер IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  
  
-   Использование неуправляемого API-интерфейса отражения.  
  
   
  
## Examples  
 Ниже приведен пример, как можно опускать <xref:System.Runtime.CompilerServices.IsBoxed> объект в сборке с помощью отражения.  
  
 [!code-cpp[Runtime.CompilerServices.IsBoxed#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsBoxed/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>