<Type Name="IsUdtReturn" FullName="System.Runtime.CompilerServices.IsUdtReturn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f0ed8c7fe932669d0f5ed16b5f3bbbac146ec5f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37471975" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsUdtReturn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsUdtReturn extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsUdtReturn" />
  <TypeSignature Language="VB.NET" Value="Public Class IsUdtReturn" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsUdtReturn abstract sealed" />
  <TypeSignature Language="F#" Value="type IsUdtReturn = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3155d-101">Указывает, что возвращаемый тип является пользовательским.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3155d-101">Indicates that a return type is a user-defined type.</span>
      </span>
      <span data-ttu-id="3155d-102">Этот класс не наследуется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3155d-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3155d-103"><xref:System.Runtime.CompilerServices.IsUdtReturn> Модификатор, используемую для обозначения возвращаемых типов методов, которые имеют собственную семантику объекта C++ возвращаемое компилятором C++.</span><span class="sxs-lookup"><span data-stu-id="3155d-103">The <xref:System.Runtime.CompilerServices.IsUdtReturn> modifier is used by the C++ compiler to mark return types of methods that have native C++ object return semantics.</span></span>  <span data-ttu-id="3155d-104">Управляемый отладчик распознает этот модификатор, чтобы правильно определить, что используется собственное соглашение о вызове.</span><span class="sxs-lookup"><span data-stu-id="3155d-104">The managed debugger recognizes this modifier to correctly determine that the native calling convention is in use.</span></span>  
  
 <span data-ttu-id="3155d-105">Компиляторы выдают пользовательские модификаторы, в метаданных, чтобы изменить способ, которым компилятор just-in-time (JIT) обрабатывает значения, когда поведение по умолчанию не подходит.</span><span class="sxs-lookup"><span data-stu-id="3155d-105">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="3155d-106">Когда JIT-компилятор встречает пользовательский модификатор, он обрабатывает значение так, как указывает этот модификатор.</span><span class="sxs-lookup"><span data-stu-id="3155d-106">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="3155d-107">Компиляторы могут применять пользовательские модификаторы для методов, параметров и возвращаемых значений.</span><span class="sxs-lookup"><span data-stu-id="3155d-107">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="3155d-108">JIT-компилятор должен отвечать на обязательные модификаторы, но могут игнорировать необязательные модификаторы.</span><span class="sxs-lookup"><span data-stu-id="3155d-108">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="3155d-109">Допускается выдача пользовательских модификаторов в метаданные, с помощью одного из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="3155d-109">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="3155d-110">С помощью методов в <xref:System.Reflection.Emit.TypeBuilder> класса, такие как <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, и <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="3155d-110">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="3155d-111">Создание файла инструкций промежуточного языка MSIL Майкрософт, которое содержит вызовы к `modopt` и `modreq`и сборка файла с [Ilasm.exe (ассемблер IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="3155d-111">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="3155d-112">С помощью API неуправляемого отражения.</span><span class="sxs-lookup"><span data-stu-id="3155d-112">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3155d-113">В следующем примере кода создает сборку с помощью классов в <xref:System.Reflection.Emit> пространства имен и выдает <xref:System.Runtime.CompilerServices.IsUdtReturn> модификатор к этой сборке.</span><span class="sxs-lookup"><span data-stu-id="3155d-113">The following code example creates an assembly using classes in the <xref:System.Reflection.Emit> namespace and emits the <xref:System.Runtime.CompilerServices.IsUdtReturn> modifier into that assembly.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsUdtReturn#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsUdtReturn/CPP/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>