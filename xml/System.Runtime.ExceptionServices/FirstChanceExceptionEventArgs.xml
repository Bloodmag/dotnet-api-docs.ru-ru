<Type Name="FirstChanceExceptionEventArgs" FullName="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2030e55041a262d9e02246639317d0ba84021bfc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36635495" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FirstChanceExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FirstChanceExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FirstChanceExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FirstChanceExceptionEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FirstChanceExceptionEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для события уведомления, возникающего при первом появлении управляемого исключения (прежде чем среда CLR начнет поиск обработчиков событий).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс предоставляет обработчик исключений для <xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType> событие с доступ к исключению.  
  
   
  
## Examples  
 В следующем примере создается набор доменов приложений с именем `Child_0` через `Child_3`, с `Worker` объекта в каждом домене приложения. Каждый `Worker` объект имеет ссылку на `Worker` объекта в следующий домен приложения, за исключением `Worker` в последнем домене приложения. <xref:System.AppDomain.FirstChanceException> Событие обрабатывается во всех доменах приложений, за исключением `Child_1`.  
  
 При создании доменов приложения домен приложения по умолчанию вызывает `TestException` метод для первого дочернего домена приложения. Каждый `Worker` вызывает `TestException` метод для следующей до последнего `Worker` исключение обрабатывается или нет. Таким образом, что текущий поток проходит через все домены приложений, и `TestException` добавляется в стек в каждом домене приложения.  
  
 Когда последний `Worker` объект обрабатывает исключение, <xref:System.AppDomain.FirstChanceException> события только в последнем домене приложения. Домены приложений никогда не получить возможность обработки исключения, поэтому событие не происходит.  
  
 Когда последний `Worker` объекта не обрабатывает исключение, <xref:System.AppDomain.FirstChanceException> события в каждом домене приложения с помощью обработчика событий. После завершения каждого обработчика события стека продолжается для очистки, пока не будет перехвачено исключение домена приложения по умолчанию.  
  
> [!NOTE]
>  Чтобы видеть, как отображение стека увеличивается по мере ближе вызывается событие и чем ближе к домена приложения по умолчанию, измените `e.Exception.Message` для `e.Exception` в `FirstChanceHandler` обработчики событий. Обратите внимание, что при `TestException` вызывается через границы домена приложения, он отображается дважды: один раз для прокси-сервера и один раз для заглушки.  
  
 [!code-csharp[System.AppDomain.FirstChanceException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/cs/example.cs#1)]
 [!code-vb[System.AppDomain.FirstChanceException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.FirstChanceException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FirstChanceExceptionEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FirstChanceExceptionEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs : Exception -&gt; System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" Usage="new System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">Исключение, только что выданное управляемым кодом, которое будет анализироваться событием <see cref="E:System.AppDomain.UnhandledException" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /> с указанным исключением.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный конструктор вызывается средой CLR, не с помощью кода приложения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Объект управляемого исключения, соответствующее исключению, создаваемому в управляемом коде.</summary>
        <value>Недавно выданное исключение.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод, обрабатывающий <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> событий можно проверить исключение и выполнить соответствующие данные в журнал или другие службы notification services.  
  
 Пример кода см. в разделе <xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>