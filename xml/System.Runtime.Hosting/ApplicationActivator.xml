<Type Name="ApplicationActivator" FullName="System.Runtime.Hosting.ApplicationActivator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="934b873ae18e3b32ece252f7089ad9810ee3696c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36539622" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ApplicationActivator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationActivator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Hosting.ApplicationActivator" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationActivator" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationActivator" />
  <TypeSignature Language="F#" Value="type ApplicationActivator = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет базовый класс для активации сборок на основе манифестов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имеется один экземпляр указанного <xref:System.Runtime.Hosting.ApplicationActivator> класса в каждом <xref:System.AppDomain> какие все активацию направляются вызовы. <xref:System.AppDomainManager> Для текущего <xref:System.AppDomain> может предоставить свои собственные пользовательские <xref:System.Runtime.Hosting.ApplicationActivator> для этой цели. Если в настраиваемом <xref:System.Runtime.Hosting.ApplicationActivator> не указано, экземпляр по умолчанию <xref:System.Runtime.Hosting.ApplicationActivator> создается.  
  
 Следующие шаги описывают поведение по умолчанию <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> реализации метода:  
  
1.  Проверяет, если <xref:System.ActivationContext> надстройки для активации совпадений <xref:System.ActivationContext> текущего домена; в противном случае переходит к шагу 2. В противном случае выполняет сборку и возвращает результат, заключенное в дескриптор объекта.  
  
2.  Активирует надстройку в новом <xref:System.AppDomain>. Следующие действия выполняются для инициализации нового <xref:System.AppDomain> с помощью <xref:System.Runtime.Hosting.ActivationArguments> для надстройки.  
  
    1.  Создает новый <xref:System.AppDomainSetup> с помощью <xref:System.Runtime.Hosting.ActivationArguments> объект, содержащий контекст активации для надстройки.  
  
    2.  Вызовы <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> метод для создания нового домена с помощью <xref:System.AppDomainSetup> объекта.  
  
    3.  <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> Вызовы метода <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=nameWithType> метод получения <xref:System.Security.Policy.ApplicationTrust> объект для надстройки. Если <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> возвращает `true`, надстройка выполняется. В противном случае <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> вызывает <xref:System.Security.Policy.PolicyException> , указывающее, что не удалось получить разрешение на выполнение.  
  
    4.  Если надстройка является доверенным для выполнения, а затем новый <xref:System.AppDomain> создается и настраивается для <xref:System.ActivationContext> надстройки, и надстройка загружается и выполняется.  
  
    5.  Возвращается результат активации надстройки, заключенное в дескриптор объекта.  
  
 Пользовательский активатор может использоваться для активации надстройки уровня приложения для определенного набора обстоятельств. Например, пользовательский активатор может найти существующий <xref:System.AppDomain> для активации этой надстройки вместо создания нового домена каждый раз.  
  
 Следующие шаги описывают поведение пользовательской <xref:System.Runtime.Hosting.ApplicationActivator> , активирует надстройки в существующем <xref:System.AppDomain>:  
  
1.  Пользовательским активатором выполняется поиск домена с таким же <xref:System.ActivationContext> как надстройка активируется.  
  
2.  Если <xref:System.ActivationContext> никогда не наблюдалась перед в процесс, создает новый пользовательский активатор <xref:System.AppDomain> для этого <xref:System.ActivationContext> путем вызова <xref:System.AppDomain.CreateDomain%2A> непосредственно или делегирование данное действие <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> в базовом классе.  
  
3.  При наличии существующего домена с тем же <xref:System.ActivationContext>, а затем можно делегировать активатор <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> вызова метода <xref:System.Runtime.Hosting.ApplicationActivator> в целевом домене. Обратите внимание, что эта возможность вызова между доменами <xref:System.Runtime.Hosting.ApplicationActivator> , находящийся в целевом <xref:System.AppDomain>.  
  
   
  
## Examples  
 В следующем примере кода показано, как получить <xref:System.Runtime.Hosting.ApplicationActivator> из текущего объекта <xref:System.AppDomain.DomainManager%2A> для манифеста приложения.  
  
 [!code-csharp[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/cs/program.cs#1)]
 [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationActivator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationActivator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Hosting.ApplicationActivator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает экземпляр приложения, которое необходимо активировать, используя контекст активации, определяющий приложение.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle&#xA;override this.CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle" Usage="applicationActivator.CreateInstance activationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationContext">Контекст активации <see cref="T:System.ActivationContext" />, определяющий активируемое приложение.</param>
        <summary>Создает экземпляр приложения, которое должно быть активировано, используя указанный контекст активации.</summary>
        <returns>Дескриптор <see cref="T:System.Runtime.Remoting.ObjectHandle" />, являющийся оболочкой для возвращаемого при выполнении приложения значения. Необходимо развернуть возвращенное значение, чтобы получить доступ к истинному объекту.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предназначен для активации на основе манифестов приложений.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="activationContext" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext, string[] activationCustomData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationCustomData);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle&#xA;override this.CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="applicationActivator.CreateInstance (activationContext, activationCustomData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationCustomData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext">Контекст активации <see cref="T:System.ActivationContext" />, определяющий активируемое приложение.</param>
        <param name="activationCustomData">Пользовательские данные активации.</param>
        <summary>Создает экземпляр приложения, которое необходимо активировать, используя заданный контекст активации и пользовательские данные активации.</summary>
        <returns>Дескриптор <see cref="T:System.Runtime.Remoting.ObjectHandle" />, являющийся оболочкой для возвращаемого при выполнении приложения значения. Необходимо развернуть возвращенное значение, чтобы получить доступ к истинному объекту.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предназначен для активации на основе манифестов приложений. Данные активации состоят из сведений, таких как часть строки запроса URL-адреса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="activationContext" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHelper">
      <MemberSignature Language="C#" Value="protected static System.Runtime.Remoting.ObjectHandle CreateInstanceHelper (AppDomainSetup adSetup);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceHelper(class System.AppDomainSetup adSetup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateInstanceHelper (adSetup As AppDomainSetup) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceHelper(AppDomainSetup ^ adSetup);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceHelper : AppDomainSetup -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper adSetup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adSetup" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="adSetup">Объект <see cref="T:System.AppDomainSetup" />, свойство <see cref="P:System.AppDomainSetup.ActivationArguments" /> которого определяет активируемое приложение.</param>
        <summary>Создает экземпляр приложения с помощью указанного объекта <see cref="T:System.AppDomainSetup" />.</summary>
        <returns>Дескриптор <see cref="T:System.Runtime.Remoting.ObjectHandle" />, являющийся оболочкой для возвращаемого при выполнении приложения значения. Необходимо развернуть возвращенное значение, чтобы получить доступ к истинному объекту.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предназначен для активации на основе манифестов приложений.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Свойство <see cref="P:System.AppDomainSetup.ActivationArguments" /> параметра <paramref name="adSetup" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.Security.Policy.PolicyException">Выполнение экземпляра приложения не удалось, поскольку настройки политики в текущем домене приложения не разрешают выполнение приложения.</exception>
      </Docs>
    </Member>
  </Members>
</Type>