<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICustomMarshaler.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac596e612f036008e38d852a9b63135ce9093ba596a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96e612f036008e38d852a9b63135ce9093ba596a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Provides custom wrappers for handling method calls.</source>
          <target state="translated">Предоставляет настраиваемые оболочки, обрабатывающие вызовы методов.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>A marshaler provides a bridge between the functionality of old and new interfaces.</source>
          <target state="translated">Упаковщик обеспечивает связь между функциональными возможностями старых и новых интерфейсов.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Custom marshaling provides the following benefits:</source>
          <target state="translated">Настраиваемый маршалинг обеспечивает следующие преимущества:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>It enables client applications that were designed to work with an old interface to also work with servers that implement a new interface.</source>
          <target state="translated">Он позволяет клиентским приложениям, которые были разработаны для работы со старым интерфейсом для работы с серверами, реализующими новый интерфейс.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>It enables client applications built to work with a new interface to work with servers that implement an old interface.</source>
          <target state="translated">Он позволяет клиентским приложениям, построенным для работы с новым интерфейсом для работы с серверами, реализующими старый интерфейс.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>If you have an interface that introduces different marshaling behavior or that is exposed to the Component Object Model (COM) in a different way, you can design a custom marshaler instead of using the interop marshaler.</source>
          <target state="translated">Если имеется интерфейс, имеющий другие характеристики маршалинга или модели объектов компонентов (COM), предоставляется другим способом, можно разработать особого упаковщика вместо того чтобы использовать упаковщик взаимодействия.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>By using a custom marshaler, you can minimize the distinction between new .NET Framework components and existing COM components.</source>
          <target state="translated">С помощью особого упаковщика, можно свести к минимуму различие между новыми компонентами платформы .NET Framework и существующими COM-компонентами.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>For example, suppose that you are developing a managed interface called <ph id="ph1">`INew`</ph>.</source>
          <target state="translated">Например, предположим, что разрабатывается управляемый интерфейс с именем <ph id="ph1">`INew`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>When this interface is exposed to COM through a standard COM callable wrapper (CCW), it has the same methods as the managed interface and uses the marshaling rules built into the interop marshaler.</source>
          <target state="translated">Если этот интерфейс предоставляется модели COM через стандартную вызываемую оболочку COM (CCW), он имеет те же методы, что управляемый интерфейс и использует правила маршалинга, встроенные в упаковщик взаимодействия.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Now suppose that a well-known COM interface called <ph id="ph1">`IOld`</ph> already provides the same functionality as the <ph id="ph2">`INew`</ph> interface.</source>
          <target state="translated">Теперь предположим, что известный интерфейс COM с именем <ph id="ph1">`IOld`</ph> уже предоставляет те же функциональные возможности, как <ph id="ph2">`INew`</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>By designing a custom marshaler, you can provide an unmanaged implementation of <ph id="ph1">`IOld`</ph> that simply delegates the calls to the managed implementation of the <ph id="ph2">`INew`</ph> interface.</source>
          <target state="translated">При разработке пользовательского упаковщика, можно предоставить неуправляемую реализацию <ph id="ph1">`IOld`</ph> , просто делегировать вызовы управляемой реализации <ph id="ph2">`INew`</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Therefore, the custom marshaler acts as a bridge between the managed and unmanaged interfaces.</source>
          <target state="translated">Таким образом особого упаковщика выступает в качестве моста между управляемым и неуправляемым интерфейсами.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Custom marshalers are not invoked when calling from managed code to unmanaged code on a dispatch-only interface.</source>
          <target state="translated">Особые упаковщики не вызываются, когда вызов из управляемого кода в неуправляемый код для интерфейса диспетчеризации.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Defining the Marshaling Type</source>
          <target state="translated">Определение типа маршалинга</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Before you can build a custom marshaler, you must define the managed and unmanaged interfaces that will be marshaled.</source>
          <target state="translated">Перед созданием пользовательского упаковщика необходимо определить управляемые и неуправляемые интерфейсы, которые будут маршалированы.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>These interfaces commonly perform the same function but are exposed differently to managed and unmanaged objects.</source>
          <target state="translated">Эти интерфейсы обычно выполняют ту же функцию, но по-разному предоставляются для управляемых и неуправляемых объектов.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>A managed compiler produces a managed interface from metadata, and the resulting interface looks like any other managed interface.</source>
          <target state="translated">Управляемый компилятор создает управляемый интерфейс на основе метаданных и результирующие интерфейс будет выглядеть управляемого интерфейса.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The following example shows a typical interface.</source>
          <target state="translated">В примере показан типичный интерфейс.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You define the unmanaged type in Interface Definition Language (IDL) and compile it with the Microsoft Interface Definition Language (MIDL) compiler.</source>
          <target state="translated">Определяет неуправляемый тип в языке определения интерфейса (IDL) и скомпилируйте его с компилятор Microsoft интерфейса определения языка MIDL.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You define the interface within a library statement and assign it an interface ID with the universal unique identifier (UUID) attribute, as the following example demonstrates.</source>
          <target state="translated">Интерфейс определяется в инструкции library и назначьте его идентификатор интерфейса с атрибутом универсальный уникальный идентификатор (UUID), как показано в следующем примере.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The MIDL compiler produces several output files.</source>
          <target state="translated">Компилятор MIDL создает несколько выходных файлов.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>If the interface is defined in Old.idl, the output file Old_i.c defines a <ph id="ph1">`const`</ph> variable with the interface identifier (IID) of the interface, as the following example demonstrates.</source>
          <target state="translated">Если интерфейс определен в файле Old.idl, выходной файл, определяет Old_i.c <ph id="ph1">`const`</ph> переменную идентификатор интерфейса (IID) интерфейса, как показано в следующем примере.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The Old.h file is also produced by MIDL.</source>
          <target state="translated">Также создается файл Old.h MIDL.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>It contains a C++ definition of the interface that can be included in your C++ source code.</source>
          <target state="translated">Он содержит определение на языке C++ для интерфейса, который может быть включено в исходный код C++.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Implementing the ICustomMarshaler Interface</source>
          <target state="translated">Реализация интерфейса ICustomMarshaler</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Your custom marshaler must implement the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface to provide the appropriate wrappers to the runtime.</source>
          <target state="translated">Необходимо реализовать пользовательский маршалер <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> интерфейс, чтобы предоставить соответствующие оболочки среды выполнения.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The following C# code displays the base interface that must be implemented by all custom marshalers.</source>
          <target state="translated">Следующий код C# отображает базовый интерфейс, который должны реализовывать все Особые упаковщики.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface includes methods that provide conversion support, cleanup support, and information about the data to be marshaled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> Интерфейс содержит методы, предоставляющие поддержку преобразования, поддержку очистки и сведения о данных, который необходимо маршалировать.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Type of operation</source>
          <target state="translated">Тип операции</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>ICustomMarshaler method</source>
          <target state="translated">Метод ICustomMarshaler</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Conversion (from native to managed code)</source>
          <target state="translated">Преобразование (из машинного и управляемого кода)</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a pointer to native data into a managed object.</source>
          <target state="translated">Маршалирует указатель на машинные данные в управляемый объект.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</source>
          <target state="translated">Этот метод возвращает пользовательскую вызываемую оболочку (времени выполнения RCW), можно маршалировать в неуправляемый интерфейс, передаваемый в качестве аргумента.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom RCW for that type.</source>
          <target state="translated">Маршалер должен вернуть экземпляр пользовательской вызываемой оболочки времени Выполнения для данного типа.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Conversion (from managed to native code)</source>
          <target state="translated">Преобразование (из управляемого кода)</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a managed object into a pointer to native data.</source>
          <target state="translated">Выполняет маршалинг управляемого объекта в указатель на собственных данных.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</source>
          <target state="translated">Этот метод возвращает пользовательской вызываемой оболочки COM (CCW), способную маршалировать управляемый интерфейс, который передается в качестве аргумента.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom CCW for that type.</source>
          <target state="translated">Упаковщик должен вернуть экземпляр пользовательской вызываемой оболочки COM для данного типа.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Cleanup (of native code)</source>
          <target state="translated">Очистка (машинного кода)</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the native data (the CCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> method.</source>
          <target state="translated">Включает упаковщик для очистки данных в собственном (CCW), возвращаемый <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Cleanup (of managed code)</source>
          <target state="translated">Очистка (управляемый код)</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the managed data (the RCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> method.</source>
          <target state="translated">Включает упаковщик очистить управляемые данные (времени выполнения RCW), возвращаемый <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Information (about native code)</source>
          <target state="translated">Сведения (машинный код)</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Returns the size of the unmanaged data to be marshaled.</source>
          <target state="translated">Возвращает размер неуправляемого данные для маршалинга.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Conversion</source>
          <target state="translated">Преобразование</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a pointer to native data into a managed object.</source>
          <target state="translated">Маршалирует указатель на машинные данные в управляемый объект.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</source>
          <target state="translated">Этот метод возвращает пользовательскую вызываемую оболочку (времени выполнения RCW), можно маршалировать в неуправляемый интерфейс, передаваемый в качестве аргумента.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom RCW for that type.</source>
          <target state="translated">Маршалер должен вернуть экземпляр пользовательской вызываемой оболочки времени Выполнения для данного типа.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a managed object into a pointer to native data.</source>
          <target state="translated">Выполняет маршалинг управляемого объекта в указатель на собственных данных.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</source>
          <target state="translated">Этот метод возвращает пользовательской вызываемой оболочки COM (CCW), способную маршалировать управляемый интерфейс, который передается в качестве аргумента.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom CCW for that type.</source>
          <target state="translated">Упаковщик должен вернуть экземпляр пользовательской вызываемой оболочки COM для данного типа.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Cleanup</source>
          <target state="translated">Очистка</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the native data (the CCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> method.</source>
          <target state="translated">Включает упаковщик для очистки данных в собственном (CCW), возвращаемый <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the managed data (the RCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> method.</source>
          <target state="translated">Включает упаковщик очистить управляемые данные (времени выполнения RCW), возвращаемый <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Size Information</source>
          <target state="translated">Сведения о размере</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Returns the size of the unmanaged data to be marshaled.</source>
          <target state="translated">Возвращает размер неуправляемого данные для маршалинга.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Implementing the GetInstance Method</source>
          <target state="translated">Метод GetInstance реализации</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In addition to implementing the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface, custom marshalers must implement a <ph id="ph2">`static`</ph> method called <ph id="ph3">`GetInstance`</ph> that accepts a <ph id="ph4">&lt;xref:System.String&gt;</ph> as a parameter and has a return type of <ph id="ph5">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph>.</source>
          <target state="translated">Помимо реализации <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> интерфейса, необходимо реализовать Особые упаковщики <ph id="ph2">`static`</ph> метод с именем <ph id="ph3">`GetInstance`</ph> , принимающий <ph id="ph4">&lt;xref:System.String&gt;</ph> как параметр с типом возвращаемого значения <ph id="ph5">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This <ph id="ph1">`static`</ph> method is called by the common language runtime's COM interop layer to instantiate an instance of the custom marshaler.</source>
          <target state="translated">Это <ph id="ph1">`static`</ph> метод вызывается методом уровень COM-взаимодействия среды CLR для создания экземпляра пользовательского упаковщика.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The string that is passed to <ph id="ph1">`GetInstance`</ph> is a cookie that the method can use to customize the returned custom marshaler.</source>
          <target state="translated">Строка, передаваемая в <ph id="ph1">`GetInstance`</ph> с метод можно использовать для настройки возвращаемого настраиваемого маршалера является.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Applying MarshalAsAttribute</source>
          <target state="translated">Применение MarshalAsAttribute</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>To use a custom marshaler, you must apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute to the parameter or field that is being marshaled.</source>
          <target state="translated">Для использования особого упаковщика, необходимо применить <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> атрибут параметра или поля, который маршалируется.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You must also pass the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> enumeration value to the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> constructor.</source>
          <target state="translated">Необходимо также передать <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> значение перечисления <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> конструктор.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In addition, you must specify the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field with one of the following named parameters:</source>
          <target state="translated">Кроме того, необходимо указать <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> поле с одним из следующих действий, именованных параметров:</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> (required): The assembly-qualified name of the custom marshaler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> (обязательно): имя настраиваемого упаковщика с указанием сборки.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The name should include the namespace and class of the custom marshaler.</source>
          <target state="translated">Имя должно включать пространство имен и класс пользовательского упаковщика.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>If the custom marshaler is not defined in the assembly it is used in, you must specify the name of the assembly in which it is defined.</source>
          <target state="translated">Если особого упаковщика не определен в сборке, которой он используется, необходимо указать имя сборки, в которой он определен.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You can use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> field instead of the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field.</source>
          <target state="translated">Можно использовать <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> поле вместо <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> поля.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> takes a type that is easier to specify.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> принимает значение типа, который проще указать.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie&gt;</ph> (optional): A cookie that is passed to the custom marshaler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie&gt;</ph> (необязательно): файл cookie, который передается особым упаковщиком.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You can use the cookie to provide additional information to the marshaler.</source>
          <target state="translated">Куки-файл можно использовать для предоставления дополнительных сведений упаковщиком.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>For example, if the same marshaler is used to provide a number of wrappers, the cookie identifies a specific wrapper.</source>
          <target state="translated">Например если же упаковщик используется для указания номера оболочек, файл cookie идентифицирует конкретную оболочку.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The cookie is passed to the <ph id="ph1">`GetInstance`</ph> method of the marshaler.</source>
          <target state="translated">Файл cookie передается <ph id="ph1">`GetInstance`</ph> метод упаковщика.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute identifies the custom marshaler so it can activate the appropriate wrapper.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> Атрибут определяет особого упаковщика, поэтому она может активировать соответствующую оболочку.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The common language runtime's interop service then examines the attribute and creates the custom marshaler the first time the argument (parameter or field) needs to be marshaled.</source>
          <target state="translated">Затем служба взаимодействия среды CLR проверяет атрибут и создает времени особого упаковщика первый аргумент (параметра или поля) требуется маршалировать.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The runtime then calls the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> methods on the custom marshaler to activate the correct wrapper to handle the call.</source>
          <target state="translated">Затем среда выполнения вызывает <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> методов для особого упаковщика для активации правильную оболочку для обработки вызова.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Using a Custom Marshaler</source>
          <target state="translated">С помощью особого упаковщика</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>When the custom marshaler is complete, you can use it as a custom wrapper for a particular type.</source>
          <target state="translated">После завершения пользовательского упаковщика можно использовать как настраиваемую оболочку для конкретного типа.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The following example shows the definition of the <ph id="ph1">`IUserData`</ph> managed interface:</source>
          <target state="translated">В следующем примере показано определение <ph id="ph1">`IUserData`</ph> управляемого интерфейса:</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In the following example, the <ph id="ph1">`IUserData`</ph> interface uses the <ph id="ph2">`NewOldMarshaler`</ph> custom marshaler to enable unmanaged client applications to pass an <ph id="ph3">`IOld`</ph> interface to the <ph id="ph4">`DoSomeStuff`</ph> method.</source>
          <target state="translated">В следующем примере <ph id="ph1">`IUserData`</ph> интерфейс использует <ph id="ph2">`NewOldMarshaler`</ph> особого упаковщика для включения неуправляемых клиентских приложениях для передачи <ph id="ph3">`IOld`</ph> интерфейс <ph id="ph4">`DoSomeStuff`</ph> метод.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The managed description of the <ph id="ph1">`DoSomeStuff`</ph> method takes an <ph id="ph2">`INew`</ph> interface, as shown in the previous example, whereas the unmanaged version of <ph id="ph3">`DoSomeStuff`</ph> takes an <ph id="ph4">`IOld`</ph> interface pointer, as shown in the following example.</source>
          <target state="translated">Управляемое описание <ph id="ph1">`DoSomeStuff`</ph> принимает <ph id="ph2">`INew`</ph> интерфейс, как показано в предыдущем примере, в то время как неуправляемая версия <ph id="ph3">`DoSomeStuff`</ph> принимает <ph id="ph4">`IOld`</ph> указатель на интерфейс, как показано в следующем примере.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The type library that is generated by exporting the managed definition of <ph id="ph1">`IUserData`</ph> yields the unmanaged definition shown in this example instead of the standard definition.</source>
          <target state="translated">Библиотека типов, созданная путем экспорта управляемого определения <ph id="ph1">`IUserData`</ph> неуправляемое определение показано в следующем примере вместо стандартного определения.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute applied to the <ph id="ph2">`INew`</ph> argument in the managed definition of the <ph id="ph3">`DoSomeStuff`</ph> method indicates that the argument uses a custom marshaler, as the following example shows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> Атрибут, примененный к <ph id="ph2">`INew`</ph> аргумента в управляемое определение <ph id="ph3">`DoSomeStuff`</ph> метод указывает, что аргумент использует настраиваемый упаковщик, как показано в следующем примере.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In the previous examples, the first parameter provided to the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute is the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> enumeration value <ph id="ph3">`UnmanagedType.CustomMarshaler`</ph>.</source>
          <target state="translated">В предыдущих примерах, первый параметр обеспечивает <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> атрибут <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> значение перечисления <ph id="ph3">`UnmanagedType.CustomMarshaler`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The second parameter is the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field, which provides the assembly-qualified name of the custom marshaler.</source>
          <target state="translated">Второй параметр — <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> поле, которое предоставляет имя сборки пользовательского упаковщика.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This name consists of the namespace and class of the custom marshaler (<ph id="ph1">`MarshalType="MyCompany.NewOldMarshaler"`</ph>).</source>
          <target state="translated">Это имя состоит из пространства имен и класс настраиваемого упаковщика (<ph id="ph1">`MarshalType="MyCompany.NewOldMarshaler"`</ph>).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)">
          <source>The managed object to be destroyed.</source>
          <target state="translated">Управляемый объект, который необходимо уничтожить.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)">
          <source>Performs necessary cleanup of the managed data when it is no longer needed.</source>
          <target state="translated">Выполняет необходимую очистку управляемых данных, если они больше не нужны.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)">
          <source>A pointer to the unmanaged data to be destroyed.</source>
          <target state="translated">Указатель на неуправляемые данные, которые необходимо уничтожить.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)">
          <source>Performs necessary cleanup of the unmanaged data when it is no longer needed.</source>
          <target state="translated">Выполняет необходимую очистку неуправляемых данных, если они больше не нужны.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize">
          <source>Returns the size of the native data to be marshaled.</source>
          <target state="translated">Возвращает размер собственных данных для маршалинга.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize">
          <source>The size, in bytes, of the native data.</source>
          <target state="translated">Размер собственных данных в байтах.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
          <source>The managed object to be converted.</source>
          <target state="translated">Управляемый объект, который необходимо преобразовать.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
          <source>Converts the managed data to unmanaged data.</source>
          <target state="translated">Преобразует управляемые данные в неуправляемые.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
          <source>A pointer to the COM view of the managed object.</source>
          <target state="translated">Указатель на COM-представление управляемого объекта.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>A pointer to the unmanaged data to be wrapped.</source>
          <target state="translated">Указатель на неуправляемые данные, которые необходимо инкапсулировать.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>Converts the unmanaged data to managed data.</source>
          <target state="translated">Преобразует неуправляемые данные в управляемые.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>An object that represents the managed view of the COM data.</source>
          <target state="translated">Объект, представляющий управляемое представление данных модели COM.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>