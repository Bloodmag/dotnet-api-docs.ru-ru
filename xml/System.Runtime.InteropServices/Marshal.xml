<Type Name="Marshal" FullName="System.Runtime.InteropServices.Marshal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b582e89d8a536a45d26354652aab5d4e97b21f0f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30480658" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Marshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Marshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.Marshal" />
  <TypeSignature Language="VB.NET" Value="Public Class Marshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class Marshal abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="41aa0-101">Предоставляет коллекцию методов для выделения неуправляемой памяти, копирования блоков неуправляемой памяти и преобразования управляемых типов в неуправляемые, а также прочих разнообразных методов, используемых при взаимодействии с неуправляемым кодом.</span>
      <span class="sxs-lookup">
        <span data-stu-id="41aa0-101">Provides a collection of methods for allocating unmanaged memory, copying unmanaged memory blocks, and converting managed to unmanaged types, as well as other miscellaneous methods used when interacting with unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-102">`static` Методы, определенные в <xref:System.Runtime.InteropServices.Marshal> класса являются основными при работе с неуправляемым кодом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-102">The `static` methods defined on the <xref:System.Runtime.InteropServices.Marshal> class are essential to working with unmanaged code.</span></span> <span data-ttu-id="41aa0-103">Большинство методов, определенных в этом классе обычно используются разработчиками, чтобы оставить мост между управляемыми и неуправляемыми моделями программирования.</span><span class="sxs-lookup"><span data-stu-id="41aa0-103">Most methods defined in this class are typically used by developers who want to provide a bridge between the managed and unmanaged programming models.</span></span> <span data-ttu-id="41aa0-104">Например <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> метод копирует знаки из указанной строки (в управляемой куче) буфер в неуправляемой куче.</span><span class="sxs-lookup"><span data-stu-id="41aa0-104">For example, the <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> method copies ANSI characters from a specified string (in the managed heap) to a buffer in the unmanaged heap.</span></span> <span data-ttu-id="41aa0-105">Он также используется для выделения кучи целевой неправильный размер.</span><span class="sxs-lookup"><span data-stu-id="41aa0-105">It also allocates the target heap of the right size.</span></span>  
  
 <span data-ttu-id="41aa0-106">Общеязыковая среда выполнения предоставляет специальные возможности маршалинга.</span><span class="sxs-lookup"><span data-stu-id="41aa0-106">The common language runtime provides specific marshaling capabilities.</span></span> <span data-ttu-id="41aa0-107">Дополнительные сведения о выполнении маршалинга см. в разделе [маршалинг взаимодействия](~/docs/framework/interop/interop-marshaling.md).</span><span class="sxs-lookup"><span data-stu-id="41aa0-107">For details on marshaling behavior, see [Interop Marshaling](~/docs/framework/interop/interop-marshaling.md).</span></span>  
  
 <span data-ttu-id="41aa0-108">`Read` И `Write` методы в <xref:System.Runtime.InteropServices.Marshal> класс поддержки как для выровненных, так и для невыровненного доступа.</span><span class="sxs-lookup"><span data-stu-id="41aa0-108">The `Read` and `Write` methods in the <xref:System.Runtime.InteropServices.Marshal> class support both aligned and unaligned access.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-109">Следующий пример показывает, как использовать различные методы, определенные <xref:System.Runtime.InteropServices.Marshal> класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-109">The following example shows how to use various methods defined by the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#1)]
 [!code-csharp[Marshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#1)]
 [!code-vb[Marshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddRef">
      <MemberSignature Language="C#" Value="public static int AddRef (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AddRef(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddRef (pUnk As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AddRef(IntPtr pUnk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="41aa0-110">Увеличиваемый счетчик ссылок интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-110">The interface reference count to increment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-111">Увеличивает счетчик ссылок для указанного интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-111">Increments the reference count on the specified interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-112">Новое значение счетчика ссылок для параметра <paramref name="pUnk" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-112">The new value of the reference count on the <paramref name="pUnk" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-113">Общеязыковая среда выполнения управляет счетчиком ссылок объекта COM, устраняя необходимость прямого использования этого метода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-113">The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</span></span> <span data-ttu-id="41aa0-114">В редких случаях, например для тестирования пользовательского упаковщика может оказаться необходимых для управления временем жизни объекта вручную.</span><span class="sxs-lookup"><span data-stu-id="41aa0-114">In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</span></span> <span data-ttu-id="41aa0-115">После вызова метода <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, необходимо уменьшить значение счетчика ссылок с помощью метода, такие как <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-115">After calling <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, you must decrement the reference count by using a method such as <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="41aa0-116">Не следует полагаться на значение, возвращаемое <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, как оно может быть нестабильным.</span><span class="sxs-lookup"><span data-stu-id="41aa0-116">Do not rely on the return value of <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, as it can sometimes be unstable.</span></span>  
  
 <span data-ttu-id="41aa0-117">Можно вызвать <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, или <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> для получения <xref:System.IntPtr> значение, представляющее [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) указатель на интерфейс.</span><span class="sxs-lookup"><span data-stu-id="41aa0-117">You can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to obtain an <xref:System.IntPtr> value that represents an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer.</span></span> <span data-ttu-id="41aa0-118">Можно также использовать эти методы и <xref:System.Runtime.InteropServices.Marshal.AddRef%2A> метод для управляемых объектов для получения интерфейсов COM, представленный вызываемая оболочка COM в управляемый объект.</span><span class="sxs-lookup"><span data-stu-id="41aa0-118">You can also use these methods and the <xref:System.Runtime.InteropServices.Marshal.AddRef%2A> method on managed objects to obtain the COM interfaces represented by the managed object's COM callable wrapper.</span></span> <span data-ttu-id="41aa0-119">Если вы не знакомы с подробными сведениями о типе оболочки, см. раздел [вызываемая оболочка COM](~/docs/framework/interop/com-callable-wrapper.md).</span><span class="sxs-lookup"><span data-stu-id="41aa0-119">If you are not familiar with the details of this wrapper type, see [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-120">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-120">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-121">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-121">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AllocCoTaskMem">
      <MemberSignature Language="C#" Value="public static IntPtr AllocCoTaskMem (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocCoTaskMem(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocCoTaskMem (cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocCoTaskMem(int cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="41aa0-122">Размер выделяемого блока памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-122">The size of the block of memory to be allocated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-123">Выделяет блок памяти указанного размера из механизма распределения памяти для задач COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-123">Allocates a block of memory of specified size from the COM task memory allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-124">Целое число, представляющее адрес выделенного блока памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-124">An integer representing the address of the block of memory allocated.</span>
          </span>
          <span data-ttu-id="41aa0-125">Освобождать эту память необходимо с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-125">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-126"><xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> является одним из выделения памяти для двух методов API в <xref:System.Runtime.InteropServices.Marshal> класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-126"><xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> is one of two memory allocation API methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="41aa0-127">(<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> заключается в.) Исходное возвращенное содержимое памяти не определено, а выделенная память может быть больше запрошенного числа байтов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-127">(<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> is the other.) The initial memory content returned is undefined, and the allocated memory can be larger than the requested number of bytes.</span></span> <span data-ttu-id="41aa0-128">Этот метод предоставляет COM [CoTaskMemAlloc](http://go.microsoft.com/fwlink/?LinkId=148626) функции, которая называется распределения памяти для задач COM.</span><span class="sxs-lookup"><span data-stu-id="41aa0-128">This method exposes the COM [CoTaskMemAlloc](http://go.microsoft.com/fwlink/?LinkId=148626) function, which is referred to as the COM task memory allocator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-129">Недостаточно памяти для выполнения запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-129">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-130">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-130">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-131">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-131">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AllocHGlobal">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-132">Выделяет память из неуправляемой памяти процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-132">Allocates memory from the unmanaged memory of the process.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr AllocHGlobal (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocHGlobal(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocHGlobal (cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocHGlobal(int cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="41aa0-133">Требуемое количество байтов памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-133">The required number of bytes in memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-134">Выделяет память из неуправляемой памяти процесса, используя заданное количество байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-134">Allocates memory from the unmanaged memory of the process by using the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-135">Указатель на только что выделенную память.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-135">A pointer to the newly allocated memory.</span>
          </span>
          <span data-ttu-id="41aa0-136">Эта память должна освобождаться при помощи метода <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-136">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-137"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> является одним из двух методов выделения памяти в <xref:System.Runtime.InteropServices.Marshal> класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-137"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> is one of two memory allocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="41aa0-138">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> заключается в.) Этот метод предоставляет Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkId=148628) из Kernel32.dll.</span><span class="sxs-lookup"><span data-stu-id="41aa0-138">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> is the other.) This method exposes the Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkId=148628) function from Kernel32.dll.</span></span>  
  
 <span data-ttu-id="41aa0-139">Когда <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> вызовы `LocalAlloc`, он передает `LMEM_FIXED` флаг, который вызывает выделенную память будет заблокирован на месте.</span><span class="sxs-lookup"><span data-stu-id="41aa0-139">When <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> calls `LocalAlloc`, it passes a `LMEM_FIXED` flag, which causes the allocated memory to be locked in place.</span></span> <span data-ttu-id="41aa0-140">Кроме того выделенная память не нулями.</span><span class="sxs-lookup"><span data-stu-id="41aa0-140">Also, the allocated memory is not zero-filled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-141">В следующем примере демонстрируется вызов метода <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-141">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> method.</span></span> <span data-ttu-id="41aa0-142">Данный пример кода является частью большего примера, приведенного для <xref:System.Runtime.InteropServices.Marshal> класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-142">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#4](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#4)]
 [!code-csharp[Marshal#4](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#4)]
 [!code-vb[Marshal#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-143">Недостаточно памяти для выполнения запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-143">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-144">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-144">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-145">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-145">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="AllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr AllocHGlobal (IntPtr cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocHGlobal(native int cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocHGlobal (cb As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocHGlobal(IntPtr cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="41aa0-146">Требуемое количество байтов памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-146">The required number of bytes in memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-147">Выделяет память из неуправляемой памяти процесса, используя указатель на заданное количество байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-147">Allocates memory from the unmanaged memory of the process by using the pointer to the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-148">Указатель на только что выделенную память.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-148">A pointer to the newly allocated memory.</span>
          </span>
          <span data-ttu-id="41aa0-149">Эта память должна освобождаться при помощи метода <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-149">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-150"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> является одним из двух методов выделения памяти в <xref:System.Runtime.InteropServices.Marshal> класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-150"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> is one of two memory allocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="41aa0-151">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> заключается в.) Этот метод предоставляет Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkID=148628) из Kernel32.dll.</span><span class="sxs-lookup"><span data-stu-id="41aa0-151">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> is the other.) This method exposes the Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkID=148628) function from Kernel32.dll.</span></span>  
  
 <span data-ttu-id="41aa0-152">Когда <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> вызовы `LocalAlloc`, он передает `LMEM_FIXED` флаг, который вызывает выделенную память будет заблокирован на месте.</span><span class="sxs-lookup"><span data-stu-id="41aa0-152">When <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> calls `LocalAlloc`, it passes a `LMEM_FIXED` flag, which causes the allocated memory to be locked in place.</span></span> <span data-ttu-id="41aa0-153">Кроме того выделенная память не нулями.</span><span class="sxs-lookup"><span data-stu-id="41aa0-153">Also, the allocated memory is not zero-filled.</span></span>  
  
 <span data-ttu-id="41aa0-154">Пример кода см. в разделе <xref:System.Runtime.InteropServices.Marshal> и <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-154">For example code, see <xref:System.Runtime.InteropServices.Marshal> and <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-155">Недостаточно памяти для выполнения запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-155">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-156">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-156">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-157">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-157">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="AreComObjectsAvailableForCleanup">
      <MemberSignature Language="C#" Value="public static bool AreComObjectsAvailableForCleanup ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreComObjectsAvailableForCleanup() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreComObjectsAvailableForCleanup () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool AreComObjectsAvailableForCleanup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-158">Указывает, доступны ли для очистки вызываемые оболочки времени выполнения (RCW) из какого-либо контекста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-158">Indicates whether runtime callable wrappers (RCWs) from any context are available for cleanup.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-159">Значение <see langword="true" />, если есть доступные для очистки вызываемые оболочки времени выполнения; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-159">
              <see langword="true" /> if there are any RCWs available for cleanup; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-160">Если существует много ссылок между управляемым и машинным кодом с графами глубокой зависимости занимает много времени для всех объектов для очистки.</span><span class="sxs-lookup"><span data-stu-id="41aa0-160">If there are a lot of references between managed and native code with deep dependency graphs it can take a long time for all the objects to clean up.</span></span> <span data-ttu-id="41aa0-161">Каждый раз при выполнении сборки Мусора он освободит некоторое количество RCW, которые в свою очередь будет освобождать базового COM-объекты.</span><span class="sxs-lookup"><span data-stu-id="41aa0-161">Each time a GC runs it will free up some number of RCWs, which will in turn release the underlying COM objects.</span></span> <span data-ttu-id="41aa0-162">Эти COM-объекты затем освободят управляемые ссылки и дополнительные объекты сделать доступными для очистки очередном выполнения сборки Мусора, в котором запускает процесс заново.</span><span class="sxs-lookup"><span data-stu-id="41aa0-162">Those COM objects will then release their managed references and make more objects available for cleanup the next time a GC runs, which starts the process over again.</span></span>  
  
 <span data-ttu-id="41aa0-163"><xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A> Метод предоставляет способ для приложения определить, сколько циклов для сборки Мусора. Сбор и сборки Мусора. WaitForPendingFinalizers должно произойти, чтобы очистить все данные.</span><span class="sxs-lookup"><span data-stu-id="41aa0-163">The <xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A> method provides a way for the application to determine how many cycles of GC.Collect and GC.WaitForPendingFinalizers need to happen in order to clean everything up.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-164">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-164">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-165">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-165">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BindToMoniker">
      <MemberSignature Language="C#" Value="public static object BindToMoniker (string monikerName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object BindToMoniker(string monikerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BindToMoniker (monikerName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BindToMoniker(System::String ^ monikerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="monikerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="monikerName">
          <span data-ttu-id="41aa0-166">Моникер, соответствующий указателю нужного интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-166">The moniker corresponding to the desired interface pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-167">Возвращает указатель интерфейса, определенный указанным моникером.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-167">Gets an interface pointer identified by the specified moniker.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-168">Объект, содержащий ссылку на указатель интерфейса, идентифицируемый параметром <paramref name="monikerName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-168">An object containing a reference to the interface pointer identified by the <paramref name="monikerName" /> parameter.</span>
          </span>
          <span data-ttu-id="41aa0-169">Моникер — это имя, в данном случае определенное интерфейсом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-169">A moniker is a name, and in this case, the moniker is defined by an interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-170"><xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A> предоставляет COM `BindToMoniker` метод, создающий объект, который может быть приведен к любому интерфейсу COM, требуется.</span><span class="sxs-lookup"><span data-stu-id="41aa0-170"><xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A> exposes the COM `BindToMoniker` method, which produces an object that you can cast to any COM interface you require.</span></span> <span data-ttu-id="41aa0-171">Этот метод предоставляет те же функциональные возможности, как `GetObject` метод в Visual Basic 6.0 и [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="41aa0-171">This method provides the same functionality as the `GetObject` method in Visual Basic 6.0 and [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="41aa0-172">Нераспознанное значение HRESULT возвращено неуправляемым методом <see langword="BindToMoniker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-172">An unrecognized HRESULT was returned by the unmanaged <see langword="BindToMoniker" /> method.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-173">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-173">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-174">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-174">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BufferToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr BufferToBSTR (Array ptr, int slen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int BufferToBSTR(class System.Array ptr, int32 slen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.BufferToBSTR(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BufferToBSTR (ptr As Array, slen As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr BufferToBSTR(Array ^ ptr, int slen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Array" />
        <Parameter Name="slen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <param name="slen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeWrapperHandleStrength">
      <MemberSignature Language="C#" Value="public static void ChangeWrapperHandleStrength (object otp, bool fIsWeak);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangeWrapperHandleStrength(object otp, bool fIsWeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangeWrapperHandleStrength (otp As Object, fIsWeak As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangeWrapperHandleStrength(System::Object ^ otp, bool fIsWeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otp" Type="System.Object" />
        <Parameter Name="fIsWeak" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="otp">
          <span data-ttu-id="41aa0-175">Объект, CCW-оболочка которого содержит дескриптор счетчика ссылок.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-175">The object whose CCW holds a reference counted handle.</span>
          </span>
          <span data-ttu-id="41aa0-176">Этот дескриптор является строгим, если значение счетчика CCW-оболочки больше нуля; в противном случае он является слабым.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-176">The handle is strong if the reference count on the CCW is greater than zero; otherwise, it is weak.</span>
          </span>
        </param>
        <param name="fIsWeak">
          <span data-ttu-id="41aa0-177">Значение <see langword="true" />, чтобы сделать дескриптор параметра <c>otp</c> менее строгим независимо от числа ссылок; значение <see langword="false" />, чтобы сделать строгость дескриптора параметра <c>otp</c> зависимой от числа ссылок.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-177">
              <see langword="true" /> to change the strength of the handle on the <c>otp</c> parameter to weak, regardless of its reference count; <see langword="false" /> to reset the handle strength on <c>otp</c> to be reference counted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-178">Изменяет строгость дескриптора [вызываемой оболочки COM](~/docs/framework/interop/com-callable-wrapper.md) (CCW) объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-178">Changes the strength of an object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) (CCW) handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-179"><xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A> используется для создания пулов функциональные возможности объектов и вызывать не следует с помощью пользовательского кода непосредственно.</span><span class="sxs-lookup"><span data-stu-id="41aa0-179"><xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A> is used for object pooling functionality and should never be called by user code directly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-180">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-180">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-181">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-181">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CleanupUnusedObjectsInCurrentContext">
      <MemberSignature Language="C#" Value="public static void CleanupUnusedObjectsInCurrentContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CleanupUnusedObjectsInCurrentContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CleanupUnusedObjectsInCurrentContext ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CleanupUnusedObjectsInCurrentContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-182">Предписывает среде выполнения очистить все [вызываемые оболочки времени выполнения](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW), выделенные в текущем контексте.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-182">Notifies the runtime to clean up all [Runtime Callable Wrappers](~/docs/framework/interop/runtime-callable-wrapper.md) (RCWs) allocated in the current context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-183">Система взаимодействия передает сообщения, при попытке очистки вызываемые оболочки времени выполнения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-183">The interop system pumps messages while it attempts to clean up RCWs.</span></span> <span data-ttu-id="41aa0-184">Это обеспечит очистки вызываемые оболочки времени выполнения для контейнера с одним потоком (STA) происходит во всех приложениях, включая приложения, которые достаточно редко.</span><span class="sxs-lookup"><span data-stu-id="41aa0-184">This ensures that cleanup for single-threaded apartment (STA) RCWs happens in all applications, including applications that do not pump often enough.</span></span> <span data-ttu-id="41aa0-185">Однако некоторые приложения, которые выполняют подачу соответствующим образом очень чувствительны к которой происходит сообщения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-185">However, some applications that do pump appropriately are very sensitive to where pumping occurs.</span></span> <span data-ttu-id="41aa0-186">Когда система взаимодействия передает сообщения в этих приложениях, в неожиданных местах, приложение может столкнуться с проблемами повторного входа, которые трудно диагностировать.</span><span class="sxs-lookup"><span data-stu-id="41aa0-186">When the interop system pumps messages in these applications, in places that are unexpected, , the application can encounter reentrancy issues that are difficult to diagnose.</span></span> <span data-ttu-id="41aa0-187">Таким образом приложения должны иметь возможность управлять собственным циклом обработки для конкретного STA и управлении очистки вызываемые оболочки времени выполнения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-187">Therefore, applications need to be able to control their own pumping for a particular STA and to control the clean-up of RCWs.</span></span>  
  
 <span data-ttu-id="41aa0-188">Разработчики управляют часто только подмножество потоков в своем приложении и поэтому не могут гарантировать, что все потоки поступают соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-188">However, developers often only control a subset of the threads in their application and thus cannot ensure that all threads are pumping appropriately.</span></span>  
  
 <span data-ttu-id="41aa0-189">Чтобы решить эту проблему:</span><span class="sxs-lookup"><span data-stu-id="41aa0-189">To solve this problem:</span></span>  
  
1.  <span data-ttu-id="41aa0-190">Используйте <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType> метод для отключения автоматической очистки вызываемые оболочки времени выполнения и сообщения, сообщения, которое появляется, для каждого потока.</span><span class="sxs-lookup"><span data-stu-id="41aa0-190">Use the <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType> method to turn off automatic cleanup of RCWs, and the message pumping that occurs, on a per-thread basis.</span></span> <span data-ttu-id="41aa0-191">Это позволяет разработчикам отказаться от автоматической очистки и поступления соответствующих сообщений.</span><span class="sxs-lookup"><span data-stu-id="41aa0-191">This allows developers to opt out of automatic clean-up, and the corresponding message pumping.</span></span>  
  
2.  <span data-ttu-id="41aa0-192">Используйте <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A> метод для уведомления среды выполнения, чтобы очистить все вызываемые оболочки времени выполнения, выделенных в текущем контексте.</span><span class="sxs-lookup"><span data-stu-id="41aa0-192">Use the <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A> method to notify the runtime to clean up all RCWs that are allocated in the current context.</span></span> <span data-ttu-id="41aa0-193">Этот вспомогательный метод позволяет разработчикам точно контролировать, когда среда выполнения выполняет очистку в текущем контексте.</span><span class="sxs-lookup"><span data-stu-id="41aa0-193">This companion method allows developers to precisely control when the runtime performs cleanup in the current context.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-194">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-194">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-195">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-195">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Copy">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-196">Копирует данные из управляемого массива в указатель неуправляемой памяти или из указателя неуправляемой памяти в управляемый массив.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-196">Copies data from a managed array to an unmanaged memory pointer, or from an unmanaged memory pointer to a managed array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (byte[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(unsigned int8[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Byte(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;System::Byte&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-197">Одномерный массив, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-197">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-198">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-198">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-199">Указатель памяти, в который выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-199">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-200">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-200">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-201">Копирует данные из одномерного управляемого массива 8-битных целых чисел без знака в указатель неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-201">Copies data from a one-dimensional, managed 8-bit unsigned integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-202">Этот метод можно использовать для копирования подмножества одномерного управляемого массива в неуправляемый массив в стиле.</span><span class="sxs-lookup"><span data-stu-id="41aa0-202">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-203">Следующий пример копирует массив в неуправляемую память с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29> перегрузки, а затем копирует неуправляемого массива обратно в управляемую память с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="41aa0-203">The following example copies an array to unmanaged memory by using the <xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29> overload, and then copies the unmanaged array back to managed memory by using the <xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41aa0-204">
            <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-204">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-205">Параметр <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-205">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-206">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-206">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-207">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-207">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (char[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(char[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Char(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;char&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-208">Одномерный массив, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-208">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-209">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-209">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-210">Указатель памяти, в который выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-210">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-211">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-211">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-212">Копирует данные из одномерного управляемого массива символов в неуправляемый указатель памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-212">Copies data from a one-dimensional, managed character array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-213">Этот метод можно использовать для копирования подмножества одномерного управляемого массива в неуправляемый массив в стиле.</span><span class="sxs-lookup"><span data-stu-id="41aa0-213">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-214">Следующий пример копирует массив в неуправляемой памяти и копирует неуправляемого массива управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-214">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41aa0-215">
            <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-215">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-216">Значение параметра <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> равно <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-216">
              <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-217">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-217">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-218">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-218">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (double[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(float64[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Double(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;double&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Double[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-219">Одномерный массив, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-219">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-220">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-220">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-221">Указатель памяти, в который выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-221">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-222">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-222">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-223">Копирует данные из одномерного управляемого массива чисел с плавающей запятой двойной точности в указатель неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-223">Copies data from a one-dimensional, managed double-precision floating-point number array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-224">Этот метод можно использовать для копирования подмножества одномерного управляемого массива в неуправляемый массив в стиле.</span><span class="sxs-lookup"><span data-stu-id="41aa0-224">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-225">Следующий пример копирует массив в неуправляемой памяти и копирует неуправляемого массива управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-225">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41aa0-226">
            <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-226">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-227">Параметр <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-227">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-228">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-228">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-229">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-229">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (short[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int16[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Short(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;short&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int16[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-230">Одномерный массив, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-230">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-231">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-231">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-232">Указатель памяти, в который выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-232">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-233">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-233">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-234">Копирует данные из одномерного управляемого массива 16-битных целых чисел со знаком в указатель неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-234">Copies data from a one-dimensional, managed 16-bit signed integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-235">Этот метод можно использовать для копирования подмножества одномерного управляемого массива в неуправляемый массив в стиле.</span><span class="sxs-lookup"><span data-stu-id="41aa0-235">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-236">Следующий пример копирует массив в неуправляемой памяти и копирует неуправляемого массива управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-236">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41aa0-237">
            <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-237">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-238">Параметр <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-238">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-239">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-239">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-240">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-240">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (int[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int32[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Integer(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;int&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int32[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-241">Одномерный массив, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-241">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-242">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-242">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-243">Указатель памяти, в который выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-243">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-244">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-244">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-245">Копирует данные из одномерного управляемого массива 32-битных целых чисел со знаком в указатель неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-245">Copies data from a one-dimensional, managed 32-bit signed integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-246">Этот метод можно использовать для копирования подмножества одномерного управляемого массива в неуправляемый массив в стиле.</span><span class="sxs-lookup"><span data-stu-id="41aa0-246">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-247">Следующий пример копирует массив в неуправляемой памяти и копирует неуправляемого массива управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-247">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41aa0-248">
            <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-248">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-249">Параметр <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-249">
              <paramref name="startIndex" /> or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-250">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-250">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-251">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-251">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (long[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int64[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Long(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;long&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int64[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-252">Одномерный массив, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-252">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-253">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-253">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-254">Указатель памяти, в который выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-254">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-255">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-255">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-256">Копирует данные из одномерного управляемого массива 64-битных целых чисел со знаком в указатель неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-256">Copies data from a one-dimensional, managed 64-bit signed integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-257">Этот метод можно использовать для копирования подмножества одномерного управляемого массива в неуправляемый массив в стиле.</span><span class="sxs-lookup"><span data-stu-id="41aa0-257">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-258">Следующий пример копирует массив в неуправляемой памяти и копирует неуправляемого массива управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-258">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41aa0-259">
            <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-259">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-260">Параметр <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-260">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-261">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-261">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-262">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-262">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, byte[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, unsigned int8[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Byte(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;System::Byte&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-263">Указатель памяти, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-263">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-264">Массив для копирования данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-264">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-265">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-265">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-266">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-266">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-267">Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 8-битных целых чисел без знака.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-267">Copies data from an unmanaged memory pointer to a managed 8-bit unsigned integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-268">Неуправляемые, массивы в стиле языка C не содержат сведений о границах, что предотвращает `startIndex` и `length` проверку параметров.</span><span class="sxs-lookup"><span data-stu-id="41aa0-268">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="41aa0-269">Таким образом, неуправляемые данные, соответствующие `source` параметр заполняют управляемый массив независимо от своей полезности.</span><span class="sxs-lookup"><span data-stu-id="41aa0-269">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="41aa0-270">Перед вызовом этого метода необходимо инициализировать управляемый массив соответствующего размера.</span><span class="sxs-lookup"><span data-stu-id="41aa0-270">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-271">Следующий пример копирует массив в неуправляемой памяти и копирует неуправляемого массива управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-271">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-272">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-272">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-273">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-273">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-274">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-274">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, char[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, char[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Char(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;char&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-275">Указатель памяти, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-275">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-276">Массив для копирования данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-276">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-277">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-277">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-278">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-278">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-279">Копирует данные из указателя неуправляемой памяти в управляемый массив символов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-279">Copies data from an unmanaged memory pointer to a managed character array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-280">Неуправляемые, массивы в стиле языка C не содержат сведений о границах, что предотвращает `startIndex` и `length` проверку параметров.</span><span class="sxs-lookup"><span data-stu-id="41aa0-280">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="41aa0-281">Таким образом, неуправляемые данные, соответствующие `source` параметр заполняют управляемый массив независимо от своей полезности.</span><span class="sxs-lookup"><span data-stu-id="41aa0-281">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="41aa0-282">Перед вызовом этого метода необходимо инициализировать управляемый массив соответствующего размера.</span><span class="sxs-lookup"><span data-stu-id="41aa0-282">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-283">Следующий пример копирует массив в неуправляемой памяти и копирует неуправляемого массива управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-283">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-284">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-284">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-285">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-285">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-286">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-286">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, double[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, float64[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Double(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;double&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Double[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-287">Указатель памяти, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-287">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-288">Массив для копирования данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-288">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-289">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-289">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-290">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-290">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-291">Копирует данные из неуправляемого указателя памяти в управляемый массив чисел с плавающей запятой двойной точности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-291">Copies data from an unmanaged memory pointer to a managed double-precision floating-point number array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-292">Неуправляемые, массивы в стиле языка C не содержат сведений о границах, что предотвращает `startIndex` и `length` проверку параметров.</span><span class="sxs-lookup"><span data-stu-id="41aa0-292">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="41aa0-293">Таким образом, неуправляемые данные, соответствующие `source` параметр заполняют управляемый массив независимо от своей полезности.</span><span class="sxs-lookup"><span data-stu-id="41aa0-293">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="41aa0-294">Перед вызовом этого метода необходимо инициализировать управляемый массив соответствующего размера.</span><span class="sxs-lookup"><span data-stu-id="41aa0-294">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-295">Следующий пример копирует массив в неуправляемой памяти и копирует неуправляемого массива управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-295">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-296">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-296">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-297">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-297">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-298">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-298">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, short[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int16[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Short(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;short&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int16[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-299">Указатель памяти, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-299">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-300">Массив для копирования данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-300">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-301">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-301">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-302">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-302">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-303">Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 16-битных целых чисел со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-303">Copies data from an unmanaged memory pointer to a managed 16-bit signed integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-304">Неуправляемые, массивы в стиле языка C не содержат сведений о границах, что предотвращает `startIndex` и `length` проверку параметров.</span><span class="sxs-lookup"><span data-stu-id="41aa0-304">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="41aa0-305">Таким образом, неуправляемые данные, соответствующие `source` параметр заполняют управляемый массив независимо от своей полезности.</span><span class="sxs-lookup"><span data-stu-id="41aa0-305">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="41aa0-306">Перед вызовом этого метода необходимо инициализировать управляемый массив соответствующего размера.</span><span class="sxs-lookup"><span data-stu-id="41aa0-306">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-307">Следующий пример копирует массив в неуправляемой памяти и копирует неуправляемого массива управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-307">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-308">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-308">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-309">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-309">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-310">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-310">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, int[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int32[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Integer(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;int&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int32[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-311">Указатель памяти, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-311">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-312">Массив для копирования данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-312">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-313">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-313">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-314">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-314">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-315">Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 32-битных целых чисел со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-315">Copies data from an unmanaged memory pointer to a managed 32-bit signed integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-316">Неуправляемые, массивы в стиле языка C не содержат сведений о границах, что предотвращает `startIndex` и `length` проверку параметров.</span><span class="sxs-lookup"><span data-stu-id="41aa0-316">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="41aa0-317">Таким образом, неуправляемые данные, соответствующие `source` параметр заполняют управляемый массив независимо от своей полезности.</span><span class="sxs-lookup"><span data-stu-id="41aa0-317">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="41aa0-318">Перед вызовом этого метода необходимо инициализировать управляемый массив соответствующего размера.</span><span class="sxs-lookup"><span data-stu-id="41aa0-318">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-319">Следующий пример копирует массив в неуправляемой памяти и копирует неуправляемого массива управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-319">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-320">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-320">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-321">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-321">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-322">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-322">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, long[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int64[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Long(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;long&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int64[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-323">Указатель памяти, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-323">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-324">Массив для копирования данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-324">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-325">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-325">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-326">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-326">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-327">Копирует данные из указателя неуправляемой памяти в одномерный управляемый массив 64-битных целых чисел со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-327">Copies data from an unmanaged memory pointer to a managed 64-bit signed integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-328">Неуправляемые, массивы в стиле языка C не содержат сведений о границах, что предотвращает `startIndex` и `length` проверку параметров.</span><span class="sxs-lookup"><span data-stu-id="41aa0-328">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="41aa0-329">Таким образом, неуправляемые данные, соответствующие`source` параметр заполняют управляемый массив независимо от своей полезности.</span><span class="sxs-lookup"><span data-stu-id="41aa0-329">Thus, the unmanaged data corresponding to the`source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="41aa0-330">Перед вызовом этого метода необходимо инициализировать управляемый массив соответствующего размера.</span><span class="sxs-lookup"><span data-stu-id="41aa0-330">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-331">Следующий пример копирует массив в неуправляемой памяти и копирует неуправляемого массива управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-331">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-332">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-332">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-333">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-333">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-334">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-334">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, IntPtr[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, native int[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As IntPtr(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;IntPtr&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.IntPtr[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-335">Указатель памяти, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-335">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-336">Массив для копирования данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-336">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-337">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-337">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-338">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-338">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-339">Копирует данные из указателя неуправляемой памяти в управляемый массив <see cref="T:System.IntPtr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-339">Copies data from an unmanaged memory pointer to a managed <see cref="T:System.IntPtr" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-340">Неуправляемые, массивы в стиле языка C не содержат сведений о границах, что предотвращает `startIndex` и `length` проверку параметров.</span><span class="sxs-lookup"><span data-stu-id="41aa0-340">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="41aa0-341">Таким образом, неуправляемые данные, соответствующий `source` параметр заполняют управляемый массив независимо от своей полезности.</span><span class="sxs-lookup"><span data-stu-id="41aa0-341">Therefore, the unmanaged data that corresponds to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="41aa0-342">Необходимо инициализировать управляемый массив соответствующего размера перед вызовом <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-342">You must initialize the managed array with the appropriate size before calling the <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-343">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-343">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-344">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-344">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-345">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-345">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, float[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, float32[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Single(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;float&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Single[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-346">Указатель памяти, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-346">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-347">Массив для копирования данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-347">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-348">Отсчитываемый от нуля индекс в массиве назначения, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-348">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-349">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-349">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-350">Копирует данные из указателя неуправляемой памяти в управляемый массив чисел с плавающей запятой одиночной точности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-350">Copies data from an unmanaged memory pointer to a managed single-precision floating-point number array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-351">Неуправляемые, массивы в стиле языка C не содержат сведений о границах, что предотвращает `startIndex` и `length` проверку параметров.</span><span class="sxs-lookup"><span data-stu-id="41aa0-351">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="41aa0-352">Таким образом, неуправляемые данные, соответствующие `source` параметр заполняют управляемый массив независимо от своей полезности.</span><span class="sxs-lookup"><span data-stu-id="41aa0-352">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="41aa0-353">Перед вызовом этого метода необходимо инициализировать управляемый массив соответствующего размера.</span><span class="sxs-lookup"><span data-stu-id="41aa0-353">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-354">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-354">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-355">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-355">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-356">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-356">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;IntPtr&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-357">Одномерный массив, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-357">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-358">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-358">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-359">Указатель памяти, в который выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-359">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-360">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-360">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-361">Копирует данные из одномерного управляемого массива <see cref="T:System.IntPtr" /> в неуправляемый указатель памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-361">Copies data from a one-dimensional, managed <see cref="T:System.IntPtr" /> array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-362">Этот метод можно использовать для копирования подмножества одномерного управляемого <xref:System.IntPtr> массива в неуправляемый массив в стиле.</span><span class="sxs-lookup"><span data-stu-id="41aa0-362">You can use this method to copy a subset of a one-dimensional managed <xref:System.IntPtr> array to an unmanaged C-style array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-363">Параметр <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> или <paramref name="length" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-363">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-364">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-364">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-365">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-365">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (float[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(float32[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Single(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;float&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Single[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="41aa0-366">Одномерный массив, из которого выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-366">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="41aa0-367">Отсчитываемый от нуля индекс в исходном массиве, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-367">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="41aa0-368">Указатель памяти, в который выполняется копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-368">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41aa0-369">Число копируемых элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-369">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-370">Копирует данные из одномерного управляемого массива чисел с плавающей запятой одинарной точности в указатель неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-370">Copies data from a one-dimensional, managed single-precision floating-point number array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-371">Этот метод можно использовать для копирования подмножества одномерного управляемого массива в неуправляемый массив в стиле.</span><span class="sxs-lookup"><span data-stu-id="41aa0-371">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41aa0-372">
            <paramref name="startIndex" /> и <paramref name="length" /> являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-372">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-373">Параметр <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> или <paramref name="length" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-373">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-374">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-374">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-375">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-375">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateAggregatedObject">
      <MemberSignature Language="C#" Value="public static IntPtr CreateAggregatedObject (IntPtr pOuter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateAggregatedObject(native int pOuter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAggregatedObject (pOuter As IntPtr, o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateAggregatedObject(IntPtr pOuter, System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pOuter" Type="System.IntPtr" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pOuter">
          <span data-ttu-id="41aa0-376">Внешний указатель <see langword="IUnknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-376">The outer <see langword="IUnknown" /> pointer.</span>
          </span>
        </param>
        <param name="o">
          <span data-ttu-id="41aa0-377">Объект для объединения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-377">An object to aggregate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-378">Объединяет управляемый объект с заданным COM-объектом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-378">Aggregates a managed object with the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-379">Внутренний указатель <see langword="IUnknown" /> управляемого объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-379">The inner <see langword="IUnknown" /> pointer of the managed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-380"><xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> Метод объединяет внутреннее управляемый указатель управляемого объекта с заданным указателем внешнего, а затем возвращает внутреннее [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) указателя управляемого объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-380">The <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> method aggregates the inner managed pointer of a managed object with the specified outer pointer, and then returns an inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-381">
            <paramref name="o" /> является объектом [!INCLUDE[wrt](~/includes/wrt-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-381">
              <paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-382">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-382">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-383">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-383">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateAggregatedObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr CreateAggregatedObject&lt;T&gt; (IntPtr pOuter, T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateAggregatedObject&lt;T&gt;(native int pOuter, !!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAggregatedObject(Of T) (pOuter As IntPtr, o As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr CreateAggregatedObject(IntPtr pOuter, T o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="pOuter" Type="System.IntPtr" />
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41aa0-384">тип управляемого объекта для агрегации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-384">The type of the managed object to aggregate.</span>
          </span>
        </typeparam>
        <param name="pOuter">
          <span data-ttu-id="41aa0-385">Внешний указатель [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-385">The outer [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer.</span>
          </span>
        </param>
        <param name="o">
          <span data-ttu-id="41aa0-386">управляемый объект для агрегации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-386">The managed object to aggregate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-387">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-387">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-388">Объединяет управляемый объект заданного типа с заданным COM-объектом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-388">Aggregates a managed object of the specified type with the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-389">Внутренний указатель [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) управляемого объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-389">The inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-390"><xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> Метод объединяет внутреннее управляемый указатель управляемого объекта указанного типа с заданным указателем на внешнее и возвращает внутреннее [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) указателя управляемого объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-390">The <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> method aggregates the inner managed pointer of a managed object of a specified type with the specified outer pointer, and returns an inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-391">
            <paramref name="o" /> является объектом [!INCLUDE[wrt](~/includes/wrt-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-391">
              <paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-392">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-392">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-393">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-393">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateWrapperOfType">
      <MemberSignature Language="C#" Value="public static object CreateWrapperOfType (object o, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateWrapperOfType(object o, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWrapperOfType (o As Object, t As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateWrapperOfType(System::Object ^ o, Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="41aa0-394">Объект, который следует упаковать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-394">The object to be wrapped.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="41aa0-395">Тип создаваемой оболочки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-395">The type of wrapper to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-396">Инкапсулирует указанный COM-объект в объекте заданного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-396">Wraps the specified COM object in an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-397">Новый инкапсулированный объект, являющийся экземпляром нужного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-397">The newly wrapped object that is an instance of the desired type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-398"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A> Преобразует один тип класса COM, обычно базовый `__ComObject` типа в другой тип COM-класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-398"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A> converts one COM class type, typically the base `__ComObject` type, to another COM class type.</span></span> <span data-ttu-id="41aa0-399">Входной объект COM, представленный параметром `o`, является [вызываемой оболочки времени выполнения](~/docs/framework/interop/runtime-callable-wrapper.md) (времени выполнения RCW).</span><span class="sxs-lookup"><span data-stu-id="41aa0-399">The input COM object, represented by parameter `o`, is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span></span>  
  
 <span data-ttu-id="41aa0-400">Как `t` и `o` должны быть классами, подписи атрибутом <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-400">Both the `t` and `o` parameters must be classes whose signatures are attributed with <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>.</span></span> <span data-ttu-id="41aa0-401">[Tlbimp.exe (программа импорта библиотек типов)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) средство использует этот атрибут при импортировании библиотеки типов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-401">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span> <span data-ttu-id="41aa0-402">При создании оболочки RCW вручную в исходном коде, следует применять этот атрибут в управляемой подписи, которая представляет исходного компонентного класса, чтобы указать соответствующий источник COM.</span><span class="sxs-lookup"><span data-stu-id="41aa0-402">If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</span></span>  
  
 <span data-ttu-id="41aa0-403">Tlbimp.exe импортирует COM [coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) как управляемый класс и интерфейс.</span><span class="sxs-lookup"><span data-stu-id="41aa0-403">Tlbimp.exe imports a COM [coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) as a managed class and an interface.</span></span> <span data-ttu-id="41aa0-404">Интерфейс компонентный класс имеет имя, совпадающее с именем исходного компонентного класса и управляемый класс с исходным именем компонентного класса с добавлением слова «Class».</span><span class="sxs-lookup"><span data-stu-id="41aa0-404">The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</span></span> <span data-ttu-id="41aa0-405">Например, компонентный класс с именем `MyCoclass` становится интерфейс компонентный класс с именем `MyCoclass` и управляемый класс с именем `MyCoclassClass`.</span><span class="sxs-lookup"><span data-stu-id="41aa0-405">For example, a coclass called `MyCoclass` becomes a coclass interface called `MyCoclass` and a managed class called `MyCoclassClass`.</span></span> <span data-ttu-id="41aa0-406">Поскольку `t` должен быть классом, а не интерфейсом, не забудьте указать управляемого класса (`MyCoclassClass`), а не интерфейс компонентного класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-406">Since `t` must be a class, not an interface, be sure to specify the managed class (`MyCoclassClass`) and not the coclass interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41aa0-407">Идентификация введенного объекта COM, поскольку новый экземпляр вызываемой оболочки времени Выполнения создает оболочку для [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) указатель, предоставляемые исходного вызываемая оболочка времени Выполнения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-407">You lose the identity of the input COM object because a new RCW instance wraps the [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer exposed by the original RCW.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-408">Параметр <paramref name="t" /> должен быть производным от <see langword="__ComObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-408">
              <paramref name="t" /> must derive from <see langword="__ComObject" />.</span>
          </span>
          <span data-ttu-id="41aa0-409">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-409">-or-</span>
          </span>
          <span data-ttu-id="41aa0-410">
            <paramref name="t" /> относится к типу [!INCLUDE[wrt](~/includes/wrt-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-410">
              <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-411">Параметр <paramref name="t" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-411">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="41aa0-412">Параметр <paramref name="o" /> нельзя преобразовать в результирующий тип, так как он не поддерживает все требуемые интерфейсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-412">
              <paramref name="o" /> cannot be converted to the destination type because it does not support all required interfaces.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-413">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-413">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-414">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-414">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CreateWrapperOfType&lt;T,TWrapper&gt;">
      <MemberSignature Language="C#" Value="public static TWrapper CreateWrapperOfType&lt;T,TWrapper&gt; (T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TWrapper CreateWrapperOfType&lt;T, TWrapper&gt;(!!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWrapperOfType(Of T, TWrapper) (o As T) As TWrapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TWrapper&gt;&#xA; static TWrapper CreateWrapperOfType(T o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TWrapper</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TWrapper" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41aa0-415">Тип пакуемого объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-415">The type of object to wrap.</span>
          </span>
        </typeparam>
        <typeparam name="TWrapper">
          <span data-ttu-id="41aa0-416">Тип возвращаемого объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-416">The type of object to return.</span>
          </span>
        </typeparam>
        <param name="o">
          <span data-ttu-id="41aa0-417">Объект, который следует упаковать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-417">The object to be wrapped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-418">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-418">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-419">Инкапсулирует указанный COM-объект в объекте заданного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-419">Wraps the specified COM object in an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-420">Только что Инкапсулированный объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-420">The newly wrapped object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-421"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29> Преобразует COM-объект типа `T` для `TWrapper` COM-класса типа.</span><span class="sxs-lookup"><span data-stu-id="41aa0-421"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29> converts a COM object of type `T` to the `TWrapper` COM class type.</span></span> <span data-ttu-id="41aa0-422">Входной объект COM, представленный параметром `o`, является [вызываемой оболочки времени выполнения](~/docs/framework/interop/runtime-callable-wrapper.md) (времени выполнения RCW).</span><span class="sxs-lookup"><span data-stu-id="41aa0-422">The input COM object, represented by parameter `o`, is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span></span>  
  
 <span data-ttu-id="41aa0-423">Оба `T` параметр универсального типа и `o` параметр должен быть атрибутом, подписи классы <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> атрибута.</span><span class="sxs-lookup"><span data-stu-id="41aa0-423">Both the `T` generic type parameter and the `o` parameter must be classes whose signatures are attributed with the <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> attribute.</span></span> <span data-ttu-id="41aa0-424">[Tlbimp.exe (программа импорта библиотек типов)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) средство использует этот атрибут при импортировании библиотеки типов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-424">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span> <span data-ttu-id="41aa0-425">При создании оболочки RCW вручную в исходном коде, следует применять этот атрибут в управляемой подписи, которая представляет исходного компонентного класса, чтобы указать соответствующий источник COM.</span><span class="sxs-lookup"><span data-stu-id="41aa0-425">If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</span></span>  
  
 <span data-ttu-id="41aa0-426">Tlbimp.exe импортирует COM [coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) как управляемый класс и интерфейс.</span><span class="sxs-lookup"><span data-stu-id="41aa0-426">Tlbimp.exe imports a COM [coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) as a managed class and an interface.</span></span> <span data-ttu-id="41aa0-427">Интерфейс компонентный класс имеет имя, совпадающее с именем исходного компонентного класса и управляемый класс с исходным именем компонентного класса с добавлением слова «Class».</span><span class="sxs-lookup"><span data-stu-id="41aa0-427">The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</span></span> <span data-ttu-id="41aa0-428">Например, компонентный класс с именем `MyCoclass` становится интерфейс компонентный класс с именем `MyCoclass` и управляемый класс с именем `MyCoclassClass`.</span><span class="sxs-lookup"><span data-stu-id="41aa0-428">For example, a coclass called `MyCoclass` becomes a coclass interface called `MyCoclass` and a managed class called `MyCoclassClass`.</span></span> <span data-ttu-id="41aa0-429">Поскольку`T` должен быть классом, а не интерфейсом, не забудьте указать управляемого класса (`MyCoclassClass`) и не `coclass` интерфейса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-429">Because`T` must be a class, not an interface, be sure to specify the managed class (`MyCoclassClass`) and not the `coclass` interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41aa0-430">Потерять идентификатор входного объекта COM, поскольку новый экземпляр вызываемой оболочки времени Выполнения создает оболочку для [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) указатель, предоставляемые исходного вызываемая оболочка времени Выполнения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-430">You lose the identity of the input COM object, because a new RCW instance wraps the [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer exposed by the original RCW.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-431">Параметр <typeparamref name="T" /> должен быть производным от <see langword="__ComObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-431">
              <typeparamref name="T" /> must derive from <see langword="__ComObject" />.</span>
          </span>
          <span data-ttu-id="41aa0-432">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-432">-or-</span>
          </span>
          <span data-ttu-id="41aa0-433">
            <typeparamref name="T" /> относится к типу [!INCLUDE[wrt](~/includes/wrt-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-433">
              <typeparamref name="T" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="41aa0-434">Параметр <paramref name="o" /> не может быть преобразован в <paramref name="TWrapper" />, так как он не поддерживает все необходимые интерфейсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-434">
              <paramref name="o" /> cannot be converted to the <paramref name="TWrapper" /> because it does not support all required interfaces.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-435">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-435">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-436">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-436">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DestroyStructure">
      <MemberSignature Language="C#" Value="public static void DestroyStructure (IntPtr ptr, Type structuretype);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DestroyStructure(native int ptr, class System.Type structuretype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DestroyStructure (ptr As IntPtr, structuretype As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DestroyStructure(IntPtr ptr, Type ^ structuretype);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structuretype" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-437">Указатель на неуправляемый блок памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-437">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structuretype">
          <span data-ttu-id="41aa0-438">Тип отформатированного класса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-438">Type of a formatted class.</span>
          </span>
          <span data-ttu-id="41aa0-439">Предоставляет сведения о распределении, необходимые для удаления буфера, указанного в параметре <c>ptr</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-439">This provides the layout information necessary to delete the buffer in the <c>ptr</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-440">Освобождает все вложенные структуры, на которые указывает заданный блок неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-440">Frees all substructures that the specified unmanaged memory block points to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-441">Этот метод используется для освобождения полей ссылочного типа, таких как строки неуправляемой структуры.</span><span class="sxs-lookup"><span data-stu-id="41aa0-441">You can use this method to free reference-type fields, such as strings, of an unmanaged structure.</span></span> <span data-ttu-id="41aa0-442">В отличие от его полей структуру может быть типом значения или ссылочным типом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-442">Unlike its fields, a structure can be a value type or a reference type.</span></span> <span data-ttu-id="41aa0-443">Значение типа структуры, содержащие поля типа значения (все преобразуемые) не содержат ссылок на освобождения которого памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-443">Value-type structures that contain value-type fields (all blittable) have no references whose memory must be freed.</span></span> <span data-ttu-id="41aa0-444"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> Метод использует этот метод для предотвращения утечки памяти при повторном использовании памяти, занятой структурой.</span><span class="sxs-lookup"><span data-stu-id="41aa0-444">The <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</span></span>  
  
 <span data-ttu-id="41aa0-445"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> вызывает COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) функции, которая в свою очередь, освобождает выделенную строку.</span><span class="sxs-lookup"><span data-stu-id="41aa0-445"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> calls the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) function, which, in turn, frees an allocated string.</span></span>  
  
 <span data-ttu-id="41aa0-446">В дополнение к <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>, <xref:System.Runtime.InteropServices.Marshal> класс предоставляет два других метода освобождения памяти: <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> и <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-446">In addition to <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation methods: <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-447">Параметр <paramref name="structureType" /> обеспечивает автоматическое распределение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-447">
              <paramref name="structureType" /> has an automatic layout.</span>
          </span>
          <span data-ttu-id="41aa0-448">Вместо него следует использовать последовательный или явный вариант.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-448">Use sequential or explicit instead.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-449">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-449">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-450">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-450">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="DestroyStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void DestroyStructure&lt;T&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DestroyStructure&lt;T&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DestroyStructure(Of T) (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void DestroyStructure(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41aa0-451">Тип отформатированной структуры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-451">The type of the formatted structure.</span>
          </span>
          <span data-ttu-id="41aa0-452">Предоставляет сведения о распределении, необходимые для удаления буфера, указанного в параметре <c>ptr</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-452">This provides the layout information necessary to delete the buffer in the <c>ptr</c> parameter.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="41aa0-453">Указатель на неуправляемый блок памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-453">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-454">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-454">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-455">Освобождает все вложенные структуры указанного типа, на которые указывает заданный блок неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-455">Frees all substructures of a specified type that the specified unmanaged memory block points to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-456">Этот метод используется для освобождения полей ссылочным типом, например строки неуправляемой структуры.</span><span class="sxs-lookup"><span data-stu-id="41aa0-456">You can use this method to free reference type fields, such as strings, of an unmanaged structure.</span></span> <span data-ttu-id="41aa0-457">В отличие от его полей структуру может быть типом значения или ссылочным типом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-457">Unlike its fields, a structure can be a value type or a reference type.</span></span> <span data-ttu-id="41aa0-458">Значение типа структуры, содержащие поля типа значения (все преобразуемые) не содержат ссылок на освобождения которого памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-458">Value type structures that contain value type fields (all blittable) have no references whose memory must be freed.</span></span> <span data-ttu-id="41aa0-459"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> Метод использует этот метод для предотвращения утечки памяти при повторном использовании памяти, занятой структурой.</span><span class="sxs-lookup"><span data-stu-id="41aa0-459">The <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</span></span>  
  
 <span data-ttu-id="41aa0-460"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> вызывает COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) функции, которая в свою очередь, освобождает выделенную строку.</span><span class="sxs-lookup"><span data-stu-id="41aa0-460"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> calls the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) function, which, in turn, frees an allocated string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-461">Параметр <typeparamref name="T" /> обеспечивает автоматическое распределение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-461">
              <typeparamref name="T" /> has an automatic layout.</span>
          </span>
          <span data-ttu-id="41aa0-462">Вместо него следует использовать последовательный или явный вариант.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-462">Use sequential or explicit instead.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-463">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-463">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-464">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-464">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FinalReleaseComObject">
      <MemberSignature Language="C#" Value="public static int FinalReleaseComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FinalReleaseComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FinalReleaseComObject (o As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FinalReleaseComObject(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="41aa0-465">Освобождаемая оболочка CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-465">The RCW to be released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-466">Высвобождает все ссылки на [вызываемую оболочку времени выполнения](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW), присваивая ее счетчику ссылок значение 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-466">Releases all references to a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) by setting its reference count to 0.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-467">Новое значение счетчика ссылок для вызываемой оболочки времени выполнения, связанной с параметром <paramref name="o" />, равное нулю (0), если высвобождение прошло успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-467">The new value of the reference count of the RCW associated with the <paramref name="o" /> parameter, which is 0 (zero) if the release is successful.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-468"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> Метод освобождает управляемые ссылку на COM-объект.</span><span class="sxs-lookup"><span data-stu-id="41aa0-468">The <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method releases the managed reference to a COM object.</span></span> <span data-ttu-id="41aa0-469">Вызов этого метода эквивалентен вызову <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> метод в цикле, пока возвращается значение 0 (ноль).</span><span class="sxs-lookup"><span data-stu-id="41aa0-469">Calling this method is equivalent to calling the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method in a loop until it returns 0 (zero).</span></span>  
  
 <span data-ttu-id="41aa0-470">Когда счетчик ссылок на COM-объект становится равным 0, COM-объект обычно освобождается, хотя это зависит от реализации COM-объекта и недоступный среды выполнения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-470">When the reference count on the COM object becomes 0, the COM object is usually freed, although this depends on the COM object's implementation and is beyond the control of the runtime.</span></span> <span data-ttu-id="41aa0-471">Однако RCW может по-прежнему существовать, ожидает сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="41aa0-471">However, the RCW can still exist, waiting to be garbage-collected.</span></span>  
  
 <span data-ttu-id="41aa0-472">COM-объект нельзя использовать после был отделен от своего базового RCW.</span><span class="sxs-lookup"><span data-stu-id="41aa0-472">The COM object cannot be used after it has been separated from its underlying RCW.</span></span> <span data-ttu-id="41aa0-473">При попытке вызвать метод вызываемая оболочка времени Выполнения после его счетчик ссылок становится 0, <xref:System.Runtime.InteropServices.InvalidComObjectException> будет создано.</span><span class="sxs-lookup"><span data-stu-id="41aa0-473">If you try to call a method on the RCW after its reference count becomes 0, a <xref:System.Runtime.InteropServices.InvalidComObjectException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-474">
            <paramref name="o" /> не является допустимым COM-объектом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-474">
              <paramref name="o" /> is not a valid COM object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-475">Свойство <paramref name="o" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-475">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-476">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-476">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-477">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-477">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)" />
        <altmember cref="T:System.NullReferenceException" />
      </Docs>
    </Member>
    <Member MemberName="FreeBSTR">
      <MemberSignature Language="C#" Value="public static void FreeBSTR (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeBSTR(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeBSTR (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeBSTR(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-478">Адрес освобождаемой строки BSTR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-478">The address of the BSTR to be freed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-479">Освобождает строку <see langword="BSTR" /> с помощью функции COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-479">Frees a <see langword="BSTR" /> using the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-480">Как <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType> и <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType>, можно использовать этот метод для освобождения памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-480">Like <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType>, you can use this method to deallocate memory.</span></span> <span data-ttu-id="41aa0-481"><xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A> вызывает COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) функции, которая освобождает память, выделенную с помощью любого из следующих неуправляемых методов: `SysAllocString`, `SysAllocStringByteLen`, `SysAllocStringLen`, `SysReAllocString`, `SysReAllocStringLen`.</span><span class="sxs-lookup"><span data-stu-id="41aa0-481"><xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A> calls the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) function, which frees memory allocated by any of the following unmanaged methods: `SysAllocString`, `SysAllocStringByteLen`, `SysAllocStringLen`, `SysReAllocString`, `SysReAllocStringLen`.</span></span> <span data-ttu-id="41aa0-482">Может вызывать неуправляемый методы, такие, как с помощью вызова неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-482">You can call unmanaged methods such as these with platform invoke.</span></span> <span data-ttu-id="41aa0-483">Дополнительные сведения см. в разделе [использование неуправляемых функций DLL](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="41aa0-483">For details, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-484">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-484">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-485">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-485">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="FreeCoTaskMem">
      <MemberSignature Language="C#" Value="public static void FreeCoTaskMem (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeCoTaskMem(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeCoTaskMem (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeCoTaskMem(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-486">Адрес освобождаемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-486">The address of the memory to be freed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-487">Освобождает блок памяти, выделенный неуправляемым механизмом распределения памяти для задач COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-487">Frees a block of memory allocated by the unmanaged COM task memory allocator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-488">Можно использовать <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> для освобождения памяти, выделенной с помощью <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A>, или любыми другими неуправляемыми метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-488">You can use <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> to free any memory allocated by <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A>, or any equivalent unmanaged method.</span></span> <span data-ttu-id="41aa0-489">Если `ptr` параметр `null`, метод не выполняет никаких действий.</span><span class="sxs-lookup"><span data-stu-id="41aa0-489">If the `ptr` parameter is `null`, the method does nothing.</span></span>  
  
 <span data-ttu-id="41aa0-490"><xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> предоставляет COM [CoTaskMemFree](http://go.microsoft.com/fwlink/?LinkId=148638) функции, которая освобождает все байты, которые больше не может использовать память, `ptr` указывает параметр.</span><span class="sxs-lookup"><span data-stu-id="41aa0-490"><xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> exposes the COM [CoTaskMemFree](http://go.microsoft.com/fwlink/?LinkId=148638) function, which frees all bytes so that you can no longer use the memory that the `ptr` parameter points to.</span></span>  
  
 <span data-ttu-id="41aa0-491">В дополнение к <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>, <xref:System.Runtime.InteropServices.Marshal> класс предоставляет два других метода освобождения памяти: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> и <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-491">In addition to <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation methods: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-492">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-492">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-493">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-493">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="FreeHGlobal">
      <MemberSignature Language="C#" Value="public static void FreeHGlobal (IntPtr hglobal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeHGlobal(native int hglobal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeHGlobal (hglobal As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeHGlobal(IntPtr hglobal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hglobal" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hglobal">
          <span data-ttu-id="41aa0-494">Дескриптор, возвращенный исходным подходящим вызовом метода <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-494">The handle returned by the original matching call to <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-495">Освобождает память, выделенную ранее из неуправляемой памяти процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-495">Frees memory previously allocated from the unmanaged memory of the process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-496">Можно использовать <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> для освобождения памяти из кучи глобальные, выделенной с помощью <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>, или любыми другими неуправляемыми метод API.</span><span class="sxs-lookup"><span data-stu-id="41aa0-496">You can use <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> to free any memory from the global heap allocated by <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>, or any equivalent unmanaged API method.</span></span> <span data-ttu-id="41aa0-497">Если `hglobal` параметр <xref:System.IntPtr.Zero?displayProperty=nameWithType> метод не выполняет никаких действий.</span><span class="sxs-lookup"><span data-stu-id="41aa0-497">If the `hglobal` parameter is <xref:System.IntPtr.Zero?displayProperty=nameWithType> the method does nothing.</span></span>  
  
 <span data-ttu-id="41aa0-498"><xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> предоставляет [LocalFree](http://go.microsoft.com/fwlink/?LinkId=148640) из Kernel32.DLL, которая освобождает все байты, которые больше не может использовать память, на который указывает `hglobal`.</span><span class="sxs-lookup"><span data-stu-id="41aa0-498"><xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> exposes the [LocalFree](http://go.microsoft.com/fwlink/?LinkId=148640) function from Kernel32.DLL, which frees all bytes so that you can no longer use the memory pointed to by `hglobal`.</span></span>  
  
 <span data-ttu-id="41aa0-499">В дополнение к <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>, <xref:System.Runtime.InteropServices.Marshal> класс предоставляет два других освобождения памяти методов API: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> и <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-499">In addition to <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation API methods: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-500">В следующем примере демонстрируется вызов метода <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-500">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> method.</span></span> <span data-ttu-id="41aa0-501">Данный пример кода является частью большего примера, приведенного для <xref:System.Runtime.InteropServices.Marshal> класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-501">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#4](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#4)]
 [!code-csharp[Marshal#4](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#4)]
 [!code-vb[Marshal#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#4)]  
  
 <span data-ttu-id="41aa0-502">В следующем примере показано, как преобразовать содержимое управляемого <xref:System.String> класса в неуправляемую память, а затем удалить неуправляемой памяти по окончании.</span><span class="sxs-lookup"><span data-stu-id="41aa0-502">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/CPP/stringtohglobalansi.cpp#1)]
 [!code-csharp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/cs/stringtohglobalansi.cs#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-503">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-503">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-504">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-504">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GenerateGuidForType">
      <MemberSignature Language="C#" Value="public static Guid GenerateGuidForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GenerateGuidForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GenerateGuidForType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="41aa0-505">Тип, для которого создается идентификатор GUID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-505">The type to generate a GUID for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-506">Возвращает уникальный глобальный идентификатор GUID для указанного типа или создает идентификатор GUID при помощи алгоритма, используемого средством экспортирования библиотек типов Tlbexp.exe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-506">Returns the globally unique identifier (GUID) for the specified type, or generates a GUID using the algorithm used by the Type Library Exporter (Tlbexp.exe).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-507">Идентификатор для указанного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-507">An identifier for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-508">Если тип содержит идентификатор GUID в метаданных, он возвращается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-508">If the type has a GUID in the metadata, it is returned.</span></span> <span data-ttu-id="41aa0-509">В противном случае — идентификатор GUID формируется автоматически.</span><span class="sxs-lookup"><span data-stu-id="41aa0-509">Otherwise, a GUID is automatically generated.</span></span> <span data-ttu-id="41aa0-510">Этот метод можно использовать для программного определения идентификатора GUID COM для всех управляемых типов, включая недоступные для COM типы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-510">You can use this method to programmatically determine the COM GUID for any managed type, including COM-invisible types.</span></span> <span data-ttu-id="41aa0-511">Единственным исключением являются интерфейсы класса, так как они не соответствуют управляемому типу.</span><span class="sxs-lookup"><span data-stu-id="41aa0-511">Class interfaces are the only exception because they do not correspond to a managed type.</span></span> <span data-ttu-id="41aa0-512"><xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A> предоставляет те же функциональные возможности, как <xref:System.Type.GUID%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="41aa0-512"><xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A> provides the same functionality as the <xref:System.Type.GUID%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-513">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-513">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-514">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-514">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Type.GUID" />
      </Docs>
    </Member>
    <Member MemberName="GenerateProgIdForType">
      <MemberSignature Language="C#" Value="public static string GenerateProgIdForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateProgIdForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateProgIdForType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="41aa0-515">Тип, для которого требуется получить программный идентификатор (ProgID).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-515">The type to get a ProgID for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-516">Возвращает программный идентификатор ProgID для указанного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-516">Returns a programmatic identifier (ProgID) for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-517">Идентификатор ProgID для указанного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-517">The ProgID of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-518">Если тип имеет идентификатор ProgID в метаданных, возвращается этот идентификатор.</span><span class="sxs-lookup"><span data-stu-id="41aa0-518">If the type has a ProgID in the metadata, that ProgID is returned.</span></span> <span data-ttu-id="41aa0-519">В противном случае создается идентификатор ProgID основании полное имя типа.</span><span class="sxs-lookup"><span data-stu-id="41aa0-519">Otherwise, a ProgID is generated based on the fully qualified name of the type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-520">Параметр <paramref name="type" /> не является классом, который может быть создан с помощью COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-520">The <paramref name="type" /> parameter is not a class that can be create by COM.</span>
          </span>
          <span data-ttu-id="41aa0-521">Класс должен быть открытым, иметь публичный конструктор по умолчанию, а также быть доступным для COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-521">The class must be public, have a public default constructor, and be COM visible.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-522">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-522">The <paramref name="type" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-523">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-523">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-524">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-524">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetActiveObject">
      <MemberSignature Language="C#" Value="public static object GetActiveObject (string progID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetActiveObject(string progID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveObject (progID As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetActiveObject(System::String ^ progID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progID">
          <span data-ttu-id="41aa0-525">Программный идентификатор (ProgID) запрошенного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-525">The programmatic identifier (ProgID) of the object that was requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-526">Получает выполняющийся экземпляр указанного объекта из таблицы запущенных объектов (ROT).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-526">Obtains a running instance of the specified object from the running object table (ROT).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-527">Запрошенный объект. В противном случае — значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-527">The object that was requested; otherwise <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-528">Этот объект может быть приведен к любому интерфейсу COM, поддерживаемому этим объектом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-528">You can cast this object to any COM interface that it supports.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-529"><xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> предоставляет COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) функции из динамической библиотеки OLEAUT32. DLL. Однако последняя ожидает идентификатор класса (CLSID) вместо программный идентификатор (`ProgID`) ожидается с помощью данного метода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-529"><xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> exposes the COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) function from OLEAUT32.DLL; however, the latter expects a class identifier (CLSID) instead of the programmatic identifier (`ProgID`) expected by this method.</span></span> <span data-ttu-id="41aa0-530">Чтобы получить запущенный экземпляр COM-объекта без зарегистрированного `ProgID`, используйте неуправляемого кода для определения COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) функции.</span><span class="sxs-lookup"><span data-stu-id="41aa0-530">To obtain a running instance of a COM object without a registered `ProgID`, use platform invoke to define the COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) function.</span></span> <span data-ttu-id="41aa0-531">Описание платформы вызова неуправляемого кода см. в разделе [использование неуправляемых функций DLL](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="41aa0-531">For a description of platform invoke, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
## <a name="progid-and-clsid"></a><span data-ttu-id="41aa0-532">Идентификатор progID и CLSID</span><span class="sxs-lookup"><span data-stu-id="41aa0-532">ProgID and CLSID</span></span>  
 <span data-ttu-id="41aa0-533">Разделы поддерева реестра HKEY_CLASSES_ROOT содержат различные типы вложенных разделов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-533">Keys in the HKEY_CLASSES_ROOT subtree of the registry contain a variety of subkey types.</span></span> <span data-ttu-id="41aa0-534">Большинство из подразделов, являются идентификаторы ProgID, которые сопоставляют понятную строку с идентификатором CLSID.</span><span class="sxs-lookup"><span data-stu-id="41aa0-534">Most of the subkeys are ProgIDs, which map a user-friendly string to a CLSID.</span></span> <span data-ttu-id="41aa0-535">Приложения часто используют эти строки в удобное для восприятия вместо числовых идентификаторов CLSID.</span><span class="sxs-lookup"><span data-stu-id="41aa0-535">Applications often use these human-readable strings instead of the numeric CLSIDs.</span></span> <span data-ttu-id="41aa0-536">Часто компонент имеет независимый от версии идентификатор ProgID, сопоставленный до последней версии компонента, установленного в системе.</span><span class="sxs-lookup"><span data-stu-id="41aa0-536">Often, a component has a version-independent ProgID that is mapped to the latest version of the component that is installed on the system.</span></span>  
  
 <span data-ttu-id="41aa0-537">Приложений и компонентов в первую очередь для получения соответствующих идентификаторов CLSID использовать идентификаторы ProgID.</span><span class="sxs-lookup"><span data-stu-id="41aa0-537">Applications and components primarily use ProgIDs to retrieve their corresponding CLSIDs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-538">Следующий пример был запущен на компьютере, который был настроен с запущенным экземпляром Microsoft Word.</span><span class="sxs-lookup"><span data-stu-id="41aa0-538">The following example was run on a computer that was configured with a running instance of Microsoft Word.</span></span> <span data-ttu-id="41aa0-539">Возникли экземпляры не под управлением Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="41aa0-539">There were no instances of Microsoft Excel running.</span></span>  
  
 <span data-ttu-id="41aa0-540">В примере вызывается <xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> дважды.</span><span class="sxs-lookup"><span data-stu-id="41aa0-540">The example calls <xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> twice.</span></span> <span data-ttu-id="41aa0-541">Первый вызов пытается получить ссылку на экземпляр Microsoft Word (экземпляр `Word.Application` объекта).</span><span class="sxs-lookup"><span data-stu-id="41aa0-541">The first call tries to retrieve a reference to an instance of Microsoft Word (an instance of the `Word.Application` object).</span></span> <span data-ttu-id="41aa0-542">Второй вызов пытается получить ссылку на экземпляр Microsoft Excel (экземпляр `Excel.Application` объекта).</span><span class="sxs-lookup"><span data-stu-id="41aa0-542">The second call tries to retrieve a reference to an instance of Microsoft Excel (an instance of an `Excel.Application` object).</span></span>  
  
 <span data-ttu-id="41aa0-543">Код успешно получает ссылку на экземпляр Microsoft Word.</span><span class="sxs-lookup"><span data-stu-id="41aa0-543">The code retrieves a reference to an instance of Microsoft Word successfully.</span></span> <span data-ttu-id="41aa0-544">Однако, поскольку Microsoft Excel не выполняется, попытка получить второй объект вызывает <xref:System.Runtime.InteropServices.COMException>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-544">However, because Microsoft Excel is not running, the attempt to retrieve the second object raises a <xref:System.Runtime.InteropServices.COMException>.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.Marshal.GetActiveObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.marshal.getactiveobject/cs/marshal.getactiveobject.cs#1)]
 [!code-vb[System.Runtime.InteropServices.Marshal.GetActiveObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.marshal.getactiveobject/vb/marshal.getactiveobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="41aa0-545">Объект не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-545">The object was not found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-546">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-546">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-547">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-547">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComInterfaceForObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-548">Возвращает указатель интерфейса, представляющий интерфейс для объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-548">Returns an interface pointer that represents an interface for an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComInterfaceForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject (object o, Type T);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject(object o, class System.Type T) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject (o As Object, T As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObject(System::Object ^ o, Type ^ T);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="T" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="41aa0-549">Объект, предоставляющий интерфейс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-549">The object that provides the interface.</span>
          </span>
        </param>
        <param name="T">
          <span data-ttu-id="41aa0-550">Тип запрашиваемого интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-550">The type of interface that is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-551">Возвращает указатель на интерфейс [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003), представляющий указанный интерфейс заданного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-551">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on the specified object.</span>
          </span>
          <span data-ttu-id="41aa0-552">Доступ к настраиваемому интерфейсу запросов включен по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-552">Custom query interface access is enabled by default.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-553">Указатель интерфейса, представляющий заданный интерфейс для объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-553">The interface pointer that represents the specified interface for the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-554">Этот метод возвращает указатель интерфейса, представляющий запрошенный интерфейс для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-554">This method returns an interface pointer that represents the requested interface on the specified object.</span></span> <span data-ttu-id="41aa0-555">Это особенно полезно, если у вас есть неуправляемый метод, который ожидает передачи указателя на интерфейс.</span><span class="sxs-lookup"><span data-stu-id="41aa0-555">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span> <span data-ttu-id="41aa0-556">Вызов объекта с помощью этого метода приводит к увеличению в указателе на интерфейс, перед возвращением указателя счетчика ссылок.</span><span class="sxs-lookup"><span data-stu-id="41aa0-556">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="41aa0-557">Всегда используйте <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> для уменьшения числа ссылок после завершения с указателем.</span><span class="sxs-lookup"><span data-stu-id="41aa0-557">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="41aa0-558">Вы должны соблюдать правила, определенные в модели COM, при использовании необработанных указателей интерфейса СОМ.</span><span class="sxs-lookup"><span data-stu-id="41aa0-558">You must adhere to the rules defined by COM when using raw COM interface pointers.</span></span>  
  
 <span data-ttu-id="41aa0-559"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> полезно при вызове метода, предоставляющего параметр объекта COM, как <xref:System.IntPtr> типа, или с настраиваемым маршалингом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-559"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="41aa0-560">Несмотря на меньшее распространение, этот метод можно использовать для управляемых объектов для получения указателя на вызываемую оболочку COM объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-560">Although less common, you can use this method on a managed object to obtain a pointer to the object's COM callable wrapper.</span></span> <span data-ttu-id="41aa0-561">Например, можно использовать <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> на управляемый объект, который экспортируется в COM, чтобы получить указатель на интерфейс для <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-561">For example, you can use <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> on a managed object that is exported to COM to obtain an interface pointer for <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span></span> <span data-ttu-id="41aa0-562">Не удается получить указатель на интерфейс класса, так как у интерфейса класса отсутствует соответствующий тип для передачи второго параметра (`t`).</span><span class="sxs-lookup"><span data-stu-id="41aa0-562">You cannot obtain a pointer to a class interface since a class interface lacks the corresponding type to pass to the second parameter (`t`).</span></span> <span data-ttu-id="41aa0-563">Вместо этого используйте <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> для вызова членов в интерфейс по умолчанию для вызываемой оболочки COM, который обычно является интерфейсом auto dispatch класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-563">Instead, use <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to invoke the members on the default interface of the COM callable wrapper, which is usually an auto-dispatch class interface.</span></span>  
  
 <span data-ttu-id="41aa0-564"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> Перегруженный метод позволяет настройку запроса интерфейс по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="41aa0-564">The <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> method overload allows query interface customization by default.</span></span> <span data-ttu-id="41aa0-565">Чтобы указать, следует ли применять настройку интерфейс запроса, используйте <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-565">To specify whether to apply query interface customization, use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> method overload.</span></span>  
  
 <span data-ttu-id="41aa0-566">Дополнительные сведения см. в разделе [вызываемая оболочка COM](~/docs/framework/interop/com-callable-wrapper.md), [вызываемой оболочки времени выполнения](~/docs/framework/interop/runtime-callable-wrapper.md), и [введение в интерфейс класса](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) разделы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-566">For additional information, see the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), and [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-567">Параметр <typeparamref name="T" /> не является интерфейсом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-567">The <typeparamref name="T" /> parameter is not an interface.</span>
          </span>
          <span data-ttu-id="41aa0-568">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-568">-or-</span>
          </span>
          <span data-ttu-id="41aa0-569">Тип недоступен для COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-569">The type is not visible to COM.</span>
          </span>
          <span data-ttu-id="41aa0-570">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-570">-or-</span>
          </span>
          <span data-ttu-id="41aa0-571">Параметр <typeparamref name="T" /> является определением универсального типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-571">The <typeparamref name="T" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="41aa0-572">Параметр <paramref name="o" /> не поддерживает запрошенный интерфейс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-572">The <paramref name="o" /> parameter does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-573">Параметр <paramref name="o" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-573">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-574">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-574">-or-</span>
          </span>
          <span data-ttu-id="41aa0-575">Параметр <typeparamref name="T" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-575">The <typeparamref name="T" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-576">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-576">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-577">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-577">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMIConnectionPointContainer" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject (object o, Type T, System.Runtime.InteropServices.CustomQueryInterfaceMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject(object o, class System.Type T, valuetype System.Runtime.InteropServices.CustomQueryInterfaceMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject (o As Object, T As Type, mode As CustomQueryInterfaceMode) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObject(System::Object ^ o, Type ^ T, System::Runtime::InteropServices::CustomQueryInterfaceMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="T" Type="System.Type" />
        <Parameter Name="mode" Type="System.Runtime.InteropServices.CustomQueryInterfaceMode" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="41aa0-578">Объект, предоставляющий интерфейс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-578">The object that provides the interface.</span>
          </span>
        </param>
        <param name="T">
          <span data-ttu-id="41aa0-579">Тип запрашиваемого интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-579">The type of interface that is requested.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="41aa0-580">Одно из значений перечисления, определяющее, нужно ли применять пользовательскую настройку <see langword="IUnknown::QueryInterface" />, предоставленную в интерфейсе <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-580">One of the enumeration values that indicates whether to apply an <see langword="IUnknown::QueryInterface" /> customization that is supplied by an <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-581">Возвращает указатель на интерфейс [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003), представляющий указанный интерфейс заданного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-581">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on the specified object.</span>
          </span>
          <span data-ttu-id="41aa0-582">Доступ к настраиваемому интерфейсу запросов контролируется указанным режимом настройки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-582">Custom query interface access is controlled by the specified customization mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-583">Указатель интерфейса, представляющий интерфейс для объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-583">The interface pointer that represents the interface for the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-584"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> позволяет указать, следует ли применять интерфейс настройку запроса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-584"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> lets you specify whether to apply query interface customization.</span></span> <span data-ttu-id="41aa0-585">Используйте <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> перегрузку, чтобы применить настройку запроса интерфейс по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="41aa0-585">Use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> overload to apply query interface customization by default.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-586">Параметр <typeparamref name="T" /> не является интерфейсом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-586">The <typeparamref name="T" /> parameter is not an interface.</span>
          </span>
          <span data-ttu-id="41aa0-587">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-587">-or-</span>
          </span>
          <span data-ttu-id="41aa0-588">Тип недоступен для COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-588">The type is not visible to COM.</span>
          </span>
          <span data-ttu-id="41aa0-589">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-589">-or-</span>
          </span>
          <span data-ttu-id="41aa0-590">Параметр <typeparamref name="T" /> является определением универсального типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-590">The <typeparamref name="T" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="41aa0-591">Объект <paramref name="o" /> не поддерживает запрошенный интерфейс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-591">The object <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-592">Параметр <paramref name="o" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-592">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-593">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-593">-or-</span>
          </span>
          <span data-ttu-id="41aa0-594">Параметр <typeparamref name="T" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-594">The <typeparamref name="T" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-595">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-595">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-596">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-596">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObject&lt;T,TInterface&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject&lt;T,TInterface&gt; (T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject&lt;T, TInterface&gt;(!!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject(Of T, TInterface) (o As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TInterface&gt;&#xA; static IntPtr GetComInterfaceForObject(T o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TInterface" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41aa0-597">Тип <c>o</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-597">The type of <c>o</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TInterface">
          <span data-ttu-id="41aa0-598">Тип возвращаемых интерфейсов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-598">The type of interface to return.</span>
          </span>
        </typeparam>
        <param name="o">
          <span data-ttu-id="41aa0-599">Объект, предоставляющий интерфейс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-599">The object that provides the interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-600">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-600">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-601">Возвращает указатель на интерфейс [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003), представляющий указанный интерфейс объекта заданного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-601">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on an object of the specified type.</span>
          </span>
          <span data-ttu-id="41aa0-602">Доступ к настраиваемому интерфейсу запросов включен по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-602">Custom query interface access is enabled by default.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-603">Указатель интерфейса, представляющий интерфейс <paramref name="TInterface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-603">The interface pointer that represents the <paramref name="TInterface" /> interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-604">Этот метод возвращает указатель интерфейса, представляющий `TInterface` интерфейс для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-604">This method returns an interface pointer that represents the `TInterface` interface on the specified object.</span></span> <span data-ttu-id="41aa0-605">Это особенно полезно, если у вас есть неуправляемый метод, который ожидает передачи указателя на интерфейс.</span><span class="sxs-lookup"><span data-stu-id="41aa0-605">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span> <span data-ttu-id="41aa0-606">Вызов объекта с помощью этого метода приводит к увеличению в указателе на интерфейс, перед возвращением указателя счетчика ссылок.</span><span class="sxs-lookup"><span data-stu-id="41aa0-606">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="41aa0-607">Всегда используйте <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> способ уменьшения числа ссылок после завершения с указателем.</span><span class="sxs-lookup"><span data-stu-id="41aa0-607">Always use the <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> method to decrement the reference count when you have finished with the pointer.</span></span> <span data-ttu-id="41aa0-608">Вы должны соблюдать правила, определенные в модели COM, при использовании необработанных указателей интерфейса СОМ.</span><span class="sxs-lookup"><span data-stu-id="41aa0-608">You must adhere to the rules defined by COM when using raw COM interface pointers.</span></span>  
  
 <span data-ttu-id="41aa0-609"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> полезно при вызове метода, предоставляющего параметр объекта COM, как <xref:System.IntPtr> типа, или с настраиваемым маршалингом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-609"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="41aa0-610">Можно также использовании этого метода для управляемых объектов для получения указателя на объект вызываемой оболочки COM, несмотря на то что реже.</span><span class="sxs-lookup"><span data-stu-id="41aa0-610">You can also use this method on a managed object to obtain a pointer to the object's COM callable wrapper, although this is less common.</span></span> <span data-ttu-id="41aa0-611">Например, можно использовать <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> на управляемый объект, который экспортируется в COM, чтобы получить указатель на интерфейс для <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-611">For example, you can use <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> on a managed object that is exported to COM to obtain an interface pointer for <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="41aa0-612"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> Перегруженный метод позволяет настройку запроса интерфейс по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="41aa0-612">The <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> method overload allows query interface customization by default.</span></span> <span data-ttu-id="41aa0-613">Чтобы указать, следует ли применять настройку интерфейс запроса, используйте <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-613">To specify whether to apply query interface customization, use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> method overload.</span></span>  
  
 <span data-ttu-id="41aa0-614">Дополнительные сведения см. в разделе [вызываемая оболочка COM](~/docs/framework/interop/com-callable-wrapper.md), [вызываемой оболочки времени выполнения](~/docs/framework/interop/runtime-callable-wrapper.md), и [введение в интерфейс класса](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) разделы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-614">For additional information, see the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), and [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-615">Параметр <paramref name="TInterface" /> не является интерфейсом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-615">The <paramref name="TInterface" /> parameter is not an interface.</span>
          </span>
          <span data-ttu-id="41aa0-616">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-616">-or-</span>
          </span>
          <span data-ttu-id="41aa0-617">Тип недоступен для COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-617">The type is not visible to COM.</span>
          </span>
          <span data-ttu-id="41aa0-618">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-618">-or-</span>
          </span>
          <span data-ttu-id="41aa0-619">Параметр <typeparamref name="T" />  является открытым универсальным типом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-619">The <typeparamref name="T" /> parameter is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="41aa0-620">Параметр <paramref name="o" /> не поддерживает интерфейс <paramref name="TInterface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-620">The <paramref name="o" /> parameter does not support the <paramref name="TInterface" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-621">Параметр <paramref name="o" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-621">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-622">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-622">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-623">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-623">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObjectInContext (object o, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObjectInContext(object o, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObjectInContext (o As Object, t As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObjectInContext(System::Object ^ o, Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="41aa0-624">Объект, предоставляющий интерфейс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-624">The object that provides the interface.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="41aa0-625">Тип запрашиваемого интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-625">The type of interface that is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-626">Возвращает указатель интерфейса, представляющий заданный интерфейс для объекта, если вызывающий объект находится в том же контексте, что и данный объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-626">Returns an interface pointer that represents the specified interface for an object, if the caller is in the same context as that object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-627">Указатель интерфейса, заданный параметром <paramref name="t" />, который представляет интерфейс для заданного объекта, или значение <see langword="null" />, если контекст вызывающего объекта отличается от контекста данного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-627">The interface pointer specified by <paramref name="t" /> that represents the interface for the specified object, or <see langword="null" /> if the caller is not in the same context as the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-628">Этот метод является таким же, как <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A> за исключением того, что он возвращает `null` Если вызывающий объект не находится в том же контексте, что и объект.</span><span class="sxs-lookup"><span data-stu-id="41aa0-628">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span> <span data-ttu-id="41aa0-629">Это особенно полезно, если у вас есть неуправляемый метод, который ожидает передачи указателя на интерфейс.</span><span class="sxs-lookup"><span data-stu-id="41aa0-629">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-630">Параметр <paramref name="t" /> не является интерфейсом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-630">
              <paramref name="t" /> is not an interface.</span>
          </span>
          <span data-ttu-id="41aa0-631">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-631">-or-</span>
          </span>
          <span data-ttu-id="41aa0-632">Тип недоступен для COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-632">The type is not visible to COM.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="41aa0-633">Параметр <paramref name="o" /> не поддерживает запрошенный интерфейс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-633">
              <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-634">Свойство <paramref name="o" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-634">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-635">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-635">-or-</span>
          </span>
          <span data-ttu-id="41aa0-636">Свойство <paramref name="t" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-636">
              <paramref name="t" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-637">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-637">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-638">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-638">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMIConnectionPointContainer" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComObjectData">
      <MemberSignature Language="C#" Value="public static object GetComObjectData (object obj, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetComObjectData(object obj, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComObjectData (obj As Object, key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetComObjectData(System::Object ^ obj, System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="41aa0-639">COM-объект, содержащий требуемые данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-639">The COM object that contains the data that you want.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="41aa0-640">Ключ во внутренней хэш-таблице <c>obj</c>, из которой необходимо извлечь данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-640">The key in the internal hash table of <c>obj</c> to retrieve the data from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-641">Извлекает данные, на которые ссылается заданный ключ из указанного COM-объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-641">Retrieves data that is referenced by the specified key from the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-642">Данные, представленные параметром <paramref name="key" /> в параметре <paramref name="obj" /> внутренней хэш-таблице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-642">The data represented by the <paramref name="key" /> parameter in the internal hash table of the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-643">Все COM-объекты в оболочку [вызываемой оболочки времени выполнения](~/docs/framework/interop/runtime-callable-wrapper.md) связанные-хэш таблица, <xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A> извлекает.</span><span class="sxs-lookup"><span data-stu-id="41aa0-643">All COM objects wrapped in a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) have an associated hash table, which <xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A> retrieves.</span></span> <span data-ttu-id="41aa0-644"><xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType> Добавляет данные в хэш-таблицу.</span><span class="sxs-lookup"><span data-stu-id="41aa0-644"><xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType> adds data to the hash table.</span></span> <span data-ttu-id="41aa0-645">Никогда не требуется для вызова любого метода из кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-645">You should never have to call either method from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-646">Свойство <paramref name="obj" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-646">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-647">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-647">-or-</span>
          </span>
          <span data-ttu-id="41aa0-648">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-648">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-649">
            <paramref name="obj" /> не является COM-объектом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-649">
              <paramref name="obj" /> is not a COM object.</span>
          </span>
          <span data-ttu-id="41aa0-650">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-650">-or-</span>
          </span>
          <span data-ttu-id="41aa0-651">
            <paramref name="obj" /> является объектом [!INCLUDE[wrt](~/includes/wrt-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-651">
              <paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-652">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-652">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-653">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-653">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComSlotForMethodInfo">
      <MemberSignature Language="C#" Value="public static int GetComSlotForMethodInfo (System.Reflection.MemberInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetComSlotForMethodInfo(class System.Reflection.MemberInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComSlotForMethodInfo (m As MemberInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetComSlotForMethodInfo(System::Reflection::MemberInfo ^ m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="41aa0-654">Объект, представляющий метод интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-654">An object that represents an interface method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-655">Извлекает ячейку таблицы виртуальных функций (VTBL) для указанного типа <see cref="T:System.Reflection.MemberInfo" />, если он предоставлен модели COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-655">Retrieves the virtual function table (v-table or VTBL) slot for a specified <see cref="T:System.Reflection.MemberInfo" /> type when that type is exposed to COM.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-656">Идентификатор <paramref name="m" /> ячейки таблицы виртуальных функций (VTBL), если он предоставлен модели COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-656">The VTBL slot <paramref name="m" /> identifier when it is exposed to COM.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-657">Номер слота (с нуля), возвращенный учетными записями метода для трех [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) и возможно четыре [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) методы, сделав его значение первого доступного слота значение 3 или 7.</span><span class="sxs-lookup"><span data-stu-id="41aa0-657">The zero-based slot number returned by this method accounts for three [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) and possibly four [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) methods, making the value of the first available slot either 3 or 7.</span></span> <span data-ttu-id="41aa0-658"><xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-658"><xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="41aa0-659">Этот метод используется для извлечения номеров ячеек элементов интерфейсов, которые не видны из COM и для членов частных интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-659">You can use this method to retrieve slot numbers for members of interfaces that are not visible from COM and for members of private interfaces.</span></span> <span data-ttu-id="41aa0-660">Возвращенные номера ячеек соответствуют номерам v-table, резервируются, если тип был предоставлен модели COM.</span><span class="sxs-lookup"><span data-stu-id="41aa0-660">The slot numbers returned correspond to the v-table numbers that would be reserved if the type was exposed to COM.</span></span> <span data-ttu-id="41aa0-661">Недоступные для COM члены обычно занимают ячейку в v таблице, даже если клиент COM не может использовать области памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-661">COM-invisible members actually occupy a slot in an exposed v-table, even though the COM client cannot use the slot.</span></span> <span data-ttu-id="41aa0-662">Нельзя использовать <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> в интерфейсе класса, передавая <xref:System.Reflection.MemberInfo> из класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-662">You cannot use <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> on a class interface by passing <xref:System.Reflection.MemberInfo> from a class.</span></span> <span data-ttu-id="41aa0-663">Дополнительные сведения см. в разделе [введение в интерфейс класса](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span><span class="sxs-lookup"><span data-stu-id="41aa0-663">For additional information, see [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-664">Параметр <paramref name="m" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-664">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-665">Параметр <paramref name="m" /> не является объектом <see cref="T:System.Reflection.MemberInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-665">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MemberInfo" /> object.</span>
          </span>
          <span data-ttu-id="41aa0-666">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-666">-or-</span>
          </span>
          <span data-ttu-id="41aa0-667">Параметр <paramref name="m" /> не является методом интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-667">The <paramref name="m" /> parameter is not an interface method.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-668">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-668">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-669">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-669">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetDelegateForFunctionPointer">
      <MemberSignature Language="C#" Value="public static Delegate GetDelegateForFunctionPointer (IntPtr ptr, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate GetDelegateForFunctionPointer(native int ptr, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateForFunctionPointer (ptr As IntPtr, t As Type) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ GetDelegateForFunctionPointer(IntPtr ptr, Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-670">Указатель на неуправляемую функцию, который требуется преобразовать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-670">The unmanaged function pointer to be converted.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="41aa0-671">Тип возвращаемого делегата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-671">The type of the delegate to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-672">Преобразует указатель на неуправляемую функцию в делегат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-672">Converts an unmanaged function pointer to a delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-673">Экземпляр делегата, который может быть приведен к соответствующему типу делегата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-673">A delegate instance that can be cast to the appropriate delegate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-674">В версиях 1.0 и 1.1 платформы .NET Framework можно было передавать делегата, представляющего управляемый метод в неуправляемый код как указатель на функцию, позволяя неуправляемого кода для вызова управляемого метода через указатель функции.</span><span class="sxs-lookup"><span data-stu-id="41aa0-674">In versions 1.0 and 1.1 of the .NET Framework, it was possible to pass a delegate representing a managed method to unmanaged code as a function pointer, allowing the unmanaged code to call the managed method through the function pointer.</span></span> <span data-ttu-id="41aa0-675">Также можно было для неуправляемого кода передать указатель на функцию в управляемом коде, а указатель преобразовывался в базовый управляемый метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-675">It was also possible for the unmanaged code to pass that function pointer back to the managed code, and the pointer was resolved properly to the underlying managed method.</span></span>  
  
 <span data-ttu-id="41aa0-676">В .NET Framework 2.0 и более поздних версий, можно использовать <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> и <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> методы для маршалинга делегатов в обоих направлениях.</span><span class="sxs-lookup"><span data-stu-id="41aa0-676">In the .NET Framework 2.0 and later versions, you can use the <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> and <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> methods to marshal delegates in both directions.</span></span> <span data-ttu-id="41aa0-677">С <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>, `ptr` импортируются как <xref:System.IntPtr?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-677">With <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>, `ptr` is imported as a <xref:System.IntPtr?displayProperty=nameWithType>.</span></span> <span data-ttu-id="41aa0-678">Объект <xref:System.IntPtr?displayProperty=nameWithType> можно получить путем вызова для управляемый делегат <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> и передается как параметр; он может затем быть вызван внутри неуправляемого метода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-678">A <xref:System.IntPtr?displayProperty=nameWithType> can be obtained for a managed delegate by calling <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> and passed as a parameter; it can then be called from inside the unmanaged method.</span></span> <span data-ttu-id="41aa0-679">Обратите внимание, что упаковщик параметров может также маршалировать указателей на функции в делегаты в .NET Framework 2.0 и более поздних версиях.</span><span class="sxs-lookup"><span data-stu-id="41aa0-679">Note that the parameter marshaler can also marshal function pointers to delegates in the .NET Framework 2.0 and later versions.</span></span>  
  
 <span data-ttu-id="41aa0-680"><xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> Метод имеет следующие ограничения:</span><span class="sxs-lookup"><span data-stu-id="41aa0-680">The <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> method has the following restrictions:</span></span>  
  
-   <span data-ttu-id="41aa0-681">Универсальные шаблоны не поддерживаются в сценариях взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="41aa0-681">Generics are not supported in interop scenarios.</span></span>  
  
-   <span data-ttu-id="41aa0-682">Этот метод нельзя передать недопустимый указатель функции.</span><span class="sxs-lookup"><span data-stu-id="41aa0-682">You cannot pass an invalid function pointer to this method.</span></span>  
  
-   <span data-ttu-id="41aa0-683">Этот метод можно использовать только для чистых неуправляемым указателям на функции.</span><span class="sxs-lookup"><span data-stu-id="41aa0-683">You can use this method only for pure unmanaged function pointers.</span></span>  
  
-   <span data-ttu-id="41aa0-684">Этот метод нельзя использовать с указателями на функции, полученные в C++ или от <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-684">You cannot use this method with function pointers obtained through C++ or from the <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> method.</span></span>  
  
-   <span data-ttu-id="41aa0-685">Этот метод нельзя использовать для создания делегата из указателя на функцию для другого управляемого делегата.</span><span class="sxs-lookup"><span data-stu-id="41aa0-685">You cannot use this method to create a delegate from a function pointer to another managed delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-686">Параметр <paramref name="t" /> не является делегатом или является универсальным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-686">The <paramref name="t" /> parameter is not a delegate or is generic.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-687">Параметр <paramref name="ptr" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-687">The <paramref name="ptr" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-688">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-688">-or-</span>
          </span>
          <span data-ttu-id="41aa0-689">Параметр <paramref name="t" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-689">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-690">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-690">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-691">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-691">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetDelegateForFunctionPointer&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static TDelegate GetDelegateForFunctionPointer&lt;TDelegate&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TDelegate GetDelegateForFunctionPointer&lt;TDelegate&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateForFunctionPointer(Of TDelegate) (ptr As IntPtr) As TDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static TDelegate GetDelegateForFunctionPointer(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TDelegate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="41aa0-692">Тип возвращаемого делегата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-692">The type of the delegate to return.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="41aa0-693">Указатель на неуправляемую функцию, который требуется преобразовать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-693">The unmanaged function pointer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-694">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-694">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-695">Преобразует указатель на неуправляемую функцию в делегат указанного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-695">Converts an unmanaged function pointer to a delegate of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-696">Экземпляр делегата указанного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-696">A instance of the specified delegate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-697">Можно использовать <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> и <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29> методы для маршалинга делегатов в обоих направлениях.</span><span class="sxs-lookup"><span data-stu-id="41aa0-697">You can use the <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> and <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29> methods to marshal delegates in both directions.</span></span>  
  
 <span data-ttu-id="41aa0-698"><xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> Метод имеет следующие ограничения:</span><span class="sxs-lookup"><span data-stu-id="41aa0-698">The <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> method has the following restrictions:</span></span>  
  
-   <span data-ttu-id="41aa0-699">Этот метод нельзя передать недопустимый указатель функции.</span><span class="sxs-lookup"><span data-stu-id="41aa0-699">You cannot pass an invalid function pointer to this method.</span></span>  
  
-   <span data-ttu-id="41aa0-700">Этот метод можно использовать только для чистых неуправляемым указателям на функции.</span><span class="sxs-lookup"><span data-stu-id="41aa0-700">You can use this method only for pure unmanaged function pointers.</span></span>  
  
-   <span data-ttu-id="41aa0-701">Этот метод нельзя использовать с указателями на функции, полученные в C++ или от <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-701">You cannot use this method with function pointers obtained through C++ or from the <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> method.</span></span>  
  
-   <span data-ttu-id="41aa0-702">Этот метод нельзя использовать для создания делегата из указателя на функцию для другого управляемого делегата.</span><span class="sxs-lookup"><span data-stu-id="41aa0-702">You cannot use this method to create a delegate from a function pointer to another managed delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-703">Параметр <paramref name="TDelegate" /> не является делегатом или является открытым универсальным типом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-703">The <paramref name="TDelegate" /> generic parameter is not a delegate, or it is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-704">Параметр <paramref name="ptr" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-704">The <paramref name="ptr" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-705">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-705">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-706">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-706">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetEndComSlot">
      <MemberSignature Language="C#" Value="public static int GetEndComSlot (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetEndComSlot(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEndComSlot (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetEndComSlot(Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="41aa0-707">Тип, представляющий интерфейс или класс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-707">A type that represents an interface or class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-708">Извлекает последнюю ячейку таблицы виртуальных функций (VTBL) для типа, если он предоставлен модели COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-708">Retrieves the last slot in the virtual function table (v-table or VTBL) of a type when exposed to COM.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-709">Последняя ячейка таблицы виртуальных функций (VTBL) интерфейса, если он предоставлен модели COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-709">The last VTBL slot of the interface when exposed to COM.</span>
          </span>
          <span data-ttu-id="41aa0-710">Если параметр <paramref name="t" /> является классом, возвращенная ячейка таблицы VTBL будет последней ячейкой для интерфейса, созданного из класса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-710">If the <paramref name="t" /> parameter is a class, the returned VTBL slot is the last slot in the interface that is generated from the class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-711">Этот метод возвращает отсчитываемый от нуля, число v-table для интерфейса или класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-711">This method returns the zero-based, v-table number for an interface or a class.</span></span> <span data-ttu-id="41aa0-712">При использовании для класса возвращенный номер ячейки ссылается интерфейс класса для класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-712">When used on a class, the slot number returned refers to the class interface for the class.</span></span> <span data-ttu-id="41aa0-713">Если интерфейс класса является автоматически сдвоенным, этот метод всегда возвращает значение -1, что интерфейс диспетчеризации не предоставляет управляемым клиентам v таблицу.</span><span class="sxs-lookup"><span data-stu-id="41aa0-713">If the class interface is auto-dual, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</span></span> <span data-ttu-id="41aa0-714">Можно использовать <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A> и <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> в сочетании с <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> для передачи ячеек в указанном диапазоне.</span><span class="sxs-lookup"><span data-stu-id="41aa0-714">You can use <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A> and <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> to pass slots within a specified range.</span></span> <span data-ttu-id="41aa0-715">Дополнительные сведения см. в разделе [введение в интерфейс класса](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span><span class="sxs-lookup"><span data-stu-id="41aa0-715">For additional information, see [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-716">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-716">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-717">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-717">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionCode">
      <MemberSignature Language="C#" Value="public static int GetExceptionCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetExceptionCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetExceptionCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-718">Извлекает код, определяющий тип возникшего исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-718">Retrieves a code that identifies the type of the exception that occurred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-719">Тип исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-719">The type of the exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-720"><xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A> предоставляется для поддержки компилятора структурированную обработку исключений (SEH только).</span><span class="sxs-lookup"><span data-stu-id="41aa0-720"><xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A> is exposed for compiler support of structured exception handling (SEH) only.</span></span> <span data-ttu-id="41aa0-721">Если этот метод вызывается перед возникает исключение, он возвращает 0x0.</span><span class="sxs-lookup"><span data-stu-id="41aa0-721">If this method is called before an exception is thrown, it returns 0x0.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-722">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-722">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-723">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-723">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExceptionForHR">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-724">Преобразует код ошибки HRESULT в соответствующий объект <see cref="T:System.Exception" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-724">Converts an HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExceptionForHR">
      <MemberSignature Language="C#" Value="public static Exception GetExceptionForHR (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception GetExceptionForHR(int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionForHR (errorCode As Integer) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Exception ^ GetExceptionForHR(int errorCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="41aa0-725">Преобразуемое значение HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-725">The HRESULT to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-726">Преобразует заданный код ошибки HRESULT в соответствующий объект <see cref="T:System.Exception" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-726">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-727">Объект, представляющий преобразованное значение HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-727">An object that represents the converted HRESULT.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-728">Используйте <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> метод, чтобы получить <xref:System.Exception> основании HRESULT без вызова <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> метод и catch исключения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-728">Use the <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> method to get an <xref:System.Exception> based on an HRESULT without having to call the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method and catch the exception.</span></span>  
  
 <span data-ttu-id="41aa0-729">Текущий [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) интерфейс используется для создания исключения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-729">The current [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface is used to construct the exception.</span></span>  
  
 <span data-ttu-id="41aa0-730">Для сопоставления каждого значения HRESULT на сравнимый класс исключений в .NET Framework, в разделе [как: сопоставление значений HRESULT и исключений](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="41aa0-730">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-731">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-731">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-732">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-732">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionForHR">
      <MemberSignature Language="C#" Value="public static Exception GetExceptionForHR (int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception GetExceptionForHR(int32 errorCode, native int errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionForHR (errorCode As Integer, errorInfo As IntPtr) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Exception ^ GetExceptionForHR(int errorCode, IntPtr errorInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="errorInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="41aa0-733">Преобразуемое значение HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-733">The HRESULT to be converted.</span>
          </span>
        </param>
        <param name="errorInfo">
          <span data-ttu-id="41aa0-734">Указатель на интерфейс <see langword="IErrorInfo" />, предоставляющий дополнительные сведения об ошибке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-734">A pointer to the <see langword="IErrorInfo" /> interface that provides more information about the error.</span>
          </span>
          <span data-ttu-id="41aa0-735">Можно задать <c>IntPtr(0)</c>, чтобы использовать текущий интерфейс <see langword="IErrorInfo" />, или <c>IntPtr(-1)</c>, чтобы игнорировать текущий интерфейс <see langword="IErrorInfo" /> и сформировать исключение только на основе кода ошибки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-735">You can specify <c>IntPtr(0)</c> to use the current <see langword="IErrorInfo" /> interface, or <c>IntPtr(-1)</c> to ignore the current <see langword="IErrorInfo" /> interface and construct the exception just from the error code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-736">Преобразует указанный код ошибки HRESULT в соответствующий объект <see cref="T:System.Exception" /> с дополнительными сведениями об ошибке, передаваемыми в интерфейсе [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) для объекта исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-736">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object, with additional error information passed in an [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface for the exception object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-737">Объект, представляющий преобразованное значение HRESULT и сведения, полученные из параметра <paramref name="errorInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-737">An object that represents the converted HRESULT and information obtained from <paramref name="errorInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-738">Используйте <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> метод, чтобы получить <xref:System.Exception> основании HRESULT без вызова <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> метод и перехвата исключений, (что позволяет избежать издержек соответствующего производительности).</span><span class="sxs-lookup"><span data-stu-id="41aa0-738">Use the <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> method to get an <xref:System.Exception> based on an HRESULT without having to call the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method and catch the exception (thus avoiding the corresponding performance overhead).</span></span> <span data-ttu-id="41aa0-739">`errorInfo` Параметр предоставляет дополнительные сведения об ошибке, например его текстовое описание и глобальный уникальный идентификатор (GUID) для интерфейса, определившего ошибку.</span><span class="sxs-lookup"><span data-stu-id="41aa0-739">The `errorInfo` parameter supplies additional information about the error, such as its textual description and the globally unique identifier (GUID) for the interface that defined the error.</span></span>  
  
 <span data-ttu-id="41aa0-740">Используйте эту перегрузку метода, при наличии специальных сведений об ошибке, которую необходимо передать в преобразовании.</span><span class="sxs-lookup"><span data-stu-id="41aa0-740">Use this method overload if you have custom error information that you have to supply in the conversion.</span></span>  
  
 <span data-ttu-id="41aa0-741">Для сопоставления каждого значения HRESULT на сравнимый класс исключений в .NET Framework, в разделе [как: сопоставление значений HRESULT и исключений](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="41aa0-741">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-742">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-742">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-743">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-743">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionPointers">
      <MemberSignature Language="C#" Value="public static IntPtr GetExceptionPointers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetExceptionPointers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionPointers () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetExceptionPointers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-744">Извлекает не зависящее от компьютера описание исключения и сведения о состоянии потоков в момент возникновения исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-744">Retrieves a computer-independent description of an exception, and information about the state that existed for the thread when the exception occurred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-745">Указатель на структуру [EXCEPTION_POINTERS](http://go.microsoft.com/fwlink/?LinkId=148648).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-745">A pointer to an [EXCEPTION_POINTERS](http://go.microsoft.com/fwlink/?LinkId=148648) structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-746"><xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A> предоставляется для поддержки компилятора структурированную обработку исключений (SEH только).</span><span class="sxs-lookup"><span data-stu-id="41aa0-746"><xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A> is exposed for compiler support of structured exception handling (SEH) only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-747">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-747">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-748">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-748">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFunctionPointerForDelegate">
      <MemberSignature Language="C#" Value="public static IntPtr GetFunctionPointerForDelegate (Delegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetFunctionPointerForDelegate(class System.Delegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFunctionPointerForDelegate (d As Delegate) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetFunctionPointerForDelegate(Delegate ^ d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="41aa0-749">Делегат, передаваемый в неуправляемый код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-749">The delegate to be passed to unmanaged code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-750">Преобразует делегат в указатель на функцию, вызываемый из неуправляемого кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-750">Converts a delegate into a function pointer that is callable from unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-751">Значение, которое можно передать в неуправляемый код, который, в свою очередь, может использовать его для вызова базового управляемого делегата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-751">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-752">Делегат `d` преобразуется в указатель на функцию, который может быть передан в неуправляемый код с помощью [__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) соглашение о вызовах.</span><span class="sxs-lookup"><span data-stu-id="41aa0-752">The delegate `d` is converted to a function pointer that can be passed to unmanaged code using the [__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) calling convention.</span></span>  
  
 <span data-ttu-id="41aa0-753">Необходимо вручную предотвратить обработку делегата сборщиком мусора из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-753">You must manually keep the delegate from being collected by the garbage collector from managed code.</span></span> <span data-ttu-id="41aa0-754">Сборщик мусора не отслеживает ссылки на неуправляемый код.</span><span class="sxs-lookup"><span data-stu-id="41aa0-754">The garbage collector does not track references to unmanaged code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-755">Параметр <paramref name="d" /> является определением универсального типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-755">The <paramref name="d" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-756">Параметр <paramref name="d" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-756">The <paramref name="d" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-757">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-757">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-758">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-758">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFunctionPointerForDelegate&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr GetFunctionPointerForDelegate&lt;TDelegate&gt; (TDelegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetFunctionPointerForDelegate&lt;TDelegate&gt;(!!TDelegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFunctionPointerForDelegate(Of TDelegate) (d As TDelegate) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static IntPtr GetFunctionPointerForDelegate(TDelegate d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="d" Type="TDelegate" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="41aa0-759">Тип преобразуемого делегата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-759">The type of delegate to convert.</span>
          </span>
        </typeparam>
        <param name="d">
          <span data-ttu-id="41aa0-760">Делегат, передаваемый в неуправляемый код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-760">The delegate to be passed to unmanaged code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-761">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-761">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-762">Преобразует делегат указанного типа в указатель на функцию, вызываемый из неуправляемого кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-762">Converts a delegate of a specified type to a function pointer that is callable from unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-763">Значение, которое можно передать в неуправляемый код, который, в свою очередь, может использовать его для вызова базового управляемого делегата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-763">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-764">Делегат `d` преобразуется в указатель на функцию, который может быть передан в неуправляемый код, с помощью [__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) соглашение о вызовах.</span><span class="sxs-lookup"><span data-stu-id="41aa0-764">The delegate `d` is converted to a function pointer that can be passed to unmanaged code by using the [__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) calling convention.</span></span>  
  
 <span data-ttu-id="41aa0-765">Необходимо вручную предотвратить обработку делегата сборщиком мусора из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-765">You must manually keep the delegate from being collected by the garbage collector from managed code.</span></span> <span data-ttu-id="41aa0-766">Сборщик мусора не отслеживает ссылки на неуправляемый код.</span><span class="sxs-lookup"><span data-stu-id="41aa0-766">The garbage collector does not track references to unmanaged code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-767">Параметр <paramref name="d" /> является определением универсального типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-767">The <paramref name="d" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-768">Параметр <paramref name="d" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-768">The <paramref name="d" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-769">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-769">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-770">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-770">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHINSTANCE">
      <MemberSignature Language="C#" Value="public static IntPtr GetHINSTANCE (System.Reflection.Module m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetHINSTANCE(class System.Reflection.Module m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHINSTANCE (m As Module) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetHINSTANCE(System::Reflection::Module ^ m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="41aa0-771">Модуль, дескриптор экземпляра (HINSTANCE) которого необходимо получить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-771">The module whose HINSTANCE is desired.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-772">Возвращает дескриптор экземпляра (HINSTANCE) для указанного модуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-772">Returns the instance handle (HINSTANCE) for the specified module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-773">Дескриптор экземпляра (HINSTANCE) для модуля <paramref name="m" />. Если для этого модуля отсутствует HINSTANCE, этот параметр имеет значение -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-773">The HINSTANCE for <paramref name="m" />; or -1 if the module does not have an HINSTANCE.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-774">Для динамического или находящегося в памяти модуля отсутствует HINSTANCE.</span><span class="sxs-lookup"><span data-stu-id="41aa0-774">When dynamic or in-memory, modules do not have an HINSTANCE.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-775">Параметр <paramref name="m" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-775">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-776">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-776">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-777">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-777">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHRForException">
      <MemberSignature Language="C#" Value="public static int GetHRForException (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHRForException(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHRForException (e As Exception) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHRForException(Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="41aa0-778">Исключение, преобразуемое в значение HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-778">The exception to convert to an HRESULT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-779">Преобразует указанное исключение в значение HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-779">Converts the specified exception to an HRESULT.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-780">Значение HRESULT, сопоставленное с заданным исключением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-780">The HRESULT mapped to the supplied exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-781"><xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> также устанавливает [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) интерфейс для исключение, которое можно получить путем вызова функции COM GetErrorInfoNEEDGUID.</span><span class="sxs-lookup"><span data-stu-id="41aa0-781"><xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> also sets up an [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface for the exception that can be obtained by calling the COM GetErrorInfoNEEDGUID function.</span></span> <span data-ttu-id="41aa0-782">Эту функцию можно использовать для возврата значения HRESULT на управляемый класс реализации COM-интерфейса, где применяется <xref:System.Runtime.InteropServices.PreserveSigAttribute> атрибута.</span><span class="sxs-lookup"><span data-stu-id="41aa0-782">You can use this function to return an HRESULT value on a managed class implementation of a COM interface where you apply the <xref:System.Runtime.InteropServices.PreserveSigAttribute> attribute.</span></span> <span data-ttu-id="41aa0-783">Метод атрибутом перехватывать все исключения, используют <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> метод для возврата соответствующего значения HRESULT.</span><span class="sxs-lookup"><span data-stu-id="41aa0-783">Have the attributed method catch all exceptions and use the <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> method to return the appropriate HRESULT value.</span></span> <span data-ttu-id="41aa0-784">Позволяя исключению передавать сведения вовне, метод формирует недопустимое поведение.</span><span class="sxs-lookup"><span data-stu-id="41aa0-784">Allowing an exception to propagate outside the method produces incorrect behavior.</span></span> <span data-ttu-id="41aa0-785">(На самом деле общеязыковая среда выполнения не может передать исключение клиенту COM, который вызывает метод через таблицу v.)</span><span class="sxs-lookup"><span data-stu-id="41aa0-785">(In fact, the common language runtime fails to pass an exception to a COM client that calls such a method through a v-table.)</span></span>  
  
 <span data-ttu-id="41aa0-786">Обратите внимание, что <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> метода задает [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) интерфейса текущего потока.</span><span class="sxs-lookup"><span data-stu-id="41aa0-786">Note that the <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> method sets the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread.</span></span> <span data-ttu-id="41aa0-787">Это может привести к непредвиденным результатам для методов, таких как <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> методы, которые по умолчанию использовать [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) текущего потока, если оно задано.</span><span class="sxs-lookup"><span data-stu-id="41aa0-787">This can cause unexpected results for methods like the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> methods that default to using the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) of the current thread if it is set.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-788">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-788">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-789">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-789">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetHRForLastWin32Error">
      <MemberSignature Language="C#" Value="public static int GetHRForLastWin32Error ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHRForLastWin32Error() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHRForLastWin32Error () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHRForLastWin32Error();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-790">Возвращает значение HRESULT, соответствующее последней ошибке, вызванной кодом Win32, выполняемым с использованием класса <see cref="T:System.Runtime.InteropServices.Marshal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-790">Returns the HRESULT corresponding to the last error incurred by Win32 code executed using <see cref="T:System.Runtime.InteropServices.Marshal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-791">Значение HRESULT, соответствующее последнему коду ошибки Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-791">The HRESULT corresponding to the last Win32 error code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-792">Необходимо провести целевой функции `setLastError` установлен флаг метаданных.</span><span class="sxs-lookup"><span data-stu-id="41aa0-792">The target function must have had the `setLastError` metadata flag set.</span></span> <span data-ttu-id="41aa0-793">Например `SetLastError` поле <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> должен быть `true`.</span><span class="sxs-lookup"><span data-stu-id="41aa0-793">For example, the `SetLastError` field of the <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> must be `true`.</span></span> <span data-ttu-id="41aa0-794">Процесс установки флага зависит от используемого исходного языка: C# и C++ `false` по умолчанию, но `Declare` инструкции в Visual Basic — `true`.</span><span class="sxs-lookup"><span data-stu-id="41aa0-794">The process for setting this flag depends on the source language used: C# and C++ are `false` by default, but the `Declare` statement in Visual Basic is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-795">Ниже приведен пример, как получить значение HRESULT, соответствующее коду ошибки Win32 с помощью <xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-795">The following example demonstrates how to retrieve an HRESULT corresponding to a Win32 error code using the <xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetHRForLastWin32Error#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetHRForLastWin32Error/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetHRForLastWin32Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetHRForLastWin32Error/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-796">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-796">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-797">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-797">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetIDispatchForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetIDispatchForObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIDispatchForObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIDispatchForObject (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIDispatchForObject(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="41aa0-798">Объект, для которого запрашивается интерфейс <see langword="IDispatch" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-798">The object whose <see langword="IDispatch" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-799">Возвращает интерфейс [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) из управляемого объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-799">Returns an [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) interface from a managed object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-800">Указатель <see langword="IDispatch" /> для параметра <paramref name="o" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-800">The <see langword="IDispatch" /> pointer for the <paramref name="o" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-801">В управляемом коде редко работать непосредственно с `IDispatch` интерфейса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-801">In managed code, you seldom work directly with the `IDispatch` interface.</span></span> <span data-ttu-id="41aa0-802">Тем не менее <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> полезно при вызове метода, предоставляющего параметр объекта COM, как <xref:System.IntPtr> типа, или с настраиваемым маршалингом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-802">However, <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="41aa0-803">Вызов объекта с помощью этого метода приводит к увеличению в указателе на интерфейс, перед возвращением указателя счетчика ссылок.</span><span class="sxs-lookup"><span data-stu-id="41aa0-803">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="41aa0-804">Всегда используйте <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> для уменьшения числа ссылок после завершения с указателем.</span><span class="sxs-lookup"><span data-stu-id="41aa0-804">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span>  
  
 <span data-ttu-id="41aa0-805">Этот метод также можно использовать для управляемых объектов для получения указателя на интерфейс для вызываемой оболочки COM, для объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-805">You can also use this method on a managed object to obtain an interface pointer to the COM callable wrapper for the object.</span></span> <span data-ttu-id="41aa0-806">Дополнительные сведения см. в разделе [вызываемая оболочка COM](~/docs/framework/interop/com-callable-wrapper.md).</span><span class="sxs-lookup"><span data-stu-id="41aa0-806">For additional information, see [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="41aa0-807">Параметр <paramref name="o" /> не поддерживает запрошенный интерфейс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-807">
              <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-808">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-808">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-809">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-809">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetIDispatchForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetIDispatchForObjectInContext (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIDispatchForObjectInContext(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIDispatchForObjectInContext (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIDispatchForObjectInContext(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="41aa0-810">Объект, для которого запрашивается интерфейс <see langword="IDispatch" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-810">The object whose <see langword="IDispatch" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-811">Возвращает указатель интерфейса [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) из управляемого объекта, если вызывающий объект находится в том же контексте, что и данный объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-811">Returns an [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) interface pointer from a managed object, if the caller is in the same context as that object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-812">Указатель интерфейса <see langword="IDispatch" /> для указанного объекта или значение <see langword="null" />, если контекст вызывающего объекта отличается от контекста заданного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-812">The <see langword="IDispatch" /> interface pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-813">Этот метод является таким же, как <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> за исключением того, что он возвращает `null` Если вызывающий объект не находится в том же контексте, что и объект.</span><span class="sxs-lookup"><span data-stu-id="41aa0-813">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="41aa0-814">Параметр <paramref name="o" /> не поддерживает запрошенный интерфейс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-814">
              <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-815">Свойство <paramref name="o" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-815">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-816">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-816">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-817">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-817">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetITypeInfoForType">
      <MemberSignature Language="C#" Value="public static IntPtr GetITypeInfoForType (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetITypeInfoForType(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetITypeInfoForType (t As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetITypeInfoForType(Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="41aa0-818">Тип, интерфейс <see langword="ITypeInfo" /> которого запрашивается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-818">The type whose <see langword="ITypeInfo" /> interface is being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-819">Возвращает интерфейс <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> из управляемого типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-819">Returns a <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> interface from a managed type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-820">Указатель на интерфейс <see langword="ITypeInfo" /> для параметра <paramref name="t" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-820">A pointer to the <see langword="ITypeInfo" /> interface for the <paramref name="t" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-821">Этот метод возвращает указатель на `ITypeInfo` реализацию, основанную на исходном типе.</span><span class="sxs-lookup"><span data-stu-id="41aa0-821">This method returns a pointer to an `ITypeInfo` implementation that is based on the original type.</span></span> <span data-ttu-id="41aa0-822">Вызов объекта с <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> приводит к увеличению в указателе на интерфейс, перед возвращением указателя счетчика ссылок.</span><span class="sxs-lookup"><span data-stu-id="41aa0-822">Calling an object with <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="41aa0-823">Всегда используйте <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> для уменьшения числа ссылок после завершения с указателем.</span><span class="sxs-lookup"><span data-stu-id="41aa0-823">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="41aa0-824">Можно применить <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> для замены стандартного маршалинга взаимодействия на настраиваемый маршалер.</span><span class="sxs-lookup"><span data-stu-id="41aa0-824">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> to replace standard interop marshaling behavior with this custom marshaler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-825">В следующем примере показано, как получить указатель на `ITypeInfo` интерфейса для типа с помощью <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-825">The following example demonstrates how to retrieve a pointer to the `ITypeInfo` interface for a type using the <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetITypeInfoForType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetITypeInfoForType/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetITypeInfoForType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetITypeInfoForType/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-826">
            <paramref name="t" /> не является типом, видимым для модели COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-826">
              <paramref name="t" /> is not a visible type to COM.</span>
          </span>
          <span data-ttu-id="41aa0-827">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-827">-or-</span>
          </span>
          <span data-ttu-id="41aa0-828">
            <paramref name="t" /> относится к типу [!INCLUDE[wrt](~/includes/wrt-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-828">
              <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="41aa0-829">Библиотека типов зарегистрирована для сборки, содержащей тип, но определение типа не найдено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-829">A type library is registered for the assembly that contains the type, but the type definition cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-830">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-830">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-831">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-831">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetIUnknownForObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIUnknownForObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIUnknownForObject (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIUnknownForObject(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="41aa0-832">Объект, для которого запрашивается интерфейс <see langword="IUnknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-832">The object whose <see langword="IUnknown" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-833">Возвращает интерфейс [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) из управляемого объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-833">Returns an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface from a managed object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-834">Указатель <see langword="IUnknown" /> для параметра <paramref name="o" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-834">The <see langword="IUnknown" /> pointer for the <paramref name="o" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-835">В управляемом коде редко работать непосредственно с `IUnknown` интерфейса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-835">In managed code, you seldom work directly with the `IUnknown` interface.</span></span> <span data-ttu-id="41aa0-836">Тем не менее <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> полезно при вызове метода, предоставляющего параметр объекта COM, как <xref:System.IntPtr> типа, или с настраиваемым маршалингом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-836">However, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="41aa0-837">Вызов объекта с помощью этого метода приводит к увеличению в указателе на интерфейс, перед возвращением указателя счетчика ссылок.</span><span class="sxs-lookup"><span data-stu-id="41aa0-837">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="41aa0-838">Всегда используйте <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> для уменьшения числа ссылок после завершения с указателем.</span><span class="sxs-lookup"><span data-stu-id="41aa0-838">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="41aa0-839">Этот метод предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-839">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="41aa0-840">Этот метод можно также использовать для управляемых объектов для получения указателя интерфейса [вызываемая оболочка COM](~/docs/framework/interop/com-callable-wrapper.md) для объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-840">You can also use this method on a managed object to obtain an interface pointer to the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) for the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-841">Следующий пример демонстрирует способ получения [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) интерфейса для управляемого объекта, используя <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-841">The following example demonstrates how to retrieve an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-842">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-842">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-843">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-843">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetIUnknownForObjectInContext (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIUnknownForObjectInContext(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIUnknownForObjectInContext (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIUnknownForObjectInContext(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="41aa0-844">Объект, для которого запрашивается интерфейс <see langword="IUnknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-844">The object whose <see langword="IUnknown" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-845">Возвращает интерфейс [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) из управляемого объекта, если контекст этого объекта совпадает с контекстом вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-845">Returns an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface from a managed object, if the caller is in the same context as that object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-846">Указатель интерфейса <see langword="IUnknown" /> для указанного объекта или значение <see langword="null" />, если контекст вызывающего объекта отличается от контекста заданного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-846">The <see langword="IUnknown" /> pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-847">Этот метод является таким же, как <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> за исключением того, что он возвращает `null` Если вызывающий объект не находится в том же контексте, что и объект.</span><span class="sxs-lookup"><span data-stu-id="41aa0-847">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-848">Следующий пример демонстрирует способ получения `IUnknown` интерфейса для управляемого объекта, используя <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-848">The following example demonstrates how to retrieve an `IUnknown` interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-849">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-849">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-850">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-850">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetLastWin32Error">
      <MemberSignature Language="C#" Value="public static int GetLastWin32Error ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetLastWin32Error() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLastWin32Error () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetLastWin32Error();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-851">Возвращает код ошибки, возвращенной последней неуправляемой функцией, вызванной при помощи вызова неуправляемого кода с установленным флагом <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-851">Returns the error code returned by the last unmanaged function that was called using platform invoke that has the <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /> flag set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-852">Последний код ошибки, заданный вызовом функции [SetLastError](http://go.microsoft.com/fwlink/?LinkId=148656) платформы Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-852">The last error code set by a call to the Win32 [SetLastError](http://go.microsoft.com/fwlink/?LinkId=148656) function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-853"><xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> предоставляет Win32 [GetLastError](http://go.microsoft.com/fwlink/?LinkId=148657) из Kernel32.DLL.</span><span class="sxs-lookup"><span data-stu-id="41aa0-853"><xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> exposes the Win32 [GetLastError](http://go.microsoft.com/fwlink/?LinkId=148657) function from Kernel32.DLL.</span></span> <span data-ttu-id="41aa0-854">Этот метод используется, так как он не безопасно выполнять прямой вызов неуправляемого `GetLastError` для получения этих сведений.</span><span class="sxs-lookup"><span data-stu-id="41aa0-854">This method exists because it is not safe to make a direct platform invoke call to `GetLastError` to obtain this information.</span></span> <span data-ttu-id="41aa0-855">Если вы хотите получить доступ к этому коду ошибки, необходимо вызвать <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> вместо написания собственных определение вызова неуправляемого `GetLastError` и его вызов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-855">If you want to access this error code, you must call <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> instead of writing your own platform invoke definition for `GetLastError` and calling it.</span></span> <span data-ttu-id="41aa0-856">Общеязыковая среда выполнения может выполнять внутренние вызовы интерфейсов API, `GetLastError` поддерживаемой операционной системой.</span><span class="sxs-lookup"><span data-stu-id="41aa0-856">The common language runtime can make internal calls to APIs that overwrite the `GetLastError` maintained by the operating system.</span></span>  
  
 <span data-ttu-id="41aa0-857">Этот метод можно использовать для получения кодов ошибок, только если применить <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> сигнатуру метода и установите <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> на`true`.</span><span class="sxs-lookup"><span data-stu-id="41aa0-857">You can use this method to obtain error codes only if you apply the <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> to the method signature and set the <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> field to`true`.</span></span> <span data-ttu-id="41aa0-858">Этот процесс зависит от разных языков: C# и C++ `false` по умолчанию, но `Declare` инструкции в Visual Basic — `true`.</span><span class="sxs-lookup"><span data-stu-id="41aa0-858">The process for this varies depending upon the source language used: C# and C++ are `false` by default, but the `Declare` statement in Visual Basic is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-859">В следующем примере демонстрируется вызов метода <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-859">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> method.</span></span> <span data-ttu-id="41aa0-860">В примере сначала демонстрируется вызов метода без ошибок и затем демонстрируется вызов метода с ошибкой.</span><span class="sxs-lookup"><span data-stu-id="41aa0-860">The example first demonstrates calling the method with no error present and then demonstrates calling the method with an error present.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetLastWin32Error#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetLastWin32Error/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetLastWin32Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetLastWin32Error/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-861">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-861">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-862">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-862">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedThunkForUnmanagedMethodPtr">
      <MemberSignature Language="C#" Value="public static IntPtr GetManagedThunkForUnmanagedMethodPtr (IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetManagedThunkForUnmanagedMethodPtr(native int pfnMethodToWrap, native int pbSignature, int32 cbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManagedThunkForUnmanagedMethodPtr (pfnMethodToWrap As IntPtr, pbSignature As IntPtr, cbSignature As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetManagedThunkForUnmanagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" />
        <Parameter Name="pbSignature" Type="System.IntPtr" />
        <Parameter Name="cbSignature" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pfnMethodToWrap">
          <span data-ttu-id="41aa0-863">Указатель на метод, маршалирование которого требуется выполнить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-863">A pointer to the method to marshal.</span>
          </span>
        </param>
        <param name="pbSignature">
          <span data-ttu-id="41aa0-864">Указатель на сигнатуру метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-864">A pointer to the method signature.</span>
          </span>
        </param>
        <param name="cbSignature">
          <span data-ttu-id="41aa0-865">Число байтов в <c>pbSignature</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-865">The number of bytes in <c>pbSignature</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-866">Возвращает указатель на функцию, генерируемую в среде выполнения, которая маршалирует вызов из управляемого кода в неуправляемый.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-866">Gets a pointer to a runtime-generated function that marshals a call from managed to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-867">Указатель на функцию, маршалирующую вызов из параметра <paramref name="pfnMethodToWrap" /> в неуправляемый код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-867">A pointer to the function that will marshal a call from the <paramref name="pfnMethodToWrap" /> parameter to unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-868"><xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A> предоставляется только для поддержки компилятора.</span><span class="sxs-lookup"><span data-stu-id="41aa0-868"><xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A> is exposed for compiler support only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-869">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-869">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-870">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-870">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetMethodInfoForComSlot">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo GetMethodInfoForComSlot (Type t, int slot, ref System.Runtime.InteropServices.ComMemberType memberType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo GetMethodInfoForComSlot(class System.Type t, int32 slot, valuetype System.Runtime.InteropServices.ComMemberType&amp; memberType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodInfoForComSlot (t As Type, slot As Integer, ByRef memberType As ComMemberType) As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::MemberInfo ^ GetMethodInfoForComSlot(Type ^ t, int slot, System::Runtime::InteropServices::ComMemberType % memberType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="slot" Type="System.Int32" />
        <Parameter Name="memberType" Type="System.Runtime.InteropServices.ComMemberType&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="41aa0-871">Тип, для которого извлекается <see cref="T:System.Reflection.MemberInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-871">The type for which the <see cref="T:System.Reflection.MemberInfo" /> is to be retrieved.</span>
          </span>
        </param>
        <param name="slot">
          <span data-ttu-id="41aa0-872">Ячейка таблицы VTBL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-872">The VTBL slot.</span>
          </span>
        </param>
        <param name="memberType">
          <span data-ttu-id="41aa0-873">В случае успешного возврата значения содержит одно из значений перечисления, задающее тип элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-873">On successful return, one of the enumeration values that specifies the type of the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-874">Извлекает объект <see cref="T:System.Reflection.MemberInfo" /> для указанной ячейки таблицы виртуальных функций (VTBL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-874">Retrieves a <see cref="T:System.Reflection.MemberInfo" /> object for the specified virtual function table (v-table or VTBL) slot.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-875">Объект, представляющий элемент из указанной ячейки таблицы виртуальных функций (VTBL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-875">The object that represents the member at the specified VTBL slot.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-876">Возвращаемое значение может быть <xref:System.Reflection.FieldInfo>, <xref:System.Reflection.MethodInfo>, или <xref:System.Reflection.PropertyInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-876">The return value may be a <xref:System.Reflection.FieldInfo>, <xref:System.Reflection.MethodInfo>, or <xref:System.Reflection.PropertyInfo> object.</span></span> <span data-ttu-id="41aa0-877">Возвращаемое значение зависит от типа управляемого элемента, который существует в данной ячейке COM (следовательно обобщенный тип <xref:System.Reflection.MemberInfo> от которого все три наследуют).</span><span class="sxs-lookup"><span data-stu-id="41aa0-877">The return value depends on the type of managed member that exists in the given COM slot (hence the generalized return type <xref:System.Reflection.MemberInfo> from which all three derive).</span></span>  
  
 <span data-ttu-id="41aa0-878">Номер слота (с нуля), возвращаемый этим методом, учетные записи для трех [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) и возможно четыре [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) методы, сделав его значение первого доступного слота значение 3 или 7.</span><span class="sxs-lookup"><span data-stu-id="41aa0-878">The zero-based slot number that is returned by this method accounts for three [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) and possibly four [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) methods, making the value of the first available slot either 3 or 7.</span></span> <span data-ttu-id="41aa0-879"><xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-879"><xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="41aa0-880">Можно использовать <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> и <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> в сочетании с <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> для передачи ячеек в указанном диапазоне.</span><span class="sxs-lookup"><span data-stu-id="41aa0-880">You can use <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> to pass slots within a specified range.</span></span>  
  
 <span data-ttu-id="41aa0-881">`memberType` Параметр важен только при возврате.</span><span class="sxs-lookup"><span data-stu-id="41aa0-881">The `memberType` parameter is important only on return.</span></span> <span data-ttu-id="41aa0-882">Он содержит тип элемента COM (обычный метод или метод доступа свойства), соответствующий возвращаемый <xref:System.Reflection.MemberInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-882">It contains the type of the COM member (a regular method or a property accessor) that corresponds to the returned <xref:System.Reflection.MemberInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-883">Параметр <paramref name="t" /> недоступен из COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-883">
              <paramref name="t" /> is not visible from COM.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-884">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-884">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-885">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-885">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComMemberType" />
      </Docs>
    </Member>
    <Member MemberName="GetNativeVariantForObject">
      <MemberSignature Language="C#" Value="public static void GetNativeVariantForObject (object obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetNativeVariantForObject(object obj, native int pDstNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetNativeVariantForObject (obj As Object, pDstNativeVariant As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetNativeVariantForObject(System::Object ^ obj, IntPtr pDstNativeVariant);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="pDstNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="41aa0-886">Объект, для которого нужно получить COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-886">The object for which to get a COM VARIANT.</span>
          </span>
        </param>
        <param name="pDstNativeVariant">
          <span data-ttu-id="41aa0-887">Указатель, получающий тип VARIANT, соответствующий параметру <c>obj</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-887">A pointer to receive the VARIANT that corresponds to the <c>obj</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-888">Преобразует объект в COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-888">Converts an object to a COM VARIANT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-889">`pDstNativeVariant` Параметр должен указывать достаточно памяти для хранения результирующего значения VARIANT.</span><span class="sxs-lookup"><span data-stu-id="41aa0-889">The `pDstNativeVariant` parameter must point to sufficient memory to store the resulting VARIANT.</span></span> <span data-ttu-id="41aa0-890">Кроме того, реализация этого метода вызывает [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) функция необработанные памяти, `pDstNativeVariant` указывает параметр.</span><span class="sxs-lookup"><span data-stu-id="41aa0-890">Also, the implementation of this method calls the [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) function on the raw memory that the `pDstNativeVariant` parameter points to.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-891">Параметр <paramref name="obj" /> является экземпляром универсального типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-891">The <paramref name="obj" /> parameter is an instance of a generic type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-892">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-892">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-893">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-893">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetNativeVariantForObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void GetNativeVariantForObject&lt;T&gt; (T obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetNativeVariantForObject&lt;T&gt;(!!T obj, native int pDstNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetNativeVariantForObject(Of T) (obj As T, pDstNativeVariant As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void GetNativeVariantForObject(T obj, IntPtr pDstNativeVariant);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="T" />
        <Parameter Name="pDstNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41aa0-894">Тип объекта для преобразования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-894">The type of the object to convert.</span>
          </span>
        </typeparam>
        <param name="obj">
          <span data-ttu-id="41aa0-895">Объект, для которого нужно получить COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-895">The object for which to get a COM VARIANT.</span>
          </span>
        </param>
        <param name="pDstNativeVariant">
          <span data-ttu-id="41aa0-896">Указатель, получающий тип VARIANT, соответствующий параметру <c>obj</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-896">A pointer to receive the VARIANT that corresponds to the <c>obj</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-897">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-897">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-898">Преобразует объект заданного типа в COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-898">Converts an object of a specified type to a COM VARIANT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-899">`pDstNativeVariant` Параметр должен указывать достаточно памяти для хранения результирующего значения VARIANT.</span><span class="sxs-lookup"><span data-stu-id="41aa0-899">The `pDstNativeVariant` parameter must point to sufficient memory to store the resulting VARIANT.</span></span> <span data-ttu-id="41aa0-900">Кроме того, реализация этого метода вызывает [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) функция необработанные памяти, `pDstNativeVariant` указывает параметр.</span><span class="sxs-lookup"><span data-stu-id="41aa0-900">Also, the implementation of this method calls [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) function on the raw memory that the `pDstNativeVariant` parameter points to.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-901">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-901">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-902">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-902">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetObjectForIUnknown (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObjectForIUnknown(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForIUnknown (pUnk As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectForIUnknown(IntPtr pUnk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="41aa0-903">Указатель на интерфейс <see langword="IUnknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-903">A pointer to the <see langword="IUnknown" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-904">Возвращает экземпляр типа, представляющего COM-объект, с помощью указателя на его интерфейс [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-904">Returns an instance of a type that represents a COM object by a pointer to its [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-905">Объект, представляющий указанный неуправляемый COM-объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-905">An object that represents the specified unmanaged COM object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-906">Этот метод создает оболочку для `IUnknown` в управляемом объекте.</span><span class="sxs-lookup"><span data-stu-id="41aa0-906">This method wraps `IUnknown` in a managed object.</span></span> <span data-ttu-id="41aa0-907">Это приводит к увеличению счетчика ссылок COM-компонента.</span><span class="sxs-lookup"><span data-stu-id="41aa0-907">This has the effect of incrementing the reference count of the COM component.</span></span> <span data-ttu-id="41aa0-908">Счетчик ссылок будет уменьшен, когда среда выполнения выполняет сборку мусора для управляемого объекта, который представляет COM-объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-908">The reference count will be decremented when the runtime performs garbage collection on the managed object that represents the COM object.</span></span>  
  
 <span data-ttu-id="41aa0-909">`pUnk` Представляет параметр `IUnknown` указатель интерфейса, однако, поскольку все COM-интерфейсы являются производными прямо или косвенно от `IUnknown`, этому методу можно передать любой COM-интерфейс.</span><span class="sxs-lookup"><span data-stu-id="41aa0-909">The `pUnk` parameter represents an `IUnknown` interface pointer; however, because all COM interfaces derive directly or indirectly from `IUnknown`, you can pass any COM interface to this method.</span></span> <span data-ttu-id="41aa0-910">Объект, возвращаемый <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A> — [вызываемой оболочки времени выполнения](~/docs/framework/interop/runtime-callable-wrapper.md), который управляет общеязыковая среда выполнения, как он не любого другого управляемого объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-910">The object returned by <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A> is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), which the common language runtime manages as it does any other managed object.</span></span> <span data-ttu-id="41aa0-911">Тип этой оболочки часто является основой `System.__ComObject` тип, который является скрытым тип, используемый при типе оболочки является неоднозначным.</span><span class="sxs-lookup"><span data-stu-id="41aa0-911">The type of this wrapper is often a base `System.__ComObject` type, which is a hidden type used when the wrapper type is ambiguous.</span></span> <span data-ttu-id="41aa0-912">Можно по-прежнему выполнять вызовы позднего связывания в базовый тип, при условии, что COM-объект реализует [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85)) интерфейса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-912">You can still make late-bound calls to such a base type as long as the COM object implements the [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85)) interface.</span></span> <span data-ttu-id="41aa0-913">Аналогично можно привести возвращенный объект соответствующего интерфейса COM.</span><span class="sxs-lookup"><span data-stu-id="41aa0-913">Likewise, you can cast the returned object to an appropriate COM interface.</span></span>  
  
 <span data-ttu-id="41aa0-914">Для объекта, который следует упаковать с помощью специального управляемого типа класса (и не оболочку универсального типа), необходимо соблюдать следующие требования:</span><span class="sxs-lookup"><span data-stu-id="41aa0-914">For an object to be wrapped with a specific managed class type (and not a generic wrapper type), you must adhere to the following requirements:</span></span>  
  
-   <span data-ttu-id="41aa0-915">Реализуйте [IProvideClassInfo](http://go.microsoft.com/fwlink/?LinkID=148012) интерфейс для COM-объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-915">Implement the [IProvideClassInfo](http://go.microsoft.com/fwlink/?LinkID=148012) interface for the COM object.</span></span>  
  
-   <span data-ttu-id="41aa0-916">Регистрировать содержащую его сборку с [Regasm.exe (средство регистрации сборок)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span><span class="sxs-lookup"><span data-stu-id="41aa0-916">Register the containing assembly with the [Regasm.exe (Assembly Registration Tool)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span></span>  
  
 <span data-ttu-id="41aa0-917">Кроме того, можно избежать эти требования и по-прежнему получить объект, который заключается в оболочку с определенный управляемый тип класса с помощью <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-917">Alternatively, you can avoid these requirements and still get an object that is wrapped with a specific managed class type by using the <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-918">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-918">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-919">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-919">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectForNativeVariant">
      <MemberSignature Language="C#" Value="public static object GetObjectForNativeVariant (IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObjectForNativeVariant(native int pSrcNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForNativeVariant (pSrcNativeVariant As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectForNativeVariant(IntPtr pSrcNativeVariant);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pSrcNativeVariant">
          <span data-ttu-id="41aa0-920">Указатель на COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-920">A pointer to a COM VARIANT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-921">Преобразует COM VARIANT в объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-921">Converts a COM VARIANT to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-922">Объект, соответствующий параметру <paramref name="pSrcNativeVariant" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-922">An object that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-923"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> Возвращает управляемый объект, который соответствует необработанный указатель на неуправляемый тип VARIANT.</span><span class="sxs-lookup"><span data-stu-id="41aa0-923"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> returns a managed object that corresponds to a raw pointer to an unmanaged VARIANT type.</span></span> <span data-ttu-id="41aa0-924">Interopmarshaler выполняет такое же преобразование при предоставлении типа VARIANT в управляемый код.</span><span class="sxs-lookup"><span data-stu-id="41aa0-924">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span>  
  
 <span data-ttu-id="41aa0-925"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-925"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="41aa0-926">Если выбран тип VARIANT VT_ERROR, <xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> возвращает объект типа `Int32` вместо `UInt32`.</span><span class="sxs-lookup"><span data-stu-id="41aa0-926">When the VARIANT type is VT_ERROR, <xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> returns an object of type `Int32` instead of `UInt32`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
          <span data-ttu-id="41aa0-927">
            <paramref name="pSrcNativeVariant" /> не является допустимым типом VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-927">
              <paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="41aa0-928">Тип параметра <paramref name="pSrcNativeVariant" /> не поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-928">
              <paramref name="pSrcNativeVariant" /> has an unsupported type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-929">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-929">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-930">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-930">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectForNativeVariant&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetObjectForNativeVariant&lt;T&gt; (IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetObjectForNativeVariant&lt;T&gt;(native int pSrcNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForNativeVariant(Of T) (pSrcNativeVariant As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T GetObjectForNativeVariant(IntPtr pSrcNativeVariant);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41aa0-931">Тип, в который требуется преобразовать COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-931">The type to which to convert the COM VARIANT.</span>
          </span>
        </typeparam>
        <param name="pSrcNativeVariant">
          <span data-ttu-id="41aa0-932">Указатель на COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-932">A pointer to a COM VARIANT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-933">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-933">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-934">Преобразует COM VARIANT в объект заданного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-934">Converts a COM VARIANT to an object of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-935">Объект указанного типа, соответствующий параметру <paramref name="pSrcNativeVariant" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-935">An object of the specified type that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-936"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> Возвращает управляемый объект типа `T` , соответствующий необработанный указатель на неуправляемый тип VARIANT.</span><span class="sxs-lookup"><span data-stu-id="41aa0-936"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> returns a managed object of type `T` that corresponds to a raw pointer to an unmanaged VARIANT type.</span></span> <span data-ttu-id="41aa0-937">Interopmarshaler выполняет такое же преобразование при предоставлении типа VARIANT в управляемый код.</span><span class="sxs-lookup"><span data-stu-id="41aa0-937">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span>  
  
 <span data-ttu-id="41aa0-938"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-938"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
          <span data-ttu-id="41aa0-939">
            <paramref name="pSrcNativeVariant" /> не является допустимым типом VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-939">
              <paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="41aa0-940">Тип параметра <paramref name="pSrcNativeVariant" /> не поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-940">
              <paramref name="pSrcNativeVariant" /> has an unsupported type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-941">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-941">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-942">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-942">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsForNativeVariants">
      <MemberSignature Language="C#" Value="public static object[] GetObjectsForNativeVariants (IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetObjectsForNativeVariants(native int aSrcNativeVariant, int32 cVars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectsForNativeVariants (aSrcNativeVariant As IntPtr, cVars As Integer) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" />
        <Parameter Name="cVars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="aSrcNativeVariant">
          <span data-ttu-id="41aa0-943">Указатель на первый элемент массива типа COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-943">A pointer to the first element of an array of COM VARIANTs.</span>
          </span>
        </param>
        <param name="cVars">
          <span data-ttu-id="41aa0-944">Число COM-объектов типа VARIANT в <c>aSrcNativeVariant</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-944">The count of COM VARIANTs in <c>aSrcNativeVariant</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-945">Преобразует массив типа COM [VARIANT](http://go.microsoft.com/fwlink/?LinkId=148670) в массив объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-945">Converts an array of COM [VARIANTs](http://go.microsoft.com/fwlink/?LinkId=148670) to an array of objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-946">Массив объектов, соответствующий элементу <paramref name="aSrcNativeVariant" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-946">An object array that corresponds to <paramref name="aSrcNativeVariant" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-947"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A> Возвращает массив управляемых объектов, который соответствует необработанный указатель на массив в стиле C неуправляемых типов VARIANT.</span><span class="sxs-lookup"><span data-stu-id="41aa0-947"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A> returns an array of managed objects that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</span></span> <span data-ttu-id="41aa0-948">Interopmarshaler выполняет такое же преобразование при предоставлении типа VARIANT в управляемый код.</span><span class="sxs-lookup"><span data-stu-id="41aa0-948">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span> <span data-ttu-id="41aa0-949">Этот метод возвращает пустой массив, если `cVars` имеет значение 0.</span><span class="sxs-lookup"><span data-stu-id="41aa0-949">The method returns an empty array when the `cVars` parameter is 0.</span></span>  
  
 <span data-ttu-id="41aa0-950">Массив объектов (возвращаемое значение) подвергается сборке мусора в обычном режиме.</span><span class="sxs-lookup"><span data-stu-id="41aa0-950">The object array (the return value) gets garbage collected as usual.</span></span> <span data-ttu-id="41aa0-951">Неуправляемый входной массив или отдельный VARIANT во входном массиве не освобождены.</span><span class="sxs-lookup"><span data-stu-id="41aa0-951">The unmanaged input array or individual VARIANTs in the input array are not freed.</span></span> <span data-ttu-id="41aa0-952">Поэтому это необходимо освободить их соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-952">Therefore it is your responsibility to free them as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41aa0-953">
            <paramref name="cVars" /> является отрицательным числом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-953">
              <paramref name="cVars" /> is a negative number.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-954">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-954">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-955">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-955">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsForNativeVariants&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] GetObjectsForNativeVariants&lt;T&gt; (IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] GetObjectsForNativeVariants&lt;T&gt;(native int aSrcNativeVariant, int32 cVars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectsForNativeVariants(Of T) (aSrcNativeVariant As IntPtr, cVars As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" />
        <Parameter Name="cVars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41aa0-956">Тип возвращаемого массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-956">The type of the array to return.</span>
          </span>
        </typeparam>
        <param name="aSrcNativeVariant">
          <span data-ttu-id="41aa0-957">Указатель на первый элемент массива типа COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-957">A pointer to the first element of an array of COM VARIANTs.</span>
          </span>
        </param>
        <param name="cVars">
          <span data-ttu-id="41aa0-958">Число COM-объектов типа VARIANT в <c>aSrcNativeVariant</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-958">The count of COM VARIANTs in <c>aSrcNativeVariant</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-959">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-959">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-960">Преобразует массив типа COM VARIANT в массив указанного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-960">Converts an array of COM VARIANTs to an array of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-961">Массив объектов <typeparamref name="T" />, соответствующий элементу <paramref name="aSrcNativeVariant" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-961">An array of <typeparamref name="T" /> objects that corresponds to <paramref name="aSrcNativeVariant" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-962"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29> Возвращает массив `T` , соответствующий необработанный указатель на массив в стиле C неуправляемых типов VARIANT.</span><span class="sxs-lookup"><span data-stu-id="41aa0-962"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29> returns an array of `T` that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</span></span> <span data-ttu-id="41aa0-963">Interopmarshaler выполняет такое же преобразование при предоставлении типа VARIANT в управляемый код.</span><span class="sxs-lookup"><span data-stu-id="41aa0-963">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span> <span data-ttu-id="41aa0-964">Этот метод возвращает пустой массив, если `cVars` имеет значение 0.</span><span class="sxs-lookup"><span data-stu-id="41aa0-964">The method returns an empty array when the `cVars` parameter is 0.</span></span>  
  
 <span data-ttu-id="41aa0-965">Возвращаемый массив имеет мусора обычным образом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-965">The returned array is garbage-collected as usual.</span></span> <span data-ttu-id="41aa0-966">Неуправляемый входной массив или отдельный VARIANT во входном массиве не освобождены.</span><span class="sxs-lookup"><span data-stu-id="41aa0-966">The unmanaged input array or individual VARIANTs in the input array are not freed.</span></span> <span data-ttu-id="41aa0-967">Таким образом это необходимо освободить их соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-967">Therefore, it is your responsibility to free them as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41aa0-968">
            <paramref name="cVars" /> является отрицательным числом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-968">
              <paramref name="cVars" /> is a negative number.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-969">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-969">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-970">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-970">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetStartComSlot">
      <MemberSignature Language="C#" Value="public static int GetStartComSlot (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetStartComSlot(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStartComSlot (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetStartComSlot(Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="41aa0-971">Тип, представляющий интерфейс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-971">A type that represents an interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-972">Возвращает первую ячейку в таблице виртуальных функций (VTBL), которая содержит методы, определенные пользователем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-972">Gets the first slot in the virtual function table (v-table or VTBL) that contains user-defined methods.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-973">Первая ячейка таблицы виртуальных функций (VTBL), содержащая методы, определенные пользователем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-973">The first VTBL slot that contains user-defined methods.</span>
          </span>
          <span data-ttu-id="41aa0-974">Первая ячейка содержит значение 3, если интерфейс основан на интерфейсе [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003), или значение 7, если он основан на интерфейсе [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-974">The first slot is 3 if the interface is based on [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003), and 7 if the interface is based on [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-975">Этот метод возвращает номер (с нуля) v-table для интерфейса или класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-975">This method returns the zero-based v-table number for an interface or a class.</span></span> <span data-ttu-id="41aa0-976">При использовании для класса возвращенный номер ячейки ссылается на интерфейс класса для класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-976">When used on a class, the slot number that is returned refers to the class interface for the class.</span></span> <span data-ttu-id="41aa0-977">Если интерфейс класса автоматически диспетчеризации, этот метод всегда возвращает значение -1, что интерфейс диспетчеризации не предоставляет управляемым клиентам v таблицу.</span><span class="sxs-lookup"><span data-stu-id="41aa0-977">If the class interface is auto-dispatch, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</span></span> <span data-ttu-id="41aa0-978">Можно использовать <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A> и <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> в сочетании с <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> для передачи ячеек в указанном диапазоне.</span><span class="sxs-lookup"><span data-stu-id="41aa0-978">You can use <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A> and <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> to pass slots within a specified range.</span></span> <span data-ttu-id="41aa0-979">Дополнительные сведения см. в разделе [введение в интерфейс класса](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span><span class="sxs-lookup"><span data-stu-id="41aa0-979">For additional information, see [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-980">Параметр <paramref name="t" /> недоступен из COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-980">
              <paramref name="t" /> is not visible from COM.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-981">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-981">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-982">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-982">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetThreadFromFiberCookie">
      <MemberSignature Language="C#" Value="public static System.Threading.Thread GetThreadFromFiberCookie (int cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Thread GetThreadFromFiberCookie(int32 cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetThreadFromFiberCookie (cookie As Integer) As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Thread ^ GetThreadFromFiberCookie(int cookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="41aa0-983">Целое число, представляющее многослойный файл cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-983">An integer that represents a fiber cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-984">Преобразует многослойный файл cookie в соответствующий экземпляр <see cref="T:System.Threading.Thread" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-984">Converts a fiber cookie into the corresponding <see cref="T:System.Threading.Thread" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-985">Поток, соответствующий параметру <paramref name="cookie" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-985">A thread that corresponds to the <paramref name="cookie" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-986">Многослойные cookies — это непрозрачные лексемы, используемые узлом при оповещении общеязыковой среды выполнения о запланированных многослойных решениях.</span><span class="sxs-lookup"><span data-stu-id="41aa0-986">Fiber cookies are opaque tokens that are used by the host when alerting the common language runtime to its fiber-scheduling decisions.</span></span> <span data-ttu-id="41aa0-987">Они состоят из стека и регистрация контекста.</span><span class="sxs-lookup"><span data-stu-id="41aa0-987">They consist of a stack and register context.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-988">Параметр <paramref name="cookie" /> равен 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-988">The <paramref name="cookie" /> parameter is 0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-989">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-989">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-990">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-990">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Threading.Thread" />
      </Docs>
    </Member>
    <Member MemberName="GetTypedObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetTypedObjectForIUnknown (IntPtr pUnk, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetTypedObjectForIUnknown(native int pUnk, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypedObjectForIUnknown (pUnk As IntPtr, t As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetTypedObjectForIUnknown(IntPtr pUnk, Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="41aa0-991">Указатель на интерфейс <see langword="IUnknown" /> неуправляемого объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-991">A pointer to the <see langword="IUnknown" /> interface of the unmanaged object.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="41aa0-992">Тип запрашиваемого управляемого класса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-992">The type of the requested managed class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-993">Возвращает управляемый объект указанного типа, представляющий COM-объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-993">Returns a managed object of a specified type that represents a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-994">Экземпляр класса, который соответствует объекту <see cref="T:System.Type" />, представляющему запрошенный неуправляемый COM-объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-994">An instance of the class corresponding to the <see cref="T:System.Type" /> object that represents the requested unmanaged COM object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-995">`t` Параметр должен быть импортируемым COM типом или подтипом типа COM импортированы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-995">The `t` parameter must be either a COM-imported type or a subtype of a COM-imported type.</span></span> <span data-ttu-id="41aa0-996">Кроме того `t` должен быть типом, метаданные которого импортируются средством [Tlbimp.exe (программа импорта библиотек типов)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) средства.</span><span class="sxs-lookup"><span data-stu-id="41aa0-996">In addition, `t` must be a type whose metadata was imported by the [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool.</span></span> <span data-ttu-id="41aa0-997">Этот тип должен быть класс и не интерфейсом связанного компонентного класса, передающим имя COM-класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-997">This type must be a class and not an associated coclass interface, which carries the name of the COM class.</span></span> <span data-ttu-id="41aa0-998">Например, если Tlbimp.exe импортирует `Myclass` как класс с именем `MyclassClass` и как интерфейс, компонентный класс называется `Myclass`, необходимо использовать `MyclassClass` (не `Myclass`) с помощью этого метода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-998">For example, if Tlbimp.exe imports `Myclass` as a class called `MyclassClass` and as a coclass interface called `Myclass`, you must use `MyclassClass` (not `Myclass`) with this method.</span></span> <span data-ttu-id="41aa0-999">Дополнительные сведения об импортируемых классах и интерфейсах см. в разделе [импорта преобразование типа](http://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3).</span><span class="sxs-lookup"><span data-stu-id="41aa0-999">For additional information about imported classes and coclass interfaces, see [Imported Type Conversion](http://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3).</span></span>  
  
 <span data-ttu-id="41aa0-1000">Если объект уже был получен для `pUnk` параметр `t` игнорируется и возвращается существующий объект.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1000">If an object has already been obtained for the `pUnk` parameter, `t` is ignored and the existing object is returned.</span></span> <span data-ttu-id="41aa0-1001">`pUnk` Представляет[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) указатель интерфейса, однако, поскольку все COM-интерфейсы являются производными прямо или косвенно от `IUnknown`, этому методу можно передать любой COM-интерфейс.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1001">`pUnk` represents an[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer; however, because all COM interfaces derive directly or indirectly from `IUnknown`, you can pass any COM interface to this method.</span></span> <span data-ttu-id="41aa0-1002">Объект, возвращаемый <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A> — [вызываемой оболочки времени выполнения](~/docs/framework/interop/runtime-callable-wrapper.md) времени выполнения (RCW), который управляет общеязыковая среда выполнения, как он не любого другого управляемого объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1002">The object returned by <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A> is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW), which the common language runtime manages as it does any other managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1003">
            <paramref name="t" /> не отмечается атрибутом <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1003">
              <paramref name="t" /> is not attributed with <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</span>
          </span>
          <span data-ttu-id="41aa0-1004">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1004">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1005">
            <paramref name="t" /> относится к типу [!INCLUDE[wrt](~/includes/wrt-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1005">
              <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1006">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1006">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1007">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1007">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeForITypeInfo">
      <MemberSignature Language="C#" Value="public static Type GetTypeForITypeInfo (IntPtr piTypeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeForITypeInfo(native int piTypeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeForITypeInfo (piTypeInfo As IntPtr) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeForITypeInfo(IntPtr piTypeInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="piTypeInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="piTypeInfo">
          <span data-ttu-id="41aa0-1008">Интерфейс <see langword="ITypeInfo" /> для маршалирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1008">The <see langword="ITypeInfo" /> interface to marshal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1009">Преобразует неуправляемый объект [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) в управляемый объект <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1009">Converts an unmanaged [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object into a managed <see cref="T:System.Type" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1010">Управляемый тип, представляющий неуправляемый объект <see langword="ITypeInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1010">A managed type that represents the unmanaged <see langword="ITypeInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1011"><xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> Возвращает <xref:System.Type?displayProperty=nameWithType> экземпляр, который основан на исходном типе.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1011"><xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> returns a <xref:System.Type?displayProperty=nameWithType> instance that is based on the original type.</span></span> <span data-ttu-id="41aa0-1012">Можно применить <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> для замены стандартного маршалинга взаимодействия на настраиваемый маршалер.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1012">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> to replace standard interop marshaling behavior with this custom marshaler.</span></span> <span data-ttu-id="41aa0-1013">[Tlbimp.exe (программа импорта библиотек типов)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) средство использует особого упаковщика для преобразования `ITypeInfo` параметры <xref:System.Type?displayProperty=nameWithType> параметров.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1013">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool uses the custom marshaler to translate `ITypeInfo` parameters to <xref:System.Type?displayProperty=nameWithType> parameters.</span></span> <span data-ttu-id="41aa0-1014">Тем не менее если получить `ITypeInfo` интерфейс некоторыми означает кроме Tlbimp.exe, можно использовать <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> для выполнения подобного преобразования вручную.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1014">However, if you obtain an `ITypeInfo` interface by some means other than Tlbimp.exe, you can use <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> to manually perform the same translation.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1015">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1015">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1016">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1016">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromCLSID">
      <MemberSignature Language="C#" Value="public static Type GetTypeFromCLSID (Guid clsid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeFromCLSID(valuetype System.Guid clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeFromCLSID(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeFromCLSID (clsid As Guid) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeFromCLSID(Guid clsid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="clsid">
          <span data-ttu-id="41aa0-1017">CLSID возвращаемого типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1017">The CLSID of the type to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1018">Возвращает тип, связанный с заданным идентификатором класса (CLSID).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1018">Returns the type associated with the specified class identifier (CLSID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1019">
            <see langword="System.__ComObject" /> вне зависимости от того, допустим ли код CLSID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1019">
              <see langword="System.__ComObject" /> regardless of whether the CLSID is valid.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeInfoName">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1020">Извлекает имя типа, представленного объектом [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1020">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeInfoName">
      <MemberSignature Language="C#" Value="public static string GetTypeInfoName (System.Runtime.InteropServices.ComTypes.ITypeInfo typeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeInfoName(class System.Runtime.InteropServices.ComTypes.ITypeInfo typeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeInfoName (typeInfo As ITypeInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeInfoName(System::Runtime::InteropServices::ComTypes::ITypeInfo ^ typeInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Runtime.InteropServices.ComTypes.ITypeInfo" />
      </Parameters>
      <Docs>
        <param name="typeInfo">
          <span data-ttu-id="41aa0-1021">Объект, представляющий указатель <see langword="ITypeInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1021">An object that represents an <see langword="ITypeInfo" /> pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1022">Извлекает имя типа, представленного объектом [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1022">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1023">Имя типа, на который указывает параметр <paramref name="typeInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1023">The name of the type that the <paramref name="typeInfo" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1024">Также можно извлечь имя типа, представленного `ITypeInfo` путем вызова <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> метода и передачи -1 для первого параметра.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1024">You can also retrieve the name of the type represented by an `ITypeInfo` by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1025">Параметр <paramref name="typeInfo" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1025">The <paramref name="typeInfo" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1026">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1026">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1027">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1027">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoName">
      <MemberSignature Language="C#" Value="public static string GetTypeInfoName (System.Runtime.InteropServices.UCOMITypeInfo pTI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeInfoName(class System.Runtime.InteropServices.UCOMITypeInfo pTI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.UCOMITypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeInfoName (pTI As UCOMITypeInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeInfoName(System::Runtime::InteropServices::UCOMITypeInfo ^ pTI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTI" Type="System.Runtime.InteropServices.UCOMITypeInfo" />
      </Parameters>
      <Docs>
        <param name="pTI">
          <span data-ttu-id="41aa0-1028">Объект, представляющий указатель <see langword="ITypeInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1028">An object that represents an <see langword="ITypeInfo" /> pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1029">Извлекает имя типа, представленного объектом [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1029">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1030">Имя типа, на который указывает параметр <paramref name="pTI" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1030">The name of the type that the <paramref name="pTI" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1031">Также можно извлечь имя типа, представленного `ITypeInfo` путем вызова метода <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> метода и передачи -1 для первого параметра.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1031">You can also retrieve the name of the type represented by an `ITypeInfo` object by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1032">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1032">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1033">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1033">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibGuid">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1034">Извлекает идентификатор LIBID библиотеки типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1034">Retrieves the library identifier (LIBID) of a type library.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibGuid">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuid (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuid(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuid (typelib As ITypeLib) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuid(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib">
          <span data-ttu-id="41aa0-1035">Библиотека типов, идентификатор LIBID которой требуется извлечь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1035">The type library whose LIBID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1036">Извлекает идентификатор LIBID библиотеки типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1036">Retrieves the library identifier (LIBID) of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1037">Идентификатор LIBID указанной библиотеки типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1037">The LIBID of the specified type library.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1038"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> Извлекает идентификатор LIBID напрямую из существующей библиотеки типов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1038"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extracts the LIBID directly from an existing type library.</span></span> <span data-ttu-id="41aa0-1039">Это действие отличается от <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> метод, который вычисляет идентификатор LIBID, которые должны быть на основе текущей сборки.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1039">This action differs from that of the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> method, which calculates what the LIBID should be based on the current assembly.</span></span>  
  
 <span data-ttu-id="41aa0-1040">Дополнительные сведения об идентификаторах библиотек см. в разделе [преобразования экспортировать сборку](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span><span class="sxs-lookup"><span data-stu-id="41aa0-1040">For more information about library identifiers, see [Exported Assembly Conversion](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1041">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1041">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1042">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1042">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
        <altmember cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibGuid">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuid (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuid(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuid (pTLB As UCOMITypeLib) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuid(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB">
          <span data-ttu-id="41aa0-1043">Библиотека типов, идентификатор LIBID которой требуется извлечь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1043">The type library whose LIBID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1044">Извлекает идентификатор LIBID библиотеки типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1044">Retrieves the library identifier (LIBID) of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1045">Идентификатор LIBID библиотеки типов, на которую указывает параметр <paramref name="pTLB" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1045">The LIBID of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1046"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> Извлекает идентификатор LIBID напрямую из существующей библиотеки типов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1046"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extracts the LIBID directly from an existing type library.</span></span> <span data-ttu-id="41aa0-1047">Это действие отличается от <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> метод, который вычисляет идентификатор LIBID, которые должны быть на основе текущей сборки.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1047">This action differs from that of the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> method, which calculates what the LIBID should be based on the current assembly.</span></span>  
  
 <span data-ttu-id="41aa0-1048">Дополнительные сведения об идентификаторах библиотек см. в разделе [преобразования экспортировать сборку](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span><span class="sxs-lookup"><span data-stu-id="41aa0-1048">For more information about library identifiers, see [Exported Assembly Conversion](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1049">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1049">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1050">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1050">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMITypeLib" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibGuidForAssembly">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuidForAssembly (System.Reflection.Assembly asm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuidForAssembly(class System.Reflection.Assembly asm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuidForAssembly (asm As Assembly) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuidForAssembly(System::Reflection::Assembly ^ asm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asm" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="asm">
          <span data-ttu-id="41aa0-1051">Сборка, из которой экспортирована библиотека типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1051">The assembly from which the type library was exported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1052">Извлекает идентификатор библиотеки LIBID, присвоенный библиотеке типов при экспортировании из указанной сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1052">Retrieves the library identifier (LIBID) that is assigned to a type library when it was exported from the specified assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1053">Идентификатор LIBID, присвоенный библиотеке типов при ее экспорте из указанной сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1053">The LIBID that is assigned to a type library when it is exported from the specified assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1054">При экспортировании сборок в библиотеки типов, библиотеки типов присваивается идентификатор LIBID.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1054">When assemblies are exported to type libraries, the type library is assigned a LIBID.</span></span> <span data-ttu-id="41aa0-1055">Идентификатор LIBID можно задать явно, применив <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType> в сборке уровня, или он может быть создан автоматически.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1055">You can set the LIBID explicitly by applying the <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType> at the assembly level, or it can be generated automatically.</span></span> <span data-ttu-id="41aa0-1056">[Tlbimp.exe (программа импорта библиотек типов)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) средство рассчитывает значение идентификатора LIBID, исходя из удостоверения сборки.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1056">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool calculates a LIBID value based on the identity of the assembly.</span></span> <span data-ttu-id="41aa0-1057"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> Возвращает идентификатор LIBID, связанные с <xref:System.Runtime.InteropServices.GuidAttribute>, если применяется атрибут.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1057"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> returns the LIBID that is associated with the <xref:System.Runtime.InteropServices.GuidAttribute>, if the attribute is applied.</span></span> <span data-ttu-id="41aa0-1058">В противном случае <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A> Возвращает вычисленное значение.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1058">Otherwise, <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A> returns the calculated value.</span></span> <span data-ttu-id="41aa0-1059">Кроме того, можно использовать <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> метод для извлечения действующего идентификатора LIBID из существующей библиотеки типов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1059">Alternatively, you can use the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> method to extract the actual LIBID from an existing type library.</span></span>  
  
 <span data-ttu-id="41aa0-1060">В разделе [экспортировать сборку преобразования](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86) Дополнительные сведения об идентификаторах библиотек.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1060">See the [Exported Assembly Conversion](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86) topic for more information about library identifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1061">Свойство <paramref name="asm" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1061">
              <paramref name="asm" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1062">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1062">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1063">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1063">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.GuidAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibLcid">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1064">Извлекает идентификатор LCID библиотеки типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1064">Retrieves the LCID of a type library.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibLcid">
      <MemberSignature Language="C#" Value="public static int GetTypeLibLcid (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTypeLibLcid(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibLcid (typelib As ITypeLib) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetTypeLibLcid(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib">
          <span data-ttu-id="41aa0-1065">Библиотека типов, идентификатор LCID которой требуется извлечь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1065">The type library whose LCID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1066">Извлекает идентификатор LCID библиотеки типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1066">Retrieves the LCID of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1067">Идентификатор LCID библиотеки типов, на которую указывает параметр <paramref name="typelib" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1067">The LCID of the type library that the <paramref name="typelib" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1068">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1068">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1069">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1069">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibLcid">
      <MemberSignature Language="C#" Value="public static int GetTypeLibLcid (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTypeLibLcid(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibLcid (pTLB As UCOMITypeLib) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetTypeLibLcid(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB">
          <span data-ttu-id="41aa0-1070">Библиотека типов, идентификатор LCID которой требуется извлечь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1070">The type library whose LCID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1071">Извлекает идентификатор LCID библиотеки типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1071">Retrieves the LCID of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1072">Идентификатор LCID библиотеки типов, на которую указывает параметр <paramref name="pTLB" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1072">The LCID of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1073">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1073">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1074">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1074">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1075">Извлекает имя библиотеки типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1075">Retrieves the name of a type library.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibName">
      <MemberSignature Language="C#" Value="public static string GetTypeLibName (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeLibName(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibName (typelib As ITypeLib) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeLibName(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib">
          <span data-ttu-id="41aa0-1076">Библиотека типов, имя которой требуется извлечь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1076">The type library whose name is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1077">Извлекает имя библиотеки типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1077">Retrieves the name of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1078">Имя библиотеки типов, на которую указывает параметр <paramref name="typelib" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1078">The name of the type library that the <paramref name="typelib" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1079">Имя, возвращенное этим методом является идентификатор, используемый с оператором библиотеки, например ADODB для библиотеки типов Microsoft ADO.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1079">The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</span></span> <span data-ttu-id="41aa0-1080">Имя не является именем файла.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1080">The name is not a file name.</span></span>  
  
 <span data-ttu-id="41aa0-1081">Также можно извлечь имя библиотеки типов, вызвав <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> метода и передачи -1 для первого параметра.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1081">You can also retrieve the type library name by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1082">Параметр <paramref name="typelib" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1082">The <paramref name="typelib" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1083">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1083">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1084">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1084">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibName">
      <MemberSignature Language="C#" Value="public static string GetTypeLibName (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeLibName(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibName (pTLB As UCOMITypeLib) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeLibName(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB">
          <span data-ttu-id="41aa0-1085">Библиотека типов, имя которой требуется извлечь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1085">The type library whose name is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1086">Извлекает имя библиотеки типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1086">Retrieves the name of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1087">Имя библиотеки типов, на которую указывает параметр <paramref name="pTLB" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1087">The name of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1088">Имя, возвращенное этим методом является идентификатор, используемый с оператором библиотеки, например ADODB для библиотеки типов Microsoft ADO.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1088">The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</span></span> <span data-ttu-id="41aa0-1089">Имя не является именем файла.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1089">The name is not a file name.</span></span>  
  
 <span data-ttu-id="41aa0-1090">Также можно извлечь имя библиотеки типов, вызвав <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> метода и передачи -1 для первого параметра.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1090">You can also retrieve the type library name by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1091">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1091">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1092">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1092">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibVersionForAssembly">
      <MemberSignature Language="C#" Value="public static void GetTypeLibVersionForAssembly (System.Reflection.Assembly inputAssembly, out int majorVersion, out int minorVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTypeLibVersionForAssembly(class System.Reflection.Assembly inputAssembly, [out] int32&amp; majorVersion, [out] int32&amp; minorVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetTypeLibVersionForAssembly (inputAssembly As Assembly, ByRef majorVersion As Integer, ByRef minorVersion As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetTypeLibVersionForAssembly(System::Reflection::Assembly ^ inputAssembly, [Runtime::InteropServices::Out] int % majorVersion, [Runtime::InteropServices::Out] int % minorVersion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="majorVersion" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="minorVersion" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="inputAssembly">
          <span data-ttu-id="41aa0-1093">Управляемая сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1093">A managed assembly.</span>
          </span>
        </param>
        <param name="majorVersion">
          <span data-ttu-id="41aa0-1094">Основной номер версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1094">The major version number.</span>
          </span>
        </param>
        <param name="minorVersion">
          <span data-ttu-id="41aa0-1095">Дополнительный номер версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1095">The minor version number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1096">Извлекает номер версии типа библиотеки, экспортируемой из указанной сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1096">Retrieves the version number of a type library that will be exported from the specified assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1097">Прежде чем экспортировать сборку с помощью <xref:System.Runtime.InteropServices.TypeLibExporterFlags> с `CallerResolvedReferences` значение, этот метод можно использовать для получения версии библиотеки типов из сборки.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1097">Before exporting an assembly by using <xref:System.Runtime.InteropServices.TypeLibExporterFlags> with the `CallerResolvedReferences` value, you can use this method to retrieve the type library version from the assembly.</span></span>  
  
 <span data-ttu-id="41aa0-1098">Если не применить <xref:System.Runtime.InteropServices.TypeLibVersionAttribute> атрибут экспортированной сборки, для явного управления номер версии созданную библиотеку типов, библиотеку типов будет иметь тот же номер версии, что и сборка.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1098">If you do not apply the <xref:System.Runtime.InteropServices.TypeLibVersionAttribute> attribute to an exported assembly to explicitly control the version number of the generated type library, the type library will have the same version number as the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1099">Свойство <paramref name="inputAssembly" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1099">
              <paramref name="inputAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1100">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1100">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1101">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1101">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.TypeLibExporterFlags" />
        <altmember cref="T:System.Runtime.InteropServices.TypeLibVersionAttribute" />
        <altmember cref="T:System.Runtime.InteropServices.ITypeLibConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetUniqueObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetUniqueObjectForIUnknown (IntPtr unknown);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetUniqueObjectForIUnknown(native int unknown) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUniqueObjectForIUnknown (unknown As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetUniqueObjectForIUnknown(IntPtr unknown);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unknown" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="unknown">
          <span data-ttu-id="41aa0-1102">Управляемый указатель на интерфейс <see langword="IUnknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1102">A managed pointer to an <see langword="IUnknown" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1103">Создает уникальный объект [вызываемой оболочки времени выполнения](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) для заданного интерфейса [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1103">Creates a unique [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) object for a given [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1104">Уникальная оболочка RCW для указанного интерфейса <see langword="IUnknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1104">A unique RCW for the specified <see langword="IUnknown" /> interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1105"><xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A> Метод гарантирует получение уникальная оболочка RCW, так как он не соответствует `IUnknown` указатель на существующий объект.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1105">The <xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A> method ensures that you receive a unique RCW, because it does not match an `IUnknown` pointer to an existing object.</span></span> <span data-ttu-id="41aa0-1106">Используйте этот метод, если необходимо создать уникальный вызываемая оболочка времени Выполнения, он не подвержен влиянию другой код, который вызывает <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1106">Use this method when you have to create a unique RCW that is not impacted by other code that calls the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1107">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1107">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1108">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1108">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedThunkForManagedMethodPtr">
      <MemberSignature Language="C#" Value="public static IntPtr GetUnmanagedThunkForManagedMethodPtr (IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetUnmanagedThunkForManagedMethodPtr(native int pfnMethodToWrap, native int pbSignature, int32 cbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnmanagedThunkForManagedMethodPtr (pfnMethodToWrap As IntPtr, pbSignature As IntPtr, cbSignature As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetUnmanagedThunkForManagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" />
        <Parameter Name="pbSignature" Type="System.IntPtr" />
        <Parameter Name="cbSignature" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pfnMethodToWrap">
          <span data-ttu-id="41aa0-1109">Указатель на метод, маршалирование которого требуется выполнить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1109">A pointer to the method to marshal.</span>
          </span>
        </param>
        <param name="pbSignature">
          <span data-ttu-id="41aa0-1110">Указатель на сигнатуру метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1110">A pointer to the method signature.</span>
          </span>
        </param>
        <param name="cbSignature">
          <span data-ttu-id="41aa0-1111">Число байтов в <c>pbSignature</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1111">The number of bytes in <c>pbSignature</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1112">Возвращает указатель на функцию, генерируемую в среде выполнения, которая маршалирует вызов из неуправляемого кода в управляемый.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1112">Gets a pointer to a runtime-generated function that marshals a call from unmanaged to managed code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1113">Указатель на функцию, маршалирующую вызов из параметра <paramref name="pfnMethodToWrap" /> в управляемый код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1113">A pointer to a function that will marshal a call from <paramref name="pfnMethodToWrap" /> to managed code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1114"><xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A> предоставляется только для поддержки компилятора.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1114"><xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A> is exposed for compiler support only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1115">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1115">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1116">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1116">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsComObject">
      <MemberSignature Language="C#" Value="public static bool IsComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsComObject (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsComObject(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="41aa0-1117">Объект для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1117">The object to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1118">Показывает, представляет ли указанный объект COM-объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1118">Indicates whether a specified object represents a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1119">Значение <see langword="true" />, если параметр <paramref name="o" /> является COM-типом. В противном случае значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1119">
              <see langword="true" /> if the <paramref name="o" /> parameter is a COM type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1120"><xref:System.Runtime.InteropServices.Marshal.IsComObject%2A> Возвращает `true` Если тип класса экземпляра имеет атрибут <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> или если производный прямо или косвенно от класса с атрибутом <xref:System.Runtime.InteropServices.ComImportAttribute>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1120"><xref:System.Runtime.InteropServices.Marshal.IsComObject%2A> returns `true` if the class type of the instance is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> or if it derives directly or indirectly from a class attributed with <xref:System.Runtime.InteropServices.ComImportAttribute>.</span></span> <span data-ttu-id="41aa0-1121">[Tlbimp.exe (программа импорта библиотек типов)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) средство использует этот атрибут при импортировании библиотеки типов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1121">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span>  
  
 <span data-ttu-id="41aa0-1122">Два других метода также определяют, представляет ли указанный объект COM-объект, но требования для возвращения `true` отличаются от требований данного метода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1122">Two other methods also determine whether a specified object represents a COM object, but the requirements for returning `true` differ from this method's requirements.</span></span> <span data-ttu-id="41aa0-1123"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> Возвращает `true` Если атрибутом класса (или интерфейса) <xref:System.Runtime.InteropServices.ComImportAttribute> напрямую; она не возвращает `true` для производных типов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1123"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> returns `true` if the class (or interface) is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute> directly; it does not return `true` for derived types.</span></span> <span data-ttu-id="41aa0-1124"><xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType> Возвращает `true` Если тип имеет атрибут <xref:System.Runtime.InteropServices.ComImportAttribute> или является производным от типа с тем же идентификатором GUID.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1124"><xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType> returns `true` if the type is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute> or derives from a type with the same GUID.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1125">Свойство <paramref name="o" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1125">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="P:System.Type.IsImport" />
        <altmember cref="M:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="IsTypeVisibleFromCom">
      <MemberSignature Language="C#" Value="public static bool IsTypeVisibleFromCom (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTypeVisibleFromCom(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTypeVisibleFromCom (t As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTypeVisibleFromCom(Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="41aa0-1126">Тип, для которого требуется проверить видимость для COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1126">The type to check for COM visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1127">Показывает, является ли тип видимым для клиентов COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1127">Indicates whether a type is visible to COM clients.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1128">Значение <see langword="true" />, если тип видим для COM; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1128">
              <see langword="true" /> if the type is visible to COM; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1129"><xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A> позволяет проверить видимость для COM. за один шаг.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1129"><xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A> enables you to check for COM visibility in one step.</span></span> <span data-ttu-id="41aa0-1130">Нельзя использовать типы, которые не видны из COM.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1130">Types that are not visible cannot be used from COM.</span></span> <span data-ttu-id="41aa0-1131">Тип является видимым, если это `public` и не скрыты с <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1131">A type is visible if it is `public` and not hidden with the <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="NumParamBytes">
      <MemberSignature Language="C#" Value="public static int NumParamBytes (System.Reflection.MethodInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 NumParamBytes(class System.Reflection.MethodInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NumParamBytes (m As MethodInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int NumParamBytes(System::Reflection::MethodInfo ^ m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="41aa0-1132">Проверяемый метод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1132">The method to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1133">Вычисляет число байтов в неуправляемой памяти, необходимых для хранения параметров указанного метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1133">Calculates the number of bytes in unmanaged memory that are required to hold the parameters for the specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1134">Число байтов, необходимых для представления параметров метода в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1134">The number of bytes required to represent the method parameters in unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1135"><xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A> Возвращает размер стека (в байтах), необходимых для представления параметров сигнатуры метода в неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1135">The <xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A> method returns the stack size (in bytes) needed to represent the parameters of a method signature in unmanaged memory.</span></span>  
  
 <span data-ttu-id="41aa0-1136">Обратите внимание, что возвращаемое значение этого метода зависит от платформы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1136">Note that the return value of this method is platform-dependent.</span></span> <span data-ttu-id="41aa0-1137">Например подпись с одним целочисленным параметром возвращает значение 4 на 32-разрядных платформ и значение 8 на 64-разрядных платформах.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1137">For example, a signature with a single integer parameter returns a value of 4 on 32-bit platforms and a value of 8 on 64-bit platforms.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1138">Параметр <paramref name="m" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1138">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1139">Параметр <paramref name="m" /> не является объектом <see cref="T:System.Reflection.MethodInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1139">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1140">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1140">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1141">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1141">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OffsetOf">
      <MemberSignature Language="C#" Value="public static IntPtr OffsetOf (Type t, string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int OffsetOf(class System.Type t, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetOf (t As Type, fieldName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr OffsetOf(Type ^ t, System::String ^ fieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="41aa0-1142">Тип значения или форматированный ссылочный тип, указывающий управляемый класс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1142">A value type or formatted reference type that specifies the managed class.</span>
          </span>
          <span data-ttu-id="41aa0-1143">К классу должен применяться <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1143">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> to the class.</span>
          </span>
        </param>
        <param name="fieldName">
          <span data-ttu-id="41aa0-1144">Поле внутри параметра <c>t</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1144">The field within the <c>t</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1145">Возвращает смещение поля для неуправляемой формы управляемого класса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1145">Returns the field offset of the unmanaged form of the managed class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1146">Смещение (в байтах) для параметра <paramref name="fieldName" /> в указанном классе, объявленном вызовом платформы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1146">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1147"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> предоставляет смещение с точки зрения макете неуправляемую структуру необязательно соответствует смещению макета управляемой структуры.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1147"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</span></span> <span data-ttu-id="41aa0-1148">Маршалинг структуру может преобразовать макет и изменить смещение.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1148">Marshaling the structure can transform the layout and alter the offset.</span></span> <span data-ttu-id="41aa0-1149">`t` Параметр может быть типом значения или форматированный ссылочный тип (с последовательным или явным макетом).</span><span class="sxs-lookup"><span data-stu-id="41aa0-1149">The `t` parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</span></span> <span data-ttu-id="41aa0-1150">Размер всего макета можно получить с помощью <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1150">You can obtain the size of the entire layout by using the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="41aa0-1151">Дополнительные сведения см. в разделе [по умолчанию маршалинга типов значений](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span><span class="sxs-lookup"><span data-stu-id="41aa0-1151">For additional information, see [Default Marshaling for Value Types](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41aa0-1152">Начиная с .NET Framework версии 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> может подвергнуть закрытые поля.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1152">Beginning with the .NET Framework version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> may expose private fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1153">Класс не может быть экспортирован как структура, или поле не является публичным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1153">The class cannot be exported as a structure or the field is nonpublic.</span>
          </span>
          <span data-ttu-id="41aa0-1154">Начиная с версии 2.0 платформы .NET Framework поле может быть закрытым.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1154">Beginning with the .NET Framework version 2.0, the field may be private.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1155">Параметр <paramref name="t" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1155">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OffsetOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr OffsetOf&lt;T&gt; (string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int OffsetOf&lt;T&gt;(string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetOf(Of T) (fieldName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr OffsetOf(System::String ^ fieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41aa0-1156">Управляемый тип значения или форматированный ссылочный тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1156">A managed value type or formatted reference type.</span>
          </span>
          <span data-ttu-id="41aa0-1157">Примените атрибут <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> к классу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1157">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> attribute to the class.</span>
          </span>
        </typeparam>
        <param name="fieldName">
          <span data-ttu-id="41aa0-1158">Имя поля в типе <c>T</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1158">The name of the field in the <c>T</c> type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1159">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1159">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-1160">Возвращает смещение поля для неуправляемой формы указанного управляемого класса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1160">Returns the field offset of the unmanaged form of a specified managed class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1161">Смещение (в байтах) для параметра <paramref name="fieldName" /> в указанном классе, объявленном вызовом платформы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1161">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1162"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29> предоставляет смещение с точки зрения макете неуправляемую структуру необязательно соответствует смещению макета управляемой структуры.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1162"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</span></span> <span data-ttu-id="41aa0-1163">Маршалинг структуру может преобразовать макет и изменить смещение.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1163">Marshaling the structure can transform the layout and alter the offset.</span></span> <span data-ttu-id="41aa0-1164">`T` Параметр универсального типа может быть типом значения или форматированный ссылочный тип (с последовательным или явным макетом).</span><span class="sxs-lookup"><span data-stu-id="41aa0-1164">The `T` generic type parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</span></span> <span data-ttu-id="41aa0-1165">Размер всего макета можно получить с помощью <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1165">You can obtain the size of the entire layout by using the <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> method.</span></span> <span data-ttu-id="41aa0-1166">Дополнительные сведения см. в разделе [по умолчанию маршалинга типов значений](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span><span class="sxs-lookup"><span data-stu-id="41aa0-1166">For additional information, see [Default Marshaling for Value Types](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41aa0-1167">Начиная с .NET Framework версии 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> может подвергнуть закрытые поля.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1167">Beginning with the .NET Framework version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> may expose private fields.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)" />
      </Docs>
    </Member>
    <Member MemberName="Prelink">
      <MemberSignature Language="C#" Value="public static void Prelink (System.Reflection.MethodInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Prelink(class System.Reflection.MethodInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Prelink (m As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Prelink(System::Reflection::MethodInfo ^ m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="41aa0-1168">Проверяемый метод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1168">The method to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1169">Выполняет задачи настройки метода за один раз, не вызывая метод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1169">Executes one-time method setup tasks without calling the method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1170">Задачи настройки обеспечивают раннюю инициализацию и выполняются автоматически при вызове целевого метода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1170">Setup tasks provide early initialization and are performed automatically when the target method is invoked.</span></span> <span data-ttu-id="41aa0-1171">Следующие задачи впервые.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1171">First-time tasks include the following:</span></span>  
  
-   <span data-ttu-id="41aa0-1172">Проверка того, что неуправляемого метаданных имеет правильный формат.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1172">Verifying that the platform invoke metadata is correctly formatted.</span></span>  
  
-   <span data-ttu-id="41aa0-1173">Проверка всех управляемых типов допустимых параметров платформы вызова функций.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1173">Verifying that all the managed types are valid parameters of platform invoke functions.</span></span>  
  
-   <span data-ttu-id="41aa0-1174">Поиск и загрузка неуправляемой библиотеки DLL в процессе.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1174">Locating and loading the unmanaged DLL into the process.</span></span>  
  
-   <span data-ttu-id="41aa0-1175">Расположение точки входа в процесс.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1175">Locating the entry point in the process.</span></span>  
  
 <span data-ttu-id="41aa0-1176">Вызов <xref:System.Runtime.InteropServices.Marshal.Prelink%2A> метода за пределами платформы вызова неуправляемого кода не влияет.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1176">Calling <xref:System.Runtime.InteropServices.Marshal.Prelink%2A> on a method outside of platform invoke has no effect.</span></span> <span data-ttu-id="41aa0-1177">Для выполнения установки задачи на всех платформах вызывать методы в типе используется <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1177">To execute setup tasks on all platform invoke methods in a type, use <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1178">Параметр <paramref name="m" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1178">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1179">Параметр <paramref name="m" /> не является объектом <see cref="T:System.Reflection.MethodInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1179">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1180">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1180">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1181">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1181">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="PrelinkAll">
      <MemberSignature Language="C#" Value="public static void PrelinkAll (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrelinkAll(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PrelinkAll (c As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrelinkAll(Type ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="41aa0-1182">Класс, методы которого требуется проверить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1182">The class whose methods are to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1183">Выполняет проверку перед связыванием для всех методов класса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1183">Performs a pre-link check for all methods on a class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1184"><xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> Вызывает метод <xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType> в каждом методе для данного типа.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1184">The <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> method invokes <xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType> on every method for a given type.</span></span> <span data-ttu-id="41aa0-1185"><xref:System.Runtime.InteropServices.Marshal.Prelink%2A> выполняет задачи настройки метода за один раз, не вызывая метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1185"><xref:System.Runtime.InteropServices.Marshal.Prelink%2A> executes one-time method setup tasks without calling each method.</span></span> <span data-ttu-id="41aa0-1186">Можно использовать <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> только для вызова платформы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1186">You can use <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> only for platform invoke calls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1187">Параметр <paramref name="c" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1187">The <paramref name="c" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1188">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1188">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1189">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1189">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringAnsi">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1190">Выделяет управляемый объект <see cref="T:System.String" /> и частично или целиком копирует в него неуправляемую строку ANSI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1190">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged ANSI string into it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringAnsi">
      <MemberSignature Language="C#" Value="public static string PtrToStringAnsi (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAnsi(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAnsi (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAnsi(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1191">Адрес первого символа в неуправляемой строке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1191">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1192">Копирует все символы вплоть до первого пустого из неуправляемой строки ANSI в управляемый объект <see cref="T:System.String" /> и преобразует каждый символ ANSI в Юникод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1192">Copies all characters up to the first null character from an unmanaged ANSI string to a managed <see cref="T:System.String" />, and widens each ANSI character to Unicode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1193">Управляемая строка, содержащая копию неуправляемой строки ANSI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1193">A managed string that holds a copy of the unmanaged ANSI string.</span>
          </span>
          <span data-ttu-id="41aa0-1194">Если параметр <paramref name="ptr" /> равен <see langword="null" />, метод возвращает пустую строку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1194">If <paramref name="ptr" /> is <see langword="null" />, the method returns a null string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1195"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> используется для настраиваемого маршалинга или при смешении управляемого и неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1195"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1196">Поскольку этот метод создает копию содержимого неуправляемой строки, необходимо освободить исходную строку.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1196">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="41aa0-1197">Этот метод предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> и <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1197">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1198">В следующем примере используется <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> метод для создания управляемого строки из неуправляемой `char` массива.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1198">The following example uses the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> method to create a managed string from an unmanaged `char` array.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1199">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1199">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1200">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1200">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringAnsi">
      <MemberSignature Language="C#" Value="public static string PtrToStringAnsi (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAnsi(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAnsi (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAnsi(IntPtr ptr, int len);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1201">Адрес первого символа в неуправляемой строке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1201">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="41aa0-1202">Копируемое количество байтов исходной строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1202">The byte count of the input string to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1203">Выделяет управляемый объект типа <see cref="T:System.String" />, копирует в него заданное число знаков из неуправляемой строки ANSI и преобразует каждый знак ANSI в Юникод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1203">Allocates a managed <see cref="T:System.String" />, copies a specified number of characters from an unmanaged ANSI string into it, and widens each ANSI character to Unicode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1204">Управляемая строка, содержащая копию собственной строки ANSI, если значение параметра <paramref name="ptr" /> не равно <see langword="null" />. В противном случае, этот метод возвращает значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1204">A managed string that holds a copy of the native ANSI string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1205"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> используется для настраиваемого маршалинга или при смешении управляемого и неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1205"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1206">Поскольку этот метод создает копию содержимого неуправляемой строки, необходимо освободить исходную строку.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1206">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="41aa0-1207">Этот метод предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> и <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1207">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1208">В следующем примере используется <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> метод для создания управляемого строки из неуправляемой`char` массива.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1208">The following example uses the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> method to create a managed string from an unmanaged`char` array.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr-int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr-int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1209">Значение параметра <paramref name="len" /> меньше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1209">
              <paramref name="len" /> is less than zero.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1210">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1210">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1211">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1211">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringAuto">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1212">Выделяет управляемый объект типа <see cref="T:System.String" /> и частично или полностью копирует в него неуправляемую строку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1212">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged string into it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringAuto">
      <MemberSignature Language="C#" Value="public static string PtrToStringAuto (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAuto(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAuto (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAuto(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1213">Для платформ Юникода это адрес первого символа Юникода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1213">For Unicode platforms, the address of the first Unicode character.</span>
          </span>
          <span data-ttu-id="41aa0-1214">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1214">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1215">Для платформ ANSI это адрес первого символа ANSI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1215">For ANSI plaforms, the address of the first ANSI character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1216">Выделяет управляемый объект <see cref="T:System.String" /> и копирует в него все знаки до первого пустого знака из строки, хранящейся в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1216">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from a string stored in unmanaged memory into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1217">Управляемая строка, хранящая копию неуправляемой строки, если значение параметра <paramref name="ptr" /> не равно нулю <see langword="null" />; в противном случае — значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1217">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1218">Если текущей платформой является Юникод, каждый знак ANSI преобразуется в символ Юникода, и этот метод вызывает метод <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1218">If the current platform is Unicode, each ANSI character is widened to a Unicode character and this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>.</span></span> <span data-ttu-id="41aa0-1219">В противном случае этот метод вызывает метод <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1219">Otherwise, this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span></span>  
  
 <span data-ttu-id="41aa0-1220"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> используется для настраиваемого маршалинга или при смешении управляемого и неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1220"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1221">Поскольку этот метод создает копию содержимого неуправляемой строки, необходимо освободить исходную строку.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1221">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="41aa0-1222"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> и <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1222"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1223">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1223">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1224">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1224">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringAuto">
      <MemberSignature Language="C#" Value="public static string PtrToStringAuto (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAuto(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAuto (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAuto(IntPtr ptr, int len);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1225">Для платформ Юникода это адрес первого символа Юникода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1225">For Unicode platforms, the address of the first Unicode character.</span>
          </span>
          <span data-ttu-id="41aa0-1226">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1226">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1227">Для платформ ANSI это адрес первого символа ANSI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1227">For ANSI plaforms, the address of the first ANSI character.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="41aa0-1228">Число символов для копирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1228">The number of characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1229">Выделяет управляемый объект <see cref="T:System.String" /> и копирует в него заданное число знаков из строки, сохраненной в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1229">Allocates a managed <see cref="T:System.String" /> and copies the specified number of characters from a string stored in unmanaged memory into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1230">Управляемая строка, хранящая копию исходной строки, если значение параметра <paramref name="ptr" /> не равно нулю <see langword="null" />; в противном случае — значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1230">A managed string that holds a copy of the native string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1231">Для платформ Юникода этот метод вызывает метод <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>; для платформ ANSI, он вызывает <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1231">On Unicode platforms, this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>; on ANSI platforms, it calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span></span> <span data-ttu-id="41aa0-1232">Преобразования не выполняются до вызова этих методов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1232">No transformations are done before these methods are called.</span></span>  
  
 <span data-ttu-id="41aa0-1233"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> используется для настраиваемого маршалинга или при смешении управляемого и неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1233"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1234">Поскольку этот метод создает копию содержимого неуправляемой строки, необходимо освободить исходную строку.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1234">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="41aa0-1235"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> и <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1235"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1236">Значение параметра <paramref name="len" /> меньше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1236">
              <paramref name="len" /> is less than zero.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1237">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1237">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1238">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1238">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringBSTR">
      <MemberSignature Language="C#" Value="public static string PtrToStringBSTR (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringBSTR(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringBSTR (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringBSTR(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1239">Адрес первого символа в неуправляемой строке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1239">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1240">Выделяет управляемый объект <see cref="T:System.String" /> и копирует в него [двоичную строку (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx), хранящуюся в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1240">Allocates a managed <see cref="T:System.String" /> and copies a [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) stored in unmanaged memory into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1241">Управляемая строка, содержащая копию неуправляемой строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1241">A managed string that holds a copy of the unmanaged string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1242">Этот метод вызывается только для строк, которые были выделены с неуправляемой [SysAllocString](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx) и [SysAllocStringLen](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx) функции.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1242">Call this method only on strings that were allocated with the unmanaged [SysAllocString](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx) and [SysAllocStringLen](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx) functions.</span></span>  
  
 <span data-ttu-id="41aa0-1243"><xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A> используется для настраиваемого маршалинга или при смешении управляемого и неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1243"><xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1244">Поскольку этот метод создает копию содержимого неуправляемой строки, необходимо освободить исходную строку.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1244">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="41aa0-1245">Этот метод предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1245">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1246">
            <paramref name="ptr" /> равняется <see cref="F:System.IntPtr.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1246">
              <paramref name="ptr" /> equals <see cref="F:System.IntPtr.Zero" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1247">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1247">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1248">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1248">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringUni">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1249">Выделяет управляемый объект типа <see cref="T:System.String" /> и частично или полностью копирует в него неуправляемую строку в формате Юникод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1249">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged Unicode string into it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringUni">
      <MemberSignature Language="C#" Value="public static string PtrToStringUni (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUni(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUni (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUni(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1250">Адрес первого символа в неуправляемой строке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1250">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1251">Выделяет управляемый объект <see cref="T:System.String" /> и копирует в него все знаки до первого пустого знака из неуправляемой строки Юникода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1251">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from an unmanaged Unicode string into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1252">Управляемая строка, хранящая копию неуправляемой строки, если значение параметра <paramref name="ptr" /> не равно нулю <see langword="null" />; в противном случае — значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1252">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1253"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> полезен для настраиваемого маршалинга для использования при совместном использовании управляемым и неуправляемым кодом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1253"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1254">Поскольку этот метод создает копию содержимого неуправляемой строки, необходимо освободить исходную строку.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1254">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="41aa0-1255">Этот метод предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> и <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1255">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1256">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1256">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1257">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1257">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUni">
      <MemberSignature Language="C#" Value="public static string PtrToStringUni (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUni(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUni (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUni(IntPtr ptr, int len);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1258">Адрес первого символа в неуправляемой строке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1258">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="41aa0-1259">Число копируемых символов Юникода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1259">The number of Unicode characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1260">Выделяет управляемый объект <see cref="T:System.String" /> и копирует в него заданное число знаков неуправляемой строки Юникода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1260">Allocates a managed <see cref="T:System.String" /> and copies a specified number of characters from an unmanaged Unicode string into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1261">Управляемая строка, хранящая копию неуправляемой строки, если значение параметра <paramref name="ptr" /> не равно нулю <see langword="null" />; в противном случае — значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1261">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1262"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> используется для настраиваемого маршалинга или при смешении управляемого и неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1262"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1263">Поскольку этот метод создает копию содержимого неуправляемой строки, необходимо освободить исходную строку.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1263">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="41aa0-1264">Этот метод предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> и <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1264">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1265">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1265">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1266">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1266">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUTF8">
      <MemberSignature Language="C#" Value="public static string PtrToStringUTF8 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUTF8(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUTF8 (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUTF8(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUTF8">
      <MemberSignature Language="C#" Value="public static string PtrToStringUTF8 (IntPtr ptr, int byteLen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUTF8(native int ptr, int32 byteLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUTF8 (ptr As IntPtr, byteLen As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUTF8(IntPtr ptr, int byteLen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="byteLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <param name="byteLen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStructure">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1267">Маршалирует данные из неуправляемого блока памяти в управляемый объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1267">Marshals data from an unmanaged block of memory to a managed object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStructure">
      <MemberSignature Language="C#" Value="public static void PtrToStructure (IntPtr ptr, object structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PtrToStructure(native int ptr, object structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PtrToStructure (ptr As IntPtr, structure As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PtrToStructure(IntPtr ptr, System::Object ^ structure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1268">Указатель на неуправляемый блок памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1268">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structure">
          <span data-ttu-id="41aa0-1269">Объект, в который копируются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1269">The object to which the data is to be copied.</span>
          </span>
          <span data-ttu-id="41aa0-1270">Он должен представлять собой экземпляр форматированного класса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1270">This must be an instance of a formatted class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1271">Маршалирует данные из неуправляемого блока памяти в управляемый объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1271">Marshals data from an unmanaged block of memory to a managed object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1272"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> часто используется в COM взаимодействия и вызова неуправляемого кода, когда параметры структуры представлены в виде <xref:System.IntPtr?displayProperty=nameWithType> значение.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1272"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> is often necessary in COM interop and platform invoke when structure parameters are represented as an <xref:System.IntPtr?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="41aa0-1273">Этот метод перегрузки нельзя использовать с типами значений.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1273">You cannot use this overload method with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1274">Распределение структуры не является ни последовательным, ни явным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1274">Structure layout is not sequential or explicit.</span>
          </span>
          <span data-ttu-id="41aa0-1275">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1275">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1276">Структура принадлежит к упакованному типу значений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1276">Structure is a boxed value type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1277">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1277">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1278">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1278">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure">
      <MemberSignature Language="C#" Value="public static object PtrToStructure (IntPtr ptr, Type structureType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object PtrToStructure(native int ptr, class System.Type structureType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStructure (ptr As IntPtr, structureType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PtrToStructure(IntPtr ptr, Type ^ structureType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structureType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1279">Указатель на неуправляемый блок памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1279">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structureType">
          <span data-ttu-id="41aa0-1280">Тип создаваемого объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1280">The type of object to be created.</span>
          </span>
          <span data-ttu-id="41aa0-1281">Этот объект должен представлять форматированный класс или структуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1281">This object must represent a formatted class or a structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1282">Маршалирует данные из неуправляемого блока памяти во вновь выделенный управляемый объект указанного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1282">Marshals data from an unmanaged block of memory to a newly allocated managed object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1283">Управляемый объект, содержащий данные, на которые указывает параметр <paramref name="ptr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1283">A managed object containing the data pointed to by the <paramref name="ptr" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1284"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> часто используется в COM взаимодействия и вызова неуправляемого кода, когда параметры структуры представлены в виде <xref:System.IntPtr?displayProperty=nameWithType> значение.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1284"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> is often necessary in COM interop and platform invoke when structure parameters are represented as an <xref:System.IntPtr?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="41aa0-1285">Это перегруженный метод, можно передать тип значения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1285">You can pass a value type to this overload method.</span></span> <span data-ttu-id="41aa0-1286">В этом случае возвращаемый объект — это упакованный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1286">In this case, the returned object is a boxed instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1287">В следующем примере создается управляемая структура, передается в неуправляемой памяти и затем передается обратно в управляемую память с помощью <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1287">The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 <span data-ttu-id="41aa0-1288">Ниже приведен пример, каким образом следует маршалировать в неуправляемый блок памяти в управляемую структуру с помощью <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1288">The following example demonstrates how to marshal an unmanaged block of memory to a managed structure using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="41aa0-1289">Данный код предполагает 32-разрядной компиляции.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1289">This code assumes 32-bit compilation.</span></span> <span data-ttu-id="41aa0-1290">Прежде чем использовать 64-разрядного компилятора, замените <xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType> с <xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1290">Before using a 64-bit compiler, replace <xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType> with <xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[PtrToStructure#1](~/samples/snippets/cpp/VS_Snippets_CLR/PtrToStructure/CPP/pts.cpp#1)]
 [!code-csharp[PtrToStructure#1](~/samples/snippets/csharp/VS_Snippets_CLR/PtrToStructure/CS/pts.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1291">Распределения параметра <paramref name="structureType" />не является ни последовательным, ни явным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1291">The <paramref name="structureType" /> parameter layout is not sequential or explicit.</span>
          </span>
          <span data-ttu-id="41aa0-1292">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1292">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1293">Параметр <paramref name="structureType" /> является определением универсального типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1293">The <paramref name="structureType" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1294">Свойство <paramref name="structureType" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1294">
              <paramref name="structureType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="41aa0-1295">Класс, Указанный <paramref name="structureType" /> не имеет доступного конструктора по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1295">The class specified by <paramref name="structureType" /> does not have an accessible default constructor.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1296">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1296">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1297">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1297">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T PtrToStructure&lt;T&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T PtrToStructure&lt;T&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStructure(Of T) (ptr As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T PtrToStructure(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41aa0-1298">Тип объекта, в который копируются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1298">The type of the object to which the data is to be copied.</span>
          </span>
          <span data-ttu-id="41aa0-1299">Это должен быть форматированный класс или структура.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1299">This must be a formatted class or a structure.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="41aa0-1300">Указатель на неуправляемый блок памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1300">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1301">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1301">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-1302">Маршалирует данные из неуправляемого блока памяти во вновь выделенный управляемый объект типа, указанного параметром универсального типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1302">Marshals data from an unmanaged block of memory to a newly allocated managed object of the type specified by a generic type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1303">Управляемый объект, содержащий данные, на которые указывает параметр <paramref name="ptr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1303">A managed object that contains the data that the <paramref name="ptr" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1304"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29> часто используется в COM взаимодействия и вызова неуправляемого кода, когда параметры структуры представлены в виде <xref:System.IntPtr?displayProperty=nameWithType> значения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1304"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29> is often necessary in COM interop and platform invoke when structure parameters are represented as <xref:System.IntPtr?displayProperty=nameWithType> values.</span></span> <span data-ttu-id="41aa0-1305">Эта перегрузка метода можно передать тип значения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1305">You can pass a value type to this method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1306">Макет <typeparamref name="T" /> не является ни последовательным, ни явным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1306">The layout of <typeparamref name="T" /> is not sequential or explicit.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="41aa0-1307">Класс, Указанный <typeparamref name="T" /> не имеет доступного конструктора по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1307">The class specified by <typeparamref name="T" /> does not have an accessible default constructor.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1308">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1308">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1309">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1309">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void PtrToStructure&lt;T&gt; (IntPtr ptr, T structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PtrToStructure&lt;T&gt;(native int ptr, !!T structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PtrToStructure(Of T) (ptr As IntPtr, structure As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void PtrToStructure(IntPtr ptr, T structure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structure" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41aa0-1310">Тип <c>структуры</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1310">The type of <c>structure</c>.</span>
          </span>
          <span data-ttu-id="41aa0-1311">Этот должен быть форматированный класс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1311">This must be a formatted class.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="41aa0-1312">Указатель на неуправляемый блок памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1312">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structure">
          <span data-ttu-id="41aa0-1313">Объект, в который копируются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1313">The object to which the data is to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1314">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1314">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-1315">Выполняет маршалирование данных из неуправляемого блока памяти в управляемый объекта указанного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1315">Marshals data from an unmanaged block of memory to a managed object of the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1316"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29> часто используется в COM взаимодействия и вызова неуправляемого кода, когда параметры структуры представлены в виде <xref:System.IntPtr> значения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1316"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29> is often necessary in COM interop and platform invoke when structure parameters are represented as <xref:System.IntPtr> values.</span></span> <span data-ttu-id="41aa0-1317">Эта перегрузка метода нельзя использовать с типами значений.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1317">You cannot use this method overload with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1318">Распределение структуры не является ни последовательным, ни явным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1318">Structure layout is not sequential or explicit.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1319">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1319">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1320">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1320">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="QueryInterface">
      <MemberSignature Language="C#" Value="public static int QueryInterface (IntPtr pUnk, ref Guid iid, out IntPtr ppv);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 QueryInterface(native int pUnk, valuetype System.Guid&amp; iid, [out] native int&amp; ppv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryInterface (pUnk As IntPtr, ByRef iid As Guid, ByRef ppv As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QueryInterface(IntPtr pUnk, Guid % iid, [Runtime::InteropServices::Out] IntPtr % ppv);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
        <Parameter Name="iid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="ppv" Type="System.IntPtr&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="41aa0-1321">Запрашиваемый интерфейс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1321">The interface to be queried.</span>
          </span>
        </param>
        <param name="iid">
          <span data-ttu-id="41aa0-1322">Идентификатор IID запрошенного интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1322">The interface identifier (IID) of the requested interface.</span>
          </span>
        </param>
        <param name="ppv">
          <span data-ttu-id="41aa0-1323">Когда этот метод возвращает результаты, в них содержится ссылка на возвращенный интерфейс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1323">When this method returns, contains a reference to the returned interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1324">Запрашивает указатель на заданный интерфейс из COM-объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1324">Requests a pointer to a specified interface from a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1325">Значение HRESULT, показывающее, успешно ли выполнен вызов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1325">An HRESULT that indicates the success or failure of the call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1326"><xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A> Предоставляет метод [IUnknown::QueryInterface](http://go.microsoft.com/fwlink/?LinkID=144867) метод объекта COM, который пытается получить указатель интерфейса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1326">The <xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A> method exposes the [IUnknown::QueryInterface](http://go.microsoft.com/fwlink/?LinkID=144867) method of a COM object, which attempts to obtain a specific interface pointer.</span></span> <span data-ttu-id="41aa0-1327">С помощью `QueryInterface` на COM объект является таким же, как выполнение операции приведения в управляемом коде.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1327">Using `QueryInterface` on a COM object is the same as performing a cast operation in managed code.</span></span> <span data-ttu-id="41aa0-1328">Вызов объекта с помощью этого метода приводит к увеличению в указателе на интерфейс, перед возвращением указателя счетчика ссылок.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1328">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="41aa0-1329">Всегда используйте <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> для уменьшения числа ссылок после завершения с указателем.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1329">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="41aa0-1330">Для получения <xref:System.IntPtr> значение, представляющее [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) указатель интерфейса, можно вызвать <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, или <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1330">To obtain an <xref:System.IntPtr> value that represents a [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer, you can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1331">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1331">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1332">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1332">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1333">Считывает один байт из неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1333">Reads a single byte from unmanaged memory.</span>
          </span>
          <span data-ttu-id="41aa0-1334">Чтение из невыровненных участков памяти поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1334">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As IntPtr) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1335">Адрес неуправляемой памяти, откуда производится чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1335">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1336">Считывает один байт из неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1336">Reads a single byte from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1337">Байт, считанный из неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1337">The byte read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1338"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> имеет неявный смещение, равное 0.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1338"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> has an implied offset of 0.</span></span> <span data-ttu-id="41aa0-1339">Этот метод позволяет прямое взаимодействие с неуправляемым массивом байтов, характерным для языка C, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для считывания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1339">This method enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1340">Чтение из невыровненных участков памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1340">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1341">Приведенный ниже создается блок неуправляемой памяти, выполняет запись байта в неуправляемую память, этот байт считывается обратно из неуправляемой памяти и затем уничтожает неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1341">The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/vb/example.vb#1)]  
  
 <span data-ttu-id="41aa0-1342">В следующем примере демонстрируется использование <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> метод для чтения значение неуправляемого символа.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1342">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> method to read the value of an unmanaged character.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadByte#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1343">
            <paramref name="ptr" /> не является распознаваемым форматом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1343">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="41aa0-1344">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1344">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1345">Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1345">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-1346">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1346">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1347">
            <paramref name="ptr" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1347">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1348">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1348">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1349">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1349">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As IntPtr, ofs As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(IntPtr ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1350">Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1350">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-1351">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед чтением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1351">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1352">Считывает один байт с указанным смещением (или индексом) из неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1352">Reads a single byte at a given offset (or index) from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1353">Байт, считываемый из неуправляемой памяти с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1353">The byte read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1354"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом байтов, характерным для языка C, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для считывания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1354"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1355">Чтение из невыровненных участков памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1355">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1356">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1356">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#3)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#3)]  
  
 <span data-ttu-id="41aa0-1357">В следующем примере демонстрируется использование <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> метод для чтения значение неуправляемого символа.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1357">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> method to read the value of an unmanaged character.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadByte-IntPtr-int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte-IntPtr-int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1358">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1358">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1359">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1359">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1360">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1360">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As Object, ofs As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(System::Object ^ ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1361">Базовый адрес в неуправляемой памяти исходного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1361">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-1362">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед чтением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1362">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1363">Считывает один байт с указанным смещением (или индексом) из неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1363">Reads a single byte at a given offset (or index) from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1364">Байт, считываемый из неуправляемой памяти с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1364">The byte read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1365"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом байтов, характерным для языка C, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для считывания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1365"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1366">Чтение из невыровненных участков памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1366">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1367">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1367">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1368">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1368">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="41aa0-1369">Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1369">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1370">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1370">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1371">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1371">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1372">Считывает из неуправляемой памяти 16-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1372">Reads a 16-bit signed integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="41aa0-1373">Чтение из невыровненных участков памяти поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1373">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As IntPtr) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1374">Адрес неуправляемой памяти, откуда производится чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1374">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1375">Считывает из неуправляемой памяти 16-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1375">Reads a 16-bit signed integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1376">16-битное целое число со знаком, считанное из неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1376">The 16-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1377"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> имеет неявный смещение, равное 0.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1377"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> has an implied offset of 0.</span></span> <span data-ttu-id="41aa0-1378">Этот метод позволяет прямое взаимодействие с неуправляемым C-стиле `Int16` массивом, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для считывания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1378">This method enables direct interaction with an unmanaged C-style `Int16` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1379">Чтение из невыровненных участков памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1379">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1380">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1380">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 <span data-ttu-id="41aa0-1381">В следующем примере демонстрируется использование <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> метод для чтения значение неуправляемый `short` переменной.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1381">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> method to read the value of an unmanaged `short` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt16#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt16/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1382">
            <paramref name="ptr" /> не является распознаваемым форматом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1382">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="41aa0-1383">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1383">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1384">Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1384">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-1385">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1385">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1386">
            <paramref name="ptr" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1386">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1387">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1387">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1388">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1388">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As IntPtr, ofs As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(IntPtr ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1389">Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1389">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-1390">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед чтением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1390">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1391">Считывает из неуправляемой памяти с указанным смещением 16-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1391">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1392">16-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1392">The 16-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1393"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком 16-разрядное, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для считывания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1393"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1394">Чтение из невыровненных участков памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1394">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1395">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1395">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 <span data-ttu-id="41aa0-1396">В следующем примере демонстрируется использование <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> метод для чтения значение неуправляемый `short` переменной.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1396">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> method to read the value of an unmanaged `short` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt16-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt16-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1397">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1397">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1398">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1398">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1399">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1399">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As Object, ofs As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(System::Object ^ ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1400">Базовый адрес в неуправляемой памяти исходного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1400">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-1401">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед чтением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1401">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1402">Считывает из неуправляемой памяти с указанным смещением 16-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1402">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1403">16-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1403">The 16-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1404"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком 16-разрядное, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для считывания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1404"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1405">Чтение из невыровненных участков памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1405">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1406">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1406">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1407">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1407">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="41aa0-1408">Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1408">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1409">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1409">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1410">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1410">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1411">Считывает из неуправляемой памяти 32-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1411">Reads a 32-bit signed integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="41aa0-1412">Чтение из невыровненных участков памяти поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1412">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1413">Адрес неуправляемой памяти, откуда производится чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1413">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1414">Считывает из неуправляемой памяти 32-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1414">Reads a 32-bit signed integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1415">32-битное целое число со знаком, считанное из неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1415">The 32-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1416"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> имеет неявный смещение, равное 0.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1416"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> has an implied offset of 0.</span></span> <span data-ttu-id="41aa0-1417">Этот метод позволяет прямое взаимодействие с неуправляемым C-стиле `Int32` массивом, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для считывания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1417">This method enables direct interaction with an unmanaged C-style `Int32` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1418">Чтение из невыровненных участков памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1418">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1419">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1419">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 <span data-ttu-id="41aa0-1420">В следующем примере демонстрируется использование <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> метод для чтения значение неуправляемый `int` переменной.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1420">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> method to read the value of an unmanaged `int` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt32#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt32/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1421">
            <paramref name="ptr" /> не является распознаваемым форматом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1421">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="41aa0-1422">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1422">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1423">Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1423">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-1424">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1424">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1425">
            <paramref name="ptr" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1425">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1426">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1426">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1427">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1427">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As IntPtr, ofs As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(IntPtr ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1428">Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1428">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-1429">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед чтением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1429">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1430">Считывает из неуправляемой памяти с указанным смещением 32-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1430">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1431">32-битное целое число со знаком, считанное из неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1431">The 32-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1432"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком 32 бита, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для считывания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1432"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1433">Чтение из невыровненных участков памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1433">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1434">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1434">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 <span data-ttu-id="41aa0-1435">В следующем примере демонстрируется использование <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> метод для чтения значение неуправляемый `int` переменной.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1435">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> method to read the value of an unmanaged `int` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt32-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt32-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1436">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1436">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1437">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1437">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1438">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1438">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As Object, ofs As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(System::Object ^ ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1439">Базовый адрес в неуправляемой памяти исходного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1439">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-1440">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед чтением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1440">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1441">Считывает из неуправляемой памяти с указанным смещением 32-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1441">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1442">32-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1442">The 32-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1443"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком 32 бита, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для считывания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1443"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1444">Чтение из невыровненных участков памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1444">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1445">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1445">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1446">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1446">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="41aa0-1447">Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1447">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1448">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1448">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1449">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1449">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1450">Считывает из неуправляемой памяти 64-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1450">Reads a 64-bit signed integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="41aa0-1451">Чтение из невыровненных участков памяти поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1451">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As IntPtr) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1452">Адрес неуправляемой памяти, откуда производится чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1452">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1453">Считывает из неуправляемой памяти 64-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1453">Reads a 64-bit signed integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1454">64-битное целое число со знаком, считанное из неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1454">The 64-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1455"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> имеет неявный смещение, равное 0.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1455"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> has an implied offset of 0.</span></span> <span data-ttu-id="41aa0-1456">Этот метод позволяет прямое взаимодействие с неуправляемым C-стиле `Int64` массивом, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для считывания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1456">This method enables direct interaction with an unmanaged C-style `Int64` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1457">Чтение из невыровненных участков памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1457">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1458">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1458">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 <span data-ttu-id="41aa0-1459">В следующем примере демонстрируется использование <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> метод для чтения значение неуправляемый `__int64` переменной.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1459">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> method to read the value of an unmanaged `__int64` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt64/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1460">
            <paramref name="ptr" /> не является распознаваемым форматом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1460">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="41aa0-1461">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1461">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1462">Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1462">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-1463">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1463">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1464">
            <paramref name="ptr" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1464">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1465">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1465">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1466">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1466">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As IntPtr, ofs As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(IntPtr ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1467">Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1467">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-1468">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед чтением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1468">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1469">Считывает из неуправляемой памяти с указанным смещением 64-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1469">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1470">64-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1470">The 64-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1471"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком x 64, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для считывания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1471"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1472">Чтение из невыровненных участков памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1472">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1473">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1473">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 <span data-ttu-id="41aa0-1474">В следующем примере демонстрируется использование <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> метод для чтения значение неуправляемый `__int64` переменной.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1474">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> method to read the value of an unmanaged `__int64` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt64-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt64-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1475">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1475">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1476">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1476">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1477">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1477">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As Object, ofs As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(System::Object ^ ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1478">Базовый адрес в неуправляемой памяти исходного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1478">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-1479">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед чтением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1479">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1480">Считывает из неуправляемой памяти с указанным смещением 64-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1480">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1481">64-битное целое число со знаком, считанное из неуправляемой памяти с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1481">The 64-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1482"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком x 64, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для считывания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1482"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1483">Чтение из невыровненных участков памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1483">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1484">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1484">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1485">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1485">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="41aa0-1486">Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1486">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1487">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1487">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1488">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1488">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadIntPtr">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1489">Считывает из неуправляемой памяти целое число, разрядность которого соответствует собственной разрядности процессора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1489">Reads a processor native sized integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="41aa0-1490">Чтение из невыровненных участков памяти поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1490">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1491">Адрес неуправляемой памяти, откуда производится чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1491">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1492">Считывает из неуправляемой памяти целое число, разрядность которого соответствует собственной разрядности процессора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1492">Reads a processor native-sized integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1493">Целое число, считанное из неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1493">The integer read from unmanaged memory.</span>
          </span>
          <span data-ttu-id="41aa0-1494">На 32-разрядных компьютерах возвращается 32-битное целое число, а на 64-разрядных компьютерах — 64-битное.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1494">A 32 bit integer is returned on 32 bit machines and a 64 bit integer is returned on 64 bit machines.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1495"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> имеет неявный смещение, равное 0.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1495"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> has an implied offset of 0.</span></span> <span data-ttu-id="41aa0-1496">Этот метод позволяет прямое взаимодействие с неуправляемым C-стиле `IntPtr` массивом, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для считывания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1496">This method enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1497">Чтение из невыровненных участков памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1497">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1498">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1498">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1499">
            <paramref name="ptr" /> не является распознаваемым форматом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1499">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="41aa0-1500">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1500">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1501">Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1501">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-1502">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1502">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1503">
            <paramref name="ptr" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1503">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1504">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1504">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1505">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1505">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As IntPtr, ofs As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(IntPtr ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1506">Базовый адрес в неуправляемой памяти, относительно которого выполняется чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1506">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-1507">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед чтением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1507">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1508">Считывает из неуправляемой памяти с указанным смещением знаковое целое число, разрядность которого соответствует собственной разрядности процессора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1508">Reads a processor native sized integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1509">Целое число, считываемое из неуправляемой памяти с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1509">The integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1510"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> позволяет осуществлять прямое взаимодействие с неуправляемым C-стиле `IntPtr` массивом, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для считывания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1510"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1511">Чтение из невыровненных участков памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1511">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1512">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1512">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1513">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1513">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1514">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1514">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1515">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1515">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As Object, ofs As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(System::Object ^ ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1516">Базовый адрес в неуправляемой памяти исходного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1516">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-1517">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед чтением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1517">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1518">Считывает из неуправляемой памяти целое число, разрядность которого соответствует собственной разрядности процессора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1518">Reads a processor native sized integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1519">Целое число, считываемое из неуправляемой памяти с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1519">The integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1520"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> позволяет осуществлять прямое взаимодействие с неуправляемым C-стиле `IntPtr` массивом, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для считывания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1520"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1521">Чтение из невыровненных участков памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1521">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1522">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1522">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1523">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1523">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="41aa0-1524">Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1524">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1525">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1525">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1526">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1526">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReAllocCoTaskMem">
      <MemberSignature Language="C#" Value="public static IntPtr ReAllocCoTaskMem (IntPtr pv, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReAllocCoTaskMem(native int pv, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReAllocCoTaskMem (pv As IntPtr, cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReAllocCoTaskMem(IntPtr pv, int cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pv">
          <span data-ttu-id="41aa0-1527">Указатель на память, выделенную с использованием <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1527">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="41aa0-1528">Новый размер выделенного блока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1528">The new size of the allocated block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1529">Изменяет размер блока памяти, предварительно выделенной с использованием <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1529">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1530">Целое число, представляющее адрес повторно выделенного блока памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1530">An integer representing the address of the reallocated block of memory.</span>
          </span>
          <span data-ttu-id="41aa0-1531">Освобождать эту память необходимо с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1531">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1532"><xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A> является одним из двух методов повторного выделения памяти в <xref:System.Runtime.InteropServices.Marshal> класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1532"><xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A> is one of two memory reallocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="41aa0-1533">(<xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> заключается в.) Начало содержимого памяти, выделенной повторно совпадает с именем исходного содержимого; Однако блок всей памяти может быть в другом месте.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1533">(<xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> is the other.) The beginning of the reallocated memory content is the same as the original content; however, the entire memory block can be in a different location.</span></span> <span data-ttu-id="41aa0-1534">Этот метод предоставляет COM [CoTaskMemRealloc](http://go.microsoft.com/fwlink/?LinkId=148778) функции, которая называется распределения памяти для задач COM.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1534">This method exposes the COM [CoTaskMemRealloc](http://go.microsoft.com/fwlink/?LinkId=148778) function, which is referred to as the COM task memory allocator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-1535">Недостаточно памяти для выполнения запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1535">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1536">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1536">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1537">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1537">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="ReAllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr ReAllocHGlobal (IntPtr pv, IntPtr cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReAllocHGlobal(native int pv, native int cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReAllocHGlobal (pv As IntPtr, cb As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReAllocHGlobal(IntPtr pv, IntPtr cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pv">
          <span data-ttu-id="41aa0-1538">Указатель на память, выделенную с использованием <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1538">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="41aa0-1539">Новый размер выделенного блока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1539">The new size of the allocated block.</span>
          </span>
          <span data-ttu-id="41aa0-1540">Это не указатель; это запрашиваемое число байтов, приведенное к типу <see cref="T:System.IntPtr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1540">This is not a pointer; it is the byte count you are requesting, cast to type <see cref="T:System.IntPtr" />.</span>
          </span>
          <span data-ttu-id="41aa0-1541">Если передается указатель, он рассматривается как размер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1541">If you pass a pointer, it is treated as a size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1542">Изменяет размер блока памяти, предварительно выделенной с использованием <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1542">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1543">Указатель на повторно выделенную память.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1543">A pointer to the reallocated memory.</span>
          </span>
          <span data-ttu-id="41aa0-1544">Эта память должна освобождаться с помощью <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1544">This memory must be released using <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1545"><xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> является одним из перераспределение памяти двух методов API в <xref:System.Runtime.InteropServices.Marshal> класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1545"><xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> is one of two memory reallocation API methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="41aa0-1546">(<xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType> заключается в.)</span><span class="sxs-lookup"><span data-stu-id="41aa0-1546">(<xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType> is the other.)</span></span>  
  
 <span data-ttu-id="41aa0-1547">Этот метод предоставляет Win32 [GlobalReAlloc](http://go.microsoft.com/fwlink/?LinkId=148780) из Kernel32.dll.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1547">This method exposes the Win32 [GlobalReAlloc](http://go.microsoft.com/fwlink/?LinkId=148780) function from Kernel32.dll.</span></span> <span data-ttu-id="41aa0-1548">Возвращенный указатель может отличаться от исходных.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1548">The returned pointer can differ from the original.</span></span> <span data-ttu-id="41aa0-1549">Если он отличается, содержимое исходного блока памяти были скопированы в новый блок и исходного блока памяти был освобожден.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1549">If it is different, the contents of the original memory block have been copied to the new block, and the original memory block has been freed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-1550">Недостаточно памяти для выполнения запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1550">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1551">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1551">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1552">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1552">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public static int Release (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Release(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Release (pUnk As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Release(IntPtr pUnk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="41aa0-1553">Освобождаемый интерфейс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1553">The interface to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1554">Уменьшает счетчик ссылок для указанного интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1554">Decrements the reference count on the specified interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1555">Новое значение счетчика ссылок для интерфейса, заданного параметром <paramref name="pUnk" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1555">The new value of the reference count on the interface specified by the <paramref name="pUnk" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1556">Общеязыковая среда выполнения управляет счетчиком ссылок объекта COM, устраняя необходимость прямого использования этого метода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1556">The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</span></span> <span data-ttu-id="41aa0-1557">Используйте это значение только для целей тестирования.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1557">Use this value only for testing purposes.</span></span> <span data-ttu-id="41aa0-1558">В редких случаях, например для тестирования пользовательского упаковщика может оказаться необходимых для управления временем жизни объекта вручную.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1558">In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</span></span> <span data-ttu-id="41aa0-1559">Только программы, вызывающие <xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType> следует вызывать <xref:System.Runtime.InteropServices.Marshal.Release%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1559">Only programs that call <xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType> should call <xref:System.Runtime.InteropServices.Marshal.Release%2A>.</span></span> <span data-ttu-id="41aa0-1560">Вызов <xref:System.Runtime.InteropServices.Marshal.Release%2A> когда число ссылок достигает нуля, приведет к неопределенному поведению.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1560">Calling <xref:System.Runtime.InteropServices.Marshal.Release%2A> after the reference count has reached zero causes undefined behavior.</span></span>  
  
 <span data-ttu-id="41aa0-1561">Можно вызвать <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, или <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> для получения <xref:System.IntPtr> значение, представляющее [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) указатель интерфейса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1561">You can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to obtain an <xref:System.IntPtr> value that represents a [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer to release.</span></span> <span data-ttu-id="41aa0-1562">Можно также использовать эти методы и <xref:System.Runtime.InteropServices.Marshal.Release%2A> метод для управляемых объектов для освобождения интерфейсов COM, представленный управляемый объект [вызываемая оболочка COM](~/docs/framework/interop/com-callable-wrapper.md).</span><span class="sxs-lookup"><span data-stu-id="41aa0-1562">You can also use these methods and the <xref:System.Runtime.InteropServices.Marshal.Release%2A> method on managed objects to release the COM interfaces represented by the managed object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1563">Следующий пример демонстрирует способ получения `IUnknown` интерфейса для управляемого объекта, используя <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1563">The following example demonstrates how to retrieve an `IUnknown` interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> method.</span></span> <span data-ttu-id="41aa0-1564">В примере затем освобождает указатель интерфейса, вызвав <xref:System.Runtime.InteropServices.Marshal.Release%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1564">The example then releases the interface pointer by calling the <xref:System.Runtime.InteropServices.Marshal.Release%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1565">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1565">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1566">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1566">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseComObject">
      <MemberSignature Language="C#" Value="public static int ReleaseComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReleaseComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReleaseComObject (o As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReleaseComObject(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="41aa0-1567">Освобождаемый COM-объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1567">The COM object to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1568">Уменьшает счетчик ссылок [вызываемой оболочки времени выполнения](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW), связанной с указанным COM-объектом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1568">Decrements the reference count of the [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) associated with the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1569">Новое значение счетчика ссылок оболочки RCW, связанной с <paramref name="o" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1569">The new value of the reference count of the RCW associated with <paramref name="o" />.</span>
          </span>
          <span data-ttu-id="41aa0-1570">Это значение обычно равно нулю, поскольку оболочка RCW хранит только одну ссылку на COM-объект в оболочке вне зависимости от количества управляемых клиентов, которые ее вызывают.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1570">This value is typically zero since the RCW keeps just one reference to the wrapped COM object regardless of the number of managed clients calling it.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1571">Этот метод используется для явного управления временем жизни объекта COM, используемого из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1571">This method is used to explicitly control the lifetime of a COM object used from managed code.</span></span> <span data-ttu-id="41aa0-1572">Этот метод следует использовать для освобождения основного COM-объекта, содержащего ссылки на ресурсы, своевременно или для освобождения объектов в определенном порядке.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1572">You should use this method to free the underlying COM object that holds references to resources in a timely manner or when objects must be freed in a specific order.</span></span>  
  
 <span data-ttu-id="41aa0-1573">При каждом входе указателя интерфейса СОМ общеязыковой среды выполнения (CLR), оно помещается в оболочку RCW.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1573">Every time a COM interface pointer enters the common language runtime (CLR), it is wrapped in an RCW.</span></span>  
  
 <span data-ttu-id="41aa0-1574">Вызываемая оболочка времени имеет счетчик ссылок, который увеличивается каждый раз, он сопоставляется указатель интерфейса СОМ.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1574">The RCW has a reference count that is incremented every time a COM interface pointer is mapped to it.</span></span> <span data-ttu-id="41aa0-1575"><xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> Метод уменьшает значение счетчика ссылок для вызываемой оболочки времени Выполнения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1575">The <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method decrements the reference count of an RCW.</span></span> <span data-ttu-id="41aa0-1576">Когда число ссылок достигает нуля, среда выполнения освобождает все ссылки на неуправляемый COM-объект и вызывает <xref:System.NullReferenceException?displayProperty=nameWithType> при попытке дальнейшего использования объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1576">When the reference count reaches zero, the runtime releases all its references on the unmanaged COM object, and throws a <xref:System.NullReferenceException?displayProperty=nameWithType> if you attempt to use the object further.</span></span> <span data-ttu-id="41aa0-1577">Если один и тот же интерфейс COM передается только один раз из неуправляемого в управляемый код, счетчик ссылок на оболочки увеличивается каждый раз и при вызове метода <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> возвращает количество оставшихся ссылок.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1577">If the same COM interface is passed more than one time from unmanaged to managed code, the reference count on the wrapper is incremented every time, and calling <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> returns the number of remaining references.</span></span>  
  
 <span data-ttu-id="41aa0-1578">Этот метод позволяет принудительно выпустить счетчик ссылок RCW, что происходит точно при необходимости его.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1578">This method enables you to force an RCW reference count release so that it occurs precisely when you want it to.</span></span> <span data-ttu-id="41aa0-1579">Однако неправильное использование <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> может привести к сбою, приложения или вызывает нарушение прав доступа.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1579">However, improper use of <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> may cause your application to fail, or may cause an access violation.</span></span>  
  
 <span data-ttu-id="41aa0-1580">Рассмотрим сценарий, в котором управляемый код в домене приложения полагается на RCW, которая представляет COM-компонента.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1580">Consider a scenario in which managed code in an application domain is holding onto an RCW that represents a COM component.</span></span> <span data-ttu-id="41aa0-1581">При вызове метода <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> метод вызываемая оболочка времени Выполнения, управляемый код, не смогут получить доступ к вызываемой оболочки времени Выполнения и вызывает <xref:System.Runtime.InteropServices.InvalidComObjectException> исключение.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1581">If you call the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method on the RCW, the managed code will be unable to access the RCW and will raise an <xref:System.Runtime.InteropServices.InvalidComObjectException> exception.</span></span>  
  
 <span data-ttu-id="41aa0-1582">Более серьезная ошибка может возникнуть, если вызов RCW выполняется после освобождения RCW.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1582">A more serious error may occur if a call to the RCW is executing when the RCW is released.</span></span> <span data-ttu-id="41aa0-1583">В этом случае является велика вероятность того, что вызывающий поток вызовет нарушение прав доступа.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1583">In this case, there is a good chance that the thread making the call will cause an access violation.</span></span> <span data-ttu-id="41aa0-1584">Однако возможно повреждение памяти процесса, и процесс может продолжать выполнять, пока не завершится сбоем по причинам, которые очень трудно отлаживать.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1584">However, process memory may become corrupted, and the process may continue to run until it fails for reasons that are very difficult to debug.</span></span>  
  
 <span data-ttu-id="41aa0-1585">Этот риск усугубляется, если COM-компонент, который используется является одноэлементным множеством, по следующей причине: среда CLR активирует COM-компоненты путем вызова COM [CoCreateInstance](http://go.microsoft.com/fwlink/?LinkID=142894) функции, которая возвращает тот же указатель интерфейса каждые время, когда он вызывается для одноэлементного COM-компонента.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1585">This risk is compounded when the COM component that is being used is a singleton, for the following reason: The CLR activates COM components by calling the COM [CoCreateInstance](http://go.microsoft.com/fwlink/?LinkID=142894) function, which returns the same interface pointer every time it is called for singleton COM components.</span></span> <span data-ttu-id="41aa0-1586">Таким образом, отдельная и независимая части управляемого кода, в домене приложения может использовать ту же RCW для одноэлементного COM-компонент и если один вызовы <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> метод COM-компонента другой будет нарушена.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1586">Thus, separate and independent pieces of managed code in an application domain can be using the same RCW for a singleton COM component, and if either one calls the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method on the COM component, the other will be broken.</span></span>  
  
 <span data-ttu-id="41aa0-1587">Таким образом, использовать <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> только в том случае, если это абсолютно необходимо.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1587">Therefore, use the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> only if it is absolutely required.</span></span> <span data-ttu-id="41aa0-1588">Если вы хотите вызвать этот метод для освобождения COM-компонента в определенное время, рассмотрите возможность использования <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> метод вместо него.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1588">If you want to call this method to ensure that a COM component is released at a determined time, consider using the <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method instead.</span></span> <span data-ttu-id="41aa0-1589"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> будет освобождать основной COM-компонент, независимо от того, сколько раз повторно вошел среды CLR.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1589"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> will release the underlying COM component regardless of how many times it has re-entered the CLR.</span></span> <span data-ttu-id="41aa0-1590">Счетчик внутренних ссылок RCW увеличивается на единицу каждый раз, COM-компонент повторно входит в среду CLR.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1590">The internal reference count of the RCW is incremented by one every time the COM component re-enters the CLR.</span></span> <span data-ttu-id="41aa0-1591">Таким образом, вы можете вызвать <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> метод в цикле, пока возвращаемое значение равно нулю.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1591">Therefore, you could call the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method in a loop until the value returned is zero.</span></span> <span data-ttu-id="41aa0-1592">Это обеспечивает такой же результат, как <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1592">This achieves the same result as the <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1593">
            <paramref name="o" /> не является допустимым COM-объектом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1593">
              <paramref name="o" /> is not a valid COM object.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="41aa0-1594">Свойство <paramref name="o" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1594">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1595">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1595">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1596">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1596">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)" />
        <altmember cref="T:System.NullReferenceException" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseThreadCache">
      <MemberSignature Language="C#" Value="public static void ReleaseThreadCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseThreadCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReleaseThreadCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseThreadCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseThreadCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1597">Освобождает кэш потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1597">Releases the thread cache.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1598">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1598">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1599">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1599">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToBSTR (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToBSTR(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToBSTR (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToBSTR(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-1600">Управляемый объект, подлежащий копированию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1600">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1601">Выделяет неуправляемую [двоичную строку (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) и копирует в нее содержимое управляемого объекта <see cref="T:System.Security.SecureString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1601">Allocates an unmanaged [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) and copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1602">Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1602">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1603"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> Метод полезен для настраиваемого маршалинга или когда сочетание управляемого и неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1603">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1604">Так как этот метод выделения неуправляемой памяти, необходимой для строки, освобождать `BSTR` , вызывая <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1604">Because this method allocates the unmanaged memory required for a string, always free the `BSTR` when finished by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1605">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1605">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="41aa0-1606">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1606">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-1607">Не хватает памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1607">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1608">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1608">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1609">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1609">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="41aa0-1610">Этот метод поддерживается только на компьютерах под управлением Windows 2000 Service Pack 3 или более поздней версии.</span>
            <span class="sxs-lookup">
              <span data-stu-id="41aa0-1610">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemAnsi(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-1611">Управляемый объект, подлежащий копированию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1611">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1612">Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в блок памяти, выделенный из неуправляемого распределителя COM-задач.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1612">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1613">Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1613">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1614"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> Метод полезен для настраиваемого маршалинга или когда сочетание управляемого и неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1614">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1615">Так как этот метод выделения неуправляемой памяти, необходимой для строки, вызвав освобождать память <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1615">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>.</span></span> <span data-ttu-id="41aa0-1616">Знаки строки копируются как символы ANSI.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1616">The characters of the string are copied as ANSI characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1617">В следующем примере используется <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> метод маршалировать и расшифровать содержимое <xref:System.Security.SecureString> объекта в блок неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1617">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="41aa0-1618">Затем он использует <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> метод обнуляет и dispose неуправляемого блока.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1618">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1619">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1619">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="41aa0-1620">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1620">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-1621">Не хватает памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1621">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1622">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1622">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1623">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1623">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="41aa0-1624">Этот метод поддерживается только на компьютерах под управлением Windows 2000 Service Pack 3 или более поздней версии.</span>
            <span class="sxs-lookup">
              <span data-stu-id="41aa0-1624">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemUnicode(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-1625">Управляемый объект, подлежащий копированию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1625">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1626">Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в блок памяти, выделенный из неуправляемого распределителя COM-задач.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1626">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1627">Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1627">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1628"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> Метод полезен для настраиваемого маршалинга или когда сочетание управляемого и неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1628">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1629">Так как этот метод выделения неуправляемой памяти, необходимой для строки, вызвав освобождать память <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1629">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method.</span></span> <span data-ttu-id="41aa0-1630">Знаки строки копируются в виде символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1630">The characters of the string are copied as Unicode characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1631">В следующем примере используется <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> метод маршалировать и расшифровать содержимое <xref:System.Security.SecureString> объекта в блок неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1631">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="41aa0-1632">Затем он использует <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> метод обнуляет и dispose неуправляемого блока.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1632">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1633">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1633">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="41aa0-1634">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1634">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-1635">Не хватает памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1635">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1636">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1636">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1637">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1637">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="41aa0-1638">Этот метод поддерживается только на компьютерах под управлением Windows 2000 Service Pack 3 или более поздней версии.</span>
            <span class="sxs-lookup">
              <span data-stu-id="41aa0-1638">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocAnsi(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-1639">Управляемый объект, подлежащий копированию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1639">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1640">Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в неуправляемую память, преобразуя его по мере копирования в формат ANSI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1640">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> into unmanaged memory, converting into ANSI format as it copies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1641">Адрес в неуправляемой памяти, куда скопирован параметр <paramref name="s" />, или 0, если передан пустой объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1641">The address, in unmanaged memory, to where the <paramref name="s" /> parameter was copied, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1642"><xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> Метод полезен для настраиваемого маршалинга или когда сочетание управляемого и неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1642">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1643">Так как этот метод выделения неуправляемой памяти, необходимой для строки, вызвав освобождать память <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1643">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1644">В следующем примере используется <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> метод маршалировать и расшифровать содержимое <xref:System.Security.SecureString> объекта в блок неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1644">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="41aa0-1645">Затем он использует <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> метод обнуляет и dispose неуправляемого блока.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1645">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1646">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1646">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="41aa0-1647">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1647">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-1648">Не хватает памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1648">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1649">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1649">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1650">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1650">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="41aa0-1651">Этот метод поддерживается только на компьютерах под управлением Windows 2000 Service Pack 3 или более поздней версии.</span>
            <span class="sxs-lookup">
              <span data-stu-id="41aa0-1651">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocUnicode(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-1652">Управляемый объект, подлежащий копированию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1652">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1653">Копирует содержимое управляемого объекта <see cref="T:System.Security.SecureString" /> в неуправляемую память.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1653">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1654">Адрес в неуправляемой памяти, куда был скопирован параметр <paramref name="s" />, или значение 0, если параметр <paramref name="s" /> представляет собой объект <see cref="T:System.Security.SecureString" />, длина которого равна 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1654">The address, in unmanaged memory, where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is a <see cref="T:System.Security.SecureString" /> object whose length is 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1655"><xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> Метод применяется для настраиваемого маршалинга или используйте сочетание управляемого и неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1655">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1656">Так как этот метод выделения неуправляемой памяти, необходимой для строки, вызвав освобождать память <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1656">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1657">В следующем примере демонстрируется использование <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> метод неуправляемыми `LogonUser` функцию для выполнения олицетворения пользователя с помощью <xref:System.Security.SecureString> класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1657">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method with the unmanaged `LogonUser` function to perform impersonation with the <xref:System.Security.SecureString> class.</span></span> <span data-ttu-id="41aa0-1658">Затем в примере используется <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> метод обнуляет и освобождения ссылки неуправляемой строки.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1658">The example then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method to zero out and free the unmanaged string reference.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1659">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1659">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="41aa0-1660">Текущий компьютер не работает под управлением Windows 2000 с пакетом обновления 3 (SP3) или более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1660">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-1661">Не хватает памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1661">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1662">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1662">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1663">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1663">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="41aa0-1664">Этот метод поддерживается только на компьютерах под управлением Windows 2000 Service Pack 3 или более поздней версии.</span>
            <span class="sxs-lookup">
              <span data-stu-id="41aa0-1664">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetComObjectData">
      <MemberSignature Language="C#" Value="public static bool SetComObjectData (object obj, object key, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetComObjectData(object obj, object key, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetComObjectData (obj As Object, key As Object, data As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetComObjectData(System::Object ^ obj, System::Object ^ key, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="41aa0-1665">COM-объект для хранения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1665">The COM object in which to store the data.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="41aa0-1666">Ключ во внутренней хэш-таблице COM-объекта, в котором хранятся данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1666">The key in the internal hash table of the COM object in which to store the data.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="41aa0-1667">Задаваемые данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1667">The data to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1668">Определяет данные, на которые ссылается заданный ключ в указанном COM-объекте.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1668">Sets data referenced by the specified key in the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1669">Значение <see langword="true" />, если данные заданы успешно; в противном случае значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1669">
              <see langword="true" /> if the data was set successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1670">Все COM-объекты в оболочку [вызываемой оболочки времени выполнения](~/docs/framework/interop/runtime-callable-wrapper.md) (времени выполнения RCW) имеют связанной хэш-таблице, к которому <xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A> добавляет данные.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1670">All COM objects wrapped in a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) have an associated hash table, to which <xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A> adds data.</span></span> <span data-ttu-id="41aa0-1671"><xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType> Извлекает данные из хэш-таблицы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1671"><xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType> retrieves data from the hash table.</span></span> <span data-ttu-id="41aa0-1672">Никогда не требуется для вызова любого метода из кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1672">You should never have to call either method from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1673">Свойство <paramref name="obj" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1673">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-1674">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1674">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1675">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1675">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1676">
            <paramref name="obj" /> не является COM-объектом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1676">
              <paramref name="obj" /> is not a COM object.</span>
          </span>
          <span data-ttu-id="41aa0-1677">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1677">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1678">
            <paramref name="obj" /> является объектом [!INCLUDE[wrt](~/includes/wrt-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1678">
              <paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1679">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1679">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1680">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1680">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SizeOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1681">Возвращает неуправляемый размер класса (в байтах).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1681">Returns the unmanaged size, in bytes, of a class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SizeOf">
      <MemberSignature Language="C#" Value="public static int SizeOf (object structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf(object structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf (structure As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SizeOf(System::Object ^ structure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="structure">
          <span data-ttu-id="41aa0-1682">Объект, размер которого возвращается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1682">The object whose size is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1683">Возвращает неуправляемый размер объекта в байтах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1683">Returns the unmanaged size of an object in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1684">Размер указанного объекта в неуправляемом коде.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1684">The size of the specified object in unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1685">Этот метод принимает экземпляр структуры, который может быть типом ссылки или упакованным типом значения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1685">This method accepts an instance of a structure, which can be a reference type or a boxed value type.</span></span> <span data-ttu-id="41aa0-1686">Представление должно быть последовательным или явным.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1686">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="41aa0-1687">Возвращаемый размер равно размеру неуправляемого объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1687">The size returned is the size of the unmanaged object.</span></span> <span data-ttu-id="41aa0-1688">Управляемый и неуправляемый размеры объекта могут различаться.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1688">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="41aa0-1689">Для символьных типов определяется размер <xref:System.Runtime.InteropServices.CharSet> значение, применяемое к этому классу.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1689">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 <span data-ttu-id="41aa0-1690">Можно использовать <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> метод, чтобы определить, какой объем неуправляемой памяти для выделения с помощью <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> и <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1690">You can use the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method to determine how much unmanaged memory to allocate using the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> and <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1691">Следующий пример создает управляемую структуру, передается в неуправляемой памяти и затем передается обратно в управляемую память.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1691">The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory.</span></span> <span data-ttu-id="41aa0-1692">В этом примере используется <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> метод, чтобы определить, какой объем неуправляемой памяти для выделения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1692">This example uses the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method to determine how much unmanaged memory to allocate.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1693">Параметр <paramref name="structure" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1693">The <paramref name="structure" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="SizeOf">
      <MemberSignature Language="C#" Value="public static int SizeOf (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SizeOf(Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="41aa0-1694">Тип, размер которого возвращается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1694">The type whose size is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1695">Возвращает размер неуправляемого типа в байтах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1695">Returns the size of an unmanaged type in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1696">Размер указанного типа в неуправляемом коде.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1696">The size of the specified type in unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1697">Этот метод можно использовать, если у вас структуру.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1697">You can use this method when you do not have a structure.</span></span> <span data-ttu-id="41aa0-1698">Представление должно быть последовательным или явным.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1698">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="41aa0-1699">Возвращаемый размер — размер неуправляемого типа.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1699">The size returned is the size of the unmanaged type.</span></span> <span data-ttu-id="41aa0-1700">Управляемый и неуправляемый размеры объекта могут различаться.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1700">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="41aa0-1701">Для символьных типов определяется размер <xref:System.Runtime.InteropServices.CharSet> значение, применяемое к этому классу.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1701">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1702">В следующем примере демонстрируется вызов метода <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1702">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method.</span></span> <span data-ttu-id="41aa0-1703">Данный пример кода является частью большего примера, приведенного для <xref:System.Runtime.InteropServices.Marshal> класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1703">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#3](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#3)]
 [!code-csharp[Marshal#3](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#3)]
 [!code-vb[Marshal#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1704">Параметр <paramref name="t" /> является определением универсального типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1704">The <paramref name="t" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1705">Параметр <paramref name="t" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1705">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41aa0-1706">Тип, размер которого возвращается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1706">The type whose size is to be returned.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="41aa0-1707">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1707">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-1708">Возвращает размер неуправляемого типа в байтах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1708">Returns the size of an unmanaged type in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1709">Размер, в байтах, типа, определяемого параметром универсального типа <typeparamref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1709">The size, in bytes, of the type that is specified by the <typeparamref name="T" /> generic type parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1710">Этот метод можно использовать, если у вас структуру.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1710">You can use this method when you do not have a structure.</span></span> <span data-ttu-id="41aa0-1711">Представление должно быть последовательным или явным.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1711">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="41aa0-1712">Возвращаемый размер — размер неуправляемого типа.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1712">The size returned is the size of the unmanaged type.</span></span> <span data-ttu-id="41aa0-1713">Управляемый и неуправляемый размеры объекта могут различаться.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1713">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="41aa0-1714">Для символьных типов определяется размер <xref:System.Runtime.InteropServices.CharSet> значение, применяемое к этому классу.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1714">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; (T structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;(!!T structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) (structure As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf(T structure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="structure" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41aa0-1715">Тип <c>структуры</c> параметра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1715">The type of the <c>structure</c> parameter.</span>
          </span>
        </typeparam>
        <param name="structure">
          <span data-ttu-id="41aa0-1716">Объект, размер которого возвращается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1716">The object whose size is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1717">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1717">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-1718">Возвращает неуправляемый размер объекта указанного типа в байтах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1718">Returns the unmanaged size of an object of a specified type in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1719">Размер в байтах указанного объекта в неуправляемом коде.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1719">The size, in bytes, of the specified object in unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1720">Этот метод принимает экземпляр структуры, который может быть типом ссылки или упакованным типом значения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1720">This method accepts an instance of a structure, which can be a reference type or a boxed value type.</span></span> <span data-ttu-id="41aa0-1721">Представление должно быть последовательным или явным.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1721">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="41aa0-1722">Возвращаемый размер равно размеру неуправляемого объекта.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1722">The size returned is the size of the unmanaged object.</span></span> <span data-ttu-id="41aa0-1723">Управляемый и неуправляемый размеры объекта могут различаться.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1723">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="41aa0-1724">Для символьных типов определяется размер <xref:System.Runtime.InteropServices.CharSet> значение, применяемое к этому классу.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1724">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 <span data-ttu-id="41aa0-1725">Можно использовать <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> метод, чтобы определить, какой объем неуправляемой памяти для выделения с помощью <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> и <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1725">You can use the <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> method to determine how much unmanaged memory to allocate by using the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> and <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41aa0-1726">Параметр <paramref name="structure" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1726">The <paramref name="structure" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StringToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr StringToBSTR (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToBSTR(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToBSTR (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToBSTR(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-1727">Копируемая управляемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1727">The managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1728">Выделяет строку [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) и копирует в нее содержимое управляемого объекта <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1728">Allocates a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) and copies the contents of a managed <see cref="T:System.String" /> into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1729">Неуправляемый указатель на строку <see langword="BSTR" /> или значение 0, если строка <paramref name="s" /> имеет значение null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1729">An unmanaged pointer to the <see langword="BSTR" />, or 0 if <paramref name="s" /> is null.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1730"><xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A> используется для настраиваемого маршалинга или при смешении управляемого и неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1730"><xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1731">Так как этот метод выделения неуправляемой памяти, необходимой для строки, освобождать `BSTR` , вызывая <xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1731">Because this method allocates the unmanaged memory required for a string, always free the `BSTR` when finished by calling <xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="41aa0-1732">Этот метод предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1732">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-1733">Не хватает памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1733">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41aa0-1734">Длина значения параметра <paramref name="s" /> вне диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1734">The length for <paramref name="s" /> is out of range.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1735">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1735">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1736">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1736">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemAnsi (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemAnsi(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemAnsi (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemAnsi(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-1737">Копируемая управляемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1737">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1738">Копирует содержимое управляемого объекта типа <see cref="T:System.String" /> в блок памяти, выделенный из неуправляемого распределителя памяти для COM-задач.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1738">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1739">Целое число, представляющее указатель на блок памяти, выделенный для строки, или значение 0, если строка <paramref name="s" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1739">An integer representing a pointer to the block of memory allocated for the string, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1740"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A> используется для настраиваемого маршалинга или при смешении управляемого и неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1740"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1741">Так как этот метод выделения неуправляемой памяти, необходимой для строки, вызвав освобождать память <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1741">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span> <span data-ttu-id="41aa0-1742">Этот метод предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1742">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="41aa0-1743">Знаки строки копируются как символы ANSI.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1743">The characters of the string are copied as ANSI characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-1744">Не хватает памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1744">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41aa0-1745">Параметр <paramref name="s" /> превышает максимальную длину, разрешенную операционной системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1745">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1746">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1746">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1747">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1747">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemAuto">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemAuto (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemAuto(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemAuto (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemAuto(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-1748">Копируемая управляемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1748">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1749">Копирует содержимое управляемого объекта типа <see cref="T:System.String" /> в блок памяти, выделенный из неуправляемого распределителя памяти для COM-задач.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1749">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1750">Выделенный блок памяти или значение 0, если строка <paramref name="s" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1750">The allocated memory block, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1751"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A> полезен для настраиваемого маршалинга для использования при совместном использовании управляемым и неуправляемым кодом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1751"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1752">Так как этот метод выделения неуправляемой памяти, необходимой для строки, вызвав освобождать память <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1752">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span> <span data-ttu-id="41aa0-1753">Этот метод предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1753">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="41aa0-1754">Знаки строки копируются как символы ANSI или Юникод, в зависимости от операционной системы, где выполняется код.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1754">The characters of the string are copied as either ANSI or Unicode characters, depending on the operating system where the code is executing.</span></span> <span data-ttu-id="41aa0-1755">В Windows 98 знаки копируются как символы ANSI.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1755">On Windows 98, the characters are copied as ANSI characters.</span></span> <span data-ttu-id="41aa0-1756">В Windows NT 4.0, Windows 2000, Windows XP и семейства Windows Server 2003 знаки копируются в виде символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1756">On Windows NT 4.0, Windows 2000, Windows XP, and the Windows Server 2003 family, the characters are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-1757">Не хватает памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1757">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41aa0-1758">Длина значения параметра <paramref name="s" /> вне диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1758">The length for <paramref name="s" /> is out of range.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1759">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1759">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1760">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1760">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemUni">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemUni (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemUni(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemUni (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemUni(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-1761">Копируемая управляемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1761">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1762">Копирует содержимое управляемого объекта типа <see cref="T:System.String" /> в блок памяти, выделенный из неуправляемого распределителя памяти для COM-задач.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1762">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1763">Целое число, представляющее указатель на блок памяти, выделенный для строки, или значение 0, если строка s имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1763">An integer representing a pointer to the block of memory allocated for the string, or 0 if s is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1764"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A> полезен для настраиваемого маршалинга для использования при совместном использовании управляемым и неуправляемым кодом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1764"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1765">Так как этот метод выделения неуправляемой памяти, необходимой для строки, вызвав освобождать память <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1765">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="41aa0-1766">Этот метод предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1766">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="41aa0-1767">Знаки строки копируются в виде символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1767">The characters of the string are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41aa0-1768">Параметр <paramref name="s" /> превышает максимальную длину, разрешенную операционной системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1768">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-1769">Не хватает памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1769">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1770">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1770">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1771">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1771">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemUTF8">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemUTF8 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemUTF8(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemUTF8 (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemUTF8(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalAnsi (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalAnsi(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalAnsi (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalAnsi(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-1772">Копируемая управляемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1772">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1773">Копирует содержимое управляемого объекта <see cref="T:System.String" /> в неуправляемую память, преобразуя его по мере копирования в формат ANSI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1773">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format as it copies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1774">Адрес в неуправляемой памяти, куда скопирована строка <paramref name="s" />, или значение 0, если строка <paramref name="s" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1774">The address, in unmanaged memory, to where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1775"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> используется для настраиваемого маршалинга или при смешении управляемого и неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1775"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1776">Так как этот метод выделения неуправляемой памяти, необходимой для строки, вызвав освобождать память <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1776">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="41aa0-1777"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1777"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="41aa0-1778">Этот метод копирует внедренные символы null и включает завершающий нуль-символ.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1778">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1779">В следующем примере показано, как преобразовать содержимое управляемого <xref:System.String> класса в неуправляемую память, а затем удалить неуправляемой памяти по окончании.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1779">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/CPP/stringtohglobalansi.cpp#1)]
 [!code-csharp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/cs/stringtohglobalansi.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-1780">Не хватает памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1780">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41aa0-1781">Параметр <paramref name="s" /> превышает максимальную длину, разрешенную операционной системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1781">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1782">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1782">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1783">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1783">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalAuto">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalAuto (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalAuto(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalAuto (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalAuto(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-1784">Копируемая управляемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1784">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1785">Копирует содержимое управляемого объекта типа <see cref="T:System.String" /> в неуправляемую память, преобразуя его по мере копирования в формат ANSI, если это требуется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1785">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format if required.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1786">Адрес в неуправляемой памяти, куда скопирована строка, или значение 0, если строка <paramref name="s" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1786">The address, in unmanaged memory, to where the string was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1787"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A> полезен для настраиваемого маршалинга для использования при совместном использовании управляемым и неуправляемым кодом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1787"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1788">Так как этот метод выделения неуправляемой памяти, необходимой для строки, вызвав освобождать память <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1788">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="41aa0-1789">Этот метод предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1789">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="41aa0-1790">Этот метод копирует внедренные символы null и включает завершающий нуль-символ.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1790">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1791">В следующем примере показано, как преобразовать содержимое управляемого <xref:System.String> класса в неуправляемую память, а затем удалить неуправляемой памяти по окончании.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1791">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAuto#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAuto/CPP/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-1792">Не хватает памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1792">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1793">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1793">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1794">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1794">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalUni">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalUni (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalUni(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalUni (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalUni(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-1795">Копируемая управляемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1795">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1796">Копирует содержимое управляемого объекта <see cref="T:System.String" /> в неуправляемую память.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1796">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1797">Адрес в неуправляемой памяти, куда скопирована строка <paramref name="s" />, или значение 0, если строка <paramref name="s" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1797">The address, in unmanaged memory, to where the <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1798"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A> полезен для настраиваемого маршалинга для использования при совместном использовании управляемым и неуправляемым кодом.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1798"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="41aa0-1799">Так как этот метод выделения неуправляемой памяти, необходимой для строки, вызвав освобождать память <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1799">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="41aa0-1800">Этот метод предоставляет функциональные возможности противоположной <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1800">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="41aa0-1801">Этот метод копирует внедренные символы null и включает завершающий нуль-символ.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1801">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="41aa0-1802">Метод не может выделить в куче достаточное количество динамической памяти, присущей данному объекту.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1802">The method could not allocate enough native heap memory.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41aa0-1803">Параметр <paramref name="s" /> превышает максимальную длину, разрешенную операционной системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1803">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1804">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1804">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1805">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1805">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StructureToPtr">
      <MemberSignature Language="C#" Value="public static void StructureToPtr (object structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StructureToPtr(object structure, native int ptr, bool fDeleteOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StructureToPtr (structure As Object, ptr As IntPtr, fDeleteOld As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StructureToPtr(System::Object ^ structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="System.Object" />
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="fDeleteOld" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="structure">
          <span data-ttu-id="41aa0-1806">Управляемый объект, содержащий данные для маршалинга.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1806">A managed object that holds the data to be marshaled.</span>
          </span>
          <span data-ttu-id="41aa0-1807">Этот объект должен представлять собой структуру или экземпляр форматированного класса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1807">This object must be a structure or an instance of a formatted class.</span>
          </span>
        </param>
        <param name="ptr">
          <span data-ttu-id="41aa0-1808">Указатель на неуправляемый блок памяти, который должен быть выделен перед вызовом метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1808">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span>
          </span>
        </param>
        <param name="fDeleteOld">
          <span data-ttu-id="41aa0-1809">Значение <see langword="true" /> для вызова метода <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> применительно к параметру <c>ptr</c> перед тем, как этот метод скопирует данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1809">
              <see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> method on the <c>ptr</c> parameter before this method copies the data.</span>
          </span>
          <span data-ttu-id="41aa0-1810">Блок должен содержать допустимые данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1810">The block must contain valid data.</span>
          </span>
          <span data-ttu-id="41aa0-1811">Обратите внимание, что передача значения <see langword="false" />, когда блок памяти уже содержит данные, может привести к утечке памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1811">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1812">Маршалирует данные из управляемого объекта в неуправляемый блок памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1812">Marshals data from a managed object to an unmanaged block of memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1813">Если `structure` является типом значения упаковываются или распаковано.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1813">If `structure` is a value type, it can be boxed or unboxed.</span></span> <span data-ttu-id="41aa0-1814">Если он упаковывается это распакованный перед копированием.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1814">If it is boxed, it is unboxed before copying.</span></span>  
  
 <span data-ttu-id="41aa0-1815">Форматированный класс является ссылочным типом, макет которой определяется <xref:System.Runtime.InteropServices.StructLayoutAttribute> атрибут, либо как <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> или <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1815">A formatted class is a reference type whose layout is specified by the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute, as either <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> or <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="41aa0-1816"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> Копирует содержимое `structure` предварительно выделить блок памяти, `ptr` указывает параметр.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1816"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> copies the contents of `structure` to the pre-allocated block of memory that the `ptr` parameter points to.</span></span> <span data-ttu-id="41aa0-1817">Если `structure` содержит ссылочные типы, которые маршалировать указателей интерфейса COM (интерфейсы, классы без макета, и <xref:System.Object?displayProperty=nameWithType>), управляемые объекты остаются в активном состоянии с счетчики ссылок.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1817">If `structure` contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <xref:System.Object?displayProperty=nameWithType>), the managed objects are kept alive with reference counts.</span></span> <span data-ttu-id="41aa0-1818">Все другие ссылочные типы (например, строки и массивы) маршалируются копий.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1818">All other reference types (for example, strings and arrays) are marshaled to copies.</span></span> <span data-ttu-id="41aa0-1819">Чтобы освободить эти управляемые или неуправляемые объекты, необходимо вызвать метод <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType> метод до освобождения блока памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1819">To release these managed or unmanaged objects, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType> method before you free the memory block.</span></span>  
  
 <span data-ttu-id="41aa0-1820">Если вы используете <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> указать метод для копирования на другой экземпляр блока памяти в дальнейшем, `true` для `fDeleteOld` удалить ссылку подсчитывает для ссылочных типов в предыдущем экземпляре.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1820">If you use the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method to copy a different instance to the memory block at a later time, specify `true` for `fDeleteOld` to remove reference counts for reference types in the previous instance.</span></span> <span data-ttu-id="41aa0-1821">В противном случае копии typesand неуправляемого управляемые справочные эффективно утечки.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1821">Otherwise, the managed reference typesand unmanaged copies are effectively leaked.</span></span>  
  
 <span data-ttu-id="41aa0-1822">Общий шаблон для использования <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> выглядит следующим образом:</span><span class="sxs-lookup"><span data-stu-id="41aa0-1822">The overall pattern for using <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> is as follows:</span></span>  
  
1.  <span data-ttu-id="41aa0-1823">При первом вызове для <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> метод после выделения блока памяти `fDeleteOld` должно быть `false`, поскольку нет содержимого для очистки.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1823">On the first call to the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method after a memory block has been allocated, `fDeleteOld` must be `false`, because there are no contents to clear.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="41aa0-1824">Укажите `true` для `fDeleteOld` только в том случае, если блок содержит допустимые данные.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1824">Specify `true` for `fDeleteOld` only if the block contains valid data.</span></span>  
  
2.  <span data-ttu-id="41aa0-1825">При копировании другой экземпляр на блок памяти, и объект содержит ссылочные типы `fDeleteOld` должно быть `true` для освобождения ссылочных типов в старое содержимое.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1825">If you copy a different instance to the memory block, and the object contains reference types, `fDeleteOld` must be `true` to free reference types in the old contents.</span></span>  
  
3.  <span data-ttu-id="41aa0-1826">Если объект содержит ссылочные типы, необходимо вызвать метод <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> метод до освобождения блока памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1826">If the object contains reference types, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> method before you free the memory block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41aa0-1827">Чтобы закрепить существующую структуру вместо копирования, используйте <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> типа создаваемой закрепленный дескриптор для структуры.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1827">To pin an existing structure instead of copying it, use the <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> type to create a pinned handle for the structure.</span></span> <span data-ttu-id="41aa0-1828">Дополнительные сведения о закреплении см. в разделе [копирование и закрепление](~/docs/framework/interop/copying-and-pinning.md).</span><span class="sxs-lookup"><span data-stu-id="41aa0-1828">For details on how to pin, see [Copying and Pinning](~/docs/framework/interop/copying-and-pinning.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1829">Следующий пример создает управляемую структуру, передается в неуправляемую память с помощью <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> метода, а затем передает его обратно с помощью управляемой памяти <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1829">The following example creates a managed structure, transfers it to unmanaged memory using the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method, and then transfers it back to managed memory using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1830">
            <paramref name="structure" /> — это ссылочный тип, который не является форматированным классом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1830">
              <paramref name="structure" /> is a reference type that is not a formatted class.</span>
          </span>
          <span data-ttu-id="41aa0-1831">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1831">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1832">
            <paramref name="structure" /> — это экземпляр универсального типа (только в .NET Framework 4.5 и более ранних версиях).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1832">
              <paramref name="structure" /> is an instance of a generic type (in the .NET Framework 4.5 and earlier versions only).</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1833">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1833">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1834">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1834">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="StructureToPtr&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void StructureToPtr&lt;T&gt; (T structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StructureToPtr&lt;T&gt;(!!T structure, native int ptr, bool fDeleteOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StructureToPtr(Of T) (structure As T, ptr As IntPtr, fDeleteOld As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void StructureToPtr(T structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="structure" Type="T" />
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="fDeleteOld" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41aa0-1835">Тип управляемого объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1835">The type of the managed object.</span>
          </span>
        </typeparam>
        <param name="structure">
          <span data-ttu-id="41aa0-1836">Управляемый объект, содержащий данные для маршалинга.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1836">A managed object that holds the data to be marshaled.</span>
          </span>
          <span data-ttu-id="41aa0-1837">Объект должен представлять собой структуру или экземпляр форматированного класса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1837">The object must be a structure or an instance of a formatted class.</span>
          </span>
        </param>
        <param name="ptr">
          <span data-ttu-id="41aa0-1838">Указатель на неуправляемый блок памяти, который должен быть выделен перед вызовом метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1838">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span>
          </span>
        </param>
        <param name="fDeleteOld">
          <span data-ttu-id="41aa0-1839">Значение <see langword="true" /> для вызова метода <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> применительно к параметру <c>ptr</c> перед тем, как этот метод скопирует данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1839">
              <see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> method on the <c>ptr</c> parameter before this method copies the data.</span>
          </span>
          <span data-ttu-id="41aa0-1840">Блок должен содержать допустимые данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1840">The block must contain valid data.</span>
          </span>
          <span data-ttu-id="41aa0-1841">Обратите внимание, что передача значения <see langword="false" />, когда блок памяти уже содержит данные, может привести к утечке памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1841">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1842">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1842">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-1843">Выполняет маршалирование данных в неуправляемый блока памяти из управляемого объекта указанного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1843">Marshals data from a managed object of a specified type to an unmanaged block of memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1844">Форматированный класс является ссылочным типом, макет которой определяется <xref:System.Runtime.InteropServices.StructLayoutAttribute> атрибут, либо как <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> или <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1844">A formatted class is a reference type whose layout is specified by the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute, as either <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> or <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="41aa0-1845"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> Копирует содержимое `structure` предварительно выделить блок памяти, `ptr` указывает параметр.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1845"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> copies the contents of `structure` to the pre-allocated block of memory that the `ptr` parameter points to.</span></span> <span data-ttu-id="41aa0-1846">Если `structure` содержит ссылочные типы, которые маршалировать указателей интерфейса COM (интерфейсы, классы без макета, и <xref:System.Object?displayProperty=nameWithType>), управляемые объекты остаются в активном состоянии с счетчики ссылок.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1846">If `structure` contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <xref:System.Object?displayProperty=nameWithType>), the managed objects are kept alive with reference counts.</span></span> <span data-ttu-id="41aa0-1847">Все другие ссылочные типы (например, строки и массивы) маршалируются копий.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1847">All other reference types (for example, strings and arrays) are marshaled to copies.</span></span> <span data-ttu-id="41aa0-1848">Чтобы освободить эти управляемые или неуправляемые объекты, необходимо вызвать метод <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29> метод до освобождения блока памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1848">To release these managed or unmanaged objects, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29> method before you free the memory block.</span></span>  
  
 <span data-ttu-id="41aa0-1849">Если вы используете <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> указать метод для копирования на другой экземпляр блока памяти в дальнейшем, `true` для `fDeleteOld` удалить ссылку подсчитывает для ссылочных типов в предыдущем экземпляре.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1849">If you use the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> method to copy a different instance to the memory block at a later time, specify `true` for `fDeleteOld` to remove reference counts for reference types in the previous instance.</span></span> <span data-ttu-id="41aa0-1850">В противном случае эффективно утечки управляемых ссылочных типов и неуправляемые копии.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1850">Otherwise, the managed reference types and unmanaged copies are effectively leaked.</span></span>  
  
 <span data-ttu-id="41aa0-1851">Общий шаблон для использования <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> выглядит следующим образом:</span><span class="sxs-lookup"><span data-stu-id="41aa0-1851">The overall pattern for using <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> is as follows:</span></span>  
  
1.  <span data-ttu-id="41aa0-1852">При первом вызове для <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> метод после выделения блока памяти `fDeleteOld` должно быть `false`, поскольку нет содержимого для очистки.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1852">On the first call to the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method after a memory block has been allocated, `fDeleteOld` must be `false`, because there are no contents to clear.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="41aa0-1853">Укажите `true` для `fDeleteOld` только в том случае, если блок содержит допустимые данные.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1853">Specify `true` for `fDeleteOld` only if the block contains valid data.</span></span>  
  
2.  <span data-ttu-id="41aa0-1854">При копировании другой экземпляр на блок памяти, и объект содержит ссылочные типы `fDeleteOld` должно быть `true` для освобождения ссылочных типов в старое содержимое.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1854">If you copy a different instance to the memory block, and the object contains reference types, `fDeleteOld` must be `true` to free reference types in the old contents.</span></span>  
  
3.  <span data-ttu-id="41aa0-1855">Если объект содержит ссылочные типы, необходимо вызвать метод <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> метод до освобождения блока памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1855">If the object contains reference types, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> method before you free the memory block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41aa0-1856">Чтобы закрепить существующую структуру вместо копирования, используйте <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> типа создаваемой закрепленный дескриптор для структуры.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1856">To pin an existing structure instead of copying it, use the <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> type to create a pinned handle for the structure.</span></span> <span data-ttu-id="41aa0-1857">Дополнительные сведения о закреплении см. в разделе [копирование и закрепление](~/docs/framework/interop/copying-and-pinning.md).</span><span class="sxs-lookup"><span data-stu-id="41aa0-1857">For details on how to pin, see [Copying and Pinning](~/docs/framework/interop/copying-and-pinning.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1858">
            <paramref name="structure" /> — это ссылочный тип, который не является форматированным классом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1858">
              <paramref name="structure" /> is a reference type that is not a formatted class.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1859">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1859">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1860">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1860">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="SystemDefaultCharSize">
      <MemberSignature Language="C#" Value="public static readonly int SystemDefaultCharSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SystemDefaultCharSize" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SystemDefaultCharSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int SystemDefaultCharSize;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1861">Представляет используемый по умолчанию размер символа в системе. По умолчанию для систем Юникода задается значение 2, а для систем ANSI значение 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1861">Represents the default character size on the system; the default is 2 for Unicode systems and 1 for ANSI systems.</span>
          </span>
          <span data-ttu-id="41aa0-1862">Это поле доступно только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1862">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41aa0-1863">В следующем примере демонстрируется <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> поля.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1863">The following example demonstrates the <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> field.</span></span> <span data-ttu-id="41aa0-1864">Данный пример кода является частью большего примера, приведенного для <xref:System.Runtime.InteropServices.Marshal> класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1864">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#2](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#2)]
 [!code-csharp[Marshal#2](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#2)]
 [!code-vb[Marshal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SystemMaxDBCSCharSize">
      <MemberSignature Language="C#" Value="public static readonly int SystemMaxDBCSCharSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SystemMaxDBCSCharSize" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SystemMaxDBCSCharSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int SystemMaxDBCSCharSize;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1865">Представляет наибольший размер набора двухбайтовых символов (DBCS) в байтах для текущей операционной системы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1865">Represents the maximum size of a double byte character set (DBCS) size, in bytes, for the current operating system.</span>
          </span>
          <span data-ttu-id="41aa0-1866">Это поле доступно только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1866">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41aa0-1867">В следующем примере демонстрируется <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> поля.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1867">The following example demonstrates the <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> field.</span></span> <span data-ttu-id="41aa0-1868">Данный пример кода является частью большего примера, приведенного для <xref:System.Runtime.InteropServices.Marshal> класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1868">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#2](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#2)]
 [!code-csharp[Marshal#2](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#2)]
 [!code-vb[Marshal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThrowExceptionForHR">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1869">Создает исключение с определенным значением ошибки HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1869">Throws an exception with a specific failure HRESULT value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThrowExceptionForHR">
      <MemberSignature Language="C#" Value="public static void ThrowExceptionForHR (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExceptionForHR(int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExceptionForHR (errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ThrowExceptionForHR(int errorCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="41aa0-1870">Значение HRESULT, соответствующее нужному исключению.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1870">The HRESULT corresponding to the desired exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1871">Создает исключение с определенным значением ошибки HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1871">Throws an exception with a specific failure HRESULT value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1872">Этот метод создает объект исключения для заданного значения HRESULT.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1872">This method creates an exception object for the specified failure HRESULT.</span></span> <span data-ttu-id="41aa0-1873">Если значение HRESULT равно нулю или больше нуля (код успешного завершения), метод возвращает без создания или вызова исключения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1873">If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</span></span>  
  
 <span data-ttu-id="41aa0-1874">Обратите внимание, что <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29> метод возвращает исключение, на основе [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) интерфейса текущего потока, если он задан.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1874">Note that the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29> method returns an exception based on the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread if one is set.</span></span> <span data-ttu-id="41aa0-1875">В этом случае `errorCode` параметр учитывается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1875">When this happens, the `errorCode` parameter is ignored.</span></span>  
  
 <span data-ttu-id="41aa0-1876">Некоторые значения ошибок HRESULT соответствуют определенным исключениям, а другие — нет.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1876">Some failure HRESULTs map to defined exceptions, whereas others do not.</span></span> <span data-ttu-id="41aa0-1877">Если значение HRESULT соответствует определенному исключению <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> создает экземпляр исключения и создает ее.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1877">If the HRESULT maps to a defined exception, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> creates an instance of the exception and throws it.</span></span> <span data-ttu-id="41aa0-1878">В противном случае он создает экземпляр <xref:System.Runtime.InteropServices.COMException>, инициализирует поле Код ошибки HRESULT и вызывает это исключение.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1878">Otherwise, it creates an instance of <xref:System.Runtime.InteropServices.COMException>, initializes the error code field with the HRESULT, and throws that exception.</span></span> <span data-ttu-id="41aa0-1879">При <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> — вызывается, предпринимается попытка получить дополнительные сведения об ошибке с помощью неуправляемой [GetErrorInfo](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx) функции.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1879">When <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> is invoked, it attempts to retrieve extra information regarding the error by using the unmanaged [GetErrorInfo](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx) function.</span></span>  
  
 <span data-ttu-id="41aa0-1880">Для сопоставления каждого значения HRESULT на сравнимый класс исключений в .NET Framework, в разделе [как: сопоставление значений HRESULT и исключений](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="41aa0-1880">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 <span data-ttu-id="41aa0-1881">В некоторых случаях <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> может возвращать исключения из предыдущего вызова COM.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1881">Occasionally, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> might return an exception from a previous COM call.</span></span> <span data-ttu-id="41aa0-1882">В этом случае вы можете использовать следующее решение и передавать `IntPtr(-1)` в качестве второго параметра (`errorInfo`):</span><span class="sxs-lookup"><span data-stu-id="41aa0-1882">In this case, you can use the following workaround and pass `IntPtr(-1)` as the second parameter (`errorInfo`):</span></span>  
  
```  
[SecurityPermissionAttribute(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.UnmanagedCode)]  
public static void ThrowExceptionForHR(interrorCode,IntPtrerrorInfo)  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1883">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1883">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1884">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1884">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.COMException" />
      </Docs>
    </Member>
    <Member MemberName="ThrowExceptionForHR">
      <MemberSignature Language="C#" Value="public static void ThrowExceptionForHR (int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExceptionForHR(int32 errorCode, native int errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExceptionForHR (errorCode As Integer, errorInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ThrowExceptionForHR(int errorCode, IntPtr errorInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="errorInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="41aa0-1885">Значение HRESULT, соответствующее нужному исключению.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1885">The HRESULT corresponding to the desired exception.</span>
          </span>
        </param>
        <param name="errorInfo">
          <span data-ttu-id="41aa0-1886">Указатель на интерфейс [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx), предоставляющий дополнительные сведения об ошибке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1886">A pointer to the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface that provides more information about the error.</span>
          </span>
          <span data-ttu-id="41aa0-1887">Можно задать значение <c>IntPtr(0)</c>, чтобы использовать текущий интерфейс [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx), или значение <c>IntPtr(-1)</c>, чтобы игнорировать текущий интерфейс [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) и создать исключение только на основе кода ошибки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1887">You can specify <c>IntPtr(0)</c> to use the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface, or <c>IntPtr(-1)</c> to ignore the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface and construct the exception just from the error code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1888">Создает исключение с определенным значением ошибки HRESULT в соответствии с указанным интерфейсом [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1888">Throws an exception with a specific failure HRESULT, based on the specified [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1889">Этот метод создает объект исключения для заданного значения HRESULT.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1889">This method creates an exception object for the specified failure HRESULT.</span></span> <span data-ttu-id="41aa0-1890">Если значение HRESULT равно нулю или больше нуля (код успешного завершения), метод возвращает без создания или вызова исключения.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1890">If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</span></span>  
  
 <span data-ttu-id="41aa0-1891"><xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> Метод освобождает `errorInfo` параметр, уменьшение COM ссылаться число [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) интерфейса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1891">The <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method releases the `errorInfo` parameter, decreasing the COM reference count of the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface.</span></span>  
  
 <span data-ttu-id="41aa0-1892">Обратите внимание, что <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> метод возвращает исключение, на основе [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) интерфейса текущего потока, если он задан.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1892">Note that the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method returns an exception based on the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread if one is set.</span></span> <span data-ttu-id="41aa0-1893">В этом случае `errorCode` параметр учитывается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1893">When this happens, the `errorCode` parameter is ignored.</span></span>  
  
 <span data-ttu-id="41aa0-1894">Некоторые значения ошибок HRESULT соответствуют определенным исключениям, а другие — нет.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1894">Some failure HRESULTs map to defined exceptions, whereas others do not.</span></span> <span data-ttu-id="41aa0-1895">Если значение HRESULT соответствует определенному исключению <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> создает экземпляр исключения и создает ее.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1895">If the HRESULT maps to a defined exception, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> creates an instance of the exception and throws it.</span></span> <span data-ttu-id="41aa0-1896">В противном случае он создает экземпляр <xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType>, инициализирует поле Код ошибки HRESULT и вызывает это исключение.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1896">Otherwise, it creates an instance of <xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType>, initializes the error code field with the HRESULT, and throws that exception.</span></span> <span data-ttu-id="41aa0-1897">`errorInfo` Параметр используется для получения дополнительных сведений об ошибке.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1897">The `errorInfo` parameter is used to retrieve extra information regarding the error.</span></span>  
  
 <span data-ttu-id="41aa0-1898">Для сопоставления каждого значения HRESULT на сравнимый класс исключений в .NET Framework, в разделе [как: сопоставление значений HRESULT и исключений](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="41aa0-1898">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1899">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1899">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1900">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1900">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.COMException" />
      </Docs>
    </Member>
    <Member MemberName="UnsafeAddrOfPinnedArrayElement">
      <MemberSignature Language="C#" Value="public static IntPtr UnsafeAddrOfPinnedArrayElement (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int UnsafeAddrOfPinnedArrayElement(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeAddrOfPinnedArrayElement (arr As Array, index As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr UnsafeAddrOfPinnedArrayElement(Array ^ arr, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr">
          <span data-ttu-id="41aa0-1901">Массив, содержащий требуемый элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1901">The array that contains the desired element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="41aa0-1902">Индекс необходимого элемента в параметре <c>arr</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1902">The index in the <c>arr</c> parameter of the desired element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1903">Возвращает адрес элемента по указанному индексу внутри заданного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1903">Gets the address of the element at the specified index inside the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1904">Адрес параметра <paramref name="index" /> в параметре <paramref name="arr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1904">The address of <paramref name="index" /> inside <paramref name="arr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1905">Массив должен быть администратором с помощью <xref:System.Runtime.InteropServices.GCHandle> до его передачи в этот метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1905">The array must be pinned using a <xref:System.Runtime.InteropServices.GCHandle> before it is passed to this method.</span></span> <span data-ttu-id="41aa0-1906">Для обеспечения максимальной производительности этот метод не проверяет массива, передаваемого в него; Это может привести к непредвиденному поведению.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1906">For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1907">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1907">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1908">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1908">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="UnsafeAddrOfPinnedArrayElement&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr UnsafeAddrOfPinnedArrayElement&lt;T&gt; (T[] arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int UnsafeAddrOfPinnedArrayElement&lt;T&gt;(!!T[] arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeAddrOfPinnedArrayElement(Of T) (arr As T(), index As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr UnsafeAddrOfPinnedArrayElement(cli::array &lt;T&gt; ^ arr, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="arr" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41aa0-1909">Тип массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1909">The type of the array.</span>
          </span>
        </typeparam>
        <param name="arr">
          <span data-ttu-id="41aa0-1910">Массив, содержащий требуемый элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1910">The array that contains the desired element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="41aa0-1911">Индекс необходимого элемента в массиве <c>arr</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1911">The index of the desired element in the <c>arr</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1912">[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1912">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="41aa0-1913">Возвращает адрес элемента по указанному индексу внутри массива заданного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1913">Gets the address of the element at the specified index in an array of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41aa0-1914">Адрес параметра <paramref name="index" /> в параметре <paramref name="arr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1914">The address of <paramref name="index" /> in <paramref name="arr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1915">Массив должен быть администратором с помощью <xref:System.Runtime.InteropServices.GCHandle> до его передачи в этот метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1915">The array must be pinned by using a <xref:System.Runtime.InteropServices.GCHandle> before it is passed to this method.</span></span> <span data-ttu-id="41aa0-1916">Для обеспечения максимальной производительности этот метод не проверяет массива, передаваемого в него; Это может привести к непредвиденному поведению.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1916">For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1917">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1917">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1918">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1918">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1919">Записывает однобайтовое значение в неуправляемую память.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1919">Writes a single byte value to unmanaged memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (IntPtr ptr, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte(native int ptr, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As IntPtr, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(IntPtr ptr, System::Byte val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1920">Адрес в неуправляемой памяти, по которому производится запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1920">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-1921">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1921">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1922">Записывает однобайтовое значение в неуправляемую память.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1922">Writes a single byte value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1923"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом байтов, характерным для языка C, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1923"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1924">Приведенный ниже создается блок неуправляемой памяти, выполняет запись байта в неуправляемую память, этот байт считывается обратно из неуправляемой памяти и затем уничтожает неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1924">The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1925">
            <paramref name="ptr" /> не является распознаваемым форматом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1925">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="41aa0-1926">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1926">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1927">Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1927">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-1928">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1928">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1929">
            <paramref name="ptr" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1929">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1930">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1930">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1931">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1931">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (IntPtr ptr, int ofs, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte(native int ptr, int32 ofs, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As IntPtr, ofs As Integer, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(IntPtr ptr, int ofs, System::Byte val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1932">Базовый адрес для записи в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1932">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-1933">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед записью.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1933">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-1934">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1934">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1935">Записывает однобайтовое значение в неуправляемую память с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1935">Writes a single byte value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1936"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом байтов, характерным для языка C, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1936"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1937">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1937">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#3)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1938">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1938">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1939">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1939">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1940">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1940">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (object ptr, int ofs, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte([out] object ptr, int32 ofs, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As Object, ofs As Integer, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(System::Object ^ ptr, int ofs, System::Byte val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1941">Базовый адрес конечного объекта в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1941">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-1942">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед записью.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1942">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-1943">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1943">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1944">Записывает однобайтовое значение в неуправляемую память с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1944">Writes a single byte value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1945"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом байтов, характерным для языка C, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1945"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1946">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1946">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-1947">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1947">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="41aa0-1948">Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1948">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1949">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1949">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1950">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1950">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-1951">Записывает в неуправляемую память 16-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1951">Writes a 16-bit signed integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="41aa0-1952">Запись в невыровненные участки памяти поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1952">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, char val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1953">Адрес в неуправляемой памяти, по которому производится запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1953">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-1954">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1954">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1955">Записывает в неуправляемую память символ в виде 16-битного целого числа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1955">Writes a character as a 16-bit integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1956"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком 16-разрядное, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1956"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1957">Запись в невыровненные участки памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1957">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1958">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1958">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1959">
            <paramref name="ptr" /> не является распознаваемым форматом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1959">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="41aa0-1960">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1960">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1961">Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1961">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-1962">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1962">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1963">
            <paramref name="ptr" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1963">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1964">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1964">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1965">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1965">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, short val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1966">Адрес в неуправляемой памяти, по которому производится запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1966">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-1967">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1967">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1968">Записывает в неуправляемую память 16-битное целое число.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1968">Writes a 16-bit integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1969"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком 16-разрядное, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1969"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1970">Запись в невыровненные участки памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1970">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1971">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1971">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1972">
            <paramref name="ptr" /> не является распознаваемым форматом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1972">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="41aa0-1973">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1973">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1974">Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1974">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-1975">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1975">-or-</span>
          </span>
          <span data-ttu-id="41aa0-1976">
            <paramref name="ptr" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1976">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1977">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1977">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1978">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1978">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, int ofs, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int32 ofs, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, ofs As Integer, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, int ofs, char val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1979">Базовый адрес для записи в собственной куче.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1979">The base address in the native heap to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-1980">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед записью.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1980">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-1981">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1981">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1982">Записывает 16-битное целое число со знаком в неуправляемую память с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1982">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1983"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком 16-разрядное, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1983"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1984">Запись в невыровненные участки памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1984">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1985">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1985">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1986">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1986">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1987">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1987">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1988">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1988">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, int ofs, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int32 ofs, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, ofs As Integer, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, int ofs, short val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1989">Базовый адрес для записи в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1989">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-1990">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед записью.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1990">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-1991">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1991">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-1992">Записывает 16-битное целое число со знаком в неуправляемую память с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1992">Writes a 16-bit signed integer value into unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-1993"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком 16-разрядное, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1993"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="41aa0-1994">Запись в невыровненные участки памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1994">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-1995">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-1995">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-1996">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1996">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-1997">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1997">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-1998">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1998">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (object ptr, int ofs, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16([out] object ptr, int32 ofs, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As Object, ofs As Integer, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(System::Object ^ ptr, int ofs, char val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-1999">Базовый адрес конечного объекта в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-1999">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-2000">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед записью.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2000">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-2001">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2001">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2002">Записывает 16-битное целое число со знаком в неуправляемую память с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2002">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2003"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком 16-разрядное, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2003"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="41aa0-2004">Запись в невыровненные участки памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2004">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-2005">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2005">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-2006">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2006">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="41aa0-2007">Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2007">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2008">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2008">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2009">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2009">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (object ptr, int ofs, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16([out] object ptr, int32 ofs, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As Object, ofs As Integer, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(System::Object ^ ptr, int ofs, short val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-2010">Базовый адрес конечного объекта в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2010">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-2011">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед записью.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2011">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-2012">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2012">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2013">Записывает 16-битное целое число со знаком в неуправляемую память с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2013">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2014"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком 16-разрядное, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2014"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="41aa0-2015">Запись в невыровненные участки памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2015">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-2016">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2016">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-2017">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2017">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="41aa0-2018">Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2018">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2019">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2019">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2020">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2020">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-2021">Записывает в неуправляемую память 32-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2021">Writes a 32-bit signed integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="41aa0-2022">Запись в невыровненные участки памяти поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2022">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (IntPtr ptr, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32(native int ptr, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As IntPtr, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(IntPtr ptr, int val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-2023">Адрес в неуправляемой памяти, по которому производится запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2023">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-2024">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2024">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2025">Записывает в неуправляемую память 32-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2025">Writes a 32-bit signed integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2026"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком 32 бита, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2026"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="41aa0-2027">Запись в невыровненные участки памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2027">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-2028">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2028">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-2029">
            <paramref name="ptr" /> не является распознаваемым форматом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2029">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="41aa0-2030">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2030">-or-</span>
          </span>
          <span data-ttu-id="41aa0-2031">Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2031">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-2032">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2032">-or-</span>
          </span>
          <span data-ttu-id="41aa0-2033">
            <paramref name="ptr" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2033">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2034">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2034">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2035">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2035">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (IntPtr ptr, int ofs, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32(native int ptr, int32 ofs, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As IntPtr, ofs As Integer, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(IntPtr ptr, int ofs, int val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-2036">Базовый адрес для записи в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2036">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-2037">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед записью.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2037">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-2038">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2038">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2039">Записывает 32-битное целое число со знаком в неуправляемую память с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2039">Writes a 32-bit signed integer value into unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2040"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком 32 бита, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2040"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="41aa0-2041">Запись в невыровненные участки памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2041">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-2042">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2042">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-2043">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2043">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2044">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2044">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2045">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2045">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (object ptr, int ofs, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32([out] object ptr, int32 ofs, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As Object, ofs As Integer, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(System::Object ^ ptr, int ofs, int val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-2046">Базовый адрес конечного объекта в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2046">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-2047">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед записью.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2047">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-2048">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2048">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2049">Записывает 32-битное целое число со знаком в неуправляемую память с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2049">Writes a 32-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2050"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком 32 бита, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2050"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="41aa0-2051">Запись в невыровненные участки памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2051">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-2052">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2052">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-2053">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2053">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="41aa0-2054">Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2054">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2055">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2055">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2056">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2056">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-2057">Записывает в неуправляемую память 64-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2057">Writes a 64-bit signed integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="41aa0-2058">Запись в невыровненные участки памяти поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2058">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (IntPtr ptr, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64(native int ptr, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As IntPtr, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(IntPtr ptr, long val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-2059">Адрес в неуправляемой памяти, по которому производится запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2059">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-2060">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2060">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2061">Записывает в неуправляемую память 64-битное целое число со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2061">Writes a 64-bit signed integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2062"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком x 64, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2062"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="41aa0-2063">Запись в невыровненные участки памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2063">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-2064">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2064">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-2065">
            <paramref name="ptr" /> не является распознаваемым форматом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2065">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="41aa0-2066">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2066">-or-</span>
          </span>
          <span data-ttu-id="41aa0-2067">Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2067">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-2068">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2068">-or-</span>
          </span>
          <span data-ttu-id="41aa0-2069">
            <paramref name="ptr" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2069">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2070">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2070">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2071">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2071">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (IntPtr ptr, int ofs, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64(native int ptr, int32 ofs, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As IntPtr, ofs As Integer, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(IntPtr ptr, int ofs, long val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-2072">Базовый адрес для записи в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2072">The base address in unmanaged memory to write.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-2073">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед записью.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2073">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-2074">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2074">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2075">Записывает 64-битное целое число со знаком в неуправляемую память с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2075">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2076"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком x 64, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2076"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="41aa0-2077">Запись в невыровненные участки памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2077">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-2078">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2078">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-2079">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2079">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2080">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2080">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2081">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2081">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (object ptr, int ofs, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64([out] object ptr, int32 ofs, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As Object, ofs As Integer, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(System::Object ^ ptr, int ofs, long val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-2082">Базовый адрес конечного объекта в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2082">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-2083">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед записью.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2083">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-2084">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2084">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2085">Записывает 64-битное целое число со знаком в неуправляемую память с указанным смещением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2085">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2086"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом знаком x 64, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2086"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="41aa0-2087">Запись в невыровненные участки памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2087">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-2088">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2088">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-2089">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2089">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="41aa0-2090">Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2090">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2091">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2091">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2092">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2092">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIntPtr">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41aa0-2093">Записывает в неуправляемую память целое число, разрядность которого соответствует собственной разрядности процессора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2093">Writes a processor native-sized integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="41aa0-2094">В 32-разрядных системах записывается 32-битное целое число, а в 64-разрядных — 64-битное.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2094">32-bit integers are written on 32-bit systems, and 64-bit integers are written on 64-bit systems.</span>
          </span>
          <span data-ttu-id="41aa0-2095">Запись в невыровненные участки памяти поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2095">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (IntPtr ptr, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr(native int ptr, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As IntPtr, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(IntPtr ptr, IntPtr val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-2096">Адрес в неуправляемой памяти, по которому производится запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2096">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-2097">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2097">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2098">Записывает в неуправляемую память целое число, разрядность которого соответствует собственной разрядности процессора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2098">Writes a processor native sized integer value into unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2099"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> позволяет осуществлять прямое взаимодействие с неуправляемым C-стиле `IntPtr` массивом, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2099"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="41aa0-2100">Запись в невыровненные участки памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2100">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-2101">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2101">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-2102">
            <paramref name="ptr" /> не является распознаваемым форматом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2102">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="41aa0-2103">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2103">-or-</span>
          </span>
          <span data-ttu-id="41aa0-2104">Свойство <paramref name="ptr" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2104">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41aa0-2105">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2105">-or-</span>
          </span>
          <span data-ttu-id="41aa0-2106">
            <paramref name="ptr" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2106">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2107">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2107">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2108">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2108">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (IntPtr ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr(native int ptr, int32 ofs, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As IntPtr, ofs As Integer, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(IntPtr ptr, int ofs, IntPtr val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-2109">Базовый адрес для записи в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2109">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-2110">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед записью.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2110">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-2111">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2111">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2112">Записывает в неуправляемую память с указанным смещением целое число, разрядность которого соответствует собственной разрядности процессора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2112">Writes a processor native-sized integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2113">Этот метод записывает 32-разрядное целое число со знаком на 32-разрядных системах и 64-разрядное целое число в 64-разрядных системах.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2113">This method writes a 32 bit integer on 32 bit systems, and a 64 bit integer on 64 bit systems.</span></span>  
  
 <span data-ttu-id="41aa0-2114"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> позволяет осуществлять прямое взаимодействие с неуправляемым C-стиле `IntPtr` массивом, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2114"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="41aa0-2115">Запись в невыровненные участки памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2115">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-2116">В следующем примере демонстрируется чтение и запись в неуправляемый массив с помощью <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> и <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2116">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-2117">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2117">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2118">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2118">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2119">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2119">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (object ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr([out] object ptr, int32 ofs, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As Object, ofs As Integer, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(System::Object ^ ptr, int ofs, IntPtr val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="41aa0-2120">Базовый адрес конечного объекта в неуправляемой памяти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2120">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="41aa0-2121">Дополнительное смещение в байтах, добавляемое к параметру <c>ptr</c> перед записью.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2121">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="41aa0-2122">Значение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2122">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2123">Записывает в неуправляемую память целое число, разрядность которого соответствует собственной разрядности процессора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2123">Writes a processor native sized integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2124"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> позволяет осуществлять прямое взаимодействие с неуправляемым массивом байтов, характерным для языка C, исключая затраты на полное копирование неуправляемого массива (с помощью <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) в отдельный управляемый массив для задания значений его элементов.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2124"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="41aa0-2125">Запись в невыровненные участки памяти поддерживается.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2125">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="41aa0-2126">Сумма базового адреса (<paramref name="ptr" />) и байта смещения (<paramref name="ofs" />) дает значение null или недопустимый адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2126">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41aa0-2127">Параметр <paramref name="ptr" /> является объектом <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2127">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="41aa0-2128">Этот метод не принимает параметры <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2128">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2129">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2129">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2130">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2130">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeBSTR">
      <MemberSignature Language="C#" Value="public static void ZeroFreeBSTR (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeBSTR(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeBSTR (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeBSTR(IntPtr s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-2131">Адрес освобождаемой строки <see langword="BSTR" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2131">The address of the <see langword="BSTR" /> to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2132">Освобождает указатель [BSTR](https://msdn.microsoft.com/library/ms221069.aspx), выделенный с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2132">Frees a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2133"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> Метод сначала задает содержимое строки BSTR до нуля и затем освобождается BSTR.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2133">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> method first sets the contents of the BSTR to zero, and then frees the BSTR.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2134">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2134">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2135">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2135">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemAnsi (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemAnsi(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemAnsi (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemAnsi(IntPtr s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-2136">Адрес освобождаемой неуправляемой строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2136">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2137">Освобождает указатель на неуправляемую строку, выделенный с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2137">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2138"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> Метод сначала нули а затем освобождает неуправляемой памяти, выделенной с помощью <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2138">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-2139">В следующем примере используется <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> метод маршалировать и расшифровать содержимое <xref:System.Security.SecureString> объекта в блок неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2139">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="41aa0-2140">Затем он использует <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> метод обнуляет и dispose неуправляемого блока.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2140">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2141">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2141">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2142">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2142">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemUnicode (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemUnicode(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemUnicode (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemUnicode(IntPtr s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-2143">Адрес освобождаемой неуправляемой строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2143">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2144">Освобождает указатель на неуправляемую строку, выделенный с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2144">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2145"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> Метод сначала нули а затем освобождает неуправляемой памяти, выделенной с помощью <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2145">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2146">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2146">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2147">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2147">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemUTF8">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemUTF8 (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemUTF8(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemUTF8 (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemUTF8(IntPtr s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static void ZeroFreeGlobalAllocAnsi (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeGlobalAllocAnsi(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeGlobalAllocAnsi (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeGlobalAllocAnsi(IntPtr s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-2148">Адрес освобождаемой неуправляемой строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2148">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2149">Освобождает указатель на неуправляемую строку, выделенный с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2149">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2150"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> Метод сначала нули а затем освобождает неуправляемой памяти, выделенной с помощью <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2150">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-2151">В следующем примере используется <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> метод маршалировать и расшифровать содержимое <xref:System.Security.SecureString> объекта в блок неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2151">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="41aa0-2152">Затем он использует <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> метод обнуляет и dispose неуправляемого блока.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2152">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2153">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2153">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2154">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2154">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static void ZeroFreeGlobalAllocUnicode (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeGlobalAllocUnicode(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeGlobalAllocUnicode (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeGlobalAllocUnicode(IntPtr s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="41aa0-2155">Адрес освобождаемой неуправляемой строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2155">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41aa0-2156">Освобождает указатель на неуправляемую строку, выделенный с помощью метода <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2156">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41aa0-2157"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> Метод сначала нули а затем освобождает неуправляемой памяти, выделенной с помощью <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2157">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41aa0-2158">В следующем примере демонстрируется использование <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> метод неуправляемыми `LogonUser` функцию для выполнения олицетворения пользователя с помощью <xref:System.Security.SecureString> класса.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2158">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method with the unmanaged `LogonUser` function to perform impersonation with the <xref:System.Security.SecureString> class.</span></span> <span data-ttu-id="41aa0-2159">Затем в примере используется <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> метод обнуляет и освобождения ссылки неуправляемой строки.</span><span class="sxs-lookup"><span data-stu-id="41aa0-2159">The example then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method to zero out and free the unmanaged string reference.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="41aa0-2160">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2160">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="41aa0-2161">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41aa0-2161">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>