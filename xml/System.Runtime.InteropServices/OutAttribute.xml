<Type Name="OutAttribute" FullName="System.Runtime.InteropServices.OutAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6a5f667aa9e088c1293983294fb45fd08504295c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OutAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OutAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.OutAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OutAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bddbf-101">Указывает, что данные необходимо маршалировать из вызываемого объекта обратно в вызывающий объект.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bddbf-101">Indicates that data should be marshaled from callee back to caller.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bddbf-102">Этот атрибут можно применять к параметрам.</span><span class="sxs-lookup"><span data-stu-id="bddbf-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="bddbf-103"><xref:System.Runtime.InteropServices.OutAttribute> Является необязательным.</span><span class="sxs-lookup"><span data-stu-id="bddbf-103">The <xref:System.Runtime.InteropServices.OutAttribute> is optional.</span></span> <span data-ttu-id="bddbf-104">Атрибут поддерживается для COM-взаимодействия и только вызова платформы.</span><span class="sxs-lookup"><span data-stu-id="bddbf-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="bddbf-105">В случае отсутствия явных параметров упаковщик взаимодействия предполагается, что правила на основе параметра типа, является ли этот параметр передается по значению или по ссылке, и является ли тип преобразуемые и непреобразуемые.</span><span class="sxs-lookup"><span data-stu-id="bddbf-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="bddbf-106">Например <xref:System.Text.StringBuilder> класса всегда считается In/Out и предполагается в массив строк, передаваемым по значению.</span><span class="sxs-lookup"><span data-stu-id="bddbf-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="bddbf-107">Только никогда не является маршалинга для параметров по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="bddbf-107">Out-only behavior is never a default marshaling behavior for parameters.</span></span> <span data-ttu-id="bddbf-108">Можно применить <xref:System.Runtime.InteropServices.OutAttribute> для значений и ссылочные типы, переданные по ссылке, чтобы сделать только поведение, которое эквивалентно использованию In/Out поведение `out` ключевого слова C#.</span><span class="sxs-lookup"><span data-stu-id="bddbf-108">You can apply the <xref:System.Runtime.InteropServices.OutAttribute> to value and reference types passed by reference to change In/Out behavior to Out-only behavior, which is equivalent to using the `out` keyword in C#.</span></span> <span data-ttu-id="bddbf-109">Например массивы, передаваемые по значению, маршалируются как только параметры по умолчанию можно изменить только для ожидания.</span><span class="sxs-lookup"><span data-stu-id="bddbf-109">For example, arrays passed by value, marshaled as In-only parameters by default, can be changed to Out-only.</span></span> <span data-ttu-id="bddbf-110">Тем не менее поведение не всегда предоставляет предполагаемую семантику Если типы содержат полностью непреобразуемые элементы или поля, потому что упаковщик взаимодействия использует закрепление.</span><span class="sxs-lookup"><span data-stu-id="bddbf-110">However, the behavior does not always provide expected semantics when the types include all-blittable elements or fields because the interop marshaler uses pinning.</span></span> <span data-ttu-id="bddbf-111">Если вас не интересует передача данных в вызываемый объект, только маршалинг позволяют повысить производительность для преобразуемых типов.</span><span class="sxs-lookup"><span data-stu-id="bddbf-111">If you do not care about passing data into the callee, Out-only marshaling can provide better performance for non-blittable types.</span></span>  
  
 <span data-ttu-id="bddbf-112">Объединение <xref:System.Runtime.InteropServices.InAttribute> и <xref:System.Runtime.InteropServices.OutAttribute> является особенно удобно при работе с массивами и отформатирован, преобразуемых типов.</span><span class="sxs-lookup"><span data-stu-id="bddbf-112">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="bddbf-113">Вызывающие объекты видеть изменения, вызываемыми с этими типами только в том случае, если применяются оба атрибута.</span><span class="sxs-lookup"><span data-stu-id="bddbf-113">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="bddbf-114">Поскольку для этих типов необходимо копирование во время маршалинга, можно использовать <xref:System.Runtime.InteropServices.InAttribute> и <xref:System.Runtime.InteropServices.OutAttribute> для снижения количества ненужных копий.</span><span class="sxs-lookup"><span data-stu-id="bddbf-114">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="bddbf-115">Дополнительные сведения о воздействии <xref:System.Runtime.InteropServices.OutAttribute> на маршалинг. в разделе [атрибуты направления](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span><span class="sxs-lookup"><span data-stu-id="bddbf-115">For more information on the effect of <xref:System.Runtime.InteropServices.OutAttribute> on marshaling behavior, see [Directional Attributes](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bddbf-116">В следующем примере показано, как применить <xref:System.Runtime.InteropServices.InAttribute> и <xref:System.Runtime.InteropServices.OutAttribute> к платформе прототипа вызова неуправляемого кода, передает массив в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="bddbf-116">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="bddbf-117">Сочетание атрибутов направления позволяет вызывающему объекту изменения, внесенные вызываемым.</span><span class="sxs-lookup"><span data-stu-id="bddbf-117">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.InAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.OutAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bddbf-118">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.OutAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bddbf-118">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.OutAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>