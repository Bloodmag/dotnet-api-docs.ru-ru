<Type Name="_Type" FullName="System.Runtime.InteropServices._Type">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6da68c02b5adbe897e69251abe53d1bf839191a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Type" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Type" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._Type" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Type" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Type" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("BCA8B44D-AAD6-3A86-8AB7-03349F4F2DA2")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Type))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ce31b-101">Предоставляет неуправляемому коду доступ к открытым элементам класса <see cref="T:System.Type" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ce31b-101">Exposes the public members of the <see cref="T:System.Type" /> class to the unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-102">Этот интерфейс для доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-103">Этот интерфейс сохраняет порядок таблицы vtable <xref:System.Type?displayProperty=nameWithType> члены класса, осуществляемым при помощи неуправляемый COM-объектов.</span><span class="sxs-lookup"><span data-stu-id="ce31b-103">This interface preserves the vtable order of the <xref:System.Type?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-104">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-104">Provides COM objects with version-independent access to the <see cref="P:System.Type.Assembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-105">Экземпляр <see cref="T:System.Reflection.Assembly" />, описывающий сборку, которая содержит текущий тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-105">An <see cref="T:System.Reflection.Assembly" /> instance that describes the assembly containing the current type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-106">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-106">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-107"><xref:System.Type.Assembly%2A?displayProperty=nameWithType> Возвращает свойство <xref:System.Reflection.Assembly> в котором объявлен тип.</span><span class="sxs-lookup"><span data-stu-id="ce31b-107">The <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property gets the <xref:System.Reflection.Assembly> in which the type is declared.</span></span> <span data-ttu-id="ce31b-108">Для универсальных типов, то это свойство возвращает <xref:System.Reflection.Assembly> в которой определен универсальный тип.</span><span class="sxs-lookup"><span data-stu-id="ce31b-108">For generic types, this property gets the <xref:System.Reflection.Assembly> in which the generic type is defined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyQualifiedName">
      <MemberSignature Language="C#" Value="public string AssemblyQualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.AssemblyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyQualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyQualifiedName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-109">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.AssemblyQualifiedName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-109">Provides COM objects with version-independent access to the <see cref="P:System.Type.AssemblyQualifiedName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-110">Имя объекта <see cref="T:System.Type" /> с указанием сборки, включающее имя сборки, из которой был загружен объект <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-110">The assembly-qualified name of the <see cref="T:System.Type" />, including the name of the assembly from which the <see cref="T:System.Type" /> was loaded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-111">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-111">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-112"><xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType> Свойство возвращает имя сборки <xref:System.Type>, включая имя сборки, из которой <xref:System.Type> была загружена.</span><span class="sxs-lookup"><span data-stu-id="ce31b-112">The <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType> property gets the assembly-qualified name of the <xref:System.Type>, including the name of the assembly from which the <xref:System.Type> was loaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.TypeAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.TypeAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As TypeAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::TypeAttributes Attributes { System::Reflection::TypeAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-113">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.Attributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-113">Provides COM objects with version-independent access to the <see cref="P:System.Type.Attributes" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-114">Объект <see cref="T:System.Reflection.TypeAttributes" />, представляющий набор атрибутов типа <see cref="T:System.Type" />, если <see cref="T:System.Type" /> не представляет параметр универсального типа. В противном случае это значение не определено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-114">A <see cref="T:System.Reflection.TypeAttributes" /> object representing the attribute set of the <see cref="T:System.Type" />, unless the <see cref="T:System.Type" /> represents a generic type parameter, in which case the value is unspecified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-115">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-115">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-116"><xref:System.Type.Attributes%2A?displayProperty=nameWithType> Свойство возвращает атрибуты, связанные с <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-116">The <xref:System.Type.Attributes%2A?displayProperty=nameWithType> property gets the attributes associated with the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public Type BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ BaseType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-117">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.BaseType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-117">Provides COM objects with version-independent access to the <see cref="P:System.Type.BaseType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-118">Объект <see cref="T:System.Type" />, прямым наследником которого является текущий объект <see cref="T:System.Type" />, или <see langword="null" />, если текущий объект <see langword="Type" /> представляет класс <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-118">The <see cref="T:System.Type" /> from which the current <see cref="T:System.Type" /> directly inherits, or <see langword="null" /> if the current <see langword="Type" /> represents the <see cref="T:System.Object" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-119">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-119">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-120"><xref:System.Type.BaseType%2A?displayProperty=nameWithType> Свойство возвращает тип, от которого текущий <xref:System.Type> является непосредственным наследником.</span><span class="sxs-lookup"><span data-stu-id="ce31b-120">The <xref:System.Type.BaseType%2A?displayProperty=nameWithType> property gets the type from which the current <xref:System.Type> directly inherits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-121">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.DeclaringType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-121">Provides COM objects with version-independent access to the <see cref="P:System.Type.DeclaringType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-122">Объект <see cref="T:System.Type" /> для класса, объявляющего данный член.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-122">The <see cref="T:System.Type" /> object for the class that declares this member.</span>
          </span>
          <span data-ttu-id="ce31b-123">Если данный тип является вложенным, это свойство возвращает тип, в который он вложен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-123">If the type is a nested type, this property returns the enclosing type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-124">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-124">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-125"><xref:System.Type.DeclaringType%2A?displayProperty=nameWithType> Свойство возвращает класс, который объявляет этот член.</span><span class="sxs-lookup"><span data-stu-id="ce31b-125">The <xref:System.Type.DeclaringType%2A?displayProperty=nameWithType> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-126">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="Overload:System.Type.Equals" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-126">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.Equals" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-127">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-127">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-128"><xref:System.Type.Equals%2A?displayProperty=nameWithType> Определяет метод, если базовый системный тип текущего <xref:System.Type> совпадает с базовым системным типом указанного <xref:System.Object> или <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-128">The <xref:System.Type.Equals%2A?displayProperty=nameWithType> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Object> or <xref:System.Type>.</span></span>  
  
 <span data-ttu-id="ce31b-129">.</span><span class="sxs-lookup"><span data-stu-id="ce31b-129">.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="ce31b-130">Объект <see cref="T:System.Object" />, базовый системный тип которого сравнивается с базовым системным типом текущего типа <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-130">The <see cref="T:System.Object" /> whose underlying system type is to be compared with the underlying system type of the current <see cref="T:System.Type" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-131">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-131">Provides COM objects with version-independent access to the <see cref="M:System.Type.Equals(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-132">Значение <see langword="true" />, если базовый системный тип параметра <paramref name="o" /> совпадает с базовым системным типом текущего объекта <see cref="T:System.Type" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-132">
              <see langword="true" /> if the underlying system type of <paramref name="o" /> is the same as the underlying system type of the current <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-133">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-133">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-134"><xref:System.Type.Equals%2A?displayProperty=nameWithType> Определяет метод, если базовый системный тип текущего <xref:System.Type> совпадает с базовым системным типом указанного объекта <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-134">The <xref:System.Type.Equals%2A?displayProperty=nameWithType> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Type o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Type o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.Equals(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (o As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(Type ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="ce31b-135">Объект <see cref="T:System.Type" />, базовый системный тип которого сравнивается с базовым системным типом текущего типа <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-135">The <see cref="T:System.Type" /> whose underlying system type is to be compared with the underlying system type of the current <see cref="T:System.Type" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-136">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.Equals(System.Type)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-136">Provides COM objects with version-independent access to the <see cref="M:System.Type.Equals(System.Type)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-137">Значение <see langword="true" />, если базовый системный тип параметра <paramref name="o" /> совпадает с базовым системным типом текущего объекта <see cref="T:System.Type" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-137">
              <see langword="true" /> if the underlying system type of <paramref name="o" /> is the same as the underlying system type of the current <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-138">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-138">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-139"><xref:System.Type.Equals%2A?displayProperty=nameWithType> Определяет метод, если базовый системный тип текущего <xref:System.Type> совпадает с базовым системным типом указанного объекта <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-139">The <xref:System.Type.Equals%2A?displayProperty=nameWithType> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindInterfaces">
      <MemberSignature Language="C#" Value="public Type[] FindInterfaces (System.Reflection.TypeFilter filter, object filterCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] FindInterfaces(class System.Reflection.TypeFilter filter, object filterCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindInterfaces (filter As TypeFilter, filterCriteria As Object) As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ FindInterfaces(System::Reflection::TypeFilter ^ filter, System::Object ^ filterCriteria);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Reflection.TypeFilter" />
        <Parameter Name="filterCriteria" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="ce31b-140">Делегат <see cref="T:System.Reflection.TypeFilter" />, сравнивающий интерфейсы с параметром <c>filterCriteria</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-140">The <see cref="T:System.Reflection.TypeFilter" /> delegate that compares the interfaces against <c>filterCriteria</c>.</span>
          </span>
        </param>
        <param name="filterCriteria">
          <span data-ttu-id="ce31b-141">Критерий поиска, определяющий, должен ли тот или иной интерфейс включаться в возвращаемый массив.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-141">The search criteria that determines whether an interface should be included in the returned array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-142">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-142">Provides COM objects with version-independent access to the <see cref="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-143">Массив объектов <see cref="T:System.Type" />, представляющий отфильтрованный список интерфейсов, реализованных или наследуемых текущим типом <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-143">An array of <see cref="T:System.Type" /> objects representing a filtered list of the interfaces implemented or inherited by the current <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="ce31b-144">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-144">-or-</span>
          </span>
          <span data-ttu-id="ce31b-145">Пустой массив типа <see cref="T:System.Type" />, если отсутствуют интерфейсы, реализованные или наследуемые текущим типом <see cref="T:System.Type" /> и удовлетворяющие заданному фильтру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-145">An empty array of type <see cref="T:System.Type" />, if no interfaces matching the filter are implemented or inherited by the current <see cref="T:System.Type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-146">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-146">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-147"><xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType> Метод возвращает массив <xref:System.Type> объектов, представляющий отфильтрованный список интерфейсов, реализованных или наследуемых текущим <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-147">The <xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType> method returns an array of <xref:System.Type> objects representing a filtered list of interfaces implemented or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] FindMembers (System.Reflection.MemberTypes memberType, System.Reflection.BindingFlags bindingAttr, System.Reflection.MemberFilter filter, object filterCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] FindMembers(valuetype System.Reflection.MemberTypes memberType, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MemberFilter filter, object filterCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMembers (memberType As MemberTypes, bindingAttr As BindingFlags, filter As MemberFilter, filterCriteria As Object) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ FindMembers(System::Reflection::MemberTypes memberType, System::Reflection::BindingFlags bindingAttr, System::Reflection::MemberFilter ^ filter, System::Object ^ filterCriteria);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberType" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="filter" Type="System.Reflection.MemberFilter" />
        <Parameter Name="filterCriteria" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="memberType">
          <span data-ttu-id="ce31b-148">Объект <see langword="MemberTypes" />, показывающий тип члена, который нужно найти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-148">A <see langword="MemberTypes" /> object indicating the type of member to search for.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-149">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-149">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-150">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-150">-or-</span>
          </span>
          <span data-ttu-id="ce31b-151">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-151">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="ce31b-152">Делегат, выполняющий сравнение и возвращающий <see langword="true" />, если проверяемый член соответствует условиям, заданным в параметре <c>filterCriteria</c>, и <see langword="false" /> в противном случае.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-152">The delegate that does the comparisons, returning <see langword="true" /> if the member currently being inspected matches the <c>filterCriteria</c> and <see langword="false" /> otherwise.</span>
          </span>
          <span data-ttu-id="ce31b-153">Можно использовать делегаты <see langword="FilterAttribute" />, <see langword="FilterName" /> и <see langword="FilterNameIgnoreCase" />, предоставляемые этим классом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-153">You can use the <see langword="FilterAttribute" />, <see langword="FilterName" />, and <see langword="FilterNameIgnoreCase" /> delegates supplied by this class.</span>
          </span>
          <span data-ttu-id="ce31b-154">Первый делегат в качестве условий поиска использует поля классов <see langword="FieldAttributes" />, <see langword="MethodAttributes" /> и <see langword="MethodImplAttributes" />, а два других делегата — объекты <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-154">The first uses the fields of <see langword="FieldAttributes" />, <see langword="MethodAttributes" />, and <see langword="MethodImplAttributes" /> as search criteria, and the other two delegates use <see langword="String" /> objects as the search criteria.</span>
          </span>
        </param>
        <param name="filterCriteria">
          <span data-ttu-id="ce31b-155">Условие поиска, определяющее, будет ли член включен в возвращаемый массив объектов <see langword="MemberInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-155">The search criteria that determines whether a member is returned in the array of <see langword="MemberInfo" /> objects.</span>
          </span>
          <span data-ttu-id="ce31b-156">Поля классов <see langword="FieldAttributes" />, <see langword="MethodAttributes" /> и <see langword="MethodImplAttributes" /> могут использоваться вместе с делегатом <see langword="FilterAttribute" />, предоставляемым этим классом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-156">The fields of <see langword="FieldAttributes" />, <see langword="MethodAttributes" />, and <see langword="MethodImplAttributes" /> can be used in conjunction with the <see langword="FilterAttribute" /> delegate supplied by this class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-157">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-157">Provides COM objects with version-independent access to the <see cref="M:System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-158">Отфильтрованный массив объектов <see cref="T:System.Reflection.MemberInfo" />, имеющих тип указанного члена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-158">A filtered array of <see cref="T:System.Reflection.MemberInfo" /> objects of the specified member type.</span>
          </span>
          <span data-ttu-id="ce31b-159">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-159">-or-</span>
          </span>
          <span data-ttu-id="ce31b-160">Пустой массив объектов типа <see cref="T:System.Reflection.MemberInfo" />, если у текущего типа <see cref="T:System.Type" /> нет членов типа <paramref name="memberType" />, удовлетворяющих условиям фильтра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-160">An empty array of type <see cref="T:System.Reflection.MemberInfo" />, if the current <see cref="T:System.Type" /> does not have members of type <paramref name="memberType" /> that match the filter criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-161">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-161">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-162"><xref:System.Type.FindMembers%2A?displayProperty=nameWithType> Метод возвращает отфильтрованный массив <xref:System.Reflection.MemberInfo> объекты заданного типа.</span><span class="sxs-lookup"><span data-stu-id="ce31b-162">The <xref:System.Type.FindMembers%2A?displayProperty=nameWithType> method returns a filtered array of <xref:System.Reflection.MemberInfo> objects of the specified member type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-163">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-163">Provides COM objects with version-independent access to the <see cref="P:System.Type.FullName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-164">Строка, которая содержит полное имя объекта <see cref="T:System.Type" />, включая пространство имен <see cref="T:System.Type" />, но не включая сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-164">A string containing the fully qualified name of the <see cref="T:System.Type" />, including the namespace of the <see cref="T:System.Type" /> but not the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-165">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-165">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-166"><xref:System.Type.FullName%2A?displayProperty=nameWithType> Свойство возвращает полное имя <xref:System.Type>, включая пространство имен <xref:System.Type> , но не сборку.</span><span class="sxs-lookup"><span data-stu-id="ce31b-166">The <xref:System.Type.FullName%2A?displayProperty=nameWithType> property gets the fully qualified name of the <xref:System.Type>, including the namespace of the <xref:System.Type> but not the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArrayRank">
      <MemberSignature Language="C#" Value="public int GetArrayRank ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetArrayRank() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetArrayRank" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArrayRank () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetArrayRank();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-167">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetArrayRank" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-167">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetArrayRank" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-168">Значение типа <see cref="T:System.Int32" />, содержащее количество измерений текущего <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-168">An <see cref="T:System.Int32" /> containing the number of dimensions in the current <see cref="T:System.Type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-169">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-169">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-170"><xref:System.Type.GetArrayRank%2A?displayProperty=nameWithType> Метод возвращает число измерений в <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-170">The <xref:System.Type.GetArrayRank%2A?displayProperty=nameWithType> method gets the number of dimensions in an <xref:System.Array>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConstructor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-171">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="Overload:System.Type.GetConstructor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-171">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetConstructor" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-172">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-172">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-173"><xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> Метод получает определенный конструктор текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-173">The <xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> method gets a specific constructor of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConstructor">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo GetConstructor (Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ConstructorInfo GetConstructor(class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructor (types As Type()) As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::ConstructorInfo ^ GetConstructor(cli::array &lt;Type ^&gt; ^ types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="ce31b-174">Массив объектов <see cref="T:System.Type" />, предоставляющих число, порядок и тип параметров нужного конструктора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-174">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the desired constructor.</span>
          </span>
          <span data-ttu-id="ce31b-175">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-175">-or-</span>
          </span>
          <span data-ttu-id="ce31b-176">Пустой массив объектов <see cref="T:System.Type" /> для получения конструктора, не имеющего параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-176">An empty array of <see cref="T:System.Type" /> objects, to get a constructor that takes no parameters.</span>
          </span>
          <span data-ttu-id="ce31b-177">Подобный пустой массив предоставляется полем <see langword="static" /> с описателем <see cref="F:System.Type.EmptyTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-177">Such an empty array is provided by the <see langword="static" /> field <see cref="F:System.Type.EmptyTypes" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-178">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetConstructor(System.Type[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-178">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetConstructor(System.Type[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-179">Объект <see cref="T:System.Reflection.ConstructorInfo" />, представляющий открытый конструктор экземпляра, параметры которого соответствуют типам, указанным в массиве типов параметров, если такой конструктор существует, и <see langword="null" />, если такого конструктора нет.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-179">A <see cref="T:System.Reflection.ConstructorInfo" /> object representing the public instance constructor whose parameters match the types in the parameter type array, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-180">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-180">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-181"><xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> Метод выполняет поиск открытого конструктора экземпляра, параметры которого соответствуют типам, содержащимся в указанном массиве.</span><span class="sxs-lookup"><span data-stu-id="ce31b-181">The <xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> method searches for a public instance constructor whose parameters match the types in the specified array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructor">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ConstructorInfo GetConstructor(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::ConstructorInfo ^ GetConstructor(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-182">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-182">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-183">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-183">-or-</span>
          </span>
          <span data-ttu-id="ce31b-184">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-184">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="ce31b-185">Объект <see cref="T:System.Reflection.Binder" />, определяющий набор свойств и разрешающий привязку, что может быть сопряжено с выбором перегружаемых методов, приведением типов аргументов и вызовом члена с помощью отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-185">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span>
          </span>
          <span data-ttu-id="ce31b-186">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-186">-or-</span>
          </span>
          <span data-ttu-id="ce31b-187">Значение <see langword="null" />, чтобы использовать свойство <see cref="P:System.Type.DefaultBinder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-187">
              <see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="ce31b-188">Массив объектов <see cref="T:System.Type" />, предоставляющий число, порядок и тип параметров, извлекаемых конструктором.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-188">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the constructor to get.</span>
          </span>
          <span data-ttu-id="ce31b-189">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-189">-or-</span>
          </span>
          <span data-ttu-id="ce31b-190">Пустой массив объектов типа <see cref="T:System.Type" /> (то есть Type[] types = new Type[0]), если требуется получить конструктор, который не имеет параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-190">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.</span>
          </span>
          <span data-ttu-id="ce31b-191">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-191">-or-</span>
          </span>
          <span data-ttu-id="ce31b-192">
            <see cref="F:System.Type.EmptyTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-192">
              <see cref="F:System.Type.EmptyTypes" />.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ce31b-193">Массив объектов <see cref="T:System.Reflection.ParameterModifier" />, представляющих атрибуты, связанные с соответствующим элементом в массиве типов параметра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-193">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the parameter type array.</span>
          </span>
          <span data-ttu-id="ce31b-194">Связыватель по умолчанию не обрабатывает этот параметр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-194">The default binder does not process this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-195">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-195">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-196">Если поиск выполнен удачно, возвращается объект <see cref="T:System.Reflection.ConstructorInfo" />, представляющий конструктор, который соответствует указанным требованиям; в противном случае возвращается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-196">A <see cref="T:System.Reflection.ConstructorInfo" /> object representing the constructor that matches the specified requirements, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-197">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-197">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-198"><xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> Метод выполняет поиск конструктора, параметры которого соответствуют указанным типам аргументов и модификаторам, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-198">The <xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructor">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ConstructorInfo GetConstructor(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::ConstructorInfo ^ GetConstructor(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-199">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-199">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-200">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-200">-or-</span>
          </span>
          <span data-ttu-id="ce31b-201">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-201">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="ce31b-202">Объект <see cref="T:System.Reflection.Binder" />, определяющий набор свойств и разрешающий привязку, что может быть сопряжено с выбором перегружаемых методов, приведением типов аргументов и вызовом члена с помощью отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-202">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span>
          </span>
          <span data-ttu-id="ce31b-203">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-203">-or-</span>
          </span>
          <span data-ttu-id="ce31b-204">Значение <see langword="null" />, чтобы использовать свойство <see cref="P:System.Type.DefaultBinder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-204">
              <see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span>
          </span>
        </param>
        <param name="callConvention">
          <span data-ttu-id="ce31b-205">Объект <see cref="T:System.Reflection.CallingConventions" />, определяющий набор применяемых правил, касающихся порядка и расположения аргументов, способа передачи возвращаемого значения, регистров, используемых для аргументов, и очистки стека.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-205">The <see cref="T:System.Reflection.CallingConventions" /> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and the stack is cleaned up.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="ce31b-206">Массив объектов <see cref="T:System.Type" />, предоставляющий число, порядок и тип параметров, извлекаемых конструктором.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-206">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the constructor to get.</span>
          </span>
          <span data-ttu-id="ce31b-207">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-207">-or-</span>
          </span>
          <span data-ttu-id="ce31b-208">Пустой массив объектов типа <see cref="T:System.Type" /> (то есть Type[] types = new Type[0]), если требуется получить конструктор, который не имеет параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-208">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ce31b-209">Массив объектов <see cref="T:System.Reflection.ParameterModifier" />, представляющих атрибуты, связанные с соответствующим элементом в массиве <c>types</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-209">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <c>types</c> array.</span>
          </span>
          <span data-ttu-id="ce31b-210">Связыватель по умолчанию не обрабатывает этот параметр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-210">The default binder does not process this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-211">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-211">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-212">Если поиск выполнен удачно, возвращается объект <see cref="T:System.Reflection.ConstructorInfo" />, представляющий конструктор, который соответствует указанным требованиям; в противном случае возвращается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-212">A <see cref="T:System.Reflection.ConstructorInfo" /> object representing the constructor that matches the specified requirements, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-213">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-213">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-214"><xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> Метод выполняет поиск конструктора, параметры которого соответствуют указанным типам аргументов и модификаторам, используя заданные ограничения привязки и соглашение о вызовах.</span><span class="sxs-lookup"><span data-stu-id="ce31b-214">The <xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConstructors">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-215">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="Overload:System.Type.GetConstructors" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-215">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetConstructors" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-216">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-216">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-217"><xref:System.Type.GetConstructors%2A?displayProperty=nameWithType> Метод возвращает конструкторы текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-217">The <xref:System.Type.GetConstructors%2A?displayProperty=nameWithType> method gets the constructors of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConstructors">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo[] GetConstructors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ConstructorInfo[] GetConstructors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetConstructors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructors () As ConstructorInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^ GetConstructors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-218">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetConstructors" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-218">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetConstructors" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-219">Массив объектов <see cref="T:System.Reflection.ConstructorInfo" />, представляющий все открытые конструкторы экземпляров, определенные для текущего типа <see cref="T:System.Type" />, за исключением инициализатора типа (статический конструктор).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-219">An array of <see cref="T:System.Reflection.ConstructorInfo" /> objects representing all the public instance constructors defined for the current <see cref="T:System.Type" />, but not including the type initializer (static constructor).</span>
          </span>
          <span data-ttu-id="ce31b-220">Если для текущего типа <see cref="T:System.Type" /> не определены конструкторы экземпляра, или если текущий тип <see cref="T:System.Type" /> представляет собой параметр универсального типа или определение метода, возвращается пустой массив типа <see cref="T:System.Reflection.ConstructorInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-220">If no public instance constructors are defined for the current <see cref="T:System.Type" />, or if the current <see cref="T:System.Type" /> represents a type parameter of a generic type or method definition, an empty array of type <see cref="T:System.Reflection.ConstructorInfo" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-221">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-221">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-222"><xref:System.Type.GetConstructors%2A?displayProperty=nameWithType> Метод возвращает все открытые конструкторы, определенные для текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-222">The <xref:System.Type.GetConstructors%2A?displayProperty=nameWithType> method returns all the public constructors defined for the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructors">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructors (bindingAttr As BindingFlags) As ConstructorInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^ GetConstructors(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-223">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-223">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-224">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-224">-or-</span>
          </span>
          <span data-ttu-id="ce31b-225">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-225">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-226">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetConstructors(System.Reflection.BindingFlags)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-226">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetConstructors(System.Reflection.BindingFlags)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-227">Массив объектов <see cref="T:System.Reflection.ConstructorInfo" />, представляющий все конструкторы, определенные для текущего объекта <see cref="T:System.Type" /> и удовлетворяющие указанным ограничениям привязки, в том числе и инициализатор типа, если он определен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-227">An array of <see cref="T:System.Reflection.ConstructorInfo" /> objects representing all constructors defined for the current <see cref="T:System.Type" /> that match the specified binding constraints, including the type initializer if it is defined.</span>
          </span>
          <span data-ttu-id="ce31b-228">Возвращает пустой массив типа <see cref="T:System.Reflection.ConstructorInfo" />, если для текущего типа <see cref="T:System.Type" /> не определены конструкторы, если не один из определенных конструкторов не соответствует ограничениям на связывание, или если текущий тип <see cref="T:System.Type" /> представляет собой параметр универсального типа или определение метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-228">Returns an empty array of type <see cref="T:System.Reflection.ConstructorInfo" /> if no constructors are defined for the current <see cref="T:System.Type" />, if none of the defined constructors match the binding constraints, or if the current <see cref="T:System.Type" /> represents a type parameter of a generic type or method definition.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-229">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-229">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-230"><xref:System.Type.GetConstructors%2A?displayProperty=nameWithType> Метод ищет конструкторы, определенные для текущего <xref:System.Type>, используя указанный <xref:System.Reflection.BindingFlags>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-230">The <xref:System.Type.GetConstructors%2A?displayProperty=nameWithType> method searches for the constructors defined for the current <xref:System.Type>, using the specified <xref:System.Reflection.BindingFlags>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-231">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-231">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-232">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-232">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-233"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> Метод возвращает все атрибуты, примененные к этому члену.</span><span class="sxs-lookup"><span data-stu-id="ce31b-233">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> method returns all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="ce31b-234">Указывает, следует ли выполнять поиск атрибутов в цепочке наследования этого члена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-234">Specifies whether to search this member's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-235">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-235">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-236">Массив, содержащий пользовательские атрибуты, примененные к данному элементу, или массив с нулем (0) элементов, если атрибуты не применялись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-236">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-237">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-237">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-238"><xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> Метод возвращает все атрибуты, примененные к этому члену.</span><span class="sxs-lookup"><span data-stu-id="ce31b-238">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> method returns all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="ce31b-239">Тип атрибута для поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-239">The type of attribute to search for.</span>
          </span>
          <span data-ttu-id="ce31b-240">Возвращаются только те атрибуты, которые можно назначить этому типу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-240">Only attributes that are assignable to this type are returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="ce31b-241">Указывает, следует ли выполнять поиск атрибутов в цепочке наследования этого члена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-241">Specifies whether to search this member's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-242">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-242">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-243">Массив, содержащий пользовательские атрибуты, примененные к данному элементу, или массив с нулем (0) элементов, если атрибуты не применялись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-243">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-244">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-244">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-245"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> Метод возвращает все атрибуты, примененные к этому члену.</span><span class="sxs-lookup"><span data-stu-id="ce31b-245">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> method returns all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetDefaultMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetDefaultMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetDefaultMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultMembers () As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetDefaultMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-246">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetDefaultMembers" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-246">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetDefaultMembers" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-247">Массив объектов <see cref="T:System.Reflection.MemberInfo" />, представляющий все члены по умолчанию текущего объекта <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-247">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing all default members of the current <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="ce31b-248">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-248">-or-</span>
          </span>
          <span data-ttu-id="ce31b-249">Пустой массив типа <see cref="T:System.Reflection.MemberInfo" />, если у текущего типа <see cref="T:System.Type" /> нет членов по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-249">An empty array of type <see cref="T:System.Reflection.MemberInfo" />, if the current <see cref="T:System.Type" /> does not have default members.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-250">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-250">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-251"><xref:System.Type.GetDefaultMembers%2A?displayProperty=nameWithType> Метод ищет члены, определенные для текущего <xref:System.Type> которого <xref:System.Reflection.DefaultMemberAttribute> имеет значение.</span><span class="sxs-lookup"><span data-stu-id="ce31b-251">The <xref:System.Type.GetDefaultMembers%2A?displayProperty=nameWithType> method searches for the members defined for the current <xref:System.Type> whose <xref:System.Reflection.DefaultMemberAttribute> is set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementType">
      <MemberSignature Language="C#" Value="public Type GetElementType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetElementType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetElementType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElementType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetElementType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-252">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetElementType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-252">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetElementType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-253">Тип объекта (<see cref="T:System.Type" />), который содержится в текущем массиве или ссылка на который содержится в текущем массиве или на который ссылается указательный или ссылочный тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-253">The <see cref="T:System.Type" /> of the object encompassed or referred to by the current array, pointer or reference type.</span>
          </span>
          <span data-ttu-id="ce31b-254">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-254">-or-</span>
          </span>
          <span data-ttu-id="ce31b-255">Значение <see langword="null" />, если текущий тип <see cref="T:System.Type" /> не является массивом или указателем, или не передается по ссылке, или представляет собой универсальный тип либо определением метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-255">
              <see langword="null" /> if the current <see cref="T:System.Type" /> is not an array or a pointer, or is not passed by reference, or represents a generic type or a type parameter of a generic type or method definition.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-256">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-256">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-257"><xref:System.Type.GetElementType%2A?displayProperty=nameWithType> Возвращает <xref:System.Type> включенных объекта, на который ссылается текущий тип массива, указателя или ссылки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-257">The <xref:System.Type.GetElementType%2A?displayProperty=nameWithType> method returns the <xref:System.Type> of the object encompassed or referred to by the current array, pointer or reference type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvent">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-258">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="Overload:System.Type.GetEvent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-258">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetEvent" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-259">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-259">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-260"><xref:System.Type.GetEvent%2A?displayProperty=nameWithType> Метод возвращает определенное событие, которое объявлено или унаследовано в текущем объекте <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-260">The <xref:System.Type.GetEvent%2A?displayProperty=nameWithType> method gets a specific event declared or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.Reflection.EventInfo GetEvent (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.EventInfo GetEvent(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvent (name As String) As EventInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::EventInfo ^ GetEvent(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-261">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-261">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-262">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-262">-or-</span>
          </span>
          <span data-ttu-id="ce31b-263">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-263">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-264">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-264">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetEvent(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-265">Массив объектов <see cref="T:System.Reflection.EventInfo" />, представляющий все события, которые объявлены или унаследованы данным объектом <see cref="T:System.Type" /> и удовлетворяют указанным ограничениям привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-265">An array of <see cref="T:System.Reflection.EventInfo" /> objects representing all events that are declared or inherited by the current <see cref="T:System.Type" /> that match the specified binding constraints.</span>
          </span>
          <span data-ttu-id="ce31b-266">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-266">-or-</span>
          </span>
          <span data-ttu-id="ce31b-267">Пустой массив типа <see cref="T:System.Reflection.EventInfo" />, если у текущего типа <see cref="T:System.Type" /> нет событий или ни одно событие не удовлетворяет ограничениям привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-267">An empty array of type <see cref="T:System.Reflection.EventInfo" />, if the current <see cref="T:System.Type" /> does not have events, or if none of the events match the binding constraints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-268">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-268">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-269"><xref:System.Type.GetEvent%2A?displayProperty=nameWithType> Метод ищет события, которые объявлены или унаследованы текущим <xref:System.Type>, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-269">The <xref:System.Type.GetEvent%2A?displayProperty=nameWithType> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvent (name As String, bindingAttr As BindingFlags) As EventInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::EventInfo ^ GetEvent(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-270">Строка типа <see cref="T:System.String" />, содержащая имя события, которое объявлено или унаследовано текущим типом <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-270">The <see cref="T:System.String" /> containing the name of an event that is declared or inherited by the current <see cref="T:System.Type" />.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-271">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-271">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-272">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-272">-or-</span>
          </span>
          <span data-ttu-id="ce31b-273">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-273">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-274">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetEvent(System.String,System.Reflection.BindingFlags)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-274">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetEvent(System.String,System.Reflection.BindingFlags)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-275">Объект <see cref="T:System.Reflection.EventInfo" />, представляющий указанное событие, которое объявлено или унаследовано текущим типом <see cref="T:System.Type" />, если такое событие найдено; <see langword="null" /> в противном случае.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-275">The <see cref="T:System.Reflection.EventInfo" /> object representing the specified event that is declared or inherited by the current <see cref="T:System.Type" />, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-276">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-276">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-277"><xref:System.Type.GetEvent%2A?displayProperty=nameWithType> Возвращает <xref:System.Reflection.EventInfo> объект, представляющий указанное событие, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-277">The <xref:System.Type.GetEvent%2A?displayProperty=nameWithType> method returns the <xref:System.Reflection.EventInfo> object representing the specified event, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-278">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="Overload:System.Type.GetEvents" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-278">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetEvents" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-279">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-279">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-280"><xref:System.Type.GetEvents%2A?displayProperty=nameWithType> Метод возвращает события, которые объявлены или унаследованы текущим <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-280">The <xref:System.Type.GetEvents%2A?displayProperty=nameWithType> method gets the events that are declared or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public System.Reflection.EventInfo[] GetEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.EventInfo[] GetEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetEvents" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvents () As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-281">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetEvents" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-281">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetEvents" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-282">Массив объектов <see cref="T:System.Reflection.EventInfo" />, представляющий все открытые события, которые объявлены или унаследованы в текущем объекте <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-282">An array of <see cref="T:System.Reflection.EventInfo" /> objects representing all the public events that are declared or inherited by the current <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="ce31b-283">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-283">-or-</span>
          </span>
          <span data-ttu-id="ce31b-284">Пустой массив типа <see cref="T:System.Reflection.EventInfo" />, если в текущем объекте <see cref="T:System.Type" /> нет открытых событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-284">An empty array of type <see cref="T:System.Reflection.EventInfo" />, if the current <see cref="T:System.Type" /> does not have public events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-285">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-285">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-286"><xref:System.Type.GetEvents%2A?displayProperty=nameWithType> Метод возвращает все открытые события, которые объявлены или унаследованы текущим <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-286">The <xref:System.Type.GetEvents%2A?displayProperty=nameWithType> method returns all the public events that are declared or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.EventInfo[] GetEvents(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvents (bindingAttr As BindingFlags) As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-287">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-287">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-288">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-288">-or-</span>
          </span>
          <span data-ttu-id="ce31b-289">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-289">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-290">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetEvents(System.Reflection.BindingFlags)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-290">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetEvents(System.Reflection.BindingFlags)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-291">Массив объектов <see cref="T:System.Reflection.EventInfo" />, представляющий все события, которые объявлены или унаследованы данным объектом <see cref="T:System.Type" /> и удовлетворяют указанным ограничениям привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-291">An array of <see cref="T:System.Reflection.EventInfo" /> objects representing all events that are declared or inherited by the current <see cref="T:System.Type" /> that match the specified binding constraints.</span>
          </span>
          <span data-ttu-id="ce31b-292">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-292">-or-</span>
          </span>
          <span data-ttu-id="ce31b-293">Пустой массив типа <see cref="T:System.Reflection.EventInfo" />, если у текущего типа <see cref="T:System.Type" /> нет событий или ни одно событие не удовлетворяет ограничениям привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-293">An empty array of type <see cref="T:System.Reflection.EventInfo" />, if the current <see cref="T:System.Type" /> does not have events, or if none of the events match the binding constraints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-294">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-294">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-295"><xref:System.Type.GetEvents%2A?displayProperty=nameWithType> Метод ищет события, которые объявлены или унаследованы текущим <xref:System.Type>, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-295">The <xref:System.Type.GetEvents%2A?displayProperty=nameWithType> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetField">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-296">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="Overload:System.Type.GetField" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-296">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetField" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-297">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-297">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-298"><xref:System.Type.GetField%2A?displayProperty=nameWithType> Метод возвращает указанное поле текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-298">The <xref:System.Type.GetField%2A?displayProperty=nameWithType> method gets a specific field of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-299">Объект <see cref="T:System.String" />, содержащий имя искомого поля данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-299">The <see cref="T:System.String" /> containing the name of the data field to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-300">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetField(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-300">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetField(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-301">Объект <see cref="T:System.Reflection.FieldInfo" />, представляющий открытое поле с заданным именем, если такой метод найден; в противном случае — значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-301">A <see cref="T:System.Reflection.FieldInfo" /> object representing the public field with the specified name, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-302">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-302">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-303"><xref:System.Type.GetField%2A?displayProperty=nameWithType> Метод выполняет поиск открытого поля с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="ce31b-303">The <xref:System.Type.GetField%2A?displayProperty=nameWithType> method searches for the public field with the specified name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-304">Объект <see cref="T:System.String" />, содержащий имя искомого поля данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-304">The <see cref="T:System.String" /> containing the name of the data field to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-305">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-305">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-306">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-306">-or-</span>
          </span>
          <span data-ttu-id="ce31b-307">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-307">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-308">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-308">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-309">Объект <see cref="T:System.Reflection.FieldInfo" />, представляющий поле, соответствующее заданным требованиям, если такое поле существует, и <see langword="null" />, если такого поля нет.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-309">A <see cref="T:System.Reflection.FieldInfo" /> object representing the field that matches the specified requirements, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-310">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-310">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-311"><xref:System.Type.GetField%2A?displayProperty=nameWithType> Метод осуществляет поиск указанного поля, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-311">The <xref:System.Type.GetField%2A?displayProperty=nameWithType> method searches for the specified field, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFields">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-312">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="Overload:System.Type.GetFields" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-312">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetFields" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-313">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-313">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-314"><xref:System.Type.GetFields%2A?displayProperty=nameWithType> Метод возвращает указанное поле текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-314">The <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method gets a specific field of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetFields" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields () As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-315">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetFields" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-315">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetFields" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-316">Массив объектов <see cref="T:System.Reflection.FieldInfo" />, представляющий все открытые поля, определенные для текущего объекта <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-316">An array of <see cref="T:System.Reflection.FieldInfo" /> objects representing all the public fields defined for the current <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="ce31b-317">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-317">-or-</span>
          </span>
          <span data-ttu-id="ce31b-318">Пустой массив типа <see cref="T:System.Reflection.FieldInfo" />, если для текущего типа <see cref="T:System.Type" /> открытые поля не определены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-318">An empty array of type <see cref="T:System.Reflection.FieldInfo" />, if no public fields are defined for the current <see cref="T:System.Type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-319">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-319">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-320"><xref:System.Type.GetFields%2A?displayProperty=nameWithType> Метод возвращает все открытые поля текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-320">The <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method returns all the public fields of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-321">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-321">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-322">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-322">-or-</span>
          </span>
          <span data-ttu-id="ce31b-323">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-323">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-324">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetFields(System.Reflection.BindingFlags)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-324">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetFields(System.Reflection.BindingFlags)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-325">Массив объектов <see cref="T:System.Reflection.FieldInfo" />, представляющий все поля, определенные для текущего типа <see cref="T:System.Type" /> и удовлетворяющие указанным ограничениям привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-325">An array of <see cref="T:System.Reflection.FieldInfo" /> objects representing all fields defined for the current <see cref="T:System.Type" /> that match the specified binding constraints.</span>
          </span>
          <span data-ttu-id="ce31b-326">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-326">-or-</span>
          </span>
          <span data-ttu-id="ce31b-327">Пустой массив типа <see cref="T:System.Reflection.FieldInfo" />, если для текущего объекта <see cref="T:System.Type" /> не определены поля или ни одно из определенных полей не удовлетворяет ограничениям привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-327">An empty array of type <see cref="T:System.Reflection.FieldInfo" />, if no fields are defined for the current <see cref="T:System.Type" />, or if none of the defined fields match the binding constraints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-328">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-328">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-329"><xref:System.Type.GetFields%2A?displayProperty=nameWithType> Метод ищет поля, определенные для текущего <xref:System.Type>, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-329">The <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method searches for the fields defined for the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-330">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetHashCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-330">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetHashCode" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-331">Значение типа <see cref="T:System.Int32" />, содержащее хэш-код данного экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-331">An <see cref="T:System.Int32" /> containing the hash code for this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-332">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-332">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-333">метод <xref:System.Type.GetHashCode%2A?displayProperty=nameWithType>;</span><span class="sxs-lookup"><span data-stu-id="ce31b-333">The <xref:System.Type.GetHashCode%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="ce31b-334">Зарезервировано для будущего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-334">Reserved for future use.</span>
          </span>
          <span data-ttu-id="ce31b-335">Должно быть равным IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-335">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="ce31b-336">Переданный массив имен, которые необходимо сопоставить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-336">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="ce31b-337">Количество сопоставляемых имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-337">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="ce31b-338">Контекст языкового стандарта для интерпретации имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-338">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="ce31b-339">Массив, зарезервированный вызывающим объектом, куда помещаются идентификаторы, соответствующие именам.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-339">Caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-340">Сопоставляет набор имен соответствующему набору идентификаторов диспетчеризации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-340">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-341">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-341">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="ce31b-342">Дополнительные сведения о `IDispatch::GetIDsOfNames`, см. в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="ce31b-342">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInterface">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-343">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="Overload:System.Type.GetInterface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-343">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetInterface" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-344">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-344">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-345"><xref:System.Type.GetInterface%2A?displayProperty=nameWithType> Метод возвращает определенный интерфейс, реализуемый или наследуемый текущим <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-345">The <xref:System.Type.GetInterface%2A?displayProperty=nameWithType> method gets a specific interface implemented or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public Type GetInterface (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetInterface(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetInterface(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterface (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetInterface(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-346">Строка типа <see cref="T:System.String" />, содержащая имя искомого интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-346">The <see cref="T:System.String" /> containing the name of the interface to get.</span>
          </span>
          <span data-ttu-id="ce31b-347">Для универсальных интерфейсов это искаженное имя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-347">For generic interfaces, this is the mangled name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-348">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetInterface(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-348">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetInterface(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-349">Объект <see cref="T:System.Type" />, представляющий интерфейс с заданным именем, который реализуется или наследуется текущим объектом <see cref="T:System.Type" />, если такой интерфейс существует; в противном случае — значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-349">A <see cref="T:System.Type" /> object representing the interface with the specified name, implemented or inherited by the current <see cref="T:System.Type" />, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-350">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-350">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-351"><xref:System.Type.GetInterface%2A?displayProperty=nameWithType> Метод выполняет поиск интерфейса с заданным именем...</span><span class="sxs-lookup"><span data-stu-id="ce31b-351">The <xref:System.Type.GetInterface%2A?displayProperty=nameWithType> method searches for the interface with the specified name..</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public Type GetInterface (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetInterface(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterface (name As String, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetInterface(System::String ^ name, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-352">Строка типа <see cref="T:System.String" />, содержащая имя искомого интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-352">The <see cref="T:System.String" /> containing the name of the interface to get.</span>
          </span>
          <span data-ttu-id="ce31b-353">Для универсальных интерфейсов это искаженное имя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-353">For generic interfaces, this is the mangled name.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="ce31b-354">Если этот параметр равен <see langword="true" />, то при поиске <c>name</c> регистр букв не учитывается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-354">
              <see langword="true" /> to perform a case-insensitive search for <c>name</c>.</span>
          </span>
          <span data-ttu-id="ce31b-355">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-355">-or-</span>
          </span>
          <span data-ttu-id="ce31b-356">Если этот параметр равен <see langword="false" />, то при поиске <c>name</c> регистр букв учитывается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-356">
              <see langword="false" /> to perform a case-sensitive search for <c>name</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-357">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetInterface(System.String,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-357">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetInterface(System.String,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-358">Объект <see cref="T:System.Type" />, представляющий интерфейс с заданным именем, который реализуется или наследуется текущим объектом <see cref="T:System.Type" />, если такой интерфейс существует; в противном случае — значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-358">A <see cref="T:System.Type" /> object representing the interface with the specified name, implemented or inherited by the current <see cref="T:System.Type" />, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-359">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-359">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-360"><xref:System.Type.GetInterface%2A?displayProperty=nameWithType> Метод осуществляет поиск указанного интерфейса, указывая, следует ли выполнять поиск без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="ce31b-360">The <xref:System.Type.GetInterface%2A?displayProperty=nameWithType> method searches for the specified interface, specifying whether to do a case-sensitive search.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaceMap">
      <MemberSignature Language="C#" Value="public System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Reflection.InterfaceMapping GetInterfaceMap(class System.Type interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterfaceMap (interfaceType As Type) As InterfaceMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::InterfaceMapping GetInterfaceMap(Type ^ interfaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.InterfaceMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="interfaceType">
          <span data-ttu-id="ce31b-361">Тип <see cref="T:System.Type" />, соответствующий интерфейсу, для которого необходимо найти совпадение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-361">The <see cref="T:System.Type" /> of the interface of which to retrieve a mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-362">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetInterfaceMap(System.Type)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-362">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetInterfaceMap(System.Type)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-363">Объект <see cref="T:System.Reflection.InterfaceMapping" />, который представляет сопоставление интерфейса для параметра <paramref name="interfaceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-363">An <see cref="T:System.Reflection.InterfaceMapping" /> object representing the interface mapping for <paramref name="interfaceType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-364">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-364">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-365"><xref:System.Type.GetInterfaceMap%2A?displayProperty=nameWithType> Метод возвращает сопоставление для интерфейса заданного типа.</span><span class="sxs-lookup"><span data-stu-id="ce31b-365">The <xref:System.Type.GetInterfaceMap%2A?displayProperty=nameWithType> method returns an interface mapping for the specified interface type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaces">
      <MemberSignature Language="C#" Value="public Type[] GetInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterfaces () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-366">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetInterfaces" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-366">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetInterfaces" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-367">Массив объектов <see cref="T:System.Type" />, представляющий все интерфейсы, реализуемые или наследуемые текущим типом <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-367">An array of <see cref="T:System.Type" /> objects representing all the interfaces implemented or inherited by the current <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="ce31b-368">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-368">-or-</span>
          </span>
          <span data-ttu-id="ce31b-369">Пустой массив типа <see cref="T:System.Type" /> в случае отсутствия интерфейсов, реализуемых или наследуемых текущим типом <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-369">An empty array of type <see cref="T:System.Type" />, if no interfaces are implemented or inherited by the current <see cref="T:System.Type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-370">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-370">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-371"><xref:System.Type.GetInterfaces%2A?displayProperty=nameWithType> Метод возвращает все интерфейсы, реализуемые или наследуемые текущим <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-371">The <xref:System.Type.GetInterfaces%2A?displayProperty=nameWithType> method gets all the interfaces implemented or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMember">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-372">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="Overload:System.Type.GetMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-372">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetMember" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-373">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-373">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-374"><xref:System.Type.GetMember%2A?displayProperty=nameWithType> Метод возвращает указанные члены текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-374">The <xref:System.Type.GetMember%2A?displayProperty=nameWithType> method gets the specified members of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-375">Объект <see cref="T:System.String" />, содержащий имя искомых открытых членов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-375">The <see cref="T:System.String" /> containing the name of the public members to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-376">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetMember(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-376">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMember(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-377">Массив объектов <see cref="T:System.Reflection.MemberInfo" />, представляющий открытые члены с заданным именем, если такие члены есть, и пустой массив, если таких членов нет.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-377">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing the public members with the specified name, if found; otherwise, an empty array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-378">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-378">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-379"><xref:System.Type.GetMember%2A?displayProperty=nameWithType> Метод выполняет поиск открытого члена с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="ce31b-379">The <xref:System.Type.GetMember%2A?displayProperty=nameWithType> method searches for the public members with the specified name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-380">Строка типа <see cref="T:System.String" />, содержащая имя для поиска членов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-380">The <see cref="T:System.String" /> containing the name of the members to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-381">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-381">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-382">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-382">-or-</span>
          </span>
          <span data-ttu-id="ce31b-383">Ноль для возвращения пустого массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-383">Zero, to return an empty array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-384">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-384">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-385">Массив объектов <see cref="T:System.Reflection.MemberInfo" />, представляющий открытые члены с заданным именем, если такие члены есть, и пустой массив, если таких членов нет.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-385">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing the public members with the specified name, if found; otherwise, an empty array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-386">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-386">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-387"><xref:System.Type.GetMember%2A?displayProperty=nameWithType> Метод выполняет поиск указанных членов, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-387">The <xref:System.Type.GetMember%2A?displayProperty=nameWithType> method searches for the specified members, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.MemberTypes type, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, type As MemberTypes, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::MemberTypes type, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-388">Строка типа <see cref="T:System.String" />, содержащая имя для поиска членов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-388">The <see cref="T:System.String" /> containing the name of the members to get.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="ce31b-389">Искомое значение <see cref="T:System.Reflection.MemberTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-389">The <see cref="T:System.Reflection.MemberTypes" /> value to search for.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-390">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-390">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-391">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-391">-or-</span>
          </span>
          <span data-ttu-id="ce31b-392">Ноль для возвращения пустого массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-392">Zero, to return an empty array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-393">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-393">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-394">Массив объектов <see cref="T:System.Reflection.MemberInfo" />, представляющий открытые члены с заданным именем, если такие члены есть, и пустой массив, если таких членов нет.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-394">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing the public members with the specified name, if found; otherwise, an empty array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-395">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-395">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-396"><xref:System.Type.GetMember%2A?displayProperty=nameWithType> Метод ищет указанные члены заданного типа, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-396">The <xref:System.Type.GetMember%2A?displayProperty=nameWithType> method searches for the specified members of the specified member type, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMembers">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-397">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="Overload:System.Type.GetMembers" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-397">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetMembers" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-398">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-398">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-399"><xref:System.Type.GetMembers%2A?displayProperty=nameWithType> Метод возвращает члены (свойства, методы, поля, события и т. д.) текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-399">The <xref:System.Type.GetMembers%2A?displayProperty=nameWithType> method gets the members (properties, methods, fields, events, and so on) of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers () As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-400">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetMembers" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-400">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMembers" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-401">Массив объектов <see cref="T:System.Reflection.MemberInfo" />, представляющий все открытые члены текущего типа <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-401">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing all the public members of the current <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="ce31b-402">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-402">-or-</span>
          </span>
          <span data-ttu-id="ce31b-403">Пустой массив типа <see cref="T:System.Reflection.MemberInfo" />, если у текущего типа <see cref="T:System.Type" /> нет открытых членов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-403">An empty array of type <see cref="T:System.Reflection.MemberInfo" />, if the current <see cref="T:System.Type" /> does not have public members.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-404">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-404">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-405"><xref:System.Type.GetMembers%2A?displayProperty=nameWithType> Метод возвращает все открытые члены текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-405">The <xref:System.Type.GetMembers%2A?displayProperty=nameWithType> method returns all the public members of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-406">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-406">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-407">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-407">-or-</span>
          </span>
          <span data-ttu-id="ce31b-408">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-408">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-409">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetMembers(System.Reflection.BindingFlags)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-409">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMembers(System.Reflection.BindingFlags)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-410">Массив объектов <see cref="T:System.Reflection.MemberInfo" />, представляющий все члены, определенные для текущего типа <see cref="T:System.Type" /> и удовлетворяющие указанным ограничениям привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-410">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing all members defined for the current <see cref="T:System.Type" /> that match the specified binding constraints.</span>
          </span>
          <span data-ttu-id="ce31b-411">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-411">-or-</span>
          </span>
          <span data-ttu-id="ce31b-412">Пустой массив типа <see cref="T:System.Reflection.MemberInfo" />, если для текущего объекта <see cref="T:System.Type" /> не определены члены или ни один из определенных членов не удовлетворяет ограничениям привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-412">An empty array of type <see cref="T:System.Reflection.MemberInfo" />, if no members are defined for the current <see cref="T:System.Type" />, or if none of the defined members match the binding constraints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-413">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-413">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-414"><xref:System.Type.GetMembers%2A?displayProperty=nameWithType> Метод ищет члены, определенные для текущего <xref:System.Type>, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-414">The <xref:System.Type.GetMembers%2A?displayProperty=nameWithType> method searches for the members defined for the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-415">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="Overload:System.Type.GetMethod" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-415">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetMethod" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-416">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-416">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-417">метод <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>;</span><span class="sxs-lookup"><span data-stu-id="ce31b-417">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-418">Объект <see cref="T:System.String" />, содержащий имя искомого открытого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-418">The <see cref="T:System.String" /> containing the name of the public method to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-419">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetMethod(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-419">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-420">Объект <see cref="T:System.Reflection.MethodInfo" />, представляющий открытый метод с заданным именем, если такой метод есть, и <see langword="null" />, если такого метода нет.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-420">A <see cref="T:System.Reflection.MethodInfo" /> object representing the public method with the specified name, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-421">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-421">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-422"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType> Метод выполняет поиск открытого метода с заданным именем...</span><span class="sxs-lookup"><span data-stu-id="ce31b-422">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the public method with the specified name..</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-423">Строка типа <see cref="T:System.String" />, содержащая имя искомого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-423">The <see cref="T:System.String" /> containing the name of the method to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-424">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-424">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-425">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-425">-or-</span>
          </span>
          <span data-ttu-id="ce31b-426">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-426">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-427">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-427">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-428">Если поиск выполнен удачно, возвращается объект <see cref="T:System.Reflection.MethodInfo" />, предоставляющий метод, который соответствует указанным требованиям; в противном случае возвращается <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-428">A <see cref="T:System.Reflection.MethodInfo" /> object representing the method that matches the specified requirements, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-429">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-429">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-430"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType> Метод осуществляет поиск указанного метода, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-430">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the specified method, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, types As Type()) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, cli::array &lt;Type ^&gt; ^ types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-431">Объект <see cref="T:System.String" />, содержащий имя искомого открытого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-431">The <see cref="T:System.String" /> containing the name of the public method to get.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="ce31b-432">Массив объектов <see cref="T:System.Type" />, предоставляющий число, порядок и тип параметров искомого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-432">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the method to get.</span>
          </span>
          <span data-ttu-id="ce31b-433">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-433">-or-</span>
          </span>
          <span data-ttu-id="ce31b-434">Пустой массив объектов типа <see cref="T:System.Type" /> (то есть Type[] types = new Type[0]), если требуется получить метод, который не имеет параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-434">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-435">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetMethod(System.String,System.Type[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-435">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String,System.Type[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-436">Объект <see cref="T:System.Reflection.MethodInfo" />, представляющий открытый метод, параметры которого соответствуют указанным типам аргументов, если такой метод существует, и <see langword="null" />, если такого метода нет.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-436">A <see cref="T:System.Reflection.MethodInfo" /> object representing the public method whose parameters match the specified argument types, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-437">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-437">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-438"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType> Метод ищет указанный открытый метод, параметры которого соответствуют указанным типам аргументов.</span><span class="sxs-lookup"><span data-stu-id="ce31b-438">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the specified public method whose parameters match the specified argument types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, types As Type(), modifiers As ParameterModifier()) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-439">Объект <see cref="T:System.String" />, содержащий имя искомого открытого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-439">The <see cref="T:System.String" /> containing the name of the public method to get.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="ce31b-440">Массив объектов <see cref="T:System.Type" />, предоставляющий число, порядок и тип параметров искомого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-440">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the method to get.</span>
          </span>
          <span data-ttu-id="ce31b-441">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-441">-or-</span>
          </span>
          <span data-ttu-id="ce31b-442">Пустой массив объектов типа <see cref="T:System.Type" /> (то есть Type[] types = new Type[0]), если требуется получить метод, который не имеет параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-442">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ce31b-443">Массив объектов <see cref="T:System.Reflection.ParameterModifier" />, представляющих атрибуты, связанные с соответствующим элементом в массиве <c>types</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-443">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <c>types</c> array.</span>
          </span>
          <span data-ttu-id="ce31b-444">Связыватель по умолчанию не обрабатывает этот параметр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-444">The default binder does not process this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-445">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-445">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-446">Объект <see cref="T:System.Reflection.MethodInfo" />, представляющий открытый метод, который соответствует указанным условиям, если такой метод существует, и <see langword="null" />, если такого метода нет.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-446">A <see cref="T:System.Reflection.MethodInfo" /> object representing the public method that matches the specified requirements, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-447">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-447">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-448"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType> Метод ищет указанный открытый метод, параметры которого соответствуют указанным типам аргументов и модификаторам.</span><span class="sxs-lookup"><span data-stu-id="ce31b-448">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the specified public method whose parameters match the specified argument types and modifiers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-449">Строка типа <see cref="T:System.String" />, содержащая имя искомого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-449">The <see cref="T:System.String" /> containing the name of the method to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-450">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-450">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-451">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-451">-or-</span>
          </span>
          <span data-ttu-id="ce31b-452">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-452">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="ce31b-453">Объект <see cref="T:System.Reflection.Binder" />, определяющий набор свойств и разрешающий привязку, что может быть сопряжено с выбором перегружаемых методов, приведением типов аргументов и вызовом члена с помощью отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-453">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span>
          </span>
          <span data-ttu-id="ce31b-454">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-454">-or-</span>
          </span>
          <span data-ttu-id="ce31b-455">Значение <see langword="null" />, чтобы использовать свойство <see cref="P:System.Type.DefaultBinder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-455">
              <see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="ce31b-456">Массив объектов <see cref="T:System.Type" />, предоставляющий число, порядок и тип параметров искомого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-456">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the method to get.</span>
          </span>
          <span data-ttu-id="ce31b-457">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-457">-or-</span>
          </span>
          <span data-ttu-id="ce31b-458">Пустой массив объектов типа <see cref="T:System.Type" /> (то есть Type[] types = new Type[0]), если требуется получить метод, который не имеет параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-458">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ce31b-459">Массив объектов <see cref="T:System.Reflection.ParameterModifier" />, представляющих атрибуты, связанные с соответствующим элементом в массиве <c>types</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-459">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <c>types</c> array.</span>
          </span>
          <span data-ttu-id="ce31b-460">Связыватель по умолчанию не обрабатывает этот параметр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-460">The default binder does not process this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-461">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-461">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-462">Если поиск выполнен удачно, возвращается объект <see cref="T:System.Reflection.MethodInfo" />, предоставляющий метод, который соответствует указанным требованиям; в противном случае возвращается <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-462">A <see cref="T:System.Reflection.MethodInfo" /> object representing the method that matches the specified requirements, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-463">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-463">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-464"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType> Метод ищет указанный метод, параметры которого соответствуют указанным типам аргументов и модификаторам, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-464">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-465">Строка типа <see cref="T:System.String" />, содержащая имя искомого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-465">The <see cref="T:System.String" /> containing the name of the method to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-466">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-466">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-467">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-467">-or-</span>
          </span>
          <span data-ttu-id="ce31b-468">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-468">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="ce31b-469">Объект <see cref="T:System.Reflection.Binder" />, определяющий набор свойств и разрешающий привязку, что может быть сопряжено с выбором перегружаемых методов, приведением типов аргументов и вызовом члена с помощью отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-469">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span>
          </span>
          <span data-ttu-id="ce31b-470">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-470">-or-</span>
          </span>
          <span data-ttu-id="ce31b-471">Значение <see langword="null" />, чтобы использовать свойство <see cref="P:System.Type.DefaultBinder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-471">
              <see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span>
          </span>
        </param>
        <param name="callConvention">
          <span data-ttu-id="ce31b-472">Объект <see cref="T:System.Reflection.CallingConventions" />, определяющий набор применяемых правил, касающихся порядка и расположения аргументов, способа передачи возвращаемого значения, регистров, используемых для аргументов, и способа очистки стека.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-472">The <see cref="T:System.Reflection.CallingConventions" /> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and how the stack is cleaned up.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="ce31b-473">Массив объектов <see cref="T:System.Type" />, предоставляющий число, порядок и тип параметров искомого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-473">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the method to get.</span>
          </span>
          <span data-ttu-id="ce31b-474">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-474">-or-</span>
          </span>
          <span data-ttu-id="ce31b-475">Пустой массив объектов типа <see cref="T:System.Type" /> (то есть Type[] types = new Type[0]), если требуется получить метод, который не имеет параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-475">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ce31b-476">Массив объектов <see cref="T:System.Reflection.ParameterModifier" />, представляющих атрибуты, связанные с соответствующим элементом в массиве <c>types</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-476">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <c>types</c> array.</span>
          </span>
          <span data-ttu-id="ce31b-477">Связыватель по умолчанию не обрабатывает этот параметр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-477">The default binder does not process this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-478">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-478">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-479">Если поиск выполнен удачно, возвращается объект <see cref="T:System.Reflection.MethodInfo" />, предоставляющий метод, который соответствует указанным требованиям; в противном случае возвращается <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-479">A <see cref="T:System.Reflection.MethodInfo" /> object representing the method that matches the specified requirements, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-480">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-480">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-481"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType> Метод ищет указанный метод, параметры которого соответствуют указанным типам аргументов и модификаторам, используя заданные ограничения привязки и соглашение о вызовах.</span><span class="sxs-lookup"><span data-stu-id="ce31b-481">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethods">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-482">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="Overload:System.Type.GetMethods" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-482">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetMethods" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-483">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-483">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-484"><xref:System.Type.GetMethods%2A?displayProperty=nameWithType> Метод возвращает методы текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-484">The <xref:System.Type.GetMethods%2A?displayProperty=nameWithType> method gets the methods of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethods" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods () As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-485">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetMethods" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-485">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethods" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-486">Массив объектов <see cref="T:System.Reflection.MethodInfo" />, представляющий все открытые методы, определенные для текущего объекта <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-486">An array of <see cref="T:System.Reflection.MethodInfo" /> objects representing all the public methods defined for the current <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="ce31b-487">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-487">-or-</span>
          </span>
          <span data-ttu-id="ce31b-488">Пустой массив типа <see cref="T:System.Reflection.MethodInfo" />, если для текущего типа <see cref="T:System.Type" /> открытые методы не определены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-488">An empty array of type <see cref="T:System.Reflection.MethodInfo" />, if no public methods are defined for the current <see cref="T:System.Type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-489">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-489">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-490"><xref:System.Type.GetMethods%2A?displayProperty=nameWithType> Метод возвращает все открытые методы текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-490">The <xref:System.Type.GetMethods%2A?displayProperty=nameWithType> method returns all the public methods of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-491">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-491">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-492">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-492">-or-</span>
          </span>
          <span data-ttu-id="ce31b-493">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-493">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-494">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetMethods(System.Reflection.BindingFlags)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-494">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethods(System.Reflection.BindingFlags)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-495">Массив объектов <see cref="T:System.Reflection.MethodInfo" />, представляющий все методы, определенные для текущего типа <see cref="T:System.Type" /> и удовлетворяющие указанным ограничениям привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-495">An array of <see cref="T:System.Reflection.MethodInfo" /> objects representing all methods defined for the current <see cref="T:System.Type" /> that match the specified binding constraints.</span>
          </span>
          <span data-ttu-id="ce31b-496">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-496">-or-</span>
          </span>
          <span data-ttu-id="ce31b-497">Пустой массив типа <see cref="T:System.Reflection.MethodInfo" />, если для текущего объекта <see cref="T:System.Type" /> не определены методы или ни один из определенных методов не удовлетворяет ограничениям привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-497">An empty array of type <see cref="T:System.Reflection.MethodInfo" />, if no methods are defined for the current <see cref="T:System.Type" />, or if none of the defined methods match the binding constraints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-498">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-498">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-499"><xref:System.Type.GetMethods%2A?displayProperty=nameWithType> Метод ищет методы, определенные для текущего <xref:System.Type>, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-499">The <xref:System.Type.GetMethods%2A?displayProperty=nameWithType> method searches for the methods defined for the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNestedType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-500">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="Overload:System.Type.GetNestedType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-500">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetNestedType" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-501">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-501">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-502"><xref:System.Type.GetNestedType%2A?displayProperty=nameWithType> Метод возвращает определенный тип, вложенный в текущий <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-502">The <xref:System.Type.GetNestedType%2A?displayProperty=nameWithType> method gets a specific type nested within the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNestedType">
      <MemberSignature Language="C#" Value="public Type GetNestedType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetNestedType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetNestedType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNestedType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetNestedType(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-503">Строка, содержащая имя искомого вложенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-503">The string containing the name of the nested type to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-504">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetNestedType(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-504">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetNestedType(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-505">Объект <see cref="T:System.Type" />, представляющий открытый вложенный тип с заданным именем, если тип есть, и <see langword="null" />, если такого типа нет.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-505">A <see cref="T:System.Type" /> object representing the public nested type with the specified name, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-506">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-506">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-507"><xref:System.Type.GetNestedType%2A?displayProperty=nameWithType> Метод выполняет поиск открытого вложенного типа с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="ce31b-507">The <xref:System.Type.GetNestedType%2A?displayProperty=nameWithType> method searches for the public nested type with the specified name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNestedType">
      <MemberSignature Language="C#" Value="public Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetNestedType(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNestedType (name As String, bindingAttr As BindingFlags) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetNestedType(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-508">Строка, содержащая имя искомого вложенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-508">The string containing the name of the nested type to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-509">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-509">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-510">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-510">-or-</span>
          </span>
          <span data-ttu-id="ce31b-511">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-511">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-512">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-512">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-513">Если поиск выполнен удачно, возвращается объект <see cref="T:System.Type" />, предоставляющий вложенный тип, который соответствует указанным требованиям; в противном случае возвращается <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-513">A <see cref="T:System.Type" /> object representing the nested type that matches the specified requirements, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-514">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-514">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-515"><xref:System.Type.GetNestedType%2A?displayProperty=nameWithType> Метод ищет указанный вложенный тип, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-515">The <xref:System.Type.GetNestedType%2A?displayProperty=nameWithType> method searches for the specified nested type, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNestedTypes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-516">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="Overload:System.Type.GetNestedTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-516">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetNestedTypes" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-517">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-517">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-518"><xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType> Метод возвращает типы, вложенные в текущий <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-518">The <xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType> method gets the types nested within the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNestedTypes">
      <MemberSignature Language="C#" Value="public Type[] GetNestedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetNestedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetNestedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNestedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetNestedTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-519">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetNestedTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-519">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetNestedTypes" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-520">Массив объектов <see cref="T:System.Type" />, представляющий все типы, вложенные в текущий тип <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-520">An array of <see cref="T:System.Type" /> objects representing all the types nested within the current <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="ce31b-521">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-521">-or-</span>
          </span>
          <span data-ttu-id="ce31b-522">Пустой массив типа <see cref="T:System.Type" />, если у текущего типа <see cref="T:System.Type" /> нет вложенных типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-522">An empty array of type <see cref="T:System.Type" />, if no types are nested within the current <see cref="T:System.Type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-523">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-523">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-524"><xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType> Метод возвращает все типы, вложенные в текущий <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-524">The <xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType> method returns all the types nested within the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNestedTypes">
      <MemberSignature Language="C#" Value="public Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetNestedTypes(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNestedTypes (bindingAttr As BindingFlags) As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetNestedTypes(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-525">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-525">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-526">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-526">-or-</span>
          </span>
          <span data-ttu-id="ce31b-527">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-527">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-528">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetNestedTypes(System.Reflection.BindingFlags)" /> и выполняет поиск типов, вложенных в текущий тип <see cref="T:System.Type" />, используя заданные ограничения на связывание.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-528">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetNestedTypes(System.Reflection.BindingFlags)" /> method, and searches for the types nested within the current <see cref="T:System.Type" />, using the specified binding constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-529">Массив объектов <see cref="T:System.Type" />, предоставляющий все типы, вложенные в текущий объект <see cref="T:System.Type" />, которые соответствуют указанным ограничениям на связывание.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-529">An array of <see cref="T:System.Type" /> objects representing all the types nested within the current <see cref="T:System.Type" /> that match the specified binding constraints.</span>
          </span>
          <span data-ttu-id="ce31b-530">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-530">-or-</span>
          </span>
          <span data-ttu-id="ce31b-531">Пустой массив типа <see cref="T:System.Type" />, если у текущего типа <see cref="T:System.Type" /> нет вложенных типов или если ни один из вложенных типов не соответствует ограничениям на связывание.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-531">An empty array of type <see cref="T:System.Type" />, if no types are nested within the current <see cref="T:System.Type" />, or if none of the nested types match the binding constraints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-532">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-532">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-533">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="Overload:System.Type.GetProperties" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-533">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetProperties" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-534">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-534">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-535"><xref:System.Type.GetProperties%2A?displayProperty=nameWithType> Метод возвращает свойства текущего <xref:System.Type>...</span><span class="sxs-lookup"><span data-stu-id="ce31b-535">The <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method gets the properties of the current <xref:System.Type>..</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties () As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-536">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetProperties" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-536">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperties" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-537">Массив объектов <see cref="T:System.Reflection.PropertyInfo" />, представляющий все открытые свойства текущего типа <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-537">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects representing all public properties of the current <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="ce31b-538">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-538">-or-</span>
          </span>
          <span data-ttu-id="ce31b-539">Пустой массив типа <see cref="T:System.Reflection.PropertyInfo" />, если у текущего типа <see cref="T:System.Type" /> нет открытых свойств.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-539">An empty array of type <see cref="T:System.Reflection.PropertyInfo" />, if the current <see cref="T:System.Type" /> does not have public properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-540">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-540">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-541"><xref:System.Type.GetProperties%2A?displayProperty=nameWithType> Метод возвращает все открытые свойства текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-541">The <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method returns all the public properties of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-542">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-542">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-543">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-543">-or-</span>
          </span>
          <span data-ttu-id="ce31b-544">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-544">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-545">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetProperties(System.Reflection.BindingFlags)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-545">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperties(System.Reflection.BindingFlags)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-546">Массив объектов <see cref="T:System.Reflection.PropertyInfo" />, представляющий все свойства текущего типа <see cref="T:System.Type" />, которые удовлетворяют указанным ограничениям привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-546">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects representing all properties of the current <see cref="T:System.Type" /> that match the specified binding constraints.</span>
          </span>
          <span data-ttu-id="ce31b-547">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-547">-or-</span>
          </span>
          <span data-ttu-id="ce31b-548">Пустой массив типа <see cref="T:System.Reflection.PropertyInfo" />, если у текущего типа <see cref="T:System.Type" /> нет свойств или ни одно свойство не удовлетворяет ограничениям привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-548">An empty array of type <see cref="T:System.Reflection.PropertyInfo" />, if the current <see cref="T:System.Type" /> does not have properties, or if none of the properties match the binding constraints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-549">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-549">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-550"><xref:System.Type.GetProperties%2A?displayProperty=nameWithType> Метод ищет свойства текущего <xref:System.Type>, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-550">The <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method searches for the properties of the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-551">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="Overload:System.Type.GetProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-551">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetProperty" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-552">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-552">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-553"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> Метод возвращает указанное свойство текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-553">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method gets a specific property of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-554">Объект типа <see cref="T:System.String" />, содержащий имя искомого открытого свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-554">The <see cref="T:System.String" /> containing the name of the public property to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-555">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetProperty(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-555">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-556">Объект <see cref="T:System.Reflection.PropertyInfo" />, представляющий открытое свойство с заданным именем, если такое свойство есть, и <see langword="null" />, если такого свойства нет.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-556">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the public property with the specified name, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-557">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-557">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-558"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> Метод выполняет поиск открытого свойства с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="ce31b-558">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the public property with the specified name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-559">Объект типа <see cref="T:System.String" />, содержащий имя искомого свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-559">The <see cref="T:System.String" /> containing the name of the property to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-560">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-560">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-561">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-561">-or-</span>
          </span>
          <span data-ttu-id="ce31b-562">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-562">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-563">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-563">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-564">Объект <see cref="T:System.Reflection.PropertyInfo" />, предоставляющий свойство, которое соответствует указанным требованиям, если такое свойство найдено; в противном случае возвращается <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-564">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the property that matches the specified requirements, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-565">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-565">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-566"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> Метод выполняет поиск заданного свойства, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-566">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the specified property, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, returnType As Type) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, Type ^ returnType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-567">Объект типа <see cref="T:System.String" />, содержащий имя искомого открытого свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-567">The <see cref="T:System.String" /> containing the name of the public property to get.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="ce31b-568">Тип возвращаемого значения свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-568">The return type of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-569">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetProperty(System.String,System.Type)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-569">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Type)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-570">Объект <see cref="T:System.Reflection.PropertyInfo" />, представляющий открытое свойство с заданным именем, если такое свойство есть, и <see langword="null" />, если такого свойства нет.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-570">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the public property with the specified name, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-571">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-571">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-572"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> Метод выполняет поиск открытого свойства с заданным именем и типом возвращаемого значения.</span><span class="sxs-lookup"><span data-stu-id="ce31b-572">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the public property with the specified name and return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, types As Type()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, cli::array &lt;Type ^&gt; ^ types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-573">Объект типа <see cref="T:System.String" />, содержащий имя искомого открытого свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-573">The <see cref="T:System.String" /> containing the name of the public property to get.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="ce31b-574">Массив объектов <see cref="T:System.Type" />, предоставляющий число, порядок и тип параметров искомого индексированного свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-574">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the indexed property to get.</span>
          </span>
          <span data-ttu-id="ce31b-575">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-575">-or-</span>
          </span>
          <span data-ttu-id="ce31b-576">Пустой массив объектов типа <see cref="T:System.Type" /> (то есть Type[] types = new Type[0]), если требуется получить неиндексированное свойство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-576">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-577">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetProperty(System.String,System.Type[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-577">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Type[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-578">Объект <see cref="T:System.Reflection.PropertyInfo" />, представляющий открытое свойство, параметры которого соответствуют указанным условиям, если такое свойство существует, и <see langword="null" />, если такого свойства нет.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-578">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the public property whose parameters match the specified argument types, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-579">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-579">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-580"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> Метод ищет указанное открытое свойство, параметры которого соответствуют указанным типам аргументов...</span><span class="sxs-lookup"><span data-stu-id="ce31b-580">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the specified public property whose parameters match the specified argument types..</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, class System.Type returnType, class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, returnType As Type, types As Type()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-581">Объект типа <see cref="T:System.String" />, содержащий имя искомого открытого свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-581">The <see cref="T:System.String" /> containing the name of the public property to get.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="ce31b-582">Тип возвращаемого значения свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-582">The return type of the property.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="ce31b-583">Массив объектов <see cref="T:System.Type" />, предоставляющий число, порядок и тип параметров искомого индексированного свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-583">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the indexed property to get.</span>
          </span>
          <span data-ttu-id="ce31b-584">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-584">-or-</span>
          </span>
          <span data-ttu-id="ce31b-585">Пустой массив объектов типа <see cref="T:System.Type" /> (то есть Type[] types = new Type[0]), если требуется получить неиндексированное свойство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-585">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-586">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-586">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-587">Объект <see cref="T:System.Reflection.PropertyInfo" />, представляющий открытое свойство, параметры которого соответствуют указанным условиям, если такое свойство существует, и <see langword="null" />, если такого свойства нет.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-587">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the public property whose parameters match the specified argument types, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-588">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-588">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-589"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> Метод ищет указанное открытое свойство, параметры которого соответствуют указанным типам аргументов.</span><span class="sxs-lookup"><span data-stu-id="ce31b-589">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the specified public property whose parameters match the specified argument types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, returnType As Type, types As Type(), modifiers As ParameterModifier()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-590">Объект типа <see cref="T:System.String" />, содержащий имя искомого открытого свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-590">The <see cref="T:System.String" /> containing the name of the public property to get.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="ce31b-591">Тип возвращаемого значения свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-591">The return type of the property.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="ce31b-592">Массив объектов <see cref="T:System.Type" />, предоставляющий число, порядок и тип параметров искомого индексированного свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-592">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the indexed property to get.</span>
          </span>
          <span data-ttu-id="ce31b-593">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-593">-or-</span>
          </span>
          <span data-ttu-id="ce31b-594">Пустой массив объектов типа <see cref="T:System.Type" /> (то есть Type[] types = new Type[0]), если требуется получить неиндексированное свойство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-594">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ce31b-595">Массив объектов <see cref="T:System.Reflection.ParameterModifier" />, представляющих атрибуты, связанные с соответствующим элементом в массиве <c>types</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-595">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <c>types</c> array.</span>
          </span>
          <span data-ttu-id="ce31b-596">Связыватель по умолчанию не обрабатывает этот параметр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-596">The default binder does not process this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-597">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-597">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-598">Объект <see cref="T:System.Reflection.PropertyInfo" />, представляющий открытое свойство, соответствующее указанным требованиям, если такое свойство существует, и <see langword="null" />, если такого свойства нет.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-598">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the public property that matches the specified requirements, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-599">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-599">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-600"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> Метод ищет указанное открытое свойство, параметры которого соответствуют указанным типам аргументов и модификаторам.</span><span class="sxs-lookup"><span data-stu-id="ce31b-600">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the specified public property whose parameters match the specified argument types and modifiers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-601">Объект типа <see cref="T:System.String" />, содержащий имя искомого свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-601">The <see cref="T:System.String" /> containing the name of the property to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="ce31b-602">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-602">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-603">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-603">-or-</span>
          </span>
          <span data-ttu-id="ce31b-604">Нуль, чтобы было возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-604">Zero, to return <see langword="null" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="ce31b-605">Объект <see cref="T:System.Reflection.Binder" />, определяющий набор свойств и разрешающий привязку, что может быть сопряжено с выбором перегружаемых методов, приведением типов аргументов и вызовом члена с помощью отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-605">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span>
          </span>
          <span data-ttu-id="ce31b-606">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-606">-or-</span>
          </span>
          <span data-ttu-id="ce31b-607">Значение <see langword="null" />, чтобы использовать свойство <see cref="P:System.Type.DefaultBinder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-607">
              <see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="ce31b-608">Тип возвращаемого значения свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-608">The return type of the property.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="ce31b-609">Массив объектов <see cref="T:System.Type" />, предоставляющий число, порядок и тип параметров искомого индексированного свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-609">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the indexed property to get.</span>
          </span>
          <span data-ttu-id="ce31b-610">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-610">-or-</span>
          </span>
          <span data-ttu-id="ce31b-611">Пустой массив объектов типа <see cref="T:System.Type" /> (то есть Type[] types = new Type[0]), если требуется получить неиндексированное свойство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-611">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ce31b-612">Массив объектов <see cref="T:System.Reflection.ParameterModifier" />, представляющих атрибуты, связанные с соответствующим элементом в массиве <c>types</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-612">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <c>types</c> array.</span>
          </span>
          <span data-ttu-id="ce31b-613">Связыватель по умолчанию не обрабатывает этот параметр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-613">The default binder does not process this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-614">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-614">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-615">Объект <see cref="T:System.Reflection.PropertyInfo" />, предоставляющий свойство, которое соответствует указанным требованиям, если такое свойство найдено; в противном случае возвращается <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-615">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the property that matches the specified requirements, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-616">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-616">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-617"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType> Метод ищет указанное свойство, параметры которого соответствуют указанным типам аргументов и модификаторам, используя заданные ограничения привязки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-617">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the specified property whose parameters match the specified argument types and modifiers, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-618">Предоставляет COM-объекты с независящим от версии доступом к методу <see cref="M:System.Type.GetType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-618">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-619">Текущий контекст <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-619">The current <see cref="T:System.Type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-620">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-620">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-621"><xref:System.Type.GetType%2A?displayProperty=nameWithType> Метод возвращает текущий <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-621">The <xref:System.Type.GetType%2A?displayProperty=nameWithType> method gets the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="ce31b-622">Возвращаемые сведения о типе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-622">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="ce31b-623">Идентификатор языкового стандарта для сведений о типе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-623">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="ce31b-624">Получает указатель на объект с запрошенными сведениями о типе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-624">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-625">Возвращает сведения о типе объекта, которые затем могут использоваться для получения сведений о типе интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-625">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-626">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-626">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="ce31b-627">Дополнительные сведения о `IDispatch::GetTypeInfo`, см. в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="ce31b-627">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="ce31b-628">Указатель, по которому записывается число предоставляемых объектом интерфейсов, предназначенных для получения сведений о типе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-628">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-629">Возвращает количество предоставляемых объектом интерфейсов для доступа к сведениям о типе (0 или 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-629">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-630">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-630">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="ce31b-631">Дополнительные сведения о `IDispatch::GetTypeInfoCount`, см. в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="ce31b-631">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GUID">
      <MemberSignature Language="C#" Value="public Guid GUID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid GUID" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.GUID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GUID As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid GUID { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-632">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.GUID" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-632">Provides COM objects with version-independent access to the <see cref="P:System.Type.GUID" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-633">Идентификатор GUID, связанный с объектом <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-633">The GUID associated with the <see cref="T:System.Type" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-634">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-634">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-635"><xref:System.Type.GUID%2A?displayProperty=nameWithType> Свойство возвращает идентификатор GUID, связанный с <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-635">The <xref:System.Type.GUID%2A?displayProperty=nameWithType> property gets the GUID associated with the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasElementType">
      <MemberSignature Language="C#" Value="public bool HasElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasElementType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.HasElementType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasElementType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasElementType { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-636">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.HasElementType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-636">Provides COM objects with version-independent access to the <see cref="P:System.Type.HasElementType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-637">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> является массивом, указателем или параметром, переданным по ссылке; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-637">
              <see langword="true" /> if the <see cref="T:System.Type" /> is an array, a pointer, or is passed by reference; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-638">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-638">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-639">Свойство <xref:System.Type.HasElementType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-639">The <xref:System.Type.HasElementType%2A?displayProperty=nameWithType> property</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="ce31b-640">Идентифицирует член.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-640">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="ce31b-641">Зарезервировано для будущего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-641">Reserved for future use.</span>
          </span>
          <span data-ttu-id="ce31b-642">Должно быть равным IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-642">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="ce31b-643">Контекст языкового стандарта, в котором следует интерпретировать аргументы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-643">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="ce31b-644">Флаги, описывающие контекст вызова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-644">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="ce31b-645">Указатель на структуру, содержащую массив аргументов, массив DISPID для именованных аргументов, а также счетчики количества элементов в массивах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-645">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="ce31b-646">Указатель, по которому будет сохранен результат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-646">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="ce31b-647">Указатель на структуру, содержащую сведения об исключении.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-647">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="ce31b-648">Индекс первого аргумента, вызвавшего ошибку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-648">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-649">Предоставляет доступ к открытым свойствам и методам объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-649">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-650">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-650">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="ce31b-651">Дополнительные сведения о `IDispatch::Invoke`, см. в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="ce31b-651">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeMember">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-652">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="Overload:System.Type.InvokeMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-652">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.InvokeMember" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-653">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-653">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-654"><xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> Метод вызывает определенный член текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-654">The <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method invokes a specific member of the current <xref:System.Type>.</span></span>  
  
 <span data-ttu-id="ce31b-655">.</span><span class="sxs-lookup"><span data-stu-id="ce31b-655">.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-656">Объект типа <see cref="T:System.String" />, содержащий имя вызываемого члена: конструктора, метода, свойства или поля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-656">The <see cref="T:System.String" /> containing the name of the constructor, method, property, or field member to invoke.</span>
          </span>
          <span data-ttu-id="ce31b-657">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-657">-or-</span>
          </span>
          <span data-ttu-id="ce31b-658">Пустая строка ("") — в этом случае будет вызван член по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-658">An empty string ("") to invoke the default member.</span>
          </span>
          <span data-ttu-id="ce31b-659">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-659">-or-</span>
          </span>
          <span data-ttu-id="ce31b-660">Для элементов IDispatch — строка, представляющая DispID, например "[DispID=3]".</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-660">For IDispatch members, a string representing the DispID, for example "[DispID=3]".</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="ce31b-661">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-661">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-662">Тип доступа может быть обозначен одним из флагов <see langword="BindingFlags" />, например <see langword="Public" />, <see langword="NonPublic" />, <see langword="Private" />, <see langword="InvokeMethod" />, <see langword="GetField" /> и т.д.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-662">The access can be one of the <see langword="BindingFlags" /> such as <see langword="Public" />, <see langword="NonPublic" />, <see langword="Private" />, <see langword="InvokeMethod" />, <see langword="GetField" />, and so on.</span>
          </span>
          <span data-ttu-id="ce31b-663">Тип поиска указывать необязательно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-663">The type of lookup need not be specified.</span>
          </span>
          <span data-ttu-id="ce31b-664">Если тип поиска не указан, используются флаги <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-664">If the type of lookup is omitted, <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" /> will apply.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="ce31b-665">Объект <see cref="T:System.Reflection.Binder" />, определяющий набор свойств и разрешающий привязку, что может быть сопряжено с выбором перегружаемых методов, приведением типов аргументов и вызовом члена с помощью отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-665">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span>
          </span>
          <span data-ttu-id="ce31b-666">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-666">-or-</span>
          </span>
          <span data-ttu-id="ce31b-667">Значение <see langword="null" />, чтобы использовать свойство <see cref="P:System.Type.DefaultBinder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-667">
              <see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="ce31b-668">
            <see cref="T:System.Object" />, для которого будет вызван указанный элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-668">The <see cref="T:System.Object" /> on which to invoke the specified member.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ce31b-669">Массив с аргументами, передаваемыми вызываемому члену.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-669">An array containing the arguments to pass to the member to invoke.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-670">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-670">Provides COM objects with version-independent access to the <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-671">Объект <see cref="T:System.Object" />, представляющий значение, возвращаемое указанным членом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-671">An <see cref="T:System.Object" /> representing the return value of the invoked member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-672">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-672">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-673"><xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> Метод вызывает указанный член, с помощью указанным ограничениям привязки и соответствующих указанному списку аргументов.</span><span class="sxs-lookup"><span data-stu-id="ce31b-673">The <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method invokes the specified member, using the specified binding constraints and matching the specified argument list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-674">Объект типа <see cref="T:System.String" />, содержащий имя вызываемого члена: конструктора, метода, свойства или поля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-674">The <see cref="T:System.String" /> containing the name of the constructor, method, property, or field member to invoke.</span>
          </span>
          <span data-ttu-id="ce31b-675">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-675">-or-</span>
          </span>
          <span data-ttu-id="ce31b-676">Пустая строка ("") — в этом случае будет вызван член по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-676">An empty string ("") to invoke the default member.</span>
          </span>
          <span data-ttu-id="ce31b-677">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-677">-or-</span>
          </span>
          <span data-ttu-id="ce31b-678">Для элементов IDispatch — строка, представляющая DispID, например "[DispID=3]".</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-678">For IDispatch members, a string representing the DispID, for example "[DispID=3]".</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="ce31b-679">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-679">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-680">Тип доступа может быть обозначен одним из флагов <see langword="BindingFlags" />, например <see langword="Public" />, <see langword="NonPublic" />, <see langword="Private" />, <see langword="InvokeMethod" />, <see langword="GetField" /> и т.д.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-680">The access can be one of the <see langword="BindingFlags" /> such as <see langword="Public" />, <see langword="NonPublic" />, <see langword="Private" />, <see langword="InvokeMethod" />, <see langword="GetField" />, and so on.</span>
          </span>
          <span data-ttu-id="ce31b-681">Тип поиска указывать необязательно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-681">The type of lookup need not be specified.</span>
          </span>
          <span data-ttu-id="ce31b-682">Если тип поиска не указан, используются флаги <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-682">If the type of lookup is omitted, <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" /> will apply.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="ce31b-683">Объект <see cref="T:System.Reflection.Binder" />, определяющий набор свойств и разрешающий привязку, что может быть сопряжено с выбором перегружаемых методов, приведением типов аргументов и вызовом члена с помощью отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-683">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span>
          </span>
          <span data-ttu-id="ce31b-684">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-684">-or-</span>
          </span>
          <span data-ttu-id="ce31b-685">Значение <see langword="null" />, чтобы использовать свойство <see cref="P:System.Type.DefaultBinder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-685">
              <see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="ce31b-686">
            <see cref="T:System.Object" />, для которого будет вызван указанный элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-686">The <see cref="T:System.Object" /> on which to invoke the specified member.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ce31b-687">Массив с аргументами, передаваемыми вызываемому члену.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-687">An array containing the arguments to pass to the member to invoke.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="ce31b-688">Объект <see cref="T:System.Globalization.CultureInfo" />, представляющий используемый языковой стандарт глобализации. Он может понадобиться для выполнения преобразований, зависящих от языкового стандарта, например приведения числа в строковом формате к типу Double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-688">The <see cref="T:System.Globalization.CultureInfo" /> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.</span>
          </span>
          <span data-ttu-id="ce31b-689">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-689">-or-</span>
          </span>
          <span data-ttu-id="ce31b-690">
            <see langword="null" />, для использования объекта <see cref="T:System.Globalization.CultureInfo" /> текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-690">
              <see langword="null" /> to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-691">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-691">Provides COM objects with version-independent access to the <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-692">Объект <see cref="T:System.Object" />, представляющий значение, возвращаемое указанным членом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-692">An <see cref="T:System.Object" /> representing the return value of the invoked member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-693">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-693">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-694"><xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> Метод вызывает указанный член, с использованием заданных ограничений привязки и указанному списку аргументов языку и региональным параметрам.</span><span class="sxs-lookup"><span data-stu-id="ce31b-694">The <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method invokes the specified member, using the specified binding constraints and matching the specified argument list and culture.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce31b-695">Объект типа <see cref="T:System.String" />, содержащий имя вызываемого члена: конструктора, метода, свойства или поля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-695">The <see cref="T:System.String" /> containing the name of the constructor, method, property, or field member to invoke.</span>
          </span>
          <span data-ttu-id="ce31b-696">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-696">-or-</span>
          </span>
          <span data-ttu-id="ce31b-697">Пустая строка ("") — в этом случае будет вызван член по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-697">An empty string ("") to invoke the default member.</span>
          </span>
          <span data-ttu-id="ce31b-698">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-698">-or-</span>
          </span>
          <span data-ttu-id="ce31b-699">Для элементов IDispatch — строка, представляющая DispID, например "[DispID=3]".</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-699">For IDispatch members, a string representing the DispID, for example "[DispID=3]".</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="ce31b-700">Битовая маска, составленная из одного или нескольких объектов <see cref="T:System.Reflection.BindingFlags" /> и указывающая, как ведется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-700">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span>
          </span>
          <span data-ttu-id="ce31b-701">Тип доступа может быть обозначен одним из флагов <see langword="BindingFlags" />, например <see langword="Public" />, <see langword="NonPublic" />, <see langword="Private" />, <see langword="InvokeMethod" />, <see langword="GetField" /> и т.д.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-701">The access can be one of the <see langword="BindingFlags" /> such as <see langword="Public" />, <see langword="NonPublic" />, <see langword="Private" />, <see langword="InvokeMethod" />, <see langword="GetField" />, and so on.</span>
          </span>
          <span data-ttu-id="ce31b-702">Тип поиска указывать необязательно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-702">The type of lookup need not be specified.</span>
          </span>
          <span data-ttu-id="ce31b-703">Если тип поиска не указан, используются флаги <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-703">If the type of lookup is omitted, <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" /> will apply.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="ce31b-704">Объект <see cref="T:System.Reflection.Binder" />, определяющий набор свойств и разрешающий привязку, что может быть сопряжено с выбором перегружаемых методов, приведением типов аргументов и вызовом члена с помощью отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-704">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span>
          </span>
          <span data-ttu-id="ce31b-705">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-705">-or-</span>
          </span>
          <span data-ttu-id="ce31b-706">Значение <see langword="null" />, чтобы использовать свойство <see cref="P:System.Type.DefaultBinder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-706">
              <see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="ce31b-707">
            <see cref="T:System.Object" />, для которого будет вызван указанный элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-707">The <see cref="T:System.Object" /> on which to invoke the specified member.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ce31b-708">Массив с аргументами, передаваемыми вызываемому члену.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-708">An array containing the arguments to pass to the member to invoke.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ce31b-709">Массив объектов <see cref="T:System.Reflection.ParameterModifier" />, представляющих атрибуты, связанные с соответствующим элементом в массиве <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-709">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <c>args</c> array.</span>
          </span>
          <span data-ttu-id="ce31b-710">Атрибуты, связанные с параметром, хранятся в сигнатуре члена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-710">A parameter's associated attributes are stored in the member's signature.</span>
          </span>
          <span data-ttu-id="ce31b-711">Связыватель по умолчанию не обрабатывает этот параметр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-711">The default binder does not process this parameter.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="ce31b-712">Объект <see cref="T:System.Globalization.CultureInfo" />, представляющий используемый языковой стандарт глобализации. Он может понадобиться для выполнения преобразований, зависящих от языкового стандарта, например приведения числа в строковом формате к типу Double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-712">The <see cref="T:System.Globalization.CultureInfo" /> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.</span>
          </span>
          <span data-ttu-id="ce31b-713">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-713">-or-</span>
          </span>
          <span data-ttu-id="ce31b-714">
            <see langword="null" />, для использования объекта <see cref="T:System.Globalization.CultureInfo" /> текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-714">
              <see langword="null" /> to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
        </param>
        <param name="namedParameters">
          <span data-ttu-id="ce31b-715">Массив, содержащий имена параметров, в которые передаются значения элементов массива <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-715">An array containing the names of the parameters to which the values in the <c>args</c> array are passed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-716">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-716">Provides COM objects with version-independent access to the <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-717">Объект <see cref="T:System.Object" />, представляющий значение, возвращаемое указанным членом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-717">An <see cref="T:System.Object" /> representing the return value of the invoked member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-718">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-718">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-719"><xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> Метод вызывает указанный член, с использованием заданных ограничений привязки и указанному списку аргументов, модификаторов, языку и региональным параметрам.</span><span class="sxs-lookup"><span data-stu-id="ce31b-719">The <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method invokes the specified member, using the specified binding constraints and matching the specified argument list, modifiers, and culture.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAbstract">
      <MemberSignature Language="C#" Value="public bool IsAbstract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAbstract" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsAbstract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAbstract As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAbstract { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-720">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsAbstract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-720">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsAbstract" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-721">Значение <see langword="true" />, если класс <see cref="T:System.Type" /> является абстрактным; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-721">
              <see langword="true" /> if the <see cref="T:System.Type" /> is abstract; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-722">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-722">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-723"><xref:System.Type.IsAbstract%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> является абстрактным и должен быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="ce31b-723">The <xref:System.Type.IsAbstract%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is abstract and must be overridden.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnsiClass">
      <MemberSignature Language="C#" Value="public bool IsAnsiClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnsiClass" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsAnsiClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnsiClass As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnsiClass { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-724">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsAnsiClass" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-724">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsAnsiClass" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-725">Значение <see langword="true" />, если для данного объекта <see langword="AnsiClass" /> выбран атрибут формата строки <see cref="T:System.Type" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-725">
              <see langword="true" /> if the string format attribute <see langword="AnsiClass" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-726">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-726">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-727"><xref:System.Type.IsAnsiClass%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли атрибут формата строки `AnsiClass` выбран для <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-727">The <xref:System.Type.IsAnsiClass%2A?displayProperty=nameWithType> property gets a value indicating whether the string format attribute `AnsiClass` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-728">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-728">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsArray" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-729">Значение <see langword="true" />, если <see cref="T:System.Type" /> является массивом; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-729">
              <see langword="true" /> if the <see cref="T:System.Type" /> is an array; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-730">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-730">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-731"><xref:System.Type.IsArray%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> является массивом.</span><span class="sxs-lookup"><span data-stu-id="ce31b-731">The <xref:System.Type.IsArray%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is an array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssignableFrom">
      <MemberSignature Language="C#" Value="public bool IsAssignableFrom (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAssignableFrom(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAssignableFrom (c As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAssignableFrom(Type ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="ce31b-732">Объект <see cref="T:System.Type" />, с которым сравнивается текущий объект <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-732">The <see cref="T:System.Type" /> to compare with the current <see cref="T:System.Type" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-733">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.IsAssignableFrom(System.Type)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-733">Provides COM objects with version-independent access to the <see cref="M:System.Type.IsAssignableFrom(System.Type)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-734">Значение <see langword="true" />, если параметр <paramref name="c" /> и текущий объект <see cref="T:System.Type" /> представляют один и тот же тип, если текущий объект <see cref="T:System.Type" /> входит в иерархию наследования параметра <paramref name="c" />, если текущий объект <see cref="T:System.Type" /> является интерфейсом, который реализуется параметром <paramref name="c" />, или если параметр <paramref name="c" /> является параметром универсального типа и текущий объект <see cref="T:System.Type" /> представляет одно из ограничений параметра <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-734">
              <see langword="true" /> if <paramref name="c" /> and the current <see cref="T:System.Type" /> represent the same type, or if the current <see cref="T:System.Type" /> is in the inheritance hierarchy of <paramref name="c" />, or if the current <see cref="T:System.Type" /> is an interface that <paramref name="c" /> implements, or if <paramref name="c" /> is a generic type parameter and the current <see cref="T:System.Type" /> represents one of the constraints of <paramref name="c" />.</span>
          </span>
          <span data-ttu-id="ce31b-735">Значение <see langword="false" />, если не выполняется ни одно из этих условий или значение параметра <paramref name="c" /> равно <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-735">
              <see langword="false" /> if none of these conditions are the case, or if <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-736">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-736">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutoClass">
      <MemberSignature Language="C#" Value="public bool IsAutoClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutoClass" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsAutoClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAutoClass As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAutoClass { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-737">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsAutoClass" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-737">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsAutoClass" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-738">Значение <see langword="true" />, если для данного объекта <see langword="AutoClass" /> выбран атрибут формата строки <see cref="T:System.Type" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-738">
              <see langword="true" /> if the string format attribute <see langword="AutoClass" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-739">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-739">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-740"><xref:System.Type.IsAutoClass%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли атрибут формата строки `AutoClass` выбран для <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-740">The <xref:System.Type.IsAutoClass%2A?displayProperty=nameWithType> property gets a value indicating whether the string format attribute `AutoClass` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutoLayout">
      <MemberSignature Language="C#" Value="public bool IsAutoLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutoLayout" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsAutoLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAutoLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAutoLayout { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-741">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsAutoLayout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-741">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsAutoLayout" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-742">Значение <see langword="true" />, если для объекта <see cref="T:System.Type" /> выбран атрибут размещения класса <see langword="AutoLayout" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-742">
              <see langword="true" /> if the class layout attribute <see langword="AutoLayout" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-743">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-743">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-744"><xref:System.Type.IsAutoLayout%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли атрибут размещения класса `AutoLayout` выбран для <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-744">The <xref:System.Type.IsAutoLayout%2A?displayProperty=nameWithType> property gets a value indicating whether the class layout attribute `AutoLayout` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByRef">
      <MemberSignature Language="C#" Value="public bool IsByRef { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByRef" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsByRef" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsByRef As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsByRef { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-745">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsByRef" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-745">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsByRef" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-746">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> передан по ссылке; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-746">
              <see langword="true" /> if the <see cref="T:System.Type" /> is passed by reference; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-747">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-747">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-748"><xref:System.Type.IsByRef%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> передается по ссылке.</span><span class="sxs-lookup"><span data-stu-id="ce31b-748">The <xref:System.Type.IsByRef%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is passed by reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClass">
      <MemberSignature Language="C#" Value="public bool IsClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClass" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClass As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClass { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-749">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsClass" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-749">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsClass" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-750">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> является классом; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-750">
              <see langword="true" /> if the <see cref="T:System.Type" /> is a class; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-751">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-751">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-752"><xref:System.Type.IsClass%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> класса; то есть, не является типом значения или интерфейса.</span><span class="sxs-lookup"><span data-stu-id="ce31b-752">The <xref:System.Type.IsClass%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is a class; that is, not a value type or interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCOMObject">
      <MemberSignature Language="C#" Value="public bool IsCOMObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCOMObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsCOMObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCOMObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCOMObject { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-753">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsCOMObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-753">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsCOMObject" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-754">Значение <see langword="true" />, если <see cref="T:System.Type" /> является COM-объектом, в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-754">
              <see langword="true" /> if the <see cref="T:System.Type" /> is a COM object; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-755">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-755">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-756"><xref:System.Type.IsCOMObject%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> COM-объектом.</span><span class="sxs-lookup"><span data-stu-id="ce31b-756">The <xref:System.Type.IsCOMObject%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is a COM object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContextful">
      <MemberSignature Language="C#" Value="public bool IsContextful { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContextful" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsContextful" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsContextful As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsContextful { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-757">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsContextful" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-757">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsContextful" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-758">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> может быть помещен в контекст; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-758">
              <see langword="true" /> if the <see cref="T:System.Type" /> can be hosted in a context; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-759">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-759">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-760"><xref:System.Type.IsContextful%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> может быть помещен в контекст.</span><span class="sxs-lookup"><span data-stu-id="ce31b-760">The <xref:System.Type.IsContextful%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> can be hosted in a context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="ce31b-761">Объект <see langword="Type" />, к которому применяются настраиваемые атрибуты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-761">The <see langword="Type" /> object to which the custom attributes are applied.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="ce31b-762">Указывает, следует ли выполнять поиск атрибутов в цепочке наследования этого члена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-762">Specifies whether to search this member's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-763">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-763">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-764">Значение <see langword="true" />, если к этому элементу применяется один или несколько экземпляров параметра <paramref name="attributeType" />, в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-764">
              <see langword="true" /> if one or more instance of <paramref name="attributeType" /> is applied to this member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-765">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-765">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-766"><xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=nameWithType> Метод указывает, является ли один или несколько экземпляров `attributeType` применяется к этому члену.</span><span class="sxs-lookup"><span data-stu-id="ce31b-766">The <xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=nameWithType> method indicates whether one or more instance of `attributeType` is applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnum">
      <MemberSignature Language="C#" Value="public bool IsEnum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnum" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsEnum" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEnum As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnum { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-767">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsEnum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-767">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsEnum" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-768">Значение <see langword="true" />, если текущий объект <see cref="T:System.Type" /> представляет перечисление; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-768">
              <see langword="true" /> if the current <see cref="T:System.Type" /> represents an enumeration; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-769">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-769">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-770"><xref:System.Type.IsEnum%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли текущий <xref:System.Type> представляет собой перечисление.</span><span class="sxs-lookup"><span data-stu-id="ce31b-770">The <xref:System.Type.IsEnum%2A?displayProperty=nameWithType> property gets a value indicating whether the current <xref:System.Type> represents an enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExplicitLayout">
      <MemberSignature Language="C#" Value="public bool IsExplicitLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExplicitLayout" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsExplicitLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExplicitLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExplicitLayout { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-771">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsExplicitLayout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-771">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsExplicitLayout" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-772">Значение <see langword="true" />, если для объекта <see cref="T:System.Type" /> выбран атрибут размещения класса <see langword="ExplicitLayout" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-772">
              <see langword="true" /> if the class layout attribute <see langword="ExplicitLayout" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-773">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-773">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-774"><xref:System.Type.IsExplicitLayout%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли атрибут размещения класса `ExplicitLayout` выбран для <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-774">The <xref:System.Type.IsExplicitLayout%2A?displayProperty=nameWithType> property gets a value indicating whether the class layout attribute `ExplicitLayout` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImport">
      <MemberSignature Language="C#" Value="public bool IsImport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImport" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsImport" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImport As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImport { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-775">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsImport" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-775">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsImport" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-776">Значение <see langword="true" />, если у <see cref="T:System.Type" /> есть атрибут <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-776">
              <see langword="true" /> if the <see cref="T:System.Type" /> has <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-777">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-777">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-778"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> имеет <xref:System.Runtime.InteropServices.ComImportAttribute>, указывающее на то, что объект был импортирован из библиотеки типов COM.</span><span class="sxs-lookup"><span data-stu-id="ce31b-778">The <xref:System.Type.IsImport%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> has <xref:System.Runtime.InteropServices.ComImportAttribute>, indicating that it was imported from a COM type library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstanceOfType">
      <MemberSignature Language="C#" Value="public bool IsInstanceOfType (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInstanceOfType(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInstanceOfType (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInstanceOfType(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="ce31b-779">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-779">The object to compare with the current <see cref="T:System.Type" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-780">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.IsInstanceOfType(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-780">Provides COM objects with version-independent access to the <see cref="M:System.Type.IsInstanceOfType(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-781">Значение <see langword="true" />, если текущий объект <see cref="T:System.Type" /> входит в иерархию наследования объекта, представленного параметром <paramref name="o" /> или если текущий объект <see cref="T:System.Type" /> является интерфейсом, поддерживаемым параметром <paramref name="o" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-781">
              <see langword="true" /> if the current <see cref="T:System.Type" /> is in the inheritance hierarchy of the object represented by <paramref name="o" />, or if the current <see cref="T:System.Type" /> is an interface that <paramref name="o" /> supports.</span>
          </span>
          <span data-ttu-id="ce31b-782">Значение <see langword="false" />, если не выполняется ни одно из перечисленных условий, или параметр <paramref name="o" /> имеет значение <see langword="null" />, или текущий объект <see cref="T:System.Type" /> является открытым универсальным типом (то есть свойство <see cref="P:System.Type.ContainsGenericParameters" /> возвращает значение <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-782">
              <see langword="false" /> if neither of these conditions is the case, or if <paramref name="o" /> is <see langword="null" />, or if the current <see cref="T:System.Type" /> is an open generic type (that is, <see cref="P:System.Type.ContainsGenericParameters" /> returns <see langword="true" />).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-783">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-783">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-784"><xref:System.Type.IsInstanceOfType%2A?displayProperty=nameWithType> Метод определяет, является ли указанный объект экземпляром текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-784">The <xref:System.Type.IsInstanceOfType%2A?displayProperty=nameWithType> method determines whether the specified object is an instance of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInterface">
      <MemberSignature Language="C#" Value="public bool IsInterface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInterface" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsInterface" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInterface As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInterface { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-785">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsInterface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-785">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsInterface" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-786">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> является интерфейсом; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-786">
              <see langword="true" /> if the <see cref="T:System.Type" /> is an interface; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-787">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-787">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-788"><xref:System.Type.IsInterface%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> является интерфейсом; иными словами, а не классом или типом значения.</span><span class="sxs-lookup"><span data-stu-id="ce31b-788">The <xref:System.Type.IsInterface%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is an interface; that is, not a class or a value type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLayoutSequential">
      <MemberSignature Language="C#" Value="public bool IsLayoutSequential { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLayoutSequential" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsLayoutSequential" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLayoutSequential As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLayoutSequential { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-789">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsLayoutSequential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-789">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsLayoutSequential" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-790">Значение <see langword="true" />, если для объекта <see cref="T:System.Type" /> выбран атрибут размещения класса <see langword="SequentialLayout" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-790">
              <see langword="true" /> if the class layout attribute <see langword="SequentialLayout" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-791">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-791">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-792"><xref:System.Type.IsLayoutSequential%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли атрибут размещения класса `SequentialLayout` выбран для <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-792">The <xref:System.Type.IsLayoutSequential%2A?displayProperty=nameWithType> property gets a value indicating whether the class layout attribute `SequentialLayout` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarshalByRef">
      <MemberSignature Language="C#" Value="public bool IsMarshalByRef { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarshalByRef" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsMarshalByRef" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarshalByRef As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarshalByRef { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-793">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsMarshalByRef" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-793">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsMarshalByRef" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-794">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> маршалируется по ссылке; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-794">
              <see langword="true" /> if the <see cref="T:System.Type" /> is marshaled by reference; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-795">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-795">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-796"><xref:System.Type.IsMarshalByRef%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли тип маршалируется по ссылке.</span><span class="sxs-lookup"><span data-stu-id="ce31b-796">The <xref:System.Type.IsMarshalByRef%2A?displayProperty=nameWithType> property gets a value indicating whether the Type is marshaled by reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedAssembly">
      <MemberSignature Language="C#" Value="public bool IsNestedAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedAssembly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-797">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsNestedAssembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-797">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-798">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> является вложенным и видимым только в своей сборке; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-798">
              <see langword="true" /> if the <see cref="T:System.Type" /> is nested and visible only within its own assembly; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-799">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-799">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-800"><xref:System.Type.IsNestedAssembly%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> является вложенным и видимым только в своей сборке.</span><span class="sxs-lookup"><span data-stu-id="ce31b-800">The <xref:System.Type.IsNestedAssembly%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedFamANDAssem">
      <MemberSignature Language="C#" Value="public bool IsNestedFamANDAssem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedFamANDAssem" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedFamANDAssem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedFamANDAssem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedFamANDAssem { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-801">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsNestedFamANDAssem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-801">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedFamANDAssem" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-802">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> является вложенным и видимым только классам, принадлежащим одновременно к семейству и сборке этого объекта; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-802">
              <see langword="true" /> if the <see cref="T:System.Type" /> is nested and visible only to classes that belong to both its own family and its own assembly; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-803">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-803">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-804"><xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> является вложенным и видимым только классам, принадлежащим его семейству и сборке.</span><span class="sxs-lookup"><span data-stu-id="ce31b-804">The <xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to both its own family and its own assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedFamily">
      <MemberSignature Language="C#" Value="public bool IsNestedFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedFamily" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedFamily As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedFamily { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-805">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsNestedFamily" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-805">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedFamily" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-806">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> является вложенным и видимым только внутри собственного семейства; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-806">
              <see langword="true" /> if the <see cref="T:System.Type" /> is nested and visible only within its own family; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-807">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-807">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-808"><xref:System.Type.IsNestedFamily%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> является вложенным и видимым только внутри собственного семейства.</span><span class="sxs-lookup"><span data-stu-id="ce31b-808">The <xref:System.Type.IsNestedFamily%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own family.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedFamORAssem">
      <MemberSignature Language="C#" Value="public bool IsNestedFamORAssem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedFamORAssem" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedFamORAssem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedFamORAssem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedFamORAssem { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-809">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsNestedFamORAssem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-809">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedFamORAssem" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-810">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> является вложенным и видимым только классам, принадлежащим его семейству или его сборке; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-810">
              <see langword="true" /> if the <see cref="T:System.Type" /> is nested and visible only to classes that belong to its own family or to its own assembly; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-811">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-811">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-812"><xref:System.Type.IsNestedFamORAssem%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> является вложенным и видимым только для классов, принадлежащих либо его семейству или его сборке.</span><span class="sxs-lookup"><span data-stu-id="ce31b-812">The <xref:System.Type.IsNestedFamORAssem%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to either its own family or to its own assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedPrivate">
      <MemberSignature Language="C#" Value="public bool IsNestedPrivate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedPrivate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedPrivate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedPrivate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedPrivate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-813">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsNestedPrivate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-813">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedPrivate" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-814">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> является вложенным и объявленным как закрытый; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-814">
              <see langword="true" /> if the <see cref="T:System.Type" /> is nested and declared private; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-815">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-815">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-816"><xref:System.Type.IsNestedPrivate%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> является вложенным и объявленным как закрытый.</span><span class="sxs-lookup"><span data-stu-id="ce31b-816">The <xref:System.Type.IsNestedPrivate%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is nested and declared private.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedPublic">
      <MemberSignature Language="C#" Value="public bool IsNestedPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedPublic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-817">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsNestedPublic" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-817">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedPublic" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-818">Значение <see langword="true" />, если данный класс является вложенным и объявленным как открытый; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-818">
              <see langword="true" /> if the class is nested and declared public; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-819">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-819">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-820"><xref:System.Type.IsNestedPublic%2A?displayProperty=nameWithType> Свойство возвращает значение, указывающее, является ли класс вложенным и объявленным как открытый.</span><span class="sxs-lookup"><span data-stu-id="ce31b-820">The <xref:System.Type.IsNestedPublic%2A?displayProperty=nameWithType> property gets a value indicating whether a class is nested and declared public.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNotPublic">
      <MemberSignature Language="C#" Value="public bool IsNotPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNotPublic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNotPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNotPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNotPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-821">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsNotPublic" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-821">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNotPublic" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-822">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> верхнего уровня не объявлен как открытый; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-822">
              <see langword="true" /> if the top-level <see cref="T:System.Type" /> is not declared public; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-823">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-823">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-824"><xref:System.Type.IsNotPublic%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли верхнего уровня <xref:System.Type> не объявлен как открытый.</span><span class="sxs-lookup"><span data-stu-id="ce31b-824">The <xref:System.Type.IsNotPublic%2A?displayProperty=nameWithType> property gets a value indicating whether the top-level <xref:System.Type> is not declared public.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPointer">
      <MemberSignature Language="C#" Value="public bool IsPointer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPointer" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsPointer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPointer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPointer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-825">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-825">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsPointer" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-826">Значение <see langword="true" />, если <see cref="T:System.Type" /> является указателем; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-826">
              <see langword="true" /> if the <see cref="T:System.Type" /> is a pointer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-827">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-827">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-828"><xref:System.Type.IsPointer%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> является указателем.</span><span class="sxs-lookup"><span data-stu-id="ce31b-828">The <xref:System.Type.IsPointer%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is a pointer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimitive">
      <MemberSignature Language="C#" Value="public bool IsPrimitive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimitive" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsPrimitive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrimitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimitive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-829">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsPrimitive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-829">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsPrimitive" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-830">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> является одним из типов-примитивов; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-830">
              <see langword="true" /> if the <see cref="T:System.Type" /> is one of the primitive types; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-831">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-831">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-832"><xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> является одним из типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="ce31b-832">The <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is one of the primitive types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-833">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsPublic" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-833">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsPublic" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-834">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> верхнего уровня объявлен как открытый; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-834">
              <see langword="true" /> if the top-level <see cref="T:System.Type" /> is declared public; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-835">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-835">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-836"><xref:System.Type.IsPublic%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли верхнего уровня <xref:System.Type> объявлен как открытый.</span><span class="sxs-lookup"><span data-stu-id="ce31b-836">The <xref:System.Type.IsPublic%2A?displayProperty=nameWithType> property gets a value indicating whether the top-level <xref:System.Type> is declared public.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-837">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsSealed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-837">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsSealed" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-838">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> объявлен как запечатанный; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-838">
              <see langword="true" /> if the <see cref="T:System.Type" /> is declared sealed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-839">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-839">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-840"><xref:System.Type.IsSealed%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> объявлен как запечатанный.</span><span class="sxs-lookup"><span data-stu-id="ce31b-840">The <xref:System.Type.IsSealed%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is declared sealed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSerializable">
      <MemberSignature Language="C#" Value="public bool IsSerializable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSerializable" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsSerializable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSerializable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSerializable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-841">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsSerializable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-841">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsSerializable" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-842">Значение <see langword="true" />, если объект <see cref="T:System.Type" /> является сериализуемым; в противным случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-842">
              <see langword="true" /> if the <see cref="T:System.Type" /> is serializable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-843">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-843">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-844"><xref:System.Type.IsSerializable%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> является сериализуемым.</span><span class="sxs-lookup"><span data-stu-id="ce31b-844">The <xref:System.Type.IsSerializable%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is serializable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-845">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsSpecialName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-845">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsSpecialName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-846">Значение <see langword="true" />, если имя данного объекта <see cref="T:System.Type" /> требует специальной обработки; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-846">
              <see langword="true" /> if the <see cref="T:System.Type" /> has a name that requires special handling; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-847">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-847">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-848"><xref:System.Type.IsSpecialName%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> имеет имя, которое требует специальной обработки.</span><span class="sxs-lookup"><span data-stu-id="ce31b-848">The <xref:System.Type.IsSpecialName%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> has a name that requires special handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubclassOf">
      <MemberSignature Language="C#" Value="public bool IsSubclassOf (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubclassOf(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubclassOf (c As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubclassOf(Type ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="ce31b-849">Объект <see cref="T:System.Type" />, с которым сравнивается текущий объект <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-849">The <see cref="T:System.Type" /> to compare with the current <see cref="T:System.Type" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce31b-850">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.IsSubclassOf(System.Type)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-850">Provides COM objects with version-independent access to the <see cref="M:System.Type.IsSubclassOf(System.Type)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-851">Значение <see langword="true" />, если тип <see cref="T:System.Type" />, представленный параметром <paramref name="c" />, и текущий тип <see cref="T:System.Type" /> представляют классы, и класс, представленный текущим типом <see cref="T:System.Type" />, является производным от класса, представленного параметром <paramref name="c" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-851">
              <see langword="true" /> if the <see cref="T:System.Type" /> represented by the <paramref name="c" /> parameter and the current <see cref="T:System.Type" /> represent classes, and the class represented by the current <see cref="T:System.Type" /> derives from the class represented by <paramref name="c" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ce31b-852">Этот метод также возвращает значение <see langword="false" />, если параметр <paramref name="c" /> и текущий объект <see cref="T:System.Type" /> представляют один и тот же класс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-852">This method also returns <see langword="false" /> if <paramref name="c" /> and the current <see cref="T:System.Type" /> represent the same class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-853">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-853">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-854"><xref:System.Type.IsSubclassOf%2A?displayProperty=nameWithType> Метод определяет, является ли класс, представленный текущим <xref:System.Type> является производным от класса, представленного указанным <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-854">The <xref:System.Type.IsSubclassOf%2A?displayProperty=nameWithType> method determines whether the class represented by the current <xref:System.Type> derives from the class represented by the specified <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnicodeClass">
      <MemberSignature Language="C#" Value="public bool IsUnicodeClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnicodeClass" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsUnicodeClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnicodeClass As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnicodeClass { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-855">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsUnicodeClass" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-855">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsUnicodeClass" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-856">Значение <see langword="true" />, если для данного объекта <see langword="UnicodeClass" /> выбран атрибут формата строки <see cref="T:System.Type" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-856">
              <see langword="true" /> if the string format attribute <see langword="UnicodeClass" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-857">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-857">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-858"><xref:System.Type.IsUnicodeClass%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли атрибут формата строки `UnicodeClass` выбран для <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-858">The <xref:System.Type.IsUnicodeClass%2A?displayProperty=nameWithType> property gets a value indicating whether the string format attribute `UnicodeClass` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueType">
      <MemberSignature Language="C#" Value="public bool IsValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValueType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsValueType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValueType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValueType { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-859">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.IsValueType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-859">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsValueType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-860">Значение <see langword="true" />, если тип <see cref="T:System.Type" /> является типом значения; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-860">
              <see langword="true" /> if the <see cref="T:System.Type" /> is a value type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-861">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-861">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-862"><xref:System.Type.IsValueType%2A?displayProperty=nameWithType> Свойство получает значение, указывающее, является ли <xref:System.Type> является типом значения.</span><span class="sxs-lookup"><span data-stu-id="ce31b-862">The <xref:System.Type.IsValueType%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is a value type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-863">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.MemberType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-863">Provides COM objects with version-independent access to the <see cref="P:System.Type.MemberType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-864">Значение <see cref="T:System.Reflection.MemberTypes" />, позволяющее определить, каким типом является этот член: обычным или вложенным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-864">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a type or a nested type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-865">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-865">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-866"><xref:System.Type.MemberType%2A?displayProperty=nameWithType> Возвращает свойство <xref:System.Reflection.MemberTypes> значение, указывающее, что этот член является типом или вложенного типа.</span><span class="sxs-lookup"><span data-stu-id="ce31b-866">The <xref:System.Type.MemberType%2A?displayProperty=nameWithType> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a type or a nested type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.Module" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-867">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.Module" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-867">Provides COM objects with version-independent access to the <see cref="P:System.Type.Module" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-868">Имя модуля, в котором определен текущий тип <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-868">The name of the module in which the current <see cref="T:System.Type" /> is defined.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-869">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-869">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-870"><xref:System.Type.Module%2A?displayProperty=nameWithType> Свойство возвращает модуль (DLL), в котором текущий <xref:System.Type> определен.</span><span class="sxs-lookup"><span data-stu-id="ce31b-870">The <xref:System.Type.Module%2A?displayProperty=nameWithType> property gets the module (the DLL) in which the current <xref:System.Type> is defined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-871">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Reflection.MemberInfo.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-871">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-872">Имя <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-872">The name of the <see cref="T:System.Type" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-873">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-873">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-874"><xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType> Свойство получает имя <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-874">The <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType> property gets the name of the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-875">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.Namespace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-875">Provides COM objects with version-independent access to the <see cref="P:System.Type.Namespace" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-876">Пространство имен <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-876">The namespace of the <see cref="T:System.Type" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-877">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-877">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-878"><xref:System.Type.Namespace%2A?displayProperty=nameWithType> Свойство возвращает пространство имен <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-878">The <xref:System.Type.Namespace%2A?displayProperty=nameWithType> property gets the namespace of the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-879">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.ReflectedType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-879">Provides COM objects with version-independent access to the <see cref="P:System.Type.ReflectedType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-880">Объект <see cref="T:System.Type" />, с помощью которого был получен данный объект <see cref="T:System.Reflection.MemberInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-880">The <see cref="T:System.Type" /> object through which this <see cref="T:System.Reflection.MemberInfo" /> object was obtained.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-881">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-881">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-882"><xref:System.Type.ReflectedType%2A?displayProperty=nameWithType> Свойство возвращает объект класса, который использовался для получения этого члена.</span><span class="sxs-lookup"><span data-stu-id="ce31b-882">The <xref:System.Type.ReflectedType%2A?displayProperty=nameWithType> property gets the class object that was used to obtain this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-883">Предоставляет COM-объектам независимый от версии доступ к методу <see cref="M:System.Type.ToString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-883">Provides COM objects with version-independent access to the <see cref="M:System.Type.ToString" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce31b-884">Объект типа <see cref="T:System.String" />, представляющий имя текущего объекта <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-884">A <see cref="T:System.String" /> representing the name of the current <see cref="T:System.Type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-885">Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-885">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-886"><xref:System.Type.ToString%2A?displayProperty=nameWithType> Возвращает имя текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-886">The <xref:System.Type.ToString%2A?displayProperty=nameWithType> method returns the name of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeHandle">
      <MemberSignature Language="C#" Value="public RuntimeTypeHandle TypeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeTypeHandle TypeHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.TypeHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeHandle As RuntimeTypeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property RuntimeTypeHandle TypeHandle { RuntimeTypeHandle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-887">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.TypeHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-887">Provides COM objects with version-independent access to the <see cref="P:System.Type.TypeHandle" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-888">Дескриптор текущего объекта <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-888">The handle for the current <see cref="T:System.Type" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-889">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-889">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-890"><xref:System.Type.TypeHandle%2A?displayProperty=nameWithType> Свойство получает дескриптор текущего <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-890">The <xref:System.Type.TypeHandle%2A?displayProperty=nameWithType> property gets the handle for the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInitializer">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo TypeInitializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo TypeInitializer" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.TypeInitializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeInitializer As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ConstructorInfo ^ TypeInitializer { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-891">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.TypeInitializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-891">Provides COM objects with version-independent access to the <see cref="P:System.Type.TypeInitializer" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-892">Объект <see cref="T:System.Reflection.ConstructorInfo" />, содержащий имя конструктора класса <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-892">A <see cref="T:System.Reflection.ConstructorInfo" /> containing the name of the class constructor for the <see cref="T:System.Type" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-893">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-893">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-894"><xref:System.Type.TypeInitializer%2A?displayProperty=nameWithType> Свойство возвращает инициализатор <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="ce31b-894">The <xref:System.Type.TypeInitializer%2A?displayProperty=nameWithType> property gets the initializer for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce31b-895">Предоставляет COM-объекты с независящим от версии доступом к свойству <see cref="P:System.Type.UnderlyingSystemType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-895">Provides COM objects with version-independent access to the <see cref="P:System.Type.UnderlyingSystemType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce31b-896">Базовый системный тип текущего типа <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce31b-896">The underlying system type for the <see cref="T:System.Type" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce31b-897">Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="ce31b-897">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="ce31b-898"><xref:System.Type.UnderlyingSystemType%2A?displayProperty=nameWithType> Свойство указывает на тип, предоставляемый средой CLR, представляющей этот тип.</span><span class="sxs-lookup"><span data-stu-id="ce31b-898">The <xref:System.Type.UnderlyingSystemType%2A?displayProperty=nameWithType> property indicates the type provided by the common language runtime that represents this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>