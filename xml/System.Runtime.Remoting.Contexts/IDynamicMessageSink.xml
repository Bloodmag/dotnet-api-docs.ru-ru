<Type Name="IDynamicMessageSink" FullName="System.Runtime.Remoting.Contexts.IDynamicMessageSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f62dafd94a669279024892bee80144950f6537a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30485268" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDynamicMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDynamicMessageSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.IDynamicMessageSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDynamicMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDynamicMessageSink" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает, что реализующий приемник сообщений будет предоставлен динамически регистрируемыми свойствами.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Динамические приемники сообщений предоставляются с уведомлениями вызова запуске и завершении с флагами, указывающее, находится ли вызов на клиентской или серверной (Это полезно для приемников уровня контекста).  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="ProcessMessageFinish">
      <MemberSignature Language="C#" Value="public void ProcessMessageFinish (System.Runtime.Remoting.Messaging.IMessage replyMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessageFinish(class System.Runtime.Remoting.Messaging.IMessage replyMsg, bool bCliSide, bool bAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IDynamicMessageSink.ProcessMessageFinish(System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessMessageFinish (replyMsg As IMessage, bCliSide As Boolean, bAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessMessageFinish(System::Runtime::Remoting::Messaging::IMessage ^ replyMsg, bool bCliSide, bool bAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replyMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="bCliSide" Type="System.Boolean" />
        <Parameter Name="bAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="replyMsg">Ответное сообщение.</param>
        <param name="bCliSide">Имеет значение <see langword="true" />, если метод вызван на клиентской стороне, и <see langword="false" />, если вызван на серверной стороне.</param>
        <param name="bAsync">Имеет значение <see langword="true" />, если вызов является асинхронным, и <see langword="false" />, если это синхронный вызов.</param>
        <summary>Указывает на возврат вызова.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Логических параметров указывает, находится ли приемник на стороне клиента, так и на сервере и использует ли вызов <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> метод.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProcessMessageStart">
      <MemberSignature Language="C#" Value="public void ProcessMessageStart (System.Runtime.Remoting.Messaging.IMessage reqMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessageStart(class System.Runtime.Remoting.Messaging.IMessage reqMsg, bool bCliSide, bool bAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IDynamicMessageSink.ProcessMessageStart(System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessMessageStart (reqMsg As IMessage, bCliSide As Boolean, bAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessMessageStart(System::Runtime::Remoting::Messaging::IMessage ^ reqMsg, bool bCliSide, bool bAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reqMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="bCliSide" Type="System.Boolean" />
        <Parameter Name="bAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reqMsg">Сообщение запроса.</param>
        <param name="bCliSide">Имеет значение <see langword="true" />, если метод вызван на клиентской стороне, и <see langword="false" />, если вызван на серверной стороне.</param>
        <param name="bAsync">Имеет значение <see langword="true" />, если вызов является асинхронным, и <see langword="false" />, если это синхронный вызов.</param>
        <summary>Указывает на запуск вызова.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Логических параметров указывает, находится ли приемник на стороне клиента, так и на сервере и использует ли вызов <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> метод.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>