<Type Name="IDynamicMessageSink" FullName="System.Runtime.Remoting.Contexts.IDynamicMessageSink">
  <TypeSignature Language="C#" Value="public interface IDynamicMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDynamicMessageSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.IDynamicMessageSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDynamicMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDynamicMessageSink" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9bf3e-101">Указывает, что реализующий приемник сообщений будет предоставлен динамически регистрируемыми свойствами.</span><span class="sxs-lookup"><span data-stu-id="9bf3e-101">Indicates that the implementing message sink will be provided by dynamically registered properties.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bf3e-102">Динамические приемники сообщений предоставляются с уведомлениями вызова запуске и завершении с флагами, указывающее, находится ли вызов на клиентской или серверной (Это полезно для приемников уровня контекста).</span><span class="sxs-lookup"><span data-stu-id="9bf3e-102">Dynamic message sinks are provided with notifications of call start and call finish with flags indicating whether the call is currently on the client side or server side (this is useful for the context level sinks).</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="ProcessMessageFinish">
      <MemberSignature Language="C#" Value="public void ProcessMessageFinish (System.Runtime.Remoting.Messaging.IMessage replyMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessageFinish(class System.Runtime.Remoting.Messaging.IMessage replyMsg, bool bCliSide, bool bAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IDynamicMessageSink.ProcessMessageFinish(System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessMessageFinish (replyMsg As IMessage, bCliSide As Boolean, bAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessMessageFinish(System::Runtime::Remoting::Messaging::IMessage ^ replyMsg, bool bCliSide, bool bAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replyMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="bCliSide" Type="System.Boolean" />
        <Parameter Name="bAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="replyMsg"><span data-ttu-id="9bf3e-103">Ответное сообщение.</span><span class="sxs-lookup"><span data-stu-id="9bf3e-103">A reply message.</span></span></param>
        <param name="bCliSide"><span data-ttu-id="9bf3e-104">Имеет значение <see langword="true" />, если метод вызван на клиентской стороне, и <see langword="false" />, если вызван на серверной стороне.</span><span class="sxs-lookup"><span data-stu-id="9bf3e-104">A value of <see langword="true" /> if the method is invoked on the client side and <see langword="false" /> if it is invoked on the server side.</span></span></param>
        <param name="bAsync"><span data-ttu-id="9bf3e-105">Имеет значение <see langword="true" />, если вызов является асинхронным, и <see langword="false" />, если это синхронный вызов.</span><span class="sxs-lookup"><span data-stu-id="9bf3e-105">A value of <see langword="true" /> if this is an asynchronic call and <see langword="false" /> if it is a synchronic call.</span></span></param>
        <summary><span data-ttu-id="9bf3e-106">Указывает на возврат вызова.</span><span class="sxs-lookup"><span data-stu-id="9bf3e-106">Indicates that a call is returning.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bf3e-107">Логических параметров указывает, находится ли приемник на стороне клиента, так и на сервере и использует ли вызов <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="9bf3e-107">The Boolean parameters indicate whether the sink is located on the client side or the server side and whether the call is using the <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProcessMessageStart">
      <MemberSignature Language="C#" Value="public void ProcessMessageStart (System.Runtime.Remoting.Messaging.IMessage reqMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessageStart(class System.Runtime.Remoting.Messaging.IMessage reqMsg, bool bCliSide, bool bAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IDynamicMessageSink.ProcessMessageStart(System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessMessageStart (reqMsg As IMessage, bCliSide As Boolean, bAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessMessageStart(System::Runtime::Remoting::Messaging::IMessage ^ reqMsg, bool bCliSide, bool bAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reqMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="bCliSide" Type="System.Boolean" />
        <Parameter Name="bAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reqMsg"><span data-ttu-id="9bf3e-108">Сообщение запроса.</span><span class="sxs-lookup"><span data-stu-id="9bf3e-108">A request message.</span></span></param>
        <param name="bCliSide"><span data-ttu-id="9bf3e-109">Имеет значение <see langword="true" />, если метод вызван на клиентской стороне, и <see langword="false" />, если вызван на серверной стороне.</span><span class="sxs-lookup"><span data-stu-id="9bf3e-109">A value of <see langword="true" /> if the method is invoked on the client side and <see langword="false" /> if the method is on the server side.</span></span></param>
        <param name="bAsync"><span data-ttu-id="9bf3e-110">Имеет значение <see langword="true" />, если вызов является асинхронным, и <see langword="false" />, если это синхронный вызов.</span><span class="sxs-lookup"><span data-stu-id="9bf3e-110">A value of <see langword="true" /> if this is an asynchronic call and <see langword="false" /> if it is a synchronic call.</span></span></param>
        <summary><span data-ttu-id="9bf3e-111">Указывает на запуск вызова.</span><span class="sxs-lookup"><span data-stu-id="9bf3e-111">Indicates that a call is starting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bf3e-112">Логических параметров указывает, находится ли приемник на стороне клиента, так и на сервере и использует ли вызов <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="9bf3e-112">The Boolean parameters indicate whether the sink is located on the client side or the server side and whether the call is using the <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>