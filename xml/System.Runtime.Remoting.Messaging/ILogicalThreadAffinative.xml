<Type Name="ILogicalThreadAffinative" FullName="System.Runtime.Remoting.Messaging.ILogicalThreadAffinative">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="804c93041141c1324411f1b67473c2a27f307cd9" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37467426" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ILogicalThreadAffinative" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILogicalThreadAffinative" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILogicalThreadAffinative" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILogicalThreadAffinative" />
  <TypeSignature Language="F#" Value="type ILogicalThreadAffinative = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Помечает объект, который может распространяться вне <see cref="T:System.AppDomain" /> в <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда выполняется удаленный метод вызов к объекту в другом <xref:System.AppDomain>, текущий <xref:System.Runtime.Remoting.Messaging.CallContext> класс создает <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> который перемещается вместе с вызовом в удаленное расположение. Только объекты, которые открывают <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> интерфейс и хранятся в <xref:System.Runtime.Remoting.Messaging.CallContext> распространяются за пределы <xref:System.AppDomain>. Объекты, которые не поддерживают этот интерфейс, не передаются в <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> экземпляры с удаленными вызовами методов.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> интерфейс для передачи [объекты Principal и Identity](~/docs/standard/security/principal-and-identity-objects.md) в удаленное расположение для идентификации. Чтобы просмотреть код для `HelloServiceClass` класс, используемый в данном примере, см. в примере <xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A> метод. Чтобы просмотреть код для класса server, используемый в этом примере, см. пример для <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> класса. Чтобы просмотреть код для класса клиента, используемый в данном примере, см. в примере <xref:System.Runtime.Remoting.Messaging.CallContext> класса.  
  
 [!code-cpp[CallContext#2](~/samples/snippets/cpp/VS_Snippets_Remoting/CallContext/CPP/service.cpp#2)]
 [!code-csharp[CallContext#2](~/samples/snippets/csharp/VS_Snippets_Remoting/CallContext/CS/service.cs#2)]
 [!code-vb[CallContext#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CallContext/VB/service.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>