<Type Name="ILogicalThreadAffinative" FullName="System.Runtime.Remoting.Messaging.ILogicalThreadAffinative">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="11600b4c6c27db5d82abf8e22b33be9547f64f82" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ILogicalThreadAffinative" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILogicalThreadAffinative" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILogicalThreadAffinative" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILogicalThreadAffinative" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a1617-101">Помечает объект, который может распространяться вне <see cref="T:System.AppDomain" /> в <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a1617-101">Marks an object that can propagate outside of an <see cref="T:System.AppDomain" /> in a <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1617-102">Если удаленный вызов метода на объект в другом <xref:System.AppDomain>, текущий <xref:System.Runtime.Remoting.Messaging.CallContext> класс создает <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> который перемещается вместе с вызовом в удаленное расположение.</span><span class="sxs-lookup"><span data-stu-id="a1617-102">When a remote method call is made to an object in another <xref:System.AppDomain>, the current <xref:System.Runtime.Remoting.Messaging.CallContext> class generates a <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> that travels along with the call to the remote location.</span></span> <span data-ttu-id="a1617-103">Только объекты, которые открывают <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> интерфейс и хранятся в <xref:System.Runtime.Remoting.Messaging.CallContext> распространяются за пределами <xref:System.AppDomain>.</span><span class="sxs-lookup"><span data-stu-id="a1617-103">Only objects that expose the <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> interface and are stored in the <xref:System.Runtime.Remoting.Messaging.CallContext> are propagated outside the <xref:System.AppDomain>.</span></span> <span data-ttu-id="a1617-104">Объекты, которые не поддерживают этот интерфейс, не передаются в <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> экземпляры с удаленных вызовов методов.</span><span class="sxs-lookup"><span data-stu-id="a1617-104">Objects that do not support this interface are not transmitted in <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> instances with remote method calls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1617-105">В следующем примере кода показано использование <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> интерфейсу передавать [объекты Principal и Identity](~/docs/standard/security/principal-and-identity-objects.md) в удаленное расположение для идентификации.</span><span class="sxs-lookup"><span data-stu-id="a1617-105">The following code example demonstrates the use of the <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> interface to transmit [Principal and Identity Objects](~/docs/standard/security/principal-and-identity-objects.md) to a remote location for identification.</span></span> <span data-ttu-id="a1617-106">Чтобы просмотреть код для `HelloServiceClass` класс, используемый в данном примере, см. пример для <xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a1617-106">To view the code for the `HelloServiceClass` class used in the sample, see the example for the <xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A> method.</span></span> <span data-ttu-id="a1617-107">Чтобы просмотреть код для серверного класса, используемый в этом примере, см. пример для <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> класса.</span><span class="sxs-lookup"><span data-stu-id="a1617-107">To view the code for the server class used in this sample, see example for the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> class.</span></span> <span data-ttu-id="a1617-108">Чтобы просмотреть код для класса клиента, используемый в данном примере, см. пример для <xref:System.Runtime.Remoting.Messaging.CallContext> класса.</span><span class="sxs-lookup"><span data-stu-id="a1617-108">To view the code for the client class used in the sample, see the example for the <xref:System.Runtime.Remoting.Messaging.CallContext> class.</span></span>  
  
 [!code-cpp[CallContext#2](~/samples/snippets/cpp/VS_Snippets_Remoting/CallContext/CPP/service.cpp#2)]
 [!code-csharp[CallContext#2](~/samples/snippets/csharp/VS_Snippets_Remoting/CallContext/CS/service.cs#2)]
 [!code-vb[CallContext#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CallContext/VB/service.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>