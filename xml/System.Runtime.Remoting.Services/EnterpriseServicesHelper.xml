<Type Name="EnterpriseServicesHelper" FullName="System.Runtime.Remoting.Services.EnterpriseServicesHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8f6f872e304091b31269a5a65816ef2d2211a24" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30487658" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EnterpriseServicesHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EnterpriseServicesHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Services.EnterpriseServicesHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EnterpriseServicesHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnterpriseServicesHelper sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет API, необходимые для связи и работы с неуправляемыми классами вне <see cref="T:System.AppDomain" />. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Этот класс выполняет запрос ссылки. Исключение SecurityException создается, если непосредственный вызывающий объект не имеет разрешения инфраструктуры. В разделе [требования связывания](~/docs/framework/misc/link-demands.md) для получения дополнительной информации.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">для работы с кодом инфраструктуры. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnterpriseServicesHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Services.EnterpriseServicesHelper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnterpriseServicesHelper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Создает экземпляр класса <see cref="T:System.Runtime.Remoting.Services.EnterpriseServicesHelper" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConstructionReturnMessage">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.Activation.IConstructionReturnMessage CreateConstructionReturnMessage (System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg, MarshalByRefObject retObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.Activation.IConstructionReturnMessage CreateConstructionReturnMessage(class System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg, class System.MarshalByRefObject retObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Services.EnterpriseServicesHelper.CreateConstructionReturnMessage(System.Runtime.Remoting.Activation.IConstructionCallMessage,System.MarshalByRefObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateConstructionReturnMessage (ctorMsg As IConstructionCallMessage, retObj As MarshalByRefObject) As IConstructionReturnMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::Activation::IConstructionReturnMessage ^ CreateConstructionReturnMessage(System::Runtime::Remoting::Activation::IConstructionCallMessage ^ ctorMsg, MarshalByRefObject ^ retObj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Activation.IConstructionReturnMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctorMsg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
        <Parameter Name="retObj" Type="System.MarshalByRefObject" />
      </Parameters>
      <Docs>
        <param name="ctorMsg">Вызов конструирования в объект, из которого возвращается новый экземпляр <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" />.</param>
        <param name="retObj">
          <see cref="T:System.Runtime.Remoting.ObjRef" />, представляющая объект, созданный с помощью вызова конструирования в <c>ctorMsg</c>.</param>
        <summary>Создает <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage" /> из заданного <see cref="T:System.Runtime.Remoting.Activation.IConstructionCallMessage" />.</summary>
        <returns>
          <see cref="T:System.Runtime.Remoting.Activation.IConstructionReturnMessage" />, возвращенное из вызова конструирования, заданного в параметре <paramref name="ctorMsg" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SwitchWrappers">
      <MemberSignature Language="C#" Value="public static void SwitchWrappers (System.Runtime.Remoting.Proxies.RealProxy oldcp, System.Runtime.Remoting.Proxies.RealProxy newcp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SwitchWrappers(class System.Runtime.Remoting.Proxies.RealProxy oldcp, class System.Runtime.Remoting.Proxies.RealProxy newcp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Services.EnterpriseServicesHelper.SwitchWrappers(System.Runtime.Remoting.Proxies.RealProxy,System.Runtime.Remoting.Proxies.RealProxy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SwitchWrappers (oldcp As RealProxy, newcp As RealProxy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SwitchWrappers(System::Runtime::Remoting::Proxies::RealProxy ^ oldcp, System::Runtime::Remoting::Proxies::RealProxy ^ newcp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldcp" Type="System.Runtime.Remoting.Proxies.RealProxy" />
        <Parameter Name="newcp" Type="System.Runtime.Remoting.Proxies.RealProxy" />
      </Parameters>
      <Docs>
        <param name="oldcp">Прокси, который представляет старый экземпляр класса, на который ссылается COM.</param>
        <param name="newcp">Прокси, который представляет новый экземпляр класса, на который ссылается COM.</param>
        <summary>Переключает [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) (CCW) между двумя экземплярами одного класса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  Этот метод может вызвать нежелательные последствия. Перед вызовом этого метода пользователь необходимо убедиться, что это операция поточно ориентированного и что не осуществляется вызов через CCW к одному из экземпляров класса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Непосредственный вызывающий объект не имеет разрешение UnmanagedCode.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="WrapIUnknownWithComObject">
      <MemberSignature Language="C#" Value="public static object WrapIUnknownWithComObject (IntPtr punk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object WrapIUnknownWithComObject(native int punk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Services.EnterpriseServicesHelper.WrapIUnknownWithComObject(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WrapIUnknownWithComObject (punk As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ WrapIUnknownWithComObject(IntPtr punk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="punk">Указатель на заключаемый в оболочку COM-интерфейс <see langword="IUnknown" />.</param>
        <summary>Заключает заданный COM-интерфейс <see langword="IUnknown" /> в [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</summary>
        <returns>RCW, в которую заключается заданный <see langword="IUnknown" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.Services.EnterpriseServicesHelper.WrapIUnknownWithComObject%2A> Аналогичен методу <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType> метода, но не пытается сохранить идентичность неуправляемого объекта. Например, два вызова с тем же `IUnknown` текущего метода возвращает две различных RCW, но два вызова <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A> метод с тем же `IUnknown` возвращают одинаковые вызываемая оболочка времени Выполнения.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Непосредственный вызывающий объект не имеет разрешение UnmanagedCode.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>