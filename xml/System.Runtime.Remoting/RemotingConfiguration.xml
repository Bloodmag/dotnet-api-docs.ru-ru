<Type Name="RemotingConfiguration" FullName="System.Runtime.Remoting.RemotingConfiguration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b654cf7aaff3b7f435c3a0fac58f6c81a15372e4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30490648" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class RemotingConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RemotingConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.RemotingConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class RemotingConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class RemotingConfiguration abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет различные статические методы для конфигурации инфраструктуры удаленного взаимодействия.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationId">
      <MemberSignature Language="C#" Value="public static string ApplicationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.ApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает идентификатор выполняемого в настоящий момент приложения.</summary>
        <value>Строка <see cref="T:System.String" />, которая содержит идентификатор выполняемого в настоящий момент приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Идентификатор приложения присоединяется к URI объекты, созданные в текущий момент приложением.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">У непосредственно вызывающего объекта отсутствует разрешение инфраструктуры.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для работы с кодом инфраструктуры. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или устанавливает имя приложения удаленного доступа.</summary>
        <value>Имя приложения удаленного доступа.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имя приложения можно задать только один раз через текущее свойство или с помощью файла конфигурации. Если приложение выполняется в среде узла, например Internet Information Services (IIS), это значение может быть уже установлен (обычно для виртуального каталога). Возвращает текущее свойство `null` Если имя приложения не было задано.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Runtime.Remoting.RemotingConfiguration.ApplicationName%2A> свойство, указывающее имя приложения удаленного взаимодействия. Полный пример кода, см. Примеры для <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> и <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType%2A> методы.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#2)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#2)]
 [!code-vb[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#2)]  
  
 В следующем примере кода показано, как получить доступ к удаленному объекту из именованного приложения.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#6)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#6)]
 [!code-vb[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия. Это исключение создается только при настройке значения свойства.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public static void Configure (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Configure(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Configure (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Configure(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Configure(String,Boolean)")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Имя файла конфигурации удаленного доступа. Может принимать значение <see langword="null" />.</param>
        <summary>Читает файл конфигурации и настраивает инфраструктуру удаленного взаимодействия. <see cref="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String)" /> устарел. Взамен рекомендуется использовать <see cref="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String,System.Boolean)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%29> устарел. Взамен рекомендуется использовать <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>.  
  
 Передача `null` как `filename` параметр вызывает инициализацию удаленного доступа по умолчанию, не требуя существования файла конфигурации.  
  
 Синтаксис файла конфигурации см. в разделе [схема параметров удаленного взаимодействия](http://msdn.microsoft.com/library/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e).  
  
> [!NOTE]
>  Маршалинг по ссылке объекты (УПС) не остаются в памяти навсегда. Вместо этого Если тип не переопределяет <xref:System.MarshalByRefObject.InitializeLifetimeService%2A?displayProperty=nameWithType> для управления своими политиками времени жизни, КАЖДЫЙ имеет ограниченное время жизни, прежде чем система удаленного взаимодействия .NET Framework начнет его удаление и освобождение памяти. Дополнительные сведения см. в разделе [аренда времени жизни](http://msdn.microsoft.com/library/c72d561c-1266-4c8b-b258-2c168c08da9a).  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_Configure_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CPP/remotingconfiguration_configure_server.cpp#1)]
 [!code-csharp[RemotingConfiguration_Configure_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CS/remotingconfiguration_configure_server.cs#1)]
 [!code-vb[RemotingConfiguration_Configure_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/VB/remotingconfiguration_configure_server.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public static void Configure (string filename, bool ensureSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Configure(string filename, bool ensureSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Configure (filename As String, ensureSecurity As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Configure(System::String ^ filename, bool ensureSecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="ensureSecurity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">Имя файла конфигурации удаленного доступа. Может принимать значение <see langword="null" />.</param>
        <param name="ensureSecurity">Если значение равно <see langword="true" />, обеспечение безопасности обязательно. Если значение равно <see langword="false" />, обеспечение безопасности необязательно, но возможно.</param>
        <summary>Читает файл конфигурации и настраивает инфраструктуру удаленного взаимодействия.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Передача `null` как `filename` параметр вызывает инициализацию удаленного доступа по умолчанию, не требуя существования файла конфигурации. Дополнительные сведения об удаленном взаимодействии и безопасности в разделе [безопасности при удаленном взаимодействии.](http://msdn.microsoft.com/library/9574262c-d4b1-41c5-8600-24ff147c0add)  
  
 Синтаксис файла конфигурации см. в разделе [схема параметров удаленного взаимодействия](http://msdn.microsoft.com/library/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e).  
  
> [!NOTE]
>  Маршалинг по ссылке объекты (УПС) не остаются в памяти навсегда. Вместо этого Если тип не переопределяет <xref:System.MarshalByRefObject.InitializeLifetimeService%2A?displayProperty=nameWithType> для управления своими политиками времени жизни, КАЖДЫЙ имеет ограниченное время жизни, прежде чем система удаленного взаимодействия .NET Framework начнет его удаление и освобождение памяти. Дополнительные сведения см. в разделе [аренда времени жизни](http://msdn.microsoft.com/library/c72d561c-1266-4c8b-b258-2c168c08da9a).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CustomErrorsEnabled">
      <MemberSignature Language="C#" Value="public static bool CustomErrorsEnabled (bool isLocalRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CustomErrorsEnabled(bool isLocalRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.CustomErrorsEnabled(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomErrorsEnabled (isLocalRequest As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CustomErrorsEnabled(bool isLocalRequest);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isLocalRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isLocalRequest">
          <see langword="true" /> чтобы указать локальные вызывающие операторы. <see langword="false" /> чтобы указать удаленные вызывающие операторы.</param>
        <summary>Указывает, возвращают ли каналы сервера в этом домене приложения локальным или удаленным вызывающим объектам фильтрованные или полные сведения об исключениях.</summary>
        <returns>
          <see langword="true" />, если только фильтрованные сведения об исключениях возвращаются в локальные или удаленные вызывающие, как указано параметром <paramref name="isLocalRequest" />. <see langword="false" />, если возвращаются полные сведения об исключении.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Полные сведения об исключении включают точное исключение сервера и трассировку стека сервера. Фильтрованные сведения включают стандартное исключение удаленного доступа, но не трассировку стека сервера.  
  
 `CustomErrorsEnabled` Метод отражает параметры конфигурации, которые были указаны в `mode` атрибут `<customErrors>` элемента файла конфигурации приложения. Дополнительные сведения о параметрах конфигурации см. в разделе [ &#91; \<topic://cpconconfiguration >&#93;](http://msdn.microsoft.com/library/92c0c097-d984-4315-835b-7490ecdf1097).  
  
 Ниже приведены три сервера канала значения свойств, которые указывают, какие вызывающие объекты получают сведения об исключении и какой тип сведений они получают.  
  
|Значение|Описание:|  
|-----------|-----------------|  
|`off`|Все вызывающие объекты получают полные сведения об исключении.|  
|`on`|Все вызывающие объекты получают фильтрованные сведения об исключении.|  
|`remoteOnly`|Локальные вызывающие объекты получают полные сведения об исключении. Удаленные вызывающие объекты получают фильтрованные сведения об исключении.|  
  
 В следующей таблице показаны взаимодействие `isLocalRequest` параметра и сервером свойства канала.  
  
|Значение|isLocalRequest|Возвращаемое значение|Описание:|  
|-----------|--------------------|------------------|-----------------|  
|`on`|`true`|`true`|Локальные вызывающие объекты получают фильтрованные сведения об исключении.|  
|`on`|`false`|`true`|Удаленные вызывающие объекты получают фильтрованные сведения об исключении.|  
|`off`|`true`|`false`|Локальные вызывающие объекты получают полные сведения об исключении.|  
|`off`|`false`|`false`|Удаленные вызывающие объекты получают полные сведения об исключении.|  
|`remoteOnly`|`true`|`false`|Локальные вызывающие объекты получают полные сведения об исключении.|  
|`remoteOnly`|`false`|`true`|Удаленные вызывающие объекты получают фильтрованные сведения об исключении.|  
  
 Сведения об использовании файлов конфигурации приложения для контроля за возвратом сведений об исключениях вызывающим объектам см. в разделе `<customErrors>` элемента.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomErrorsMode">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.CustomErrorsModes CustomErrorsMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.Remoting.CustomErrorsModes CustomErrorsMode" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.CustomErrorsMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CustomErrorsMode As CustomErrorsModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Remoting::CustomErrorsModes CustomErrorsMode { System::Runtime::Remoting::CustomErrorsModes get(); void set(System::Runtime::Remoting::CustomErrorsModes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.CustomErrorsModes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, как выполняется обработка пользовательских ошибок.</summary>
        <value>Член перечисления <see cref="T:System.Runtime.Remoting.CustomErrorsModes" />, указывающий, как осуществляется обработка пользовательских ошибок.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredActivatedClientTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedClientTypeEntry[] GetRegisteredActivatedClientTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedClientTypeEntry[] GetRegisteredActivatedClientTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedClientTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredActivatedClientTypes () As ActivatedClientTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::ActivatedClientTypeEntry ^&gt; ^ GetRegisteredActivatedClientTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedClientTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает массив типов объектов, зарегистрированных со стороны клиента в качестве удаленно активированных типов.</summary>
        <returns>Массив типов объектов, зарегистрированных со стороны клиента в качестве удаленно активированных типов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Подробное описание клиентом объектах см. в разделе [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Type)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredActivatedServiceTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedServiceTypeEntry[] GetRegisteredActivatedServiceTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedServiceTypeEntry[] GetRegisteredActivatedServiceTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedServiceTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredActivatedServiceTypes () As ActivatedServiceTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::ActivatedServiceTypeEntry ^&gt; ^ GetRegisteredActivatedServiceTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedServiceTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает массив типа объектов, зарегистрированных со стороны службы, который может быть активирован по запросу клиента.</summary>
        <returns>Массив типов объектов, зарегистрированных со стороны службы, который может быть активирован по запросу клиента.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Подробное описание клиентом объектах см. в разделе [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a).  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_GetRegisteredActivatedServer_Client#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CPP/RemotingConfiguration_GetRegisteredActivatedService_server.cpp#2)]
 [!code-csharp[RemotingConfiguration_GetRegisteredActivatedServer_Client#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CS/remotingconfiguration_getregisteredactivatedservice_server.cs#2)]
 [!code-vb[RemotingConfiguration_GetRegisteredActivatedServer_Client#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/VB/remotingconfiguration_getregisteredactivatedservice_server.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Type)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredWellKnownClientTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownClientTypeEntry[] GetRegisteredWellKnownClientTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownClientTypeEntry[] GetRegisteredWellKnownClientTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownClientTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredWellKnownClientTypes () As WellKnownClientTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::WellKnownClientTypeEntry ^&gt; ^ GetRegisteredWellKnownClientTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownClientTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает массив типов объектов, зарегистрированных со стороны клиента в качестве хорошо известных типов.</summary>
        <returns>Массив типов объектов, зарегистрированных со стороны клиента в качестве хорошо известных типов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Хорошо известные типы могут быть одного вызова или singleton. Если тип объекта является единственным вызовом, его новый экземпляр создается при каждом вызове из клиента. Все вызовы на одноэлементный объект обрабатываются одним экземпляром этого объекта.  
  
 Более подробное описание хорошо известных объектов см. в разделе [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_GetRegisteredWellKnownClient_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredWellKnownClient_Client/CPP/remotingconfiguration_getregisteredwellknownclient_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_GetRegisteredWellKnownClient_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredWellKnownClient_Client/CS/remotingconfiguration_getregisteredwellknownclient_client.cs#1)]
 [!code-vb[RemotingConfiguration_GetRegisteredWellKnownClient_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredWellKnownClient_Client/VB/remotingconfiguration_getregisteredwellknownclient_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredWellKnownServiceTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownServiceTypeEntry[] GetRegisteredWellKnownServiceTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownServiceTypeEntry[] GetRegisteredWellKnownServiceTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownServiceTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredWellKnownServiceTypes () As WellKnownServiceTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::WellKnownServiceTypeEntry ^&gt; ^ GetRegisteredWellKnownServiceTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownServiceTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает массив типов объектов, зарегистрированных со стороны службы в качестве хорошо известных типов.</summary>
        <returns>Массив типов объектов, зарегистрированных со стороны службы в качестве хорошо известных типов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Хорошо известные типы могут быть одного вызова или singleton. Если тип объекта является единственным вызовом, его новый экземпляр создается при каждом вызове из клиента. Все вызовы на одноэлементный объект обрабатываются одним экземпляром этого объекта.  
  
 Более подробное описание хорошо известных объектов см. в разделе [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_Configure_Client#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CPP/remotingconfiguration_configure_server.cpp#2)]
 [!code-csharp[RemotingConfiguration_Configure_Client#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CS/remotingconfiguration_configure_server.cs#2)]
 [!code-vb[RemotingConfiguration_Configure_Client#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/VB/remotingconfiguration_configure_server.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsActivationAllowed">
      <MemberSignature Language="C#" Value="public static bool IsActivationAllowed (Type svrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsActivationAllowed(class System.Type svrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsActivationAllowed(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsActivationAllowed (svrType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsActivationAllowed(Type ^ svrType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="svrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="svrType">Проверяемый объект <see cref="T:System.Type" />.</param>
        <summary>Возвращает логическое значение, показывающее, разрешена ли клиентская активация указанного типа <see cref="T:System.Type" />.</summary>
        <returns>
          <see langword="true" />, если указанный тип <see cref="T:System.Type" /> может активироваться клиентом; иначе — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текущий метод используется со стороны сервера, чтобы определить, является ли активация объект <xref:System.Type> явно разрешенные сервером.  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_GetRegisteredActivatedServer_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CPP/RemotingConfiguration_GetRegisteredActivatedService_server.cpp#1)]
 [!code-csharp[RemotingConfiguration_GetRegisteredActivatedServer_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CS/remotingconfiguration_getregisteredactivatedservice_server.cs#1)]
 [!code-vb[RemotingConfiguration_GetRegisteredActivatedServer_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/VB/remotingconfiguration_getregisteredactivatedservice_server.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsRemotelyActivatedClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Проверяет, зарегистрирован ли тип указанного объекта в качестве удаленно активированного типа клиента.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsRemotelyActivatedClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType (Type svrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType(class System.Type svrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRemotelyActivatedClientType (svrType As Type) As ActivatedClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ActivatedClientTypeEntry ^ IsRemotelyActivatedClientType(Type ^ svrType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="svrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="svrType">Проверяемый тип объекта.</param>
        <summary>Проверяет, зарегистрирован ли тип указанного объекта <see cref="T:System.Type" /> в качестве удаленно активированного типа клиента.</summary>
        <returns>
          <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />, соответствующая указанному типу объекта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsRemotelyActivatedClientType1_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType1_Client/CPP/remotingconfiguration_isremotelyactivatedclienttype1_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsRemotelyActivatedClientType1_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType1_Client/CS/remotingconfiguration_isremotelyactivatedclienttype1_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsRemotelyActivatedClientType1_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType1_Client/VB/remotingconfiguration_isremotelyactivatedclienttype1_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsRemotelyActivatedClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType (string typeName, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType(string typeName, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRemotelyActivatedClientType (typeName As String, assemblyName As String) As ActivatedClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ActivatedClientTypeEntry ^ IsRemotelyActivatedClientType(System::String ^ typeName, System::String ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Имя типа проверяемого объекта.</param>
        <param name="assemblyName">Имя сборки проверяемого объекта.</param>
        <summary>Проверяет, зарегистрирован ли объект, указанный по своему имени и имени сборки, в качестве удаленно активированного типа клиента.</summary>
        <returns>
          <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />, соответствующая указанному типу объекта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsRemotelyActivatedClientType2_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType2_Client/CPP/remotingconfiguration_isremotelyactivatedclienttype2_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsRemotelyActivatedClientType2_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType2_Client/CS/remotingconfiguration_isremotelyactivatedclienttype2_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsRemotelyActivatedClientType2_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType2_Client/VB/remotingconfiguration_isremotelyactivatedclienttype2_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWellKnownClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Проверяет, зарегистрирован ли тип указанного объекта в качестве хорошо известного типа клиента.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWellKnownClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType (Type svrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType(class System.Type svrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWellKnownClientType (svrType As Type) As WellKnownClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::WellKnownClientTypeEntry ^ IsWellKnownClientType(Type ^ svrType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="svrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="svrType">Проверяемый объект <see cref="T:System.Type" />.</param>
        <summary>Проверяет, зарегистрирован ли указанный объект <see cref="T:System.Type" /> в качестве хорошо известного типа клиента.</summary>
        <returns>
          <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />, соответствующая указанному типу объекта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsWellKnownClientType1_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType1_Client/CPP/remotingconfiguration_iswellknownclienttype1_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsWellKnownClientType1_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType1_Client/CS/remotingconfiguration_iswellknownclienttype1_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsWellKnownClientType1_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType1_Client/VB/remotingconfiguration_iswellknownclienttype1_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsWellKnownClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType (string typeName, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType(string typeName, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWellKnownClientType (typeName As String, assemblyName As String) As WellKnownClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::WellKnownClientTypeEntry ^ IsWellKnownClientType(System::String ^ typeName, System::String ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Имя типа проверяемого объекта.</param>
        <param name="assemblyName">Имя сборки проверяемого объекта.</param>
        <summary>Проверяет, зарегистрирован ли объект, указанный по его имени и имени сборки, в качестве хорошо известного типа клиента.</summary>
        <returns>
          <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />, соответствующая указанному типу объекта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsWellKnownClientType2_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType2_Client/CPP/remotingconfiguration_iswellknownclienttype2_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsWellKnownClientType2_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType2_Client/CS/remotingconfiguration_iswellknownclienttype2_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsWellKnownClientType2_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType2_Client/VB/remotingconfiguration_iswellknownclienttype2_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public static string ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ProcessId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ProcessId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает идентификатор выполняемого в настоящий момент процесса.</summary>
        <value>Строка <see cref="T:System.String" />, которая содержит идентификатор выполняемого в настоящий момент процесса.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">У непосредственно вызывающего объекта отсутствует разрешение инфраструктуры.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для работы с кодом инфраструктуры. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterActivatedClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Регистрирует объект <see cref="T:System.Type" /> со стороны клиента в качестве типа, который может активироваться сервером.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterActivatedClientType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedClientType (System.Runtime.Remoting.ActivatedClientTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedClientType(class System.Runtime.Remoting.ActivatedClientTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Runtime.Remoting.ActivatedClientTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterActivatedClientType (entry As ActivatedClientTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedClientType(System::Runtime::Remoting::ActivatedClientTypeEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.ActivatedClientTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">Параметры конфигурации для активированного клиентом типа.</param>
        <summary>Регистрирует объект <see cref="T:System.Type" />, записанный в предоставленный <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" /> на стороне клиента в качестве типа, который может быть активирован сервером.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы создать экземпляр объекта активации клиента на сервере, необходимо знать его <xref:System.Type> и должен быть зарегистрирован на стороне сервера с помощью <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> метод. Чтобы получить прокси для нового экземпляра объекта, активированного клиентом, клиенту необходимо сначала зарегистрировать канал с <xref:System.Runtime.Remoting.Channels.ChannelServices> и затем активировать объект, вызвав `new`.  
  
 Чтобы активировать тип активируемого клиентом объекта с `new` ключевое слово, необходимо сначала зарегистрировать тип объекта, используя <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> метод. Вызов <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> метод дает инфраструктуре удаленного взаимодействия местонахождение удаленного приложения где `new` попытается создать ее. Если, с другой стороны, вы используете <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> метод для создания нового экземпляра объекта активации клиента, то необходимо задать URL-адрес удаленного приложения как параметр, необходима предварительная регистрация на стороне клиента. Для предоставления <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> метод URL-адрес сервера, где требуется создать объект, необходимо включить URL-адрес в экземпляр <xref:System.Runtime.Remoting.Activation.UrlAttribute> класса.  
  
 Подробное описание клиентом объектах см. в разделе [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterActivatedClientType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedClientType (Type type, string appUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedClientType(class System.Type type, string appUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedClientType(Type ^ type, System::String ^ appUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="appUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Объект <see cref="T:System.Type" />.</param>
        <param name="appUrl">URL-адрес приложения, где активируется этот тип.</param>
        <summary>Регистрирует объект <see cref="T:System.Type" /> со стороны клиента в качестве типа, который может активироваться сервером, используя данные параметры для инициализации нового экземпляра класса <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы создать экземпляр объекта активации клиента на сервере, необходимо знать его <xref:System.Type> и должен быть зарегистрирован на стороне сервера с помощью <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> метод. Чтобы получить прокси для нового экземпляра объекта, активированного клиентом, клиенту необходимо сначала зарегистрировать канал с <xref:System.Runtime.Remoting.Channels.ChannelServices> и затем активировать объект, вызвав `new`.  
  
 Чтобы активировать тип активируемого клиентом объекта с `new` ключевое слово, необходимо сначала зарегистрировать тип объекта, используя <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> метод. Вызов <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> метод дает инфраструктуре удаленного взаимодействия местонахождение удаленного приложения где `new` попытается создать ее. Если, с другой стороны, вы используете <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> метод для создания нового экземпляра объекта активации клиента, то необходимо задать URL-адрес удаленного приложения как параметр, необходима предварительная регистрация на стороне клиента. Для предоставления <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> метод URL-адрес сервера, где требуется создать объект, необходимо включить URL-адрес в экземпляр <xref:System.Runtime.Remoting.Activation.UrlAttribute> класса.  
  
 Подробное описание клиентом объектах см. в разделе [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a)  
  
   
  
## Examples  
 В следующем примере кода показана регистрация типа объекта со стороны клиента в качестве типа, который может быть активирован на сервере. Для кода сервера, который соответствует представленному коду клиента, см. пример для <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> метод.  
  
 [!code-cpp[RemotingConfiguration.ClientActivation#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CPP/client.cpp#1)]
 [!code-csharp[RemotingConfiguration.ClientActivation#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CS/client.cs#1)]
 [!code-vb[RemotingConfiguration.ClientActivation#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/VB/client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="typeName" /> или параметра <paramref name="URI" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterActivatedServiceType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Регистрирует объект <see cref="T:System.Type" /> со стороны службы в качестве объекта, который может активироваться по запросу клиента.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterActivatedServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedServiceType (System.Runtime.Remoting.ActivatedServiceTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedServiceType(class System.Runtime.Remoting.ActivatedServiceTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Runtime.Remoting.ActivatedServiceTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterActivatedServiceType (entry As ActivatedServiceTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedServiceType(System::Runtime::Remoting::ActivatedServiceTypeEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.ActivatedServiceTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">Параметры конфигурации для активированного клиентом типа.</param>
        <summary>Регистрирует тип объекта в предоставленном со стороны службы <see cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" /> в качестве типа, который может активироваться по запросу клиента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы создать экземпляр объекта активации клиента на сервере, необходимо знать его <xref:System.Type> и должен быть зарегистрирован на стороне сервера с помощью <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> метод. Чтобы получить прокси для нового экземпляра объекта, активированного клиентом, клиенту необходимо сначала зарегистрировать канал с <xref:System.Runtime.Remoting.Channels.ChannelServices> и затем активировать объект, вызвав `new` или <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType>.  
  
 Чтобы активировать тип активируемого клиентом объекта с `new` ключевое слово, необходимо сначала зарегистрировать тип объекта, используя <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> метод. Вызов <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> метод дает инфраструктуре удаленного расположение удаленного приложения, где `new` попытается создать ее. Если, с другой стороны, вы используете <xref:System.Activator.CreateInstance%2A> метод для создания нового экземпляра объекта активации клиента, то необходимо задать URL-адрес удаленного приложения как параметр, необходима предварительная регистрация на стороне клиента. Для предоставления <xref:System.Activator.CreateInstance%2A> метод URL-адрес сервера, где требуется создать объект, необходимо включить URL-адрес в экземпляр <xref:System.Runtime.Remoting.Activation.UrlAttribute> класса.  
  
 Подробное описание клиентом объектах см. в разделе [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterActivatedServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedServiceType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedServiceType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedServiceType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Тип <see cref="T:System.Type" /> объекта для регистрации.</param>
        <summary>Регистрирует указанный тип объектов, зарегистрированных со стороны службы, в качестве типа, который может быть активирован по запросу клиента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы создать экземпляр объекта активации клиента на сервере, необходимо знать его <xref:System.Type> и должен быть зарегистрирован на стороне сервера с помощью <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> метод. Чтобы получить прокси для нового экземпляра объекта, активированного клиентом, клиенту необходимо сначала зарегистрировать канал с <xref:System.Runtime.Remoting.Channels.ChannelServices> и затем активировать объект, вызвав `new` или <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType>.  
  
 Чтобы активировать тип активируемого клиентом объекта с `new` ключевое слово, необходимо сначала зарегистрировать тип объекта, используя <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> метод. Вызов <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> метод дает инфраструктуре удаленного расположение удаленного приложения, где `new` попытается создать ее. Если, с другой стороны, вы используете <xref:System.Activator.CreateInstance%2A> метод для создания нового экземпляра объекта активации клиента, то необходимо задать URL-адрес удаленного приложения как параметр, необходима предварительная регистрация на стороне клиента. Для предоставления <xref:System.Activator.CreateInstance%2A> метод URL-адрес сервера, где требуется создать объект, необходимо включить URL-адрес в экземпляр <xref:System.Runtime.Remoting.Activation.UrlAttribute> класса.  
  
 Подробное описание клиентом объектах см. в разделе [ &#91; \<topic://cpconClientActivation >&#93;](http://msdn.microsoft.com/library/4a791494-c18a-4711-a5c1-4ab0e49a8f1a).  
  
   
  
## Examples  
 В следующем примере кода показана регистрация типа объекта на сервере как тип, который может быть активирован клиентом. Для клиентского кода, соответствующий коду сервера, см. пример для <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> метод.  
  
 [!code-cpp[RemotingConfiguration.ClientActivation#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CPP/server.cpp#2)]
 [!code-csharp[RemotingConfiguration.ClientActivation#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CS/server.cs#2)]
 [!code-vb[RemotingConfiguration.ClientActivation#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/VB/server.vb#2)]  
  
 В следующем примере кода показан объект службы, зарегистрированный в приведенном выше примере.  
  
 [!code-cpp[RemotingConfiguration.ClientActivation#3](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CPP/service.cpp#3)]
 [!code-csharp[RemotingConfiguration.ClientActivation#3](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CS/service.cs#3)]
 [!code-vb[RemotingConfiguration.ClientActivation#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/VB/service.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterWellKnownClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Регистрирует объект <see cref="T:System.Type" /> со стороны клиента в качестве хорошо известного типа (единственного вызова или одноэлементного множества).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterWellKnownClientType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownClientType (System.Runtime.Remoting.WellKnownClientTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownClientType(class System.Runtime.Remoting.WellKnownClientTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Runtime.Remoting.WellKnownClientTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterWellKnownClientType (entry As WellKnownClientTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownClientType(System::Runtime::Remoting::WellKnownClientTypeEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.WellKnownClientTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">Параметры конфигурации для хорошо известного типа.</param>
        <summary>Регистрирует объект <see cref="T:System.Type" />, записанный в предоставленный <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" /> со стороны клиента в качестве хорошо известного типа, который может быть активирован сервером.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Любой клиент, который знает URI зарегистрированного хорошо известного объекта можно получить прокси для объекта, регистрируя предпочтительный канал <xref:System.Runtime.Remoting.Channels.ChannelServices>и активация объекта путем вызова `new` или <xref:System.Activator.GetObject%2A?displayProperty=nameWithType>. Для активации хорошо известного объекта с `new`, сначала необходимо зарегистрировать тип хорошо известного объекта, на клиентах, использующих <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> метод. Вызов <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> метод дает инфраструктуре удаленного взаимодействия местонахождение удаленного объекта, который позволяет `new` ключевое слово для его создания. Если, с другой стороны, вы используете <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> метода активации хорошо известного объекта, то необходимо задать URL-адрес объекта как аргумент, предварительная регистрация на стороне клиента не требуется.  
  
 Подробное описание хорошо известных объектов см. в разделе [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterWellKnownClientType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownClientType (Type type, string objectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownClientType(class System.Type type, string objectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownClientType(Type ^ type, System::String ^ objectUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="objectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Объект <see cref="T:System.Type" />.</param>
        <param name="objectUrl">Адрес URL хорошо известного объекта.</param>
        <summary>Регистрирует объект <see cref="T:System.Type" /> со стороны клиента в качестве хорошо известного объекта, который может быть активирован на сервере, используя данные параметры для инициализации нового экземпляра класса <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Любой клиент, который знает URI зарегистрированного хорошо известного объекта можно получить прокси для объекта, регистрируя предпочтительный канал <xref:System.Runtime.Remoting.Channels.ChannelServices>и активация объекта путем вызова `new` или <xref:System.Activator.GetObject%2A?displayProperty=nameWithType>. Для активации хорошо известного объекта с `new`, сначала необходимо зарегистрировать тип хорошо известного объекта, на клиентах, использующих <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> метод. Вызов <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> метод дает инфраструктуре удаленного взаимодействия местонахождение удаленного объекта, который позволяет `new` ключевое слово для его создания. Если, с другой стороны, вы используете <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> метода активации хорошо известного объекта, то необходимо задать URL-адрес объекта как аргумент, предварительная регистрация на стороне клиента не требуется.  
  
 Подробное описание хорошо известных объектов см. в разделе [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
   
  
## Examples  
 В следующем примере кода показана регистрация типа объекта со стороны клиента в качестве хорошо известного типа. Для кода сервера, который соответствует представленному коду клиента, см. пример для <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType%2A> метод.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#5)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#5)]
 [!code-vb[RemotingConfiguration.ServerActivation1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#5)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#6)]
[!code-csharp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#6)]
[!code-vb[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#6)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#7)]
[!code-csharp[RemotingConfiguration.ServerActivation1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#7)]
[!code-vb[RemotingConfiguration.ServerActivation1#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterWellKnownServiceType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Регистрирует объект <see cref="T:System.Type" /> со стороны сервера в качестве хорошо известного типа (единственного вызова или одноэлементного множества).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterWellKnownServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownServiceType (System.Runtime.Remoting.WellKnownServiceTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownServiceType(class System.Runtime.Remoting.WellKnownServiceTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Runtime.Remoting.WellKnownServiceTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterWellKnownServiceType (entry As WellKnownServiceTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownServiceType(System::Runtime::Remoting::WellKnownServiceTypeEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.WellKnownServiceTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">Параметры конфигурации для хорошо известного типа.</param>
        <summary>Регистрирует объект <see cref="T:System.Type" />, записанный в предоставленном <see cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" /> со стороны службы в качестве хорошо известного типа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Любой клиент, который знает URI зарегистрированного хорошо известного объекта можно получить прокси для объекта, регистрируя предпочтительный канал <xref:System.Runtime.Remoting.Channels.ChannelServices>и активация объекта путем вызова `new` или <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> метод. Для активации хорошо известного объекта с `new`, сначала необходимо зарегистрировать тип хорошо известного объекта, на клиентах, использующих <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> метод. Вызов <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> метод дает инфраструктуре удаленного взаимодействия местонахождение удаленного объекта, который позволяет `new` ключевое слово для его создания. Если, с другой стороны, вы используете <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> метода активации хорошо известного объекта, то необходимо задать URL-адрес объекта как аргумент, предварительная регистрация на стороне клиента не требуется.  
  
 Когда сервер получает вызов, .NET Framework извлекает URI из сообщения, исследует таблицы удаленного доступа, чтобы найти ссылку для объекта, который соответствует URI и создает экземпляр объекта, при необходимости, передавая вызов метода объекта. Если в качестве объекта <xref:System.Runtime.Remoting.WellKnownObjectMode.SingleCall>, он будет уничтожен после завершения вызова метода. Новый экземпляр объекта создается для каждого вызываемого метода. Единственное различие между <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> и `new` заключается в первый из них позволяет указать URL-адрес в качестве параметра, а последний получает URL-адрес из конфигурации.  
  
 В процессе регистрации экземпляр удаленного объекта не создается. Это происходит, когда клиент пытается вызвать метод в объект и активирует объект на стороне клиента только.  
  
 Подробное описание хорошо известных объектов см. в разделе [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef2/CPP/example.cpp#2)]
 [!code-csharp[CreateObjRef2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef2/CS/example.cs#2)]
 [!code-vb[CreateObjRef2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CreateObjRef2/VB/example.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterWellKnownServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownServiceType (Type type, string objectUri, System.Runtime.Remoting.WellKnownObjectMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownServiceType(class System.Type type, string objectUri, valuetype System.Runtime.Remoting.WellKnownObjectMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownServiceType(Type ^ type, System::String ^ objectUri, System::Runtime::Remoting::WellKnownObjectMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="objectUri" Type="System.String" />
        <Parameter Name="mode" Type="System.Runtime.Remoting.WellKnownObjectMode" />
      </Parameters>
      <Docs>
        <param name="type">Объект <see cref="T:System.Type" />.</param>
        <param name="objectUri">URI-объект.</param>
        <param name="mode">Регистрируется режим активации типа хорошо известного объекта. (См. раздел <see cref="T:System.Runtime.Remoting.WellKnownObjectMode" />).</param>
        <summary>Регистрирует объект <see cref="T:System.Type" /> со стороны клиента в качестве хорошо известного типа, используя параметры, заданные для инициализации нового экземпляра класса <see cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Любой клиент, который знает URI зарегистрированного хорошо известного объекта можно получить прокси для объекта, регистрируя предпочтительный канал <xref:System.Runtime.Remoting.Channels.ChannelServices>и активация объекта путем вызова `new` или <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> метод. Для активации хорошо известного объекта с `new`, сначала необходимо зарегистрировать тип хорошо известного объекта, на клиентах, использующих <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> метод. Вызов <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> метод дает инфраструктуре удаленного взаимодействия местонахождение удаленного объекта, который позволяет `new` ключевое слово для его создания. Если, с другой стороны, вы используете <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> метода активации хорошо известного объекта, то необходимо задать URL-адрес объекта как аргумент, предварительная регистрация на стороне клиента не требуется.  
  
 Когда сервер получает вызов, .NET Framework извлекает URI из сообщения, исследует таблицы удаленного доступа, чтобы найти ссылку для объекта, который соответствует URI и создает экземпляр объекта, при необходимости, передавая вызов метода объекта. Если в качестве объекта <xref:System.Runtime.Remoting.WellKnownObjectMode.SingleCall>, он будет уничтожен после завершения вызова метода. Новый экземпляр объекта создается для каждого вызываемого метода. Единственное различие между <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> и `new` заключается в первый из них позволяет указать URL-адрес в качестве параметра, а последний получает URL-адрес из конфигурации.  
  
 В процессе регистрации экземпляр удаленного объекта не создается. Это происходит, когда клиент пытается вызвать метод в объект и активирует объект на стороне клиента только.  
  
 Подробное описание хорошо известных объектов см. в разделе [ &#91; \<topic://cpconServerActivation >&#93;](http://msdn.microsoft.com/library/77ded6e2-4ca8-448b-acf2-562d27fd4396).  
  
   
  
## Examples  
 В следующем примере кода показана регистрация типа объекта на сервере в качестве типа хорошо известного объекта. Для клиентского кода, соответствующий коду сервера, см. пример для <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> метод.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#1)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#1)]
 [!code-vb[RemotingConfiguration.ServerActivation1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#1)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#2)]
[!code-csharp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#2)]
[!code-vb[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#2)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#3)]
[!code-csharp[RemotingConfiguration.ServerActivation1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#3)]
[!code-vb[RemotingConfiguration.ServerActivation1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#3)]  
  
 В следующем примере кода показан объект службы, зарегистрированный в приведенном выше примере.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/service.cpp#4)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/service.cs#4)]
 [!code-vb[RemotingConfiguration.ServerActivation1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/service.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">По крайней мере у одного из вызывающих операторов, находящихся в верхней части стека вызовов, отсутствует разрешение на настройку типов и каналов удаленного взаимодействия.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для конфигурации инфраструктуры удаленного взаимодействия. Требовать значение: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Значение разрешения: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
      </Docs>
    </Member>
  </Members>
</Type>