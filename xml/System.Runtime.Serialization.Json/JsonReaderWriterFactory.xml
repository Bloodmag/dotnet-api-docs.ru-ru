<Type Name="JsonReaderWriterFactory" FullName="System.Runtime.Serialization.Json.JsonReaderWriterFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c0092286e389e04d7f227b072971845d72f42e71" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class JsonReaderWriterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonReaderWriterFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonReaderWriterFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonReaderWriterFactory abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1d489-101">Produces instances of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <see cref="T:System.Xml.XmlDictionaryWriter" /> that can map an XML Infoset to JSON and write JSON-encoded data to a stream.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1d489-101">Produces instances of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <see cref="T:System.Xml.XmlDictionaryWriter" /> that can map an XML Infoset to JSON and write JSON-encoded data to a stream.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[indigo1](~/includes/indigo1-md.md)]<span data-ttu-id="1d489-102"> обрабатывает сообщения JSON, используя сопоставление данных JSON и набора сведений XML.</span><span class="sxs-lookup"><span data-stu-id="1d489-102"> processes JSON messages using a mapping between JSON data and the XML Infoset.</span></span> <span data-ttu-id="1d489-103">Как правило, это сопоставление скрыто от просмотра.</span><span class="sxs-lookup"><span data-stu-id="1d489-103">Normally, this mapping is hidden from view.</span></span> <span data-ttu-id="1d489-104">Однако в некоторых сложных случаях может потребоваться вручную выполнить преобразование между JSON и XML.</span><span class="sxs-lookup"><span data-stu-id="1d489-104">However, in some advanced scenarios it may be necessary to manually convert between JSON and XML.</span></span> <span data-ttu-id="1d489-105">При этом для создания необходимых средств чтения и записи XML может использоваться класс <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory>.</span><span class="sxs-lookup"><span data-stu-id="1d489-105">In this case, the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> class can be used to create the necessary XML readers and writers.</span></span> <span data-ttu-id="1d489-106">Обратите внимание, что каждый элемент набора сведений XML может быть сопоставлен нотации JSON.</span><span class="sxs-lookup"><span data-stu-id="1d489-106">Note that not every XML Infoset element can be mapped to JSON.</span></span> [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="1d489-107"> сопоставление, в разделе [как: сериализации и десериализации данных JSON](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span><span class="sxs-lookup"><span data-stu-id="1d489-107"> mapping, see [How to: Serialize and Deserialize JSON Data](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateJsonReader">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1d489-108">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map - streams or buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-108">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map - streams or buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d489-109">Каждая из перегрузок использует <xref:System.Xml.XmlDictionaryReaderQuotas> для предотвращения атак отказа в обслуживании при чтении недостоверных данных.</span><span class="sxs-lookup"><span data-stu-id="1d489-109">Each of the overloads uses a <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service (DoS) attacks when reading untrusted data.</span></span> [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="1d489-110"> с помощью <xref:System.Xml.XmlDictionaryReaderQuotas> для предотвращения атак отказа в обслуживании, при чтении ненадежных данных см. в разделе [вопросы безопасности для данных](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="1d489-110"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1d489-111">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-111">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="1d489-112">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-112">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d489-113">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-113">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d489-114">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can process JavaScript Object Notation (JSON) data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-114">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can process JavaScript Object Notation (JSON) data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d489-115">Эта перегрузка не принимает параметр <xref:System.Text.Encoding>.</span><span class="sxs-lookup"><span data-stu-id="1d489-115">This overload does not accept an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="1d489-116">Кодировка (UTF-8, Юникод или Юникод с обратным порядком байтов) обнаруживается автоматически при чтении данных.</span><span class="sxs-lookup"><span data-stu-id="1d489-116">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="1d489-117"> с помощью <xref:System.Xml.XmlDictionaryReaderQuotas> для предотвращения атак отказа в обслуживании, при чтении ненадежных данных см. в разделе [вопросы безопасности для данных](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="1d489-117"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="1d489-118">The input <see cref="T:System.IO.Stream" /> from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-118">The input <see cref="T:System.IO.Stream" /> from which to read.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="1d489-119">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-119">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d489-120">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-120">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d489-121">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-121">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d489-122">Эта перегрузка не принимает параметр <xref:System.Text.Encoding>.</span><span class="sxs-lookup"><span data-stu-id="1d489-122">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="1d489-123">Кодировка (UTF-8, Юникод или Юникод с обратным порядком байтов) обнаруживается автоматически при чтении данных.</span><span class="sxs-lookup"><span data-stu-id="1d489-123">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="1d489-124"> с помощью <xref:System.Xml.XmlDictionaryReaderQuotas> для предотвращения атак отказа в обслуживании, при чтении ненадежных данных см. в разделе [вопросы безопасности для данных](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="1d489-124"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), offset As Integer, count As Integer, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1d489-125">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-125">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="1d489-126">Starting position from which to read in <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-126">Starting position from which to read in <c>buffer</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1d489-127">Number of bytes that can be read from <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-127">Number of bytes that can be read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="1d489-128">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-128">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d489-129">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-129">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d489-130">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-130">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d489-131">Эта перегрузка не принимает параметр <xref:System.Text.Encoding>.</span><span class="sxs-lookup"><span data-stu-id="1d489-131">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="1d489-132">Кодировка (UTF-8, Юникод или Юникод с обратным порядком байтов) обнаруживается автоматически при чтении данных.</span><span class="sxs-lookup"><span data-stu-id="1d489-132">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="1d489-133"> с помощью <xref:System.Xml.XmlDictionaryReaderQuotas> для предотвращения атак отказа в обслуживании, при чтении ненадежных данных см. в разделе [вопросы безопасности для данных](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="1d489-133"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="1d489-134">The input <see cref="T:System.IO.Stream" /> from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-134">The input <see cref="T:System.IO.Stream" /> from which to read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="1d489-135">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-135">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span>
          </span>
          <span data-ttu-id="1d489-136">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-136">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="1d489-137">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-137">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <param name="onClose">
          <span data-ttu-id="1d489-138">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-138">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d489-139">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-139">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d489-140">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-140">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="1d489-141"> с помощью <xref:System.Xml.XmlDictionaryReaderQuotas> для предотвращения атак отказа в обслуживании, при чтении ненадежных данных см. в разделе [вопросы безопасности для данных](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="1d489-141"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1d489-142">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-142">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="1d489-143">Starting position from which to read in <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-143">Starting position from which to read in <c>buffer</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1d489-144">Number of bytes that can be read from <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-144">Number of bytes that can be read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="1d489-145">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-145">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span>
          </span>
          <span data-ttu-id="1d489-146">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-146">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="1d489-147">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-147">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <param name="onClose">
          <span data-ttu-id="1d489-148">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-148">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span>
          </span>
          <span data-ttu-id="1d489-149">The default value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-149">The default value is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d489-150">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-150">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d489-151">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-151">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="1d489-152"> с помощью <xref:System.Xml.XmlDictionaryReaderQuotas> для предотвращения атак отказа в обслуживании, при чтении ненадежных данных см. в разделе [вопросы безопасности для данных](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="1d489-152"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateJsonWriter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1d489-153">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-153">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d489-154">Статический метод <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> возвращает экземпляр <xref:System.Xml.XmlDictionaryWriter>, который может сопоставлять набор сведений XML потоку JSON.</span><span class="sxs-lookup"><span data-stu-id="1d489-154">The <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> static method returns an instance of an <xref:System.Xml.XmlDictionaryWriter> that can map an XML Infoset to a JSON stream.</span></span> <span data-ttu-id="1d489-155">Не существует гарантии, что объект <xref:System.Xml.XmlDictionaryWriter> создает правильные данные JSON.</span><span class="sxs-lookup"><span data-stu-id="1d489-155">The <xref:System.Xml.XmlDictionaryWriter> is not guaranteed to produce valid JSON.</span></span> <span data-ttu-id="1d489-156">Если этот объект используется способом, который не поддерживается сопоставлением JSON-XML, он может либо вызвать исключение, либо записать неверный документ JSON.</span><span class="sxs-lookup"><span data-stu-id="1d489-156">If it is used in a way not supported by the JSON-XML mapping, it may either throw an exception or write an invalid JSON document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="1d489-157">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-157">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d489-158">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-158">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d489-159">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-159">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d489-160">Кодировка символов по умолчанию — UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1d489-160">The default character encoding is UTF-8.</span></span> <span data-ttu-id="1d489-161">Когда модуль записи закрывается, поток также закрывается.</span><span class="sxs-lookup"><span data-stu-id="1d489-161">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="1d489-162">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-162">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="1d489-163">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-163">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="1d489-164">The default encoding is UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-164">The default encoding is UTF-8.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d489-165">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-165">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d489-166">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-166">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d489-167">Когда модуль записи закрывается, поток также закрывается.</span><span class="sxs-lookup"><span data-stu-id="1d489-167">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="1d489-168">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-168">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="1d489-169">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-169">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="1d489-170">The default encoding is UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-170">The default encoding is UTF-8.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="1d489-171">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-171">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1d489-172">The default value is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-172">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d489-173">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-173">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d489-174">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-174">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="1d489-175">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-175">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="1d489-176">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-176">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="1d489-177">The default encoding is UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-177">The default encoding is UTF-8.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="1d489-178">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-178">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1d489-179">The default value is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-179">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <param name="indent">
          <span data-ttu-id="1d489-180">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-180">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d489-181">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-181">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d489-182">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-182">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent, System::String ^ indentChars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
        <Parameter Name="indentChars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="1d489-183">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-183">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="1d489-184">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-184">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="1d489-185">The default encoding is UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-185">The default encoding is UTF-8.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="1d489-186">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-186">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1d489-187">The default value is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-187">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <param name="indent">
          <span data-ttu-id="1d489-188">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-188">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="indentChars">
          <span data-ttu-id="1d489-189">The string used to indent each level.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-189">The string used to indent each level.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d489-190">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-190">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d489-191">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d489-191">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>