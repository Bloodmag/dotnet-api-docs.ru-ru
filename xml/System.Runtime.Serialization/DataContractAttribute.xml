<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataContractAttribute.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51b056ba93491521e418681a1e1791c96b415530e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b056ba93491521e418681a1e1791c96b415530e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Specifies that the type defines or implements a data contract and is serializable by a serializer, such as the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</source>
          <target state="translated">Указывает, что тип определяет или реализует контракт данных и может быть сериализован сериализатором, таким как <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>To make their type serializable, type authors must define a data contract for their type.</source>
          <target state="translated">Чтобы сделать тип сериализуемым, авторы типа должны определить для него контракт данных.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute to types (classes, structures, or enumerations) that are used in serialization and deserialization operations by the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</source>
          <target state="translated">Применяйте атрибут <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> к типам (классам, структурам или перечислениям), используемым в операциях сериализации и десериализации средством <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If you send or receive messages by using the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> infrastructure, you should also apply the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to any classes that hold and manipulate data sent in messages.</source>
          <target state="translated">Если отправка и получение сообщений выполняются с помощью инфраструктуры <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>, следует применять атрибут <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> ко всем классам, которые хранят и управляют содержащимися в сообщениях данными.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> data contracts, see <bpt id="p1">[</bpt>Using Data Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> контрактах данных см. в разделе <bpt id="p1">[</bpt>использование контрактов данных<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You must also apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to any field, property, or event that holds values you want to serialize.</source>
          <target state="translated">Также необходимо применить атрибут <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> ко всем полям, свойствам или событиям, содержащим сериализуемые значения.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>By applying the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>, you explicitly enable the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> to serialize and deserialize the data.</source>
          <target state="translated">Применение атрибута <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> явно разрешает <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> выполнять сериализацию и десериализацию данных.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to private fields.</source>
          <target state="translated">Атрибут <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> можно применять к закрытым полям.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Be aware that the data returned by the field (even if it is private) is serialized and deserialized, and thus can be viewed or intercepted by a malicious user or process.</source>
          <target state="translated">Необходимо помнить, что возвращаемые полем данные (даже если поле закрытое) сериализуются и десериализуются, и, следовательно, могут быть просмотрены или перехвачены злоумышленником или процессом.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> data contracts, see the topics listed in <bpt id="p1">[</bpt>Using Data Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> контракты данных, см. в разделах, перечисленных в <bpt id="p1">[</bpt>использование контрактов данных<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Data Contracts</source>
          <target state="translated">Контракты данных</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A <bpt id="p1">*</bpt>data contract<ept id="p1">*</ept> is an abstract description of a set of fields with a name and data type for each field.</source>
          <target state="translated">Объект <bpt id="p1">*</bpt>контракт данных<ept id="p1">*</ept> — это абстрактное описание набора полей с именем и типом данных для каждого поля.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The data contract exists outside of any single implementation to allow services on different platforms to interoperate.</source>
          <target state="translated">Контракт данных существует вне любых реализаций, что делает возможным взаимодействие служб на разных платформах.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>As long as the data passed between the services conforms to the same contract, all the services can process the data.</source>
          <target state="translated">Поскольку данные, передаваемые между службами, соответствуют одному и тому же контракту, все службы могут обработать данные.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>This processing is also known as a <bpt id="p1">*</bpt>loosely coupled system<ept id="p1">*</ept>.</source>
          <target state="translated">Этот процесс называется также <bpt id="p1">*</bpt>слабо связанная система<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract is also similar to an interface in that the contract specifies how data must be delivered so that it can be processed by an application.</source>
          <target state="translated">Контракт данных похож на интерфейс в том, что контракт указывает, каким образом должны подаваться данные, чтобы они могли быть обработаны приложением.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>For example, the data contract may call for a data type named "Person" that has two text fields, named "FirstName" and "LastName".</source>
          <target state="translated">Например, контракт данных может вызвать тип данных "Person", имеющий два текстовых поля "FirstName" и "LastName".</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>To create a data contract, apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to the class and apply the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to any fields or properties that must be serialized.</source>
          <target state="translated">Чтобы создать контракт данных, примените атрибут <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> к классу и атрибут <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> ко всем полям или свойствам, которые требуется сериализовать.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>When serialized, the data conforms to the data contract that is implicitly built into the type.</source>
          <target state="translated">После сериализации данные соответствуют контракту данных, неявно встроенному в этот тип.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract differs significantly from an actual interface in its inheritance behavior.</source>
          <target state="translated">Поведение контракта данных при наследовании существенно отличается от поведения реального интерфейса.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Interfaces are inherited by any derived types.</source>
          <target state="translated">Интерфейсы наследуются любыми производными типами.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>When you apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to a base class, the derived types do not inherit the attribute or the behavior.</source>
          <target state="translated">Если применить атрибут <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> к базовому классу, производные типы не будут наследовать атрибут или поведение.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>However, if a derived type has a data contract, the data members of the base class are serialized.</source>
          <target state="translated">Но если у производного типа есть контракт данных, элементы данных базового класса сериализуются.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>However, you must apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to new members in a derived class to make them serializable.</source>
          <target state="translated">Однако необходимо применить атрибут <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> к новым членам производного класса, чтобы сделать их сериализуемыми.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>XML Schema Documents and the SvcUtil Tool</source>
          <target state="translated">Документы схемы XML и средство SvcUtil</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If you are exchanging data with other services, you must describe the data contract.</source>
          <target state="translated">При обмене данными с другими службами необходимо описать контракт данных.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>For the current version of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>, an XML schema can be used to define data contracts.</source>
          <target state="translated">Чтобы определить контракты данных для текущей версии <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>, можно использовать схему XML.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>(Other forms of metadata/description could be used for the same purpose.) To create an XML schema from your application, use the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> with the <bpt id="p2">**</bpt>/dconly<ept id="p2">**</ept> command line option.</source>
          <target state="translated">(Для этой же цели могут использоваться другие формы описания/метаданных.) Чтобы создать XML-схемы из приложения, используйте <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> с <bpt id="p2">**</bpt>/dconly<ept id="p2">**</ept> параметр командной строки.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>When the input to the tool is an assembly, by default, the tool generates a set of XML schemas that define all the data contract types found in that assembly.</source>
          <target state="translated">Если на вход средства передана сборка, по умолчанию средство создает набор схем XML, определяющий все типы контрактов данных этой сборки.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Conversely, you can also use the Svcutil.exe tool to create Visual Basic or C# class definitions that conform to the requirements of XML schemas that use constructs that can be expressed by data contracts.</source>
          <target state="translated">И наоборот, можно использовать средство Svcutil.exe для создания определений классов Visual Basic или C#, соответствующих требованиям схем XML, использующих конструкторы, которые могут быть выражены посредством контрактов данных.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>In this case, the <bpt id="p1">**</bpt>/dconly<ept id="p1">**</ept> command line option is not required.</source>
          <target state="translated">В этом случае <bpt id="p1">**</bpt>/dconly<ept id="p1">**</ept> параметр командной строки не является обязательным.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If the input to the Svcutil.exe tool is an XML schema, by default, the tool creates a set of classes.</source>
          <target state="translated">Если на вход средства Svcutil.exe передана схема XML, по умолчанию средство создает набор классов.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If you examine those classes, you find that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> has been applied.</source>
          <target state="translated">При рассмотрении этих классов можно заметить, что был применен атрибут <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can use those classes to create a new application to process data that must be exchanged with other services.</source>
          <target state="translated">Эти классы можно использовать для создания нового приложения обработки данных, которыми требуется обмениваться с другими службами.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can also run the tool against an endpoint that returns a Web Services Description Language (WSDL) document to automatically generate the code and configuration to create an <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client.</source>
          <target state="translated">Также можно запустить средство для конечной точки, возвращающей документ на языке описания служб (WSDL), чтобы автоматически создать код и конфигурацию для создания клиента <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The generated code includes types that are marked with the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</source>
          <target state="translated">Созданный код включает типы, отмеченные атрибутом <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Reusing Existing Types</source>
          <target state="translated">Повторное использование существующих типов</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract has two basic requirements: a stable name and a list of members.</source>
          <target state="translated">Существует два основных требования контракта данных: наличие постоянного имени и наличие списка элементов.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The stable name consists of the namespace uniform resource identifier (URI) and the local name of the contract.</source>
          <target state="translated">Постоянное имя состоит из универсального кода ресурса (URI) пространства имен и локального имени контракта.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>By default, when you apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to a class, it uses the class name as the local name and the class's namespace (prefixed with "<ph id="ph2">http://schemas.datacontract.org/2004/07/</ph>") as the namespace URI.</source>
          <target state="translated">По умолчанию при применении <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> к классу он использует имя класса, как локальное имя и пространство имен класса (с префиксом «<ph id="ph2">http://schemas.datacontract.org/2004/07/</ph>») как URI пространства имен.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can override the defaults by setting the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> properties.</source>
          <target state="translated">Значения по умолчанию можно переопределить, задав свойства <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can also change the namespace by applying the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ContractNamespaceAttribute&gt;</ph> to the namespace.</source>
          <target state="translated">Можно также изменить пространство имен, применив атрибут <ph id="ph1">&lt;xref:System.Runtime.Serialization.ContractNamespaceAttribute&gt;</ph> к пространству имен.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Use this capability when you have an existing type that processes data exactly as you require but has a different namespace and class name from the data contract.</source>
          <target state="translated">Используйте эту возможность, когда существует тип, обрабатывающий данные необходимым образом, но его пространство имен и имя класса отличаются от контракта данных.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>By overriding the default values, you can reuse your existing type and have the serialized data conform to the data contract.</source>
          <target state="translated">Переопределив значения по умолчанию, можно повторно использовать этот существующий тип и обеспечить соответствие сериализованных данных контракту данных.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>In any code, you can use the word <ph id="ph1">`DataContract`</ph> instead of the longer <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</source>
          <target state="translated">В любом коде можно использовать слово <ph id="ph1">`DataContract`</ph> вместо длинного <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Versioning</source>
          <target state="translated">Управление версиями</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract can also accommodate later versions of itself.</source>
          <target state="translated">Контракт данных также может размещать свои более поздние версии.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>That is, when a later version of the contract includes extra data, that data is stored and returned to a sender untouched.</source>
          <target state="translated">То есть в случае, когда более поздняя версия контракта включает дополнительные данные, эти данные хранятся и возвращаются отправителю без изменений.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>To do this, implement the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface.</source>
          <target state="translated">Для этого реализуйте интерфейс <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> versioning, see <bpt id="p1">[</bpt>Data Contract Versioning<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-versioning.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> Управление версиями, в разделе <bpt id="p1">[</bpt>управление версиями контракта данных<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-versioning.md)</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The following example serializes and deserializes a class named <ph id="ph1">`Person`</ph> to which the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> has been applied.</source>
          <target state="translated">В приведенном ниже примере выполняется сериализация и десериализация класса <ph id="ph1">`Person`</ph>, к которому был применен атрибут <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Note that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> properties have been set to values that override the default settings.</source>
          <target state="translated">Обратите внимание, что свойствам <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> были заданы значения, переопределяющие параметры по умолчанию.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /&gt;</ph> has been explicitly set.</source>
          <target state="translated">Получает значение, указывающее, был ли объект <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /&gt;</ph> задан явно.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the name has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Возвращает <ph id="ph1">&lt;see langword="true" /&gt;</ph> Если это имя было задано явно; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /&gt;</ph> has been explicitly set.</source>
          <target state="translated">Получает значение, указывающее, был ли объект <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /&gt;</ph> задан явно.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the namespace has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Возвращает <ph id="ph1">&lt;see langword="true" /&gt;</ph> Если пространство имен было задано явно; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source>Gets or sets a value that indicates whether to preserve object reference data.</source>
          <target state="translated">Возвращает или задает значение, указывающее, следует ли сохранять данные ссылки на объект.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to keep object reference data using standard XML; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если требуется сохранить данные ссылки на объект с помощью стандартного XML; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source>Use the <ph id="ph1">`IsReference`</ph> property to instruct the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> to insert XML constructs that preserve object reference information.</source>
          <target state="translated">Используйте свойство <ph id="ph1">`IsReference`</ph>, чтобы задать <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> вставлять конструкции XML, сохраняющие сведения о ссылках на объект.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /&gt;</ph> has been explicitly set.</source>
          <target state="translated">Получает значение, указывающее, был ли объект <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /&gt;</ph> задан явно.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reference has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Если ссылка была задана явно; в противном случае <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>Gets or sets the name of the data contract for the type.</source>
          <target state="translated">Возвращает или задает имя для контракта данных типа.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The local name of a data contract.</source>
          <target state="translated">Локальное имя контракта данных.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The default is the name of the class that the attribute is applied to.</source>
          <target state="translated">Значение по умолчанию — это имя класса, к которому применяется атрибут.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> property is used to give a name to a data contract, which is the name of the type in XML schema.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> используется для задания имени контракту данных, которое является именем типа в схеме XML.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Data Contract Names<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-names.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Имена контрактов данных<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-names.md)</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>By default, the name of a data contract is the name of the type that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> is applied to.</source>
          <target state="translated">По умолчанию имя контракта данных — это имя типа, к которому применяется атрибут <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>However, there may be reasons to change this default name.</source>
          <target state="translated">Однако могут существовать причины изменить это имя по умолчанию.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>One reason is to allow an existing type to process data that must conform to an existing data contract.</source>
          <target state="translated">Одной из них может быть необходимость разрешить существующему типу обрабатывать данные, которые должны соответствовать существующему контракту данных.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>For example, there exists a type named <ph id="ph1">`Person`</ph> but the data contract, embodied in an XML schema, requires that the name be <ph id="ph2">`Customer`</ph>.</source>
          <target state="translated">Например, существует тип <ph id="ph1">`Person`</ph>, но для контракта данных, встроенного в схему XML, требуется, чтобы имя было <ph id="ph2">`Customer`</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The contract can be satisfied by setting the property value to <ph id="ph1">`Customer`</ph>.</source>
          <target state="translated">Контракт можно выполнить, задав значению свойства значение <ph id="ph1">`Customer`</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>A second reason is to allow the generation of names that are invalid as type names.</source>
          <target state="translated">Другой причиной может быть необходимость разрешить создание имен, которые недопустимы в качестве имени типа.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>For example, if a data contract demands a name that is not allowable as a type name, set the property value to that disallowed name.</source>
          <target state="translated">Например, если для контракта данных требуется имя, не разрешенное в качестве имени типа, задайте значению свойства это запрещенное имя.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>For instance, the string "$value" is disallowed as a type name but is allowed as a <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> property value.</source>
          <target state="translated">Например, строку "$value" нельзя использовать в качестве имени типа, но можно использовать как значение свойства <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Gets or sets the namespace for the data contract for the type.</source>
          <target state="translated">Возвращает или задает пространство имен для контракта данных типа.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>The namespace of the contract.</source>
          <target state="translated">Пространство имен контракта.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Use this property to specify a particular namespace if your type must return data that complies with a specific data contract.</source>
          <target state="translated">Используйте это свойство, чтобы задать определенное пространство имен, если тип должен возвращать данные, соответствующие определенному контракту данных.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>For the data to be successfully transmitted, the name of the data in a data contract must be the same in both the client and the server.</source>
          <target state="translated">Для успешной передачи данных имя данных в контракте данных должно быть одинаковым и на клиенте, и на сервере.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Visual Basic projects, by default, add a prefix to the namespace defined in each file (called the "root namespace," named after the project).</source>
          <target state="translated">Проекты Visual Basic по умолчанию, добавьте префикс для пространства имен, определенные в каждом файле (называется «корневое пространство имен,» с именем проекта).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Adding this prefix causes the client and server namespaces to be different for the same type.</source>
          <target state="translated">После добавления префикса пространства имен клиента и сервера для одного и того же типа становятся различными.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>The solution is to set the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> property to "", or to explicitly set the data contract namespace in this property.</source>
          <target state="translated">Решением является установка <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> значение «», или явно задать пространство имен контракта данных в этом свойстве.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>