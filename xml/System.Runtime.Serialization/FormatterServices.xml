<Type Name="FormatterServices" FullName="System.Runtime.Serialization.FormatterServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="88dacb96220c0e1ad5cf9b9bc8e78fba008e3cc6" />
    <Meta Name="ms.sourcegitcommit" Value="81d387351cc43c342755705908f4a5eb8af153d3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/04/2018" />
    <Meta Name="ms.locfileid" Value="34568172" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FormatterServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed FormatterServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.FormatterServices" />
  <TypeSignature Language="VB.NET" Value="Public Class FormatterServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormatterServices abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет статические методы, упрощающие реализацию <see cref="T:System.Runtime.Serialization.Formatter" /> для сериализации. Этот класс не наследуется.</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Runtime.Serialization.Formatter" />
  </Docs>
  <Members>
    <Member MemberName="CheckTypeSecurity">
      <MemberSignature Language="C#" Value="public static void CheckTypeSecurity (Type t, System.Runtime.Serialization.Formatters.TypeFilterLevel securityLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckTypeSecurity(class System.Type t, valuetype System.Runtime.Serialization.Formatters.TypeFilterLevel securityLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CheckTypeSecurity (t As Type, securityLevel As TypeFilterLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CheckTypeSecurity(Type ^ t, System::Runtime::Serialization::Formatters::TypeFilterLevel securityLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="securityLevel" Type="System.Runtime.Serialization.Formatters.TypeFilterLevel" />
      </Parameters>
      <Docs>
        <param name="t">
          <see cref="T:System.Type" /> для проверки возможности десериализации.</param>
        <param name="securityLevel">Значение свойства <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />.</param>
        <summary>Определяет, возможно ли десериализовать заданный <see cref="T:System.Type" /> со значением свойства <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />, равным <see langword="Low" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод служит для определения ли указанный тип может быть десериализованный при <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel> свойству `Low`.  
  
 Удаленное взаимодействие .NET framework обеспечивает два уровня автоматической десериализации <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low> и <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full>. <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low> помогает защититься от атак десериализации путем десериализации только типы, связанные с базовые функции удаленного взаимодействия. Уровень десериализации <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full> поддерживает автоматическую десериализацию всех типов, которые поддерживаются удаленным взаимодействием во всех ситуациях. Дополнительные сведения о платформе.NET Framework типов удаленного взаимодействия <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low> и <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full> поддержки см. в разделе [ &#91; \<topic://cpconAutomaticDeserializationInNETRemoting >&#93;](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b).  
  
   
  
## Examples  
 В этом примере показано, как использовать <xref:System.Runtime.Serialization.FormatterServices> класс для сериализации или десериализации объекта, где базовый класс не реализует <xref:System.Runtime.Serialization.ISerializable> , не создавая производного класса.  
  
 [!code-cpp[FormatterServices#1](~/samples/snippets/cpp/VS_Snippets_Remoting/FormatterServices/cpp/FormatterServices.cpp#1)]
 [!code-csharp[FormatterServices#1](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices/CS/FormatterServices.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Параметр <paramref name="t" /> является дополнительным типом и его невозможно сериализовать, когда свойство <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> имеет значение <see langword="Low" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public static object[] GetObjectData (object obj, System.Reflection.MemberInfo[] members);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetObjectData(object obj, class System.Reflection.MemberInfo[] members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectData (obj As Object, members As MemberInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetObjectData(System::Object ^ obj, cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ members);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]" />
      </Parameters>
      <Docs>
        <param name="obj">Объект, записываемый в форматер.</param>
        <param name="members">Элементы, извлекаемые из объекта.</param>
        <summary>Извлекает данные из заданного объекта и возвращает их в виде массива объектов.</summary>
        <returns>Массив <see cref="T:System.Object" />, содержащий данные, сохраненные в <paramref name="members" /> и связанные с <paramref name="obj" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для каждого указанного члена `members` массива <xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A> метод извлекает значение, связанное с `obj` объекта и возвращает его. Длина возвращаемого массива является таким же, как длина `members` массива.  
  
   
  
## Examples  
 Следующий пример создает экземпляр класса Book и задает значения полей в экземпляре. Код возвращает сведения о типа с помощью <xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A> метод. Код копирует данные экземпляра в массив объектов с помощью <xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A> метод. Неинициализированный новый экземпляр класса создается с помощью <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> метод. Наконец, данные из первого экземпляра копируется в второго экземпляра, используя <xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A> метод.  
  
 [!code-csharp[FormatterServices_PopulateObjects#1](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices_PopulateObjects/cs/Populate.cs#1)]
 [!code-vb[FormatterServices_PopulateObjects#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/FormatterServices_PopulateObjects/vb/Populate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="obj" /> или параметра <paramref name="members" /> — <see langword="null" />.  Элемент <paramref name="members" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Элемент <paramref name="members" /> не представляет поле.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для предоставления служб сериализации. Соответствующее перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetSafeUninitializedObject">
      <MemberSignature Language="C#" Value="public static object GetSafeUninitializedObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSafeUninitializedObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSafeUninitializedObject(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Тип создаваемого объекта.</param>
        <summary>Создает новый экземпляр заданного типа объекта.</summary>
        <returns>Обнуленный объект заданного типа.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку новый экземпляр объекта инициализируется нулевым значением, а конструкторы не запущены, объект может не представлять состояние, которое считается допустимым в этом объекте. <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> следует использовать только для десериализации, когда пользователь намеревается немедленно заполнить все поля. Он не создает неинициализированная строка, так как создание пустого экземпляра неизменного типа бессмысленно.  
  
 <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> Преобразует все уровне класса [требования связывания](~/docs/framework/misc/link-demands.md) для [требования](http://msdn.microsoft.com/library/e5283e28-2366-4519-b27d-ef5c1ddc1f48) для убедитесь, что все прямые и непрямые вызывающие объекты имеют разрешения, указанные в требовании. Используйте <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> для повышения уровня безопасности при десериализации из частично доверенного источника. Для повышения производительности в сценариях с полным доверием использовать <xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Параметр <paramref name="type" /> недопустимого типа общеязыковой среды выполнения.</exception>
        <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для предоставления служб сериализации. Связанные перечисления: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializableMembers">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает все сериализуемые элементы для определенного класса.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializableMembers">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo[] GetSerializableMembers (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo[] GetSerializableMembers(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetSerializableMembers(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Сериализуемый тип.</param>
        <summary>Возвращает все сериализуемые элементы для класса заданного <see cref="T:System.Type" />.</summary>
        <returns>Массив типа <see cref="T:System.Reflection.MemberInfo" /> непереходных нестатических элементов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило сериализуемые члены класса являются непереходного, нестатических членов, например поля и свойства. Для включения свойства должны иметь свойства getter и setter. Класс, реализующий <xref:System.Runtime.Serialization.ISerializable> интерфейс или имеет сериализации символов-заместителей не требуется сериализовывать все эти элементы, или он может сериализовать дополнительные члены.  

Поскольку `GetSerializableMembers` вызовы метода <xref:System.Type.GetFields%2A?displayProperty=nameWithType> метод, он не возвращает поля в определенном порядке, например алфавитном или в порядке объявления. Код не должен зависеть от порядка, в котором возвращаются поля.  
   
## Examples  
 В следующем примере вызывается <xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A> метод из реализации <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A?displayProperty=nameWithType> метод.   
  
 [!code-cpp[FormatterServices#2](~/samples/snippets/cpp/VS_Snippets_Remoting/FormatterServices/cpp/FormatterServices.cpp#2)]
 [!code-csharp[FormatterServices#2](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices/CS/FormatterServices.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для предоставления служб сериализации. Соответствующее перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Reflection.MemberInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetSerializableMembers">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo[] GetSerializableMembers (Type type, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo[] GetSerializableMembers(class System.Type type, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetSerializableMembers(Type ^ type, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="type">Сериализуемый или клонируемый тип.</param>
        <param name="context">Контекст, в котором происходит сериализация.</param>
        <summary>Возвращает все сериализуемые элементы для класса заданного типа <see cref="T:System.Type" /> и в предоставленном <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
        <returns>Массив типа <see cref="T:System.Reflection.MemberInfo" /> непереходных нестатических элементов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило сериализуемые члены класса являются непереходного, нестатических членов, например поля и свойства. Для включения свойства должны иметь свойства getter и setter. Класс, реализующий <xref:System.Runtime.Serialization.ISerializable> или имеет сериализации символов-заместителей не требуется сериализовывать все эти элементы, или он может сериализовать дополнительные члены.  
  
Если `context` включает <xref:System.Runtime.Serialization.StreamingContextStates.Clone?displayProperty=nameWithType> значение перечисления временные поля также включаются в <xref:System.Reflection.MemberInfo> массив, возвращаемый этим методом.  

Поскольку `GetSerializableMembers` вызовы метода <xref:System.Type.GetFields%2A?displayProperty=nameWithType> метод, он не возвращает поля в определенном порядке, например алфавитном или в порядке объявления. Код не должен зависеть от порядка, в котором возвращаются поля.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для предоставления служб сериализации. Соответствующее перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Reflection.MemberInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetSurrogateForCyclicalReference">
      <MemberSignature Language="C#" Value="public static System.Runtime.Serialization.ISerializationSurrogate GetSurrogateForCyclicalReference (System.Runtime.Serialization.ISerializationSurrogate innerSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Serialization.ISerializationSurrogate GetSurrogateForCyclicalReference(class System.Runtime.Serialization.ISerializationSurrogate innerSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSurrogateForCyclicalReference (innerSurrogate As ISerializationSurrogate) As ISerializationSurrogate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Serialization::ISerializationSurrogate ^ GetSurrogateForCyclicalReference(System::Runtime::Serialization::ISerializationSurrogate ^ innerSurrogate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISerializationSurrogate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="innerSurrogate" Type="System.Runtime.Serialization.ISerializationSurrogate" />
      </Parameters>
      <Docs>
        <param name="innerSurrogate">Заданный суррогат.</param>
        <summary>Возвращает суррогат сериализации для заданного <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />.</summary>
        <returns>Объект <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> для указанного узла <paramref name="innerSurrogate" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromAssembly">
      <MemberSignature Language="C#" Value="public static Type GetTypeFromAssembly (System.Reflection.Assembly assem, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeFromAssembly(class System.Reflection.Assembly assem, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeFromAssembly (assem As Assembly, name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeFromAssembly(System::Reflection::Assembly ^ assem, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assem" Type="System.Reflection.Assembly" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assem">Сборка, в которой необходимо найти объект.</param>
        <param name="name">Имя объекта.</param>
        <summary>Ведет поиск <see cref="T:System.Type" /> заданного объекта в предоставленном <see cref="T:System.Reflection.Assembly" />.</summary>
        <returns>
          <see cref="T:System.Type" /> именованного объекта.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="assem" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для предоставления служб сериализации. Соответствующее перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Для извлечения сведений отражение на члены типа, которые не видны. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" />.</permission>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetUninitializedObject">
      <MemberSignature Language="C#" Value="public static object GetUninitializedObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetUninitializedObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetUninitializedObject(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Тип создаваемого объекта.</param>
        <summary>Создает новый экземпляр заданного типа объекта.</summary>
        <returns>Обнуленный объект заданного типа.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку новый экземпляр объекта инициализируется нулевым значением, а конструкторы не запущены, объект может не представлять состояние, которое считается допустимым в этом объекте. Текущий метод следует использовать только для десериализации, когда пользователь намеревается немедленно заполнить все поля. Он не создает неинициализированная строка, так как создание пустого экземпляра неизменного типа бессмысленно.  
  
> [!NOTE]
>  Нельзя использовать <xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A> метод для создания экземпляров типов, производных от <xref:System.ContextBoundObject> класса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для предоставления служб сериализации. Соответствующее перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="PopulateObjectMembers">
      <MemberSignature Language="C#" Value="public static object PopulateObjectMembers (object obj, System.Reflection.MemberInfo[] members, object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object PopulateObjectMembers(object obj, class System.Reflection.MemberInfo[] members, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopulateObjectMembers (obj As Object, members As MemberInfo(), data As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PopulateObjectMembers(System::Object ^ obj, cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ members, cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]" />
        <Parameter Name="data" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">Объект для заполнения.</param>
        <param name="members">Массив <see cref="T:System.Reflection.MemberInfo" />, описывающий заполняемые поля и свойства.</param>
        <param name="data">Массив <see cref="T:System.Object" />, задающий значения для каждого заполняемого поля и свойства.</param>
        <summary>Заполняет заданный объект значениями для каждого поля, скопированного из массива данных объектов.</summary>
        <returns>Вновь заполненный объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если элемент в `data` — `null`, <xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A> ничего не записывают к этому полю.  
  
   
  
## Examples  
 Следующий пример создает экземпляр класса Book и задает значения полей в экземпляре. Код возвращает сведения о типа с помощью <xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A> метод. Код копирует данные экземпляра в массив объектов с помощью <xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A> метод. Неинициализированный новый экземпляр класса создается с помощью <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> метод. Наконец, данные из первого экземпляра копируется в второго экземпляра, используя <xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A> метод.  
  
 [!code-csharp[FormatterServices_PopulateObjects#1](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices_PopulateObjects/cs/Populate.cs#1)]
 [!code-vb[FormatterServices_PopulateObjects#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/FormatterServices_PopulateObjects/vb/Populate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="obj" />, <paramref name="members" /> или <paramref name="data" /> равно <see langword="null" />.  Элемент <paramref name="members" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Длина <paramref name="members" /> не совпадает с длиной <paramref name="data" />.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Элемент <paramref name="members" /> не является экземпляром <see cref="T:System.Reflection.FieldInfo" />.</exception>
        <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для предоставления служб сериализации. Соответствующее перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
      </Docs>
    </Member>
  </Members>
</Type>