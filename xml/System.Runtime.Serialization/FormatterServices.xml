<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FormatterServices.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5aeca285d3347396598e0c601bf5970bee7252497.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aeca285d3347396598e0c601bf5970bee7252497</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.FormatterServices">
          <source>Provides static methods to aid with the implementation of a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatter" /&gt;</ph> for serialization.</source>
          <target state="translated">Предоставляет статические методы, упрощающие реализацию <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatter" /&gt;</ph> для сериализации.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.FormatterServices">
          <source>This class cannot be inherited.</source>
          <target state="translated">Этот класс не наследуется.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to check for the ability to deserialize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> для проверки возможности десериализации.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /&gt;</ph> property value.</source>
          <target state="translated">Значение свойства <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> can be deserialized with the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /&gt;</ph> property set to <ph id="ph3">&lt;see langword="Low" /&gt;</ph>.</source>
          <target state="translated">Определяет, возможно ли десериализовать заданный <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> со значением свойства <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /&gt;</ph>, равным <ph id="ph3">&lt;see langword="Low" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>Use this method to determine whether a specified type can be deserialized when the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel&gt;</ph> property is set to <ph id="ph2">`Low`</ph>.</source>
          <target state="translated">Этот метод служит для определения ли указанный тип может быть десериализованный при <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel&gt;</ph> свойству <ph id="ph2">`Low`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>.NET Framework remoting provides two levels of automatic deserialization, <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph>.</source>
          <target state="translated">Удаленное взаимодействие .NET framework обеспечивает два уровня автоматической десериализации <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> и <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source><ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> helps protect against deserialization attacks by deserializing only the types associated with the most basic remoting functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> помогает защититься от атак десериализации путем десериализации только типы, связанные с базовые функции удаленного взаимодействия.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph> deserialization level supports automatic deserialization of all types that remoting supports in all situations.</source>
          <target state="translated">Уровень десериализации <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph> поддерживает автоматическую десериализацию всех типов, которые поддерживаются удаленным взаимодействием во всех ситуациях.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>For more information about the.NET Framework remoting types that <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph> support, see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph3">\&lt;</ph>topic://cpconAutomaticDeserializationInNETRemoting&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)</ept>.</source>
          <target state="translated">Дополнительные сведения о платформе.NET Framework типов удаленного взаимодействия <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> и <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph> поддержки см. в разделе <bpt id="p1">[</bpt> &amp;#91; <ph id="ph3">\&lt;</ph>topic://cpconAutomaticDeserializationInNETRemoting &gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>This example shows how to use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices&gt;</ph> class to serialize or deserialize an object where the base class does not implement <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> but the derived class does.</source>
          <target state="translated">В этом примере показано, как использовать <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices&gt;</ph> класс для сериализации или десериализации объекта, где базовый класс не реализует <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> , не создавая производного класса.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>The <ph id="ph1">&lt;paramref name="t" /&gt;</ph> parameter is an advanced type and cannot be deserialized when the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /&gt;</ph> property is set to <ph id="ph3">&lt;see langword="Low" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="t" /&gt;</ph> является дополнительным типом и его невозможно сериализовать, когда свойство <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="Low" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>The object to write to the formatter.</source>
          <target state="translated">Объект, записываемый в форматер.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>The members to extract from the object.</source>
          <target state="translated">Элементы, извлекаемые из объекта.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>Extracts the data from the specified object and returns it as an array of objects.</source>
          <target state="translated">Извлекает данные из заданного объекта и возвращает их в виде массива объектов.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains data stored in <ph id="ph2">&lt;paramref name="members" /&gt;</ph> and associated with <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, содержащий данные, сохраненные в <ph id="ph2">&lt;paramref name="members" /&gt;</ph> и связанные с <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>For each supplied member of the <ph id="ph1">`members`</ph> array the <ph id="ph2">&lt;xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A&gt;</ph> method extracts the value associated with the <ph id="ph3">`obj`</ph> object, and returns it.</source>
          <target state="translated">Для каждого указанного члена <ph id="ph1">`members`</ph> массива <ph id="ph2">&lt;xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A&gt;</ph> метод извлекает значение, связанное с <ph id="ph3">`obj`</ph> объекта и возвращает его.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>The length of the returned array is the same as the length of the <ph id="ph1">`members`</ph> array.</source>
          <target state="translated">Длина возвращаемого массива является таким же, как длина <ph id="ph1">`members`</ph> массива.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>The following example creates an instance of a Book class and sets field values on the instance.</source>
          <target state="translated">Следующий пример создает экземпляр класса Book и задает значения полей в экземпляре.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>The code then gets the type information using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A&gt;</ph> method.</source>
          <target state="translated">Код возвращает сведения о типа с помощью <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>The code copies the instance data into an object array using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A&gt;</ph> method.</source>
          <target state="translated">Код копирует данные экземпляра в массив объектов с помощью <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>A new uninitialized instance of the class is created using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> method.</source>
          <target state="translated">Неинициализированный новый экземпляр класса создается с помощью <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>Finally, the data from the first instance is copied into the second instance using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A&gt;</ph> method.</source>
          <target state="translated">Наконец, данные из первого экземпляра копируется в второго экземпляра, используя <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>The <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> or <ph id="ph2">&lt;paramref name="members" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> или параметра <ph id="ph2">&lt;paramref name="members" /&gt;</ph> — <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>An element of <ph id="ph1">&lt;paramref name="members" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Элемент <ph id="ph1">&lt;paramref name="members" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>An element of <ph id="ph1">&lt;paramref name="members" /&gt;</ph> does not represent a field.</source>
          <target state="translated">Элемент <ph id="ph1">&lt;paramref name="members" /&gt;</ph> не представляет поле.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>For providing serialization services.</source>
          <target state="translated">для предоставления служб сериализации.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Соответствующее перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>The type of object to create.</source>
          <target state="translated">Тип создаваемого объекта.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>Creates a new instance of the specified object type.</source>
          <target state="translated">Создает новый экземпляр заданного типа объекта.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>A zeroed object of the specified type.</source>
          <target state="translated">Обнуленный объект заданного типа.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>Because the new instance of the object is initialized to zero and no constructors are run, the object might not represent a state that is regarded as valid by that object.</source>
          <target state="translated">Поскольку новый экземпляр объекта инициализируется нулевым значением, а конструкторы не запущены, объект может не представлять состояние, которое считается допустимым в этом объекте.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source><ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> should only be used for deserialization when the user intends to immediately populate all fields.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> следует использовать только для десериализации, когда пользователь намеревается немедленно заполнить все поля.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>It does not create an uninitialized string, since creating an empty instance of an immutable type serves no purpose.</source>
          <target state="translated">Он не создает неинициализированная строка, так как создание пустого экземпляра неизменного типа бессмысленно.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source><ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> converts all class level <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> to <bpt id="p2">[</bpt>Demands<ept id="p2">](http://msdn.microsoft.com/library/e5283e28-2366-4519-b27d-ef5c1ddc1f48)</ept> to ensure that all direct and indirect callers have the permissions that the demand specifies.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> Преобразует все уровне класса <bpt id="p1">[</bpt>требования связывания<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> для <bpt id="p2">[</bpt>требования<ept id="p2">](http://msdn.microsoft.com/library/e5283e28-2366-4519-b27d-ef5c1ddc1f48)</ept> для убедитесь, что все прямые и непрямые вызывающие объекты имеют разрешения, указанные в требовании.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>Use <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> to increase the level of security when deserializing from a partially trusted source.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> для повышения уровня безопасности при десериализации из частично доверенного источника.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>For better performance in full trust scenarios, use <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A&gt;</ph>.</source>
          <target state="translated">Для повышения производительности в сценариях с полным доверием использовать <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="type" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is not a valid common language runtime type.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="type" /&gt;</ph> недопустимого типа общеязыковой среды выполнения.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">У вызывающего объекта отсутствует необходимое разрешение.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>For providing serialization services.</source>
          <target state="translated">для предоставления служб сериализации.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Связанные перечисления: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.FormatterServices">
          <source>Returns all the serializable members for a particular class.</source>
          <target state="translated">Возвращает все сериализуемые элементы для определенного класса.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>The type being serialized.</source>
          <target state="translated">Сериализуемый тип.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>Gets all the serializable members for a class of the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Возвращает все сериализуемые элементы для класса заданного <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> of the non-transient, non-static members.</source>
          <target state="translated">Массив типа <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> непереходных нестатических элементов.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>Generally, the serializable members of a class are the non-transient, non-static members such as fields and properties.</source>
          <target state="translated">Как правило сериализуемые члены класса являются члены не является временной и не статическим, например поля и свойства.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>To be included, properties must have both a getter and a setter.</source>
          <target state="translated">Для включения свойства должны иметь свойства getter и setter.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>A class that implements the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface or has a serialization surrogate does not have to serialize all these members, or can serialize additional members.</source>
          <target state="translated">Класс, реализующий <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> интерфейс или имеет сериализации символов-заместителей не требуется сериализовывать все эти элементы, или он может сериализовать дополнительные члены.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере кода демонстрируется реализация <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="type" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">У вызывающего объекта отсутствует необходимое разрешение.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>For providing serialization services.</source>
          <target state="translated">для предоставления служб сериализации.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Соответствующее перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>The type being serialized or cloned.</source>
          <target state="translated">Сериализуемый или клонируемый тип.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>The context where the serialization occurs.</source>
          <target state="translated">Контекст, в котором происходит сериализация.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>Gets all the serializable members for a class of the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> and in the provided <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>.</source>
          <target state="translated">Возвращает все сериализуемые элементы для класса заданного типа <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> и в предоставленном <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> of the non-transient, non-static members.</source>
          <target state="translated">Массив типа <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> непереходных нестатических элементов.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>Generally, the serializable members of a class are the non-transient, non-static members such as fields and properties.</source>
          <target state="translated">Как правило сериализуемые члены класса являются члены не является временной и не статическим, например поля и свойства.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>To be included, properties must have both a getter and a setter.</source>
          <target state="translated">Для включения свойства должны иметь свойства getter и setter.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>A class that implements <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> or has a serialization surrogate does not have to serialize all these members, or can serialize additional members.</source>
          <target state="translated">Класс, реализующий <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> или имеет сериализации символов-заместителей не требуется сериализовывать все эти элементы, или он может сериализовать дополнительные члены.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>Currently, you do not need to do anything different unless <ph id="ph1">`context`</ph> has the <ph id="ph2">&lt;xref:System.Runtime.Serialization.StreamingContextStates&gt;</ph> value <ph id="ph3">&lt;xref:System.Runtime.Serialization.StreamingContextStates.Clone&gt;</ph> set.</source>
          <target state="translated">В настоящее время не необходимо сделать что-то иначе, если не <ph id="ph1">`context`</ph> имеет <ph id="ph2">&lt;xref:System.Runtime.Serialization.StreamingContextStates&gt;</ph> значение <ph id="ph3">&lt;xref:System.Runtime.Serialization.StreamingContextStates.Clone&gt;</ph> значение.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="type" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">У вызывающего объекта отсутствует необходимое разрешение.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>For providing serialization services.</source>
          <target state="translated">для предоставления служб сериализации.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Соответствующее перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)">
          <source>The specified surrogate.</source>
          <target state="translated">Заданный суррогат.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)">
          <source>Returns a serialization surrogate for the specified <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /&gt;</ph>.</source>
          <target state="translated">Возвращает суррогат сериализации для заданного <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /&gt;</ph> for the specified <ph id="ph2">&lt;paramref name="innerSurrogate" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /&gt;</ph> для указанного узла <ph id="ph2">&lt;paramref name="innerSurrogate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>The assembly where you want to look up the object.</source>
          <target state="translated">Сборка, в которой необходимо найти объект.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>The name of the object.</source>
          <target state="translated">Имя объекта.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>Looks up the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the specified object in the provided <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</source>
          <target state="translated">Ведет поиск <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> заданного объекта в предоставленном <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the named object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> именованного объекта.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="assem" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="assem" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">У вызывающего объекта отсутствует необходимое разрешение.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>For providing serialization services.</source>
          <target state="translated">для предоставления служб сериализации.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Соответствующее перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>For extraction of reflection information on members of a type that are not visible.</source>
          <target state="translated">Для извлечения сведений отражение на члены типа, которые не видны.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" /&gt;</ph>.</source>
          <target state="translated">Связанное перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>The type of object to create.</source>
          <target state="translated">Тип создаваемого объекта.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>Creates a new instance of the specified object type.</source>
          <target state="translated">Создает новый экземпляр заданного типа объекта.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>A zeroed object of the specified type.</source>
          <target state="translated">Обнуленный объект заданного типа.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>Because the new instance of the object is initialized to zero and no constructors are run, the object might not represent a state that is regarded as valid by that object.</source>
          <target state="translated">Поскольку новый экземпляр объекта инициализируется нулевым значением, а конструкторы не запущены, объект может не представлять состояние, которое считается допустимым в этом объекте.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>The current method should only be used for deserialization when the user intends to immediately populate all fields.</source>
          <target state="translated">Текущий метод следует использовать только для десериализации, когда пользователь намеревается немедленно заполнить все поля.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>It does not create an uninitialized string, since creating an empty instance of an immutable type serves no purpose.</source>
          <target state="translated">Он не создает неинициализированная строка, так как создание пустого экземпляра неизменного типа бессмысленно.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>You cannot use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A&gt;</ph> method to create instances of types that derive from the <ph id="ph2">&lt;xref:System.ContextBoundObject&gt;</ph> class.</source>
          <target state="translated">Нельзя использовать <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A&gt;</ph> метод для создания экземпляров типов, производных от <ph id="ph2">&lt;xref:System.ContextBoundObject&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="type" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">У вызывающего объекта отсутствует необходимое разрешение.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>For providing serialization services.</source>
          <target state="translated">для предоставления служб сериализации.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Соответствующее перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The object to populate.</source>
          <target state="translated">Объект для заполнения.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> that describes which fields and properties to populate.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, описывающий заполняемые поля и свойства.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that specifies the values for each field and property to populate.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, задающий значения для каждого заполняемого поля и свойства.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>Populates the specified object with values for each field drawn from the data array of objects.</source>
          <target state="translated">Заполняет заданный объект значениями для каждого поля, скопированного из массива данных объектов.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The newly populated object.</source>
          <target state="translated">Вновь заполненный объект.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>If an element in <ph id="ph1">`data`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A&gt;</ph> does not write anything to that field.</source>
          <target state="translated">Если элемент в <ph id="ph1">`data`</ph> — <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A&gt;</ph> ничего не записывают к этому полю.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The following example creates an instance of a Book class and sets field values on the instance.</source>
          <target state="translated">Следующий пример создает экземпляр класса Book и задает значения полей в экземпляре.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The code then gets the type information using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A&gt;</ph> method.</source>
          <target state="translated">Код возвращает сведения о типа с помощью <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The code copies the instance data into an object array using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A&gt;</ph> method.</source>
          <target state="translated">Код копирует данные экземпляра в массив объектов с помощью <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>A new uninitialized instance of the class is created using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> method.</source>
          <target state="translated">Неинициализированный новый экземпляр класса создается с помощью <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>Finally, the data from the first instance is copied into the second instance using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A&gt;</ph> method.</source>
          <target state="translated">Наконец, данные из первого экземпляра копируется в второго экземпляра, используя <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The <ph id="ph1">&lt;paramref name="obj" /&gt;</ph>, <ph id="ph2">&lt;paramref name="members" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="data" /&gt;</ph> parameter is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="obj" /&gt;</ph>, <ph id="ph2">&lt;paramref name="members" /&gt;</ph> или <ph id="ph3">&lt;paramref name="data" /&gt;</ph> равно <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>An element of <ph id="ph1">&lt;paramref name="members" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Элемент <ph id="ph1">&lt;paramref name="members" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The length of <ph id="ph1">&lt;paramref name="members" /&gt;</ph> does not match the length of <ph id="ph2">&lt;paramref name="data" /&gt;</ph>.</source>
          <target state="translated">Длина <ph id="ph1">&lt;paramref name="members" /&gt;</ph> не совпадает с длиной <ph id="ph2">&lt;paramref name="data" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>An element of <ph id="ph1">&lt;paramref name="members" /&gt;</ph> is not an instance of <ph id="ph2">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>.</source>
          <target state="translated">Элемент <ph id="ph1">&lt;paramref name="members" /&gt;</ph> не является экземпляром <ph id="ph2">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The caller does not have the required permission.</source>
          <target state="translated">У вызывающего объекта отсутствует необходимое разрешение.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>For providing serialization services.</source>
          <target state="translated">для предоставления служб сериализации.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Соответствующее перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>