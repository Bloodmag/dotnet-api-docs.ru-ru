<Type Name="IFormatter" FullName="System.Runtime.Serialization.IFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5edf1eaa0be991e41e4d0a7551d0f3d69b2872f3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36629697" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormatter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormatter" />
  <TypeSignature Language="F#" Value="type IFormatter = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет функциональные возможности для форматирования сериализованных объектов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот интерфейс должен быть реализован любым классом, идентифицированным как форматер <xref:System.Runtime.Serialization> архитектуры.  
  
 Объекты управления собственную сериализацию можно сделать путем реализации <xref:System.Runtime.Serialization.ISerializable> интерфейса. Объект для сериализации, следует пометить этот объект как сериализуемый. Это можно сделать, применив к классу атрибут serializable. Если любой объект в графе является несериализуемым, произойдет сбой сериализации.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Все модули форматирования должен реализовывать этот интерфейс. Используйте <see cref="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)" /> для сериализации объект или граф объектов. Используйте <see cref="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)" /> для десериализации потока и создайте ее клон исходный объект или граф объектов.</para>
    </block>
    <altmember cref="T:System.Runtime.Serialization.Formatter" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
  </Docs>
  <Members>
    <Member MemberName="Binder">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.SerializationBinder Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder Binder" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.IFormatter.Binder" />
      <MemberSignature Language="VB.NET" Value="Public Property Binder As SerializationBinder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::SerializationBinder ^ Binder { System::Runtime::Serialization::SerializationBinder ^ get(); void set(System::Runtime::Serialization::SerializationBinder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binder : System.Runtime.Serialization.SerializationBinder with get, set" Usage="System.Runtime.Serialization.IFormatter.Binder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.Runtime.Serialization.SerializationBinder" />, который выполняет поиск типа во время десериализации.</summary>
        <value>
          <see cref="T:System.Runtime.Serialization.SerializationBinder" />, который выполняет поиск типа во время десериализации.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При попытке разрешения типа на основе данных, закодированных в потоке, форматер вызывает <xref:System.Runtime.Serialization.SerializationBinder.BindToType%2A> метод <xref:System.Runtime.Serialization.SerializationBinder>. Этот метод разрешает эти параметры для <xref:System.Type> объекта. Связыватель может найти <xref:System.Type> во время десериализации, который находится в другой сборке, чем во время сериализации.  
  
 Задание этого свойства не оказывает влияния во время сериализации.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.StreamingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.IFormatter.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As StreamingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::StreamingContext Context { System::Runtime::Serialization::StreamingContext get(); void set(System::Runtime::Serialization::StreamingContext value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Runtime.Serialization.StreamingContext with get, set" Usage="System.Runtime.Serialization.IFormatter.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.Runtime.Serialization.StreamingContext" />, используемый для сериализации и десериализации.</summary>
        <value>
          <see cref="T:System.Runtime.Serialization.StreamingContext" />, используемый для сериализации и десериализации.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение этого свойства передается любому объекту, реализующему <xref:System.Runtime.Serialization.ISerializable> или <xref:System.Runtime.Serialization.ISerializationSurrogate>. <xref:System.Runtime.Serialization.StreamingContext> Указывает назначение (во время сериализации) или источник (во время десериализации) данных. Объект, реализующий <xref:System.Runtime.Serialization.ISerializable> можно изменить данные, которые она передает в зависимости от значения <xref:System.Runtime.Serialization.IFormatter.Context%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream serializationStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream serializationStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializationStream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::Stream ^ serializationStream);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.IO.Stream -&gt; obj" Usage="iFormatter.Deserialize serializationStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="serializationStream">Поток, содержащий десериализуемые данные.</param>
        <summary>Десериализует данные в предоставленный поток и воспроизводит граф объектов.</summary>
        <returns>Верхний объект десериализованного графа.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.IFormatter.Deserialize%2A> Метод считывает сведения о графе из потока и восстанавливает точную копию исходного графа. Топология графа сохраняется.  
  
 В процессе десериализации пустых объектов соответствующего типа и повторно заполняет его полей из данных, переданных в `serializationStream` потока. Важно отметить, что конструктор не когда-либо объекта во время десериализации вызывается.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream serializationStream, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream serializationStream, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (serializationStream As Stream, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ serializationStream, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.IO.Stream * obj -&gt; unit" Usage="iFormatter.Serialize (serializationStream, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationStream">Поток, в который модуль форматирования помещает сериализованные данные. Этот поток способен ссылаться на многочисленные резервные хранилища (файлы, сеть, память и т.д.).</param>
        <param name="graph">Объект или корень графа объекта для сериализации. Все дочерние объекты этого корневого объекта сериализуются автоматически.</param>
        <summary>Сериализует объект или граф объектов с заданным корнем в предоставляемом потоке.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.IFormatter.Serialize%2A> Метод автоматически сериализует предоставленные объекты и все объекты, связанные с ним, в указанный поток.  
  
 По умолчанию в процессе сериализации записывается состояние объекта путем сбора значения его полей (открытого и закрытого). Эти поля сохраняются в поток, а также сведения об объекте, такие как имя с указанием сборки для его типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SurrogateSelector">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ISurrogateSelector SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector SurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.IFormatter.SurrogateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property SurrogateSelector As ISurrogateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ISurrogateSelector ^ SurrogateSelector { System::Runtime::Serialization::ISurrogateSelector ^ get(); void set(System::Runtime::Serialization::ISurrogateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SurrogateSelector : System.Runtime.Serialization.ISurrogateSelector with get, set" Usage="System.Runtime.Serialization.IFormatter.SurrogateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.Runtime.Serialization.SurrogateSelector" />, используемый текущим форматером.</summary>
        <value>
          <see cref="T:System.Runtime.Serialization.SurrogateSelector" />, используемый этим модулем форматирования.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Runtime.Serialization.ISerializationSurrogate> дает пользователю возможность указать объект, наиболее подходящий для обработки сериализации конкретного объекта или класса объектов. Представьте себе, как реализация <xref:System.Runtime.Serialization.ISerializable> , предоставленной другой объект.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>