<Type Name="ComponentGuaranteesAttribute" FullName="System.Runtime.Versioning.ComponentGuaranteesAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c9cc63738e7d595aac3ed161af7c1252c0bb6baf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36628725" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ComponentGuaranteesAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComponentGuaranteesAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComponentGuaranteesAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentGuaranteesAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ComponentGuaranteesAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Module | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Определяет гарантированную совместимость компонента, типа или члена типа с одной или несколькими версиями.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> Используется разработчиками, компоненты и библиотеки классов, чтобы показать уровень совместимости, при котором объекты-получатели их библиотеки можно ожидать, что в различных версиях. Он указывает уровень гарантии, что будущей версии библиотеки или компонента не нарушит работу существующего клиента. Клиенты могут использовать <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> для помощи в разработке собственных интерфейсов для обеспечения стабильности всех версий.  
  
> [!NOTE]
>  Общеязыковая среда выполнения (CLR) не использует этот атрибут каким-либо образом. Его значение заключается в формальном документировании намерением автор компонента. Во время компиляции средства также могут использовать эти объявления для обнаружения ошибок во время компиляции, в противном случае нарушат объявленную гарантию.  
  
## <a name="levels-of-compatibility"></a>Уровни совместимости  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> Поддерживает следующие уровни совместимости, которые представлены члены <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> перечисления:  
  
-   Совместимость не до версии (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType>). Клиент может ожидать, что с будущими версиями будет работать существующего клиента. Дополнительные сведения см. в разделе [совместимости нет](#None) далее в этом разделе.  
  
-   До версии совместимости Side-by-side (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType>). Компонент был протестирован для работы при загрузке более одной версии сборки в том же домене приложения. Как правило будущие версии могут нарушить совместимость. Однако при критических изменений, старая версия не изменяется, но вместе с новой версией. Выполнение Side-by-side — ожидаемый способ обеспечить работу при критических изменений существующих клиентов. Дополнительные сведения см. в разделе [совместимости Side-by-Side](#SideBySide) далее в этом разделе.  
  
-   Стабильные версии к версии совместимости (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType>). Будущие версии не должны нарушать клиента и side-by-side выполнения не требуется. Тем не менее если клиент случайно поврежден, возможно, можно использовать для устранения проблемы с одновременным выполнением. Дополнительные сведения см. в разделе [устойчивую совместимость](#Standard) раздела.  
  
-   Exchange до версии совместимости (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType>). Принять дополнительные меры, чтобы убедиться, что будущие версии не нарушит работу клиента. Клиент должен использовать только эти типы в сигнатуре интерфейсов, которые используются для взаимодействия с другими сборками, которые развертываются независимо друг от друга. Предполагается, что только одна версия этих типов в домене приложения, это означает, что если клиент выдает ошибку, с одновременным выполнением не может устранить проблему совместимости. Дополнительные сведения см. в разделе [совместимость типа обмена](#Exchange) раздела.  
  
 Каждый уровень гарантии более подробно в следующих разделах.  
  
<a name="None"></a>   
### <a name="no-compatibility"></a>Совместимость не  
 Пометка компонент как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType> указывает, что поставщик не гарантирует совместимости. Клиенты должны избежать любых зависимостей на предоставляемых интерфейсах. Этот уровень совместимости полезен для типов, которые экспериментальном или публично доступны, однако предназначены только для компонентов, которые всегда обновляются одновременно. <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> явным образом указывает, что этот компонент не должен использоваться внешними компонентами.  
  
<a name="SideBySide"></a>   
### <a name="side-by-side-compatibility"></a>Совместимость Side-by-Side  
 Пометка компонент как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType> указывает, что компонент был протестирован работать при загрузке более одной версии сборки в том же домене приложения. Критические изменения разрешены при условии, что они были сделаны в сборку, которая имеет больший номер версии. Компоненты, которые привязаны к старой версии сборки должны продолжать привязку к старой версии и другие компоненты можно привязать к новой версии. Можно также обновить компонент, который объявлен как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide> путем внесения необратимых изменений изменения старую версию.  
  
<a name="Standard"></a>   
### <a name="stable-compatibility"></a>Стабильные совместимости  
 Пометить тип как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType> указывает, что тип должны оставаться стабильными всех версий. Тем не менее он может стать возможным для версий side-by-side стабильного типа существует в том же домене приложения.  
  
 Устойчивые типы поддерживают высокую совместимость двоичной панели. По этой причине поставщики следует избегать критических изменений для stable типов. Допустимы следующие виды изменений:  
  
-   Добавление закрытых полей экземпляра к или удаление полей из типа, при условии, что это не нарушает формат сериализации.  
  
-   Изменение несериализуемый тип сериализуемый тип. (Однако сериализуемый тип не может изменяться для сериализуемого типа.)  
  
-   Создание новых, более производных исключений из метода.  
  
-   Повышение производительности метод.  
  
-   Изменение диапазона возвращаемых значений, при условии, что изменения не сказывается отрицательно на большинство клиентов.  
  
-   Устранение серьезных ошибок, если коммерческое обоснование велико, а число клиентов, оказывается негативное влияние не хватает.  
  
 Поскольку новые версии стабильных компонентов не должны разрушать существующие клиенты, обычно только одна версия стабильного компонента необходима в домене приложения. Однако это не жесткое требование, поскольку стабильные типы не используются как типы известного обмена, согласованные всеми компонентами. Таким образом Если новая версия стабильного компонента случайно нарушит некоторые компоненты, и для других компонентов требуется новая версия, ее можно устранить проблему, загрузив старый и новый компонент.  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> предоставляет более надежные гарантии совместимости версии, чем <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>. Это значение по умолчанию, общие для нескольких версий компонентов.  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> можно сочетать с <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide>, который в том, что компонент не нарушает совместимость, но его проверка работать при загрузке более одной версии в домене приложения.  
  
 После того как будет помечен в типе или методе <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>, могут быть обновлены до <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>. Однако он не может быть изменена <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.  
  
<a name="Exchange"></a>   
### <a name="exchange-type-compatibility"></a>Совместимость типа обмена  
 Пометить тип как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType> дает более надежные гарантии совместимости версии чем <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>и должны применяться к наиболее стабильной всех типов. Эти типы предназначены для обмена данными между независимо построенными компонентами через все границы компонентов во времени (любая версия среды CLR) или любую версию компонента или приложения и пространстве (между процессами, разными средами CLR в одном процессе кросс-домен приложения в одной среде CLR). Критические изменения в тип обмена, невозможно исправить проблему с помощью загрузки нескольких версий типа.  
  
 Типы обмена должны изменяться только в том случае, если проблема очень серьезная (например, серьезная уязвимость безопасности) или вероятность сбоя очень низкий (то есть, если поведение уже было нарушено случайным образом, код может не иметь возможной зависимости на). Тип обмена можно внести следующие виды изменений:  
  
-   Добавьте наследование новых определений интерфейса.  
  
-   Добавьте новые закрытые методы, реализующие методы вновь наследуемых определений интерфейса.  
  
-   Добавьте новые статические поля.  
  
-   Добавление новых статических методов.  
  
-   Добавьте новые методы невиртуальный экземпляра.  
  
 Ниже рассматриваются существенные изменения и не разрешены для типов-примитивов:  
  
-   Изменение форматов сериализации. Независимой от версий сериализации является обязательным.  
  
-   Добавление или удаление закрытых поля экземпляра. Это вызывает риск изменения формата сериализации типа и прекращение выполнения клиентского кода, который использует отражение.  
  
-   Изменение возможности сериализации типа. Несериализуемый тип нельзя сделать сериализуемым и наоборот.  
  
-   Создание различных исключений из метода.  
  
-   Изменение диапазона возвращаемых значений метода, если только определение элемента вызывает эту возможность и четко показывает, как клиенты должны обрабатывать неизвестные значения.  
  
-   Исправление большинства ошибок. Потребители типа будет полагаться на существующее поведение.  
  
 После компонента, типа или члена помечается <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> гарантировать, что он не может быть присвоено одно <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> или <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.  
  
 Как правило, типы exchange — это основные типы (такие как <xref:System.Int32> и <xref:System.String> в платформе .NET Framework) и интерфейсы (такие как <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.IEnumerable%601>, и <xref:System.IComparable%601>), которые часто используются в общих интерфейсов.  
  
 Типы обмена предоставит могут только другие типы, которые также отмечены <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> совместимости. Кроме того типы обмена не может зависеть от поведения Windows API, которые часто меняются.  
  
## <a name="component-guarantees-a-summary"></a>Гарантии компонента: Сводка  
 В этой таблице перечислены как характеристики компонента и его использования на гарантию его совместимости.  
  
|Характеристики компонента|Exchange|стабильных|Side-by-Side|Нет|  
|-------------------------------|--------------|------------|--------------------|----------|  
|Можно использовать в интерфейсах между компонентами этой версии независимо друг от друга.|Y|в|в|в|  
|Может быть использован (закрыто) сборкой, версии независимо друг от друга.|Y|Y|Y|в|  
|Может иметь несколько версий в одном домене приложения.|в|Y|Y|Y|  
|Может привести к значительным изменениям|в|в|Y|Y|  
|Проверено, убедитесь, что несколько версий сборки могут загружаться друг с другом.|в|в|Y|в|  
|Может привести к значительным изменениям на месте.|в|в|в|Y|  
|Может осуществить безопасное неразрывные обслуживания на месте.|Y|Y|Y|Y|  
  
## <a name="applying-the-attribute"></a>Применение атрибута  
 Можно применить <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> сборки, типа или члена типа. Приложение является иерархическим. То есть, по умолчанию гарантия определяется <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> атрибута на уровне сборки определяет гарантии всех типов в сборку и все члены в этих типах. Аналогичным образом Если гарантия применяется к типу, по умолчанию он также применяется к каждому члену типа.  
  
 Эта гарантия наследуемые можно переопределить, применяя <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> для отдельных типов и членов типов. Тем не менее гарантирует, что переопределение по умолчанию можно только ослабить гарантии; они не может повысить его. Например, если сборка отмечена с <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> гарантировать ее типы и члены иметь никакой гарантии совместимости и другие гарантии, который применяется к типам и членам в сборке пропускается.  
  
## <a name="testing-the-guarantee"></a>Тестирование гарантии  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> Свойство возвращает член <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> перечисления, который помечен <xref:System.FlagsAttribute> атрибута. Это означает, что требуется проверка флаг, который вас интересует, маскируя потенциально неизвестных флагов. Например, в следующем примере проверяется, является ли тип помечен как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>.  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#1)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#1)]  
  
 В следующем примере проверяется, является ли тип помечен как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> или <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>.  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#2)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#2)]  
  
 Следующие пример тесты устранить тип помечен как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> (то есть, ни <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> , ни <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>).  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#3)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Versioning.ComponentGuaranteesOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentGuaranteesAttribute (System.Runtime.Versioning.ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Versioning.ComponentGuaranteesOptions guarantees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (guarantees As ComponentGuaranteesOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentGuaranteesAttribute(System::Runtime::Versioning::ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Versioning.ComponentGuaranteesAttribute : System.Runtime.Versioning.ComponentGuaranteesOptions -&gt; System.Runtime.Versioning.ComponentGuaranteesAttribute" Usage="new System.Runtime.Versioning.ComponentGuaranteesAttribute guarantees" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="guarantees" Type="System.Runtime.Versioning.ComponentGuaranteesOptions" />
      </Parameters>
      <Docs>
        <param name="guarantees">Одно из значений перечисления, задающее гарантированный уровень совместимости с несколькими версиями.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" /> со значением, указывающим библиотеку, тип или гарантированный уровень совместимости члена с несколькими версиями.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> создается экземпляр класса, значение `guarantees` присваивается параметр <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guarantees">
      <MemberSignature Language="C#" Value="public System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guarantees As ComponentGuaranteesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Versioning::ComponentGuaranteesOptions Guarantees { System::Runtime::Versioning::ComponentGuaranteesOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Guarantees : System.Runtime.Versioning.ComponentGuaranteesOptions" Usage="System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Versioning.ComponentGuaranteesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее гарантированный уровень совместимости библиотеки, типа или члена типа с несколькими версиями.</summary>
        <value>Одно из значений перечисления, задающее гарантированный уровень совместимости с несколькими версиями.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> свойство соответствует свойству `guarantees` параметр <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A> конструктора.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>