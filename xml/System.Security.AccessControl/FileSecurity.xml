<Type Name="FileSecurity" FullName="System.Security.AccessControl.FileSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9b2724afb2d643a5a4e51a85876bd0f33159a49" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30489218" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileSecurity : System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSecurity extends System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileSecurity&#xA;Inherits FileSystemSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSecurity sealed : System::Security::AccessControl::FileSystemSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.FileSystemSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет возможности управления доступом и аудита безопасности для файла. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSecurity> Класс задает права доступа для системного файла и как попытки доступа подлежат аудиту.  Этот класс представляет права доступа и аудита в виде набора правил. Каждое правило доступа представлена <xref:System.Security.AccessControl.FileSystemAccessRule> , пока объект представляется каждого правила аудита <xref:System.Security.AccessControl.FileSystemAuditRule> объекта.  
  
 <xref:System.Security.AccessControl.FileSecurity> Класс представляет собой абстракцию базовой файловой системы безопасности Microsoft Windows. В этой системе каждый файл имеет список (DACL), который контролирует доступ к файлу и системы управления доступом (SACL), в котором определяются попытки доступа элемента управления, подлежащие аудиту.  <xref:System.Security.AccessControl.FileSystemAccessRule> И <xref:System.Security.AccessControl.FileSystemAuditRule> классы, абстрактные классы элементов управления доступом (ACE), составляющих списки DACL и SACL.  
  
 <xref:System.Security.AccessControl.FileSecurity> Класс скрывает многие детали списки DACL и SACL, вам не нужно беспокоиться об упорядочивании ACE или нулевой DACL.  
  
 Используйте <xref:System.Security.AccessControl.FileSecurity> класса для получения, добавления или изменения правил доступа, которые представляют DACL и SACL файла.  
  
 Чтобы сохранить новые или измененные доступа или правил в файл аудита, используйте <xref:System.IO.FileInfo.SetAccessControl%2A> метод. Чтобы получить доступ или проверить правила для существующего файла, используйте метод <xref:System.IO.FileInfo.GetAccessControl%2A>.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Security.AccessControl.FileSecurity> класс, чтобы добавить и затем удалить записи списка управления Доступом управления доступом из файла.  Для выполнения этого примера необходимо указать допустимую учетную запись пользователя или группы.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.FileSecurity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.FileSecurity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот конструктор, если вы хотите создать пустой <xref:System.Security.AccessControl.FileSecurity> объект, который не зависит от существующего файла.  Затем можно заполнить объект сведения об управлении доступом и применить его в файл.  
  
 Можно добавить доступ или правила для аудита <xref:System.Security.AccessControl.FileSecurity> с помощью <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> метод. Можно удалить доступ или с помощью правил аудита <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> метод.  
  
 Чтобы сохранить новые или измененные доступа или правил в файл аудита, используйте <xref:System.IO.File.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A> метод.  Чтобы получить доступ или правила аудита из существующего файла, используйте <xref:System.IO.File.GetAccessControl%2A> или <xref:System.IO.FileInfo.GetAccessControl%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Microsoft Windows 2000 или более поздней версией Windows.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity (string fileName, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity(System::String ^ fileName, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="fileName">Расположение файла, на основании которого создается объект <see cref="T:System.Security.AccessControl.FileSecurity" />.</param>
        <param name="includeSections">Одно из значений <see cref="T:System.Security.AccessControl.AccessControlSections" />, указывающее тип сведений о списке управления доступом, которые необходимо получить.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.FileSecurity" /> на основании указанного файла, используя указанные значения из перечисления <see cref="T:System.Security.AccessControl.AccessControlSections" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор получает параметры управления доступом для указанного файла, а затем создает <xref:System.Security.AccessControl.FileSecurity> объект, содержащий эту информацию.  Затем можно проверять, добавить или удалить параметры управления доступом для указанного файла.  
  
 Можно добавить доступ или правила для аудита <xref:System.Security.AccessControl.FileSecurity> с помощью <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> метод. Можно удалить доступ или с помощью правил аудита <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> метод.  
  
 Чтобы сохранить новые или измененные доступа или правил в файл аудита, используйте <xref:System.IO.File.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A> метод.  Чтобы получить доступ или правила аудита из существующего файла, используйте <xref:System.IO.File.GetAccessControl%2A> или <xref:System.IO.FileInfo.GetAccessControl%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="fileName" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
        <exception cref="T:System.IO.FileNotFoundException">Файл, указанный в параметре <paramref name="fileName" />, не найден.</exception>
        <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
        <exception cref="T:System.Runtime.InteropServices.SEHException">Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Microsoft Windows 2000 или более поздней версией Windows.</exception>
        <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе. Например, для платформ на основе Windows длина пути должна составлять менее 248 знаков, а длина имен файлов — менее 260 знаков.</exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException">Текущая учетная запись системы не имеет прав администратора.</exception>
        <exception cref="T:System.SystemException">Не удалось найти файл.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="fileName" /> указывает файл, доступный только для чтения.  
  
 - или -  
  
 Эта операция не поддерживается на текущей платформе.  
  
 - или -  
  
 Параметр <paramref name="fileName" /> указывает каталог.  
  
 - или -  
  
 У вызывающего объекта отсутствует необходимое разрешение.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">наличие разрешений на запись в файл, заданный параметром <paramref name="name" /> параметр. Связанные перечисления: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> , <see cref="F:System.Security.AccessControl.AccessControlActions.View" />  
  
 Действие по обеспечению безопасности: требование</permission>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" /> Конструктор требует текущей учетной записи права администратора. Чтобы создать новый экземпляр <see cref="T:System.Security.AccessControl.FileSecurity" /> класс для определенного файла, используя учетную запись, которая не является администратором, используйте <see cref="M:System.IO.FileStream.GetAccessControl" /> метод.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>