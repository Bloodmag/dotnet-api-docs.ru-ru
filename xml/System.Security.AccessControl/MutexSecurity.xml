<Type Name="MutexSecurity" FullName="System.Security.AccessControl.MutexSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3acf0a74aad6e33bc9ab979ff26904dc803135c1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36628101" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MutexSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MutexSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.MutexSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MutexSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutexSecurity sealed : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type MutexSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="42bbf-101">Представляет систему безопасности управления доступом Windows для именованного мьютекса.</span>
      <span class="sxs-lookup">
        <span data-stu-id="42bbf-101">Represents the Windows access control security for a named mutex.</span>
      </span>
      <span data-ttu-id="42bbf-102">Этот класс не наследуется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="42bbf-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-103">Объект <xref:System.Security.AccessControl.MutexSecurity> объект задает права доступа для именованного системного мьютекса, а также указывает, как попытки доступа подлежат аудиту.</span><span class="sxs-lookup"><span data-stu-id="42bbf-103">A <xref:System.Security.AccessControl.MutexSecurity> object specifies access rights for a named system mutex, and also specifies how access attempts are audited.</span></span> <span data-ttu-id="42bbf-104">Права доступа к объекту взаимного исключения представляют собой правила, с каждым правилом доступа, представленного <xref:System.Security.AccessControl.MutexAccessRule> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-104">Access rights to the mutex are expressed as rules, with each access rule represented by a <xref:System.Security.AccessControl.MutexAccessRule> object.</span></span> <span data-ttu-id="42bbf-105">Каждое правило аудита представленного <xref:System.Security.AccessControl.MutexAuditRule> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-105">Each auditing rule is represented by a <xref:System.Security.AccessControl.MutexAuditRule> object.</span></span>  
  
 <span data-ttu-id="42bbf-106">Это отражает базовая система безопасности Windows, в которой каждый защищаемый объект имеет максимум один список управления доступом (DACL), которая управляет доступом к защищенному объекту, а не более одной системы управления доступом (SACL), указывающее, какой доступ попытки подлежат аудиту.</span><span class="sxs-lookup"><span data-stu-id="42bbf-106">This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</span></span> <span data-ttu-id="42bbf-107">Список DACL и SACL упорядоченные списки записи управления доступом (ACE), которые определяют правила доступа и аудита для пользователей и групп.</span><span class="sxs-lookup"><span data-stu-id="42bbf-107">The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</span></span> <span data-ttu-id="42bbf-108">Объект <xref:System.Security.AccessControl.MutexAccessRule> или <xref:System.Security.AccessControl.MutexAuditRule> объект может представлять более одного элемента управления ДОСТУПОМ.</span><span class="sxs-lookup"><span data-stu-id="42bbf-108">A <xref:System.Security.AccessControl.MutexAccessRule> or <xref:System.Security.AccessControl.MutexAuditRule> object might represent more than one ACE.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42bbf-109">Объект <xref:System.Threading.Mutex> Локальный мьютекс или именованный системный мьютекс может представлять объект.</span><span class="sxs-lookup"><span data-stu-id="42bbf-109">A <xref:System.Threading.Mutex> object can represent a local mutex or a named system mutex.</span></span> <span data-ttu-id="42bbf-110">Безопасность управления доступом Windows имеет смысл только для именованных системных мьютексов.</span><span class="sxs-lookup"><span data-stu-id="42bbf-110">Windows access control security is meaningful only for named system mutexes.</span></span>  
  
 <span data-ttu-id="42bbf-111"><xref:System.Security.AccessControl.MutexSecurity>, <xref:System.Security.AccessControl.MutexAccessRule>, И <xref:System.Security.AccessControl.MutexAuditRule> классы скрыть детали реализации, списки управления доступом и элементы управления доступом.</span><span class="sxs-lookup"><span data-stu-id="42bbf-111">The <xref:System.Security.AccessControl.MutexSecurity>, <xref:System.Security.AccessControl.MutexAccessRule>, and <xref:System.Security.AccessControl.MutexAuditRule> classes hide the implementation details of ACLs and ACEs.</span></span> <span data-ttu-id="42bbf-112">Они дают возможность игнорировать семнадцать разных типах элементов управления ДОСТУПОМ и сложных процедурах наследования и распространения прав доступа.</span><span class="sxs-lookup"><span data-stu-id="42bbf-112">They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</span></span> <span data-ttu-id="42bbf-113">Эти объекты также позволяют предотвратить следующих распространенных ошибок управления доступом:</span><span class="sxs-lookup"><span data-stu-id="42bbf-113">These objects are also designed to prevent the following common access control errors:</span></span>  
  
-   <span data-ttu-id="42bbf-114">Создание дескриптора безопасности с нулевой DACL.</span><span class="sxs-lookup"><span data-stu-id="42bbf-114">Creating a security descriptor with a null DACL.</span></span> <span data-ttu-id="42bbf-115">Пустая ссылка на список DACL позволяет любому пользователю добавить правила доступа к объекту, потенциально создания атаки типа "отказ в обслуживании".</span><span class="sxs-lookup"><span data-stu-id="42bbf-115">A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</span></span> <span data-ttu-id="42bbf-116">Новый <xref:System.Security.AccessControl.MutexSecurity> объект всегда начинается с пустым DACL запрещает любой доступ для всех пользователей.</span><span class="sxs-lookup"><span data-stu-id="42bbf-116">A new <xref:System.Security.AccessControl.MutexSecurity> object always starts with an empty DACL, which denies all access for all users.</span></span>  
  
-   <span data-ttu-id="42bbf-117">Изменение канонического порядка элементов ACE.</span><span class="sxs-lookup"><span data-stu-id="42bbf-117">Violating the canonical ordering of ACEs.</span></span> <span data-ttu-id="42bbf-118">Если список управления ДОСТУПОМ в список DACL не содержится в каноническом порядке, пользователи могут случайно получить доступ к защищенному объекту.</span><span class="sxs-lookup"><span data-stu-id="42bbf-118">If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</span></span> <span data-ttu-id="42bbf-119">Например запрещающие права доступа всегда должны предшествовать правам разрешенного доступа.</span><span class="sxs-lookup"><span data-stu-id="42bbf-119">For example, denied access rights must always appear before allowed access rights.</span></span> <span data-ttu-id="42bbf-120"><xref:System.Security.AccessControl.MutexSecurity> объекты внутренне сохранить правильный порядок.</span><span class="sxs-lookup"><span data-stu-id="42bbf-120"><xref:System.Security.AccessControl.MutexSecurity> objects maintain the correct order internally.</span></span>  
  
-   <span data-ttu-id="42bbf-121">Управление флагами дескрипторов безопасности, которые должны быть под управлением диспетчера ресурсов только.</span><span class="sxs-lookup"><span data-stu-id="42bbf-121">Manipulating security descriptor flags, which should be under resource manager control only.</span></span>  
  
-   <span data-ttu-id="42bbf-122">Создание недопустимых сочетаний флагов элементов управления ДОСТУПОМ.</span><span class="sxs-lookup"><span data-stu-id="42bbf-122">Creating invalid combinations of ACE flags.</span></span>  
  
-   <span data-ttu-id="42bbf-123">Управление (ACE).</span><span class="sxs-lookup"><span data-stu-id="42bbf-123">Manipulating inherited ACEs.</span></span> <span data-ttu-id="42bbf-124">Наследование и распространение обрабатываются диспетчером ресурсов в ответ на изменения, внесенные в правила доступа и аудита.</span><span class="sxs-lookup"><span data-stu-id="42bbf-124">Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</span></span>  
  
-   <span data-ttu-id="42bbf-125">Вставка смысла элементов управления доступом в списки управления доступом.</span><span class="sxs-lookup"><span data-stu-id="42bbf-125">Inserting meaningless ACEs into ACLs.</span></span>  
  
 <span data-ttu-id="42bbf-126">Только возможности, не поддерживается для объектов безопасности .NET, опасные операции, которые следует избегать большинством разработчиками приложений, таких как следующие:</span><span class="sxs-lookup"><span data-stu-id="42bbf-126">The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</span></span>  
  
-   <span data-ttu-id="42bbf-127">Низкоуровневые задачи, которые обычно выполняются диспетчером ресурсов.</span><span class="sxs-lookup"><span data-stu-id="42bbf-127">Low-level tasks that are normally performed by the resource manager.</span></span>  
  
-   <span data-ttu-id="42bbf-128">Добавление или удаление записей управления доступом способами, которые не поддерживают канонического порядка.</span><span class="sxs-lookup"><span data-stu-id="42bbf-128">Adding or removing access control entries in ways that do not maintain the canonical ordering.</span></span>  
  
 <span data-ttu-id="42bbf-129">Чтобы изменить безопасность управления доступом Windows для именованного мьютекса, используйте <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> метода <xref:System.Security.AccessControl.MutexSecurity> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-129">To modify Windows access control security for a named mutex, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.MutexSecurity> object.</span></span> <span data-ttu-id="42bbf-130">Изменение объекта безопасности, добавляя и удаляя правила, а затем используйте <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> метод присоединяет ее повторно.</span><span class="sxs-lookup"><span data-stu-id="42bbf-130">Modify the security object by adding and removing rules, and then use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> method to reattach it.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="42bbf-131">Изменения, внесенные в <xref:System.Security.AccessControl.MutexSecurity> объекта не влияют на уровни доступа именованный мьютекс, пока не будет вызван <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> метод назначения объекта измененного безопасности для именованного мьютекса.</span><span class="sxs-lookup"><span data-stu-id="42bbf-131">Changes you make to a <xref:System.Security.AccessControl.MutexSecurity> object do not affect the access levels of the named mutex until you call the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named mutex.</span></span>  
  
 <span data-ttu-id="42bbf-132">Для управления доступом из одного мьютекс можно скопировать в другой, используйте <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> метод, чтобы получить <xref:System.Security.AccessControl.MutexSecurity> объект, представляющий правил доступа и аудита для первого мьютекса, а затем используйте <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> метод или конструктор, принимающий <xref:System.Security.AccessControl.MutexSecurity>объекта, чтобы присвоить второй мьютекс этих правил.</span><span class="sxs-lookup"><span data-stu-id="42bbf-132">To copy access control security from one mutex to another, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.MutexSecurity> object representing the access and audit rules for the first mutex, and then use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> method, or a constructor that accepts a <xref:System.Security.AccessControl.MutexSecurity> object, to assign those rules to the second mutex.</span></span>  
  
 <span data-ttu-id="42bbf-133">Пользователи с инвестиции в языке определения дескриптора безопасности (SDDL) могут использовать <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> метод, чтобы задать правила доступа для именованного мьютекса и <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> метод, чтобы получить строку, представляющую правила доступа в формате SDDL.</span><span class="sxs-lookup"><span data-stu-id="42bbf-133">Users with an investment in the security descriptor definition language (SDDL) can use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to set access rules for a named mutex, and the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method to obtain a string that represents the access rules in SDDL format.</span></span> <span data-ttu-id="42bbf-134">Не рекомендуется для разработки новых приложений.</span><span class="sxs-lookup"><span data-stu-id="42bbf-134">This is not recommended for new development.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42bbf-135">Безопасность объектов синхронизации не поддерживается для Windows 98 или Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="42bbf-135">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42bbf-136">В следующем примере кода демонстрируется разделение между <xref:System.Security.AccessControl.AccessControlType.Allow> правила и <xref:System.Security.AccessControl.AccessControlType.Deny> правила, а также показывает комбинацию прав совместимых правил.</span><span class="sxs-lookup"><span data-stu-id="42bbf-136">The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType.Allow> rules and <xref:System.Security.AccessControl.AccessControlType.Deny> rules, and shows the combination of rights in compatible rules.</span></span> <span data-ttu-id="42bbf-137">В примере создается <xref:System.Security.AccessControl.MutexSecurity> , добавляются правила, разрешающие и запрещающие различные права для текущего пользователя и отображает полученная пара правил.</span><span class="sxs-lookup"><span data-stu-id="42bbf-137">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="42bbf-138">Затем разрешает новые права для текущего пользователя и отображает результат, показывающий, что новые права, объединяются с существующим <xref:System.Security.AccessControl.AccessControlType.Allow> правило.</span><span class="sxs-lookup"><span data-stu-id="42bbf-138">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42bbf-139">В этом примере не присоединяется объект безопасности <xref:System.Threading.Mutex> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-139">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="42bbf-140">Примеры, в которых присоединить объекты безопасности можно найти в <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> и <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="42bbf-140">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.MutexAccessRule" />
    <altmember cref="T:System.Security.AccessControl.MutexAuditRule" />
    <altmember cref="T:System.Security.AccessControl.MutexRights" />
    <altmember cref="M:System.Threading.Mutex.GetAccessControl" />
    <altmember cref="M:System.Threading.Mutex.SetAccessControl(System.Security.AccessControl.MutexSecurity)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="42bbf-141">Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.MutexSecurity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-141">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexSecurity" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42bbf-142">Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.MutexSecurity" /> со значениями по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-142">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexSecurity" /> class with default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-143">Новый <xref:System.Security.AccessControl.MutexSecurity> объект всегда начинается со списком пустой доступом на уровне пользователей (DACL), который запрещает любой доступ для всех пользователей.</span><span class="sxs-lookup"><span data-stu-id="42bbf-143">A new <xref:System.Security.AccessControl.MutexSecurity> object always starts with an empty discretionary access list (DACL), which denies all access for all users.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="42bbf-144">В Windows 98 и Windows Millenium Edition этот класс не поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-144">This class is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexSecurity (string name, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexSecurity(System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexSecurity : string * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.MutexSecurity" Usage="new System.Security.AccessControl.MutexSecurity (name, includeSections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="42bbf-145">Имя системного мьютекса, у которого запрашиваются правила безопасности управления доступом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-145">The name of the system mutex whose access control security rules are to be retrieved.</span>
          </span>
        </param>
        <param name="includeSections">
          <span data-ttu-id="42bbf-146">Сочетание флагов <see cref="T:System.Security.AccessControl.AccessControlSections" />, которое определяет получаемые разделы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-146">A combination of <see cref="T:System.Security.AccessControl.AccessControlSections" /> flags specifying the sections to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42bbf-147">Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.MutexSecurity" /> с указанными разделами правил безопасности управления доступом из системного мьютекса с указанным именем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-147">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexSecurity" /> class with the specified sections of the access control security rules from the system mutex with the specified name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-148">Этот конструктор позволяет получить безопасность управления доступом для именованного системного мьютекса без предварительного создания <xref:System.Threading.Mutex> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-148">This constructor allows you to obtain the access control security for a named system mutex without first creating a <xref:System.Threading.Mutex> object.</span></span>  
  
 <span data-ttu-id="42bbf-149">Нужно соблюдать осторожность при работе с именованными системными объектами.</span><span class="sxs-lookup"><span data-stu-id="42bbf-149">Caution must be exercised when working with named system objects.</span></span> <span data-ttu-id="42bbf-150">Если имеется системный объект с именем `name` , но мьютекс, его параметры безопасности управления доступом можно получить.</span><span class="sxs-lookup"><span data-stu-id="42bbf-150">If there is a system object named `name` that is not a mutex, its control access security might be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="42bbf-151">Отсутствует системный объект с указанным именем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-151">There is no system object with the specified name.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="42bbf-152">В Windows 98 и Windows Millenium Edition этот класс не поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-152">This class is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.MutexSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42bbf-153">Получает значение перечисления, используемое классом <see cref="T:System.Security.AccessControl.MutexSecurity" /> для обозначения прав доступа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-153">Gets the enumeration that the <see cref="T:System.Security.AccessControl.MutexSecurity" /> class uses to represent access rights.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42bbf-154">Объект <see cref="T:System.Type" />, представляющий перечисление <see cref="T:System.Security.AccessControl.MutexRights" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-154">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.MutexRights" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-155">Классы, производные от <xref:System.Security.AccessControl.ObjectSecurity> класса переопределение <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> свойства и возвращаемые типа, они используют для представления права доступа.</span><span class="sxs-lookup"><span data-stu-id="42bbf-155">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="42bbf-156">При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство для определения типа перечисления подходит для использования с каждым объектом безопасности.</span><span class="sxs-lookup"><span data-stu-id="42bbf-156">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="mutexSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <span data-ttu-id="42bbf-157">Объект <see cref="T:System.Security.Principal.IdentityReference" />, идентифицирующий пользователя или группу, к которым относится данное правило.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-157">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="accessMask">
          <span data-ttu-id="42bbf-158">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.MutexRights" />, определяющее разрешаемые или запрещаемые права доступа, приведенное к целочисленному типу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-158">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the access rights to allow or deny, cast to an integer.</span>
          </span>
        </param>
        <param name="isInherited">
          <span data-ttu-id="42bbf-159">Нет смысла использовать для именованных мьютексов, так как у них отсутствует иерархия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-159">Meaningless for named mutexes, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="42bbf-160">Нет смысла использовать для именованных мьютексов, так как у них отсутствует иерархия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-160">Meaningless for named mutexes, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="42bbf-161">Нет смысла использовать для именованных мьютексов, так как у них отсутствует иерархия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-161">Meaningless for named mutexes, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="42bbf-162">Одно из значений <see cref="T:System.Security.AccessControl.AccessControlType" />, определяющее тип правила ("разрешить" или "запретить").</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-162">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42bbf-163">Создает новое правило управления доступом для указанного пользователя с указанными правами, типом управления доступом и флагами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-163">Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42bbf-164">Объект <see cref="T:System.Security.AccessControl.MutexAccessRule" />, представляющий указанные права для указанного пользователя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-164">A <see cref="T:System.Security.AccessControl.MutexAccessRule" /> object representing the specified rights for the specified user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-165">Для создания правила управления доступом рекомендуется использовать конструкторы <xref:System.Security.AccessControl.MutexAccessRule> класса.</span><span class="sxs-lookup"><span data-stu-id="42bbf-165">The recommended way to create access control rules is to use the constructors of the <xref:System.Security.AccessControl.MutexAccessRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42bbf-166">Несмотря на то, что флаги наследования и распространения не имеют смысла для именованными мьютексами, по-прежнему можно указывать.</span><span class="sxs-lookup"><span data-stu-id="42bbf-166">Although inheritance and propagation flags are meaningless for named mutexes, it is still possible to specify them.</span></span> <span data-ttu-id="42bbf-167">Это не рекомендуется, поскольку он ненужной усложняет обслуживания правил, например конфликтуют с сочетание правил, которые в противном случае будут совместимы.</span><span class="sxs-lookup"><span data-stu-id="42bbf-167">This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="42bbf-168">Параметр <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> или <paramref name="type" /> имеет недопустимое значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-168">
              <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42bbf-169">Свойство <paramref name="identityReference" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-169">
              <paramref name="identityReference" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="42bbf-170">-или- <paramref name="accessMask" /> равно нулю.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-170">-or-  <paramref name="accessMask" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="42bbf-171">Параметр <paramref name="identityReference" /> не относится к типу <see cref="T:System.Security.Principal.SecurityIdentifier" /> и к такому типу, как <see cref="T:System.Security.Principal.NTAccount" />, который можно преобразовать в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-171">
              <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.MutexSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42bbf-172">Получает тип, используемый классом <see cref="T:System.Security.AccessControl.MutexSecurity" /> для обозначения правил доступа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-172">Gets the type that the <see cref="T:System.Security.AccessControl.MutexSecurity" /> class uses to represent access rules.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42bbf-173">Объект <see cref="T:System.Type" />, представляющий класс <see cref="T:System.Security.AccessControl.MutexAccessRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-173">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-174">Классы, производные от <xref:System.Security.AccessControl.ObjectSecurity> класса переопределение <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> свойства и возвращаемые типа, они используют для представления правила доступа.</span><span class="sxs-lookup"><span data-stu-id="42bbf-174">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rules.</span></span> <span data-ttu-id="42bbf-175">При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство для определения тип правила доступа подходит для использования с каждым объектом безопасности.</span><span class="sxs-lookup"><span data-stu-id="42bbf-175">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.MutexAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.MutexAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As MutexAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::MutexAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.Security.AccessControl.MutexAccessRule -&gt; unit" Usage="mutexSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="42bbf-176">Добавляемое правило управления доступом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-176">The access control rule to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42bbf-177">Выполняет поиск подходящего правила управления доступом, с которым можно объединить новое правило.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-177">Searches for a matching access control rule with which the new rule can be merged.</span>
          </span>
          <span data-ttu-id="42bbf-178">Если поиск не дал результатов, добавляется новое правило.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-178">If none are found, adds the new rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-179"><xref:System.Security.AccessControl.MutexSecurity.AddAccessRule%2A> Метод осуществляет поиск правил с тем же пользователем или группой, а также же <xref:System.Security.AccessControl.AccessControlType> как `rule`.</span><span class="sxs-lookup"><span data-stu-id="42bbf-179">The <xref:System.Security.AccessControl.MutexSecurity.AddAccessRule%2A> method searches for rules with the same user or group and the same <xref:System.Security.AccessControl.AccessControlType> as `rule`.</span></span> <span data-ttu-id="42bbf-180">Если ничего не найдено, `rule` добавляется.</span><span class="sxs-lookup"><span data-stu-id="42bbf-180">If none are found, `rule` is added.</span></span> <span data-ttu-id="42bbf-181">Если правило сопоставления обнаруживается, права в `rule` объединяются с существующим правилом.</span><span class="sxs-lookup"><span data-stu-id="42bbf-181">If a matching rule is found, the rights in `rule` are merged with the existing rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42bbf-182">В следующем примере кода демонстрируется разделение между <xref:System.Security.AccessControl.AccessControlType.Allow> правила и <xref:System.Security.AccessControl.AccessControlType.Deny> правила, а также показывает комбинацию прав совместимых правил.</span><span class="sxs-lookup"><span data-stu-id="42bbf-182">The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType.Allow> rules and <xref:System.Security.AccessControl.AccessControlType.Deny> rules, and shows the combination of rights in compatible rules.</span></span> <span data-ttu-id="42bbf-183">В примере создается <xref:System.Security.AccessControl.MutexSecurity> , добавляются правила, разрешающие и запрещающие различные права для текущего пользователя и отображает полученная пара правил.</span><span class="sxs-lookup"><span data-stu-id="42bbf-183">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="42bbf-184">Затем разрешает новые права для текущего пользователя и отображает результат, показывающий, что новые права, объединяются с существующим <xref:System.Security.AccessControl.AccessControlType.Allow> правило.</span><span class="sxs-lookup"><span data-stu-id="42bbf-184">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42bbf-185">В этом примере не присоединяется объект безопасности <xref:System.Threading.Mutex> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-185">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="42bbf-186">Примеры, в которых присоединить объекты безопасности можно найти в <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="42bbf-186">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType><xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42bbf-187">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-187">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Principal.IdentityNotMappedException">
          <span data-ttu-id="42bbf-188">
            <paramref name="rule" /> не может быть сопоставлен известному удостоверению.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-188">
              <paramref name="rule" /> cannot be mapped to a known identity.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.MutexAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.MutexAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As MutexAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::MutexAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.Security.AccessControl.MutexAuditRule -&gt; unit" Usage="mutexSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="42bbf-189">Добавляемое правило аудита.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-189">The audit rule to add.</span>
          </span>
          <span data-ttu-id="42bbf-190">Поиск ведется по имени пользователя, указанному в этом правиле.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-190">The user specified by this rule determines the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42bbf-191">Осуществляет поиск правила аудита, с которым можно объединить новое правило.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-191">Searches for an audit rule with which the new rule can be merged.</span>
          </span>
          <span data-ttu-id="42bbf-192">Если поиск не дал результатов, добавляется новое правило.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-192">If none are found, adds the new rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-193"><xref:System.Security.AccessControl.MutexSecurity.AddAuditRule%2A> Метод ищет правила с одного пользователя или группу в качестве `rule`.</span><span class="sxs-lookup"><span data-stu-id="42bbf-193">The <xref:System.Security.AccessControl.MutexSecurity.AddAuditRule%2A> method searches for rules with the same user or group as `rule`.</span></span> <span data-ttu-id="42bbf-194">Если ничего не найдено, `rule` добавляется.</span><span class="sxs-lookup"><span data-stu-id="42bbf-194">If none are found, `rule` is added.</span></span> <span data-ttu-id="42bbf-195">Если правило сопоставления обнаруживается, что флаги в `rule` объединяются в существующее правило.</span><span class="sxs-lookup"><span data-stu-id="42bbf-195">If a matching rule is found, the flags in `rule` are merged into the existing rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="mutexSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <span data-ttu-id="42bbf-196">Объект <see cref="T:System.Security.Principal.IdentityReference" />, идентифицирующий пользователя или группу, к которым относится данное правило.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-196">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="accessMask">
          <span data-ttu-id="42bbf-197">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.MutexRights" />, определяющее права доступа для аудита, приведенное к целочисленному типу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-197">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the access rights to audit, cast to an integer.</span>
          </span>
        </param>
        <param name="isInherited">
          <span data-ttu-id="42bbf-198">Нет смысла использовать для именованных дескрипторов ожидания, так как у них отсутствует иерархия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-198">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="42bbf-199">Нет смысла использовать для именованных дескрипторов ожидания, так как у них отсутствует иерархия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-199">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="42bbf-200">Нет смысла использовать для именованных дескрипторов ожидания, так как у них отсутствует иерархия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-200">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="42bbf-201">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.AuditFlags" />, определяющее предмет аудита — успешные попытки доступа, неудачные попытки доступа или все попытки доступа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-201">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values that specify whether to audit successful access, failed access, or both.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42bbf-202">Создает новое правило аудита, в котором указывается пользователь, к которому относится правило, правила доступа для аудита, а также событие, вызывающее срабатывание правила аудита.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-202">Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42bbf-203">Объект <see cref="T:System.Security.AccessControl.MutexAuditRule" />, представляющий указанное правило аудита для указанного пользователя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-203">A <see cref="T:System.Security.AccessControl.MutexAuditRule" /> object representing the specified audit rule for the specified user.</span>
          </span>
          <span data-ttu-id="42bbf-204">Метод возвращает объект базового класса (<see cref="T:System.Security.AccessControl.AuditRule" />), но возвращаемое значение можно безопасно привести к производному классу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-204">The return type of the method is the base class, <see cref="T:System.Security.AccessControl.AuditRule" />, but the return value can be cast safely to the derived class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-205">Для создания правила аудита рекомендуется использовать конструкторы <xref:System.Security.AccessControl.MutexAuditRule> класса.</span><span class="sxs-lookup"><span data-stu-id="42bbf-205">The recommended way to create audit rules is to use the constructors of the <xref:System.Security.AccessControl.MutexAuditRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42bbf-206">Несмотря на то, что флаги наследования и распространения не имеют смысла для именованными мьютексами, по-прежнему можно указывать.</span><span class="sxs-lookup"><span data-stu-id="42bbf-206">Although inheritance and propagation flags are meaningless for named mutexes, it is still possible to specify them.</span></span> <span data-ttu-id="42bbf-207">Это не рекомендуется, поскольку он ненужной усложняет обслуживания правил, например конфликтуют с сочетание правил, которые в противном случае будут совместимы.</span><span class="sxs-lookup"><span data-stu-id="42bbf-207">This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="42bbf-208">Параметр <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> или <paramref name="flags" /> имеет недопустимое значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-208">
              <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="flags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42bbf-209">Свойство <paramref name="identityReference" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-209">
              <paramref name="identityReference" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="42bbf-210">-или- <paramref name="accessMask" /> равно нулю.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-210">-or-  <paramref name="accessMask" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="42bbf-211">Параметр <paramref name="identityReference" /> не относится к типу <see cref="T:System.Security.Principal.SecurityIdentifier" /> и к такому типу, как <see cref="T:System.Security.Principal.NTAccount" />, который можно преобразовать в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-211">
              <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.MutexSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42bbf-212">Получает тип, используемый классом <see cref="T:System.Security.AccessControl.MutexSecurity" /> для обозначения правил аудита.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-212">Gets the type that the <see cref="T:System.Security.AccessControl.MutexSecurity" /> class uses to represent audit rules.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42bbf-213">Объект <see cref="T:System.Type" />, представляющий класс <see cref="T:System.Security.AccessControl.MutexAuditRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-213">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.MutexAuditRule" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-214">Классы, производные от <xref:System.Security.AccessControl.ObjectSecurity> класса переопределение <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> свойства и возвращаемые типа, они используют для представления права аудита.</span><span class="sxs-lookup"><span data-stu-id="42bbf-214">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent audit rights.</span></span> <span data-ttu-id="42bbf-215">При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство для определения тип правила аудита подходит для использования с каждым объектом безопасности.</span><span class="sxs-lookup"><span data-stu-id="42bbf-215">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.MutexAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.MutexAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As MutexAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::MutexAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.Security.AccessControl.MutexAccessRule -&gt; bool" Usage="mutexSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="42bbf-216">Объект <see cref="T:System.Security.AccessControl.MutexAccessRule" />, определяющий пользователя и тип <see cref="T:System.Security.AccessControl.AccessControlType" /> для поиска, а также набор флагов наследования и распространения, с которыми должно быть совместимо найденное правило.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-216">A <see cref="T:System.Security.AccessControl.MutexAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span>
          </span>
          <span data-ttu-id="42bbf-217">Задает права, которые требуется удалить из совместимого правила, если оно будет найдено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-217">Specifies the rights to remove from the compatible rule, if found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42bbf-218">Осуществляет поиск правила управления доступом с тем же именем пользователя и значением <see cref="T:System.Security.AccessControl.AccessControlType" /> ("разрешить" или "запретить"), что и указанного правила, а также с совместимыми флагами наследования и распространения; если правило найдено, содержащиеся в указанном правиле доступа права удаляются.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-218">Searches for an access control rule with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42bbf-219">Значение <see langword="true" />, если совместимое правило найдено; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-219">
              <see langword="true" /> if a compatible rule is found; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-220">Текущий <xref:System.Security.AccessControl.MutexSecurity> ищется правило с тем же пользователем и одного <xref:System.Security.AccessControl.AccessControlType> как `rule`.</span><span class="sxs-lookup"><span data-stu-id="42bbf-220">The current <xref:System.Security.AccessControl.MutexSecurity> is searched for a rule that has the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="42bbf-221">Если такие правило не найдено, никакие действия не выполняются и метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="42bbf-221">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="42bbf-222">При обнаружении правил сопоставления флагов наследования и выполняется проверка на совместимость с флагами, установленными в `rule`.</span><span class="sxs-lookup"><span data-stu-id="42bbf-222">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="42bbf-223">Если совместимые правило не найдено, никакие действия не выполняются и метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="42bbf-223">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="42bbf-224">Если найдено правило с совместимыми флагами, права, указанные в `rule` удаляются из совместимого правила, а метод возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="42bbf-224">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="42bbf-225">Если `rule` задает права, не содержащиеся в совместимом правиле, никакие действия не выполняются по отношению к эти права.</span><span class="sxs-lookup"><span data-stu-id="42bbf-225">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="42bbf-226">Если все права, удаляются из совместимого правила, правило целиком удаляется из текущей <xref:System.Security.AccessControl.MutexSecurity> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-226">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.MutexSecurity> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="42bbf-227">Хотя флаги наследования и распространения правил доступа, мьютекс, можно задать путем создания их с <xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A> метода, это не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="42bbf-227">Although you can specify inheritance and propagation flags for mutex access rules, by creating them with the <xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A> method, this is not recommended.</span></span> <span data-ttu-id="42bbf-228">Наследование и распространение не имеют смысла для именованных мьютексов и усложняют процедуры управления правилами доступа.</span><span class="sxs-lookup"><span data-stu-id="42bbf-228">Inheritance and propagation have no meaning for named mutexes, and they make the maintenance of access rules more complicated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42bbf-229">В следующем примере кода показано использование <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A> метод для удаления прав из <xref:System.Security.AccessControl.AccessControlType.Allow> правило <xref:System.Security.AccessControl.MutexSecurity> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-229">The following code example demonstrates the use of the <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A> method to remove rights from an <xref:System.Security.AccessControl.AccessControlType.Allow> rule in a <xref:System.Security.AccessControl.MutexSecurity> object.</span></span> <span data-ttu-id="42bbf-230">Здесь также показано, что другие права в `rule` игнорируются.</span><span class="sxs-lookup"><span data-stu-id="42bbf-230">It also shows that other rights in `rule` are ignored.</span></span>  
  
 <span data-ttu-id="42bbf-231">В примере создается <xref:System.Security.AccessControl.MutexSecurity> и добавляющий правил, разрешающих и запрещающих различные права для текущего пользователя.</span><span class="sxs-lookup"><span data-stu-id="42bbf-231">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="42bbf-232">Права допускается включать <xref:System.Security.AccessControl.MutexRights.Modify>, <xref:System.Security.AccessControl.MutexRights.ReadPermissions>, и <xref:System.Security.AccessControl.MutexRights.Synchronize>.</span><span class="sxs-lookup"><span data-stu-id="42bbf-232">The rights allowed include <xref:System.Security.AccessControl.MutexRights.Modify>, <xref:System.Security.AccessControl.MutexRights.ReadPermissions>, and <xref:System.Security.AccessControl.MutexRights.Synchronize>.</span></span> <span data-ttu-id="42bbf-233">Затем в примере создается новое правило для текущего пользователя, включая <xref:System.Security.AccessControl.MutexRights.ReadPermissions> и <xref:System.Security.AccessControl.MutexRights.TakeOwnership> прав и использует правила с <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A> метод для удаления <xref:System.Security.AccessControl.MutexRights.ReadPermissions> из <xref:System.Security.AccessControl.AccessControlType.Allow> правило <xref:System.Security.AccessControl.MutexSecurity> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-233">The example then creates a new rule for the current user, including <xref:System.Security.AccessControl.MutexRights.ReadPermissions> and <xref:System.Security.AccessControl.MutexRights.TakeOwnership> rights, and uses that rule with the <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A> method to remove <xref:System.Security.AccessControl.MutexRights.ReadPermissions> from the <xref:System.Security.AccessControl.AccessControlType.Allow> rule in the <xref:System.Security.AccessControl.MutexSecurity> object.</span></span> <span data-ttu-id="42bbf-234">Лишний <xref:System.Security.AccessControl.MutexRights.TakeOwnership> непосредственно в `rule` игнорируется.</span><span class="sxs-lookup"><span data-stu-id="42bbf-234">The extraneous <xref:System.Security.AccessControl.MutexRights.TakeOwnership> right in `rule` is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42bbf-235">В этом примере не присоединяется объект безопасности <xref:System.Threading.Mutex> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-235">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="42bbf-236">Примеры, в которых присоединить объекты безопасности можно найти в <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> и <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="42bbf-236">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.RemoveAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.RemoveAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.RemoveAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.RemoveAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42bbf-237">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-237">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.MutexAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.MutexAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As MutexAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::MutexAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleAll : System.Security.AccessControl.MutexAccessRule -&gt; unit" Usage="mutexSecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="42bbf-238">Объект <see cref="T:System.Security.AccessControl.MutexAccessRule" />, определяющий пользователя и значение <see cref="T:System.Security.AccessControl.AccessControlType" /> для поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-238">A <see cref="T:System.Security.AccessControl.MutexAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for.</span>
          </span>
          <span data-ttu-id="42bbf-239">Все указанные в данном правиле права игнорируются.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-239">Any rights specified by this rule are ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42bbf-240">Осуществляет поиск всех правил управления доступом с тем же именем пользователя и значением свойства <see cref="T:System.Security.AccessControl.AccessControlType" /> ("разрешить" или "запретить"), что и у указанного правила, и удаляет найденные правила.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-240">Searches for all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule and, if found, removes them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-241">Текущий <xref:System.Security.AccessControl.MutexSecurity> поиск правила, имеющие тот же пользователь и же объекте <xref:System.Security.AccessControl.AccessControlType> как `rule`.</span><span class="sxs-lookup"><span data-stu-id="42bbf-241">The current <xref:System.Security.AccessControl.MutexSecurity> object is searched for rules that have the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="42bbf-242">Права, заданные `rule` при поиске игнорируются.</span><span class="sxs-lookup"><span data-stu-id="42bbf-242">Any rights specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="42bbf-243">Если соответствующие правила не найдены, никакие действия не выполняются.</span><span class="sxs-lookup"><span data-stu-id="42bbf-243">If no matching rules are found, no action is taken.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42bbf-244">В следующем примере кода показано, что <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll%2A> метод удаляет все правила, которые соответствуют пользователя и <xref:System.Security.AccessControl.AccessControlType>, игнорируя права.</span><span class="sxs-lookup"><span data-stu-id="42bbf-244">The following code example shows that the <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll%2A> method removes all rules that match user and <xref:System.Security.AccessControl.AccessControlType>, ignoring rights.</span></span>  
  
 <span data-ttu-id="42bbf-245">В примере создается <xref:System.Security.AccessControl.MutexSecurity> , добавляются правила, разрешающие и запрещающие различные права для текущего пользователя и затем объединяет дополнительные права в <xref:System.Security.AccessControl.AccessControlType.Allow> правило.</span><span class="sxs-lookup"><span data-stu-id="42bbf-245">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span> <span data-ttu-id="42bbf-246">Затем в примере создается новое правило, текущий пользователь может стать владельцем и использует правила для удаления <xref:System.Security.AccessControl.AccessControlType.Allow> правила из <xref:System.Security.AccessControl.MutexSecurity> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-246">The example then creates a new rule that allows the current user to take ownership, and uses that rule to remove the <xref:System.Security.AccessControl.AccessControlType.Allow> rule from the <xref:System.Security.AccessControl.MutexSecurity> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42bbf-247">В этом примере не присоединяется объект безопасности <xref:System.Threading.Mutex> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-247">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="42bbf-248">Примеры, в которых присоединить объекты безопасности можно найти в <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> и <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="42bbf-248">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42bbf-249">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-249">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.MutexAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.MutexAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As MutexAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::MutexAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.Security.AccessControl.MutexAccessRule -&gt; unit" Usage="mutexSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="42bbf-250">Объект <see cref="T:System.Security.AccessControl.MutexAccessRule" /> для удаления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-250">The <see cref="T:System.Security.AccessControl.MutexAccessRule" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42bbf-251">Осуществляет поиск правила управления доступом, в точности соответствующего указанному правилу, и удаляет найденное правило.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-251">Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-252">Правило удаляется только в том случае, если он точно соответствует `rule` во всех деталях, включая флаги.</span><span class="sxs-lookup"><span data-stu-id="42bbf-252">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="42bbf-253">Другие правила с тем же пользователем и <xref:System.Security.AccessControl.AccessControlType> не затрагиваются.</span><span class="sxs-lookup"><span data-stu-id="42bbf-253">Other rules with the same user and <xref:System.Security.AccessControl.AccessControlType> are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="42bbf-254">Правило соответствует одному или более базовые элементы управления доступом (ACE) и эти записи делятся или объединяются при необходимости, при изменении правил доступа для пользователя.</span><span class="sxs-lookup"><span data-stu-id="42bbf-254">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</span></span> <span data-ttu-id="42bbf-255">Таким образом, правило больше не существует в определенной форме, существовавший, когда он был добавлен и в этом случае <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A> метод удалить нельзя.</span><span class="sxs-lookup"><span data-stu-id="42bbf-255">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A> method cannot remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42bbf-256">В следующем примере кода показано, что <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A> метод требует точного соответствия, чтобы удалить правило, и правила, чтобы разрешать и запрещать права не зависят друг от друга.</span><span class="sxs-lookup"><span data-stu-id="42bbf-256">The following code example shows that the <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A> method requires an exact match in order to remove a rule, and that rules to allow and deny rights are independent of each other.</span></span>  
  
 <span data-ttu-id="42bbf-257">В примере создается <xref:System.Security.AccessControl.MutexSecurity> , добавляются правила, разрешающие и запрещающие различные права для текущего пользователя и затем объединяет дополнительные права в <xref:System.Security.AccessControl.AccessControlType.Allow> правило доступа.</span><span class="sxs-lookup"><span data-stu-id="42bbf-257">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <xref:System.Security.AccessControl.AccessControlType.Allow> access rule.</span></span> <span data-ttu-id="42bbf-258">Затем в примере исходный <xref:System.Security.AccessControl.AccessControlType.Allow> правило <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A> метод и отображение результатов, показывая, что данные не удаляются.</span><span class="sxs-lookup"><span data-stu-id="42bbf-258">The example then passes the original <xref:System.Security.AccessControl.AccessControlType.Allow> rule to the <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A> method, and displays the results, showing that nothing is deleted.</span></span> <span data-ttu-id="42bbf-259">В примере затем создается правило, которое соответствует <xref:System.Security.AccessControl.AccessControlType.Allow> правило в <xref:System.Security.AccessControl.MutexSecurity> и успешно использует <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A> метод, чтобы удалить правило.</span><span class="sxs-lookup"><span data-stu-id="42bbf-259">The example then constructs a rule that matches the <xref:System.Security.AccessControl.AccessControlType.Allow> rule in the <xref:System.Security.AccessControl.MutexSecurity> object, and successfully uses the <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A> method to remove the rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42bbf-260">В этом примере не присоединяется объект безопасности <xref:System.Threading.Mutex> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-260">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="42bbf-261">Примеры, в которых присоединить объекты безопасности можно найти в <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> и <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="42bbf-261">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42bbf-262">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-262">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.MutexAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.MutexAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As MutexAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::MutexAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.Security.AccessControl.MutexAuditRule -&gt; bool" Usage="mutexSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="42bbf-263">Объект <see cref="T:System.Security.AccessControl.MutexAuditRule" />, определяющий пользователя для поиска, а также набор флагов наследования и распространения, с которыми должно быть совместимо найденное правило.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-263">A <see cref="T:System.Security.AccessControl.MutexAuditRule" /> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span>
          </span>
          <span data-ttu-id="42bbf-264">Задает права, которые требуется удалить из совместимого правила, если оно будет найдено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-264">Specifies the rights to remove from the compatible rule, if found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42bbf-265">Осуществляет поиск правила управления аудитом с тем же именем пользователя, что и указанного правила доступа, а также с совместимыми флагами наследования и распространения; если совместимое правило найдено, содержащиеся в указанном правиле права удаляются.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-265">Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42bbf-266">Значение <see langword="true" />, если совместимое правило найдено; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-266">
              <see langword="true" /> if a compatible rule is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-267">Текущий <xref:System.Security.AccessControl.MutexSecurity> поиск правила аудита, которое имеет того же пользователя `rule`.</span><span class="sxs-lookup"><span data-stu-id="42bbf-267">The current <xref:System.Security.AccessControl.MutexSecurity> is searched for an audit rule that has the same user as `rule`.</span></span> <span data-ttu-id="42bbf-268">Если такие правило не найдено, никакие действия не выполняются и метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="42bbf-268">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="42bbf-269">При обнаружении правил сопоставления флагов наследования и выполняется проверка на совместимость с флагами, установленными в `rule`.</span><span class="sxs-lookup"><span data-stu-id="42bbf-269">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="42bbf-270">Если совместимые правило не найдено, никакие действия не выполняются и метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="42bbf-270">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="42bbf-271">Если найдено правило с совместимыми флагами, права, указанные в `rule` удаляются из совместимого правила, а метод возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="42bbf-271">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="42bbf-272">Если `rule` задает права, не содержащиеся в совместимом правиле, никакие действия не выполняются по отношению к эти права.</span><span class="sxs-lookup"><span data-stu-id="42bbf-272">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="42bbf-273">Если все права, удаляются из совместимого правила, правило целиком удаляется из текущей <xref:System.Security.AccessControl.MutexSecurity> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-273">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.MutexSecurity> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="42bbf-274">Хотя флаги наследования и распространения для мьютекс правила аудита, можно задать путем создания их с <xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A> метода, это не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="42bbf-274">Although you can specify inheritance and propagation flags for mutex audit rules, by creating them with the <xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A> method, this is not recommended.</span></span> <span data-ttu-id="42bbf-275">Наследование и распространение не имеют смысла для именованных мьютексов и усложняют процедуры управления правилами аудита.</span><span class="sxs-lookup"><span data-stu-id="42bbf-275">Inheritance and propagation have no meaning for named mutexes, and they make the maintenance of audit rules more complicated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42bbf-276">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-276">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.MutexAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.MutexAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As MutexAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::MutexAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.Security.AccessControl.MutexAuditRule -&gt; unit" Usage="mutexSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="42bbf-277">Объект <see cref="T:System.Security.AccessControl.MutexAuditRule" />, определяющий пользователя для поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-277">A <see cref="T:System.Security.AccessControl.MutexAuditRule" /> that specifies the user to search for.</span>
          </span>
          <span data-ttu-id="42bbf-278">Все указанные в данном правиле права игнорируются.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-278">Any rights specified by this rule are ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42bbf-279">Производит поиск всех правил аудита с тем же пользователем, что и у указанного правила, и удаляет найденные правила.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-279">Searches for all audit rules with the same user as the specified rule and, if found, removes them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-280">Текущий <xref:System.Security.AccessControl.MutexSecurity> поиск правила аудита с того же пользователя `rule`.</span><span class="sxs-lookup"><span data-stu-id="42bbf-280">The current <xref:System.Security.AccessControl.MutexSecurity> is searched for audit rules that have the same user as `rule`.</span></span> <span data-ttu-id="42bbf-281">Права, заданные `rule` при поиске игнорируются.</span><span class="sxs-lookup"><span data-stu-id="42bbf-281">Any rights specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="42bbf-282">Удаляются все правила сопоставления.</span><span class="sxs-lookup"><span data-stu-id="42bbf-282">All matching rules are removed.</span></span> <span data-ttu-id="42bbf-283">Если соответствующие правила не найдены, никакие действия не выполняются.</span><span class="sxs-lookup"><span data-stu-id="42bbf-283">If no matching rules are found, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42bbf-284">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-284">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.MutexAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.MutexAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As MutexAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::MutexAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.Security.AccessControl.MutexAuditRule -&gt; unit" Usage="mutexSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="42bbf-285">Удаляемый объект <see cref="T:System.Security.AccessControl.MutexAuditRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-285">The <see cref="T:System.Security.AccessControl.MutexAuditRule" /> to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42bbf-286">Осуществляет поиск правила аудита, в точности соответствующего указанному правилу, и удаляет найденное правило.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-286">Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-287">Правило удаляется только в том случае, если он точно соответствует `rule` во всех деталях, включая флаги.</span><span class="sxs-lookup"><span data-stu-id="42bbf-287">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="42bbf-288">Другие правила аудита для одного пользователя, не затрагиваются.</span><span class="sxs-lookup"><span data-stu-id="42bbf-288">Other audit rules for the same user are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="42bbf-289">Правило соответствует одному или более базовые элементы управления доступом (ACE) и эти записи делятся или объединяются при необходимости, при изменении правил аудита для пользователя.</span><span class="sxs-lookup"><span data-stu-id="42bbf-289">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</span></span> <span data-ttu-id="42bbf-290">Таким образом, правило больше не существует в определенной форме, существовавший, когда он был добавлен и в этом случае <xref:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific%2A> метод удалить нельзя.</span><span class="sxs-lookup"><span data-stu-id="42bbf-290">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific%2A> method cannot remove it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42bbf-291">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-291">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.MutexAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.MutexAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As MutexAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::MutexAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.Security.AccessControl.MutexAccessRule -&gt; unit" Usage="mutexSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="42bbf-292">Добавляемый объект <see cref="T:System.Security.AccessControl.MutexAccessRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-292">The <see cref="T:System.Security.AccessControl.MutexAccessRule" /> to add.</span>
          </span>
          <span data-ttu-id="42bbf-293">Имя пользователя, заданное в этом правиле, определяет правила, которые необходимо удалить перед добавлением данного правила.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-293">The user specified by this rule determines the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42bbf-294">Удаляет все правила управления доступом с тем же именем пользователя, что и у указанного правила, вне зависимости от значения свойства <see cref="T:System.Security.AccessControl.AccessControlType" />, после чего добавляет указанное правило.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-294">Removes all access control rules with the same user as the specified rule, regardless of <see cref="T:System.Security.AccessControl.AccessControlType" />, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-295">Если нет правил доступа пользователя, которого совпадают с указанным правилом, `rule` добавляется.</span><span class="sxs-lookup"><span data-stu-id="42bbf-295">If there are no access rules whose user matches the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42bbf-296">В следующем примере кода показан способ <xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A> метод заменяет указанное правило соответствия всех правил для соответствующего пользователя.</span><span class="sxs-lookup"><span data-stu-id="42bbf-296">The following code example shows how the <xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A> method replaces all rules for the matching user with the rule specified for the match.</span></span>  
  
 <span data-ttu-id="42bbf-297">В примере создается <xref:System.Security.AccessControl.MutexSecurity> и добавляющий правил, разрешающих и запрещающих различные права для текущего пользователя.</span><span class="sxs-lookup"><span data-stu-id="42bbf-297">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="42bbf-298">Затем в примере создается новое правило, который позволяет текущего пользователю полный контроль и использует <xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A> метод для замены обоих существующих правил новое правило.</span><span class="sxs-lookup"><span data-stu-id="42bbf-298">The example then creates a new rule that allows the current user full control, and uses the <xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A> method to replace both of the existing rules with the new rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42bbf-299">В этом примере не присоединяется объект безопасности <xref:System.Threading.Mutex> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-299">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="42bbf-300">Примеры, в которых присоединить объекты безопасности можно найти в <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> и <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="42bbf-300">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.ResetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.ResetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.ResetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.ResetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42bbf-301">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-301">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.MutexAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.MutexAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As MutexAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::MutexAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.Security.AccessControl.MutexAccessRule -&gt; unit" Usage="mutexSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="42bbf-302">Добавляемый объект <see cref="T:System.Security.AccessControl.MutexAccessRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-302">The <see cref="T:System.Security.AccessControl.MutexAccessRule" /> to add.</span>
          </span>
          <span data-ttu-id="42bbf-303">Имя пользователя и значение <see cref="T:System.Security.AccessControl.AccessControlType" /> определяют правила, которые необходимо удалить перед добавлением этого правила.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-303">The user and <see cref="T:System.Security.AccessControl.AccessControlType" /> of this rule determine the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42bbf-304">Удаляет все правила управления доступом с тем же именем пользователя и значением свойства <see cref="T:System.Security.AccessControl.AccessControlType" /> ("разрешить" или "запретить"), что и у указанного правила, после чего добавляет указанное правило.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-304">Removes all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-305">Если указанное правило имеет <xref:System.Security.AccessControl.AccessControlType.Allow>, этот метод действует для удаления всех <xref:System.Security.AccessControl.AccessControlType.Allow> правила для указанного пользователя, заменив указанного правила.</span><span class="sxs-lookup"><span data-stu-id="42bbf-305">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Allow>, the effect of this method is to remove all <xref:System.Security.AccessControl.AccessControlType.Allow> rules for the specified user, replacing them with the specified rule.</span></span> <span data-ttu-id="42bbf-306">Если указанное правило имеет <xref:System.Security.AccessControl.AccessControlType.Deny>, что все <xref:System.Security.AccessControl.AccessControlType.Deny> указанное правило замещается правила для указанного пользователя.</span><span class="sxs-lookup"><span data-stu-id="42bbf-306">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Deny>, all <xref:System.Security.AccessControl.AccessControlType.Deny> rules for the specified user are replaced with the specified rule.</span></span>  
  
 <span data-ttu-id="42bbf-307">Если нет правил, пользователя и <xref:System.Security.AccessControl.AccessControlType> соответствует указанное правило `rule` добавляется.</span><span class="sxs-lookup"><span data-stu-id="42bbf-307">If there are no rules whose user and <xref:System.Security.AccessControl.AccessControlType> match the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42bbf-308">В следующем примере кода показан как <xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A> метод удаляет все правила, соответствующие как пользователей, так и <xref:System.Security.AccessControl.AccessControlType> из `rule`, заменяя их с `rule`.</span><span class="sxs-lookup"><span data-stu-id="42bbf-308">The following code example shows how the <xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A> method removes all rules that match both the user and the <xref:System.Security.AccessControl.AccessControlType> of `rule`, replacing them with `rule`.</span></span>  
  
 <span data-ttu-id="42bbf-309">В примере создается <xref:System.Security.AccessControl.MutexSecurity> и добавляющий правил, разрешающих и запрещающих различные права для текущего пользователя.</span><span class="sxs-lookup"><span data-stu-id="42bbf-309">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="42bbf-310">Затем в примере создается новое правило, который позволяет текущего пользователю полный контроль и использует <xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A> метод для замены существующего разрешающее правило с новым правилом.</span><span class="sxs-lookup"><span data-stu-id="42bbf-310">The example then creates a new rule that allows the current user full control, and uses the <xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A> method to replace the existing Allow rule with the new rule.</span></span> <span data-ttu-id="42bbf-311">Правило, запрещающее доступ не влияет.</span><span class="sxs-lookup"><span data-stu-id="42bbf-311">The rule that denies access is not affected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42bbf-312">В этом примере не присоединяется объект безопасности <xref:System.Threading.Mutex> объекта.</span><span class="sxs-lookup"><span data-stu-id="42bbf-312">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="42bbf-313">Примеры, в которых присоединить объекты безопасности можно найти в <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> и <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="42bbf-313">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.SetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.SetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.SetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.SetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42bbf-314">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-314">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.MutexAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.MutexAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As MutexAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::MutexAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.Security.AccessControl.MutexAuditRule -&gt; unit" Usage="mutexSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="42bbf-315">Добавляемый объект <see cref="T:System.Security.AccessControl.MutexAuditRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-315">The <see cref="T:System.Security.AccessControl.MutexAuditRule" /> to add.</span>
          </span>
          <span data-ttu-id="42bbf-316">Имя пользователя, заданное в этом правиле, определяет правила, которые необходимо удалить перед добавлением данного правила.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-316">The user specified by this rule determines the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42bbf-317">Удаляет все правила аудита с тем же именем пользователя, что и у указанного правила, вне зависимости от значения свойства <see cref="T:System.Security.AccessControl.AuditFlags" />, после чего добавляет указанное правило.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-317">Removes all audit rules with the same user as the specified rule, regardless of the <see cref="T:System.Security.AccessControl.AuditFlags" /> value, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42bbf-318">Если нет которого пользователя совпадает с указанным правилом правил аудита `rule` добавляется.</span><span class="sxs-lookup"><span data-stu-id="42bbf-318">If there are no audit rules whose user matches the specified rule, `rule` is added.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42bbf-319">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42bbf-319">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>