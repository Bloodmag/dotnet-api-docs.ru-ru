<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RegistrySecurity.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e52f3b248c05ba047d59c24d923733a12bfa7839.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e52f3b248c05ba047d59c24d923733a12bfa7839</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Represents the Windows access control security for a registry key.</source>
          <target state="translated">Обеспечивает безопасность управления доступом Windows для раздела реестра.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>This class cannot be inherited.</source>
          <target state="translated">Этот класс не наследуется.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>A <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object specifies access rights for a registry key, and also specifies how access attempts are audited.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекта указывает права доступа к ключу реестра, а также указывает как попытки доступа подлежат аудиту.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Access rights to the registry key are expressed as rules, with each access rule represented by a <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> object.</source>
          <target state="translated">Права доступа к разделу реестра представляют собой правила, с каждым правилом доступа, представленного <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Each auditing rule is represented by a <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAuditRule&gt;</ph> object.</source>
          <target state="translated">Каждое правило аудита представленного <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAuditRule&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</source>
          <target state="translated">Это отражает базовая система безопасности Windows, в которой каждый защищаемый объект имеет максимум один список управления доступом (DACL), которая управляет доступом к защищенному объекту, а не более одной системы управления доступом (SACL), указывающее, какой доступ попытки подлежат аудиту.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</source>
          <target state="translated">Список DACL и SACL упорядоченные списки записи управления доступом (ACE), которые определяют правила доступа и аудита для пользователей и групп.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>A <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryAuditRule&gt;</ph> object might represent more than one ACE.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> или <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryAuditRule&gt;</ph> объект может представлять более одного элемента управления ДОСТУПОМ.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Windows access control security can only be applied to registry keys.</source>
          <target state="translated">Безопасность управления доступом Windows может применяться только к разделам реестра.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>It cannot be applied to individual key/value pairs stored in a key.</source>
          <target state="translated">Он не может применяться к пар отдельных ключей и значений, хранимых в ключе.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph>, and <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistryAuditRule&gt;</ph> classes hide the implementation details of ACLs and ACEs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph>, И <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistryAuditRule&gt;</ph> классы скрыть детали реализации, списки управления доступом и элементы управления доступом.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</source>
          <target state="translated">Они дают возможность игнорировать семнадцать разных типах элементов управления ДОСТУПОМ и сложных процедурах наследования и распространения прав доступа.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>These objects are also designed to prevent the following common access control errors:</source>
          <target state="translated">Эти объекты также позволяют предотвратить следующих распространенных ошибок управления доступом:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Creating a security descriptor with a null DACL.</source>
          <target state="translated">Создание дескриптора безопасности с нулевой DACL.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</source>
          <target state="translated">Пустая ссылка на список DACL позволяет любому пользователю добавить правила доступа к объекту, потенциально создания атаки типа "отказ в обслуживании".</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>A new <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object always starts with an empty DACL, which denies all access for all users.</source>
          <target state="translated">Новый <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объект всегда начинается с пустым DACL запрещает любой доступ для всех пользователей.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Violating the canonical ordering of ACEs.</source>
          <target state="translated">Изменение канонического порядка элементов ACE.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</source>
          <target state="translated">Если список управления ДОСТУПОМ в список DACL не содержится в каноническом порядке, пользователи могут случайно получить доступ к защищенному объекту.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>For example, denied access rights must always appear before allowed access rights.</source>
          <target state="translated">Например запрещающие права доступа всегда должны предшествовать правам разрешенного доступа.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> objects maintain the correct order internally.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекты внутренне сохранить правильный порядок.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Manipulating security descriptor flags, which should be under resource manager control only.</source>
          <target state="translated">Управление флагами дескрипторов безопасности, которые должны быть под управлением диспетчера ресурсов только.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Creating invalid combinations of ACE flags.</source>
          <target state="translated">Создание недопустимых сочетаний флагов элементов управления ДОСТУПОМ.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Manipulating inherited ACEs.</source>
          <target state="translated">Управление (ACE).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</source>
          <target state="translated">Наследование и распространение обрабатываются диспетчером ресурсов в ответ на изменения, внесенные в правила доступа и аудита.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Inserting meaningless ACEs into ACLs.</source>
          <target state="translated">Вставка смысла элементов управления доступом в списки управления доступом.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</source>
          <target state="translated">Только возможности, не поддерживается для объектов безопасности .NET, опасные операции, которые следует избегать большинством разработчиками приложений, таких как следующие:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Low-level tasks that are normally performed by the resource manager.</source>
          <target state="translated">Низкоуровневые задачи, которые обычно выполняются диспетчером ресурсов.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Adding or removing access control entries in ways that do not maintain the canonical ordering.</source>
          <target state="translated">Добавление или удаление записей управления доступом способами, которые не поддерживают канонического порядка.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>To modify Windows access control security for a registry key, use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get the <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object.</source>
          <target state="translated">Чтобы изменить безопасность управления доступом Windows для раздела реестра, используйте <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> метода <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Modify the security object by adding and removing rules, and then use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to reattach it.</source>
          <target state="translated">Изменение объекта безопасности, добавляя и удаляя правила, а затем используйте <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> метод присоединяет ее повторно.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Changes you make to a <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object do not affect the access levels of the registry key until you call the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to assign the altered security object to the registry key.</source>
          <target state="translated">Изменения, внесенные в <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекта не влияют на уровни доступа раздела реестра, пока не будет вызван <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> метод назначения объекта измененного безопасности для раздела реестра.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>To copy access control security from one registry key to another, use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get a <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object representing the access and audit rules for the first registry key, and then use the <ph id="ph3">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to assign those rules to the second registry key.</source>
          <target state="translated">Чтобы скопировать безопасность управления доступом из одного раздела реестра в другой, используйте <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> метод, чтобы получить <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объект, представляющий правил доступа и аудита для первого раздела реестра, а затем используйте <ph id="ph3">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> метод назначения этих правил для второго раздела реестра.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>You can also assign the rules to a second registry key with an <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A?displayProperty=nameWithType&gt;</ph> method that takes a <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object parameter.</source>
          <target state="translated">Можно также назначить правила для второй раздел реестра <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A?displayProperty=nameWithType&gt;</ph> или <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A?displayProperty=nameWithType&gt;</ph> метода, принимающего <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> параметра объекта.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Users with an investment in the security descriptor definition language (SDDL) can use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> method to set access rules for a registry key, and the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> method to obtain a string that represents the access rules in SDDL format.</source>
          <target state="translated">Пользователи с инвестиции в языке определения дескриптора безопасности (SDDL) могут использовать <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> метод, чтобы задать правила доступа для раздела реестра и <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> метод, чтобы получить строку, представляющую правила доступа в формате SDDL.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>This is not recommended for new development.</source>
          <target state="translated">Не рекомендуется для разработки новых приложений.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>This section contains two code examples.</source>
          <target state="translated">Этот раздел содержит два примера кода.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>The first example shows how compatible rules merge when added and removed, and the second shows how inheritance and propagation flags affect the addition and deletion of rules.</source>
          <target state="translated">В первом примере показано объединение совместимых правил при добавлении и удалении, а во втором демонстрируется влияние флаги наследования и распространения на добавление и удаление правил.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Example 1</source>
          <target state="translated">Пример 1</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>The following code example shows how the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A&gt;</ph> method removes rights from a compatible rule, and how the <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A&gt;</ph> method merges rights with compatible rules.</source>
          <target state="translated">В следующем примере кода показан как <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A&gt;</ph> метода выполняется удаление прав из совместимого правила и как <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A&gt;</ph> метод объединяет права совместимые правилам.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object and adds a rule that allows the current user <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType&gt;</ph> rights.</source>
          <target state="translated">В примере создается <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекта и добавляет правило, текущий пользователь <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType&gt;</ph> права.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>The example then creates a rule that grants the user <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType&gt;</ph>, with the same inheritance and propagation rights as the first rule, and uses the <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A&gt;</ph> method to remove this new rule from the <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object.</source>
          <target state="translated">Затем пример создает правило, которое предоставляет пользователю <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType&gt;</ph>с же наследования и распространения права, что первое правило, а также используется <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A&gt;</ph> метод, чтобы удалить это новое правило из <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights.SetValue&gt;</ph> is a constituent of <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey&gt;</ph>, so it is removed from the compatible rule.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights.SetValue&gt;</ph> составные части является <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey&gt;</ph>, поэтому он удаляется из совместимого правила.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>The rules in the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object are displayed, showing the remaining constituents of <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey&gt;</ph>.</source>
          <target state="translated">Правила в <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> отображаются объект, показывающий оставшиеся составными элементами <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>The example code then calls the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A&gt;</ph> method to merge the <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.SetValue&gt;</ph> right back into the rule in the <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object.</source>
          <target state="translated">Пример кода вызывает <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A&gt;</ph> метод для слияния <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.SetValue&gt;</ph> правой обратно в правило в <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> object.</source>
          <target state="translated">В этом примере не присоединяется объект безопасности <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>The second example in this section attaches a security object, and so do the examples in <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Во втором примере в этом разделе Присоединяет объект безопасности и поэтому примеров <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> и <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Example 2</source>
          <target state="translated">Пример 2</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>The following code example demonstrates access rules with inheritance and propagation.</source>
          <target state="translated">В следующем примере кода демонстрируется правила доступа с наследования и распространения.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object, then creates and adds two rules that have the <ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph> flag.</source>
          <target state="translated">В примере создается <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекта, создает и добавляет два правила, имеющие <ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph> флаг.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>The first rule has no propagation flags, while the second has <ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph>.</source>
          <target state="translated">Первое правило имеет не Флаги распространения, а второй имеет <ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit&gt;</ph> и <ph id="ph2">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>The program displays the rules in the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object, and then uses the <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object to create a subkey.</source>
          <target state="translated">Программа отображает правила в <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекта, а затем используется <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекта, чтобы создать подраздел.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>The program creates a child subkey and a grandchild subkey, then displays the security for each subkey.</source>
          <target state="translated">Программа создает дочерний подраздел и раздел внукам, а затем выводятся параметры безопасности для каждого из этих подразделов.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.RegistrySecurity">
          <source>Finally, the program deletes the test keys.</source>
          <target state="translated">Наконец программа удаляет ключи теста.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistrySecurity" /&gt;</ph> class with default values.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistrySecurity" /&gt;</ph> со значениями по умолчанию.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.#ctor">
          <source>A new <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object always starts with an empty discretionary access list (DACL), which denies all access for all users.</source>
          <target state="translated">Новый <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объект всегда начинается со списком пустой доступом на уровне пользователей (DACL), который запрещает любой доступ для всех пользователей.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.RegistrySecurity.AccessRightType">
          <source>Gets the enumeration type that the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistrySecurity" /&gt;</ph> class uses to represent access rights.</source>
          <target state="translated">Получает значение перечисления, используемое классом <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistrySecurity" /&gt;</ph> для обозначения прав доступа.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.RegistrySecurity.AccessRightType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.RegistryRights" /&gt;</ph> enumeration.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, представляющий перечисление <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.RegistryRights" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.RegistrySecurity.AccessRightType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;</ph> property and return the type they use to represent access rights.</source>
          <target state="translated">Классы, производные от <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> класса переопределение <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;</ph> свойства и возвращаемые типа, они используют для представления права доступа.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.RegistrySecurity.AccessRightType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство для определения типа перечисления подходит для использования с каждым объектом безопасности.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> that identifies the user or group the rule applies to.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>, идентифицирующий пользователя или группу, к которым относится данное правило.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryRights" /&gt;</ph> values specifying the access rights to allow or deny, cast to an integer.</source>
          <target state="translated">Побитовое сочетание значений <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryRights" /&gt;</ph>, определяющее разрешаемые или запрещаемые права доступа, приведенное к целочисленному типу.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>A Boolean value specifying whether the rule is inherited.</source>
          <target state="translated">Логическое значение, которое определяет, наследуется ли правило.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.InheritanceFlags" /&gt;</ph> values specifying how the rule is inherited by subkeys.</source>
          <target state="translated">Побитовое сочетание значений <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.InheritanceFlags" /&gt;</ph>, определяющее порядок наследования правила подразделами.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.PropagationFlags" /&gt;</ph> values that modify the way the rule is inherited by subkeys.</source>
          <target state="translated">Побитовое сочетание значений <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.PropagationFlags" /&gt;</ph>, изменяющее порядок наследования правила подразделами.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Meaningless if the value of <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>.</source>
          <target state="translated">Не имеет смысла, если свойство <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> имеет значение <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> values specifying whether the rights are allowed or denied.</source>
          <target state="translated">Одно из значений <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph>, определяющее тип правила ("разрешить" или "запретить").</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</source>
          <target state="translated">Создает новое правило управления доступом для указанного пользователя с указанными правами, типом управления доступом и флагами.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAccessRule" /&gt;</ph> object representing the specified rights for the specified user.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAccessRule" /&gt;</ph>, представляющий указанные права для указанного пользователя.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The recommended way to create access control rules is to use the constructors of the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> class.</source>
          <target state="translated">Для создания правила управления доступом рекомендуется использовать конструкторы <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Although you can specify the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType&gt;</ph> flag, there is no point in doing so.</source>
          <target state="translated">Несмотря на то, что можно указать <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType&gt;</ph> флаг, при этом нет смысла.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>For the purposes of access control, the name/value pairs in a subkey are not separate objects.</source>
          <target state="translated">В целях управления доступом пары "имя значение" в подразделах не являются отдельными объектами.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The access rights to name/value pairs are controlled by the rights of the subkey.</source>
          <target state="translated">Права доступа к пары имя значение, определяются правами для подраздела.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flag.</source>
          <target state="translated">Кроме того поскольку все подразделы представляют собой контейнеры (то есть они могут содержать другие подразделы), не затрагиваются управлением <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> флаг.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Finally, specifying the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</source>
          <target state="translated">Наконец, указав <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> флаг ненужной усложняет обслуживания правил, так как он мешает обычный сочетание совместимых правил.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="type" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph> или <ph id="ph4">&lt;paramref name="type" /&gt;</ph> имеет недопустимое значение.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> равен нулю.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>, nor of a type such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> не относится к типу <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> и к такому типу, как <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph>, который можно преобразовать в тип <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.RegistrySecurity.AccessRuleType">
          <source>Gets the type that the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistrySecurity" /&gt;</ph> class uses to represent access rules.</source>
          <target state="translated">Получает тип, используемый классом <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistrySecurity" /&gt;</ph> для обозначения правил доступа.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.RegistrySecurity.AccessRuleType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.RegistryAccessRule" /&gt;</ph> class.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, представляющий класс <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.RegistryAccessRule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.RegistrySecurity.AccessRuleType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;</ph> property and return the type they use to represent access rules.</source>
          <target state="translated">Классы, производные от <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> класса переопределение <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;</ph> свойства и возвращаемые типа, они используют для представления правила доступа.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.RegistrySecurity.AccessRuleType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</source>
          <target state="translated">При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство для определения тип правила доступа подходит для использования с каждым объектом безопасности.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The access control rule to add.</source>
          <target state="translated">Добавляемое правило управления доступом.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>Searches for a matching access control with which the new rule can be merged.</source>
          <target state="translated">Выполняет поиск подходящего элемента управления доступом, с которым можно объединить новое правило.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>If none are found, adds the new rule.</source>
          <target state="translated">Если поиск не дал результатов, добавляется новое правило.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A&gt;</ph> method searches for rules with the same user or group and the same <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> as <ph id="ph3">`rule`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A&gt;</ph> Метод осуществляет поиск правил с тем же пользователем или группой, а также же <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> как <ph id="ph3">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Если ничего не найдено, <ph id="ph1">`rule`</ph> добавляется.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>If a matching rule is found, the rights in <ph id="ph1">`rule`</ph> are merged with the existing rule.</source>
          <target state="translated">Если правило сопоставления обнаруживается, права в <ph id="ph1">`rule`</ph> объединяются с существующим правилом.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>Rules cannot be merged if they have different inheritance flags.</source>
          <target state="translated">Правила нельзя объединять, если они имеют различных флагов.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>For example, if a user is allowed read access with no inheritance flags, and <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A&gt;</ph> is used to add a rule giving the user write access with inheritance for subkeys (<ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType&gt;</ph>), the two rules cannot be merged.</source>
          <target state="translated">Например, если пользователь может доступ на чтение с флагами отсутствия наследования и <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A&gt;</ph> используется для добавления правила, предоставляя доступ на запись пользователя с помощью наследования для подразделов (<ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType&gt;</ph>), не удается выполнить слияние двух правил.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>Rules with different <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> values are never merged.</source>
          <target state="translated">Правила с различными <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> значения никогда не объединяются.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>Rules express rights in the most economical way.</source>
          <target state="translated">Правила выражают права наиболее экономичным способом.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>For example, if a user has <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights.QueryValues&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.Notify&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistryRights.ReadPermissions&gt;</ph> rights, and you add a rule allowing <ph id="ph4">&lt;xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys&gt;</ph> rights, the user has all the constituent parts of <ph id="ph5">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey&gt;</ph> rights.</source>
          <target state="translated">Например, если у пользователя есть <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights.QueryValues&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.Notify&gt;</ph> и <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistryRights.ReadPermissions&gt;</ph> права и добавьте правило, что позволяет <ph id="ph4">&lt;xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys&gt;</ph> прав, пользователь имеет все составные части <ph id="ph5">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey&gt;</ph> права.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>If you query the user's rights, you will see a rule containing <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey&gt;</ph> rights.</source>
          <target state="translated">Если вы выполняете запрос прав пользователя, вы увидите правила, содержащее <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey&gt;</ph> права.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>Similarly, if you remove <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys&gt;</ph> rights, the other constituents of <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey&gt;</ph> rights will reappear.</source>
          <target state="translated">Аналогичным образом при удалении <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys&gt;</ph> правами других составляющих <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey&gt;</ph> права появится снова.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The following code example creates registry access rules and adds them to a <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object, showing how rules that allow and deny rights remain separate, while compatible rules of the same kind are merged.</source>
          <target state="translated">В следующем примере кода создается реестра правила доступа и добавляет их в <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекта, отображаются как правила, разрешающие и запрещающие права остаются отдельные при совместимые правила одной и той же kind объединяются.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> object.</source>
          <target state="translated">В этом примере не присоединяется объект безопасности <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Примеры, в которых присоединить объекты безопасности можно найти в <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> и <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>A code example that demonstrates inheritance and propagation flags can be found in the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> class.</source>
          <target state="translated">Пример кода, демонстрирующий флаги наследования и распространения можно найти в <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AddAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>The audit rule to add.</source>
          <target state="translated">Добавляемое правило аудита.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AddAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>The user specified by this rule determines the search.</source>
          <target state="translated">Поиск ведется по имени пользователя, указанному в этом правиле.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AddAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>Searches for an audit rule with which the new rule can be merged.</source>
          <target state="translated">Осуществляет поиск правила аудита, с которым можно объединить новое правило.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AddAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>If none are found, adds the new rule.</source>
          <target state="translated">Если поиск не дал результатов, добавляется новое правило.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A&gt;</ph> method searches for rules with the same user or group as <ph id="ph2">`rule`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A&gt;</ph> Метод ищет правила с одного пользователя или группу в качестве <ph id="ph2">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Если ничего не найдено, <ph id="ph1">`rule`</ph> добавляется.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>If a matching rule is found, the flags in <ph id="ph1">`rule`</ph> are merged into the existing rule.</source>
          <target state="translated">Если правило сопоставления обнаруживается, что флаги в <ph id="ph1">`rule`</ph> объединяются в существующее правило.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>Rules cannot be merged if they have different inheritance flags.</source>
          <target state="translated">Правила нельзя объединять, если они имеют различных флагов.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AddAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>For example, if failed attempts to write to a key are audited for a particular user, with no inheritance flags, and <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A&gt;</ph> is used to add a rule specifying that failed attempts to change permissions are to be audited for the same user, but with inheritance for subkeys (<ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType&gt;</ph>), the two rules cannot be merged.</source>
          <target state="translated">Например, если Сбой попытки записи в раздел подлежат аудиту для конкретного пользователя, не флаги наследования, и <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A&gt;</ph> используется для добавления правила, указав, что неудачных попыток входа, чтобы изменить разрешения, проверяемые для одного пользователя, но с наследованием для Подразделы (<ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType&gt;</ph>), не удается выполнить слияние двух правил.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> that identifies the user or group the rule applies to.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>, идентифицирующий пользователя или группу, к которым относится данное правило.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryRights" /&gt;</ph> values specifying the access rights to audit, cast to an integer.</source>
          <target state="translated">Побитовое сочетание значений <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryRights" /&gt;</ph>, определяющее права доступа для аудита, приведенное к целочисленному типу.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A Boolean value specifying whether the rule is inherited.</source>
          <target state="translated">Логическое значение, которое определяет, наследуется ли правило.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.InheritanceFlags" /&gt;</ph> values specifying how the rule is inherited by subkeys.</source>
          <target state="translated">Побитовое сочетание значений <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.InheritanceFlags" /&gt;</ph>, определяющее порядок наследования правила подразделами.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.PropagationFlags" /&gt;</ph> values that modify the way the rule is inherited by subkeys.</source>
          <target state="translated">Побитовое сочетание значений <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.PropagationFlags" /&gt;</ph>, изменяющее порядок наследования правила подразделами.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Meaningless if the value of <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>.</source>
          <target state="translated">Не имеет смысла, если свойство <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> имеет значение <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> values specifying whether to audit successful access, failed access, or both.</source>
          <target state="translated">Побитовое сочетание значений <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph>, определяющее предмет аудита — успешные попытки доступа, неудачные попытки доступа или все попытки доступа.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, the inheritance and propagation of the rule, and the outcome that triggers the rule.</source>
          <target state="translated">Создает новое правило аудита, в котором указывается пользователь, к которому относится правило, права доступа для аудита, параметры наследования и распространения правила, а также событие, вызывающее срабатывание правила.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAuditRule" /&gt;</ph> object representing the specified audit rule for the specified user, with the specified flags.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAuditRule" /&gt;</ph>, представляющий указанное правило аудита для заданного пользователя с заданными флагами.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The return type of the method is the base class, <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph>, but the return value can be cast safely to the derived class.</source>
          <target state="translated">Метод возвращает объект базового класса (<ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph>), но возвращаемое значение можно безопасно привести к производному классу.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The recommended way to create audit rules is to use the constructors of the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAuditRule&gt;</ph> class.</source>
          <target state="translated">Для создания правила аудита рекомендуется использовать конструкторы <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAuditRule&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Although you can specify the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType&gt;</ph> flag, there is no point in doing so.</source>
          <target state="translated">Несмотря на то, что можно указать <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType&gt;</ph> флаг, при этом нет смысла.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>For the purposes of audit control, the name/value pairs in a subkey are not separate objects.</source>
          <target state="translated">В целях аудита пары "имя значение" в подразделах не являются отдельными объектами.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The audit rights to name/value pairs are controlled by the rights of the subkey.</source>
          <target state="translated">Права аудита для пары "имя значение", определяются правами для подраздела.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flag.</source>
          <target state="translated">Кроме того поскольку все подразделы представляют собой контейнеры (то есть они могут содержать другие подразделы), не затрагиваются управлением <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> флаг.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Finally, specifying the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</source>
          <target state="translated">Наконец, указав <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> флаг ненужной усложняет обслуживания правил, так как он мешает обычный сочетание совместимых правил.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="flags" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph> или <ph id="ph4">&lt;paramref name="flags" /&gt;</ph> имеет недопустимое значение.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> равен нулю.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>, nor of a type such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> не относится к типу <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> и к такому типу, как <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph>, который можно преобразовать в тип <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.RegistrySecurity.AuditRuleType">
          <source>Gets the type that the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistrySecurity" /&gt;</ph> class uses to represent audit rules.</source>
          <target state="translated">Получает тип, используемый классом <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistrySecurity" /&gt;</ph> для обозначения правил аудита.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.RegistrySecurity.AuditRuleType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.RegistryAuditRule" /&gt;</ph> class.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, представляющий класс <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.RegistryAuditRule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.RegistrySecurity.AuditRuleType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;</ph> property and return the type they use to represent audit rights.</source>
          <target state="translated">Классы, производные от <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> класса переопределение <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;</ph> свойства и возвращаемые типа, они используют для представления права аудита.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.RegistrySecurity.AuditRuleType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</source>
          <target state="translated">При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство для определения тип правила аудита подходит для использования с каждым объектом безопасности.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAccessRule" /&gt;</ph> that specifies the user and <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAccessRule" /&gt;</ph>, определяющий пользователя и тип <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> для поиска, а также набор флагов наследования и распространения, с которыми должно быть совместимо найденное правило.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          <target state="translated">Задает права, которые требуется удалить из совместимого правила, если оно будет найдено.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>Searches for an access control rule with the same user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (allow or deny) as the specified access rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</source>
          <target state="translated">Осуществляет поиск правила управления доступом с тем же именем пользователя и значением <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> ("разрешить" или "запретить"), что и указанного правила доступа, а также с совместимыми флагами наследования и распространения; если правило найдено, содержащиеся в указанном правиле доступа права удаляются.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a compatible rule is found; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если совместимое правило найдено; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> is searched for a rule that has the same user and the same <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> value as <ph id="ph3">`rule`</ph>.</source>
          <target state="translated">Текущий <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> ищется правило с тем же пользователем и одного <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> как <ph id="ph3">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Если такие правило не найдено, никакие действия не выполняются и метод возвращает <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">При обнаружении правил сопоставления флагов наследования и выполняется проверка на совместимость с флагами, установленными в <ph id="ph1">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Если совместимые правило не найдено, никакие действия не выполняются и метод возвращает <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Если найдено правило с совместимыми флагами, права, указанные в <ph id="ph1">`rule`</ph> удаляются из совместимого правила, а метод возвращает <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">Если <ph id="ph1">`rule`</ph> задает права, не содержащиеся в совместимом правиле, никакие действия не выполняются по отношению к эти права.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object.</source>
          <target state="translated">Если все права, удаляются из совместимого правила, правило целиком удаляется из текущей <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The following code example shows how the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A&gt;</ph> method removes rights from a compatible rule, and how the <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A&gt;</ph> method merges rights with compatible rules.</source>
          <target state="translated">В следующем примере кода показан как <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A&gt;</ph> метода выполняется удаление прав из совместимого правила и как <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A&gt;</ph> метод объединяет права совместимые правилам.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object and adds a rule that allows the current user <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType&gt;</ph> rights.</source>
          <target state="translated">В примере создается <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекта и добавляет правило, текущий пользователь <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType&gt;</ph> права.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The example then creates a rule that grants the user <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType&gt;</ph>, with the same inheritance and propagation rights as the first rule, and uses the <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A&gt;</ph> method to remove this new rule from the <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object.</source>
          <target state="translated">Затем пример создает правило, которое предоставляет пользователю <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType&gt;</ph>с же наследования и распространения права, что первое правило, а также используется <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A&gt;</ph> метод, чтобы удалить это новое правило из <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights.SetValue&gt;</ph> is a constituent of <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey&gt;</ph>, so it is removed from the compatible rule.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights.SetValue&gt;</ph> составные части является <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey&gt;</ph>, поэтому он удаляется из совместимого правила.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The rules in the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object are displayed, showing the remaining constituents of <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey&gt;</ph>.</source>
          <target state="translated">Правила в <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> отображаются объект, показывающий оставшиеся составными элементами <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.ReadKey&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The example code then calls the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A&gt;</ph> method to merge the <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.SetValue&gt;</ph> right back into the rule in the <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object.</source>
          <target state="translated">Пример кода вызывает <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A&gt;</ph> метод для слияния <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistryRights.SetValue&gt;</ph> правой обратно в правило в <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> object.</source>
          <target state="translated">В этом примере не присоединяется объект безопасности <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The second example in this section attaches a security object, and so do the examples in <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph><ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Во втором примере в этом разделе Присоединяет объект безопасности и поэтому примеров <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAccessRule" /&gt;</ph> that specifies the user and <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> to search for.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAccessRule" /&gt;</ph>, определяющий пользователя и значение <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> для поиска.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)">
          <source>Any rights, inheritance flags, or propagation flags specified by this rule are ignored.</source>
          <target state="translated">Никакие указанные в этом правиле права, флаги наследования и распространения не учитываются.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)">
          <source>Searches for all access control rules with the same user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (allow or deny) as the specified rule and, if found, removes them.</source>
          <target state="translated">Осуществляет поиск всех правил управления доступом с тем же именем пользователя и значением свойства <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> ("разрешить" или "запретить"), что и у указанного правила, и удаляет найденные правила.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> is searched for rules that have the same user and the same <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> value as <ph id="ph3">`rule`</ph>.</source>
          <target state="translated">Текущий <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> ищется правила, имеющие тот же пользователь и соответствует <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> как <ph id="ph3">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)">
          <source>Any rights, inheritance flags, or propagation flags specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">Все права, флаги наследования или заданные Флаги распространения <ph id="ph1">`rule`</ph> при поиске игнорируются.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">Если соответствующие правила не найдены, никакие действия не выполняются.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)">
          <source>For example, if a user has multiple rules that allow various rights with different inheritance and propagation flags, you can remove all those rules by creating a <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> object that specifies the user and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow?displayProperty=nameWithType&gt;</ph>, with any arbitrary rights and flags, and passing that rule to the <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A&gt;</ph> method.</source>
          <target state="translated">Например, если у пользователя есть несколько правил, позволяющих различные права на доступ с флагами различных наследования и распространения, можно удалить все правила, создав <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> объекта, указывающее пользователя и <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow?displayProperty=nameWithType&gt;</ph>с любой произвольный права и флаги и передав это правило, чтобы <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)">
          <source>The following code example shows that the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A&gt;</ph> method removes all rules that match user and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, ignoring rights and flags.</source>
          <target state="translated">В следующем примере кода показано, что <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A&gt;</ph> метод удаляет все правила, которые соответствуют пользователя и <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, без учета права и флаги.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object and adds rules that allow and deny various rights for the current user, with different inheritance and propagation flags.</source>
          <target state="translated">В примере создается <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> и добавляющий правил, разрешающих и запрещающих различные права для текущего пользователя, с другой флаги наследования и распространения.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)">
          <source>The example then creates a new rule that allows the current user to take ownership, and passes that rule to the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A&gt;</ph> method to remove the two rules that allow access.</source>
          <target state="translated">Затем в примере создается новое правило, текущий пользователь может стать владельцем и передает это правило, чтобы <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A&gt;</ph> метод, чтобы удалить два правила, разрешающие доступ.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> object.</source>
          <target state="translated">В этом примере не присоединяется объект безопасности <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)">
          <source>See the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">В разделе <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> метод и <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAccessRule" /&gt;</ph> to remove.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAccessRule" /&gt;</ph> для удаления.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
          <source>Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</source>
          <target state="translated">Осуществляет поиск правила управления доступом, в точности соответствующего указанному правилу, и удаляет найденное правило.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">Правило удаляется только в том случае, если он точно соответствует <ph id="ph1">`rule`</ph> во всех деталях, включая флаги.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
          <source>Other rules with the same user and <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> are not affected.</source>
          <target state="translated">Другие правила с тем же пользователем и <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> не затрагиваются.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
          <source>A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</source>
          <target state="translated">Правило соответствует одному или более базовые элементы управления доступом (ACE) и эти записи делятся или объединяются при необходимости, при изменении правил доступа для пользователя.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method cannot remove it.</source>
          <target state="translated">Таким образом, правило больше не существует в определенной форме, существовавший, когда он был добавлен и в этом случае <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A&gt;</ph> метод удалить нельзя.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
          <source>The following code example shows that the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method removes a rule only if it matches exactly.</source>
          <target state="translated">В следующем примере кода показано, что <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A&gt;</ph> метод удаляет правило только в том случае, если он соответствует в точности.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
          <source>The example creates two rules that allow different rights.</source>
          <target state="translated">В примере создаются два правила, предоставляющие различные права.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
          <source>The rules have compatible inheritance and propagation flags, so when the second rule is added it merges with the first.</source>
          <target state="translated">Правила имеют совместимыми флагами наследования и распространения, поэтому при добавлении второго правила он объединяется с первым.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method, specifying the first rule, but because the rules are merged there is no rule that matches.</source>
          <target state="translated">В примере вызывается <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A&gt;</ph> метод, указывая первое правило, но так как правила объединяются нет правил, соответствующий.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A&gt;</ph> method to the remove the second rule from the merged rule, and finally calls the <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method to remove the first rule.</source>
          <target state="translated">Затем в примере вызывается <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A&gt;</ph> метод для удаления второе правило из объединенных правила и наконец вызывает <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A&gt;</ph> метод для удаления первого правила.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> object.</source>
          <target state="translated">В этом примере не присоединяется объект безопасности <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
          <source>See the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">В разделе <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> метод и <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAuditRule" /&gt;</ph> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAuditRule" /&gt;</ph>, определяющий пользователя для поиска, а также набор флагов наследования и распространения, с которыми должно быть совместимо найденное правило.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          <target state="translated">Задает права, которые требуется удалить из совместимого правила, если оно будет найдено.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</source>
          <target state="translated">Осуществляет поиск правила управления аудитом с тем же именем пользователя, что и указанного правила доступа, а также с совместимыми флагами наследования и распространения; если совместимое правило найдено, содержащиеся в указанном правиле права удаляются.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a compatible rule is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если совместимое правило найдено; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> is searched for an audit rule that has the same user as <ph id="ph2">`rule`</ph>.</source>
          <target state="translated">Текущий <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> поиск правила аудита, которое имеет того же пользователя <ph id="ph2">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Если такие правило не найдено, никакие действия не выполняются и метод возвращает <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">При обнаружении правил сопоставления флагов наследования и выполняется проверка на совместимость с флагами, установленными в <ph id="ph1">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Если совместимые правило не найдено, никакие действия не выполняются и метод возвращает <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Если найдено правило с совместимыми флагами, права, указанные в <ph id="ph1">`rule`</ph> удаляются из совместимого правила, а метод возвращает <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">Если <ph id="ph1">`rule`</ph> задает права, не содержащиеся в совместимом правиле, никакие действия не выполняются по отношению к эти права.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object.</source>
          <target state="translated">Если все права, удаляются из совместимого правила, правило целиком удаляется из текущей <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleAll(System.Security.AccessControl.RegistryAuditRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAuditRule" /&gt;</ph> that specifies the user to search for.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAuditRule" /&gt;</ph>, определяющий пользователя для поиска.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleAll(System.Security.AccessControl.RegistryAuditRule)">
          <source>Any rights, inheritance flags, or propagation flags specified by this rule are ignored.</source>
          <target state="translated">Никакие указанные в этом правиле права, флаги наследования и распространения не учитываются.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleAll(System.Security.AccessControl.RegistryAuditRule)">
          <source>Searches for all audit rules with the same user as the specified rule and, if found, removes them.</source>
          <target state="translated">Производит поиск всех правил аудита с тем же пользователем, что и у указанного правила, и удаляет найденные правила.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleAll(System.Security.AccessControl.RegistryAuditRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> is searched for audit rules that have the same user as <ph id="ph2">`rule`</ph>.</source>
          <target state="translated">Текущий <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> поиск правила аудита с того же пользователя <ph id="ph2">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleAll(System.Security.AccessControl.RegistryAuditRule)">
          <source>Any rights, inheritance flags, or propagation flags specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">Все права, флаги наследования или заданные Флаги распространения <ph id="ph1">`rule`</ph> при поиске игнорируются.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleAll(System.Security.AccessControl.RegistryAuditRule)">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">Если соответствующие правила не найдены, никакие действия не выполняются.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleAll(System.Security.AccessControl.RegistryAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.RegistryAuditRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAuditRule" /&gt;</ph> to be removed.</source>
          <target state="translated">Удаляемый объект <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAuditRule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.RegistryAuditRule)">
          <source>Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</source>
          <target state="translated">Осуществляет поиск правила аудита, в точности соответствующего указанному правилу, и удаляет найденное правило.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.RegistryAuditRule)">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">Правило удаляется только в том случае, если он точно соответствует <ph id="ph1">`rule`</ph> во всех деталях, включая флаги.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.RegistryAuditRule)">
          <source>Other audit rules for the same user are not affected.</source>
          <target state="translated">Другие правила аудита для одного пользователя, не затрагиваются.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.RegistryAuditRule)">
          <source>A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</source>
          <target state="translated">Правило соответствует одному или более базовые элементы управления доступом (ACE) и эти записи делятся или объединяются при необходимости, при изменении правил аудита для пользователя.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.RegistryAuditRule)">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific%2A&gt;</ph> method cannot remove it.</source>
          <target state="translated">Таким образом, правило больше не существует в определенной форме, существовавший, когда он был добавлен и в этом случае <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific%2A&gt;</ph> метод удалить нельзя.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.RegistryAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.ResetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAccessRule" /&gt;</ph> to add.</source>
          <target state="translated">Добавляемый объект <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAccessRule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.ResetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          <target state="translated">Имя пользователя, заданное в этом правиле, определяет правила, которые необходимо удалить перед добавлением данного правила.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.ResetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>Removes all access control rules with the same user as the specified rule, regardless of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph>, and then adds the specified rule.</source>
          <target state="translated">Удаляет все правила управления доступом с тем же именем пользователя, что и у указанного правила, вне зависимости от значения свойства <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph>, после чего добавляет указанное правило.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.ResetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>If there are no access rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Если нет правил доступа пользователя, которого совпадают с указанным правилом, <ph id="ph1">`rule`</ph> добавляется.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.ResetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The following code example shows how the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A&gt;</ph> method replaces all rules for the matching user with the rule specified for the match.</source>
          <target state="translated">В следующем примере кода показан способ <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A&gt;</ph> метод заменяет указанное правило соответствия всех правил для соответствующего пользователя.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.ResetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object and adds rules that allow and deny various rights for the current user, with different inheritance and propagation flags.</source>
          <target state="translated">В примере создается <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> и добавляющий правил, разрешающих и запрещающих различные права для текущего пользователя, с другой флаги наследования и распространения.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.ResetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The example then creates a new rule that allows the current user only to read the key, and uses the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A&gt;</ph> method to remove the all rules for the user and replace them with the new rule.</source>
          <target state="translated">Затем в примере создается новое правило, который позволяет пользователю только для чтения ключ и использует <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A&gt;</ph> метод, чтобы удалить все правила для пользователя и замените их с новым правилом.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.ResetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> object.</source>
          <target state="translated">В этом примере не присоединяется объект безопасности <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.ResetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>See the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">В разделе <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> метод и <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAccessRule" /&gt;</ph> to add.</source>
          <target state="translated">Добавляемый объект <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAccessRule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> of this rule determine the rules to remove before this rule is added.</source>
          <target state="translated">Имя пользователя и значение <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> определяют правила, которые необходимо удалить перед добавлением этого правила.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>Removes all access control rules with the same user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (allow or deny) as the specified rule, and then adds the specified rule.</source>
          <target state="translated">Удаляет все правила управления доступом с тем же именем пользователя и значением свойства <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> ("разрешить" или "запретить"), что и у указанного правила, после чего добавляет указанное правило.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>If the specified rule has <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>, the effect of this method is to remove all <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rules for the specified user, replacing them with the specified rule.</source>
          <target state="translated">Если указанное правило имеет <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>, этот метод действует для удаления всех <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> правила для указанного пользователя, заменив указанного правила.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>If the specified rule has <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>, all <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> rules for the specified user are replaced with the specified rule.</source>
          <target state="translated">Если указанное правило имеет <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>, что все <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> указанное правило замещается правила для указанного пользователя.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>If there are no rules whose user and <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> match the specified rule, <ph id="ph2">`rule`</ph> is added.</source>
          <target state="translated">Если нет правил, пользователя и <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> соответствует указанное правило <ph id="ph2">`rule`</ph> добавляется.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The following code example shows that the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A&gt;</ph> method removes all rules that match both the user and the <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> of <ph id="ph3">`rule`</ph>, ignoring rights and flags, and replaces them with <ph id="ph4">`rule`</ph>.</source>
          <target state="translated">В следующем примере кода показано, что <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A&gt;</ph> метод удаляет все правила, соответствующие как пользователей, так и <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> из <ph id="ph3">`rule`</ph>, без учета права и флаги и заменяет их значением <ph id="ph4">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object and adds rules that allow and deny various rights for the current user, with different inheritance and propagation flags.</source>
          <target state="translated">В примере создается <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> и добавляющий правил, разрешающих и запрещающих различные права для текущего пользователя, с другой флаги наследования и распространения.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The example then creates a new rule that allows the current user only to read the key, and uses the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A&gt;</ph> method to remove the two rules that allow access and to replace them with the new rule.</source>
          <target state="translated">Затем в примере создается новое правило, который позволяет пользователю только для чтения ключ и использует <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A&gt;</ph> метод, чтобы удалить два правила, разрешающие доступ и заменить их с новым правилом.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>The rule that denies access is not affected.</source>
          <target state="translated">Правило, запрещающее доступ не влияет.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> object.</source>
          <target state="translated">В этом примере не присоединяется объект безопасности <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source>See the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">В разделе <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> метод и <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.SetAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAuditRule" /&gt;</ph> to add.</source>
          <target state="translated">Добавляемый объект <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RegistryAuditRule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.SetAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          <target state="translated">Имя пользователя, заданное в этом правиле, определяет правила, которые необходимо удалить перед добавлением данного правила.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.SetAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>Removes all audit rules with the same user as the specified rule, regardless of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> value, and then adds the specified rule.</source>
          <target state="translated">Удаляет все правила аудита с тем же именем пользователя, что и у указанного правила, вне зависимости от значения свойства <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph>, после чего добавляет указанное правило.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.RegistrySecurity.SetAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source>If there are no audit rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Если нет которого пользователя совпадает с указанным правилом правил аудита <ph id="ph1">`rule`</ph> добавляется.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.RegistrySecurity.SetAuditRule(System.Security.AccessControl.RegistryAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>