<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClaimsAuthorizationManager.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fe203cb2b223a3ac68111978dbba00b7d0fb80ef.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe203cb2b223a3ac68111978dbba00b7d0fb80ef</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>Defines the base implementation for a claims authorization manager.</source>
          <target state="translated">Определяет базовую реализацию диспетчера авторизации утверждений.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> class provides the base implementation for a claims authorization manager.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> Класс предоставляет базовую реализацию для диспетчера авторизации утверждений.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>A claims authorization manager can be used in the following two scenarios:</source>
          <target state="translated">Диспетчера авторизации утверждений может использоваться в следующих двух сценариях:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>In web-based applications and services, a claims authorization manager  can be added to the processing pipeline to provide an extensibility point from which you can authorize access to a resource according to the value of incoming claims before the application code that actually implements the requested resource is called.</source>
          <target state="translated">В веб-приложениях и службах диспетчера авторизации утверждений можно добавить в конвейер обработки для предоставления это точка расширяемости, откуда вы можете разрешить доступ к ресурсу согласно значению входящих утверждений до выполнения кода приложения что фактически реализует запрошенного ресурса вызывается.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>When you use the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> class or the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph> class to perform either imperative or declarative claims-based access checks in your code, the claims authorization manager that is configured for your application is called by the system to perform the check.</source>
          <target state="translated">При использовании <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> класса или <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph> для выполнения принудительного или декларативного доступа на основе утверждений проверяет в коде, диспетчер авторизации утверждений, настроенный для приложения вызывается системой для выполнения Проверка.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>Claims-based access checks can be performed in both web-based applications and desktop applications.</source>
          <target state="translated">Проверка доступа на основе утверждений могут выполняться в веб-приложений и приложений для настольных систем.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The default implementation provided by the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> class authorizes access for each claim presented; however, you can derive from this class and override the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> method to provide your own authorization logic.</source>
          <target state="translated">Реализация по умолчанию, предоставляемые <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> класс авторизует доступ для каждого утверждения, представленные; тем не менее, можно наследовать от этого класса и переопределить <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> метод, чтобы предоставить свою собственную логику авторизации.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The use of a claims authorization manager is optional.</source>
          <target state="translated">Использование диспетчера авторизации утверждений является необязательным.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>You can configure your application to use a claims authorization manager either programmatically by using the <ph id="ph1">&lt;xref:System.IdentityModel.Configuration.IdentityConfiguration&gt;</ph> class or declaratively, by specifying the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element, which is a child element of the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>identityConfiguration<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</ept> element in your application configuration file.</source>
          <target state="translated">Можно настроить приложение для использования диспетчера авторизации утверждений, либо программно с помощью <ph id="ph1">&lt;xref:System.IdentityModel.Configuration.IdentityConfiguration&gt;</ph> класса или декларативно, указав <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept>элемент, который является дочерним элементом элемента <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>identityConfiguration<ph id="ph5">&amp;gt;</ph> <ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</ept> элемент в файле конфигурации приложения.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>If your application is a web site or a web application hosted in Internet Information Services (IIS), you must also add the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsAuthorizationModule&gt;</ph> in the ASP.NET HTTP Modules collection.</source>
          <target state="translated">Если приложение является веб-сайта или веб-приложения, размещенного в Internet Information Services (IIS), необходимо добавить <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsAuthorizationModule&gt;</ph> в коллекции модулей HTTP ASP.NET.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>When you use the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> class or the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph> class, the claims authorization manager that is used to perform the access check is the one that is specified in the identity configuration under the <ph id="ph3">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">При использовании <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> класса или <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph> класса диспетчера авторизации утверждений, который используется для выполнения проверки доступа является тот, который задан в конфигурации удостоверения в <ph id="ph3">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>In a configuration file, it is the <ph id="ph1">`&lt;identityConfiguration&gt;`</ph> section that is referenced from the default <ph id="ph2">`&lt;federationConfiguration&gt;`</ph> element.</source>
          <target state="translated">В файле конфигурации, это <ph id="ph1">`&lt;identityConfiguration&gt;`</ph> раздел, на который ссылается значение по умолчанию <ph id="ph2">`&lt;federationConfiguration&gt;`</ph> элемента.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>This is true even for Windows Communication Foundation (WCF) services and desktop applications.</source>
          <target state="translated">Это справедливо даже для служб Windows Communication Foundation (WCF) и приложений для настольных систем.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> base class does not take any additional configuration; however, you can override the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> in derived classes to provide initialization of your claims authorization manager from child elements of the <ph id="ph3">`&lt;claimsAuthorizationElement&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> Базового класса не принимают дополнительную настройку; Однако можно переопределить <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> в производных классах для предоставления инициализации диспетчера авторизации утверждений из дочерних элементов <ph id="ph3">`&lt;claimsAuthorizationElement&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The typical scenario is to use these child elements to specify authorization policies which determine which claim types and values are required in order to gain access to which resource.</source>
          <target state="translated">Типичный сценарий — использование этих дочерних элементов для указания политик авторизации, которые определяют, какие типы и значения утверждений необходимы для получения доступа к какой ресурс.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>This is not a hard requirement, though you are free to define whatever usage and syntax make sense for your implementation.</source>
          <target state="translated">Это не жестких требований, то, что вы можете создать любое использование синтаксиса смысл и для реализации.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The code examples that are used in the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> topics are taken from the <ph id="ph2">`Claims Based Authorization`</ph> sample.</source>
          <target state="translated">Примеры кода, которые используются в <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> разделы взяты из <ph id="ph2">`Claims Based Authorization`</ph> образца.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>This sample provides a custom claims authorization manager that can authorize subjects based on a policy that is specified in configuration.</source>
          <target state="translated">Этот образец представляет диспетчера авторизации настраиваемых утверждений, который может авторизовать субъектов, исходя из политики, которая указана в конфигурации.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The custom claims authorization manager consists of three basic components: a class derived from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> that implements the manager, the <ph id="ph2">`ResourceAction`</ph> class that pairs a resource and an action, and a policy reader that reads and compiles policy that is specified in the configuration file.</source>
          <target state="translated">Диспетчер авторизации настраиваемых утверждений состоит из трех основных компонентов: класс, производный от <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> , реализующий диспетчер <ph id="ph2">`ResourceAction`</ph> класс, пар ресурса и действия, а средство чтения политики, которое считывает и компилирует политику, которая указанный в файле конфигурации.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>This compiled policy can then be used by the claims authorization manager to evaluate a principal in order to authorize access to resources.</source>
          <target state="translated">При этом компилированных политики могут затем использоваться диспетчером авторизации утверждений для идентификации участника для авторизации доступа к ресурсам.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>Not all elements are shown for the sake of brevity.</source>
          <target state="translated">Для краткости показаны не все элементы.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>For information about this sample and other samples available for WIF and about where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Сведения о этого образца, а также другие доступные образцы для WIF и о том, где для их загрузки см. в разделе <bpt id="p1">[</bpt>индекс образцов кода WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The following code shows the implementation of the custom claims authorization manager.</source>
          <target state="translated">Следующий код показывает реализацию диспетчера авторизации настраиваемых утверждений.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> method reads and compiles the policy from configuration by using the policy reader helper class (not shown) and the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> method grants or denies access based on this policy.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> Метод считывает и компилирует политики из конфигурации с помощью вспомогательного класса политики чтения (не показано) и <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> метод предоставляет или запрещает доступ на основании этой политики.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The following code shows the <ph id="ph1">`ResourceAction`</ph> class used by the custom claims manager.</source>
          <target state="translated">В следующем коде показано <ph id="ph1">`ResourceAction`</ph> класс, используемый диспетчером пользовательских утверждений.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The following XML shows how to configure the claims authorization manager shown above for a web application hosted in IIS 7.5.</source>
          <target state="translated">Следующий код XML показано, как настроить утверждения диспетчера авторизации, показанном выше, для веб-приложения, размещенные в IIS 7.5.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>Only the elements specific to the configuration of the claims authorization manager are shown.</source>
          <target state="translated">Отображаются только элементы, связанные с конфигурацией диспетчера авторизации утверждений.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>Note that a reference to the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsAuthorizationModule&gt;</ph> class must be added to the pipeline under the <ph id="ph2">`&lt;system.Webserver&gt;`</ph> element.</source>
          <target state="translated">Обратите внимание, что ссылку на <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsAuthorizationModule&gt;</ph> класс должен быть добавлен в конвейер под <ph id="ph2">`&lt;system.Webserver&gt;`</ph> элемента.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>For sites and applications hosted in versions of IIS prior to IIS 7 the modules can be added to the pipeline under the <ph id="ph1">`&lt;system.Web&gt;`</ph> element.</source>
          <target state="translated">Для сайтов и приложений, размещенных в версиях IIS до IIS 7 модули можно добавить в конвейер под <ph id="ph1">`&lt;system.Web&gt;`</ph> элемента.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>This configuration is shown but commented out.</source>
          <target state="translated">Эта конфигурация отображается, но в комментарий.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The policy used by the claims authorization manager is specified by custom <ph id="ph1">`&lt;policy&gt;`</ph> elements under the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element.</source>
          <target state="translated">От диспетчера авторизации утверждений политики определяется настраиваемый <ph id="ph1">`&lt;policy&gt;`</ph> элементы <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> элемента.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>In the first policy, the principal must possess one of the specified claims in order to perform the specified action on the specified resource.</source>
          <target state="translated">В первой политики участник должен иметь одно из утверждений, указанный для выполнения указанного действия с указанным ресурсом.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>In the second policy, the principal must possess both claims to be able to perform the specified action on the specified resource.</source>
          <target state="translated">Второй политики участник должен иметь оба утверждения, чтобы иметь возможность выполнения указанного действия с указанным ресурсом.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>In all others, the principal is automatically granted access regardless of the claims it possesses.</source>
          <target state="translated">Для всех других участника автоматически предоставляется доступ, независимо от того, утверждениям, которые он содержит.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The authorization context that contains the subject, resource, and action for which authorization is to be checked.</source>
          <target state="translated">Контекст авторизации, который содержит тему, ресурс и действие, для которых необходимо проверить авторизацию.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>When implemented in a derived class, checks authorization for the subject in the specified context to perform the specified action on the specified resource.</source>
          <target state="translated">При реализации в производном классе проверяет авторизацию для субъекта в указанном контексте, чтобы выполнить заданное действие в указанном ресурсе.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the subject is authorized to perform the specified action on the specified resource; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если субъекту разрешено выполнение указанного действия с указанным ресурсом; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The base implementation always returns <ph id="ph1">`true`</ph>, which authorizes access.</source>
          <target state="translated">Базовая реализация всегда возвращает <ph id="ph1">`true`</ph>, который авторизует доступ.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>You can override this method in a derived class to authorize access based on the requirements of your RP application.</source>
          <target state="translated">Можно переопределить этот метод в производном классе для авторизации доступа на основе требований приложения проверяющей Стороны.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>If this method returns <ph id="ph1">`false`</ph>, Windows Identity Foundation (WIF) returns an unauthorized error to the caller; otherwise, execution is passed to the RP application.</source>
          <target state="translated">Если этот метод возвращает <ph id="ph1">`false`</ph>, Windows Identity Foundation (WIF) возвращает ошибку несанкционированного вызывающему объекту; в противном случае выполнение передается приложению проверяющей Стороны.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The code examples that are used in the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> topics are taken from the <ph id="ph2">`Claims Based Authorization`</ph> sample.</source>
          <target state="translated">Примеры кода, которые используются в <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> разделы взяты из <ph id="ph2">`Claims Based Authorization`</ph> образца.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>This sample provides a custom claims authorization manager that can authorize subjects based on a policy that is specified in configuration.</source>
          <target state="translated">Этот образец представляет диспетчера авторизации настраиваемых утверждений, который может авторизовать субъектов, исходя из политики, которая указана в конфигурации.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The custom claims authorization manager consists of three basic components: a class derived from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> that implements the manager, the <ph id="ph2">`ResourceAction`</ph> class that pairs a resource and an action, and a policy reader that reads and compiles policy that is specified in the configuration file.</source>
          <target state="translated">Диспетчер авторизации настраиваемых утверждений состоит из трех основных компонентов: класс, производный от <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> , реализующий диспетчер <ph id="ph2">`ResourceAction`</ph> класс, пар ресурса и действия, а средство чтения политики, которое считывает и компилирует политику, которая указанный в файле конфигурации.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>This compiled policy can then be used by the claims authorization manager to evaluate a principal in order to authorize access to resources.</source>
          <target state="translated">При этом компилированных политики могут затем использоваться диспетчером авторизации утверждений для идентификации участника для авторизации доступа к ресурсам.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>Not all elements are shown for the sake of brevity.</source>
          <target state="translated">Для краткости показаны не все элементы.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>For information about this sample and other samples available for WIF and about where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Сведения о этого образца, а также другие доступные образцы для WIF и о том, где для их загрузки см. в разделе <bpt id="p1">[</bpt>индекс образцов кода WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The following code shows the override of the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> method.</source>
          <target state="translated">В следующем коде показано переопределение метода <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>This method grants or denies access based on a policy read and compiled from the configuration file.</source>
          <target state="translated">Этот метод предоставляет или запрещает доступ на основе политики считываются и компилируются в файле конфигурации.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The following code shows the <ph id="ph1">`ResourceAction`</ph> class used by the custom claims manager.</source>
          <target state="translated">В следующем коде показано <ph id="ph1">`ResourceAction`</ph> класс, используемый диспетчером пользовательских утверждений.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The policy used by the claims authorization manager is specified by custom <ph id="ph1">`&lt;policy&gt;`</ph> elements under the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element.</source>
          <target state="translated">От диспетчера авторизации утверждений политики определяется настраиваемый <ph id="ph1">`&lt;policy&gt;`</ph> элементы <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> элемента.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>This policy is read and compiled by the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> method.</source>
          <target state="translated">Эта политика чтения и скомпилированные с <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>In the first policy, the principal must possess one of the specified claims in order to perform the specified action on the specified resource.</source>
          <target state="translated">В первой политики участник должен иметь одно из утверждений, указанный для выполнения указанного действия с указанным ресурсом.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>In the second policy, the principal must possess both claims to be able to perform the specified action on the specified resource.</source>
          <target state="translated">Второй политики участник должен иметь оба утверждения, чтобы иметь возможность выполнения указанного действия с указанным ресурсом.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>In all others, the principal is automatically granted access regardless of the claims it possesses.</source>
          <target state="translated">Для всех других участника автоматически предоставляется доступ, независимо от того, утверждениям, которые он содержит.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom configuration elements.</source>
          <target state="translated">Пользовательские элементы конфигурации.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Each node in the list is of type <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</source>
          <target state="translated">Каждый узел в списке имеет тип <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>When overridden in a derived class, loads custom configuration from XML.</source>
          <target state="translated">При переопределении в производном классе загружает пользовательскую конфигурацию из XML-кода.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph> method is called by the configuration infrastructure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph> Метод вызывается инфраструктурой конфигурации.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>When this method is called, the <ph id="ph1">`nodelist`</ph> will contain the top-level child elements of the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element from the configuration file.</source>
          <target state="translated">При вызове этого метода <ph id="ph1">`nodelist`</ph> будет содержать верхнего уровня дочерних элементов <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> элемент из файла конфигурации.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Each of these elements may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</source>
          <target state="translated">Каждый из этих элементов может в свою очередь, содержат атрибуты или дочерние элементы в зависимости от схемы конфигурации, определенных для производного класса.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>If no child elements appear under the <ph id="ph1">`&lt;claimsAuthorizationManager&gt;`</ph> element in the configuration file, this method is not called.</source>
          <target state="translated">Если нет дочерних элементов отображается под <ph id="ph1">`&lt;claimsAuthorizationManager&gt;`</ph> элемент в файле конфигурации, этот метод не вызывается.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The default implementation throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated">Реализация по умолчанию создает <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Override this method in your derived class to enable initialization of your claims authorization manager from a configuration file.</source>
          <target state="translated">Переопределите этот метод в производном классе позволяет включить инициализацию диспетчера авторизации утверждений из файла конфигурации.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Typically, the configuration elements are used to express an authorization policy; however, you can define elements and use them in any way that makes sense based on the requirements of your application.</source>
          <target state="translated">Как правило элементы конфигурации используются для выражения политики авторизации; Тем не менее можно определить элементы и использовать их каким-либо образом, который имеет смысл в соответствии с требованиями приложения.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The code examples that are used in the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> topics are taken from the <ph id="ph2">`Claims Based Authorization`</ph> sample.</source>
          <target state="translated">Примеры кода, которые используются в <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> разделы взяты из <ph id="ph2">`Claims Based Authorization`</ph> образца.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>This sample provides a custom claims authorization manager that can authorize subjects based on a policy that is specified in configuration.</source>
          <target state="translated">Этот образец представляет диспетчера авторизации настраиваемых утверждений, который может авторизовать субъектов, исходя из политики, которая указана в конфигурации.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom claims authorization manager consists of three basic components: a class derived from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> that implements the manager, the <ph id="ph2">`ResourceAction`</ph> class that pairs a resource and an action, and a policy reader that reads and compiles policy that is specified in the configuration file.</source>
          <target state="translated">Диспетчер авторизации настраиваемых утверждений состоит из трех основных компонентов: класс, производный от <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> , реализующий диспетчер <ph id="ph2">`ResourceAction`</ph> класс, пар ресурса и действия, а средство чтения политики, которое считывает и компилирует политику, которая указанный в файле конфигурации.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>This compiled policy can then be used by the claims authorization manager to evaluate a principal in order to authorize access to resources.</source>
          <target state="translated">При этом компилированных политики могут затем использоваться диспетчером авторизации утверждений для идентификации участника для авторизации доступа к ресурсам.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Not all elements are shown for the sake of brevity.</source>
          <target state="translated">Для краткости показаны не все элементы.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>For information about this sample and other samples available for WIF and about where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">Сведения о этого образца, а также другие доступные образцы для WIF и о том, где для их загрузки см. в разделе <bpt id="p1">[</bpt>индекс образцов кода WIF<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The following code shows the override of the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> method.</source>
          <target state="translated">В следующем коде показано переопределение метода <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>This method uses a helper policy reader class (not shown) to read and compile authorization policies specified in the configuration file.</source>
          <target state="translated">Этот метод использует вспомогательный класс средства чтения политики (не показано) для чтения и скомпилируйте политик авторизации, заданных в файле конфигурации.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Policies are added to a dictionary and are accessed by a <ph id="ph1">`ResourceAction`</ph> key object that is created from the resource and action for which they are intended.</source>
          <target state="translated">Политики будут добавлены в словарь и доступны только по <ph id="ph1">`ResourceAction`</ph> ключевой объект, созданный из ресурса и действия, для которых они предназначены.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The following code shows the <ph id="ph1">`ResourceAction`</ph> class used by the custom claims manager.</source>
          <target state="translated">В следующем коде показано <ph id="ph1">`ResourceAction`</ph> класс, используемый диспетчером пользовательских утверждений.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The policy used by the claims authorization manager is specified by custom <ph id="ph1">`&lt;policy&gt;`</ph> elements under the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element.</source>
          <target state="translated">От диспетчера авторизации утверждений политики определяется настраиваемый <ph id="ph1">`&lt;policy&gt;`</ph> элементы <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> элемента.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>This policy is read and compiled by the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> method.</source>
          <target state="translated">Эта политика чтения и скомпилированные с <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>In the first policy, the principal must possess one of the specified claims in order to perform the specified action on the specified resource.</source>
          <target state="translated">В первой политики участник должен иметь одно из утверждений, указанный для выполнения указанного действия с указанным ресурсом.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>In the second policy, the principal must possess both claims to be able to perform the specified action on the specified resource.</source>
          <target state="translated">Второй политики участник должен иметь оба утверждения, чтобы иметь возможность выполнения указанного действия с указанным ресурсом.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>In all others, the principal is automatically granted access regardless of the claims it possesses.</source>
          <target state="translated">Для всех других участника автоматически предоставляется доступ, независимо от того, утверждениям, которые он содержит.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>