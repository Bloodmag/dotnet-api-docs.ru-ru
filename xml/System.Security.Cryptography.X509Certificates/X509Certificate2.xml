<Type Name="X509Certificate2" FullName="System.Security.Cryptography.X509Certificates.X509Certificate2">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="96cca76185ce48985a2bbb73af6d26ead1375f1a" />
    <Meta Name="ms.sourcegitcommit" Value="81d387351cc43c342755705908f4a5eb8af153d3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/04/2018" />
    <Meta Name="ms.locfileid" Value="34568198" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit X509Certificate2 extends System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />
  <TypeSignature Language="VB.NET" Value="Public Class X509Certificate2&#xA;Inherits X509Certificate" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509Certificate2 : System::Security::Cryptography::X509Certificates::X509Certificate" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509Certificate</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="69adb-101">Представляет сертификат X.509.</span>
      <span class="sxs-lookup">
        <span data-stu-id="69adb-101">Represents an X.509 certificate.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-102">Структура X.509 берет начало международной организации по стандартизации (ISO) рабочих групп.</span><span class="sxs-lookup"><span data-stu-id="69adb-102">The X.509 structure originated in the International Organization for Standardization (ISO) working groups.</span></span> <span data-ttu-id="69adb-103">Эта структура используется для представления различных типов информации, включая удостоверение, права и атрибутов держателя (разрешения, возраст, пол, местоположение, принадлежность и так далее).</span><span class="sxs-lookup"><span data-stu-id="69adb-103">This structure can be used to represent various types of information including identity, entitlement, and holder attributes (permissions, age, sex, location, affiliation, and so forth).</span></span> <span data-ttu-id="69adb-104">Несмотря на то, что спецификации ISO по структуре, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> класс предназначен для моделирования сценариев использования, определенных в спецификации, выданный службой инфраструктура открытого ключа Internet Engineering Task Force (IETF), X.509 (PKIX ) рабочей группы.</span><span class="sxs-lookup"><span data-stu-id="69adb-104">Although the ISO specifications are most informative on the structure itself, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class is designed to model the usage scenarios defined in specifications issued by the Internet Engineering Task Force (IETF) Public Key Infrastructure, X.509 (PKIX) working group.</span></span> <span data-ttu-id="69adb-105">Наиболее информативные эти спецификации RFC 3280 является «[сертификата и профиль список ОТЗЫВА сертификатов для отзыва сертификатов](http://go.microsoft.com/fwlink/?LinkId=45286).»</span><span class="sxs-lookup"><span data-stu-id="69adb-105">The most informative of these specifications is RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="69adb-106">Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], этот тип реализует <xref:System.IDisposable> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="69adb-106">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="69adb-107">После завершения с помощью типа следует освободить его прямо или косвенно.</span><span class="sxs-lookup"><span data-stu-id="69adb-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="69adb-108">Для удаления типа непосредственно вызвать его <xref:System.IDisposable.Dispose%2A> метод в `try` / `catch` блока.</span><span class="sxs-lookup"><span data-stu-id="69adb-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="69adb-109">Чтобы удалить ее косвенно, использовать языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="69adb-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="69adb-110">Дополнительные сведения см. в разделе «С помощью объекта, реализует интерфейс IDisposable» в <xref:System.IDisposable> разделе интерфейса.</span><span class="sxs-lookup"><span data-stu-id="69adb-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
>   
>  <span data-ttu-id="69adb-111">Для приложений, предназначенных для [!INCLUDE[net_v452](~/includes/net-v452-md.md)] и более ранних версиях <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> класс не реализует <xref:System.IDisposable> интерфейсов и поэтому не `Dispose` метод.</span><span class="sxs-lookup"><span data-stu-id="69adb-111">For apps that target the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class does not implement the <xref:System.IDisposable> interface and therefore does not have a `Dispose` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-112">В следующем примере демонстрируется использование <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта для шифрования и расшифровки файла.</span><span class="sxs-lookup"><span data-stu-id="69adb-112">The following example demonstrates how to use an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to encrypt and decrypt a file.</span></span>  
  
 [!code-csharp[X509Certificate2#1](~/samples/snippets/csharp/VS_Snippets_CLR/x509certificate2/cs/program.cs#1)]
 [!code-vb[X509Certificate2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509certificate2/vb/program.vb#1)]  
  
 <span data-ttu-id="69adb-113">В следующем примере создается исполняемый файл командной строки, который принимает в качестве аргумента файл сертификата и выводит различные свойства сертификата в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-113">The following example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-114">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="69adb-115">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-116">Этот конструктор создает пустой <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объект, в отличие от других конструкторов для этого класса, использующие сведения о сертификате из массива байтов, указателя или файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-116">This constructor creates an empty <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object, unlike the other constructors for this class that use certificate information from a byte array, a pointer, or a certificate file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-117">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="69adb-117">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="69adb-118">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-118">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="69adb-119">Массив байтов, содержащий данные сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-119">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-120">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием информации из указанного массива байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using information from a byte array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-121">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, используя сведения о сертификате из массива байтов.</span><span class="sxs-lookup"><span data-stu-id="69adb-121">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using certificate information from a byte array.</span></span> <span data-ttu-id="69adb-122">Массив байтов может быть бинарные (DER) или данных X.509 в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="69adb-122">The byte array can be binary (DER) encoded or Base64-encoded X.509 data.</span></span> <span data-ttu-id="69adb-123">Массив байтов может также быть PKCS7 (Authenticode) подписанного файла; сертификат подписавшего используется для создания объекта.</span><span class="sxs-lookup"><span data-stu-id="69adb-123">The byte array can also be a PKCS7 (Authenticode) signed file; the signer certificate is used to create the object.</span></span>  
  
 <span data-ttu-id="69adb-124">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата, указав хранилища подписанного файла PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="69adb-124">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-125">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-125">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="69adb-126">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-126">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="69adb-127">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-127">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="69adb-128">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-128">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(IntPtr handle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="69adb-129">Указатель на контекст сертификата в неуправляемом коде.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-129">A pointer to a certificate context in unmanaged code.</span>
          </span>
          <span data-ttu-id="69adb-130">Структура на языке C вызывается <see langword="PCCERT_CONTEXT" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-130">The C structure is called <see langword="PCCERT_CONTEXT" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-131">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью неуправляемого дескриптора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-131">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an unmanaged handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-132">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта с помощью дескриптора для контекста сертификата Microsoft Cryptographic API, `PCCERT_CONTEXT`.</span><span class="sxs-lookup"><span data-stu-id="69adb-132">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a handle for the Microsoft Cryptographic API certificate context, `PCCERT_CONTEXT`.</span></span> <span data-ttu-id="69adb-133">Обратите внимание, что непосредственный вызывающий объект этого конструктора требует разрешение неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="69adb-133">Note that the immediate caller of this constructor requires unmanaged code permission.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="69adb-134">Конструктор создает копию контекста сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-134">The constructor creates a copy of the certificate context.</span></span> <span data-ttu-id="69adb-135">Не следует предполагать, что передаваемая конструктору структура контекста является допустимым; Возможно, она была снята.</span><span class="sxs-lookup"><span data-stu-id="69adb-135">Do not assume that the context structure you passed to the constructor is valid; it may have been released.</span></span> <span data-ttu-id="69adb-136">Можно получить копию текущего `PCCERT_CONTEXT` структуры из <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> , но является допустимым только в течение времени существования <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта.</span><span class="sxs-lookup"><span data-stu-id="69adb-136">You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-137">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-137">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="69adb-138">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-138">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="69adb-139">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-139">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="69adb-140">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-140">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="69adb-141">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-141">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="69adb-142">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-142">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="69adb-143">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-143">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">
          <span data-ttu-id="69adb-144">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-144">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-145">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью объекта <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-145">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-146">Этот метод создает новый экземпляр <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> класса с помощью <xref:System.Security.Cryptography.X509Certificates.X509Certificate> объекта.</span><span class="sxs-lookup"><span data-stu-id="69adb-146">This method creates a new instance of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class using an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-147">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-147">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="69adb-148">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-148">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="69adb-149">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-149">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="69adb-150">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-150">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="69adb-151">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-151">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="69adb-152">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-152">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="69adb-153">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-153">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="69adb-154">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-154">The name of a certificate file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-155">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью имени файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-155">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-156">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, используя имя файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-156">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name.</span></span> <span data-ttu-id="69adb-157">Он поддерживает двоичная кодировка (DER) или кодировка Base64.</span><span class="sxs-lookup"><span data-stu-id="69adb-157">It supports binary (DER) encoding or Base64 encoding.</span></span>  
  
 <span data-ttu-id="69adb-158">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата, указав хранилища подписанного файла PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="69adb-158">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-159">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-159">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="69adb-160">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-160">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="69adb-161">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-161">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="69adb-162">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-162">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="69adb-163">Массив байтов, содержащий данные из сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-163">A byte array that contains data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="69adb-164">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-164">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-165">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов и пароля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-165">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-166">Этот конструктор используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-166">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="69adb-167">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в контейнер ключа.</span><span class="sxs-lookup"><span data-stu-id="69adb-167">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="69adb-168">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="69adb-168">Never hard code a password within your source code.</span></span>  <span data-ttu-id="69adb-169">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="69adb-169">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="69adb-170">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификата, указав хранилища подписанного файла PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="69adb-170">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-171">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-171">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="69adb-172">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-172">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="69adb-173">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-173">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="69adb-174">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-174">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="69adb-175">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-175">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="69adb-176">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-176">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="69adb-177">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-177">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="69adb-178">Массив байтов, содержащий данные сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-178">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="69adb-179">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-179">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-180">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов и пароля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-180">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-181">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> с помощью массива байтов и пароль, необходимый для доступа к данным сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-181">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array and a password that is needed to access the certificate data.</span></span> <span data-ttu-id="69adb-182">Он используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-182">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="69adb-183">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в контейнер ключа.</span><span class="sxs-lookup"><span data-stu-id="69adb-183">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="69adb-184">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="69adb-184">Never hard code a password within your source code.</span></span>  <span data-ttu-id="69adb-185">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="69adb-185">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="69adb-186">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата, указав хранилища подписанного файла PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="69adb-186">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-187">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-187">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="69adb-188">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-188">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="69adb-189">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-189">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="69adb-190">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-190">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="69adb-191">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-191">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="69adb-192">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-192">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="69adb-193">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-193">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509Certificate2 (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; X509Certificate2(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="69adb-194">Сведения о сериализации, необходимые для десериализации нового объекта <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-194">The serialization information required to deserialize the new <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="69adb-195">Контекстные сведения об источнике десериализуемого потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-195">Contextual information about the source of the stream to be deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-196">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используя заданную информацию о сериализации и контексте потоков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-196">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using the specified serialization and stream context information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="69adb-197">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-197">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="69adb-198">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-198">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="69adb-199">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-199">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="69adb-200">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-200">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="69adb-201">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-201">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-202">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием имени файла сертификата и пароля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-202">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-203">Этот конструктор используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-203">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="69adb-204">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в контейнер ключа.</span><span class="sxs-lookup"><span data-stu-id="69adb-204">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="69adb-205">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="69adb-205">Never hard code a password within your source code.</span></span>  <span data-ttu-id="69adb-206">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="69adb-206">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="69adb-207">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификата, указав хранилища подписанного файла PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="69adb-207">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-208">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-208">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="69adb-209">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-209">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="69adb-210">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-210">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="69adb-211">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-211">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="69adb-212">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-212">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="69adb-213">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-213">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="69adb-214">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-214">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="69adb-215">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-215">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="69adb-216">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-216">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-217">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используя имя файла сертификата и пароль для доступа к сертификату.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-217">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password used to access the certificate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-218">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, используя имя файла сертификата и пароль, необходимый для доступ к сертификату.</span><span class="sxs-lookup"><span data-stu-id="69adb-218">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name and a password needed to access the certificate.</span></span> <span data-ttu-id="69adb-219">Он используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-219">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="69adb-220">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в контейнер ключа.</span><span class="sxs-lookup"><span data-stu-id="69adb-220">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="69adb-221">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="69adb-221">Never hard code a password within your source code.</span></span>  <span data-ttu-id="69adb-222">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="69adb-222">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="69adb-223">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата, указав хранилища подписанного файла PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="69adb-223">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-224">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-224">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="69adb-225">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-225">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="69adb-226">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-226">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="69adb-227">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-227">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="69adb-228">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-228">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="69adb-229">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-229">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="69adb-230">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-230">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="69adb-231">Массив байтов, содержащий данные из сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-231">A byte array that contains data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="69adb-232">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-232">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="69adb-233">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-233">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-234">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов, пароля и флага хранилища ключей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-234">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-235">Этот конструктор используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-235">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="69adb-236">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в Microsoft API криптографических служб шифрования поставщика (CSP).</span><span class="sxs-lookup"><span data-stu-id="69adb-236">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="69adb-237">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="69adb-237">Never hard code a password within your source code.</span></span>  <span data-ttu-id="69adb-238">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="69adb-238">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="69adb-239">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификата, указав хранилища подписанного файла PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="69adb-239">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-240">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-240">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="69adb-241">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-241">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="69adb-242">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-242">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="69adb-243">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-243">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="69adb-244">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-244">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="69adb-245">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-245">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="69adb-246">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-246">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="69adb-247">Массив байтов, содержащий данные сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-247">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="69adb-248">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-248">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="69adb-249">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-249">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-250">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов, пароля и флага хранилища ключей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-250">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-251">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта с помощью байтовый массив, пароль, который необходим для доступа к данным сертификата и флаг хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="69adb-251">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.</span></span> <span data-ttu-id="69adb-252">Он используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-252">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="69adb-253">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в Microsoft API криптографических служб шифрования поставщика (CSP).</span><span class="sxs-lookup"><span data-stu-id="69adb-253">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="69adb-254">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="69adb-254">Never hard code a password within your source code.</span></span>  <span data-ttu-id="69adb-255">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="69adb-255">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="69adb-256">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата, указав хранилища подписанного файла PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="69adb-256">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-257">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-257">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="69adb-258">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-258">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="69adb-259">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-259">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="69adb-260">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-260">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="69adb-261">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-261">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="69adb-262">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-262">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="69adb-263">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-263">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="69adb-264">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-264">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="69adb-265">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-265">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="69adb-266">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-266">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-267">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием имени файла сертификата, пароля и флага хранилища ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-267">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-268">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификата, указав хранилища подписанного файла PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="69adb-268">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-269">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-269">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="69adb-270">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-270">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="69adb-271">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-271">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="69adb-272">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-272">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="69adb-273">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-273">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="69adb-274">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-274">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="69adb-275">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-275">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="69adb-276">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-276">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="69adb-277">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-277">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="69adb-278">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-278">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-279">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием имени файла сертификата и пароля для доступа к сертификату, а также флага хранилища ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-279">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password used to access the certificate, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-280">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> имя объекта, с помощью файла сертификата, пароль, необходимый для доступа к сертификату, а флаг хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="69adb-280">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name, a password needed to access the certificate, and a key storage flag.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="69adb-281">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="69adb-281">Never hard code a password within your source code.</span></span>  <span data-ttu-id="69adb-282">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="69adb-282">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="69adb-283">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата, указав хранилища подписанного файла PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="69adb-283">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-284">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-284">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="69adb-285">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-285">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="69adb-286">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-286">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="69adb-287">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-287">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="69adb-288">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-288">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="69adb-289">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-289">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="69adb-290">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-290">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Archived">
      <MemberSignature Language="C#" Value="public bool Archived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Archived" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberSignature Language="VB.NET" Value="Public Property Archived As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Archived { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-291">Получает или задает значение, указывающее на архивирование сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-291">Gets or sets a value indicating that an X.509 certificate is archived.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69adb-292">Значение <see langword="true" />, если сертификат архивирован, значение<see langword="false" />, если сертификат не архивирован.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-292">
              <see langword="true" /> if the certificate is archived, <see langword="false" /> if the certificate is not archived.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-293">Это свойство имеет значение только для сертификата, связанного с хранилищем.</span><span class="sxs-lookup"><span data-stu-id="69adb-293">This property is set only on a certificate that is associated with a store.</span></span> <span data-ttu-id="69adb-294">Если свойство имеет значение и добавить сертификат в хранилище сертификатов, то значение сохраняется.</span><span class="sxs-lookup"><span data-stu-id="69adb-294">If the property is set and the certificate is added to a certificate store, the value is persisted.</span></span> <span data-ttu-id="69adb-295">Если свойство имеет значение для сертификата, извлекаются из хранилища, то значение сохраняется немедленно.</span><span class="sxs-lookup"><span data-stu-id="69adb-295">If the property is set on a certificate retrieved from a store, the value is persisted immediately.</span></span>  
  
 <span data-ttu-id="69adb-296">В хранилище X.509 архив сертификатов, не включаются в возвращаемый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> только если <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> свойству `true`.</span><span class="sxs-lookup"><span data-stu-id="69adb-296">In an X.509 store, archived certificates are not included in the returned <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> object unless the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> property is set to `true`.</span></span> <span data-ttu-id="69adb-297">Не физического архивации выполняются операции при <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> значение задается значение или не задано.</span><span class="sxs-lookup"><span data-stu-id="69adb-297">No physical archival activity occurs when the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> value is set or unset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-298">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="69adb-298">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="69adb-299">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-299">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-300">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-300">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public override byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Export(valuetype System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Export (contentType As X509ContentType, password As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Export(System::Security::Cryptography::X509Certificates::X509ContentType contentType, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("X509ContentType.SerializedCert is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="password">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As X509ExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ Extensions { System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-301">Возвращает коллекцию объектов <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-301">Gets a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69adb-302">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-302">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-303">Расширения, определенные в формате сертификата X.509 v3 разрешить дополнительные данные, которые будут включены в сертификате.</span><span class="sxs-lookup"><span data-stu-id="69adb-303">The extensions defined in the X.509 v3 certificate format allow additional data to be included in the certificate.</span></span> <span data-ttu-id="69adb-304">Число расширений определяются ISO в определении X.509 v3, а также PKIX в RFC 3280 "[сертификата и профиль список ОТЗЫВА сертификатов для отзыва сертификатов](http://go.microsoft.com/fwlink/?LinkId=45286).»</span><span class="sxs-lookup"><span data-stu-id="69adb-304">A number of extensions are defined by ISO in the X.509 v3 definition as well as by PKIX in RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286)."</span></span> <span data-ttu-id="69adb-305">Общие расширения включают в себя сведения, касающиеся использования ключа (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), ключевые идентификаторы (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), сертификатов политики, сведения об отзыве (с расширением точка распространения CRL) и других целей.</span><span class="sxs-lookup"><span data-stu-id="69adb-305">Common extensions include information regarding key usage (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), key identifiers (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), certificate policies, revocation information (CRL Distribution Point extension), and other uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-306">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="69adb-306">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="69adb-307">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-307">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-308">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-308">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public string FriendlyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FriendlyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public Property FriendlyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FriendlyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-309">Получает или задает связанный псевдоним для сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-309">Gets or sets the associated alias for a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69adb-310">Понятное имя сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-310">The certificate's friendly name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-311">Понятные имена, свойства в хранилище сертификатов X.509, которое может быть установлено.</span><span class="sxs-lookup"><span data-stu-id="69adb-311">Friendly names are properties in the X.509 certificate store that can be set.</span></span> <span data-ttu-id="69adb-312">Они используются, чтобы пользователь мог связать псевдонимы с сертификатами, поэтому их можно было легко идентифицировать.</span><span class="sxs-lookup"><span data-stu-id="69adb-312">They are used to enable a user to associate aliases with certificates so they can be easily identified.</span></span>  
  
 <span data-ttu-id="69adb-313">Если существует отсутствует понятное имя для сертификата, пустая строка ("») возвращается.</span><span class="sxs-lookup"><span data-stu-id="69adb-313">If no friendly name exists for the certificate, an empty string ("") is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-314">В следующем примере кода создается исполняемый файл командной строки, который принимает в качестве аргумента файл сертификата и выводит различные свойства сертификата в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-314">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-315">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-315">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCertContentType">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-316">Показывает тип сертификата, содержащегося в массиве байтов или файле.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-316">Indicates the type of certificate contained in a byte array or file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (rawData As Byte()) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12, Pkcs7 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="69adb-317">Массив байтов, содержащий данные сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-317">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-318">Показывает тип сертификата, содержащегося в массиве байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-318">Indicates the type of certificate contained in a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69adb-319">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-319">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-320">Этот метод позволяет определить тип сертификата в файле.</span><span class="sxs-lookup"><span data-stu-id="69adb-320">This method enables you to discover the type of certificate in a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-321">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="69adb-321">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="69adb-322">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-322">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="69adb-323">Параметр <paramref name="rawData" /> имеет нулевую длину, или его значение равно <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-323">
              <paramref name="rawData" /> has a zero length or is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (fileName As String) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="69adb-324">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-324">The name of a certificate file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-325">Показывает тип сертификата, содержащегося в файле.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-325">Indicates the type of certificate contained in a file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69adb-326">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-326">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-327">Этот метод позволяет определить тип сертификата в файле.</span><span class="sxs-lookup"><span data-stu-id="69adb-327">This method enables you to discover the type of certificate in a file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="69adb-328">Свойство <paramref name="fileName" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-328">
              <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="69adb-329">для чтения сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-329">for reading the certificate.</span>
          </span>
          <span data-ttu-id="69adb-330">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-330">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="69adb-331">Связанное перечисление: <see cref="F:System.IO.FileAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-331">Associated enumeration: <see cref="F:System.IO.FileAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetNameInfo">
      <MemberSignature Language="C#" Value="public string GetNameInfo (System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetNameInfo(valuetype System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNameInfo (nameType As X509NameType, forIssuer As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNameInfo(System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("always return String.Empty for UpnName, DnsFromAlternativeName and UrlName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameType" Type="System.Security.Cryptography.X509Certificates.X509NameType" />
        <Parameter Name="forIssuer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nameType">
          <span data-ttu-id="69adb-332">Значение <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> для субъекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-332">The <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> value for the subject.</span>
          </span>
        </param>
        <param name="forIssuer">
          <span data-ttu-id="69adb-333">Значение <see langword="true" /> для включения имени поставщика; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-333">
              <see langword="true" /> to include the issuer name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-334">Получает имена субъекта и поставщика сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-334">Gets the subject and issuer names from a certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69adb-335">Имя сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-335">The name of the certificate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-336">Этот метод следует всегда использовать вместо разбора сертификата, так как многие значения имени могут быть расположены в нескольких местах.</span><span class="sxs-lookup"><span data-stu-id="69adb-336">This method should always be used instead of parsing the certificate, since many of the name values can be located in multiple locations.</span></span> <span data-ttu-id="69adb-337">С помощью этого метода гарантирует, что будет возвращено соответствующее имя.</span><span class="sxs-lookup"><span data-stu-id="69adb-337">Using this method ensures that the appropriate name is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-338">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="69adb-338">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="69adb-339">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-339">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public bool HasPrivateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrivateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrivateKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-340">Возвращает значение, которое указывает, содержит ли объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> закрытый ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-340">Gets a value that indicates whether an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69adb-341">Значение <see langword="true" />, если объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> содержит закрытый ключ; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-341">
              <see langword="true" /> if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-342">Недопустимый контекст сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-342">The certificate context is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Import">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-343">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> предоставленными сведениями о сертификате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-343">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with the certificate information provided.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="69adb-344">Массив байтов, содержащий данные сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-344">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-345">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> данными из массива байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-345">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with data from a byte array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-346">Этот метод можно использовать массив необработанных байтов сертификата X.509 и заполнить <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, связанные с ним значения.</span><span class="sxs-lookup"><span data-stu-id="69adb-346">This method can be used to take a raw byte array of an X.509 certificate and populate the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with its associated values.</span></span>  
  
 <span data-ttu-id="69adb-347">Так как этот метод принимает массив байтов, он может использоваться только для типов сертификатов, не требует пароля, включая кодировке DER или Base64-кодировке X.509 сертификат или сертификат PFX/PKCS12.</span><span class="sxs-lookup"><span data-stu-id="69adb-347">Since this method accepts only a byte array, it can be used only for certificate types that do not require a password, including a Base64-encoded or DER-encoded X.509 certificate or a PFX/PKCS12 certificate.</span></span> <span data-ttu-id="69adb-348">Обратите внимание, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-348">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="69adb-349">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="69adb-349">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="69adb-350">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-350">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="69adb-351">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-351">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="69adb-352">для полного доверия для разработчиков производных классов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-352">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="69adb-353">Этот член не может наследоваться частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-353">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="69adb-354">Имя сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-354">The name of a certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-355">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> сведениями из файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-355">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-356">Этот метод использует файл сертификата, например файл с расширением CER-файл, который представляет сертификат X.509 и заполняет <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта с помощью сертификата, содержатся в файле.</span><span class="sxs-lookup"><span data-stu-id="69adb-356">This method uses a certificate file, such as a file with a .cer extension, that represents an X.509 certificate and populates the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with the certificate the file contains.</span></span>  
  
 <span data-ttu-id="69adb-357">Этот метод можно использовать с несколькими типами сертификатов, включая сертификаты X.509 в кодировке DER или Base64-кодировке, сертификаты PFX/PKCS12 и сертификатами подписавшего, например Authenticode.</span><span class="sxs-lookup"><span data-stu-id="69adb-357">This method can be used with several certificate types, including Base64-encoded or DER-encoded X.509 certificates, PFX/PKCS12 certificates, and signer certificates such as Authenticode.</span></span> <span data-ttu-id="69adb-358">Обратите внимание, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-358">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="69adb-359">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="69adb-359">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="69adb-360">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-360">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="69adb-361">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-361">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="69adb-362">для полного доверия для разработчиков производных классов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-362">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="69adb-363">Этот член не может наследоваться частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-363">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="69adb-364">Массив байтов, содержащий данные из сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-364">A byte array that contains data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="69adb-365">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-365">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="69adb-366">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-366">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-367">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью данных из массива данных, пароля и флага хранилища ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-367">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-368">Этот метод можно использовать для типов сертификатов, такие как сертификаты X.509 в кодировке DER или Base64-кодированном или сертификаты PFX/PKCS12.</span><span class="sxs-lookup"><span data-stu-id="69adb-368">You can use this method for certificate types such as Base64-encoded or DER-encoded X.509 certificates, or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="69adb-369">Обратите внимание, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-369">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="69adb-370">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="69adb-370">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="69adb-371">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="69adb-371">Never hard code a password within your source code.</span></span>  <span data-ttu-id="69adb-372">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="69adb-372">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="69adb-373">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-373">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="69adb-374">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-374">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="69adb-375">для полного доверия для разработчиков производных классов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-375">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="69adb-376">Этот член не может наследоваться частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-376">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="69adb-377">Массив байтов, содержащий данные сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-377">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="69adb-378">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-378">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="69adb-379">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-379">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-380">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью данных из массива данных, пароля и флагов, чтобы определить способ импорта закрытого ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-380">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and flags for determining how to import the private key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-381">Этот метод можно использовать для заполнения <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта с помощью пароля для сертификата, представленного массив байтов.</span><span class="sxs-lookup"><span data-stu-id="69adb-381">This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a password for the certificate represented by the byte array.</span></span> <span data-ttu-id="69adb-382"><xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> Значение может использоваться для управления, где и как импорт закрытого ключа.</span><span class="sxs-lookup"><span data-stu-id="69adb-382">The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how to import the private key.</span></span>  
  
 <span data-ttu-id="69adb-383">Этот метод принимает массив байтов и может использоваться для типов сертификатов, такие как сертификаты X.509 в кодировке DER или Base64-кодированном или сертификаты PFX/PKCS12.</span><span class="sxs-lookup"><span data-stu-id="69adb-383">This method accepts a byte array and can be used for certificate types such as Base64-encoded or DER-encoded X.509 certificates or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="69adb-384">Обратите внимание, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-384">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="69adb-385">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="69adb-385">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="69adb-386">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="69adb-386">Never hard code a password within your source code.</span></span>  <span data-ttu-id="69adb-387">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="69adb-387">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-388">В следующем примере кода создается исполняемый файл командной строки, который принимает в качестве аргумента файл сертификата и выводит различные свойства сертификата в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-388">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="69adb-389">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-389">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="69adb-390">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-390">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="69adb-391">для полного доверия для разработчиков производных классов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-391">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="69adb-392">Этот член не может наследоваться частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-392">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="69adb-393">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-393">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="69adb-394">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-394">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="69adb-395">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-395">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-396">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> сведениями из файла сертификата, паролем и флагом хранилища ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-396">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-397">**Примечание по безопасности** никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="69adb-397">**Security Note** Never hard code a password within your source code.</span></span>  <span data-ttu-id="69adb-398">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="69adb-398">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="69adb-399">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-399">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="69adb-400">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-400">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="69adb-401">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-401">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="69adb-402">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-402">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="69adb-403">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-403">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="69adb-404">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-404">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="69adb-405">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-405">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-406">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> сведениями из файла сертификата, паролем и значением <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-406">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-407">Этот метод можно использовать заполнение <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объект с данными из файла сертификата, пароля и <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> значение.</span><span class="sxs-lookup"><span data-stu-id="69adb-407">This method can be used populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with information from a certificate file, a password, and an <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="69adb-408">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="69adb-408">Never hard code a password within your source code.</span></span>  <span data-ttu-id="69adb-409">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="69adb-409">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="69adb-410">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-410">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="69adb-411">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-411">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="69adb-412">для полного доверия для разработчиков производных классов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-412">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="69adb-413">Этот член не может наследоваться частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-413">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IssuerName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssuerName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ IssuerName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-414">Получает различающееся имя поставщика сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-414">Gets the distinguished name of the certificate issuer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69adb-415">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" />, содержащий имя поставщика сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-415">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that contains the name of the certificate issuer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-416">Это свойство содержит имя сертификата центром сертификации (ЦС), выдавшего сертификат.</span><span class="sxs-lookup"><span data-stu-id="69adb-416">This property contains the name of the certificate authority (CA) that issued the certificate.</span></span> <span data-ttu-id="69adb-417">Чтобы получить имя сертификата, используйте <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="69adb-417">To obtain the name of a certificate, use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> method.</span></span>  
  
 <span data-ttu-id="69adb-418">Различающееся имя для сертификата является текстовым представлением субъекта или издателя сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-418">The distinguished name for the certificate is a textual representation of the certificate subject or issuer.</span></span> <span data-ttu-id="69adb-419">Это представление состоит из имени атрибутов (например, «CN = MyName, OU = MyOrgUnit, C = US»).</span><span class="sxs-lookup"><span data-stu-id="69adb-419">This representation consists of name attributes (for example, "CN=MyName, OU=MyOrgUnit, C=US").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-420">В следующем примере кода создается исполняемый файл командной строки, который принимает в качестве аргумента файл сертификата и выводит различные свойства сертификата в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-420">The following code example creates a command-line executable file that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-421">Недопустимый контекст сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-421">The certificate context is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NotAfter">
      <MemberSignature Language="C#" Value="public DateTime NotAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotAfter" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotAfter { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-422">Получает дату в формате местного времени, после которой сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-422">Gets the date in local time after which a certificate is no longer valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69adb-423">Объект <see cref="T:System.DateTime" />, представляющий дату окончания срока действия сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-423">A <see cref="T:System.DateTime" /> object that represents the expiration date for the certificate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-424">Это свойство указывает дату окончания срока действия, в которой сертификат становится недействительным.</span><span class="sxs-lookup"><span data-stu-id="69adb-424">This property indicates an expiration date on which the certificate becomes invalid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-425">В следующем примере кода создается исполняемый файл командной строки, который принимает в качестве аргумента файл сертификата и выводит различные свойства сертификата в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-425">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-426">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-426">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NotBefore">
      <MemberSignature Language="C#" Value="public DateTime NotBefore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotBefore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotBefore { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-427">Получает дату в формате местного времени, после которой сертификат становится действительным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-427">Gets the date in local time on which a certificate becomes valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69adb-428">Объект <see cref="T:System.DateTime" />, представляющий дату вступления в силу сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-428">A <see cref="T:System.DateTime" /> object that represents the effective date of the certificate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-429">Это свойство указывает дату, на котором срока действия сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-429">This property indicates the date on which the certificate becomes valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-430">В следующем примере кода создается исполняемый файл командной строки, который принимает в качестве аргумента файл сертификата и выводит различные свойства сертификата в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-430">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-431">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-431">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PrivateKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm PrivateKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm PrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ PrivateKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-432">Получает или задает объект <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, который представляет закрытый ключ, связанный с сертификатом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-432">Gets or sets the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that represents the private key associated with a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69adb-433">Объект <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, являющийся поставщиком служб шифрования RSA или DSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-433">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object, which is either an RSA or DSA cryptographic service provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-434">В настоящее время это свойство поддерживает только RSA и DSA ключи, чтобы он возвращал либо <xref:System.Security.Cryptography.RSACryptoServiceProvider> или <xref:System.Security.Cryptography.DSACryptoServiceProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="69adb-434">Currently this property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object.</span></span> <span data-ttu-id="69adb-435">Если закрытый ключ, связанный с сертификатом, возвращается `null`.</span><span class="sxs-lookup"><span data-stu-id="69adb-435">If no private key is associated with the certificate, it returns `null`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="69adb-436">Если значение этого свойства `null` или для другого ключа, не удаляя его, файл закрытого ключа остается на диске.</span><span class="sxs-lookup"><span data-stu-id="69adb-436">If you set this property to `null` or to another key without first deleting it, a private key file is left on the disk.</span></span>  
  
 <span data-ttu-id="69adb-437">Чтобы правильно удалить закрытый ключ, связанный с этим свойством, установите `PersistKeyInCsp` для `false`, а затем вызвать <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="69adb-437">To properly delete the private key associated with this property, set `PersistKeyInCsp` to `false`, and then call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-438">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="69adb-438">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="69adb-439">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-439">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-440">Значение ключа не является значением RSA или DSA, или ключ не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-440">The key value is not an RSA or DSA key, or the key is unreadable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="69adb-441">Для этого свойства устанавливается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-441">The value being set for this property is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="69adb-442">Алгоритм ключа для этого закрытого ключа не поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-442">The key algorithm for this private key is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">
          <span data-ttu-id="69adb-443">Ключи X.509 не совпадают.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-443">The X.509 keys do not match.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="69adb-444">Значение ключа поставщика служб шифрования равно <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-444">The cryptographic service provider key is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.PublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.PublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicKey As PublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::PublicKey ^ PublicKey { System::Security::Cryptography::X509Certificates::PublicKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.PublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-445">Получает объект <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />, связанный с сертификатом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-445">Gets a <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object associated with a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69adb-446">Объект <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-446">A <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-447">Это свойство возвращает <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> объект, который содержит идентификатор объекта (<xref:System.Security.Cryptography.Oid>) представляет алгоритм открытого ключа, параметры кодировке ASN.1 и значение ключа в кодировке ASN.1.</span><span class="sxs-lookup"><span data-stu-id="69adb-447">This property returns a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> object, which contains the object identifier (<xref:System.Security.Cryptography.Oid>) representing the public key algorithm, the ASN.1-encoded parameters, and the ASN.1-encoded key value.</span></span>  
  
 <span data-ttu-id="69adb-448">Вы также можете получить ключ как <xref:System.Security.Cryptography.AsymmetricAlgorithm> объекта с помощью ссылки на <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="69adb-448">You can also obtain the key as an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object by referencing the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> property.</span></span> <span data-ttu-id="69adb-449">Это свойство поддерживает только RSA и DSA ключи, чтобы он возвращал либо <xref:System.Security.Cryptography.RSACryptoServiceProvider> или <xref:System.Security.Cryptography.DSACryptoServiceProvider> , представляющий открытый ключ.</span><span class="sxs-lookup"><span data-stu-id="69adb-449">This property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object that represents the public key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-450">В следующем примере кода создается исполняемый файл командной строки, который принимает в качестве аргумента файл сертификата и выводит различные свойства сертификата в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-450">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-451">Значение ключа не является значением RSA или DSA, или ключ не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-451">The key value is not an RSA or DSA key, or the key is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RawData">
      <MemberSignature Language="C#" Value="public byte[] RawData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] RawData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ RawData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-452">Получает необработанные данные сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-452">Gets the raw data of a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69adb-453">Необработанные данные сертификата в качестве массива байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-453">The raw data of the certificate as a byte array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69adb-454">В следующем примере кода создается исполняемый файл командной строки, который принимает в качестве аргумента файл сертификата и выводит различные свойства сертификата в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-454">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="69adb-455">Сбрасывает состояние объекта <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-455">Resets the state of an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-456">Этот метод можно использовать для сброса состояния сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-456">This method can be used to reset the state of the certificate.</span></span> <span data-ttu-id="69adb-457">Она также освобождает все ресурсы, связанные с сертификатом.</span><span class="sxs-lookup"><span data-stu-id="69adb-457">It also frees any resources associated with the certificate.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="69adb-458">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-458">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="69adb-459">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-459">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="69adb-460">для полного доверия для разработчиков производных классов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-460">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="69adb-461">Этот член не может наследоваться частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-461">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SerialNumber">
      <MemberSignature Language="C#" Value="public string SerialNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerialNumber" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerialNumber { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-462">Получает серийный номер сертификата в виде шестнадцатеричной строки в обратном порядке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-462">Gets the serial number of a certificate as a big-endian hexadecimal string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69adb-463">Серийный номер сертификата в виде шестнадцатеричной строки с обратным порядком байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-463">The serial number of the certificate as a big-endian hexadecimal string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-464">Серийный номер сертификата является частью исходного протокола X.509.</span><span class="sxs-lookup"><span data-stu-id="69adb-464">The serial number of the certificate is part of the original X.509 protocol.</span></span> <span data-ttu-id="69adb-465">Серийный номер имеет уникальный номер, выданный поставщиком сертификата, который также называется центром сертификации (ЦС).</span><span class="sxs-lookup"><span data-stu-id="69adb-465">The serial number is a unique number issued by the certificate issuer, which is also called the Certificate Authority (CA).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-466">В следующем примере кода создается исполняемый файл командной строки, который принимает в качестве аргумента файл сертификата и выводит различные свойства сертификата в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-466">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ SignatureAlgorithm { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-467">Получает алгоритм, используемый для создания подписи сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-467">Gets the algorithm used to create the signature of a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69adb-468">Возвращает идентификатор объекта (<see cref="T:System.Security.Cryptography.Oid" />) алгоритма подписи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-468">Returns the object identifier (<see cref="T:System.Security.Cryptography.Oid" />) of the signature algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-469">Идентификатор объекта (<xref:System.Security.Cryptography.Oid>) определяет тип алгоритма подписи, используемого сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-469">The object identifier (<xref:System.Security.Cryptography.Oid>) identifies the type of signature algorithm used by the certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-470">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="69adb-470">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="69adb-471">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-471">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-472">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-472">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SubjectName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubjectName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ SubjectName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-473">Получает различающееся имя субъекта от сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-473">Gets the subject distinguished name from a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69adb-474">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" />, представляющий имя субъекта сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-474">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that represents the name of the certificate subject.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-475">Различающееся имя субъекта является имя пользователя сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-475">The subject distinguished name is the name of the user of the certificate.</span></span> <span data-ttu-id="69adb-476">Различающееся имя для сертификата является текстовым представлением субъекта или издателя сертификата.</span><span class="sxs-lookup"><span data-stu-id="69adb-476">The distinguished name for the certificate is a textual representation of the subject or issuer of the certificate.</span></span> <span data-ttu-id="69adb-477">Это представление состоит из атрибуты имени, например, «CN = MyName, OU = MyOrgUnit, C = US».</span><span class="sxs-lookup"><span data-stu-id="69adb-477">This representation consists of name attributes, for example, "CN=MyName, OU=MyOrgUnit, C=US".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-478">В следующем примере кода создается исполняемый файл командной строки, который принимает в качестве аргумента файл сертификата и выводит различные свойства сертификата в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-478">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-479">Недопустимый контекст сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-479">The certificate context is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Thumbprint">
      <MemberSignature Language="C#" Value="public string Thumbprint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Thumbprint" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thumbprint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Thumbprint { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-480">Получает отпечаток сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-480">Gets the thumbprint of a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69adb-481">Отпечаток сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-481">The thumbprint of the certificate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-482">Отпечаток динамически создается с помощью алгоритма SHA1 и физически не существует в сертификате.</span><span class="sxs-lookup"><span data-stu-id="69adb-482">The thumbprint is dynamically generated using the SHA1 algorithm and does not physically exist in the certificate.</span></span> <span data-ttu-id="69adb-483">Поскольку отпечатка — это уникальное значение для сертификата, обычно используется для поиска определенного сертификата в хранилище сертификатов.</span><span class="sxs-lookup"><span data-stu-id="69adb-483">Since the thumbprint is a unique value for the certificate, it is commonly used to find a particular certificate in a certificate store.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-484">В следующем примере кода создается исполняемый файл командной строки, который принимает в качестве аргумента файл сертификата и выводит различные свойства сертификата в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-484">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-485">Отображает сертификат X.509 в текстовом формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-485">Displays an X.509 certificate in text format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="69adb-486">Отображает сертификат X.509 в текстовом формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-486">Displays an X.509 certificate in text format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69adb-487">Сведения о сертификате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-487">The certificate information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-488">Как и во всех `ToString` методов, выходные данные могут не совпадать во всех версиях платформы .NET Framework, поэтому не следует разбирать результаты метода для содержимого.</span><span class="sxs-lookup"><span data-stu-id="69adb-488">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="69adb-489">Используйте свойства <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, чтобы получить точные сведения о содержимом или используйте <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> метод, чтобы получить сведения о сертификате.</span><span class="sxs-lookup"><span data-stu-id="69adb-489">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information about the content or use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> method to obtain information about the certificate.</span></span>  
  
 <span data-ttu-id="69adb-490">Этот метод отображает сертификат в текстовом формате.</span><span class="sxs-lookup"><span data-stu-id="69adb-490">This method displays the certificate in text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-491">В следующем примере кода создается исполняемый файл командной строки, который принимает в качестве аргумента файл сертификата и выводит различные свойства сертификата в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-491">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString (bool verbose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString(bool verbose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString (verbose As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString(bool verbose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verbose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verbose">
          <span data-ttu-id="69adb-492">Значение <see langword="true" /> для отображения открытого ключа, закрытого ключа, расширений и т. д.; значение <see langword="false" /> для отображения сведений, аналогичных классу <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, в том числе отпечаток, серийный номер, имена субъекта и поставщика и т. д.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-492">
              <see langword="true" /> to display the public key, private key, extensions, and so forth; <see langword="false" /> to display information that is similar to the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class, including thumbprint, serial number, subject and issuer names, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69adb-493">Отображает сертификат X.509 в текстовом формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-493">Displays an X.509 certificate in text format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69adb-494">Сведения о сертификате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-494">The certificate information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-495">Как и во всех `ToString` методов, выходные данные могут не совпадать во всех версиях платформы .NET Framework, поэтому не следует разбирать результаты метода для содержимого.</span><span class="sxs-lookup"><span data-stu-id="69adb-495">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="69adb-496">Используйте свойства <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, чтобы получить точные сведения.</span><span class="sxs-lookup"><span data-stu-id="69adb-496">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information.</span></span>  
  
 <span data-ttu-id="69adb-497">Этот метод отображает сертификат в текстовом формате.</span><span class="sxs-lookup"><span data-stu-id="69adb-497">This method displays the certificate in text format.</span></span> <span data-ttu-id="69adb-498">Если `verbose` параметр имеет значение `true`, текстовое отображение включает открытый ключ, закрытый ключ и расширения.</span><span class="sxs-lookup"><span data-stu-id="69adb-498">If the `verbose` parameter is set to `true`, the text display includes the public key, private key, and extensions.</span></span> <span data-ttu-id="69adb-499">Если `verbose` равно `false`, текстовое отображение включает поля, доступные в сертификате X.509, включая отпечаток, серийный номер, имена субъекта и издателя сертификата и правильность сведений о дате.</span><span class="sxs-lookup"><span data-stu-id="69adb-499">If `verbose` is set to `false`, the text display includes those fields available from the X.509 certificate, including thumbprint, serial number, subject and issuer names, and validity date information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-500">В следующем примере кода создается исполняемый файл командной строки, который принимает в качестве аргумента файл сертификата и выводит различные свойства сертификата в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-500">The following code example creates a command line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public bool Verify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Verify() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Verify" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Verify();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("by default this depends on the incomplete X509Chain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="69adb-501">Выполняет проверку цепочки X.509 с использованием базовой политики проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-501">Performs a X.509 chain validation using basic validation policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69adb-502">Значение <see langword="true" />, если проверка прошла успешно; значение <see langword="false" />, если произошел сбой проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-502">
              <see langword="true" /> if the validation succeeds; <see langword="false" /> if the validation fails.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-503">Этот метод создает простую цепочку для сертификата и применяет базовую политику к этой цепочке.</span><span class="sxs-lookup"><span data-stu-id="69adb-503">This method builds a simple chain for the certificate and applies the base policy to that chain.</span></span> <span data-ttu-id="69adb-504">Если требуются дополнительные сведения о сбое, проверку сертификата непосредственно с помощью <xref:System.Security.Cryptography.X509Certificates.X509Chain> объекта.</span><span class="sxs-lookup"><span data-stu-id="69adb-504">If you need more information about a failure, validate the certificate directly using the <xref:System.Security.Cryptography.X509Certificates.X509Chain> object.</span></span>  
  
 <span data-ttu-id="69adb-505">Обратите внимание, что цепочки обработчик по умолчанию можно переопределить с помощью <xref:System.Security.Cryptography.CryptoConfig> класса.</span><span class="sxs-lookup"><span data-stu-id="69adb-505">Note that the default chaining engine can be overridden using the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span> <span data-ttu-id="69adb-506">В Microsoft Windows Server 2003, модуль по умолчанию соответствует спецификации, описанной в RFC3280, «[сертификата и профиль список ОТЗЫВА сертификатов для отзыва сертификатов](http://go.microsoft.com/fwlink/?LinkId=45286).»</span><span class="sxs-lookup"><span data-stu-id="69adb-506">On Microsoft Windows Server 2003, the default engine conforms to the specification described in RFC3280, "[Certificate and Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-507">В следующем примере кода открывается хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="69adb-507">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="69adb-508">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-508">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-509">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-509">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69adb-510">Получает версию формата сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-510">Gets the X.509 format version of a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69adb-511">Формат сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-511">The certificate format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69adb-512">Существует несколько версий сертификатов X.509.</span><span class="sxs-lookup"><span data-stu-id="69adb-512">There are several versions of X.509 certificates.</span></span> <span data-ttu-id="69adb-513">Это свойство определяет формат использует сертификат.</span><span class="sxs-lookup"><span data-stu-id="69adb-513">This property identifies which format the certificate uses.</span></span> <span data-ttu-id="69adb-514">Например «3» возвращается для сертификата версии 3.</span><span class="sxs-lookup"><span data-stu-id="69adb-514">For example, "3" is returned for a version 3 certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69adb-515">В следующем примере кода создается исполняемый файл командной строки, который принимает в качестве аргумента файл сертификата и выводит различные свойства сертификата в консоль.</span><span class="sxs-lookup"><span data-stu-id="69adb-515">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="69adb-516">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69adb-516">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>