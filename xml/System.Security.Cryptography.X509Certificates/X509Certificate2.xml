<Type Name="X509Certificate2" FullName="System.Security.Cryptography.X509Certificates.X509Certificate2">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1a8dbbb93138d69c1a9efee6396113e123cd79bb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37632564" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit X509Certificate2 extends System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />
  <TypeSignature Language="VB.NET" Value="Public Class X509Certificate2&#xA;Inherits X509Certificate" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509Certificate2 : System::Security::Cryptography::X509Certificates::X509Certificate" />
  <TypeSignature Language="F#" Value="type X509Certificate2 = class&#xA;    inherit X509Certificate" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509Certificate</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fd8c9-101">Представляет сертификат X.509.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fd8c9-101">Represents an X.509 certificate.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-102">Структура X.509 создается в международной организации по стандартизации (ISO) рабочих группах.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-102">The X.509 structure originated in the International Organization for Standardization (ISO) working groups.</span></span> <span data-ttu-id="fd8c9-103">Эта структура используется для представления различных типов информации, включая удостоверения, прав и владелец атрибутами (разрешения, возраст, пол, расположение, назначение и т. д).</span><span class="sxs-lookup"><span data-stu-id="fd8c9-103">This structure can be used to represent various types of information including identity, entitlement, and holder attributes (permissions, age, sex, location, affiliation, and so forth).</span></span> <span data-ttu-id="fd8c9-104">Несмотря на то, что спецификации ISO по структуре, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> класс предназначен для моделирования сценариев использования, определенный в спецификациях, выданный инфраструктуры открытых ключей Internet Engineering Task Force (IETF), X.509 (PKIX ) рабочую группу.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-104">Although the ISO specifications are most informative on the structure itself, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class is designed to model the usage scenarios defined in specifications issued by the Internet Engineering Task Force (IETF) Public Key Infrastructure, X.509 (PKIX) working group.</span></span> <span data-ttu-id="fd8c9-105">Наиболее информативные этих спецификаций является RFC 3280 "[сертификата и профиля список ОТЗЫВА сертификатов отзыва](http://go.microsoft.com/fwlink/?LinkId=45286).»</span><span class="sxs-lookup"><span data-stu-id="fd8c9-105">The most informative of these specifications is RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd8c9-106">Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], этот тип реализует <xref:System.IDisposable> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-106">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="fd8c9-107">Когда вы закончите, используя тип, следует освободить его прямо или косвенно.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="fd8c9-108">Чтобы удалить тип напрямую, вызовите его <xref:System.IDisposable.Dispose%2A> метод в `try` / `catch` блока.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="fd8c9-109">Чтобы избавиться от его косвенно, используйте языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fd8c9-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="fd8c9-110">Дополнительные сведения см. в разделе «С помощью объекта, реализует IDisposable» <xref:System.IDisposable> разделу интерфейса.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
>   
>  <span data-ttu-id="fd8c9-111">Для приложений, предназначенных для [!INCLUDE[net_v452](~/includes/net-v452-md.md)] и более ранних версий <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> класс не реализует <xref:System.IDisposable> интерфейс и поэтому не `Dispose` метод.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-111">For apps that target the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class does not implement the <xref:System.IDisposable> interface and therefore does not have a `Dispose` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-112">Следующий пример демонстрирует, как использовать <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта для шифрования и расшифровки файла.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-112">The following example demonstrates how to use an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to encrypt and decrypt a file.</span></span>  
  
 [!code-csharp[X509Certificate2#1](~/samples/snippets/csharp/VS_Snippets_CLR/x509certificate2/cs/program.cs#1)]
 [!code-vb[X509Certificate2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509certificate2/vb/program.vb#1)]  
  
 <span data-ttu-id="fd8c9-113">В следующем примере создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-113">The following example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-114">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-115">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-116">Этот конструктор создает пустой <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, в отличие от других конструкторов для этого класса, используйте сведения о сертификате из массива байтов, указатель или файл сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-116">This constructor creates an empty <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object, unlike the other constructors for this class that use certificate information from a byte array, a pointer, or a certificate file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-117">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-117">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="fd8c9-118">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-118">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 rawData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="fd8c9-119">Массив байтов, содержащий данные сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-119">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-120">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием информации из указанного массива байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using information from a byte array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-121">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, используя сведения о сертификате из массива байтов.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-121">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using certificate information from a byte array.</span></span> <span data-ttu-id="fd8c9-122">Массив байтов может быть бинарные (DER) или данные X.509 в кодировке Base64.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-122">The byte array can be binary (DER) encoded or Base64-encoded X.509 data.</span></span> <span data-ttu-id="fd8c9-123">Массив байтов может также быть PKCS7 (Authenticode) подписанному файлу; сертификат подписавшего используется для создания объекта.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-123">The byte array can also be a PKCS7 (Authenticode) signed file; the signer certificate is used to create the object.</span></span>  
  
 <span data-ttu-id="fd8c9-124">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата путем указания хранилища подписанного файла PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-124">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-125">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-125">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="fd8c9-126">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-126">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="fd8c9-127">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-127">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="fd8c9-128">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-128">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : nativeint -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="fd8c9-129">Указатель на контекст сертификата в неуправляемом коде.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-129">A pointer to a certificate context in unmanaged code.</span>
          </span>
          <span data-ttu-id="fd8c9-130">Структура на языке C вызывается <see langword="PCCERT_CONTEXT" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-130">The C structure is called <see langword="PCCERT_CONTEXT" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-131">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью неуправляемого дескриптора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-131">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an unmanaged handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-132">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, используя дескриптор для контекста сертификата Microsoft Cryptographic API, `PCCERT_CONTEXT`.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-132">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a handle for the Microsoft Cryptographic API certificate context, `PCCERT_CONTEXT`.</span></span> <span data-ttu-id="fd8c9-133">Обратите внимание на то, что непосредственный вызывающий объект этого конструктора требует разрешение неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-133">Note that the immediate caller of this constructor requires unmanaged code permission.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd8c9-134">Конструктор создает копию контекста сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-134">The constructor creates a copy of the certificate context.</span></span> <span data-ttu-id="fd8c9-135">Не следует предполагать, что структура контекста, который передается конструктору является допустимым; Возможно, он был выпущен.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-135">Do not assume that the context structure you passed to the constructor is valid; it may have been released.</span></span> <span data-ttu-id="fd8c9-136">Можно получить копию текущего `PCCERT_CONTEXT` структуры из <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> , однако оно допустимо только в течение времени существования <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-136">You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-137">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-137">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="fd8c9-138">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-138">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="fd8c9-139">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-139">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="fd8c9-140">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-140">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fd8c9-141">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-141">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="fd8c9-142">Если не удается найти <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />, он проходит по иерархии класса, пока не найдет типом-примитивом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-142">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="fd8c9-143">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-143">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">
          <span data-ttu-id="fd8c9-144">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-144">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-145">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью объекта <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-145">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-146">Этот метод создает новый экземпляр класса <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> используя <xref:System.Security.Cryptography.X509Certificates.X509Certificate> объекта.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-146">This method creates a new instance of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class using an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-147">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-147">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="fd8c9-148">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-148">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="fd8c9-149">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-149">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="fd8c9-150">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-150">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fd8c9-151">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-151">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="fd8c9-152">Если не удается найти <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />, он проходит по иерархии класса, пока не найдет типом-примитивом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-152">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="fd8c9-153">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-153">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="fd8c9-154">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-154">The name of a certificate file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-155">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью имени файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-155">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-156">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> с помощью имени файла сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-156">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name.</span></span> <span data-ttu-id="fd8c9-157">Он поддерживает двоичного кодирования (DER) или кодировку Base64.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-157">It supports binary (DER) encoding or Base64 encoding.</span></span>  
  
 <span data-ttu-id="fd8c9-158">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата путем указания хранилища подписанного файла PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-158">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-159">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-159">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="fd8c9-160">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-160">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="fd8c9-161">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-161">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="fd8c9-162">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-162">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="fd8c9-163">Массив байтов, содержащий данные из сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-163">A byte array that contains data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="fd8c9-164">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-164">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-165">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов и пароля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-165">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-166">Этот конструктор используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-166">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="fd8c9-167">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в контейнер ключей.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-167">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd8c9-168">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-168">Never hard code a password within your source code.</span></span>  <span data-ttu-id="fd8c9-169">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-169">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="fd8c9-170">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификата путем указания хранилища подписанного файла PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-170">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-171">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-171">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="fd8c9-172">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-172">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="fd8c9-173">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-173">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="fd8c9-174">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-174">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fd8c9-175">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-175">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="fd8c9-176">Если не удается найти <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />, он проходит по иерархии класса, пока не найдет типом-примитивом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-176">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="fd8c9-177">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-177">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="fd8c9-178">Массив байтов, содержащий данные сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-178">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="fd8c9-179">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-179">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-180">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов и пароля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-180">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-181">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> с помощью массива байтов и пароля, который необходим для доступа к данным сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-181">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array and a password that is needed to access the certificate data.</span></span> <span data-ttu-id="fd8c9-182">Он используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-182">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="fd8c9-183">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в контейнер ключей.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-183">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd8c9-184">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-184">Never hard code a password within your source code.</span></span>  <span data-ttu-id="fd8c9-185">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-185">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="fd8c9-186">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата путем указания хранилища подписанного файла PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-186">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-187">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-187">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="fd8c9-188">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-188">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="fd8c9-189">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-189">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="fd8c9-190">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-190">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fd8c9-191">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-191">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="fd8c9-192">Если не удается найти <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />, он проходит по иерархии класса, пока не найдет типом-примитивом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-192">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="fd8c9-193">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-193">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509Certificate2 (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; X509Certificate2(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="fd8c9-194">Сведения о сериализации, необходимые для десериализации нового объекта <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-194">The serialization information required to deserialize the new <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="fd8c9-195">Контекстные сведения об источнике десериализуемого потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-195">Contextual information about the source of the stream to be deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-196">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используя заданную информацию о сериализации и контексте потоков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-196">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using the specified serialization and stream context information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fd8c9-197">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-197">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="fd8c9-198">Если не удается найти <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />, он проходит по иерархии класса, пока не найдет типом-примитивом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-198">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="fd8c9-199">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-199">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="fd8c9-200">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-200">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="fd8c9-201">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-201">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-202">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием имени файла сертификата и пароля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-202">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-203">Этот конструктор используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-203">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="fd8c9-204">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в контейнер ключей.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-204">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd8c9-205">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-205">Never hard code a password within your source code.</span></span>  <span data-ttu-id="fd8c9-206">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-206">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="fd8c9-207">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификата путем указания хранилища подписанного файла PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-207">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-208">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-208">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="fd8c9-209">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-209">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="fd8c9-210">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-210">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="fd8c9-211">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-211">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fd8c9-212">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-212">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="fd8c9-213">Если не удается найти <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />, он проходит по иерархии класса, пока не найдет типом-примитивом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-213">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="fd8c9-214">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-214">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="fd8c9-215">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-215">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="fd8c9-216">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-216">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-217">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используя имя файла сертификата и пароль для доступа к сертификату.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-217">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password used to access the certificate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-218">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> с помощью имени файла сертификата и пароль, необходимый для доступа к сертификату.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-218">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name and a password needed to access the certificate.</span></span> <span data-ttu-id="fd8c9-219">Он используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-219">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="fd8c9-220">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в контейнер ключей.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-220">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd8c9-221">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-221">Never hard code a password within your source code.</span></span>  <span data-ttu-id="fd8c9-222">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-222">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="fd8c9-223">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата путем указания хранилища подписанного файла PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-223">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-224">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-224">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="fd8c9-225">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-225">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="fd8c9-226">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-226">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="fd8c9-227">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-227">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fd8c9-228">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-228">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="fd8c9-229">Если не удается найти <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />, он проходит по иерархии класса, пока не найдет типом-примитивом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-229">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="fd8c9-230">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-230">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="fd8c9-231">Массив байтов, содержащий данные из сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-231">A byte array that contains data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="fd8c9-232">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-232">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="fd8c9-233">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-233">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-234">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов, пароля и флага хранилища ключей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-234">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-235">Этот конструктор используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-235">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="fd8c9-236">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в Microsoft API криптографических служб шифрования поставщика (CSP).</span><span class="sxs-lookup"><span data-stu-id="fd8c9-236">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd8c9-237">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-237">Never hard code a password within your source code.</span></span>  <span data-ttu-id="fd8c9-238">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-238">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="fd8c9-239">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификата путем указания хранилища подписанного файла PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-239">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-240">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-240">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="fd8c9-241">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-241">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="fd8c9-242">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-242">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="fd8c9-243">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-243">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fd8c9-244">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-244">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="fd8c9-245">Если не удается найти <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />, он проходит по иерархии класса, пока не найдет типом-примитивом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-245">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="fd8c9-246">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-246">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="fd8c9-247">Массив байтов, содержащий данные сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-247">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="fd8c9-248">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-248">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="fd8c9-249">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-249">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-250">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием массива байтов, пароля и флага хранилища ключей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-250">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-251">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> массива объекта с помощью типа byte, пароль, необходимый для доступа к данных сертификата и флага хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-251">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.</span></span> <span data-ttu-id="fd8c9-252">Он используется с файлами PKCS12 (PFX), содержащими закрытый ключ сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-252">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="fd8c9-253">При вызове конструктора с правильным паролем расшифровывается закрытый ключ и сохраняет его в Microsoft API криптографических служб шифрования поставщика (CSP).</span><span class="sxs-lookup"><span data-stu-id="fd8c9-253">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd8c9-254">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-254">Never hard code a password within your source code.</span></span>  <span data-ttu-id="fd8c9-255">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-255">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="fd8c9-256">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата путем указания хранилища подписанного файла PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-256">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-257">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-257">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="fd8c9-258">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-258">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="fd8c9-259">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-259">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="fd8c9-260">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-260">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fd8c9-261">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-261">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="fd8c9-262">Если не удается найти <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />, он проходит по иерархии класса, пока не найдет типом-примитивом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-262">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="fd8c9-263">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-263">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="fd8c9-264">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-264">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="fd8c9-265">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-265">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="fd8c9-266">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-266">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-267">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием имени файла сертификата, пароля и флага хранилища ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-267">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-268">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate> сертификата путем указания хранилища подписанного файла PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-268">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-269">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-269">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="fd8c9-270">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-270">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="fd8c9-271">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-271">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="fd8c9-272">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-272">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fd8c9-273">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-273">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="fd8c9-274">Если не удается найти <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />, он проходит по иерархии класса, пока не найдет типом-примитивом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-274">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="fd8c9-275">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-275">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="fd8c9-276">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-276">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="fd8c9-277">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-277">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="fd8c9-278">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-278">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-279">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с использованием имени файла сертификата и пароля для доступа к сертификату, а также флага хранилища ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-279">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password used to access the certificate, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-280">Этот конструктор создает новый <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> имя объекта, используя файл сертификата, пароль, необходимый для доступа к сертификату, а также флага хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-280">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name, a password needed to access the certificate, and a key storage flag.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd8c9-281">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-281">Never hard code a password within your source code.</span></span>  <span data-ttu-id="fd8c9-282">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-282">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="fd8c9-283">Если вы создаете <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сертификата путем указания хранилища подписанного файла PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> создается для сертификата, который подписал хранилище, а не для всех сертификатов в хранилище.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-283">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-284">Произошла ошибка сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-284">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="fd8c9-285">Например: заданный файл сертификата не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-285">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="fd8c9-286">— Сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-286">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="fd8c9-287">— Пароль сертификата неверен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-287">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fd8c9-288">для доступа к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-288">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="fd8c9-289">Если не удается найти <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />, он проходит по иерархии класса, пока не найдет типом-примитивом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-289">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="fd8c9-290">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-290">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Archived">
      <MemberSignature Language="C#" Value="public bool Archived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Archived" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberSignature Language="VB.NET" Value="Public Property Archived As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Archived { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Archived : bool with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-291">Получает или задает значение, указывающее на архивирование сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-291">Gets or sets a value indicating that an X.509 certificate is archived.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd8c9-292">Значение <see langword="true" />, если сертификат архивирован, значение<see langword="false" />, если сертификат не архивирован.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-292">
              <see langword="true" /> if the certificate is archived, <see langword="false" /> if the certificate is not archived.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-293">Это свойство имеет значение только для сертификата, связанного с хранилищем.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-293">This property is set only on a certificate that is associated with a store.</span></span> <span data-ttu-id="fd8c9-294">Если свойство имеет значение и добавить сертификат в хранилище сертификатов, то значение сохраняется.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-294">If the property is set and the certificate is added to a certificate store, the value is persisted.</span></span> <span data-ttu-id="fd8c9-295">Если свойство имеет значение для сертификата, извлекаются из хранилища, то значение сохраняется немедленно.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-295">If the property is set on a certificate retrieved from a store, the value is persisted immediately.</span></span>  
  
 <span data-ttu-id="fd8c9-296">В хранилище X.509, архив сертификатов, не включаются в возвращаемом <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> Если <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> свойству `true`.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-296">In an X.509 store, archived certificates are not included in the returned <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> object unless the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> property is set to `true`.</span></span> <span data-ttu-id="fd8c9-297">Не выполняются никакие физических архивных действия при <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> значение включать и отключать.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-297">No physical archival activity occurs when the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> value is set or unset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-298">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-298">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="fd8c9-299">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-299">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-300">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-300">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public override byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Export(valuetype System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Export (contentType As X509ContentType, password As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Export(System::Security::Cryptography::X509Certificates::X509ContentType contentType, System::String ^ password);" />
      <MemberSignature Language="F#" Value="abstract member Export : System.Security.Cryptography.X509Certificates.X509ContentType * string -&gt; byte[]&#xA;override this.Export : System.Security.Cryptography.X509Certificates.X509ContentType * string -&gt; byte[]" Usage="x509Certificate2.Export (contentType, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("X509ContentType.SerializedCert is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="password">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As X509ExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ Extensions { System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.Security.Cryptography.X509Certificates.X509ExtensionCollection" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-301">Возвращает коллекцию объектов <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-301">Gets a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd8c9-302">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-302">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-303">Расширения, определенные в формат сертификата X.509 v3 разрешить дополнительные данные, которые будут включены в сертификате.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-303">The extensions defined in the X.509 v3 certificate format allow additional data to be included in the certificate.</span></span> <span data-ttu-id="fd8c9-304">Большое число расширений определяются ISO в определении X.509 v3, так и по PKIX в RFC 3280 "[сертификата и профиля список ОТЗЫВА сертификатов отзыва](http://go.microsoft.com/fwlink/?LinkId=45286).»</span><span class="sxs-lookup"><span data-stu-id="fd8c9-304">A number of extensions are defined by ISO in the X.509 v3 definition as well as by PKIX in RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286)."</span></span> <span data-ttu-id="fd8c9-305">Распространенные расширения включают в себя сведения, касающиеся использования ключа (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), ключевые идентификаторы (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), сертификатов, политик, сведения об отзыве (расширение точки распространения списка отзыва Сертификатов) и других целей.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-305">Common extensions include information regarding key usage (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), key identifiers (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), certificate policies, revocation information (CRL Distribution Point extension), and other uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-306">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-306">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="fd8c9-307">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-307">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-308">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-308">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public string FriendlyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FriendlyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public Property FriendlyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FriendlyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FriendlyName : string with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-309">Получает или задает связанный псевдоним для сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-309">Gets or sets the associated alias for a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd8c9-310">Понятное имя сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-310">The certificate's friendly name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-311">Понятные имена являются свойствами в хранилище сертификатов X.509, который может быть задан.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-311">Friendly names are properties in the X.509 certificate store that can be set.</span></span> <span data-ttu-id="fd8c9-312">Они используются, чтобы пользователь мог связать псевдонимы с сертификатами, поэтому их можно было легко идентифицировать.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-312">They are used to enable a user to associate aliases with certificates so they can be easily identified.</span></span>  
  
 <span data-ttu-id="fd8c9-313">Если понятное имя не существует для сертификата, пустая строка ("») возвращается.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-313">If no friendly name exists for the certificate, an empty string ("") is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-314">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-314">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-315">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-315">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCertContentType">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-316">Показывает тип сертификата, содержащегося в массиве байтов или файле.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-316">Indicates the type of certificate contained in a byte array or file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (rawData As Byte()) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12, Pkcs7 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="fd8c9-317">Массив байтов, содержащий данные сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-317">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-318">Показывает тип сертификата, содержащегося в массиве байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-318">Indicates the type of certificate contained in a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd8c9-319">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-319">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-320">Этот метод позволяет определить тип сертификата в файле.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-320">This method enables you to discover the type of certificate in a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-321">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-321">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="fd8c9-322">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-322">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fd8c9-323">Параметр <paramref name="rawData" /> имеет нулевую длину, или его значение равно <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-323">
              <paramref name="rawData" /> has a zero length or is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (fileName As String) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : string -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="fd8c9-324">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-324">The name of a certificate file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-325">Показывает тип сертификата, содержащегося в файле.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-325">Indicates the type of certificate contained in a file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd8c9-326">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-326">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-327">Этот метод позволяет определить тип сертификата в файле.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-327">This method enables you to discover the type of certificate in a file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd8c9-328">Свойство <paramref name="fileName" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-328">
              <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="fd8c9-329">для чтения сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-329">for reading the certificate.</span>
          </span>
          <span data-ttu-id="fd8c9-330">Если не удается найти <see cref="F:System.Security.Permissions.SecurityAction.Demand" />, он проходит по иерархии класса, пока не найдет типом-примитивом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-330">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="fd8c9-331">Связанное перечисление: <see cref="F:System.IO.FileAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-331">Associated enumeration: <see cref="F:System.IO.FileAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetNameInfo">
      <MemberSignature Language="C#" Value="public string GetNameInfo (System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetNameInfo(valuetype System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNameInfo (nameType As X509NameType, forIssuer As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNameInfo(System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="F#" Value="member this.GetNameInfo : System.Security.Cryptography.X509Certificates.X509NameType * bool -&gt; string" Usage="x509Certificate2.GetNameInfo (nameType, forIssuer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("always return String.Empty for UpnName, DnsFromAlternativeName and UrlName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameType" Type="System.Security.Cryptography.X509Certificates.X509NameType" />
        <Parameter Name="forIssuer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nameType">
          <span data-ttu-id="fd8c9-332">Значение <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> для субъекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-332">The <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> value for the subject.</span>
          </span>
        </param>
        <param name="forIssuer">
          <span data-ttu-id="fd8c9-333">Значение <see langword="true" /> для включения имени поставщика; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-333">
              <see langword="true" /> to include the issuer name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-334">Получает имена субъекта и поставщика сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-334">Gets the subject and issuer names from a certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd8c9-335">Имя сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-335">The name of the certificate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-336">Этот метод всегда должен использоваться вместо разбора сертификата, так как многие значения имени могут быть расположены в нескольких местах.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-336">This method should always be used instead of parsing the certificate, since many of the name values can be located in multiple locations.</span></span> <span data-ttu-id="fd8c9-337">С помощью этого метода гарантирует, что возвращается соответствующее имя.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-337">Using this method ensures that the appropriate name is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-338">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-338">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="fd8c9-339">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-339">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public bool HasPrivateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrivateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrivateKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPrivateKey : bool" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-340">Возвращает значение, которое указывает, содержит ли объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> закрытый ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-340">Gets a value that indicates whether an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd8c9-341">Значение <see langword="true" />, если объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> содержит закрытый ключ; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-341">
              <see langword="true" /> if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-342">Недопустимый контекст сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-342">The certificate context is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Import">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-343">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> предоставленными сведениями о сертификате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-343">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with the certificate information provided.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="abstract member Import : byte[] -&gt; unit&#xA;override this.Import : byte[] -&gt; unit" Usage="x509Certificate2.Import rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="fd8c9-344">Массив байтов, содержащий данные сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-344">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-345">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> данными из массива байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-345">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with data from a byte array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-346">Этот метод можно использовать массив необработанных байтов сертификата X.509 и заполнить <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, связанные с ним значения.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-346">This method can be used to take a raw byte array of an X.509 certificate and populate the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with its associated values.</span></span>  
  
 <span data-ttu-id="fd8c9-347">Поскольку этот метод принимает только массив байтов, его можно использовать только для типов сертификатов, которые не требуют пароля, например, сертификат X.509 с кодировкой Base64 или DER или сертификата PFX/PKCS12.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-347">Since this method accepts only a byte array, it can be used only for certificate types that do not require a password, including a Base64-encoded or DER-encoded X.509 certificate or a PFX/PKCS12 certificate.</span></span> <span data-ttu-id="fd8c9-348">Обратите внимание на то, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-348">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="fd8c9-349">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-349">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="fd8c9-350">для полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-350">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fd8c9-351">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-351">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="fd8c9-352">для полного доверия для разработчиков производных классов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-352">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="fd8c9-353">Этот член не может наследоваться кодом с частичным доверием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-353">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="abstract member Import : string -&gt; unit&#xA;override this.Import : string -&gt; unit" Usage="x509Certificate2.Import fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="fd8c9-354">Имя сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-354">The name of a certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-355">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> сведениями из файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-355">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-356">Этот метод использует файл сертификата, например файл с расширением CER-файл, который представляет сертификат X.509 и заполняет <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта с помощью сертификата, файл содержит.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-356">This method uses a certificate file, such as a file with a .cer extension, that represents an X.509 certificate and populates the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with the certificate the file contains.</span></span>  
  
 <span data-ttu-id="fd8c9-357">Этот метод может использоваться с несколькими типами сертификатов, включая сертификаты X.509 в кодировке Base64 или DER-шифрование, сертификаты PFX/PKCS12 и сертификаты подписавшего, например Authenticode.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-357">This method can be used with several certificate types, including Base64-encoded or DER-encoded X.509 certificates, PFX/PKCS12 certificates, and signer certificates such as Authenticode.</span></span> <span data-ttu-id="fd8c9-358">Обратите внимание на то, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-358">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="fd8c9-359">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-359">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="fd8c9-360">для полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-360">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fd8c9-361">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-361">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="fd8c9-362">для полного доверия для разработчиков производных классов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-362">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="fd8c9-363">Этот член не может наследоваться кодом с частичным доверием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-363">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member Import : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit&#xA;override this.Import : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="fd8c9-364">Массив байтов, содержащий данные из сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-364">A byte array that contains data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="fd8c9-365">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-365">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="fd8c9-366">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-366">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-367">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью данных из массива данных, пароля и флага хранилища ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-367">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-368">Этот метод можно использовать для типов сертификатов, такие как сертификаты X.509 в кодировке Base64 или DER или сертификаты PFX/PKCS12.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-368">You can use this method for certificate types such as Base64-encoded or DER-encoded X.509 certificates, or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="fd8c9-369">Обратите внимание на то, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-369">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="fd8c9-370">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-370">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd8c9-371">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-371">Never hard code a password within your source code.</span></span>  <span data-ttu-id="fd8c9-372">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-372">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="fd8c9-373">для полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-373">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fd8c9-374">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-374">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="fd8c9-375">для полного доверия для разработчиков производных классов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-375">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="fd8c9-376">Этот член не может наследоваться кодом с частичным доверием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-376">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member Import : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit&#xA;override this.Import : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="fd8c9-377">Массив байтов, содержащий данные сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-377">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="fd8c9-378">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-378">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="fd8c9-379">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-379">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-380">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> с помощью данных из массива данных, пароля и флагов, чтобы определить способ импорта закрытого ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-380">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and flags for determining how to import the private key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-381">Этот метод можно использовать для заполнения <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, используя пароль для сертификата, представленного массив байтов.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-381">This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a password for the certificate represented by the byte array.</span></span> <span data-ttu-id="fd8c9-382"><xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> Значение может использоваться для управления, где и как импорт закрытого ключа.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-382">The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how to import the private key.</span></span>  
  
 <span data-ttu-id="fd8c9-383">Этот метод принимает массив байтов и может использоваться для типов сертификатов, такие как сертификаты X.509 в кодировке Base64 или DER или сертификаты PFX/PKCS12.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-383">This method accepts a byte array and can be used for certificate types such as Base64-encoded or DER-encoded X.509 certificates or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="fd8c9-384">Обратите внимание на то, что сертификат PFX/PKCS12 может содержать более одного сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-384">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="fd8c9-385">В этом случае используется первый сертификат, связанный с закрытым ключом, или, если закрытый ключ не найден, используется первый сертификат.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-385">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd8c9-386">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-386">Never hard code a password within your source code.</span></span>  <span data-ttu-id="fd8c9-387">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-387">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-388">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-388">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="fd8c9-389">для полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-389">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fd8c9-390">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-390">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="fd8c9-391">для полного доверия для разработчиков производных классов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-391">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="fd8c9-392">Этот член не может наследоваться кодом с частичным доверием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-392">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member Import : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit&#xA;override this.Import : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="fd8c9-393">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-393">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="fd8c9-394">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-394">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="fd8c9-395">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-395">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-396">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> сведениями из файла сертификата, паролем и флагом хранилища ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-396">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-397">**Примечание по безопасности** никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-397">**Security Note** Never hard code a password within your source code.</span></span>  <span data-ttu-id="fd8c9-398">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-398">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="fd8c9-399">для полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-399">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fd8c9-400">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-400">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="fd8c9-401">для полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-401">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fd8c9-402">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-402">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member Import : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit&#xA;override this.Import : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="fd8c9-403">Имя файла сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-403">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="fd8c9-404">Пароль для доступа к данным сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-404">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="fd8c9-405">Поразрядное сочетание значений перечисления, определяющих, где и как следует импортировать сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-405">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-406">Заполняет объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> сведениями из файла сертификата, паролем и значением <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-406">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-407">Этот метод можно использовать заполнение <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> сведениями из файла сертификата, паролем и <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> значение.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-407">This method can be used populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with information from a certificate file, a password, and an <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd8c9-408">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-408">Never hard code a password within your source code.</span></span>  <span data-ttu-id="fd8c9-409">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), шестнадцатеричный редактор — или открыв сборки в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-409">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="fd8c9-410">для полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-410">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fd8c9-411">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-411">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="fd8c9-412">для полного доверия для разработчиков производных классов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-412">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="fd8c9-413">Этот член не может наследоваться кодом с частичным доверием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-413">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IssuerName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssuerName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ IssuerName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IssuerName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-414">Получает различающееся имя поставщика сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-414">Gets the distinguished name of the certificate issuer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd8c9-415">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" />, содержащий имя поставщика сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-415">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that contains the name of the certificate issuer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-416">Это свойство содержит имя сертификации (ЦС), выдавшего сертификат.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-416">This property contains the name of the certificate authority (CA) that issued the certificate.</span></span> <span data-ttu-id="fd8c9-417">Чтобы получить имя сертификата, используйте <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-417">To obtain the name of a certificate, use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> method.</span></span>  
  
 <span data-ttu-id="fd8c9-418">Различающееся имя для сертификата является текстовым представлением субъекта или издателя сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-418">The distinguished name for the certificate is a textual representation of the certificate subject or issuer.</span></span> <span data-ttu-id="fd8c9-419">Это представление состоит из атрибутов имени (например, «CN = MyName, OU = MyOrgUnit, C = US»).</span><span class="sxs-lookup"><span data-stu-id="fd8c9-419">This representation consists of name attributes (for example, "CN=MyName, OU=MyOrgUnit, C=US").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-420">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-420">The following code example creates a command-line executable file that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-421">Недопустимый контекст сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-421">The certificate context is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NotAfter">
      <MemberSignature Language="C#" Value="public DateTime NotAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotAfter" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotAfter { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotAfter : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-422">Получает дату в формате местного времени, после которой сертификат недействителен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-422">Gets the date in local time after which a certificate is no longer valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd8c9-423">Объект <see cref="T:System.DateTime" />, представляющий дату окончания срока действия сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-423">A <see cref="T:System.DateTime" /> object that represents the expiration date for the certificate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-424">Это свойство указывает дату окончания срока действия, в которой сертификат становится недействительным.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-424">This property indicates an expiration date on which the certificate becomes invalid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-425">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-425">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-426">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-426">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NotBefore">
      <MemberSignature Language="C#" Value="public DateTime NotBefore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotBefore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotBefore { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotBefore : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-427">Получает дату в формате местного времени, после которой сертификат становится действительным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-427">Gets the date in local time on which a certificate becomes valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd8c9-428">Объект <see cref="T:System.DateTime" />, представляющий дату вступления в силу сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-428">A <see cref="T:System.DateTime" /> object that represents the effective date of the certificate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-429">Это свойство указывает дату, на которой сертификат становится действительным.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-429">This property indicates the date on which the certificate becomes valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-430">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-430">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-431">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-431">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PrivateKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm PrivateKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm PrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ PrivateKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateKey : System.Security.Cryptography.AsymmetricAlgorithm with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-432">Получает или задает объект <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, который представляет закрытый ключ, связанный с сертификатом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-432">Gets or sets the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that represents the private key associated with a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd8c9-433">Объект <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, являющийся поставщиком служб шифрования RSA или DSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-433">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object, which is either an RSA or DSA cryptographic service provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-434">В настоящее время это свойство поддерживает только RSA или DSA ключей, чтобы он возвращал либо <xref:System.Security.Cryptography.RSACryptoServiceProvider> или <xref:System.Security.Cryptography.DSACryptoServiceProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-434">Currently this property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object.</span></span> <span data-ttu-id="fd8c9-435">Если закрытый ключ не связано с сертификатом, он возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-435">If no private key is associated with the certificate, it returns `null`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="fd8c9-436">Если задано это свойство `null` или на другой ключ, не удаляя его, файл закрытого ключа, остается на диске.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-436">If you set this property to `null` or to another key without first deleting it, a private key file is left on the disk.</span></span>  
  
 <span data-ttu-id="fd8c9-437">Чтобы правильно удалить закрытый ключ, связанный с этим свойством, задайте `PersistKeyInCsp` для `false`, а затем вызвать <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-437">To properly delete the private key associated with this property, set `PersistKeyInCsp` to `false`, and then call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-438">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-438">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="fd8c9-439">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-439">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-440">Значение ключа не является значением RSA или DSA, или ключ не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-440">The key value is not an RSA or DSA key, or the key is unreadable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd8c9-441">Для этого свойства устанавливается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-441">The value being set for this property is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fd8c9-442">Алгоритм ключа для этого закрытого ключа не поддерживается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-442">The key algorithm for this private key is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">
          <span data-ttu-id="fd8c9-443">Ключи X.509 не совпадают.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-443">The X.509 keys do not match.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fd8c9-444">Значение ключа поставщика служб шифрования равно <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-444">The cryptographic service provider key is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.PublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.PublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicKey As PublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::PublicKey ^ PublicKey { System::Security::Cryptography::X509Certificates::PublicKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Cryptography.X509Certificates.PublicKey" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.PublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-445">Получает объект <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />, связанный с сертификатом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-445">Gets a <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object associated with a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd8c9-446">Объект <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-446">A <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-447">Это свойство возвращает <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> объект, содержащий идентификатор объекта (<xref:System.Security.Cryptography.Oid>) представляющий алгоритм открытого ключа, параметры кодировке ASN.1 и значение ключа кодировке ASN.1.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-447">This property returns a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> object, which contains the object identifier (<xref:System.Security.Cryptography.Oid>) representing the public key algorithm, the ASN.1-encoded parameters, and the ASN.1-encoded key value.</span></span>  
  
 <span data-ttu-id="fd8c9-448">Вы также можете получить ключ как <xref:System.Security.Cryptography.AsymmetricAlgorithm> объекта, ссылаясь на <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-448">You can also obtain the key as an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object by referencing the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> property.</span></span> <span data-ttu-id="fd8c9-449">Это свойство поддерживает только RSA или DSA ключей, чтобы он возвращал либо <xref:System.Security.Cryptography.RSACryptoServiceProvider> или <xref:System.Security.Cryptography.DSACryptoServiceProvider> , представляющий открытый ключ.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-449">This property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object that represents the public key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-450">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-450">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-451">Значение ключа не является значением RSA или DSA, или ключ не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-451">The key value is not an RSA or DSA key, or the key is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RawData">
      <MemberSignature Language="C#" Value="public byte[] RawData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] RawData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ RawData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawData : byte[]" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-452">Получает необработанные данные сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-452">Gets the raw data of a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd8c9-453">Необработанные данные сертификата в качестве массива байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-453">The raw data of the certificate as a byte array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fd8c9-454">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-454">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="x509Certificate2.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-455">Сбрасывает состояние объекта <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-455">Resets the state of an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-456">Этот метод может использоваться для сброса состояния сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-456">This method can be used to reset the state of the certificate.</span></span> <span data-ttu-id="fd8c9-457">Она также освобождает все ресурсы, связанные с сертификатом.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-457">It also frees any resources associated with the certificate.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="fd8c9-458">для полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-458">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fd8c9-459">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-459">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="fd8c9-460">для полного доверия для разработчиков производных классов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-460">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="fd8c9-461">Этот член не может наследоваться кодом с частичным доверием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-461">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SerialNumber">
      <MemberSignature Language="C#" Value="public string SerialNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerialNumber" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerialNumber { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialNumber : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-462">Получает серийный номер сертификата в виде шестнадцатеричной строки в обратном порядке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-462">Gets the serial number of a certificate as a big-endian hexadecimal string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd8c9-463">Серийный номер сертификата в виде шестнадцатеричной строки с обратным порядком байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-463">The serial number of the certificate as a big-endian hexadecimal string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-464">Серийный номер сертификата является частью исходного протокола X.509.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-464">The serial number of the certificate is part of the original X.509 protocol.</span></span> <span data-ttu-id="fd8c9-465">Серийный номер — уникальный номер, выданный поставщиком сертификата, который также называется центра сертификации (ЦС).</span><span class="sxs-lookup"><span data-stu-id="fd8c9-465">The serial number is a unique number issued by the certificate issuer, which is also called the Certificate Authority (CA).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-466">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-466">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ SignatureAlgorithm { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : System.Security.Cryptography.Oid" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-467">Получает алгоритм, используемый для создания подписи сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-467">Gets the algorithm used to create the signature of a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd8c9-468">Возвращает идентификатор объекта (<see cref="T:System.Security.Cryptography.Oid" />) алгоритма подписи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-468">Returns the object identifier (<see cref="T:System.Security.Cryptography.Oid" />) of the signature algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-469">Идентификатор объекта (<xref:System.Security.Cryptography.Oid>) определяет тип алгоритма подписи, используемый в сертификате.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-469">The object identifier (<xref:System.Security.Cryptography.Oid>) identifies the type of signature algorithm used by the certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-470">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-470">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="fd8c9-471">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-471">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-472">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-472">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SubjectName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubjectName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ SubjectName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubjectName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-473">Получает различающееся имя субъекта от сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-473">Gets the subject distinguished name from a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd8c9-474">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" />, представляющий имя субъекта сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-474">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that represents the name of the certificate subject.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-475">Различающееся имя субъекта — это имя пользователя сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-475">The subject distinguished name is the name of the user of the certificate.</span></span> <span data-ttu-id="fd8c9-476">Различающееся имя для сертификата является текстовым представлением субъекта или поставщика сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-476">The distinguished name for the certificate is a textual representation of the subject or issuer of the certificate.</span></span> <span data-ttu-id="fd8c9-477">Это представление состоит из атрибуты имени, например, «CN = MyName, OU = MyOrgUnit, C = US».</span><span class="sxs-lookup"><span data-stu-id="fd8c9-477">This representation consists of name attributes, for example, "CN=MyName, OU=MyOrgUnit, C=US".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-478">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-478">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-479">Недопустимый контекст сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-479">The certificate context is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Thumbprint">
      <MemberSignature Language="C#" Value="public string Thumbprint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Thumbprint" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thumbprint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Thumbprint { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Thumbprint : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-480">Получает отпечаток сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-480">Gets the thumbprint of a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd8c9-481">Отпечаток сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-481">The thumbprint of the certificate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-482">Отпечаток динамически создается с помощью алгоритма SHA1 и физически не существует в сертификате.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-482">The thumbprint is dynamically generated using the SHA1 algorithm and does not physically exist in the certificate.</span></span> <span data-ttu-id="fd8c9-483">Так как отпечаток — это уникальное значение для сертификата, он обычно используется для поиска определенного сертификата в хранилище сертификатов.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-483">Since the thumbprint is a unique value for the certificate, it is commonly used to find a particular certificate in a certificate store.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-484">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-484">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-485">Отображает сертификат X.509 в текстовом формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-485">Displays an X.509 certificate in text format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="x509Certificate2.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-486">Отображает сертификат X.509 в текстовом формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-486">Displays an X.509 certificate in text format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd8c9-487">Сведения о сертификате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-487">The certificate information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-488">Как и во всех `ToString` методов, выходные данные могут быть несогласованными всех версий платформы .NET Framework, поэтому не следует проанализировать результаты метода для содержимого.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-488">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="fd8c9-489">Используйте свойства <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, чтобы получить точную информацию о содержимом или использовать <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> метод, чтобы получить сведения о сертификате.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-489">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information about the content or use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> method to obtain information about the certificate.</span></span>  
  
 <span data-ttu-id="fd8c9-490">Этот метод отображает сертификат в текстовом формате.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-490">This method displays the certificate in text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-491">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-491">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString (bool verbose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString(bool verbose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString (verbose As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString(bool verbose);" />
      <MemberSignature Language="F#" Value="abstract member ToString : bool -&gt; string&#xA;override this.ToString : bool -&gt; string" Usage="x509Certificate2.ToString verbose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verbose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verbose">
          <span data-ttu-id="fd8c9-492">Значение <see langword="true" /> для отображения открытого ключа, закрытого ключа, расширений и т. д.; значение <see langword="false" /> для отображения сведений, аналогичных классу <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, в том числе отпечаток, серийный номер, имена субъекта и поставщика и т. д.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-492">
              <see langword="true" /> to display the public key, private key, extensions, and so forth; <see langword="false" /> to display information that is similar to the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class, including thumbprint, serial number, subject and issuer names, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd8c9-493">Отображает сертификат X.509 в текстовом формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-493">Displays an X.509 certificate in text format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd8c9-494">Сведения о сертификате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-494">The certificate information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-495">Как и во всех `ToString` методов, выходные данные могут быть несогласованными всех версий платформы .NET Framework, поэтому не следует проанализировать результаты метода для содержимого.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-495">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="fd8c9-496">Используйте свойства <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> объекта, чтобы получить точную информацию.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-496">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information.</span></span>  
  
 <span data-ttu-id="fd8c9-497">Этот метод отображает сертификат в текстовом формате.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-497">This method displays the certificate in text format.</span></span> <span data-ttu-id="fd8c9-498">Если `verbose` параметр имеет значение `true`, текстовое отображение включает открытый ключ, закрытый ключ и расширения.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-498">If the `verbose` parameter is set to `true`, the text display includes the public key, private key, and extensions.</span></span> <span data-ttu-id="fd8c9-499">Если `verbose` присваивается `false`, текстовое отображение включает поля, доступные в сертификате X.509, в том числе отпечаток, серийный номер, имена субъекта и поставщика и сведения о дате на допустимость.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-499">If `verbose` is set to `false`, the text display includes those fields available from the X.509 certificate, including thumbprint, serial number, subject and issuer names, and validity date information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-500">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-500">The following code example creates a command line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public bool Verify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Verify() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Verify" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Verify();" />
      <MemberSignature Language="F#" Value="member this.Verify : unit -&gt; bool" Usage="x509Certificate2.Verify " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("by default this depends on the incomplete X509Chain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-501">Выполняет проверку цепочки X.509 с использованием базовой политики проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-501">Performs a X.509 chain validation using basic validation policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd8c9-502">Значение <see langword="true" />, если проверка прошла успешно; значение <see langword="false" />, если произошел сбой проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-502">
              <see langword="true" /> if the validation succeeds; <see langword="false" /> if the validation fails.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-503">Этот метод создает простую цепочку для сертификата и применяет базовую политику для этой цепочки.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-503">This method builds a simple chain for the certificate and applies the base policy to that chain.</span></span> <span data-ttu-id="fd8c9-504">Если требуются дополнительные сведения о сбое, проверить сертификат напрямую с помощью <xref:System.Security.Cryptography.X509Certificates.X509Chain> объекта.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-504">If you need more information about a failure, validate the certificate directly using the <xref:System.Security.Cryptography.X509Certificates.X509Chain> object.</span></span>  
  
 <span data-ttu-id="fd8c9-505">Обратите внимание, что цепочки ядра по умолчанию можно переопределить с помощью <xref:System.Security.Cryptography.CryptoConfig> класса.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-505">Note that the default chaining engine can be overridden using the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span> <span data-ttu-id="fd8c9-506">В Microsoft Windows Server 2003, система по умолчанию соответствует спецификации, описанные в RFC3280, "[сертификата и профиля список ОТЗЫВА сертификатов отзыва](http://go.microsoft.com/fwlink/?LinkId=45286).»</span><span class="sxs-lookup"><span data-stu-id="fd8c9-506">On Microsoft Windows Server 2003, the default engine conforms to the specification described in RFC3280, "[Certificate and Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-507">В следующем примере кода открывает хранилище сертификатов текущего пользователя, выбираются активные сертификаты, а затем позволяет пользователю выбрать один или несколько сертификатов.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-507">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="fd8c9-508">Затем пример выводит сведения о сертификате в консоль.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-508">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-509">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-509">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd8c9-510">Получает версию формата сертификата X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-510">Gets the X.509 format version of a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd8c9-511">Формат сертификата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-511">The certificate format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8c9-512">Существует несколько версий сертификатов X.509.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-512">There are several versions of X.509 certificates.</span></span> <span data-ttu-id="fd8c9-513">Это свойство определяет формат использует сертификат.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-513">This property identifies which format the certificate uses.</span></span> <span data-ttu-id="fd8c9-514">Например «3» возвращается для сертификата версии 3.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-514">For example, "3" is returned for a version 3 certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd8c9-515">В следующем примере кода создается исполняемый файл командной строки, которая принимает в качестве аргумента файл сертификата и выводит в консоль различных свойств сертификата.</span><span class="sxs-lookup"><span data-stu-id="fd8c9-515">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="fd8c9-516">Сертификат не читается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd8c9-516">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>