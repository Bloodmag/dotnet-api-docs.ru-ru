<Type Name="Reference" FullName="System.Security.Cryptography.Xml.Reference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b906510510910edb0a742484503ec8db706d3bbb" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33681437" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Reference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Reference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.Reference" />
  <TypeSignature Language="VB.NET" Value="Public Class Reference" />
  <TypeSignature Language="C++ CLI" Value="public ref class Reference" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет элемент <see langword="&lt;reference&gt;" /> подписи XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.Reference> Представляет <`reference`> элементом цифровой подписи XML, определенных в спецификации цифровой подписи XML.  
  
 Используйте <xref:System.Security.Cryptography.Xml.Reference> объекта, чтобы указать следующие сведения:  
  
-   Алгоритм дайджеста, используемый для подписания объекта данных.  Это значение является обязательным.  
  
-   Универсального ресурса (URI) для объекта данных для входа. URI можно указать путь к файлу или определенные элементы XML-документа.  Это значение является обязательным.  
  
-   Цепочка преобразований, применяемых до вычисления хэша. Это значение является необязательным.  
  
-   Тип объекта для подписывания.  Это значение является необязательным.  
  
-   Уникальный идентификатор, используемый для ссылки на текущий `<reference>` элемента.  Это значение является необязательным.  
  
 Дополнительные сведения о <`reference`> элемент в спецификации W3C см.: www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 В следующем примере кода показано, как создавать и проверять запечатанная XML-подписи с помощью <xref:System.Security.Cryptography.Xml.Reference> объекта.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Reference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Reference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.Reference" /> стандартными свойствами.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как создавать и проверять запечатанная XML-подписи с помощью <xref:System.Security.Cryptography.Xml.Reference> объекта.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 В следующем примере кода показано, как создавать и проверять отсоединенная подпись XML с помощью <xref:System.Security.Cryptography.Xml.Reference> объекта.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Reference (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Reference(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Объект <see cref="T:System.IO.Stream" />, которым инициализируется новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.Reference" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.Reference" /> хэш-значением указанного объекта <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует <xref:System.Security.Cryptography.Xml.Reference> объекта хэш-значением, которое соответствует `stream` параметра.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Reference (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Reference(System::String ^ uri);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Объект <see cref="T:System.Uri" />, которым инициализируется новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.Reference" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.Reference" /> указанным значением <see cref="T:System.Uri" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует <xref:System.Security.Cryptography.Xml.Reference> объекта к данным на URI со специальной обработкой `""`, `#xpointer(/)`, и `#xxxx`.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Security.Cryptography.Xml.Reference> класса для подписания и проверки XML-документа с помощью подписи конверта.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTransform">
      <MemberSignature Language="C#" Value="public void AddTransform (System.Security.Cryptography.Xml.Transform transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTransform(class System.Security.Cryptography.Xml.Transform transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddTransform(System::Security::Cryptography::Xml::Transform ^ transform);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="System.Security.Cryptography.Xml.Transform" />
      </Parameters>
      <Docs>
        <param name="transform">Преобразование, добавляемое в список преобразований.</param>
        <summary>Добавляет объект <see cref="T:System.Security.Cryptography.Xml.Transform" /> в список преобразований, применяемых к данным перед их передачей в алгоритм дайджеста.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.Reference.AddTransform%2A> Изменяет метод `<Transform>` элемента и связанные подэлементов цифровой подписи XML.  
  
 Преобразования применяются в том порядке, в котором они были добавлены. Если преобразования не указаны, минимально необходимые преобразования, добавляются автоматически.  
  
 Дополнительные сведения о цифровых подписях XML см. в спецификации W3C: www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 В следующем примере кода показано, как создавать и проверять запечатанная XML-подписи с помощью <xref:System.Security.Cryptography.Xml.Reference> объекта.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 В следующем примере кода показано, как создавать и проверять отсоединенная подпись XML с помощью <xref:System.Security.Cryptography.Xml.Reference> объекта.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="transform" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DigestMethod">
      <MemberSignature Language="C#" Value="public string DigestMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DigestMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.DigestMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DigestMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DigestMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URI метода дайджеста текущего объекта <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
        <value>URI метода дайджеста текущего объекта <see cref="T:System.Security.Cryptography.Xml.Reference" />. Значение по умолчанию — http://www.w3.org/2000/09/xmldsig#sha1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> Свойство использует строку URI для представления <`DigestMethod`> элемент цифровой подписи XML.  
  
 Метод дайджеста — это алгоритм, используемый для хэширования <xref:System.Security.Cryptography.Xml.Reference>. Алгоритм по умолчанию — <xref:System.Security.Cryptography.SHA1>.  
  
 Дополнительные сведения о цифровых подписях XML см. в спецификации W3C: www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DigestValue">
      <MemberSignature Language="C#" Value="public byte[] DigestValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DigestValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.DigestValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DigestValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DigestValue { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение дайджеста текущего объекта <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
        <value>Значение дайджеста текущего объекта <see cref="T:System.Security.Cryptography.Xml.Reference" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A> Свойство использует массив байтов для представления <`DigestValue`> элемент цифровой подписи XML.  
  
 <xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A> Свойство содержит значение хэш-код объекта, описанного в кодировке Base 64 <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> свойство.  
  
 <xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A> Свойство заполняется автоматически с соответствующим значением при внесении вызов <xref:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature%2A>.  
  
 Дополнительные сведения о цифровых подписях XML см. в спецификации W3C: www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает XML-представление объекта <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
        <returns>XML-представление объекта <see cref="T:System.Security.Cryptography.Xml.Reference" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Значение свойства <see cref="P:System.Security.Cryptography.Xml.Reference.DigestMethod" /> — <see langword="null" />.  
  
 - или -  
  
 Значение свойства <see cref="P:System.Security.Cryptography.Xml.Reference.DigestValue" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает идентификатор текущего объекта <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
        <value>Идентификатор текущего объекта <see cref="T:System.Security.Cryptography.Xml.Reference" />. Значение по умолчанию: <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Security.Cryptography.Xml.Reference.Id%2A> свойство, чтобы добавить идентификатор строки в XML-представление текущего <xref:System.Security.Cryptography.Xml.Reference> элемента. Идентификатор используется для ссылки <xref:System.Security.Cryptography.Xml.Reference> элемента из другого расположения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">XML-элемент, из которого загружается состояние <see cref="T:System.Security.Cryptography.Xml.Reference" />.</param>
        <summary>Загружает состояние <see cref="T:System.Security.Cryptography.Xml.Reference" /> из элемента XML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Параметр <paramref name="value" /> не содержит преобразований.  
  
 - или -  
  
 Параметр <paramref name="value" /> содержит неизвестное преобразование.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransformChain">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.TransformChain TransformChain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.TransformChain TransformChain" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.TransformChain" />
      <MemberSignature Language="VB.NET" Value="Public Property TransformChain As TransformChain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::TransformChain ^ TransformChain { System::Security::Cryptography::Xml::TransformChain ^ get(); void set(System::Security::Cryptography::Xml::TransformChain ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.TransformChain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает цепочку преобразований текущего элемента <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
        <value>Цепочка преобразований текущего элемента <see cref="T:System.Security.Cryptography.Xml.Reference" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.Reference.TransformChain%2A> Представляет свойство <`Transform`> элемента и связанные подэлементов цифровой подписи XML.  
  
 Цепочка преобразований — это упорядоченный список преобразований. Выходные данные этих преобразований составляет входных данных для хэш-алгоритма, указанного в <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> свойство.  
  
 Дополнительные сведения о цифровых подписях XML см. в спецификации W3C: www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип подписываемого объекта.</summary>
        <value>Тип подписываемого объекта.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.Uri" /> текущего объекта <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
        <value>
          <see cref="T:System.Uri" /> текущего объекта <see cref="T:System.Security.Cryptography.Xml.Reference" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> Свойство использует строку универсальный код ресурса (URI) для представления <`URI`> элемент цифровой подписи XML.  
  
 Используйте <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> свойство, чтобы указать расположение документа для подписывания и для перечисления элементов текущего документа XML для входа или указать, что должна быть подписана весь документ.  
  
 Для успешного создания цифровой подписи XML, необходимо задать <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> свойства. В следующей таблице описаны значения, которые можно передать <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> свойство.  
  
|Объект для входа|Значение, передаваемое <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> свойство|  
|--------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|Всего XML-документа с помощью запечатанной подписи.|Пустая строка: «»|  
|Определенного элемента в XML-документа с помощью запечатанной подписи.|Имя элемента XML, определяемый по идентификатору имя атрибута. Строка займет следующий вид где `IDname` имя допустимого идентификатора имени атрибута:<br /><br /> «#Idname»|  
|Файл, используя отсоединенную подпись.|URI файла: «c:\data.jpg» или «c:\data.xml».|  
  
 Дополнительные сведения о цифровых подписях XML см. в разделе консорциума World Wide Web (W3C) [подписи XML-синтаксис и обработка спецификация](https://www.w3.org/TR/xmldsig-core/).  
  
   
  
## Examples  
 В следующем примере кода показано, как создавать и проверять запечатанная XML-подписи с помощью <xref:System.Security.Cryptography.Xml.Reference> объекта.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>