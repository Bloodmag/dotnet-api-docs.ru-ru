<Type Name="SignedXml" FullName="System.Security.Cryptography.Xml.SignedXml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f8ac401693b149ab07e9bb6addec91b3ccb14b1" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33683219" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SignedXml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SignedXml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.SignedXml" />
  <TypeSignature Language="VB.NET" Value="Public Class SignedXml" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignedXml" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет оболочку основного объекта подписи XML для упрощения создания подписей XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml> Класс — это реализация .NET Framework консорциума World Wide Web (W3C) [XML Signature Syntax и спецификацией обработки](https://www.w3.org/TR/xmldsig-core/), также называемой XMLDSIG (цифровой подписи XML).  XMLDSIG представляет основанную на стандартах и поддерживающий взаимодействие способ подписания и проверки всей или части XML-документа или других данных, адресуемых из универсальный код ресурса (URI).  
  
 Используйте <xref:System.Security.Cryptography.Xml.SignedXml> класс всякий раз, когда необходимо обеспечить обмен подписи XML-данных между приложениями и организациями стандартным способом.  Все данные, подписанные с помощью этого класса могут быть проверены любой согласующейся реализацией спецификации консорциума W3C XMLDSIG.  
  
 <xref:System.Security.Cryptography.Xml.SignedXml> Позволяет создать три следующие виды цифровых подписей XML:  
  
|Тип подписи|Описание:|  
|--------------------|-----------------|  
|Запечатанной подписи|Подпись содержится внутри подписываемого XML-элемента.|  
|Запечатывание сигнатуры|Подписанный XML внутри <`Signature`> элемент.|  
|Внутренняя отсоединенной подписи|Подпись и подписанный XML находятся в одном документе, но ни один из элементов содержит другой.|  
  
 Имеется также четвертый тип подписи вызывается внешних отсоединенной подписи, то есть данные и подпись находятся в отдельном XML-документов. Внешние отсоединенной подписи не поддерживаются <xref:System.Security.Cryptography.Xml.SignedXml> класса.  
  
## <a name="the-structure-of-an--xml-signature"></a>Структура XML-подписи  
 Создает XMLDSIG <`Signature`> элемент, который содержит цифровую подпись XML-документа или других данных, адресуемых по URI.  <`Signature`> Элемент может содержать сведения о том, где найти ключ, который выполнит проверку подписи и алгоритме шифрования, который использовался для подписи. Базовая структура выглядит следующим образом:  
  
```xml  
  
<Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">  
    <SignedInfo>  
      <CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>  
      <SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>  
      <Reference URI="">  
        <Transforms>  
          <Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>  
        </Transforms>  
        <DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>  
        <DigestValue>Base64EncodedValue==</DigestValue>  
      </Reference>  
    </SignedInfo>  
    <SignatureValue>AnotherBase64EncodedValue===</SignatureValue>  
  </Signature>  
  
```  
  
 Ниже приведены основные части этой структуры.  
  
 <`CanonicalizationMethod`> Элемент  
 Указывает правила для перезаписи `Signature` элемента из XML-текста в байтах для проверки подписи. Значение по умолчанию в платформе .NET Framework — http://www.w3.org/TR/2001/REC-xml-c14n-20010315, который идентифицирует trustworthy алгоритма. Этот элемент представляется <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=nameWithType> свойство.  
  
 <`SignatureMethod`> Элемент  
 Задает алгоритм, используемый для создания подписи и проверки, что была применена к <`Signature`> элемент для получения значения в <`SignatureValue`>. В примере выше значение http://www.w3.org/2000/09/xmldsig#rsa-sha1 идентифицирует сигнатура PKCS1 RSA, SHA-1. Этот элемент представляется <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> свойство.  
  
 <`SignatureValue`> Элемент  
 Указывает криптографической подписи для <`Signature`> элемент. Если эта подпись не проверяет, затем некоторую часть <`Signature`> подделан блоков и документ считается недействительным. При условии, что <`CanonicalizationMethod`> trustworthy значение, это значение равно высокой защищены от изменения. Этот элемент представляется <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> свойство.  
  
 `URI` Атрибут <`Reference`> элемент  
 Указывает объект данных с помощью URI-ссылка. Этот атрибут представлен <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType> свойство.  
  
-   Не указано `URI` атрибута, то есть параметр <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType> свойства `null`, означает, что должно быть известно удостоверение объекта будет ожидать принимающим приложением. В большинстве случаев `null` URI приведет к созданию исключения. Не используйте `null` URI, если не взаимодействует с протокола, который требуется для вашего приложения.  
  
-   Параметр `URI` атрибут пустая строка указывает, что корневой элемент документа будет подписан, один из видов запечатанной подписи.  
  
-   Если значение `URI` атрибута начинается со знака #, то значение должен определять элемент в текущем документе. Эта форма может использоваться с любым из типов поддерживаемых подписи (запечатанной подписи, запечатывание сигнатуры или внутренней отсоединенной подписи).  
  
-   Нибудь считается подписи на внешний ресурс отсоединить и не поддерживается <xref:System.Security.Cryptography.Xml.SignedXml> класса.  
  
 <`Transforms`> Элемент  
 Содержит упорядоченный список <`Transform`> элементов, описывающих, как подписавшего получить объект данных, был сделан дайджест. Алгоритм преобразования аналогичный метод канонизации, но вместо перезаписи <`Signature`> элемент, она перезаписывает содержимое, идентифицируемое `URI` атрибут <`Reference`> элемент. <`Transforms`> Представлен <xref:System.Security.Cryptography.Xml.TransformChain> класса.  
  
-   Каждый алгоритм преобразования определена как принимающая XML (XPath набор узлов) или байт в качестве входных данных. Если формат текущих данных отличается от требований к входным данным преобразования, применяются правила преобразования.  
  
-   Каждый алгоритм преобразования определяется как формирующего как выходные данные XML или байт.  
  
-   Если выходные данные последней алгоритм преобразования не определен в байтах (или указано без преобразования), затем метод канонизации http://www.w3.org/TR/2001/REC-xml-c14n-20010315 используется в качестве неявного преобразования (даже если был указан другой алгоритм в <`CanonicalizationMethod`> элемент).  
  
-   Значение http://www.w3.org/2000/09/xmldsig#enveloped-signature для преобразования алгоритм кодирует правило, которое интерпретируется как remove <`Signature`> элемент из документа. В противном случае будет дайджест-проверки запечатанной подписи документа, включая подпись, но подписавший будет систематизировать документа до применения подпись, ведущие к другие ответы.  
  
 <`DigestMethod`> Элемент  
 Определяет метод хэш-кода (криптографический хэш) для применения на преобразованное содержимое, обозначенную `URI` атрибут <`Reference`> элемент. Представляет <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=nameWithType> свойство.  
  
## <a name="choosing-a-canonicalization-method"></a>Выбрав метод канонизации  
 Если взаимодействие со спецификацией, который требуется использовать другое значение, рекомендуется использовать метод канонизации по умолчанию в платформе .NET Framework, который представляет алгоритм XML C14N 1.0, значение которого является http://www.w3.org/TR/2001/REC-xml-c14n-20010315. Алгоритм XML C14N 1.0 требуется для поддержки всех реализаций XMLDSIG, особенно в том случае, поскольку это конечное неявное преобразование для применения.  
  
 Существуют версии канонизации алгоритмов, которые поддерживают сохранения комментариев. Сохранение комментарий следующие методы не рекомендуется, поскольку они нарушает принцип «подпись, что видно». То есть, комментарии в <`Signature`> элемент не может изменить логика обработки, как выполняется подпись, является просто подпись значения. В сочетании с алгоритмом нестойкие подписи, позволяя комментарии необходимо включить дает злоумышленнику ненужные свободу принудительно хэш-конфликт внесение поддельных выглядел законным документа.  В платформе .NET Framework по умолчанию поддерживаются только встроенная canonicalizers. Для поддержки дополнительных или настраиваемых canonicalizers, см. <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> свойство. Если в документе используется метод канонизации, которая не находится в коллекции, представленной <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> свойства, а затем <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> метод будет возвращать `false`.  
  
> [!NOTE]
>  Очень защитного приложения можно удалить все значения, не ожидает авторов из <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> коллекции.  
  
## <a name="are-the-reference-values-safe-from-tampering"></a>Значения ссылок, ограждены от подделки?  
 Да, <`Reference`> значения, ограждены от подделки.  .NET framework проверяет <`SignatureValue`> вычисление перед обработкой, <`Reference`> значения и связанные с ними преобразует и прервет раньше во избежание инструкции по обработке потенциально вредоносных.  
  
## <a name="choosing-the-elements-to-sign"></a>Выбор элементов для входа  
 Рекомендуется использовать значение «» для `URI` атрибута (или задать <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> свойства пустую строку), если это возможно. Это означает, что весь документ считается для вычисления хэш-кода, это означает, что весь документ защищено от вмешательства.  
  
 Очень часто, чтобы увидеть `URI` значения в виде привязок, таких как #foo, ссылается на элемент, атрибут ID которого равно «foo». К сожалению это может быть изменена злоумышленником, так как в нем только содержимое целевого элемента, а не контекст легко. Это различие на отправку известен как обтекания XML подписи (XSW).  
  
 Если приложение считает, что комментарии, чтобы быть семантической (которого имеет правило, не когда дело с XML), то следует использовать «#xpointer(/)» вместо «» и «#xpointer(id('foo'))» вместо «#foo». Версии #xpointer интерпретируются как включая комментарии во время forms короткого имени за исключением комментариев.  
  
 Если нужно принимать документы, которые защищены только частично, и вы хотите убедиться, что вы читаете это же содержимое, защищенное подпись, используйте <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A> метод.  
  
## <a name="security-considerations-about-the-keyinfo-element"></a>Вопросы безопасности о элемент KeyInfo  
 Данные в необязательном <`KeyInfo`> элемент (т. е <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> свойства), который содержит ключ для проверки подписи, не следует доверять.  
  
 В частности, если <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> представляет bare RSA, DSA и ECDSA открытый ключ, документ может подделки, несмотря на <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> метод сообщение о том, что подпись действительна.  Это может произойти потому, что сущности, это просто подмены должен создать новый ключ и повторно подписать документ изменен с помощью этого нового ключа. Таким образом Если приложение проверяет, является ли открытый ключ с ожидаемым значением, документ следует так, как если бы они были прочитаны. Для этого необходимо, проверьте открытый ключ, вложенные в документ и проверить его со списком известных значений для документа контекста приложения. Например если документ может быть понят выпускаемого известных пользователем бы Проверьте раздел со списком известных ключей, используемых данным пользователем.  
  
 Можно также проверить ключ после обработки документа с помощью <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> метод вместо <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> метод. Но для оптимальной безопасности следует проверить ключ заранее.  
  
 Кроме того, рассмотрите возможность попытки пользователя зарегистрированные открытые ключи, а не считывают возможности <`KeyInfo`> элемент.  
  
## <a name="security-considerations-about-the-x509data-element"></a>Вопросы безопасности об элементе X509Data  
 Необязательный <`X509Data`> элемент является дочерним элементом <`KeyInfo`> элемент и содержит один или несколько X509 сертификаты или идентификаторы для X509 сертификаты. Данные в <`X509Data`> элемент также не должен приниматься по своей природе.  
  
 При проверке документа с встроенный <`X509Data`> элемент, .NET Framework проверяет только данные — это обновление устраняет X509 сертификата, открытый ключ можно успешно использовать для проверки подписи документа. В отличие от вызова <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> метод с `verifySignatureOnly` равным `false`, выполняется проверка отзыва, проверяется не цепь доверия и без ограничения срока проверяется. Даже в том случае, если приложение извлекает самого сертификата и передает его <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> метод с `verifySignatureOnly` равным `false`, в котором по-прежнему недостаточно проверки, чтобы предотвратить незаконное изменение документа. Сертификат все еще необходимо проверить как соответствующий документ подписан.  
  
 Использование внедренных сертификат для подписи обеспечивает стратегии полезные смены ключей ли в <`X509Data`> разделе или в содержимом документа. При использовании такого подхода приложения следует вручную извлечь сертификат и выполняет проверку, аналогично:  
  
-   Сертификат был выдан непосредственно или с помощью цепочки по сертификации (ЦС), открытый сертификат, внедренных в приложение.  
  
     С помощью списка доверия, предоставленный для операционной системы без дополнительных проверок, такие как имя субъекта известных, не является достаточно предотвратить несанкционированный доступ в <xref:System.Security.Cryptography.Xml.SignedXml>.  
  
-   Сертификат проверяется не истек в момент подписания документа (или «сейчас» для рядом обработки документов в режиме реального времени).  
  
-   Долгоживущие сертификатов, выданных центром сертификации, который поддерживает отзыва убедитесь, что сертификат не был отозван.  
  
-   Субъект сертификата проверяется подходящим для текущего документа.  
  
## <a name="choosing-the-transform-algorithm"></a>Выбор алгоритма преобразования  
 При взаимодействии со спецификацией, который определенные значения (например, XrML), зависит, необходимо выполнить в спецификации.  При наличии запечатанная подпись (например, при подписи весь документ), то вы должны использовать http://www.w3.org/2000/09/xmldsig#enveloped-signature (представленного <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> класса). Можно указать также неявные преобразования XML C14N, но это необязательно.  Для подписи запечатанной или отсоединения никакие преобразования являются обязательными. Неявные преобразования XML C14N обеспечивает все данные.  
  
 В процессе обновления безопасности представленные [бюллетень корпорации Майкрософт по безопасности MS16-035](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx), .NET Framework имеет ограниченные преобразования, которое может быть использована для проверки документа по умолчанию с ненадежных преобразований, вызывая <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>всегда возвращает `false`. В частности преобразований, которые требуют дополнительных входных данных (заданных в качестве дочерних элементов в XML) не будут разрешены из-за их количество нарушений пользователей-злоумышленников. Консорциум W3C будет указано, как избежать преобразования XPath и XSLT, которые являются два основных преобразования влияют следующие ограничения.  
  
## <a name="the-problem-with-external-references"></a>Эту проблему с помощью внешних ссылок  
 Если приложение не проверяет, что внешние ссылки не подходят для текущего контекста, их можно использовать таким образом, чтобы предоставить для многих уязвимостей в безопасности (включая отказ в обслуживании, распределенных отражения отказ в обслуживании, сведения Раскрытие обхода проверки подписи и удаленное выполнение кода). Даже если приложение для проверки ссылки URI, останется проблемы ресурса, загружаемых в два раза: как только если приложение читает и один раз при <xref:System.Security.Cryptography.Xml.SignedXml> считывает его. Так как нет никакой гарантии, что чтения приложение и документ убедитесь, что действия имеют то же содержимое, подпись не обеспечивает надежность.  
  
 Учитывая угрозы внешних ссылок <xref:System.Security.Cryptography.Xml.SignedXml> вызовет исключение при обнаружении внешней ссылкой.  Дополнительные сведения об этой проблеме см. в разделе [статьи БАЗЫ знаний 3148821](https://support.microsoft.com/en-us/kb/3148821).  
  
   
  
## Examples  
 В следующем примере кода показано, как подписать и проверить весь XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить отдельный элемент XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как подписать и проверить весь XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить объект адресуемый универсальный код ресурса (URI), используя отсоединенную подпись.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить отдельный элемент XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml (System.Xml.XmlDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml(System::Xml::XmlDocument ^ document);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="document">Объект <see cref="T:System.Xml.XmlDocument" />, с помощью которого инициализируется новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> на основе заданного XML-документа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как подписать и проверить весь XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить объект адресуемый универсальный код ресурса (URI), используя отсоединенную подпись.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить отдельный элемент XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="document" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Параметр <paramref name="document" /> содержит свойство <see cref="P:System.Xml.XmlDocument.DocumentElement" /> со значением null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml (System.Xml.XmlElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elem As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml(System::Xml::XmlElement ^ elem);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elem" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="elem">Объект <see cref="T:System.Xml.XmlElement" />, с помощью которого инициализируется новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> на основании указанного объекта <see cref="T:System.Xml.XmlElement" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="elem" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddObject(class System.Security.Cryptography.Xml.DataObject dataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddObject(System::Security::Cryptography::Xml::DataObject ^ dataObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataObject" Type="System.Security.Cryptography.Xml.DataObject" />
      </Parameters>
      <Docs>
        <param name="dataObject">Объект <see cref="T:System.Security.Cryptography.Xml.DataObject" />, который добавляется к списку подписываемых объектов.</param>
        <summary>Добавляет объект <see cref="T:System.Security.Cryptography.Xml.DataObject" /> к списку подписываемых объектов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> Метод добавляет <`Object`> элемент, представляющий объект входить <`Signature`> элемент цифровой подписи XML.  
  
 <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> Автоматически вызывает метод <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> метод <xref:System.Security.Cryptography.Xml.Signature> инкапсулированный объект <xref:System.Security.Cryptography.Xml.SignedXml> объекта.  Можно также добавить <xref:System.Security.Cryptography.Xml.DataObject> объекта путем прямого вызова <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> метод <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> свойство.  
  
 Дополнительные сведения о цифровых подписях XML см. в спецификации XMLDSIG, найти по адресу www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 Следующий пример кода вычисляет и подписи XML.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/CPP/example.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/CS/example.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.Reference reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.Reference reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::Reference ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Security.Cryptography.Xml.Reference" />
      </Parameters>
      <Docs>
        <param name="reference">Объект <see cref="T:System.Security.Cryptography.Xml.Reference" />, который определяет метод хэширования, значение хэша и преобразование, с помощью которых создается цифровая подпись XML.</param>
        <summary>Добавляет объект <see cref="T:System.Security.Cryptography.Xml.Reference" /> к объекту <see cref="T:System.Security.Cryptography.Xml.SignedXml" />, который определяет метод хэширования, значение хэша и преобразование, с помощью которых создается цифровая подпись XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> Метод добавляет <`Reference`> элемент <xref:System.Security.Cryptography.Xml.SignedXml> , описывающий метод дайджеста, значение хэш-кода и преобразования, используемый для создания цифровой подписи XML.  <`Reference`> Элемент является подэлементом <`SignedInfo`> элемент.  
  
 <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> Автоматически вызывает метод <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> метод <xref:System.Security.Cryptography.Xml.SignedInfo> инкапсулированный объект <xref:System.Security.Cryptography.Xml.SignedXml> объекта.  Можно также добавить <xref:System.Security.Cryptography.Xml.Reference> объекта путем прямого вызова <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> метод <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> свойство.  
  
 Дополнительные сведения о цифровых подписях XML см. в спецификации XMLDSIG, найти по адресу www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 В следующем примере кода показано, как подписать и проверить весь XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить объект адресуемый универсальный код ресурса (URI), используя отсоединенную подпись.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить отдельный элемент XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, проверяется ли свойство <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Определяет, проверяется ли свойство <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> с помощью открытого ключа в подписи.</summary>
        <returns>
          Значение <see langword="true" />, если свойство <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> проверяется; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод также вычисляет дайджест ссылок и значение подписи.  
  
 Если документ XML был подписан подписью X.509 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> метод выполняет поиск в хранилище «Адресной книги» для сертификатов, пригодных для проверки. Например, если сертификат существует ссылка по теме ключ идентификатора (SKI) <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> метод выбирает сертификатов с помощью этого SKI и попробовать их один за другим, пока он может проверить подлинность сертификата.  
  
   
  
## Examples  
 В следующем примере кода показано, как подписать и проверить весь XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить объект адресуемый универсальный код ресурса (URI), используя отсоединенную подпись.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить отдельный элемент XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Свойство <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> открытого ключа в подписи не совпадает со свойством <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />.  
  
 - или -  
  
 Не удалось создать описание сигнатуры.  
  
 или  
  
 Не удалось создать хэш-алгоритм.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (key As AsymmetricAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key">Реализация свойства <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, которому принадлежит ключ, используемый для проверки свойства <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</param>
        <summary>Определяет, проверяется ли свойство <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> для указанного ключа.</summary>
        <returns>
          Значение <see langword="true" />, если свойство <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> проверяется для указанного ключа; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как подписать и проверить объект адресуемый универсальный код ресурса (URI), используя отсоединенную подпись.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить весь XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Свойство <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> параметра <paramref name="key" /> не совпадает со свойством <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />.  
  
 - или -  
  
 Не удалось создать описание сигнатуры.  
  
 или  
  
 Не удалось создать хэш-алгоритм.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.KeyedHashAlgorithm macAlg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (macAlg As KeyedHashAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::KeyedHashAlgorithm ^ macAlg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="macAlg" Type="System.Security.Cryptography.KeyedHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="macAlg">Реализация объекта <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" />, который содержит код проверки подлинности сообщения, используемый для проверки свойства <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</param>
        <summary>Определяет, проверяется ли свойство <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> для указанного алгоритма кода проверки подлинности сообщения.</summary>
        <returns>
          Значение <see langword="true" />, если свойство <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> проверяется для указанного кода проверки подлинности сообщения; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как подписать и проверить объект адресуемый универсальный код ресурса (URI), используя отсоединенную подпись.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CPP/xmldsigdetachedkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CS/xmldsigdetachedkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/VB/xmldsigdetachedkeyedhashalg.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить весь XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CPP/xmldsigenvkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CS/xmldsigenvkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/VB/xmldsigenvkeyedhashalg.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="macAlg" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Свойство <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> указанного объекта <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> недопустимо.  
  
 - или -  
  
 Значение свойства <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> — <see langword="null" />.  
  
 - или -  
  
 Не удалось создать криптографическое преобразование, используемое для проверки подписи.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (certificate As X509Certificate2, verifySignatureOnly As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, bool verifySignatureOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="certificate">Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, используемый для проверки свойства <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</param>
        <param name="verifySignatureOnly">
          Значение <see langword="true" />, чтобы проверять только подпись; значение <see langword="false" />, чтобы проверять подпись и сертификат.</param>
        <summary>Определяет, проверяется ли свойство <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> для указанного объекта <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> и действителен ли сертификат (необязательно).</summary>
        <returns>
          Значение <see langword="true" />, если подпись является допустимой; в противном случае — значение <see langword="false" />.  
  
 - или -  
  
 Значение <see langword="true" />, если подпись и сертификат действительны; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В .NET Framework версии 1.1 сертификат X.509 не проверяется.  В версии 2.0 и более поздних версий сертификат X.509 проверяется.  
  
 В версии 2.0 и более поздних версий платформы .NET Framework <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> метод выполняет поиск в хранилище «Адресной книги» для сертификатов, пригодных для проверки. Например, если сертификат существует ссылка по теме ключ идентификатора (SKI) <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> метод выбирает сертификатов с помощью этого SKI и попробовать их один за другим, пока он может проверить подлинность сертификата.  
  
   
  
## Examples  
 В следующем примере кода используется сертификат X.509 из хранилища сертификатов для подписания и проверки XML-документа.  
  
 [!code-csharp[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/samples/snippets/csharp/VS_Snippets_CLR/Security.Cryptography.Xml.SignedXml.CheckSignature/cs/sample.cs#1)]
 [!code-vb[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Security.Cryptography.Xml.SignedXml.CheckSignature/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="certificate" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Не удалось создать описание сигнатуры для параметра <paramref name="certificate" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignatureReturningKey">
      <MemberSignature Language="C#" Value="public bool CheckSignatureReturningKey (out System.Security.Cryptography.AsymmetricAlgorithm signingKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignatureReturningKey([out] class System.Security.Cryptography.AsymmetricAlgorithm&amp; signingKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignatureReturningKey (ByRef signingKey As AsymmetricAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignatureReturningKey([Runtime::InteropServices::Out] System::Security::Cryptography::AsymmetricAlgorithm ^ % signingKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signingKey" Type="System.Security.Cryptography.AsymmetricAlgorithm&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="signingKey">При завершении выполнения этого метода содержит реализацию объекта <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, содержащего открытый ключ в подписи. Этот параметр передается неинициализированным.</param>
        <summary>Определяет, проверяется ли свойство <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> с помощью открытого ключа в подписи.</summary>
        <returns>
          Значение <see langword="true" />, если свойство <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> проверяется с помощью открытого ключа в подписи; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как подписать и проверить объект адресуемый универсальный код ресурса (URI), используя отсоединенную подпись.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/VB/exampledetached.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить весь XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/VB/exampleenvelope.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="signingKey" /> имеет значение null.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Свойство <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> открытого ключа в подписи не совпадает со свойством <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />.  
  
 - или -  
  
 Не удалось создать описание сигнатуры.  
  
 или  
  
 Не удалось создать хэш-алгоритм.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Вычисляет цифровую подпись XML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вычисляет цифровую подпись XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> Метод создает цифровой подписи XML и многие из элементов XML, необходимых для конструкции.  
  
 Необходимо задать данные должны быть подписаны и <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> свойство перед вызовом этого метода.  
  
   
  
## Examples  
 В следующем примере кода показано, как подписать и проверить объект адресуемый универсальный код ресурса (URI), используя отсоединенную подпись.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить весь XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Значение свойства <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> — <see langword="null" />.  
  
 - или -  
  
 Свойство <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> не является объектом <see cref="T:System.Security.Cryptography.DSA" /> или объектом <see cref="T:System.Security.Cryptography.RSA" />.  
  
 - или -  
  
 Не удалось загрузить ключ.</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature(class System.Security.Cryptography.KeyedHashAlgorithm macAlg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature (macAlg As KeyedHashAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature(System::Security::Cryptography::KeyedHashAlgorithm ^ macAlg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="macAlg" Type="System.Security.Cryptography.KeyedHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="macAlg">Объект <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" />, в котором содержится код проверки подлинности сообщения, используемый для вычисления значения свойства <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</param>
        <summary>Вычисляет цифровую подпись XML с помощью указанного алгоритма кода проверки подлинности сообщения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> Метод создает цифровой подписи XML, используя указанный алгоритм MAC и многие из элементов XML, необходимых для конструкции.  
  
 Необходимо задать данные для подписи перед вызовом этого метода.  
  
   
  
## Examples  
 В следующем примере кода показано, как подписать и проверить объект адресуемый универсальный код ресурса (URI), используя отсоединенную подпись.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CPP/xmldsigdetachedkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CS/xmldsigdetachedkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/VB/xmldsigdetachedkeyedhashalg.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить весь XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CPP/xmldsigenvkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CS/xmldsigenvkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/VB/xmldsigenvkeyedhashalg.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="macAlg" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Объект <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" />, определенный параметром <paramref name="macAlg" /> не является экземпляром <see cref="T:System.Security.Cryptography.HMACSHA1" />.  
  
 - или -  
  
 Свойство <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> указанного объекта <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> недопустимо.  
  
 - или -  
  
 Не удалось создать криптографическое преобразование, используемое для проверки подписи.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptedXml">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptedXml EncryptedXml" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.EncryptedXml" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptedXml As EncryptedXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::EncryptedXml ^ EncryptedXml { System::Security::Cryptography::Xml::EncryptedXml ^ get(); void set(System::Security::Cryptography::Xml::EncryptedXml ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" />, который определяет правила обработки шифрования XML.</summary>
        <value>Объект <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" />, который определяет правила обработки шифрования XML.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetIdElement(class System.Xml.XmlDocument document, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdElement (document As XmlDocument, idValue As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetIdElement(System::Xml::XmlDocument ^ document, System::String ^ idValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="document">Объект <see cref="T:System.Xml.XmlDocument" />, из которого извлекается объект <see cref="T:System.Xml.XmlElement" />.</param>
        <param name="idValue">Идентификатор объекта <see cref="T:System.Xml.XmlElement" />, извлекаемого из объекта <see cref="T:System.Xml.XmlDocument" />.</param>
        <summary>Возвращает объект <see cref="T:System.Xml.XmlElement" /> с указанным идентификатором из указанного объекта <see cref="T:System.Xml.XmlDocument" />.</summary>
        <returns>Объект <see cref="T:System.Xml.XmlElement" /> с указанным идентификатором, извлеченный из указанного объекта <see cref="T:System.Xml.XmlDocument" />, или значение <see langword="null" />, если найти такой объект не удалось.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKey">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetPublicKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPublicKey () As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Cryptography::AsymmetricAlgorithm ^ GetPublicKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает открытый ключ подписи.</summary>
        <returns>Объект <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, содержащий открытый ключ подписи, или значение <see langword="null" />, если найти ключ не удалось.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.GetPublicKey%2A> Возвращает метод <xref:System.Security.Cryptography.AsymmetricAlgorithm> , содержащий открытый ключ, который может использоваться для проверки цифровой подписи XML.  
  
 Ключ должен быть либо <xref:System.Security.Cryptography.DSA> или <xref:System.Security.Cryptography.RSA> ключа.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Значение свойства <see cref="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает XML-представление объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <returns>XML-представление объекта <see cref="T:System.Security.Cryptography.Xml.Signature" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Значение свойства <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> — <see langword="null" />.  
  
 - или -  
  
 Значение свойства <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.KeyInfo KeyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfo As KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::KeyInfo ^ KeyInfo { System::Security::Cryptography::Xml::KeyInfo ^ get(); void set(System::Security::Cryptography::Xml::KeyInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.KeyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> текущего объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <value>Объект <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> текущего объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> Представляет свойство <`KeyInfo`> элемент цифровой подписи XML с помощью <xref:System.Security.Cryptography.Xml.KeyInfo> объект, содержащийся в свойстве.  <`KeyInfo`> Элемент является подэлементом <`Signature`> элемент.  
  
 Используйте <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> свойство для внедрения сведений о связанных с ключом помогут идентифицировать ключ, необходимый для проверки XML-документа.  
  
 Дополнительные сведения о `<KeyInfo>` элемента, см. в спецификации XMLDSIG, находящейся на www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Security.Cryptography.Xml.KeyInfo> объекта при подписании ресурс, представленный универсальный код ресурса (URI).  В этом примере подпись сохраняется в новом файле.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 Следующий пример кода использует <xref:System.Security.Cryptography.Xml.KeyInfo> объекта при подписи XML-документа.  В этом примере подпись сохраняется в новом файле.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">Элемент XML, из которого загружается состояние <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</param>
        <summary>Загружает состояние <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> из элемента XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Security.Cryptography.Xml.SignedXml.LoadXml%2A> метода для проверки XML-документа.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#3)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#3)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Параметр <paramref name="value" /> не содержит допустимое свойство <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" />.  
  
 - или -  
  
 Параметр <paramref name="value" /> не содержит допустимое свойство <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="m_signature">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.Xml.Signature m_signature;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.Xml.Signature m_signature" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.m_signature" />
      <MemberSignature Language="VB.NET" Value="Protected m_signature As Signature " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Security::Cryptography::Xml::Signature ^ m_signature;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.Signature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет объект <see cref="T:System.Security.Cryptography.Xml.Signature" /> текущего объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_strSigningKeyName">
      <MemberSignature Language="C#" Value="protected string m_strSigningKeyName;" />
      <MemberSignature Language="ILAsm" Value=".field family string m_strSigningKeyName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName" />
      <MemberSignature Language="VB.NET" Value="Protected m_strSigningKeyName As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ m_strSigningKeyName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет имя установленного ключа, который будет использоваться для подписывания объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает текущий объект <see cref="T:System.Xml.XmlResolver" />.</summary>
        <value>Текущий объект <see cref="T:System.Xml.XmlResolver" />. Объектом по умолчанию является объект <see cref="T:System.Xml.XmlSecureResolver" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlResolver> Класс разрешает внешние ресурсы XML, с именем универсальный код ресурса (URI). Если вы не доверяете источнику XML-файла, не может потребоваться разрешить доступ к ресурсам компьютера, названным URI XML-файла. Можно использовать <xref:System.Security.Cryptography.Xml.SignedXml.Resolver%2A> свойства для управления уровнем доступа, XML-файлов для ресурсов компьютера, указав другой <xref:System.Xml.XmlResolver> объектов. Если вы не хотите разрешить доступ, можно установить это свойство в `null` (`Nothing` в Visual Basic).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeCanonicalizationMethods">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; SafeCanonicalizationMethods { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; SafeCanonicalizationMethods" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeCanonicalizationMethods As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ SafeCanonicalizationMethods { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]  
  
 Возвращает имена методов, алгоритмы каноничности которых явно разрешены.</summary>
        <value>Коллекция имен методов, которые безопасно создают канонический XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Следующие методы синхронизации преобразовать XML-документ в его канонической форме. Дополнительные сведения о канонических XML см. в разделе [канонический XML](http://www.w3.org/TR/xml-c14n) на веб-сайте консорциума W3C.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Signature">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.Signature Signature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.Signature Signature" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.Signature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signature As Signature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::Signature ^ Signature { System::Security::Cryptography::Xml::Signature ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.Signature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Security.Cryptography.Xml.Signature" /> текущего объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <value>Объект <see cref="T:System.Security.Cryptography.Xml.Signature" /> текущего объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> Представляет свойство <`Signature`> элемент цифровой подписи XML с помощью <xref:System.Security.Cryptography.Xml.Signature> объект, содержащийся в свойстве.  <`Signature`> Элемент является корневым элементом, используемым для создания цифровой подписи XML и проверки.  
  
 Используйте <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> извлекаемого свойства <xref:System.Security.Cryptography.Xml.Signature> объект, используемый <xref:System.Security.Cryptography.Xml.SignedXml> объекта.  
  
 Дополнительные сведения о `<Signature>` элемента, см. в спецификации XMLDSIG, находящейся на www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> свойство для подписания и проверки всего XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 Следующий пример кода использует <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> свойство для подписания и проверки объекта адресуемый универсальный код ресурса (URI), с помощью отсоединенной подписи.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureFormatValidator">
      <MemberSignature Language="C#" Value="public Func&lt;System.Security.Cryptography.Xml.SignedXml,bool&gt; SignatureFormatValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Security.Cryptography.Xml.SignedXml, bool&gt; SignatureFormatValidator" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property SignatureFormatValidator As Func(Of SignedXml, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ SignatureFormatValidator { Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ get(); void set(Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Security.Cryptography.Xml.SignedXml,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает делегат, который будет вызван для проверки формата (но не криптографической безопасности) XML-сигнатуры.</summary>
        <value>
          Значение <see langword="true" />, формат приемлем; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может использоваться, чтобы убедиться, что используются только определенные преобразования, или что сигнатура использует определенным хэш-алгоритма и т. д.  
  
 Свойства `null` удаляет все проверка формата подписи из <xref:System.Security.Cryptography.Xml.SignedXml> объекта.  
  
 Можно также считывать текущий делегат объекта и его цепочку, если требуется.  
  
 Если вы настраиваете средства проверки формата, делегат, указываемое получит как входной параметр <xref:System.Security.Cryptography.Xml.SignedXml> выполняется проверка и возвращает логическое значение — `true` Если формат допустим, `false` Если это не. Если делегат возвращает `false` по любой причине <xref:System.Security.Cryptography.Xml.SignedXml> объекта сообщит, что XML-сигнатура не является допустимым.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureLength">
      <MemberSignature Language="C#" Value="public string SignatureLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureLength" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureLength As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureLength { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает длину подписи для текущего объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <value>Длина подписи для текущего объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureMethod">
      <MemberSignature Language="C#" Value="public string SignatureMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureMethod { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает метод подписи для текущего объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <value>Метод подписи для текущего объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> Представляет свойство <`SignatureMethod`> элементом цифровой подписи XML с помощью строки универсальный код ресурса (URI), содержащихся в свойстве. <`SignatureMethod`> Элемент является подэлементом <`SignedInfo`> элемент.  
  
 Используйте <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> извлекаемого свойства <`SignatureMethod`> URI, используемый <xref:System.Security.Cryptography.Xml.SignedXml> объекта. Данное свойство доступно только для чтения. Дополнительные сведения об указании URI для программно <`SignatureMethod`> элемент, в разделе <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A> свойство.  
  
 Дополнительные сведения о `<SignatureMethod>` элемента, см. в спецификации XMLDSIG, находящейся на www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureValue">
      <MemberSignature Language="C#" Value="public byte[] SignatureValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SignatureValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SignatureValue { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение подписи для текущего объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <value>Массив байтов, содержащий значение подписи текущего объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> Представляет свойство <`SignatureValue`> элементом цифровой подписи XML, с помощью массива байтов, содержащихся в свойстве.  <`SignatureValue`> Элемент является подэлементом <`Signature>` элемента.  
  
 Используйте <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> свойства которого требуется извлечь значение цифровой подписи XML.  Это свойство заполняется автоматически при внесении успешного вызова <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> метод.  
  
 Дополнительные сведения о `<SignatureValue>` элемента, см. в спецификации XMLDSIG, находящейся на www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.SignedInfo SignedInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignedInfo As SignedInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::SignedInfo ^ SignedInfo { System::Security::Cryptography::Xml::SignedInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.SignedInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> текущего объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <value>Объект <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> текущего объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> Представляет свойство <`SignedInfo`> элементом цифровой подписи XML, с помощью массива байтов, содержащихся в свойстве.  <`SignedInfo`> Элемент является подэлементом <`Signature>` элемента.  
  
 Используйте <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> извлекаемого свойства <xref:System.Security.Cryptography.Xml.SignedInfo> объект, используемый <xref:System.Security.Cryptography.Xml.SignedXml> объект для создания цифровой подписи XML.  
  
 Дополнительные сведения о `<SignedInfo>` элемента, см. в спецификации XMLDSIG, находящейся на www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm SigningKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm SigningKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ SigningKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает ключ асимметричного алгоритма, используемого для подписывания объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <value>Ключ асимметричного алгоритма, используемого для подписывания объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> свойство, чтобы указать асимметричного ключа требуется использовать для создания цифровой подписи XML.  
  
   
  
## Examples  
 В следующем примере кода показано, как подписать и проверить весь XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить объект адресуемый универсальный код ресурса (URI), используя отсоединенную подпись.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 В следующем примере кода показано, как подписать и проверить отдельный элемент XML-документа с помощью запечатанной подписи.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKeyName">
      <MemberSignature Language="C#" Value="public string SigningKeyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SigningKeyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SigningKeyName" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SigningKeyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя установленного ключа, который будет использоваться для подписывания объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <value>Имя установленного ключа, который будет использоваться для подписывания объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDecryptionTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDecryptionTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDecryptionTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDecryptionTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDecryptionTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) преобразования шифрования режима XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl> — поле «http://www.w3.org/2002/07/decrypt#XML».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/2002/07/decrypt#XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigBase64TransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigBase64TransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigBase64TransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigBase64TransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigBase64TransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) преобразования Base64. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> — поле «http://www.w3.org/2000/09/xmldsig#base64».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> Класс реализует преобразование, описываемого <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> поля.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/2000/09/xmldsig#base64.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование членов <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> класса.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigC14NTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigC14NTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigC14NTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigC14NTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigC14NTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) канонического преобразования XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> — поле «http://www.w3.org/TR/2001/REC-xml-c14n-20010315».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> Класс реализует преобразование, описываемого <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> поля.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/TR/2001/REC-xml-c14n-20010315.  
  
 Это поле имеет то же значение, что <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> поля.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызывать члены <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> класса.  
  
 [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigC14NWithCommentsTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigC14NWithCommentsTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigC14NWithCommentsTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigC14NWithCommentsTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) канонического преобразования XML с комментариями. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> — поле «http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments ».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> Класс реализует преобразование, описываемого <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> поля.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.  
  
 Это поле имеет то же значение, что <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> поля.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigCanonicalizationUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigCanonicalizationUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigCanonicalizationUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigCanonicalizationUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigCanonicalizationUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) стандартного алгоритма канонизации для цифровых подписей XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> — поле «http://www.w3.org/TR/2001/REC-xml-c14n-20010315».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> Класс реализует преобразование, описываемого <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> поля.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/TR/2001/REC-xml-c14n-20010315.  
  
 Это поле имеет то же значение, что <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> поля.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigCanonicalizationWithCommentsUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigCanonicalizationWithCommentsUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigCanonicalizationWithCommentsUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigCanonicalizationWithCommentsUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigCanonicalizationWithCommentsUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) стандартного алгоритма канонизации для цифровых подписей XML и включает комментарии. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> — поле «http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> Класс реализует преобразование, описываемого <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> поля.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.  
  
 Это поле имеет то же значение, что <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> поля.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigDSAUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigDSAUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigDSAUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigDSAUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigDSAUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) стандартного алгоритма <see cref="T:System.Security.Cryptography.DSA" /> для цифровых подписей XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> — поле «http://www.w3.org/2000/09/xmldsig#dsa-sha1».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/2000/09/xmldsig#dsa-sha1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigEnvelopedSignatureTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigEnvelopedSignatureTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigEnvelopedSignatureTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigEnvelopedSignatureTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigEnvelopedSignatureTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) преобразования запечатанной подписи. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> — поле «http://www.w3.org/2000/09/xmldsig#enveloped-signature».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Класс реализует преобразование, описываемого <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> поля.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/2000/09/xmldsig#enveloped-signature.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование членов <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> класса.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigExcC14NTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigExcC14NTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigExcC14NTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigExcC14NTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigExcC14NTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) исключительной канонизации XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> — поле «http://www.w3.org/2001/10/xml-exc-c14n#».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> Класс реализует преобразование, описываемого <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> поля.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/2001/10/xml-exc-c14n#.  
  
   
  
## Examples  
 В следующем примере кода показано, как подписать и проверить XML-документа с помощью <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> класса.  В этом примере создается сигнатура конверта.  
  
 [!code-cpp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CS/example.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigExcC14NWithCommentsTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigExcC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigExcC14NWithCommentsTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigExcC14NWithCommentsTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigExcC14NWithCommentsTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) исключительной канонизации XML с комментариями. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> — поле «http://www.w3.org/2001/10/xml-exc-c14n#WithComments».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> Класс реализует преобразование, описываемого <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> поля.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/2001/10/xml-exc-c14n#WithComments.  
  
   
  
## Examples  
 В следующем примере кода показано, как подписать и проверить XML-документа с помощью <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> класса.  В этом примере создается сигнатура конверта.  
  
 [!code-cpp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigHMACSHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigHMACSHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigHMACSHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigHMACSHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigHMACSHA1Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) стандартного алгоритма <see cref="T:System.Security.Cryptography.HMACSHA1" /> для цифровых подписей XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url> — поле «http://www.w3.org/2000/09/xmldsig#hmac-sha1».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/2000/09/xmldsig#hmac-sha1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigMinimalCanonicalizationUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigMinimalCanonicalizationUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigMinimalCanonicalizationUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigMinimalCanonicalizationUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigMinimalCanonicalizationUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) стандартного минимального алгоритма канонизации для цифровых подписей XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl> — поле «http://www.w3.org/2000/09/xmldsig#minimal».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/2000/09/xmldsig#minimal.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigNamespaceUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigNamespaceUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigNamespaceUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigNamespaceUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigNamespaceUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) стандартного пространства имен для цифровых подписей XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl> — поле «http://www.w3.org/2000/09/xmldsig#».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/2000/09/xmldsig#.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA1Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) стандартного метода подписи <see cref="T:System.Security.Cryptography.RSA" /> для цифровых подписей XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> — поле «http://www.w3.org/2000/09/xmldsig#rsa-sha1».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/2000/09/xmldsig#rsa-sha1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA256Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) для варианта метода подписи SHA-256 <see cref="T:System.Security.Cryptography.RSA" /> для цифровых подписей XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url> — поле «http://www.w3.org/2001/04/xmldsig-more#rsa-sha256».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в [ https://www.w3.org/2001/04/xmldsig-more#rsa-sha256 ](https://www.w3.org/2001/04/xmldsig-more#rsa-sha256).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA384Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA384Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA384Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA384Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA384Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) для варианта метода подписи SHA-384 <see cref="T:System.Security.Cryptography.RSA" /> для цифровых подписей XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url> — поле «http://www.w3.org/2001/04/xmldsig-more#rsa-sha384».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в [ https://www.w3.org/2001/04/xmldsig-more#rsa-sha384 ](https://www.w3.org/2001/04/xmldsig-more#rsa-sha384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA512Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) для варианта метода подписи SHA-512 <see cref="T:System.Security.Cryptography.RSA" /> для цифровых подписей XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url> — поле «http://www.w3.org/2001/04/xmldsig-more#rsa-sha512».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в [ https://www.w3.org/2001/04/xmldsig-more#rsa-sha512 ](https://www.w3.org/2001/04/xmldsig-more#rsa-sha512).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA1Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) для стандартного метода выборки <see cref="T:System.Security.Cryptography.SHA1" /> для цифровых подписей XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> — поле «http://www.w3.org/2000/09/xmldsig#sha1».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/2000/09/xmldsig#sha1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA256Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) для стандартного метода выборки <see cref="T:System.Security.Cryptography.SHA256" /> для цифровых подписей XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url> — поле «http://www.w3.org/2001/04/xmlenc#sha256».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в [ http://www.w3.org/2001/04/xmlenc#sha256 ](http://www.w3.org/2001/04/xmlenc#sha256).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA384Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA384Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA384Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA384Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA384Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) для стандартного метода выборки <see cref="T:System.Security.Cryptography.SHA384" /> для цифровых подписей XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url> — поле «http://www.w3.org/2001/04/xmldsig-more#sha384».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в [ https://www.w3.org/2001/04/xmldsig-more#sha384 ](https://www.w3.org/2001/04/xmldsig-more#sha384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA512Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) для стандартного метода выборки <see cref="T:System.Security.Cryptography.SHA512" /> для цифровых подписей XML. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url> — поле «http://www.w3.org/2001/04/xmlenc#sha512».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в [ http://www.w3.org/2001/04/xmlenc#sha512 ](http://www.w3.org/2001/04/xmlenc#sha512).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigXPathTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigXPathTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigXPathTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigXPathTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigXPathTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) языка XPath (XML Path Language). Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> — поле «http://www.w3.org/TR/1999/REC-xpath-19991116».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> Класс реализует преобразование, описываемого <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> поля.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/TR/1999/REC-xpath-19991116.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызывать члены <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> класса.  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigXsltTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigXsltTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigXsltTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigXsltTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigXsltTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) преобразования XSLT. Это поле является константой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> — поле «http://www.w3.org/TR/1999/REC-xslt-19991116».  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> Класс реализует преобразование, описываемого <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> поля.  
  
 Дополнительные сведения см. в спецификации консорциума World Wide Web (W3C) в http://www.w3.org/TR/1999/REC-xslt-19991116.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование членов <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> класса.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlLicenseTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlLicenseTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlLicenseTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlLicenseTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlLicenseTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет универсальный код ресурса (URI) алгоритма преобразования лицензий, который используется для нормализации лицензий XrML для сигнатур.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> поле «urn: mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform»  
  
 Это поле используется для упрощения установки значения для одного из атрибутов URI элемента, используемого для цифровой подписи XML.  
  
 <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> Класс реализует преобразование, описываемого <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> поля.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>