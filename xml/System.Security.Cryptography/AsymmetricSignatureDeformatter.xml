<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AsymmetricSignatureDeformatter.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56186130863db672e4a4ddf4bf7dc4c2b8796cdb9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6186130863db672e4a4ddf4bf7dc4c2b8796cdb9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.AsymmetricSignatureDeformatter">
          <source>Represents the abstract base class from which all implementations of asymmetric signature deformatters derive.</source>
          <target state="translated">Представляет абстрактный базовый класс, от которого наследуются все реализации модуля асимметричного удаления формата подписи.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.AsymmetricSignatureDeformatter">
          <source>Asymmetric signature deformatters verify the digital signatures that are created using implementations of <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter&gt;</ph>.</source>
          <target state="translated">Классов проверки подписи проверяют цифровые подписи, создаваемые с помощью реализаций <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /&gt;</ph>.</source>
          <target state="translated">Инициализирует новый экземпляр <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor">
          <source>You cannot create an instance of an abstract class.</source>
          <target state="translated">Невозможно создать экземпляр абстрактного класса.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor">
          <source>Application code will create a new instance of a derived class.</source>
          <target state="translated">Код приложения создаст новый экземпляр производного класса.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor">
          <source>Use implementations of <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A&gt;</ph> to set the key and hash algorithm before calling an implementation of <ph id="ph3">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;</ph>.</source>
          <target state="translated">Использовать реализации <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A&gt;</ph> необходимо установить до вызова реализации ключ и хэш-алгоритм <ph id="ph3">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)">
          <source>The name of the hash algorithm to use for verifying the signature.</source>
          <target state="translated">Имя хэш-алгоритма для подтверждения подписи.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)">
          <source>When overridden in a derived class, sets the hash algorithm to use for verifying the signature.</source>
          <target state="translated">Если переопределено в производном классе, задает хэш-алгоритм для подтверждения подписи.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)">
          <source>You must set a hash algorithm before calling an implementation of <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;</ph>.</source>
          <target state="translated">Необходимо задать до вызова реализации хэш-алгоритма <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)">
          <source>The instance of an implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /&gt;</ph> that holds the public key.</source>
          <target state="translated">Экземпляр реализации <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /&gt;</ph>, в котором содержится открытый ключ.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)">
          <source>When overridden in a derived class, sets the public key to use for verifying the signature.</source>
          <target state="translated">При переопределении в производном классе задает открытый ключ для проверки подписи.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)">
          <source>You must set a key before calling an implementation of <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;</ph>.</source>
          <target state="translated">Ключ необходимо установить до вызова реализации <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.AsymmetricSignatureDeformatter">
          <source>Verifies the signature.</source>
          <target state="translated">Проверяет подпись.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])">
          <source>The data signed with <bpt id="p1">&lt;c&gt;</bpt>rgbSignature<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Данные, подписанные с помощью <bpt id="p1">&lt;c&gt;</bpt>rgbSignature<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])">
          <source>The signature to be verified for <bpt id="p1">&lt;c&gt;</bpt>rgbHash<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Подпись, которую требуется проверить для <bpt id="p1">&lt;c&gt;</bpt>rgbHash<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])">
          <source>When overridden in a derived class, verifies the signature for the specified data.</source>
          <target state="translated">При переопределении в производном классе проверяет подпись с использованием указанных данных.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="rgbSignature" /&gt;</ph> matches the signature computed using the specified hash algorithm and key on <ph id="ph3">&lt;paramref name="rgbHash" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если <ph id="ph2">&lt;paramref name="rgbSignature" /&gt;</ph> совпадает с подписью, вычисленной для <ph id="ph3">&lt;paramref name="rgbHash" /&gt;</ph> с использованием заданного хэш-алгоритма и ключа; в противном случае — значение <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])">
          <source>You must specify a public key and a hash algorithm before calling this method.</source>
          <target state="translated">Перед вызовом этого метода необходимо указать открытый ключ и алгоритм хеширования.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
          <source>The hash algorithm to use to verify the signature.</source>
          <target state="translated">Хэш-алгоритм, который следует использовать для проверки подписи.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
          <source>The signature to be verified.</source>
          <target state="translated">Подпись для проверки.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
          <source>Verifies the signature from the specified hash value.</source>
          <target state="translated">Проверяет подпись из указанного хэш-значения.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid for the hash; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если подпись хэша верна; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
          <source>This method sets the hash algorithm to be used before verifying the signature of the input hash algorithm value.</source>
          <target state="translated">Этот метод задает хэш-алгоритм, используемый перед проверкой подписи значения алгоритма хеша входных данных.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="hash" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="hash" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>