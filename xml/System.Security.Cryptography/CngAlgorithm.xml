<Type Name="CngAlgorithm" FullName="System.Security.Cryptography.CngAlgorithm">
  <TypeSignature Language="C#" Value="public sealed class CngAlgorithm : IEquatable&lt;System.Security.Cryptography.CngAlgorithm&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CngAlgorithm extends System.Object implements class System.IEquatable`1&lt;class System.Security.Cryptography.CngAlgorithm&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CngAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CngAlgorithm&#xA;Implements IEquatable(Of CngAlgorithm)" />
  <TypeSignature Language="C++ CLI" Value="public ref class CngAlgorithm sealed : IEquatable&lt;System::Security::Cryptography::CngAlgorithm ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Security.Cryptography.CngAlgorithm&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="4ba4a-101">Инкапсулирует имя алгоритма шифрования.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-101">Encapsulates the name of an encryption algorithm.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ba4a-102"><xref:System.Security.Cryptography.CngAlgorithm> Класс — это служебный класс.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-102">The <xref:System.Security.Cryptography.CngAlgorithm> class is a utility class.</span></span> <span data-ttu-id="4ba4a-103">Он состоит из статических свойств, методов сравнения и private, внутренние поддерживаемые строку имени алгоритма.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-103">It consists of static properties, comparison methods, and a private, internally maintained, algorithm name string.</span></span>  
  
 <span data-ttu-id="4ba4a-104">Статические свойства возвращают <xref:System.Security.Cryptography.CngAlgorithm> объектов.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-104">The static properties return <xref:System.Security.Cryptography.CngAlgorithm> objects.</span></span> <span data-ttu-id="4ba4a-105">Внутренняя строка каждого объекта инициализируется имя алгоритма, которое соответствует имени статического свойства.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-105">Each object's internal string is initialized to the algorithm name that corresponds to the name of the static property.</span></span>  
  
 <span data-ttu-id="4ba4a-106">Этот класс также можно использовать для создания объектов для типов алгоритмов, не представленных статическими свойствами.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-106">You can also use this class to create objects for algorithm types that are not covered by the static properties.</span></span>  
  
 <span data-ttu-id="4ba4a-107">Некоторые классы криптографии следующего поколения (CNG) (такие как <xref:System.Security.Cryptography.CngKey>) принимают <xref:System.Security.Cryptography.CngAlgorithm> объектов через `algorithm` параметра.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-107">Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) accept <xref:System.Security.Cryptography.CngAlgorithm> objects through an `algorithm` parameter.</span></span> <span data-ttu-id="4ba4a-108">При получении класса <xref:System.Security.Cryptography.CngAlgorithm> объекта, он получает внедренное имя алгоритма, вызывая объекта <xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-108">When the class receives the <xref:System.Security.Cryptography.CngAlgorithm> object, it retrieves the embedded algorithm name by calling the object's <xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A> property.</span></span>  
  
 <span data-ttu-id="4ba4a-109">Таким образом <xref:System.Security.Cryptography.CngAlgorithm> служит перечисление известных алгоритмов.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-109">Therefore, <xref:System.Security.Cryptography.CngAlgorithm> serves as an enumeration of well-known algorithms.</span></span> <span data-ttu-id="4ba4a-110">Он позволяет задать хорошо известного алгоритма путем использования строго типизированного значения вместо строки.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-110">It lets you specify a well-known algorithm by using a strongly typed value instead of a string.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CngAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (algorithm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CngAlgorithm(System::String ^ algorithm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="4ba4a-111">Имя алгоритма для инициализации.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-111">The name of the algorithm to initialize.</span></span></param>
        <summary><span data-ttu-id="4ba4a-112">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CngAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ba4a-113">Экземпляры <xref:System.Security.Cryptography.CngAlgorithm> класс Ведение внутреннее имя алгоритма, который задается параметром `algorithm` параметр.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-113">Instances of the <xref:System.Security.Cryptography.CngAlgorithm> class internally maintain the algorithm name that is specified by the `algorithm` parameter.</span></span>  
  
 <span data-ttu-id="4ba4a-114">Основная цель этого конструктора является необходимость метод для создания <xref:System.Security.Cryptography.CngAlgorithm> объектов для типов алгоритмов, не представленные в виде статических свойств <xref:System.Security.Cryptography.CngAlgorithm> класса.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-114">The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithm> objects for algorithm types that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithm> class.</span></span> <span data-ttu-id="4ba4a-115">Такая емкость класса обеспечивает будущее [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] выпусков и пакетов обновления, а также сторонними разработчиками, чтобы добавить новые алгоритмы, к которым можно получить так же, как алгоритмы, которые в настоящее время доступны.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-115">This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithms, which can be accessed just like the algorithms that are currently available.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ba4a-116">Параметр <paramref name="algorithm" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-116">The <paramref name="algorithm" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ba4a-117">Длина значения параметра <paramref name="algorithm" /> равна 0.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-117">The <paramref name="algorithm" /> parameter length is 0 (zero).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public string Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Algorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Algorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Algorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ba4a-118">Возвращает имя алгоритма, заданного текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-118">Gets the algorithm name that the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object specifies.</span></span></summary>
        <value><span data-ttu-id="4ba4a-119">Внедренное имя алгоритма.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-119">The embedded algorithm name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDiffieHellman">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDiffieHellman { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDiffieHellman" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellman" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDiffieHellman As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDiffieHellman { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ba4a-120">Получает объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм обмена ключами эллиптической кривой Диффи-Хелмана (ECDH), кривая которого описывается с помощью свойства ключа.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-120">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm whose curve is described via a key property.</span></span></summary>
        <value><span data-ttu-id="4ba4a-121">Объект, задающий алгоритм обмена ключами ECDH, кривая которого описывается с помощью свойства ключа.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-121">An object that specifies an ECDH key exchange algorithm whose curve is described via a key property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDiffieHellmanP256">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP256" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDiffieHellmanP256 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDiffieHellmanP256 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ba4a-122">Возвращает объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм обмена ключами Диффи-Хеллмана на эллиптических кривых (ECDH), в котором используется кривая P-256.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-122">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-256 curve.</span></span></summary>
        <value><span data-ttu-id="4ba4a-123">Объект, задающий алгоритм ECDH, в котором используется кривая P-256.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-123">An object that specifies an ECDH algorithm that uses the P-256 curve.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDiffieHellmanP384">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP384 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP384" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDiffieHellmanP384 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDiffieHellmanP384 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ba4a-124">Возвращает объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм обмена ключами Диффи-Хеллмана на эллиптических кривых (ECDH), в котором используется кривая P-384.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-124">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-384 curve.</span></span></summary>
        <value><span data-ttu-id="4ba4a-125">Объект, задающий алгоритм ECDH, в котором используется кривая P-384.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-125">An object that specifies an ECDH algorithm that uses the P-384 curve.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDiffieHellmanP521">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP521 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP521" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDiffieHellmanP521 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDiffieHellmanP521 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ba4a-126">Возвращает объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм обмена ключами Диффи-Хеллмана на эллиптических кривых (ECDH), в котором используется кривая P-521.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-126">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-521 curve.</span></span></summary>
        <value><span data-ttu-id="4ba4a-127">Объект, задающий алгоритм ECDH, в котором используется кривая P-521.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-127">An object that specifies an ECDH algorithm that uses the P-521 curve.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDsa { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDsa" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDsa" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDsa As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDsa { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ba4a-128">Получает объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм цифровых подписей на основе эллиптических кривых (ECDSA), кривая которого описывается с помощью свойства ключа.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-128">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) whose curve is described via a key property.</span></span></summary>
        <value><span data-ttu-id="4ba4a-129">Объект, задающий алгоритм ECDSA, кривая которого описывается с помощью свойства ключа.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-129">An object that specifies an ECDSA whose curve is described via a key property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDsaP256">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDsaP256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDsaP256" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDsaP256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDsaP256 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDsaP256 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ba4a-130">Возвращает объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм цифровых подписей на основе эллиптических кривых (ECDSA), в котором используется кривая P-256.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-130">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-256 curve.</span></span></summary>
        <value><span data-ttu-id="4ba4a-131">Объект, задающий алгоритм ECDSA, в котором используется кривая P-256.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-131">An object that specifies an ECDSA algorithm that uses the P-256 curve.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDsaP384">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDsaP384 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDsaP384" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDsaP384" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDsaP384 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDsaP384 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ba4a-132">Возвращает объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм цифровых подписей на основе эллиптических кривых (ECDSA), в котором используется кривая P-384.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-132">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-384 curve.</span></span></summary>
        <value><span data-ttu-id="4ba4a-133">Объект, задающий алгоритм ECDSA, в котором используется кривая P-384.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-133">An object that specifies an ECDSA algorithm that uses the P-384 curve.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDsaP521">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDsaP521 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDsaP521" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDsaP521" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDsaP521 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDsaP521 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ba4a-134">Возвращает новый объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм цифровых подписей на основе эллиптических кривых (ECDSA), в котором используется кривая P-521.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-134">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-521 curve.</span></span></summary>
        <value><span data-ttu-id="4ba4a-135">Объект, задающий алгоритм ECDSA, в котором используется кривая P-521.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-135">An object that specifies an ECDSA algorithm that uses the P-521 curve.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4ba4a-136">Сравнивает два объекта <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-136">Compares two <see cref="T:System.Security.Cryptography.CngAlgorithm" /> objects.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4ba4a-137">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-137">An object to be compared to the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object.</span></span></param>
        <summary><span data-ttu-id="4ba4a-138">Сравнивает заданный объект с текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-138">Compares the specified object to the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="4ba4a-139">Значение <see langword="true" />, если параметр <paramref name="obj" /> является объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающим тот же самый алгоритм, что и текущий объект; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-139"><see langword="true" /> if the <paramref name="obj" /> parameter is a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> that specifies the same algorithm as the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Security.Cryptography.CngAlgorithm other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Security.Cryptography.CngAlgorithm other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CngAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Security::Cryptography::CngAlgorithm ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Cryptography.CngAlgorithm" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="4ba4a-140">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-140">An object to be compared to the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object.</span></span></param>
        <summary><span data-ttu-id="4ba4a-141">Сравнивает заданный объект <see cref="T:System.Security.Cryptography.CngAlgorithm" /> с текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-141">Compares the specified <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object to the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="4ba4a-142">Значение <see langword="true" />, если параметр <paramref name="other" /> задает тот же самый алгоритм, что и текущий объект; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-142"><see langword="true" /> if the <paramref name="other" /> parameter specifies the same algorithm as the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ba4a-143">Формирует хэш-значение имени алгоритма, которое внедрено в текущий объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-143">Generates a hash value for the algorithm name that is embedded in the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object.</span></span></summary>
        <returns><span data-ttu-id="4ba4a-144">Хэш-значение внедренного имени алгоритма.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-144">The hash value of the embedded algorithm name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MD5">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm MD5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm MD5" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.MD5" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MD5 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ MD5 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ba4a-145">Возвращает новый объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий хэш-алгоритм MD5.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-145">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the Message Digest 5 (MD5) hash algorithm.</span></span></summary>
        <value><span data-ttu-id="4ba4a-146">Объект, задающий алгоритм MD5.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-146">An object that specifies the MD5 algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Security.Cryptography.CngAlgorithm left, class System.Security.Cryptography.CngAlgorithm right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CngAlgorithm, right As CngAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Security::Cryptography::CngAlgorithm ^ left, System::Security::Cryptography::CngAlgorithm ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithm" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithm" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4ba4a-147">Объект, задающий имя алгоритма.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-147">An object that specifies an algorithm name.</span></span></param>
        <param name="right"><span data-ttu-id="4ba4a-148">Второй объект, который требуется сравнить с объектом, идентифицируемым параметром <c>left</c>.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-148">A second object, to be compared to the object that is identified by the <c>left</c> parameter.</span></span></param>
        <summary><span data-ttu-id="4ba4a-149">Определяет, задают ли два объекта <see cref="T:System.Security.Cryptography.CngAlgorithm" /> одно и то же имя алгоритма.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-149">Determines whether two <see cref="T:System.Security.Cryptography.CngAlgorithm" /> objects specify the same algorithm name.</span></span></summary>
        <returns>
          <span data-ttu-id="4ba4a-150">Значение <see langword="true" />, если два объекта задают один и тот же алгоритм, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-150"><see langword="true" /> if the two objects specify the same algorithm name; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Security.Cryptography.CngAlgorithm left, class System.Security.Cryptography.CngAlgorithm right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CngAlgorithm, right As CngAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Security::Cryptography::CngAlgorithm ^ left, System::Security::Cryptography::CngAlgorithm ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithm" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithm" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4ba4a-151">Объект, задающий имя алгоритма.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-151">An object that specifies an algorithm name.</span></span></param>
        <param name="right"><span data-ttu-id="4ba4a-152">Второй объект, который требуется сравнить с объектом, идентифицируемым параметром <c>left</c>.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-152">A second object, to be compared to the object that is identified by the <c>left</c> parameter.</span></span></param>
        <summary><span data-ttu-id="4ba4a-153">Определяет, задают ли два объекта <see cref="T:System.Security.Cryptography.CngAlgorithm" /> разные алгоритмы.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-153">Determines whether two <see cref="T:System.Security.Cryptography.CngAlgorithm" /> objects do not specify the same algorithm.</span></span></summary>
        <returns>
          <span data-ttu-id="4ba4a-154">Значение <see langword="true" />, если два объекта задают разные алгоритмы, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-154"><see langword="true" /> if the two objects do not specify the same algorithm name; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm Rsa { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm Rsa" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Rsa" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Rsa As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ Rsa { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ba4a-155">Возвращает новый объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий хэш-алгоритм RSA.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-155">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the RSA hash algorithm.</span></span></summary>
        <value><span data-ttu-id="4ba4a-156">Объект, задающий алгоритм RSA.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-156">An object that specifies the RSA algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sha1">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm Sha1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm Sha1" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Sha1" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Sha1 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ Sha1 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ba4a-157">Возвращает новый объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм SHA-1.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-157">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the Secure Hash Algorithm 1 (SHA-1) algorithm.</span></span></summary>
        <value><span data-ttu-id="4ba4a-158">Объект, задающий алгоритм SHA-1.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-158">An object that specifies the SHA-1 algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sha256">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm Sha256" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Sha256 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ Sha256 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ba4a-159">Возвращает новый объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм SHA-256.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-159">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the Secure Hash Algorithm 256 (SHA-256) algorithm.</span></span></summary>
        <value><span data-ttu-id="4ba4a-160">Объект, задающий алгоритм SHA-256.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-160">An object that specifies the SHA-256 algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sha384">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm Sha384 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm Sha384" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Sha384" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Sha384 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ Sha384 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ba4a-161">Возвращает новый объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм SHA-384.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-161">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the Secure Hash Algorithm 384 (SHA-384) algorithm.</span></span></summary>
        <value><span data-ttu-id="4ba4a-162">Объект, задающий алгоритм SHA-384.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-162">An object that specifies the SHA-384 algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sha512">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm Sha512 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm Sha512" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Sha512" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Sha512 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ Sha512 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ba4a-163">Возвращает новый объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм SHA-512.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-163">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the Secure Hash Algorithm 512 (SHA-512) algorithm.</span></span></summary>
        <value><span data-ttu-id="4ba4a-164">Объект, задающий алгоритм SHA-512.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-164">An object that specifies the SHA-512 algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ba4a-165">Возвращает имя алгоритма, заданного текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-165">Gets the name of the algorithm that the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object specifies.</span></span></summary>
        <returns><span data-ttu-id="4ba4a-166">Внедренное имя алгоритма.</span><span class="sxs-lookup"><span data-stu-id="4ba4a-166">The embedded algorithm name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>