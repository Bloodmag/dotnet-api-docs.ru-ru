<Type Name="ECDiffieHellmanKeyDerivationFunction" FullName="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a12324aa7080800b67a5c188c483c03abd8a7136" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30495398" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ECDiffieHellmanKeyDerivationFunction extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="VB.NET" Value="Public Enum ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="C++ CLI" Value="public enum class ECDiffieHellmanKeyDerivationFunction" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Задает функцию формирования ключа, используемую классом <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> для преобразования секретного соглашения в ключевой материал.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> Перечисление определяет тип алгоритма, который будет использоваться для преобразования необработанных секретного соглашения в ключевой материал. Секретного соглашения — значение, которое создается на основе закрытый ключ и открытый ключ другой стороны, в рамках механизма обмена ключами. Это начальное значение для ключа, созданного <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> метод.  
  
 <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> Свойство это перечисление используется для получения функцию формирования ключа для <xref:System.Security.Cryptography.ECDiffieHellmanCng> класса.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="Hash" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hash = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />
      <MemberSignature Language="VB.NET" Value="Hash" />
      <MemberSignature Language="C++ CLI" Value="Hash" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Хэш-алгоритм, используемый для формирования ключевого материала. Свойство <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /> задает имя алгоритма, который необходимо использовать. Если имя алгоритма не задано, используется алгоритм по умолчанию <see cref="T:System.Security.Cryptography.SHA256" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно также указать <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> и <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> свойства, но они не являются обязательными.  
  
 Объем материала ключа, которое создается, соответствует размеру хэш-значения для указанного алгоритма.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hmac">
      <MemberSignature Language="C#" Value="Hmac" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hmac = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />
      <MemberSignature Language="VB.NET" Value="Hmac" />
      <MemberSignature Language="C++ CLI" Value="Hmac" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Для формирования ключевого материала используется алгоритм HMAC. Свойство <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /> задает ключ, который необходимо использовать. Необходимо задать это свойство или задать для свойства <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /> значение <see langword="true" />; в противном случае при использовании <see cref="T:System.Security.Cryptography.CryptographicException" /> возникнет исключение <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />. Если заданы оба свойства, секретное соглашение используется в качестве ключа HMAC.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно также указать <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> и <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> свойства, но они не являются обязательными.  
  
 Объем материала ключа, которое создается, соответствует размеру значения HMAC.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tls">
      <MemberSignature Language="C#" Value="Tls" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Tls = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />
      <MemberSignature Language="VB.NET" Value="Tls" />
      <MemberSignature Language="C++ CLI" Value="Tls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Для формирования ключевого материала используется протокол TLS. Необходимо задать свойства <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> и <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" />; в противном случае при использовании <see cref="T:System.Security.Cryptography.CryptographicException" /> возникнет исключение <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это значение формирует 160 бит материал ключа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>