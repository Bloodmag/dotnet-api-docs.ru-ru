<Type Name="HMAC" FullName="System.Security.Cryptography.HMAC">
  <TypeSignature Language="C#" Value="public abstract class HMAC : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HMAC extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMAC" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HMAC&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMAC abstract : System::Security::Cryptography::KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9b821-101">Представляет абстрактный класс, от которого должны наследоваться все реализации хэш-кода проверки подлинности сообщения (HMAC).</span><span class="sxs-lookup"><span data-stu-id="9b821-101">Represents the abstract class from which all implementations of Hash-based Message Authentication Code (HMAC) must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b821-102">Хэш-проверки подлинности сообщения код (HMAC) можно использовать для определения факта подделки сообщения, передаваемого по незащищенному каналу, при условии, что отправитель и получатель общий секретный ключ.</span><span class="sxs-lookup"><span data-stu-id="9b821-102">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="9b821-103">Отправитель вычисляет хэш-значение для исходных данных и передает исходные данные и HMAC в одном сообщении.</span><span class="sxs-lookup"><span data-stu-id="9b821-103">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="9b821-104">Получатель пересчет хеш для полученного сообщения и проверяет, что вычисляемый хэш-значение соответствует передаваемых хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="9b821-104">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="9b821-105">HMAC можно использовать с любой итеративный хэш-функции шифрования, например MD5 или SHA-1, в сочетании с общего секретного ключа.</span><span class="sxs-lookup"><span data-stu-id="9b821-105">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="9b821-106">Стойкость кода HMAC зависит от свойств базового хэш-функции.</span><span class="sxs-lookup"><span data-stu-id="9b821-106">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="9b821-107">Любое изменение данных или значения хэша вызовет несовпадение, поскольку для изменения сообщения и повторного создания правильного кода HMAC требуется знание секретного ключа.</span><span class="sxs-lookup"><span data-stu-id="9b821-107">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="9b821-108">Таким образом Если исходные и вычисляемый хэш-коды совпадают, сообщение проходит проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="9b821-108">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HMAC ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HMAC();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b821-109">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.HMAC" />.</span><span class="sxs-lookup"><span data-stu-id="9b821-109">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMAC" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="protected int BlockSizeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Property BlockSizeValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int BlockSizeValue { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b821-110">Возвращает или задает размер блока, используемый в хэш-значении.</span><span class="sxs-lookup"><span data-stu-id="9b821-110">Gets or sets the block size to use in the hash value.</span></span></summary>
        <value><span data-ttu-id="9b821-111">Размер блока, используемый в хэш значении.</span><span class="sxs-lookup"><span data-stu-id="9b821-111">The block size to use in the hash value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b821-112">Хэш-проверки подлинности сообщения код (HMAC) использует хэш-функции, где данные хэшируются с помощью итерации функции сжатия для блоков данных.</span><span class="sxs-lookup"><span data-stu-id="9b821-112">A Hash-based Message Authentication Code (HMAC) uses a hash function where data is hashed by iterating a basic compression function on blocks of data.</span></span> <span data-ttu-id="9b821-113"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> Представляет размер в байтах таких блоков.</span><span class="sxs-lookup"><span data-stu-id="9b821-113"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> is the byte size of such a block.</span></span> <span data-ttu-id="9b821-114">Его значение равно 64 байт.</span><span class="sxs-lookup"><span data-stu-id="9b821-114">Its value is 64 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9b821-115">Создает экземпляр реализации хэш-кода проверки подлинности сообщения (<see cref="T:System.Security.Cryptography.HMAC" />).</span><span class="sxs-lookup"><span data-stu-id="9b821-115">Creates an instance of an implementation of a Hash-based Message Authentication Code (<see cref="T:System.Security.Cryptography.HMAC" />) .</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b821-116">Создает экземпляр реализации хэш-кода проверки подлинности сообщения (HMAC) по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="9b821-116">Creates an instance of the default implementation of a Hash-based Message Authentication Code (HMAC).</span></span></summary>
        <returns><span data-ttu-id="9b821-117">Новый экземпляр SHA-1, если параметры по умолчанию не были изменены с помощью [элемента &lt;cryptoClass&gt;](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span><span class="sxs-lookup"><span data-stu-id="9b821-117">A new SHA-1 instance, unless the default settings have been changed by using the [&lt;cryptoClass&gt; element](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b821-118">По умолчанию эта перегрузка использует SHA-1 в реализации кода HMAC.</span><span class="sxs-lookup"><span data-stu-id="9b821-118">By default, this overload uses the SHA-1 implementation of HMAC.</span></span> <span data-ttu-id="9b821-119">Если вы хотите указать другой реализации, используйте <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> перегрузку, которая позволяет вместо этого указать имя алгоритма.</span><span class="sxs-lookup"><span data-stu-id="9b821-119">If you want to specify a different implementation, use the <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> overload, which lets you specify an algorithm name, instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create (string algorithmName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create(string algorithmName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algorithmName As String) As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create(System::String ^ algorithmName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithmName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithmName"><span data-ttu-id="9b821-120">Реализация кода HMAC для использования.</span><span class="sxs-lookup"><span data-stu-id="9b821-120">The HMAC implementation to use.</span></span> <span data-ttu-id="9b821-121">В следующей таблице представлены допустимые значения параметра <c>algorithmName</c> и алгоритмы, с которыми они сопоставляются.</span><span class="sxs-lookup"><span data-stu-id="9b821-121">The following table shows the valid values for the <c>algorithmName</c> parameter and the algorithms they map to.</span></span>  
  
 <span data-ttu-id="9b821-122"><list type="table"><listheader><term> Значение параметра</span><span class="sxs-lookup"><span data-stu-id="9b821-122"><list type="table"><listheader><term> Parameter value</span></span>  
  
 <span data-ttu-id="9b821-123"></term><description> Реализует</span><span class="sxs-lookup"><span data-stu-id="9b821-123"></term><description> Implements</span></span>  
  
 <span data-ttu-id="9b821-124"></description></listheader><item><term> System.Security.Cryptography.HMAC</span><span class="sxs-lookup"><span data-stu-id="9b821-124"></description></listheader><item><term> System.Security.Cryptography.HMAC</span></span>  
  
 <span data-ttu-id="9b821-125"></term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> System.Security.Cryptography.KeyedHashAlgorithm</span><span class="sxs-lookup"><span data-stu-id="9b821-125"></term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> System.Security.Cryptography.KeyedHashAlgorithm</span></span>  
  
 <span data-ttu-id="9b821-126"></term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> HMACMD5</span><span class="sxs-lookup"><span data-stu-id="9b821-126"></term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> HMACMD5</span></span>  
  
 <span data-ttu-id="9b821-127"></term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> System.Security.Cryptography.HMACMD5</span><span class="sxs-lookup"><span data-stu-id="9b821-127"></term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> System.Security.Cryptography.HMACMD5</span></span>  
  
 <span data-ttu-id="9b821-128"></term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> HMACRIPEMD160</span><span class="sxs-lookup"><span data-stu-id="9b821-128"></term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> HMACRIPEMD160</span></span>  
  
 <span data-ttu-id="9b821-129"></term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> System.Security.Cryptography.HMACRIPEMD160</span><span class="sxs-lookup"><span data-stu-id="9b821-129"></term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> System.Security.Cryptography.HMACRIPEMD160</span></span>  
  
 <span data-ttu-id="9b821-130"></term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> HMACSHA1</span><span class="sxs-lookup"><span data-stu-id="9b821-130"></term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> HMACSHA1</span></span>  
  
 <span data-ttu-id="9b821-131"></term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> System.Security.Cryptography.HMACSHA1</span><span class="sxs-lookup"><span data-stu-id="9b821-131"></term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> System.Security.Cryptography.HMACSHA1</span></span>  
  
 <span data-ttu-id="9b821-132"></term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> HMACSHA256</span><span class="sxs-lookup"><span data-stu-id="9b821-132"></term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> HMACSHA256</span></span>  
  
 <span data-ttu-id="9b821-133"></term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> System.Security.Cryptography.HMACSHA256</span><span class="sxs-lookup"><span data-stu-id="9b821-133"></term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> System.Security.Cryptography.HMACSHA256</span></span>  
  
 <span data-ttu-id="9b821-134"></term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> HMACSHA384</span><span class="sxs-lookup"><span data-stu-id="9b821-134"></term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> HMACSHA384</span></span>  
  
 <span data-ttu-id="9b821-135"></term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> System.Security.Cryptography.HMACSHA384</span><span class="sxs-lookup"><span data-stu-id="9b821-135"></term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> System.Security.Cryptography.HMACSHA384</span></span>  
  
 <span data-ttu-id="9b821-136"></term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> HMACSHA512</span><span class="sxs-lookup"><span data-stu-id="9b821-136"></term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> HMACSHA512</span></span>  
  
 <span data-ttu-id="9b821-137"></term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> System.Security.Cryptography.HMACSHA512</span><span class="sxs-lookup"><span data-stu-id="9b821-137"></term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> System.Security.Cryptography.HMACSHA512</span></span>  
  
 <span data-ttu-id="9b821-138"></term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> MACTripleDES</span><span class="sxs-lookup"><span data-stu-id="9b821-138"></term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> MACTripleDES</span></span>  
  
 <span data-ttu-id="9b821-139"></term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item><item><term> System.Security.Cryptography.MACTripleDES</span><span class="sxs-lookup"><span data-stu-id="9b821-139"></term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item><item><term> System.Security.Cryptography.MACTripleDES</span></span>  
  
 </term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item></list></param>
        <summary><span data-ttu-id="9b821-140">Создает экземпляр заданной реализации хэш-кода проверки подлинности сообщения (HMAC).</span><span class="sxs-lookup"><span data-stu-id="9b821-140">Creates an instance of the specified implementation of a Hash-based Message Authentication Code (HMAC).</span></span></summary>
        <returns><span data-ttu-id="9b821-141">Новый экземпляр заданной реализации кода HMAC.</span><span class="sxs-lookup"><span data-stu-id="9b821-141">A new instance of the specified HMAC implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b821-142">HMAC поддерживает несколько алгоритмов хэширования, включая MD5, SHA-1, SHA-256 и RIPEMD160.</span><span class="sxs-lookup"><span data-stu-id="9b821-142">HMAC supports a number of hash algorithms, including MD5, SHA-1, SHA-256, and RIPEMD160.</span></span> <span data-ttu-id="9b821-143">Полный список см. в разделе Поддерживаемые значения для `algorithmName` параметра.</span><span class="sxs-lookup"><span data-stu-id="9b821-143">For the full list, see the supported values for the `algorithmName` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="9b821-144">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="9b821-144"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="9b821-145">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Security.Cryptography.HMAC" />, и, если допускается изменение ключа, опционально освобождает управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="9b821-145">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.HMAC" /> class when a key change is legitimate and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b821-146">Этот метод вызывается методом открытые `Dispose()` метод и `Finalize` метод.</span><span class="sxs-lookup"><span data-stu-id="9b821-146">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="9b821-147">`Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`.</span><span class="sxs-lookup"><span data-stu-id="9b821-147">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="9b821-148">`Finalize` вызывает `Dispose` с `disposing` значение `false`.</span><span class="sxs-lookup"><span data-stu-id="9b821-148">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="9b821-149">Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.Security.Cryptography.HMAC>.</span><span class="sxs-lookup"><span data-stu-id="9b821-149">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.HMAC> references.</span></span> <span data-ttu-id="9b821-150">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="9b821-150">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9b821-151">Метод <see langword="Dispose" /> может вызываться несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="9b821-151"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="9b821-152">При переопределении метода <see langword="Dispose(Boolean)" />нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="9b821-152">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="9b821-153">Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />, в разделе [метода](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="9b821-153">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="9b821-154">Дополнительные сведения о <see langword="Dispose" /> и <see langword="Finalize" />, в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="9b821-154">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ib, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ib, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgb As Byte(), ib As Integer, cb As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgb, int ib, int cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="ib" Type="System.Int32" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgb"><span data-ttu-id="9b821-155">Входные данные.</span><span class="sxs-lookup"><span data-stu-id="9b821-155">The input data.</span></span></param>
        <param name="ib"><span data-ttu-id="9b821-156">Смещение в массиве байтов, начиная с которого следует использовать данные.</span><span class="sxs-lookup"><span data-stu-id="9b821-156">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="cb"><span data-ttu-id="9b821-157">Число байтов в массиве для использования в качестве данных.</span><span class="sxs-lookup"><span data-stu-id="9b821-157">The number of bytes in the array to use as data.</span></span></param>
        <summary><span data-ttu-id="9b821-158">Если переопределено в производном классе, передает данные, записанные в объект, на вход хэш-алгоритма <see cref="T:System.Security.Cryptography.HMAC" /> по умолчанию для вычисления значения хэша.</span><span class="sxs-lookup"><span data-stu-id="9b821-158">When overridden in a derived class, routes data written to the object into the default <see cref="T:System.Security.Cryptography.HMAC" /> hash algorithm for computing the hash value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b821-159">Этот метод не вызывается кодом приложения.</span><span class="sxs-lookup"><span data-stu-id="9b821-159">This method is not called by application code.</span></span>  
  
 <span data-ttu-id="9b821-160">Этот абстрактный метод выполняет вычисление хэша.</span><span class="sxs-lookup"><span data-stu-id="9b821-160">This abstract method performs the hash computation.</span></span> <span data-ttu-id="9b821-161">Каждая операция записи в криптографический потоковый объект передает данные с помощью этого метода.</span><span class="sxs-lookup"><span data-stu-id="9b821-161">Every write to the cryptographic stream object passes the data through this method.</span></span> <span data-ttu-id="9b821-162">Для каждого блока данных этот метод обновляет состояние хэш-объекта, чтобы в конце потока данных возвращается правильное значение хэша.</span><span class="sxs-lookup"><span data-stu-id="9b821-162">For each block of data, this method updates the state of the hash object so that a correct hash value is returned at the end of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b821-163">Если переопределено в производном классе, завершает вычисление хэша после обработки последних данных криптографическим потоковым объектом.</span><span class="sxs-lookup"><span data-stu-id="9b821-163">When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</span></span></summary>
        <returns><span data-ttu-id="9b821-164">Вычисленный хэш-код в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="9b821-164">The computed hash code in a byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b821-165">Этот метод не вызывается кодом приложения.</span><span class="sxs-lookup"><span data-stu-id="9b821-165">This method is not called by application code.</span></span> <span data-ttu-id="9b821-166">Этот метод завершает все частичные вычисления и возвращает правильное значение хэша потока данных.</span><span class="sxs-lookup"><span data-stu-id="9b821-166">This method finalizes any partial computation and returns the correct hash value of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b821-167">Возвращает или задает имя используемого хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="9b821-167">Gets or sets the name of the hash algorithm to use for hashing.</span></span></summary>
        <value><span data-ttu-id="9b821-168">Имя хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="9b821-168">The name of the hash algorithm.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9b821-169">Невозможно изменить текущий хэш-алгоритм.</span><span class="sxs-lookup"><span data-stu-id="9b821-169">The current hash algorithm cannot be changed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b821-170">Инициализирует новый экземпляр реализации по умолчанию класса <see cref="T:System.Security.Cryptography.HMAC" />.</span><span class="sxs-lookup"><span data-stu-id="9b821-170">Initializes an instance of the default implementation of <see cref="T:System.Security.Cryptography.HMAC" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b821-171">Хэш-проверки подлинности сообщения код (HMAC) можно использовать для определения факта подделки сообщения, передаваемого по незащищенному каналу, при условии, что отправитель и получатель общий секретный ключ.</span><span class="sxs-lookup"><span data-stu-id="9b821-171">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="9b821-172">Отправитель вычисляет хэш-значение для исходных данных и передает исходные данные и HMAC в одном сообщении.</span><span class="sxs-lookup"><span data-stu-id="9b821-172">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="9b821-173">Получатель пересчет хеш для полученного сообщения и проверяет, что вычисляемый хэш-значение соответствует передаваемых хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="9b821-173">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="9b821-174">HMAC можно использовать с любой итеративный хэш-функции шифрования, например MD5 или SHA-1, в сочетании с общего секретного ключа.</span><span class="sxs-lookup"><span data-stu-id="9b821-174">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="9b821-175">Стойкость кода HMAC зависит от свойств базового хэш-функции.</span><span class="sxs-lookup"><span data-stu-id="9b821-175">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="9b821-176">Любое изменение данных или хэш-значения приведет к несовпадение, поскольку для изменения сообщения и повторного создания правильного кода HMAC требуется знание секретного ключа.</span><span class="sxs-lookup"><span data-stu-id="9b821-176">Any change to the data or the hash value will result in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="9b821-177">Таким образом Если исходные и вычисляемый хэш-коды совпадают, сообщение проходит проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="9b821-177">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b821-178">Возвращает или задает ключ, используемый в хэш-алгоритме.</span><span class="sxs-lookup"><span data-stu-id="9b821-178">Gets or sets the key to use in the hash algorithm.</span></span></summary>
        <value><span data-ttu-id="9b821-179">Ключ, используемый в хэш-алгоритме.</span><span class="sxs-lookup"><span data-stu-id="9b821-179">The key to use in the hash algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b821-180">Это свойство является ключом для хэш-алгоритма.</span><span class="sxs-lookup"><span data-stu-id="9b821-180">This property is the key for the keyed hash algorithm.</span></span>  
  
 <span data-ttu-id="9b821-181">Хэш-проверки подлинности сообщения код (HMAC) можно использовать для определения факта подделки сообщения, передаваемого по незащищенному каналу, при условии, что отправитель и получатель общий секретный ключ.</span><span class="sxs-lookup"><span data-stu-id="9b821-181">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="9b821-182">Отправитель вычисляет хэш-значение для исходных данных и передает исходные данные и HMAC в одном сообщении.</span><span class="sxs-lookup"><span data-stu-id="9b821-182">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="9b821-183">Получатель пересчет хеш для полученного сообщения и проверяет, что вычисляемый хэш-значение соответствует передаваемых хэш-значения.</span><span class="sxs-lookup"><span data-stu-id="9b821-183">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="9b821-184">HMAC можно использовать с любой итеративный хэш-функции шифрования, например MD5 или SHA-1, в сочетании с общего секретного ключа.</span><span class="sxs-lookup"><span data-stu-id="9b821-184">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="9b821-185">Стойкость кода HMAC зависит от свойств базового хэш-функции.</span><span class="sxs-lookup"><span data-stu-id="9b821-185">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="9b821-186">Любое изменение данных или значения хэша вызовет несовпадение, поскольку для изменения сообщения и повторного создания правильного кода HMAC требуется знание секретного ключа.</span><span class="sxs-lookup"><span data-stu-id="9b821-186">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="9b821-187">Таким образом Если исходные и вычисляемый хэш-коды совпадают, сообщение проходит проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="9b821-187">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9b821-188">Предпринята попытка изменения свойства <see cref="P:System.Security.Cryptography.HMAC.Key" /> после начала хэширования.</span><span class="sxs-lookup"><span data-stu-id="9b821-188">An attempt is made to change the <see cref="P:System.Security.Cryptography.HMAC.Key" /> property after hashing has begun.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryHashFinal">
      <MemberSignature Language="C#" Value="protected override bool TryHashFinal (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryHashFinal(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.TryHashFinal(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryHashFinal (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryHashFinal(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>