<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HashAlgorithm.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52b9b76797e6d798773a44e829bec18e894d93a53.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b9b76797e6d798773a44e829bec18e894d93a53</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Represents the base class from which all implementations of cryptographic hash algorithms must derive.</source>
          <target state="translated">Представляет базовый класс, из которого создаются все реализации криптографических хэш-алгоритмов.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Hash functions are fundamental to modern cryptography.</source>
          <target state="translated">Хэш-функции лежат в основе современной криптографии.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>These functions map binary strings of an arbitrary length to small binary strings of a fixed length, known as hash values.</source>
          <target state="translated">Эти функции отображают двоичные строки произвольной длины в короткие двоичные строки фиксированной длины, известные как хэш-значения.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value.</source>
          <target state="translated">Криптографическая хэш-функция имеет свойство, что немыслимо найти два разных входных набора данных, результаты хэширования и то же значение.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Hash functions are commonly used with digital signatures and for data integrity.</source>
          <target state="translated">Хэш-функции обычно используются с цифровыми подписями и для обеспечения целостности данных.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>The hash is used as a unique value of fixed size representing a large amount of data.</source>
          <target state="translated">Хэш-код используется в качестве уникального значения фиксированной длины, представляющего большой объем данных.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Hashes of two sets of data should match if the corresponding data also matches.</source>
          <target state="translated">Хэши двух наборов данных должны совпадать, если соответствующие данные также совпадают.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Small changes to the data result in large unpredictable changes in the hash.</source>
          <target state="translated">Небольшие изменения в данных приводят к непредсказуемым изменениям в хэш.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>The following code example computes the <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;</ph> hash for an array.</source>
          <target state="translated">В следующем примере кода вычисляет пример <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;</ph> хэш для массива.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>This example assumes that there is a predefined byte array <ph id="ph1">`dataArray[]`</ph>.</source>
          <target state="translated">В этом примере предполагается наличие стандартных байтовый массив <ph id="ph1">`dataArray[]`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;</ph> is a derived class of <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;</ph> является производным классом класса <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> class, you must override the following members:  <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> and <ph id="ph3">&lt;see cref="M:System.Security.Cryptography.HashAlgorithm.HashFinal" /&gt;</ph>.</source>
          <target state="translated">При наследовании от <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> класса, необходимо переопределить следующие члены: <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> и <ph id="ph3">&lt;see cref="M:System.Security.Cryptography.HashAlgorithm.HashFinal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.#ctor">
          <source>You cannot create an instance of an abstract class.</source>
          <target state="translated">Невозможно создать экземпляр абстрактного класса.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.#ctor">
          <source>Application code creates a new instance of a derived class.</source>
          <target state="translated">Код приложения создает новый экземпляр производного класса.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform">
          <source>Gets a value indicating whether the current transform can be reused.</source>
          <target state="translated">Возвращает значение, указывающее, возможно ли повторное использование текущего преобразования.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Всегда <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks">
          <source>When overridden in a derived class, gets a value indicating whether multiple blocks can be transformed.</source>
          <target state="translated">Если переопределено в производном классе, возвращает значение, указывающее, возможно ли преобразование нескольких блоков.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if multiple blocks can be transformed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если возможно преобразование нескольких блоков; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Clear">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> class.</source>
          <target state="translated">Освобождает все ресурсы, используемые классом <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Clear">
          <source>This method is a simple call to the <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Этот метод является простым вызовом <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Clear">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> class to be reallocated for other purposes.</source>
          <target state="translated">Вызов <ph id="ph1">`Dispose`</ph> позволяет ресурсы, используемые <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> класс перераспределить для других целей.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Clear">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о <ph id="ph1">`Dispose`</ph>, в разделе <bpt id="p1">[</bpt>очистки неуправляемых ресурсов<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Computes the hash value for the input data.</source>
          <target state="translated">Вычисляет хэш-значение для входных данных.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <source>The input to compute the hash code for.</source>
          <target state="translated">Входные данные, для которых вычисляется хэш-код.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <source>Computes the hash value for the specified byte array.</source>
          <target state="translated">Вычисляет хэш-значение для заданного массива байтов.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <source>The computed hash code.</source>
          <target state="translated">Вычисляемый хэш-код.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <source>The following example computes the <ph id="ph1">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> hash value of a string and returns the hash as a 32-character, hexadecimal-formatted string.</source>
          <target state="translated">В следующем примере вычисляется <ph id="ph1">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> хэш-значение строки и возвращает хэш-код как строка 32 символа, в шестнадцатеричном формате.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <source>The hash string created by this code example is compatible with any MD5 hash function (on any platform) that creates a 32-character, hexadecimal-formatted hash string.</source>
          <target state="translated">Хэш-строку, созданный в этом примере кода совместим с любой хэш-функции MD5 (на любой платформе), создает 32-символьный, шестнадцатеричном формате хэш-строку.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <source>The object has already been disposed.</source>
          <target state="translated">Объект уже удален.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <source>The input to compute the hash code for.</source>
          <target state="translated">Входные данные, для которых вычисляется хэш-код.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <source>Computes the hash value for the specified <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object.</source>
          <target state="translated">Вычисляет хэш-значение для заданного объекта <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <source>The computed hash code.</source>
          <target state="translated">Вычисляемый хэш-код.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <source>The following example calculates the <ph id="ph1">&lt;xref:System.Security.Cryptography.RIPEMD160&gt;</ph> hash for all files in a directory.</source>
          <target state="translated">В следующем примере вычисляется <ph id="ph1">&lt;xref:System.Security.Cryptography.RIPEMD160&gt;</ph> хэш для всех файлов в каталоге.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <source>The object has already been disposed.</source>
          <target state="translated">Объект уже удален.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>The input to compute the hash code for.</source>
          <target state="translated">Входные данные, для которых вычисляется хэш-код.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">Смещение в массиве байтов, начиная с которого следует использовать данные.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the array to use as data.</source>
          <target state="translated">Число байтов в массиве для использования в качестве данных.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>Computes the hash value for the specified region of the specified byte array.</source>
          <target state="translated">Вычисляет хэш-значение для заданной области заданного массива байтов.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>The computed hash code.</source>
          <target state="translated">Вычисляемый хэш-код.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> не является допустимым значением.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> length is invalid.</source>
          <target state="translated">Недопустимая длина значения параметра <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> выходит за пределы диапазона.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">Значение этого параметра не должно быть отрицательным.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>The object has already been disposed.</source>
          <target state="translated">Объект уже удален.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Creates an instance of an implementation of a hash algorithm.</source>
          <target state="translated">Создает экземпляр реализации хэш-алгоритма.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create">
          <source>Creates an instance of the default implementation of a hash algorithm.</source>
          <target state="translated">Создает экземпляр реализации по умолчанию хэш-алгоритма.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph> instance, unless the default settings have been changed using the .</source>
          <target state="translated">Новый экземпляр <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph>, если параметры по умолчанию не были изменены с помощью .</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Create">
          <source>By default, this overload uses the <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;</ph> implementation of a hash algorithm.</source>
          <target state="translated">По умолчанию используется эта перегрузка <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;</ph> реализации хэш-алгоритма.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Create">
          <source>If you want to specify a different implementation, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29&gt;</ph> overload, which lets you specify an algorithm name, instead.</source>
          <target state="translated">Если вы хотите указать другой реализации, используйте <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29&gt;</ph> перегрузку, которая позволяет вместо этого указать имя алгоритма.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Create">
          <source>The cryptography configuration system defines the default implementation of <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>.</source>
          <target state="translated">Система конфигурации шифрования определяет реализацию по умолчанию <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source>The hash algorithm implementation to use.</source>
          <target state="translated">Используемая реализация хэш-алгоритма.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source>The following table shows the valid values for the <bpt id="p1">&lt;c&gt;</bpt>hashName<ept id="p1">&lt;/c&gt;</ept> parameter and the algorithms they map to.</source>
          <target state="translated">В следующей таблице представлены допустимые значения параметра <bpt id="p1">&lt;c&gt;</bpt>hashName<ept id="p1">&lt;/c&gt;</ept> и алгоритмы, с которыми они сопоставляются.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Parameter value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Значение параметра</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Implements</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Реализует</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> SHA</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> SHA</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA1</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA1</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.SHA1</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.SHA1</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.HashAlgorithm</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.HashAlgorithm</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> MD5</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> MD5</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.MD5</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.MD5</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA256</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA256</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA256Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA-256</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA256Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA-256</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA256Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.SHA256</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA256Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.SHA256</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA256Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA384</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA256Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA384</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA-384</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA-384</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.SHA384</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.SHA384</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA512</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA512</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA512Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA-512</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA512Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA-512</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA512Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.SHA512</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA512Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.SHA512</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source>Creates an instance of the specified implementation of a hash algorithm.</source>
          <target state="translated">Создает экземпляр заданной реализации хэш-алгоритма.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source>A new instance of the specified hash algorithm, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="hashName" /&gt;</ph> is not a valid hash algorithm.</source>
          <target state="translated">Новый экземпляр заданного хэш-алгоритма или значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>, если <ph id="ph2">&lt;paramref name="hashName" /&gt;</ph> не является допустимым хэш-алгоритмом.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> class.</source>
          <target state="translated">Освобождает все ресурсы, используемые текущим экземпляром класса <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> class.</source>
          <target state="translated">Освобождает все ресурсы, используемые текущим экземпляром класса <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>.</source>
          <target state="translated">Вызовите метод <ph id="ph1">`Dispose`</ph> по окончании использования класса <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> in an unusable state.</source>
          <target state="translated">Метод <ph id="ph1">`Dispose`</ph> оставляет класс <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> в непригодном для использования состоянии.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> was occupying.</source>
          <target state="translated">После вызова метода <ph id="ph1">`Dispose`</ph>, необходимо освободить все ссылки на <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> , сборщик мусора мог освободить память, <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> занимаемую.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>очистки неуправляемых ресурсов<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> и <bpt id="p2">[</bpt>метода<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>.</source>
          <target state="translated">Всегда вызывайте метод <ph id="ph1">`Dispose`</ph> перед освобождением последней ссылки на класс <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> метод <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <ph id="ph2">&lt;see langword="false" /&gt;</ph> освобождает только неуправляемые ресурсы.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Освобождает неуправляемые ресурсы, используемые объектом <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph>, а при необходимости освобождает также управляемые ресурсы.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Этот метод вызывается методом открытые <ph id="ph1">`Dispose()`</ph> метод и <ph id="ph2">`Finalize`</ph> метод.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> вызывает защищенный <ph id="ph2">`Dispose(Boolean)`</ph> метод с <ph id="ph3">`disposing`</ph> равным <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> вызывает <ph id="ph2">`Dispose`</ph> с <ph id="ph3">`disposing`</ph> значение <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> references.</source>
          <target state="translated">Если параметр <ph id="ph1">`disposing`</ph> имеет значение <ph id="ph2">`true`</ph>, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Этот метод вызывает метод <ph id="ph1">`Dispose()`</ph> каждого объекта, на который есть ссылка.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> может вызываться несколько раз другими объектами.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">При переопределении метода <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о реализации <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, в разделе <bpt id="p1">[</bpt>метода<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> и <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, в разделе <bpt id="p1">[</bpt>очистки неуправляемых ресурсов<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <source>Gets the value of the computed hash code.</source>
          <target state="translated">Возвращает значение вычисляемого хэш-кода.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <source>The current value of the computed hash code.</source>
          <target state="translated">Текущее значение вычисляемого хэш-кода.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph> property is a byte array; the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</ph> property is a value that represent bits.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph> Свойство — массив байтов; <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</ph> значение свойства представляют bits.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <source>Therefore, the number of elements in <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph> is one-eighth the size of <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</ph>.</source>
          <target state="translated">Таким образом, число элементов в <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph> одной восьмой размер <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <source><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.HashAlgorithm.HashValue" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.HashAlgorithm.HashValue" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <source>The object has already been disposed.</source>
          <target state="translated">Объект уже удален.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>The input to compute the hash code for.</source>
          <target state="translated">Входные данные, для которых вычисляется хэш-код.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">Смещение в массиве байтов, начиная с которого следует использовать данные.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">Число байтов в массиве для использования в качестве данных.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, routes data written to the object into the hash algorithm for computing the hash.</source>
          <target state="translated">Если переопределено в производном классе, передает данные, записанные в объект, на вход хэш-алгоритма для вычисления хэша.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>This method is not called by application code.</source>
          <target state="translated">Этот метод не вызывается кодом приложения.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>This abstract method performs the hash computation.</source>
          <target state="translated">Этот абстрактный метод выполняет вычисление хэша.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>Every write to the cryptographic stream object passes the data through this method.</source>
          <target state="translated">Каждая операция записи в криптографический потоковый объект передает данные с помощью этого метода.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.</source>
          <target state="translated">Для каждого блока данных этот метод обновляет состояние хэш-объекта, поэтому правильное значение хэша возвращается в конце потока данных.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.HashFinal">
          <source>When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</source>
          <target state="translated">Если переопределено в производном классе, завершает вычисление хэша после обработки последних данных криптографическим потоковым объектом.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.HashFinal">
          <source>The computed hash code.</source>
          <target state="translated">Вычисляемый хэш-код.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.HashFinal">
          <source>This method finalizes any partial computation and returns the correct hash value for the data stream.</source>
          <target state="translated">Этот метод завершает все частичные вычисления и возвращает правильное значение хэша для потока данных.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.HashSize">
          <source>Gets the size, in bits, of the computed hash code.</source>
          <target state="translated">Возвращает размер вычисляемого хэш-кода в битах.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.HashSize">
          <source>The size, in bits, of the computed hash code.</source>
          <target state="translated">Размер вычисляемого хэш-кода в битах.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue">
          <source>Represents the size, in bits, of the computed hash code.</source>
          <target state="translated">Представляет размер вычисляемого хэш-кода в битах.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue">
          <source>The hash algorithm specifies the size of the hash code.</source>
          <target state="translated">Хэш-алгоритм, размер хэш-кода.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue">
          <source>For example, <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> uses a hash size of 160 bits.</source>
          <target state="translated">Например <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> использует хеш размером 160 бит.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue">
          <source>This field is accessed through the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</ph> property.</source>
          <target state="translated">Это поле можно получить с помощью <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.HashAlgorithm.HashValue">
          <source>Represents the value of the computed hash code.</source>
          <target state="translated">Представляет значение вычисляемого хэш-кода.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.HashAlgorithm.HashValue">
          <source>This field is accessed through the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph> property.</source>
          <target state="translated">Это поле можно получить с помощью <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <source>Initializes an implementation of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует реализацию класса <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize">
          <source>When overridden in a derived class, gets the input block size.</source>
          <target state="translated">Если переопределено в производном классе, возвращает размер входного блока.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize">
          <source>The input block size.</source>
          <target state="translated">Размер входного блока.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize">
          <source>Unless overridden, this property returns the value 1.</source>
          <target state="translated">Если это не переопределено, это свойство возвращает значение 1.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize">
          <source>When overridden in a derived class, gets the output block size.</source>
          <target state="translated">Если переопределено в производном классе, возвращает размер выходного блока.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize">
          <source>The output block size.</source>
          <target state="translated">Размер выходного блока.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize">
          <source>Unless overridden, this property returns the value 1.</source>
          <target state="translated">Если это не переопределено, это свойство возвращает значение 1.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.HashAlgorithm.State">
          <source>Represents the state of the hash computation.</source>
          <target state="translated">Представляет состояние процесса вычисления хэша.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.HashAlgorithm.State">
          <source>This field is used to prevent users from changing the key of a keyed hash algorithm during a hash operation.</source>
          <target state="translated">Это поле используется, чтобы запретить пользователям изменять во время операции хэширования ключа хэш-алгоритма.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.HashAlgorithm.State">
          <source>When a key change is legitimate, the value of this field is zero both before and after a hash operation.</source>
          <target state="translated">Если изменение ключа является законным, значение этого поля равно нулю до и после хэширования.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.HashAlgorithm.State">
          <source>When a key change is not legitimate, the value of this field is nonzero.</source>
          <target state="translated">Если изменение ключа не является законным, значением этого поля имеет ненулевое значение.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The input to compute the hash code for.</source>
          <target state="translated">Входные данные, для которых вычисляется хэш-код.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the input byte array from which to begin using data.</source>
          <target state="translated">Смещение во входном массиве байтов, начиная с которого следует использовать данные.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes in the input byte array to use as data.</source>
          <target state="translated">Число байтов во входном массиве для использования в качестве данных.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>A copy of the part of the input array used to compute the hash code.</source>
          <target state="translated">Копия части входного массива, используемого для вычисления хэш-кода.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the output byte array from which to begin writing data.</source>
          <target state="translated">Смещение в выходном массиве байтов, начиная с которого следует записывать данные.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Computes the hash value for the specified region of the input byte array and copies the specified region of the input byte array to the specified region of the output byte array.</source>
          <target state="translated">Вычисляет хэш-значение для заданной области входного массива байтов и копирует указанную область входного массива байтов в заданную область выходного массива байтов.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes written.</source>
          <target state="translated">Число записанных байтов.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph> method before calling the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> method.</source>
          <target state="translated">Необходимо вызвать <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph> метод перед вызовом метода <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>You must call both methods before you retrieve the final hash value.</source>
          <target state="translated">Оба метода необходимо вызывать перед получением окончательного хэш-значения.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To retrieve the final hash value after calling the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> method, get the byte array contained within the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph> property.</source>
          <target state="translated">Для получения окончательного хэш-значения после вызова <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> метода получения массива байтов, содержащихся в <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph> method with different input and output arrays results in an <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph>.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph> методов с различные входных и выходных массивов <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following code examples use the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph> method to hash a string.</source>
          <target state="translated">В следующем примере кода используются <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> метод с <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph> метод для хэш-строку.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> uses an invalid value.</source>
          <target state="translated">Недопустимое значение параметра <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> has an invalid length.</source>
          <target state="translated">Недопустимая длина значения параметра <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> выходит за пределы диапазона.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">Значение этого параметра не должно быть отрицательным.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The object has already been disposed.</source>
          <target state="translated">Объект уже удален.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The input to compute the hash code for.</source>
          <target state="translated">Входные данные, для которых вычисляется хэш-код.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">Смещение в массиве байтов, начиная с которого следует использовать данные.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">Число байтов в массиве для использования в качестве данных.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>Computes the hash value for the specified region of the specified byte array.</source>
          <target state="translated">Вычисляет хэш-значение для заданной области заданного массива байтов.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>An array that is a copy of the part of the input that is hashed.</source>
          <target state="translated">Массив, который является копией хэшируемой части входных данных.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> method after calling the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph> method but before you retrieve the final hash value.</source>
          <target state="translated">Необходимо вызвать <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> метод после вызова <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph> метода, но до получения окончательного хэш-значения.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>Note that the return value of this method is not the hash value, but only a copy of the hashed part of the input data.</source>
          <target state="translated">Обратите внимание, что возвращаемое значение этого метода не хэш-значения, но только копией хэшируемой части входных данных.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>To retrieve the final hashed value after calling the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> method, get the byte array contained in the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph> property.</source>
          <target state="translated">Чтобы получить конечное значение хэша после вызова <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> метод, get, содержащихся в массив байтов в <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The following code examples use the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph> method to hash a string.</source>
          <target state="translated">В следующем примере кода используются <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> метод с <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph> метод для хэш-строку.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> uses an invalid value.</source>
          <target state="translated">Недопустимое значение параметра <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> has an invalid offset length.</source>
          <target state="translated">Для параметра <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> задано недопустимое смещение.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> выходит за пределы диапазона.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">Значение этого параметра не должно быть отрицательным.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The object has already been disposed.</source>
          <target state="translated">Объект уже удален.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>