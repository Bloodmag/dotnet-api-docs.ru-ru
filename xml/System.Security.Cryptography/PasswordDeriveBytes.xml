<Type Name="PasswordDeriveBytes" FullName="System.Security.Cryptography.PasswordDeriveBytes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="114473ac3aded1fedb136d53f48725f47b5ea62e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PasswordDeriveBytes : System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PasswordDeriveBytes extends System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.PasswordDeriveBytes" />
  <TypeSignature Language="VB.NET" Value="Public Class PasswordDeriveBytes&#xA;Inherits DeriveBytes" />
  <TypeSignature Language="C++ CLI" Value="public ref class PasswordDeriveBytes : System::Security::Cryptography::DeriveBytes" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DeriveBytes</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7f2d4-101">Формирует ключ из пароля с помощью расширения алгоритма PBKDF1.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7f2d4-101">Derives a key from a password using an extension of the PBKDF1 algorithm.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d4-102">Этот класс использует расширения алгоритма PBKDF1, определенные в стандартных PKCS 5 v2.0 для получения байтов, который подходит для использования в качестве ключа из пароля.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-102">This class uses an extension of the PBKDF1 algorithm defined in the PKCS#5 v2.0 standard to derive bytes suitable for use as key material from a password.</span></span> <span data-ttu-id="7f2d4-103">Описание стандарта.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-103">The standard is documented in IETF RRC 2898.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7f2d4-104">Не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-104">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="7f2d4-105">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) средство, или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-105">Hard coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f2d4-106">В следующем примере кода создает ключ из пароля с помощью <xref:System.Security.Cryptography.PasswordDeriveBytes> класса.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-106">The following code example creates a key from a password using the <xref:System.Security.Cryptography.PasswordDeriveBytes> class.</span></span>  
  
 [!code-cpp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/CS/sample.cs#1)]
 [!code-vb[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d4-107">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-107">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (byte[] password, byte[] salt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="7f2d4-108">Пароль, используемый для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-108">The password to derive the key for.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="7f2d4-109">Соль ключа, используемая для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-109">The key salt to use to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d4-110">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем и солью ключа, которые используются для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class specifying the password and key salt to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="7f2d4-111">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-111">Never hard code a password within your source code.</span></span>  <span data-ttu-id="7f2d4-112">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-112">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f2d4-113">В следующем примере кода создает ключ из пароля с помощью <xref:System.Security.Cryptography.PasswordDeriveBytes> класса.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-113">The following code example creates a key from a password using the <xref:System.Security.Cryptography.PasswordDeriveBytes> class.</span></span>  
  
 [!code-cpp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/CS/sample.cs#1)]
 [!code-vb[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (string strPassword, byte[] rgbSalt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strPassword, unsigned int8[] rgbSalt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strPassword As String, rgbSalt As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(System::String ^ strPassword, cli::array &lt;System::Byte&gt; ^ rgbSalt);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strPassword" Type="System.String" />
        <Parameter Name="rgbSalt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="strPassword">
          <span data-ttu-id="7f2d4-114">Пароль, используемый для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-114">The password for which to derive the key.</span>
          </span>
        </param>
        <param name="rgbSalt">
          <span data-ttu-id="7f2d4-115">Соль ключа, используемая для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-115">The key salt to use to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d4-116">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем и солью ключа, которые используются для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class with the password and key salt to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="7f2d4-117">Не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-117">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="7f2d4-118">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) средство, или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-118">Hard coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (byte[] password, byte[] salt, System.Security.Cryptography.CspParameters cspParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, class System.Security.Cryptography.CspParameters cspParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), cspParams As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, System::Security::Cryptography::CspParameters ^ cspParams);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="cspParams" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="7f2d4-119">Пароль, используемый для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-119">The password to derive the key for.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="7f2d4-120">Соль ключа, используемая для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-120">The key salt to use to derive the key.</span>
          </span>
        </param>
        <param name="cspParams">
          <span data-ttu-id="7f2d4-121">Параметры поставщика служб шифрования (CSP) для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-121">The cryptographic service provider (CSP) parameters for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d4-122">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем, солью ключа и параметрами поставщика служб шифрования (CSP), которые используются для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class specifying the password, key salt, and cryptographic service provider (CSP) to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="7f2d4-123">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-123">Never hard code a password within your source code.</span></span>  <span data-ttu-id="7f2d4-124">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) l, шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-124">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) l, a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f2d4-125">В следующем примере кода создает ключ из пароля с помощью <xref:System.Security.Cryptography.PasswordDeriveBytes> класса.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-125">The following code example creates a key from a password using the <xref:System.Security.Cryptography.PasswordDeriveBytes> class.</span></span>  
  
 [!code-cpp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/CS/sample.cs#1)]
 [!code-vb[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (string strPassword, byte[] rgbSalt, System.Security.Cryptography.CspParameters cspParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strPassword, unsigned int8[] rgbSalt, class System.Security.Cryptography.CspParameters cspParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strPassword As String, rgbSalt As Byte(), cspParams As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(System::String ^ strPassword, cli::array &lt;System::Byte&gt; ^ rgbSalt, System::Security::Cryptography::CspParameters ^ cspParams);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strPassword" Type="System.String" />
        <Parameter Name="rgbSalt" Type="System.Byte[]" />
        <Parameter Name="cspParams" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="strPassword">
          <span data-ttu-id="7f2d4-126">Пароль, используемый для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-126">The password for which to derive the key.</span>
          </span>
        </param>
        <param name="rgbSalt">
          <span data-ttu-id="7f2d4-127">Соль ключа, используемая для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-127">The key salt to use to derive the key.</span>
          </span>
        </param>
        <param name="cspParams">
          <span data-ttu-id="7f2d4-128">Параметры CSP для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-128">The CSP parameters for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d4-129">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем, солью ключа и параметрами поставщика служб шифрования (CSP), которые используются для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-129">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class with the password, key salt, and cryptographic service provider (CSP) parameters to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="7f2d4-130">Не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-130">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="7f2d4-131">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) средство, или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-131">Hard coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (byte[] password, byte[] salt, string hashName, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, string hashName, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), hashName As String, iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, System::String ^ hashName, int iterations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="hashName" Type="System.String" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="7f2d4-132">Пароль, используемый для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-132">The password to derive the key for.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="7f2d4-133">Соль ключа, используемая для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-133">The key salt to use to derive the key.</span>
          </span>
        </param>
        <param name="hashName">
          <span data-ttu-id="7f2d4-134">Имя хэш-алгоритма, используемое для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-134">The hash algorithm to use to derive the key.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="7f2d4-135">Число итераций для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-135">The iteration count to use to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d4-136">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем, солью ключа, именем хэша и числом итераций, которые используются для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-136">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class specifying the password, key salt, hash name, and iterations to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="7f2d4-137">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-137">Never hard code a password within your source code.</span></span>  <span data-ttu-id="7f2d4-138">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-138">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="7f2d4-139">Список имен алгоритмов хэширования см. в разделе <xref:System.Security.Cryptography.CryptoConfig> класса.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-139">For a list of hash algorithm names, see the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.CryptoConfig" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (string strPassword, byte[] rgbSalt, string strHashName, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strPassword, unsigned int8[] rgbSalt, string strHashName, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strPassword As String, rgbSalt As Byte(), strHashName As String, iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(System::String ^ strPassword, cli::array &lt;System::Byte&gt; ^ rgbSalt, System::String ^ strHashName, int iterations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strPassword" Type="System.String" />
        <Parameter Name="rgbSalt" Type="System.Byte[]" />
        <Parameter Name="strHashName" Type="System.String" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="strPassword">
          <span data-ttu-id="7f2d4-140">Пароль, используемый для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-140">The password for which to derive the key.</span>
          </span>
        </param>
        <param name="rgbSalt">
          <span data-ttu-id="7f2d4-141">Соль ключа, используемая для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-141">The key salt to use to derive the key.</span>
          </span>
        </param>
        <param name="strHashName">
          <span data-ttu-id="7f2d4-142">Имя хэш-алгоритма для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-142">The name of the hash algorithm for the operation.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="7f2d4-143">Число итераций для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-143">The number of iterations for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d4-144">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем, солью ключа, именем хэша и числом итераций, которые используются для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-144">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class with the password, key salt, hash name, and number of iterations to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="7f2d4-145">Не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-145">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="7f2d4-146">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) средство, или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-146">Hard coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</span></span>  
  
 <span data-ttu-id="7f2d4-147">Список имен алгоритмов хэширования см. в разделе <xref:System.Security.Cryptography.CryptoConfig> класса.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-147">For a list of hash algorithm names, see the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.CryptoConfig" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (byte[] password, byte[] salt, string hashName, int iterations, System.Security.Cryptography.CspParameters cspParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, string hashName, int32 iterations, class System.Security.Cryptography.CspParameters cspParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), hashName As String, iterations As Integer, cspParams As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, System::String ^ hashName, int iterations, System::Security::Cryptography::CspParameters ^ cspParams);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="hashName" Type="System.String" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="cspParams" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="7f2d4-148">Пароль, используемый для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-148">The password to derive the key for.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="7f2d4-149">Соль ключа, используемая для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-149">The key salt to use to derive the key.</span>
          </span>
        </param>
        <param name="hashName">
          <span data-ttu-id="7f2d4-150">Имя хэш-алгоритма, используемое для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-150">The hash algorithm to use to derive the key.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="7f2d4-151">Число итераций для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-151">The iteration count to use to derive the key.</span>
          </span>
        </param>
        <param name="cspParams">
          <span data-ttu-id="7f2d4-152">Параметры поставщика служб шифрования (CSP) для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-152">The cryptographic service provider (CSP) parameters for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d4-153">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем, солью ключа, именем хэша, числом итераций и параметрами поставщика служб шифрования (CSP), которые используются для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-153">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class specifying the password, key salt, hash name, iterations, and cryptographic service provider (CSP) to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="7f2d4-154">Никогда не вписывать пароль в исходный код.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-154">Never hard code a password within your source code.</span></span>  <span data-ttu-id="7f2d4-155">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-155">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="7f2d4-156">Список имен алгоритмов хэширования см. в разделе <xref:System.Security.Cryptography.CryptoConfig> класса.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-156">For a list of hash algorithm names, see the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.CryptoConfig" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (string strPassword, byte[] rgbSalt, string strHashName, int iterations, System.Security.Cryptography.CspParameters cspParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strPassword, unsigned int8[] rgbSalt, string strHashName, int32 iterations, class System.Security.Cryptography.CspParameters cspParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strPassword As String, rgbSalt As Byte(), strHashName As String, iterations As Integer, cspParams As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(System::String ^ strPassword, cli::array &lt;System::Byte&gt; ^ rgbSalt, System::String ^ strHashName, int iterations, System::Security::Cryptography::CspParameters ^ cspParams);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strPassword" Type="System.String" />
        <Parameter Name="rgbSalt" Type="System.Byte[]" />
        <Parameter Name="strHashName" Type="System.String" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="cspParams" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="strPassword">
          <span data-ttu-id="7f2d4-157">Пароль, используемый для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-157">The password for which to derive the key.</span>
          </span>
        </param>
        <param name="rgbSalt">
          <span data-ttu-id="7f2d4-158">Соль ключа, используемая для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-158">The key salt to use to derive the key.</span>
          </span>
        </param>
        <param name="strHashName">
          <span data-ttu-id="7f2d4-159">Имя хэш-алгоритма для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-159">The name of the hash algorithm for the operation.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="7f2d4-160">Число итераций для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-160">The number of iterations for the operation.</span>
          </span>
        </param>
        <param name="cspParams">
          <span data-ttu-id="7f2d4-161">Параметры CSP для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-161">The CSP parameters for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d4-162">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> паролем, солью ключа, именем хэша, числом итераций и параметрами поставщика служб шифрования (CSP), которые используются для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-162">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class with the password, key salt, hash name, number of iterations, and cryptographic service provider (CSP) parameters to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="7f2d4-163">Не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-163">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="7f2d4-164">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) средство, или шестнадцатеричного редактора, либо открыв сборку в текстовом редакторе, например notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-164">Hard coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</span></span>  
  
 <span data-ttu-id="7f2d4-165">Список имен алгоритмов хэширования см. в разделе <xref:System.Security.Cryptography.CryptoConfig> класса.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-165">For a list of hash algorithm names, see the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.CryptoConfig" />
      </Docs>
    </Member>
    <Member MemberName="CryptDeriveKey">
      <MemberSignature Language="C#" Value="public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] CryptDeriveKey(string algname, string alghashname, int32 keySize, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CryptDeriveKey (algname As String, alghashname As String, keySize As Integer, rgbIV As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ CryptDeriveKey(System::String ^ algname, System::String ^ alghashname, int keySize, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algname" Type="System.String" />
        <Parameter Name="alghashname" Type="System.String" />
        <Parameter Name="keySize" Type="System.Int32" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algname">
          <span data-ttu-id="7f2d4-166">Имя алгоритма, используемого для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-166">The algorithm name for which to derive the key.</span>
          </span>
        </param>
        <param name="alghashname">
          <span data-ttu-id="7f2d4-167">Имя хэш-алгоритма, используемого для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-167">The hash algorithm name to use to derive the key.</span>
          </span>
        </param>
        <param name="keySize">
          <span data-ttu-id="7f2d4-168">Размер формируемого ключа в битах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-168">The size of the key, in bits, to derive.</span>
          </span>
        </param>
        <param name="rgbIV">
          <span data-ttu-id="7f2d4-169">Вектор инициализации, используемый для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-169">The initialization vector (IV) to use to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d4-170">Возвращает криптографический ключ из объекта <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-170">Derives a cryptographic key from the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f2d4-171">Сформированный ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-171">The derived key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d4-172">Эта функция представляет собой оболочку для функции Crypto API CryptDeriveKey() и предназначена для обеспечения взаимодействия с приложениями с помощью API-Интерфейс шифрования.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-172">This function is a wrapper for the Crypto API function CryptDeriveKey(), and is intended to offer interoperability with applications using the Crypto API.</span></span>  
  
 <span data-ttu-id="7f2d4-173">Если `keySize` параметр установлен в 0, используется размер ключа по умолчанию для указанного алгоритма.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-173">If the `keySize` parameter is set to 0 bits, the default key size for the specified algorithm is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f2d4-174">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.Cryptography.PasswordDeriveBytes> класса.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-174">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.PasswordDeriveBytes> class.</span></span>  
  
 [!code-cpp[Cryptography.PasswordDerivedbytes#2](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/cpp/sample.cpp#2)]
 [!code-csharp[Cryptography.PasswordDerivedbytes#2](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/CS/sample.cs#2)]
 [!code-vb[Cryptography.PasswordDerivedbytes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/VB/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="7f2d4-175">Параметр <paramref name="keySize" /> является неверным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-175">The <paramref name="keySize" /> parameter is incorrect.</span>
          </span>
          <span data-ttu-id="7f2d4-176">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-176">-or-</span>
          </span>
          <span data-ttu-id="7f2d4-177">Не удалось получить поставщик служб шифрования (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-177">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="7f2d4-178">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-178">-or-</span>
          </span>
          <span data-ttu-id="7f2d4-179">Значение параметра <paramref name="algname" /> не является допустимым именем алгоритма.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-179">The <paramref name="algname" /> parameter is not a valid algorithm name.</span>
          </span>
          <span data-ttu-id="7f2d4-180">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-180">-or-</span>
          </span>
          <span data-ttu-id="7f2d4-181">Значение параметра <paramref name="alghashname" /> не является допустимым именем хэш-алгоритма.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-181">The <paramref name="alghashname" /> parameter is not a valid hash algorithm name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="7f2d4-182">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-182">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d4-183">Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> (при необходимости освобождает и управляемые ресурсы).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-183">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d4-184">Этот метод вызывается методом открытые `Dispose()` метод и `Finalize` метод.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-184">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="7f2d4-185">`Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-185">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="7f2d4-186">`Finalize` вызывает `Dispose` с `disposing` значение `false`.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-186">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="7f2d4-187">Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.Security.Cryptography.PasswordDeriveBytes>.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-187">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.PasswordDeriveBytes> references.</span></span> <span data-ttu-id="7f2d4-188">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-188">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="7f2d4-189">Метод <see langword="Dispose" /> может вызываться несколько раз другими объектами.</span>
            <span class="sxs-lookup">
              <span data-stu-id="7f2d4-189">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="7f2d4-190">При переопределении метода <see langword="Dispose(Boolean)" />нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="7f2d4-190">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="7f2d4-191">Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />, в разделе [метода](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="7f2d4-191">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="7f2d4-192">Дополнительные сведения о <see langword="Dispose" /> и <see langword="Finalize" />, в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="7f2d4-192">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.GetBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (cb As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(int cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Rfc2898DeriveBytes replaces PasswordDeriveBytes for deriving key material from a password and is preferred in new applications.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="7f2d4-193">Число генерируемых псевдослучайных байтов ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-193">The number of pseudo-random key bytes to generate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d4-194">Возвращает псевдослучайные байты ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-194">Returns pseudo-random key bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f2d4-195">Массив байтов, заполненный псевдослучайными байтами ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-195">A byte array filled with pseudo-random key bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d4-196">Этот метод можно создать любое число псевдослучайных байтов.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-196">This method can create any number of pseudo-random bytes.</span></span> <span data-ttu-id="7f2d4-197">Тем не менее стойкость последовательности байтов, ограничено число байтов в выходном хэше.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-197">However, the strength of the byte sequence is limited by the number of bytes in the hash output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.PasswordDeriveBytes.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d4-198">Возвращает или задает имя хэш-алгоритма для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-198">Gets or sets the name of the hash algorithm for the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2d4-199">Имя хэш-алгоритма для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-199">The name of the hash algorithm for the operation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="7f2d4-200">Имя хэш-алгоритма является фиксированным, и предпринята попытка изменить это значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-200">The name of the hash value is fixed and an attempt is made to change this value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IterationCount">
      <MemberSignature Language="C#" Value="public int IterationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IterationCount" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.PasswordDeriveBytes.IterationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IterationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IterationCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d4-201">Возвращает или задает число итераций для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-201">Gets or sets the number of iterations for the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2d4-202">Число итераций для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-202">The number of iterations for the operation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="7f2d4-203">Число итераций является фиксированным, и предпринята попытка изменить это значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-203">The number of iterations is fixed and an attempt is made to change this value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7f2d4-204">Невозможно задать свойство, поскольку его значение находится вне диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-204">The property cannot be set because its value is out of range.</span>
          </span>
          <span data-ttu-id="7f2d4-205">Значение этого свойства не должно быть отрицательным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-205">This property requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7f2d4-206">Восстанавливает состояние данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-206">Resets the state of the operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Salt">
      <MemberSignature Language="C#" Value="public byte[] Salt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Salt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.PasswordDeriveBytes.Salt" />
      <MemberSignature Language="VB.NET" Value="Public Property Salt As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Salt { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d4-207">Возвращает или задает значение соли ключа для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-207">Gets or sets the key salt value for the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2d4-208">Значение соли ключа для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-208">The key salt value for the operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d4-209">Атака перебором по словарю — это атака, при которой злоумышленник пытается расшифровать зашифрованное сообщение, сравнивая зашифрованное значение с ранее вычисленными зашифрованными значениями для наиболее вероятных ключей.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-209">A dictionary attack is an attack in which the attacker attempts to decrypt an encrypted message by comparing the encrypted value with previously computed encrypted values for the most likely keys.</span></span> <span data-ttu-id="7f2d4-210">Такая атака становится гораздо сложнее при введении случайные байты в конце пароль перед производного ключа.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-210">This attack is made much more difficult by the introduction of random bytes at the end of the password before the key derivation.</span></span> <span data-ttu-id="7f2d4-211">Эти случайные байты называются расширяющего значения.</span><span class="sxs-lookup"><span data-stu-id="7f2d4-211">These random bytes are known as salt.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="7f2d4-212">Значение ключевой привязки является фиксированным, и предпринята попытка изменить это значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d4-212">The key salt value is fixed and an attempt is made to change this value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>