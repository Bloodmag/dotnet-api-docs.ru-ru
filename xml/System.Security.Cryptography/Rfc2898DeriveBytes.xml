<Type Name="Rfc2898DeriveBytes" FullName="System.Security.Cryptography.Rfc2898DeriveBytes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e285ca1271a28895045fb33d43ebf5e6709370cf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Rfc2898DeriveBytes : System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Rfc2898DeriveBytes extends System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Rfc2898DeriveBytes" />
  <TypeSignature Language="VB.NET" Value="Public Class Rfc2898DeriveBytes&#xA;Inherits DeriveBytes" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rfc2898DeriveBytes : System::Security::Cryptography::DeriveBytes" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DeriveBytes</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="95e9b-101">Реализует функцию формирования ключа на основе пароля (PBKDF2) посредством генератора псевдослучайных чисел <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="95e9b-101">Implements password-based key derivation functionality, PBKDF2, by using a pseudo-random number generator based on <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e9b-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> принимает пароль, расширяющее значение и число итераций и затем создает ключи с помощью вызовов <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="95e9b-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span>  
  
 <span data-ttu-id="95e9b-103">RFC 2898 включает методы для создания из паролем и солью ключа и вектора инициализации (IV).</span><span class="sxs-lookup"><span data-stu-id="95e9b-103">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="95e9b-104">PBKDF2 функцию формирования ключа на основе пароля, можно использовать для получения ключей с помощью функции псевдослучайных ключи практически неограниченной длины должен быть создан.</span><span class="sxs-lookup"><span data-stu-id="95e9b-104">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="95e9b-105"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Класс может использоваться для создания производного ключа из базовой ключ и другие параметры.</span><span class="sxs-lookup"><span data-stu-id="95e9b-105">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="95e9b-106">В функцию формирования ключа на основе пароля базового ключа выступает пароль, а остальные параметры являются расширяющее значение и число итераций.</span><span class="sxs-lookup"><span data-stu-id="95e9b-106">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="95e9b-107">Дополнительные сведения о PBKDF2 RFC 2898 в разделе «PKCS #5: паролю шифрования спецификация версии 2.0,» на [запроса веб-сайте](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="95e9b-107">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="95e9b-108">В разделе 5.2, «PBKDF2» для получения подробной информации.</span><span class="sxs-lookup"><span data-stu-id="95e9b-108">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95e9b-109">Не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="95e9b-109">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="95e9b-110">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), с помощью редактора, шестнадцатеричном или открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="95e9b-110">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e9b-111">Следующий пример кода использует <xref:System.Security.Cryptography.Rfc2898DeriveBytes> класс для создания двух идентичных ключи для <xref:System.Security.Cryptography.TripleDES> класса.</span><span class="sxs-lookup"><span data-stu-id="95e9b-111">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="95e9b-112">Затем она шифрует и расшифровывает некоторых данных с использованием ключей.</span><span class="sxs-lookup"><span data-stu-id="95e9b-112">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95e9b-113">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="95e9b-114">Пароль, используемый для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-114">The password used to derive the key.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="95e9b-115">Соль, используемая для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-115">The key salt used to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95e9b-116">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />, используя пароль и соль для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password and salt to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e9b-117">Размер расширяющего значения должен быть 8 байт или больше.</span><span class="sxs-lookup"><span data-stu-id="95e9b-117">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="95e9b-118">RFC 2898 включает методы для создания из паролем и солью ключа и вектора инициализации (IV).</span><span class="sxs-lookup"><span data-stu-id="95e9b-118">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="95e9b-119">PBKDF2 функцию формирования ключа на основе пароля, можно использовать для получения ключей с помощью функции псевдослучайных ключи практически неограниченной длины должен быть создан.</span><span class="sxs-lookup"><span data-stu-id="95e9b-119">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="95e9b-120"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Класс может использоваться для создания производного ключа из базовой ключ и другие параметры.</span><span class="sxs-lookup"><span data-stu-id="95e9b-120">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="95e9b-121">В функцию формирования ключа на основе пароля базового ключа выступает пароль, а остальные параметры являются расширяющее значение и число итераций.</span><span class="sxs-lookup"><span data-stu-id="95e9b-121">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="95e9b-122">Дополнительные сведения о PBKDF2 RFC 2898 в разделе «PKCS #5: паролю шифрования спецификация версии 2.0,» на [запроса веб-сайте](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="95e9b-122">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="95e9b-123">В разделе 5.2, «PBKDF2» для получения подробной информации.</span><span class="sxs-lookup"><span data-stu-id="95e9b-123">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95e9b-124">Не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="95e9b-124">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="95e9b-125">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), с помощью редактора, шестнадцатеричном или открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="95e9b-125">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e9b-126">Следующий пример кода использует <xref:System.Security.Cryptography.Rfc2898DeriveBytes> класс для создания двух идентичных ключи для <xref:System.Security.Cryptography.TripleDES> класса.</span><span class="sxs-lookup"><span data-stu-id="95e9b-126">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="95e9b-127">Затем она шифрует и расшифровывает некоторых данных с использованием ключей.</span><span class="sxs-lookup"><span data-stu-id="95e9b-127">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95e9b-128">Размер указанного расширяющего значения менее 8 байт, а число итераций менее 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-128">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95e9b-129">Пароль или расширяющее значение равны <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-129">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="95e9b-130">Пароль, используемый для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-130">The password used to derive the key.</span>
          </span>
        </param>
        <param name="saltSize">
          <span data-ttu-id="95e9b-131">Размер произвольной соли, которую должен создать класс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-131">The size of the random salt that you want the class to generate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95e9b-132">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />, используя пароль и соль для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the password and salt size to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e9b-133">Размер расширяющего значения должен быть 8 байт или больше.</span><span class="sxs-lookup"><span data-stu-id="95e9b-133">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="95e9b-134">RFC 2898 включает методы для создания из паролем и солью ключа и вектора инициализации (IV).</span><span class="sxs-lookup"><span data-stu-id="95e9b-134">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="95e9b-135">PBKDF2 функцию формирования ключа на основе пароля, можно использовать для получения ключей с помощью функции псевдослучайных ключи практически неограниченной длины должен быть создан.</span><span class="sxs-lookup"><span data-stu-id="95e9b-135">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="95e9b-136"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Класс может использоваться для создания производного ключа из базовой ключ и другие параметры.</span><span class="sxs-lookup"><span data-stu-id="95e9b-136">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="95e9b-137">В функцию формирования ключа на основе пароля базового ключа выступает пароль, а остальные параметры являются расширяющее значение и число итераций.</span><span class="sxs-lookup"><span data-stu-id="95e9b-137">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="95e9b-138">Дополнительные сведения о PBKDF2 RFC 2898 в разделе «PKCS #5: паролю шифрования спецификация версии 2.0,» на [запроса веб-сайте](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="95e9b-138">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="95e9b-139">В разделе 5.2, «PBKDF2» для получения подробной информации.</span><span class="sxs-lookup"><span data-stu-id="95e9b-139">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95e9b-140">Не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="95e9b-140">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="95e9b-141">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), с помощью редактора, шестнадцатеричном или открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="95e9b-141">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95e9b-142">Указанный размер расширяющего значения менее 8 байт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-142">The specified salt size is smaller than 8 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95e9b-143">Пароль или расширяющее значение равны <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-143">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="95e9b-144">Пароль, используемый для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-144">The password used to derive the key.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="95e9b-145">Соль, используемая для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-145">The key salt used to derive the key.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="95e9b-146">Число итераций для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-146">The number of iterations for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95e9b-147">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />, используя пароль, расширяющее значение и число итераций для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-147">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e9b-148">Размер расширяющего значения должен быть 8 байт или большего размера и количества итераций должно быть больше нуля.</span><span class="sxs-lookup"><span data-stu-id="95e9b-148">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="95e9b-149">Рекомендуемое минимальное число итераций равно 1000.</span><span class="sxs-lookup"><span data-stu-id="95e9b-149">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="95e9b-150">RFC 2898 включает методы для создания из паролем и солью ключа и вектора инициализации (IV).</span><span class="sxs-lookup"><span data-stu-id="95e9b-150">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="95e9b-151">PBKDF2 функцию формирования ключа на основе пароля, можно использовать для получения ключей с помощью функции псевдослучайных ключи практически неограниченной длины должен быть создан.</span><span class="sxs-lookup"><span data-stu-id="95e9b-151">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="95e9b-152"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Класс может использоваться для создания производного ключа из базовой ключ и другие параметры.</span><span class="sxs-lookup"><span data-stu-id="95e9b-152">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="95e9b-153">В функцию формирования ключа на основе пароля базового ключа выступает пароль, а остальные параметры являются расширяющее значение и число итераций.</span><span class="sxs-lookup"><span data-stu-id="95e9b-153">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="95e9b-154">Дополнительные сведения о PBKDF2 RFC 2898 в разделе «PKCS #5: паролю шифрования спецификация версии 2.0,» на [запроса веб-сайте](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="95e9b-154">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="95e9b-155">В разделе 5.2, «PBKDF2» для получения подробной информации.</span><span class="sxs-lookup"><span data-stu-id="95e9b-155">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95e9b-156">Не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="95e9b-156">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="95e9b-157">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), с помощью редактора, шестнадцатеричном или открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="95e9b-157">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95e9b-158">Размер указанного расширяющего значения менее 8 байт, а число итераций менее 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-158">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95e9b-159">Пароль или расширяющее значение равны <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-159">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="95e9b-160">Пароль, используемый для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-160">The password used to derive the key.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="95e9b-161">Соль, используемая для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-161">The key salt used to derive the key.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="95e9b-162">Число итераций для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-162">The number of iterations for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95e9b-163">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />, используя пароль, расширяющее значение и число итераций для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-163">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e9b-164">Размер расширяющего значения должен быть 8 байт или большего размера и количества итераций должно быть больше нуля.</span><span class="sxs-lookup"><span data-stu-id="95e9b-164">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="95e9b-165">Рекомендуемое минимальное число итераций равно 1000.</span><span class="sxs-lookup"><span data-stu-id="95e9b-165">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="95e9b-166">RFC 2898 включает методы для создания из паролем и солью ключа и вектора инициализации (IV).</span><span class="sxs-lookup"><span data-stu-id="95e9b-166">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="95e9b-167">PBKDF2 функцию формирования ключа на основе пароля, можно использовать для получения ключей с помощью функции псевдослучайных ключи практически неограниченной длины должен быть создан.</span><span class="sxs-lookup"><span data-stu-id="95e9b-167">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="95e9b-168"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Класс может использоваться для создания производного ключа из базовой ключ и другие параметры.</span><span class="sxs-lookup"><span data-stu-id="95e9b-168">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="95e9b-169">В функцию формирования ключа на основе пароля базового ключа выступает пароль, а остальные параметры являются расширяющее значение и число итераций.</span><span class="sxs-lookup"><span data-stu-id="95e9b-169">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="95e9b-170">Дополнительные сведения о PBKDF2 RFC 2898 в разделе «PKCS #5: паролю шифрования спецификация версии 2.0,» на [запроса веб-сайте](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="95e9b-170">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="95e9b-171">В разделе 5.2, «PBKDF2» для получения подробной информации.</span><span class="sxs-lookup"><span data-stu-id="95e9b-171">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95e9b-172">Не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="95e9b-172">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="95e9b-173">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), с помощью редактора, шестнадцатеричном или открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="95e9b-173">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e9b-174">Следующий пример кода использует <xref:System.Security.Cryptography.Rfc2898DeriveBytes> класс для создания двух идентичных ключи для <xref:System.Security.Cryptography.TripleDES> класса.</span><span class="sxs-lookup"><span data-stu-id="95e9b-174">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="95e9b-175">Затем она шифрует и расшифровывает некоторых данных с использованием ключей.</span><span class="sxs-lookup"><span data-stu-id="95e9b-175">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95e9b-176">Размер указанного расширяющего значения менее 8 байт, а число итераций менее 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-176">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95e9b-177">Пароль или расширяющее значение равны <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-177">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="95e9b-178">Пароль, используемый для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-178">The password used to derive the key.</span>
          </span>
        </param>
        <param name="saltSize">
          <span data-ttu-id="95e9b-179">Размер произвольной соли, которую должен создать класс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-179">The size of the random salt that you want the class to generate.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="95e9b-180">Число итераций для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-180">The number of iterations for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95e9b-181">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />, используя пароль, размер соли и число итераций для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-181">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt size, and number of iterations to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e9b-182">Размер расширяющего значения должен быть 8 байт или большего размера и количества итераций должно быть больше нуля.</span><span class="sxs-lookup"><span data-stu-id="95e9b-182">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="95e9b-183">Рекомендуемое минимальное число итераций равно 1000.</span><span class="sxs-lookup"><span data-stu-id="95e9b-183">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="95e9b-184">RFC 2898 включает методы для создания из паролем и солью ключа и вектора инициализации (IV).</span><span class="sxs-lookup"><span data-stu-id="95e9b-184">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="95e9b-185">PBKDF2 функцию формирования ключа на основе пароля, можно использовать для получения ключей с помощью функции псевдослучайных ключи практически неограниченной длины должен быть создан.</span><span class="sxs-lookup"><span data-stu-id="95e9b-185">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="95e9b-186"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Класс может использоваться для создания производного ключа из базовой ключ и другие параметры.</span><span class="sxs-lookup"><span data-stu-id="95e9b-186">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="95e9b-187">В функцию формирования ключа на основе пароля базового ключа выступает пароль, а остальные параметры являются расширяющее значение и число итераций.</span><span class="sxs-lookup"><span data-stu-id="95e9b-187">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="95e9b-188">Дополнительные сведения о PBKDF2 RFC 2898 в разделе «PKCS #5: паролю шифрования спецификация версии 2.0,» доступны на [запроса веб-сайте](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="95e9b-188">For more information on PBKDF2, see RFC 2898,"PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="95e9b-189">В разделе 5.2, «PBKDF2» для получения подробной информации.</span><span class="sxs-lookup"><span data-stu-id="95e9b-189">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95e9b-190">Не следует жестко кодировать пароль в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="95e9b-190">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="95e9b-191">Жестко запрограммированные пароли можно извлечь из сборки с помощью [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), с помощью редактора, шестнадцатеричном или открыв сборку в текстовом редакторе, например Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="95e9b-191">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95e9b-192">Размер указанного расширяющего значения менее 8 байт, а число итераций менее 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-192">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95e9b-193">Пароль или расширяющее значение равны <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-193">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95e9b-194">
            <paramref name="iterations" /> выходит за пределы диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-194">
              <paramref name="iterations" /> is out of range.</span>
          </span>
          <span data-ttu-id="95e9b-195">Значение этого параметра не должно быть отрицательным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-195">This parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="password">To be added.</param>
        <param name="salt">To be added.</param>
        <param name="iterations">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="password">To be added.</param>
        <param name="salt">To be added.</param>
        <param name="iterations">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="password">To be added.</param>
        <param name="saltSize">To be added.</param>
        <param name="iterations">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptDeriveKey">
      <MemberSignature Language="C#" Value="public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] CryptDeriveKey(string algname, string alghashname, int32 keySize, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CryptDeriveKey (algname As String, alghashname As String, keySize As Integer, rgbIV As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ CryptDeriveKey(System::String ^ algname, System::String ^ alghashname, int keySize, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algname" Type="System.String" />
        <Parameter Name="alghashname" Type="System.String" />
        <Parameter Name="keySize" Type="System.Int32" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algname">
          <span data-ttu-id="95e9b-196">Имя алгоритма, используемого для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-196">The algorithm name for which to derive the key.</span>
          </span>
        </param>
        <param name="alghashname">
          <span data-ttu-id="95e9b-197">Имя хэш-алгоритма, используемого для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-197">The hash algorithm name to use to derive the key.</span>
          </span>
        </param>
        <param name="keySize">
          <span data-ttu-id="95e9b-198">Размер формируемого ключа в битах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-198">The size of the key, in bits, to derive.</span>
          </span>
        </param>
        <param name="rgbIV">
          <span data-ttu-id="95e9b-199">Вектор инициализации, используемый для формирования ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-199">The initialization vector (IV) to use to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95e9b-200">Возвращает криптографический ключ из объекта <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-200">Derives a cryptographic key from the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95e9b-201">Сформированный ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-201">The derived key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e9b-202">Эта функция представляет собой оболочку для функции Crypto API CryptDeriveKey() и предназначена для обеспечения взаимодействия с приложениями с помощью API-Интерфейс шифрования.</span><span class="sxs-lookup"><span data-stu-id="95e9b-202">This function is a wrapper for the Crypto API function CryptDeriveKey(), and is intended to offer interoperability with applications using the Crypto API.</span></span>  
  
 <span data-ttu-id="95e9b-203">Если `keySize` параметр установлен в 0, используется размер ключа по умолчанию для указанного алгоритма.</span><span class="sxs-lookup"><span data-stu-id="95e9b-203">If the `keySize` parameter is set to 0 bits, the default key size for the specified algorithm is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95e9b-204">Параметр <paramref name="keySize" /> является неверным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-204">The <paramref name="keySize" /> parameter is incorrect.</span>
          </span>
          <span data-ttu-id="95e9b-205">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-205">-or-</span>
          </span>
          <span data-ttu-id="95e9b-206">Не удалось получить поставщик служб шифрования (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-206">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="95e9b-207">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-207">-or-</span>
          </span>
          <span data-ttu-id="95e9b-208">Значение параметра <paramref name="algname" /> не является допустимым именем алгоритма.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-208">The <paramref name="algname" /> parameter is not a valid algorithm name.</span>
          </span>
          <span data-ttu-id="95e9b-209">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-209">-or-</span>
          </span>
          <span data-ttu-id="95e9b-210">Значение параметра <paramref name="alghashname" /> не является допустимым именем хэш-алгоритма.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-210">The <paramref name="alghashname" /> parameter is not a valid hash algorithm name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="95e9b-211">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-211">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95e9b-212">Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> (при необходимости освобождает и управляемые ресурсы).</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-212">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e9b-213">Этот метод вызывается методом открытые `Dispose()` метод и `Finalize` метод.</span><span class="sxs-lookup"><span data-stu-id="95e9b-213">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="95e9b-214">`Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`.</span><span class="sxs-lookup"><span data-stu-id="95e9b-214">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="95e9b-215">`Finalize` вызывает `Dispose` с `disposing` значение `false`.</span><span class="sxs-lookup"><span data-stu-id="95e9b-215">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="95e9b-216">Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span><span class="sxs-lookup"><span data-stu-id="95e9b-216">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.Rfc2898DeriveBytes> references.</span></span> <span data-ttu-id="95e9b-217">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="95e9b-217">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95e9b-218">Метод <see langword="Dispose" /> может вызываться несколько раз другими объектами.</span>
            <span class="sxs-lookup">
              <span data-stu-id="95e9b-218">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="95e9b-219">При переопределении метода <see langword="Dispose(Boolean)" />нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="95e9b-219">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="95e9b-220">Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />, в разделе [метода](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="95e9b-220">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="95e9b-221">Дополнительные сведения о <see langword="Dispose" /> и <see langword="Finalize" />, в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="95e9b-221">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (cb As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(int cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="95e9b-222">Число генерируемых псевдослучайных байтов ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-222">The number of pseudo-random key bytes to generate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95e9b-223">Возвращает псевдослучайный ключ для данного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-223">Returns the pseudo-random key for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95e9b-224">Массив байтов, заполненный псевдослучайными байтами ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-224">A byte array filled with pseudo-random key bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e9b-225"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Класс реализует функциональность PBKDF2, используя генератор псевдослучайных чисел, на основе <xref:System.Security.Cryptography.HMACSHA1>.</span><span class="sxs-lookup"><span data-stu-id="95e9b-225">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class implements PBKDF2 functionality by using a pseudorandom number generator based on <xref:System.Security.Cryptography.HMACSHA1>.</span></span> <span data-ttu-id="95e9b-226"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Класса принимает пароль, расширяющее значение и число итераций и создает ключи с помощью вызовов <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="95e9b-226">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span> <span data-ttu-id="95e9b-227">Повторные вызовы этого метода не будет создавать один и тот же ключ; Вместо этого, добавления двух вызовов <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> метод с `cb` значение параметра `20` является эквивалентом функции <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> метод один раз с `cb` значение параметра `40`.</span><span class="sxs-lookup"><span data-stu-id="95e9b-227">Repeated calls to this method will not generate the same key; instead, appending two calls of the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method with a `cb` parameter value of `20` is the equivalent of calling the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method once with a `cb` parameter value of `40`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e9b-228">В следующем примере показано, как использовать <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> метод, чтобы получить ключ для экземпляра <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span><span class="sxs-lookup"><span data-stu-id="95e9b-228">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method to get the key for an instance of <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span></span> <span data-ttu-id="95e9b-229">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.Cryptography.Rfc2898DeriveBytes> класса.</span><span class="sxs-lookup"><span data-stu-id="95e9b-229">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#2](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#2)]
 [!code-csharp[rfc28981#2](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#2)]
 [!code-vb[rfc28981#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95e9b-230">
            <paramref name="cb" /> выходит за пределы диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-230">
              <paramref name="cb" /> is out of range.</span>
          </span>
          <span data-ttu-id="95e9b-231">Значение этого параметра не должно быть отрицательным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-231">This parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.HashAlgorithmName HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.HashAlgorithmName HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HashAlgorithm As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::HashAlgorithmName HashAlgorithm { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IterationCount">
      <MemberSignature Language="C#" Value="public int IterationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IterationCount" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IterationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IterationCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95e9b-232">Возвращает или задает число итераций для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-232">Gets or sets the number of iterations for the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95e9b-233">Число итераций для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-233">The number of iterations for the operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e9b-234">Число итераций — количество раз, когда выполняется операция.</span><span class="sxs-lookup"><span data-stu-id="95e9b-234">Iteration count is the number of times an operation is performed.</span></span> <span data-ttu-id="95e9b-235">Для этого метода число должно быть больше нуля.</span><span class="sxs-lookup"><span data-stu-id="95e9b-235">For this method, the count should be greater than zero.</span></span> <span data-ttu-id="95e9b-236">Рекомендуемое минимальное число итераций равно 1000.</span><span class="sxs-lookup"><span data-stu-id="95e9b-236">The minimum recommended number of iterations is 1000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e9b-237">В следующем примере показано, как использовать <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> свойство для отображения числа итераций, используемых при формировании ключа.</span><span class="sxs-lookup"><span data-stu-id="95e9b-237">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> property to display the number of iterations used in the generation of the key.</span></span> <span data-ttu-id="95e9b-238">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.Cryptography.Rfc2898DeriveBytes> класса.</span><span class="sxs-lookup"><span data-stu-id="95e9b-238">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#3](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#3)]
 [!code-csharp[rfc28981#3](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#3)]
 [!code-vb[rfc28981#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95e9b-239">Число итераций менее 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-239">The number of iterations is less than 1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95e9b-240">Восстанавливает состояние данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-240">Resets the state of the operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e9b-241">Этот метод автоматически вызывается при изменении расширяющего значения или числа итераций.</span><span class="sxs-lookup"><span data-stu-id="95e9b-241">This method is automatically called if the salt or iteration count is modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e9b-242">В следующем примере показано, как использовать метод <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="95e9b-242">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A> method.</span></span> <span data-ttu-id="95e9b-243">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.Cryptography.Rfc2898DeriveBytes> класса.</span><span class="sxs-lookup"><span data-stu-id="95e9b-243">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#5](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#5)]
 [!code-csharp[rfc28981#5](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#5)]
 [!code-vb[rfc28981#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Salt">
      <MemberSignature Language="C#" Value="public byte[] Salt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Salt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt" />
      <MemberSignature Language="VB.NET" Value="Public Property Salt As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Salt { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95e9b-244">Возвращает или задает значение соли ключа для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-244">Gets or sets the key salt value for the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95e9b-245">Значение соли ключа для данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-245">The key salt value for the operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e9b-246">Соль произвольного набора байтов, используются, чтобы сделать несанкционированного расшифровки сообщения более сложным.</span><span class="sxs-lookup"><span data-stu-id="95e9b-246">Salt, a random set of bytes, is used to make unauthorized decrypting of a message more difficult.</span></span> <span data-ttu-id="95e9b-247">Атака перебором по словарю — это атака, при которой злоумышленник пытается расшифровать зашифрованное сообщение, сравнивая зашифрованное значение с ранее вычисленными зашифрованными значениями для наиболее вероятных ключей.</span><span class="sxs-lookup"><span data-stu-id="95e9b-247">A dictionary attack is an attack in which the attacker attempts to decrypt an encrypted message by comparing the encrypted value with previously computed encrypted values for the most likely keys.</span></span> <span data-ttu-id="95e9b-248">Такая атака становится гораздо сложнее при введении расширяющего или случайные байты в конце пароль перед производного ключа.</span><span class="sxs-lookup"><span data-stu-id="95e9b-248">This attack is made much more difficult by the introduction of salt, or random bytes, at the end of the password before the key derivation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95e9b-249">Указанный размер расширяющего значения менее 8 байт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-249">The specified salt size is smaller than 8 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95e9b-250">Расширяющее значение равно <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e9b-250">The salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>