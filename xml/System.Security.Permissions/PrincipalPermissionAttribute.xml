<Type Name="PrincipalPermissionAttribute" FullName="System.Security.Permissions.PrincipalPermissionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9aeeb85da7d4e97045dd4eea18b4e2da5592a434" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36528703" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PrincipalPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PrincipalPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.PrincipalPermissionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrincipalPermissionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalPermissionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <TypeSignature Language="F#" Value="type PrincipalPermissionAttribute = class&#xA;    inherit CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3a79a-101">Разрешает применять меры безопасности для <see cref="T:System.Security.Permissions.PrincipalPermission" /> к коду с помощью декларативной безопасности.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3a79a-101">Allows security actions for <see cref="T:System.Security.Permissions.PrincipalPermission" /> to be applied to code using declarative security.</span>
      </span>
      <span data-ttu-id="3a79a-102">Этот класс не наследуется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3a79a-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a79a-103"><xref:System.Security.Permissions.PrincipalPermissionAttribute> можно использовать декларативно требовать принадлежность к определенной роли пользователей, работающих в коде или Прошедшие проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="3a79a-103"><xref:System.Security.Permissions.PrincipalPermissionAttribute> can be used to declaratively demand that users running your code belong to a specified role or have been authenticated.</span></span> <span data-ttu-id="3a79a-104">Использование <xref:System.Security.Permissions.PermissionState.Unrestricted> создает <xref:System.Security.Permissions.PrincipalPermission> с <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> значение `true` и <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> и <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> значение `null`.</span><span class="sxs-lookup"><span data-stu-id="3a79a-104">Use of <xref:System.Security.Permissions.PermissionState.Unrestricted> creates a <xref:System.Security.Permissions.PrincipalPermission> with <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> set to `true` and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> set to `null`.</span></span>  
  
 <span data-ttu-id="3a79a-105">Зависит от области объявление, которое может быть <xref:System.Security.Permissions.SecurityAction> , используемый.</span><span class="sxs-lookup"><span data-stu-id="3a79a-105">The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.</span></span> <span data-ttu-id="3a79a-106"><xref:System.Security.Permissions.PrincipalPermissionAttribute> не может применяться на уровне сборки.</span><span class="sxs-lookup"><span data-stu-id="3a79a-106"><xref:System.Security.Permissions.PrincipalPermissionAttribute> cannot be applied at the assembly level.</span></span>  
  
 <span data-ttu-id="3a79a-107">Сведения безопасности, объявляемые атрибутом безопасности хранится в метаданных конечного объекта атрибута и доступен в системе во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="3a79a-107">The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.</span></span> <span data-ttu-id="3a79a-108">Атрибуты безопасности используются только для декларативной безопасности.</span><span class="sxs-lookup"><span data-stu-id="3a79a-108">Security attributes are used only for declarative security.</span></span> <span data-ttu-id="3a79a-109">Для принудительной безопасности используйте соответствующий класс разрешений.</span><span class="sxs-lookup"><span data-stu-id="3a79a-109">For imperative security, use the corresponding permission class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3a79a-110">Прежде чем использовать этот класс для разрешений участника запросу, необходимо присвоить политики субъекта в текущем домене приложения значение перечисления <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="3a79a-110">Before you use this class to demand principal permission, you must set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="3a79a-111">По умолчанию имеет значение политики субъекта <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="3a79a-111">By default, the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="3a79a-112">Если вы не установите политики субъекта <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, требование разрешения участника завершится ошибкой.</span><span class="sxs-lookup"><span data-stu-id="3a79a-112">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="3a79a-113">Следующий код должен быть выполнен прежде, чем разрешение участника: `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span><span class="sxs-lookup"><span data-stu-id="3a79a-113">The following code should be executed before the principal permission is demanded: `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a79a-114">В следующем примере показано, как <xref:System.Security.Permissions.PrincipalPermissionAttribute> класс используется декларативно требование, что текущий пользователь будет иметь права администратора.</span><span class="sxs-lookup"><span data-stu-id="3a79a-114">The following example demonstrates how the <xref:System.Security.Permissions.PrincipalPermissionAttribute> class is used declaratively to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a79a-115">В Windows Vista привилегии пользователя определяются контролем учетных записей (UAC).</span><span class="sxs-lookup"><span data-stu-id="3a79a-115">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="3a79a-116">Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора.</span><span class="sxs-lookup"><span data-stu-id="3a79a-116">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="3a79a-117">По умолчанию назначена роль обычного пользователя.</span><span class="sxs-lookup"><span data-stu-id="3a79a-117">By default, you are in the standard user role.</span></span> <span data-ttu-id="3a79a-118">Чтобы выполнить код, требующий прав администратора, необходимо сначала повысить права от прав стандартного пользователя до прав администратора.</span><span class="sxs-lookup"><span data-stu-id="3a79a-118">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="3a79a-119">Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.</span><span class="sxs-lookup"><span data-stu-id="3a79a-119">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.PrincipalPermission" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermissionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermissionAttribute : System.Security.Permissions.SecurityAction -&gt; System.Security.Permissions.PrincipalPermissionAttribute" Usage="new System.Security.Permissions.PrincipalPermissionAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="3a79a-120">Одно из значений перечисления <see cref="T:System.Security.Permissions.SecurityAction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a79a-120">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a79a-121">Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> указанным значением <see cref="T:System.Security.Permissions.SecurityAction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a79a-121">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a79a-122">`Demand`, `InheritanceDemand`, и `LinkDemand` являются единственными значениями <xref:System.Security.Permissions.SecurityAction> , имеющие смысл для этого атрибута.</span><span class="sxs-lookup"><span data-stu-id="3a79a-122">`Demand`, `InheritanceDemand`, and `LinkDemand` are the only values of <xref:System.Security.Permissions.SecurityAction> that have meaning for this attribute.</span></span> <span data-ttu-id="3a79a-123">Другие действия не применяются для разрешений, которые не являются разрешения доступа к коду.</span><span class="sxs-lookup"><span data-stu-id="3a79a-123">Other actions do not apply to permissions that are not code access permissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a79a-124">В следующем примере демонстрируется использование <xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A> конструктор требование, что текущий пользователь будет иметь права администратора.</span><span class="sxs-lookup"><span data-stu-id="3a79a-124">The following example demonstrates how to use the <xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A> constructor to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a79a-125">В Windows Vista привилегии пользователя определяются контролем учетных записей (UAC).</span><span class="sxs-lookup"><span data-stu-id="3a79a-125">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="3a79a-126">Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора.</span><span class="sxs-lookup"><span data-stu-id="3a79a-126">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="3a79a-127">По умолчанию назначена роль обычного пользователя.</span><span class="sxs-lookup"><span data-stu-id="3a79a-127">By default, you are in the standard user role.</span></span> <span data-ttu-id="3a79a-128">Чтобы выполнить код, требующий прав администратора, необходимо сначала повысить права от прав стандартного пользователя до прав администратора.</span><span class="sxs-lookup"><span data-stu-id="3a79a-128">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="3a79a-129">Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.</span><span class="sxs-lookup"><span data-stu-id="3a79a-129">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public bool Authenticated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Authenticated : bool with get, set" Usage="System.Security.Permissions.PrincipalPermissionAttribute.Authenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a79a-130">Возвращает или задает значение, указывающее, прошел ли текущий субъект проверку подлинности от основного поставщика безопасности на основе ролей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a79a-130">Gets or sets a value indicating whether the current principal has been authenticated by the underlying role-based security provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a79a-131">Значение <see langword="true" />, если текущий участник прошел проверку подлинности, в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a79a-131">
              <see langword="true" /> if the current principal has been authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberSignature Language="F#" Value="override this.CreatePermission : unit -&gt; System.Security.IPermission" Usage="principalPermissionAttribute.CreatePermission " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a79a-132">Создает и возвращает новый объект <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a79a-132">Creates and returns a new <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a79a-133">Объект <see cref="T:System.Security.Permissions.PrincipalPermission" />, соответствующий этому атрибуту.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a79a-133">A <see cref="T:System.Security.Permissions.PrincipalPermission" /> that corresponds to this attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a79a-134">Этот метод должен вызываться только системой безопасности, вызывать в коде приложения.</span><span class="sxs-lookup"><span data-stu-id="3a79a-134">This method should only be called by the security system, never by application code.</span></span>  
  
 <span data-ttu-id="3a79a-135">Во время компиляции атрибуты преобразуют объявления безопасности в сериализованную форму в метаданных.</span><span class="sxs-lookup"><span data-stu-id="3a79a-135">At compile time, attributes convert security declarations to a serialized form in metadata.</span></span> <span data-ttu-id="3a79a-136">Данные декларативной безопасности в метаданных создаются из разрешения, которое возвращает этот метод, соответствующий этому атрибуту.</span><span class="sxs-lookup"><span data-stu-id="3a79a-136">Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Security.Permissions.PrincipalPermissionAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a79a-137">Получает или задает имя удостоверения, связанного с текущим субъектом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a79a-137">Gets or sets the name of the identity associated with the current principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a79a-138">Имя для сопоставления с именем, предоставляемым базовым поставщиком безопасности на основе ролей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a79a-138">A name to match against that provided by the underlying role-based security provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a79a-139">Если поставщик проверки подлинности является Windows NT, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> совпадает имя входа пользователя Windows NT (в форме «Имя_домена\имя_пользователя»).</span><span class="sxs-lookup"><span data-stu-id="3a79a-139">If the authentication provider is Windows NT, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is the same as the user's Windows NT login name (in the form "DomainName\UserName").</span></span> <span data-ttu-id="3a79a-140">Обратитесь к документации узла, чтобы определить, какой поставщик проверки подлинности используется и как она определяет удостоверение текущего участника.</span><span class="sxs-lookup"><span data-stu-id="3a79a-140">Check the documentation of your host to determine which authentication provider it uses and how it determines the identity of the current principal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Role" />
      <MemberSignature Language="VB.NET" Value="Public Property Role As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Role { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Role : string with get, set" Usage="System.Security.Permissions.PrincipalPermissionAttribute.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a79a-141">Возвращает или задает членство в указанной роли безопасности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a79a-141">Gets or sets membership in a specified security role.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a79a-142">Имя роли, предоставленное основным поставщиком безопасности на основе ролей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a79a-142">The name of a role from the underlying role-based security provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a79a-143">Доступные роли будут различаться в зависимости от поставщика проверки подлинности используется узлом.</span><span class="sxs-lookup"><span data-stu-id="3a79a-143">The available roles will differ based on the authentication provider in use by the host.</span></span> <span data-ttu-id="3a79a-144">Если поставщик проверки подлинности является Windows NT, роли, группы пользователей Windows NT (в форме «Имя_домена\имя_группы»).</span><span class="sxs-lookup"><span data-stu-id="3a79a-144">If the authentication provider is Windows NT, roles are Windows NT user groups (in the form "DomainName\GroupName").</span></span> <span data-ttu-id="3a79a-145">Обратитесь к документации узла, чтобы определить, какой поставщик проверки подлинности используется и ролей пользователей могут принадлежать к.</span><span class="sxs-lookup"><span data-stu-id="3a79a-145">Check the documentation of your host to determine which authentication provider it uses and what roles users can belong to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>