<Type Name="ReflectionPermissionFlag" FullName="System.Security.Permissions.ReflectionPermissionFlag">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ea8a0435690e232ce077bff445bd216d32b3a29" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30498428" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ReflectionPermissionFlag" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ReflectionPermissionFlag extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.ReflectionPermissionFlag" />
  <TypeSignature Language="VB.NET" Value="Public Enum ReflectionPermissionFlag" />
  <TypeSignature Language="C++ CLI" Value="public enum class ReflectionPermissionFlag" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Определяет допустимое использование значения <see cref="N:System.Reflection" /> и пространства имен <see cref="N:System.Reflection.Emit" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это перечисление используется методом <xref:System.Security.Permissions.ReflectionPermission> и <xref:System.Security.Permissions.ReflectionPermissionAttribute> классы. Если не <xref:System.Security.Permissions.ReflectionPermission> предоставлено, отражение допустимо для всех типов и членов, но операции вызова допустимы только на видимые типы и члены. Дополнительные сведения см. в разделе [Соображения о безопасности для отражения](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).  
  
> [!CAUTION]
>  Поскольку <xref:System.Security.Permissions.ReflectionPermission> позволяют осуществлять доступ к закрытым членам класса, мы рекомендуем вам предоставить <xref:System.Security.Permissions.ReflectionPermission> для Интернет-кода только с флагом RestrictedMemberAccess, а не с любыми другими флагами.  
  
 Появился флаг RestrictedMemberAccess [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]. Чтобы использовать этот флаг, приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.  
  
> [!IMPORTANT]
>  AllFlags не включает флаг RestrictedMemberAccess. Чтобы получить маску, которая включает все флаги в это перечисление, необходимо использовать сочетание AllFlags с RestrictedMemberAccess.  
  
 Начиная с [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)], флаг ReflectionEmit больше не нужны для порождения кода, если не создаются отладочные символы. Чтобы использовать эту функцию, приложение должно использовать [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] или более поздней версии.  
  
 Начиная с [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], флаг свойству TypeInformation больше не требуется для отражения на закрытых типах и членах; флаг был помечен как устаревший.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> перечисления для инициализации нового экземпляра <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> класс, представляющий право на выполнение ограниченного доступа к элементам. Данный пример является частью большего примера, приведенного для <xref:System.Security.Permissions.ReflectionPermissionFlag.AllFlags> класса.  
  
 Пример, показывающий, как использовать флаг RestrictedMemberAccess с Интернет-кода см. в разделе [Пошаговое руководство: порождение кода в сценариях частичного доверия](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md).  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#8)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.ReflectionPermission" />
    <altmember cref="T:System.Security.Permissions.ReflectionPermissionAttribute" />
  </Docs>
  <Members>
    <Member MemberName="AllFlags">
      <MemberSignature Language="C#" Value="AllFlags" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag AllFlags = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" />
      <MemberSignature Language="VB.NET" Value="AllFlags" />
      <MemberSignature Language="C++ CLI" Value="AllFlags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          Заданы флаги <see langword="TypeInformation" />, <see langword="MemberAccess" /> и <see langword="ReflectionEmit" />. Значение <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /> не включает флаг <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="MemberAccess">
      <MemberSignature Language="C#" Value="MemberAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag MemberAccess = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />
      <MemberSignature Language="VB.NET" Value="MemberAccess" />
      <MemberSignature Language="C++ CLI" Value="MemberAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Допустимы операции вызова на все элементы, независимо от набора привилегий. Если этот флаг не установлен, операции вызова допустимы только на видимые элементы.</summary>
      </Docs>
    </Member>
    <Member MemberName="NoFlags">
      <MemberSignature Language="C#" Value="NoFlags" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag NoFlags = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />
      <MemberSignature Language="VB.NET" Value="NoFlags" />
      <MemberSignature Language="C++ CLI" Value="NoFlags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Допускается перечисление типов и элементов. Операции вызова допустимы только на видимые элементы.</summary>
      </Docs>
    </Member>
    <Member MemberName="ReflectionEmit">
      <MemberSignature Language="C#" Value="ReflectionEmit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag ReflectionEmit = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit" />
      <MemberSignature Language="VB.NET" Value="ReflectionEmit" />
      <MemberSignature Language="C++ CLI" Value="ReflectionEmit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Разрешено генерирование символов отладки. Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот флаг больше не требуется для генерирования кода.</summary>
      </Docs>
    </Member>
    <Member MemberName="RestrictedMemberAccess">
      <MemberSignature Language="C#" Value="RestrictedMemberAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag RestrictedMemberAccess = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />
      <MemberSignature Language="VB.NET" Value="RestrictedMemberAccess" />
      <MemberSignature Language="C++ CLI" Value="RestrictedMemberAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Для кода с неполным доверием предусмотрен ограниченный доступ к элементам. Код с неполным доверием может допускать неоткрытые типы и элементы, но только в том случае, если набор привилегий кода с неполным доверием включает все разрешения в наборе привилегий сборки, содержащей неоткрытые типы и элементы, к которым выполняется обращение. Этот флаг является новым в [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)].</summary>
      </Docs>
    </Member>
    <Member MemberName="TypeInformation">
      <MemberSignature Language="C#" Value="TypeInformation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag TypeInformation = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" />
      <MemberSignature Language="VB.NET" Value="TypeInformation" />
      <MemberSignature Language="C++ CLI" Value="TypeInformation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("not used anymore")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Этот флаг устарел. Чтобы перечислять типы и элементы и исследовать их метаданные, флаги не нужны. Взамен рекомендуется использовать <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />.</summary>
      </Docs>
    </Member>
  </Members>
</Type>