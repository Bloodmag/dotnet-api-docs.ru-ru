<Type Name="UrlIdentityPermission" FullName="System.Security.Permissions.UrlIdentityPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e6f5a331e7ee43db34c7f8124bc5daf5fe0fd2c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37629872" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UrlIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UrlIdentityPermission extends System.Security.CodeAccessPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.UrlIdentityPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UrlIdentityPermission&#xA;Inherits CodeAccessPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlIdentityPermission sealed : System::Security::CodeAccessPermission" />
  <TypeSignature Language="F#" Value="type UrlIdentityPermission = class&#xA;    inherit CodeAccessPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the identity permission for the URL from which the code originates. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Рассматривается полный URL-адрес, включая протокол (HTTP, HTTPS, FTP) и файл. Например http://www.fourthcoffee.com/process/grind.htm — это полный URL-адрес.  
  
 URL-адреса могут быть сопоставлены точно или подстановочному знаку в последней позицией, например: http://www.fourthcoffee.com/process/*. URL-адреса приложения также могут содержать подстановочные знаки (»\*«) перед разделительной точкой. Например, строка имя URL-адрес http://www.fourthcoffee.com/process/grind.htm/ является подмножеством http://\*.fourthcoffee.com/process/grind.htm/ и http://\*.com/process/grind.htm/.  
  
> [!IMPORTANT]
>  Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], права доступа для удостоверения не используются.  
>   
>  В .NET Framework версий 1.0 и 1.1 требования разрешениям идентификации остаются в силе даже в том случае, если вызывающая сборка является полностью доверенным. То есть несмотря на то, что вызывающая сборка имеет полное доверие, запрос на разрешение идентификации завершается ошибкой, если сборка не соответствует требуемому критерию. Начиная с .NET Framework версии 2.0, требования для разрешения идентификаторов теряют Если вызывающей сборки считается полностью надежным. То есть запрос для удостоверения, всегда завершается успешно, независимо от того, удостоверение сборки, если были предоставлены сборке полное доверие. Это гарантирует согласованность всех разрешений, устраняя обработка права доступа для удостоверения как особый случай.  
  
 В .NET Framework версий 1.0 и 1.1 требования к разрешениям идентификации остаются в силе, даже в том случае, если вызывающая сборка является полностью доверенным. То есть несмотря на то, что вызывающая сборка имеет полное доверие, запрос на разрешение идентификации завершается ошибкой, если сборка не соответствует требуемому критерию. Начиная с .NET Framework версии 2.0, требования для разрешения идентификаторов теряют Если вызывающей сборки считается полностью надежным. Это гарантирует согласованность всех разрешений, устраняя обработка права доступа для удостоверения как особый случай.  
  
> [!NOTE]
>  В версиях .NET Framework, выпущенных до [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], можно использовать <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=nameWithType> метод, чтобы предотвратить случайный доступ к системным ресурсам доверенным кодом. <xref:System.Security.CodeAccessPermission.Deny%2A> Теперь является устаревшим, и доступ к ресурсам теперь определяется только предоставленный набор разрешений для сборки. Чтобы ограничить доступ к файлам, необходимо запустить частично доверенного кода в изолированной среде и назначьте ей разрешения только на ресурсы, которые код может получить доступ. Сведения о выполнении приложения в "песочнице", см. в разделе [как: выполнение частично доверенного кода в изолированной среде](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).  
  
> [!NOTE]
>  В .NET Framework версий 1.0 и 1.1, не может иметь права доступа для удостоверения <xref:System.Security.Permissions.PermissionState.Unrestricted> значение состояния разрешения. Начиная с .NET Framework версии 2.0, права доступа для удостоверения может иметь любое значение состояния разрешения. Это означает, что в версиях 2.0 и более поздних, права доступа для удостоверения ведут себя так же как разрешения, которые реализуют <xref:System.Security.Permissions.IUnrestrictedPermission> интерфейс.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.UrlIdentityPermissionAttribute" />
    <altmember cref="T:System.Security.Policy.Url" />
    <altmember cref="T:System.Security.Policy.UrlMembershipCondition" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UrlIdentityPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.UrlIdentityPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.UrlIdentityPermission" Usage="new System.Security.Permissions.UrlIdentityPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Создает либо полностью ограниченный (`None`) или `Unrestricted` разрешение.  
  
> [!NOTE]
>  В .NET Framework версий 1.0 и 1.1, не может иметь права доступа для удостоверения <xref:System.Security.Permissions.PermissionState.Unrestricted> значение состояния разрешения. Начиная с .NET Framework версии 2.0, права доступа для удостоверения может иметь любое значение состояния разрешения. Это означает, что в версиях 2.0 и более поздних, права доступа для удостоверения ведут себя так же как разрешения, которые реализуют <xref:System.Security.Permissions.IUnrestrictedPermission> интерфейс. То есть запрос для удостоверения, всегда завершается успешно, независимо от того, удостоверение сборки, если были предоставлены сборке полное доверие.  
  
 В .NET Framework версий 1.0 и 1.1 требования к разрешениям идентификации остаются в силе, даже в том случае, если вызывающая сборка является полностью доверенным. То есть несмотря на то, что вызывающая сборка имеет полное доверие, запрос на разрешение идентификации завершается ошибкой, если сборка не соответствует требуемому критерию. Начиная с .NET Framework версии 2.0, требования для разрешения идентификаторов теряют Если вызывающей сборки считается полностью надежным. Это гарантирует согласованность всех разрешений, устраняя обработка права доступа для удостоверения как особый случай.  
  
   
  
## Examples  
 В следующем примере показано использование <xref:System.Security.Permissions.UrlIdentityPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> конструктор.  
  
 [!code-cpp[System.Security.Permissions.UrlIdentityPermission#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CPP/urlidentity.cpp#7)]
 [!code-csharp[System.Security.Permissions.UrlIdentityPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CS/urlidentity.cs#7)]
 [!code-vb[System.Security.Permissions.UrlIdentityPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/VB/urlidentity.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlIdentityPermission (string site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (site As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UrlIdentityPermission(System::String ^ site);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.UrlIdentityPermission : string -&gt; System.Security.Permissions.UrlIdentityPermission" Usage="new System.Security.Permissions.UrlIdentityPermission site" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="site">A URL or wildcard expression.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> class to represent the URL identity described by <paramref name="site" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Рассматривается полный URL-адрес, включая протокол (HTTP, HTTPS, FTP) и файл, например: http://www.fourthcoffee.com/process/grind.htm/.  
  
 URL-адреса могут быть сопоставлены точно или подстановочному знаку в последней позицией, например: http://www.fourthcoffee.com/process/*. URL-адреса приложения также могут содержать подстановочные знаки (»\*«) перед разделительной точкой. Например, строка имя URL-адрес http://www.fourthcoffee.com/process/grind.htm/ является подмножеством http://\*.fourthcoffee.com/process/grind.htm/ и http://\*.com/process/grind.htm/.  
  
> [!NOTE]
>  Начиная с .NET Framework версии 2.0, для повышения производительности при использовании недопустимого URL-адрес не вызывает исключение аргумента во время создания нового экземпляра класса.  Исключение аргумента возникнет в том случае, если выполняется одно из операции с множествами (Union, Intersect или IsSubsetOf).  Запрос на разрешение причины <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> вызываться инфраструктурой безопасности. То требование кончится неудачей из-за исключения аргумента, в результате чего <xref:System.Security.SecurityException> возникающего исключения. В этом случае исходный <xref:System.ArgumentException> исключения не будут видны.  
  
   
  
## Examples  
 В следующем примере показано использование <xref:System.Security.Permissions.UrlIdentityPermission.%23ctor%28System.String%29?displayProperty=nameWithType> конструктор.  
  
 [!code-cpp[System.Security.Permissions.UrlIdentityPermission#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CPP/urlidentity.cpp#8)]
 [!code-csharp[System.Security.Permissions.UrlIdentityPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CS/urlidentity.cs#8)]
 [!code-vb[System.Security.Permissions.UrlIdentityPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/VB/urlidentity.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="site" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">The length of the <paramref name="site" /> parameter is zero.</exception>
        <exception cref="T:System.ArgumentException">The URL, directory, or site portion of the <paramref name="site" /> parameter is not valid.</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="urlIdentityPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns an identical copy of the current permission.</summary>
        <returns>A copy of the current permission.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Копия разрешение представляет тот же уровень доступа к ресурсам, что и само разрешение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (esd As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ esd);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="urlIdentityPermission.FromXml esd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd">The XML encoding to use to reconstruct the permission.</param>
        <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="esd" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="esd" /> parameter is not a valid permission element.  -or-  The <paramref name="esd" /> parameter's version number is not valid.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="urlIdentityPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
        <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
        <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пересечение двух разрешений является разрешением, которое описывает доступ к URL-адресов в обоих разрешениях. Только тот запрос, который передает оба исходных разрешения передаст пересечения. Например, пересечение разрешение, представляющее доступ к http://www.fourthcoffee.com/process/grind.htm и разрешение, представляющее доступ к http://www.fourthcoffee.com/* — это разрешение, представляющее доступ к http://www.fourthcoffee.com/process/grind.htm.  
  
 <xref:System.Security.Permissions.UrlIdentityPermission> поддерживает операции над множествами (<xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>, и <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) только если текущее разрешение является равным заданного объекта разрешений или если одно из разрешений использует оператор подстановочного знака (» *»).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.  -or-  The Url property is not a valid URL.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="urlIdentityPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
        <summary>Determines whether the current permission is a subset of the specified permission.</summary>
        <returns>
          <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текущее разрешение является подмножеством указанного разрешения, если текущее разрешение указывает доступ к URL-адрес, полностью содержащихся в заданном разрешении. Например, разрешение, представляющее доступ к http://www.fourthcoffee.com/process/grind.htm является подмножеством разрешение, представляющее доступ к http://www.fourthcoffee.com/*. Если этот метод возвращает `true`, текущее разрешение представляет уровень доступа к защищенному ресурсу, чем указанное разрешение.  
  
 <xref:System.Security.Permissions.UrlIdentityPermission> поддерживает операции над множествами (<xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>, и <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) только если текущее разрешение является совпадает с указанным разрешением или когда одно из разрешений использует оператор подстановочного знака (» *»).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.  -or-  The Url property is not a valid URL.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="urlIdentityPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an XML encoding of the permission and its current state.</summary>
        <returns>An XML encoding of the permission, including any state information.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="urlIdentityPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
        <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
        <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Результат вызова <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> метод является разрешение, представляющее доступ к URL-адрес, представленный текущим разрешением, а также доступ к URL-адрес, представленный указанным разрешением.  
  
 <xref:System.Security.Permissions.UrlIdentityPermission> Класс поддерживает операции с множествами <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>, и <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) только в том случае, если текущее разрешение не совпадает с указанным разрешением, или в том случае, если одно из разрешений использует оператор подстановочного знака ("*») и одно является подмножеством другие.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.  -or-  The <see cref="P:System.Security.Permissions.UrlIdentityPermission.Url" /> property is not a valid URL.  -or-  The two permissions are not equal and one is not a subset of the other.</exception>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.UrlIdentityPermission.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Security.Permissions.UrlIdentityPermission.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a URL representing the identity of Internet code.</summary>
        <value>URL-адрес, представляющий удостоверение интернет-кода.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Рассматривается полный URL-адрес, включая протокол (HTTP, HTTPS, FTP) и файл, например: http://www.fourthcoffee.com/process/grind.htm/.  
  
 URL-адреса могут быть сопоставлены точно или подстановочному знаку в последней позицией, например: http://www.fourthcoffee.com/process/*.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The URL cannot be retrieved because it has an ambiguous identity.</exception>
      </Docs>
    </Member>
  </Members>
</Type>