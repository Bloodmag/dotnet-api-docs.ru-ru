<Type Name="EvidenceBase" FullName="System.Security.Policy.EvidenceBase">
  <TypeSignature Language="C#" Value="public abstract class EvidenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EvidenceBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.EvidenceBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EvidenceBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EvidenceBase abstract" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="637bf-101">Предоставляет базовый класс. Все объекты, используемые как свидетельство, должны быть производными от него.</span><span class="sxs-lookup"><span data-stu-id="637bf-101">Provides a base class from which all objects to be used as evidence must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="637bf-102">Прежде чем [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], как объект свидетельства мог использоваться практически любой объект, если требуется применить его в качестве свидетельства код размещения.</span><span class="sxs-lookup"><span data-stu-id="637bf-102">Before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], almost any object could be used as an evidence object if the hosting code wanted to apply it as evidence.</span></span> <span data-ttu-id="637bf-103">Например, некоторый код .NET Framework распознан <xref:System.Uri?displayProperty=nameWithType> объектов в качестве свидетельства.</span><span class="sxs-lookup"><span data-stu-id="637bf-103">For example, some .NET Framework code recognized <xref:System.Uri?displayProperty=nameWithType> objects as evidence.</span></span> <span data-ttu-id="637bf-104">Общеязыковая среда выполнения (CLR) считается объекты свидетельства как <xref:System.Object?displayProperty=nameWithType> ссылается на, но в них не распространяется средства безопасности типа.</span><span class="sxs-lookup"><span data-stu-id="637bf-104">The common language runtime (CLR) considered evidence objects as <xref:System.Object?displayProperty=nameWithType> references, and did not apply any type safety to them.</span></span>  
  
 <span data-ttu-id="637bf-105">Это вызывало проблемы, из-за неявного ограничения, на которых может использовать типы в качестве объектов свидетельства.</span><span class="sxs-lookup"><span data-stu-id="637bf-105">This presented a problem because there were implicit restrictions on which types could be used as evidence objects.</span></span> <span data-ttu-id="637bf-106">В частности, любой объект, используемый в качестве свидетельства должны были быть сериализуемыми и не может быть `null`.</span><span class="sxs-lookup"><span data-stu-id="637bf-106">Specifically, any object used as evidence had to be serializable and could not be `null`.</span></span> <span data-ttu-id="637bf-107">Если эти требования не были выполнены, среда CLR возникло исключение при каждом выполнении операции, требующей выполнения одного из этих предположений.</span><span class="sxs-lookup"><span data-stu-id="637bf-107">If these requirements were not met, the CLR threw an exception whenever an operation that required one of these assumptions was performed.</span></span>  
  
 <span data-ttu-id="637bf-108"><xref:System.Security.Policy.EvidenceBase> Класс, который должны наследоваться все объекты свидетельств впервые появился в [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] Чтобы наложить ограничения на типы объектов, которые могут использоваться в качестве свидетельства и предоставляют возможность добавления новых функций и требований для всех свидетельств объекты.</span><span class="sxs-lookup"><span data-stu-id="637bf-108">The <xref:System.Security.Policy.EvidenceBase> class, which all evidence objects must derive from, was introduced in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] to enable constraints on the types of objects that can be used as evidence and to provide the ability to add new features and requirements to all evidence objects.</span></span> <span data-ttu-id="637bf-109"><xref:System.Security.Policy.EvidenceBase> Класс гарантирует, после создания экземпляра, что сериализуется объект свидетельства.</span><span class="sxs-lookup"><span data-stu-id="637bf-109">The <xref:System.Security.Policy.EvidenceBase> class ensures, upon instantiation, that the evidence object is serializable.</span></span> <span data-ttu-id="637bf-110">Кроме того при этом новые требования свидетельство создаваемых путем добавления новых реализаций по умолчанию для базового класса.</span><span class="sxs-lookup"><span data-stu-id="637bf-110">In addition, it enables new evidence requirements to be created by adding new default implementations to the base class.</span></span>  
  
 <span data-ttu-id="637bf-111">Все типы, используемые средой CLR как объекты свидетельств, были обновлены в [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] для наследования от <xref:System.Security.Policy.EvidenceBase>.</span><span class="sxs-lookup"><span data-stu-id="637bf-111">All the types used by the CLR as evidence objects have been updated in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] to derive from <xref:System.Security.Policy.EvidenceBase>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EvidenceBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.EvidenceBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EvidenceBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="637bf-112">Инициализирует новый экземпляр класса <see cref="T:System.Security.Policy.EvidenceBase" />.</span><span class="sxs-lookup"><span data-stu-id="637bf-112">Initializes a new instance of the <see cref="T:System.Security.Policy.EvidenceBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="637bf-113">Все объекты для использования в качестве свидетельства, должны быть сериализуемыми.</span><span class="sxs-lookup"><span data-stu-id="637bf-113">All objects to be used as evidence must be serializable.</span></span> <span data-ttu-id="637bf-114">Необходимо пометить все производные типы как сериализуемый, так как атрибут serializable не распространяется на производные классы.</span><span class="sxs-lookup"><span data-stu-id="637bf-114">You must mark any derived types as serializable, because the serializable attribute does not propagate to derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="637bf-115">Объект, подлежащий использованию в качестве свидетельства, не сериализуем.</span><span class="sxs-lookup"><span data-stu-id="637bf-115">An object to be used as evidence is not serializable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.EvidenceBase Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.EvidenceBase Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.EvidenceBase.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As EvidenceBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Policy::EvidenceBase ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.EvidenceBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="637bf-116">Создает новый объект, являющийся полной копией текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="637bf-116">Creates a new object that is a complete copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="637bf-117">Копия данного объекта свидетельства.</span><span class="sxs-lookup"><span data-stu-id="637bf-117">A duplicate copy of this evidence object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="637bf-118">Копия-дубликат — полная копия, которая включает все объекты свидетельств в коллекции.</span><span class="sxs-lookup"><span data-stu-id="637bf-118">The duplicate copy is a complete copy that includes all the evidence objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>