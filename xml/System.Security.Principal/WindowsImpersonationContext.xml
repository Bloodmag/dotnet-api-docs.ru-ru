<Type Name="WindowsImpersonationContext" FullName="System.Security.Principal.WindowsImpersonationContext">
  <TypeSignature Language="C#" Value="public class WindowsImpersonationContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WindowsImpersonationContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Principal.WindowsImpersonationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsImpersonationContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsImpersonationContext : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="aee6b-101">Представляет пользователя Windows до операции олицетворения.</span><span class="sxs-lookup"><span data-stu-id="aee6b-101">Represents the Windows user prior to an impersonation operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aee6b-102">Этот класс возвращает удостоверение пользователя после пользователь олицетворение другого пользователя.</span><span class="sxs-lookup"><span data-stu-id="aee6b-102">This class reverts a user's identity after the user impersonates another user.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="aee6b-103">Этот тип реализует <xref:System.IDisposable> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="aee6b-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="aee6b-104">После завершения с помощью типа следует освободить его прямо или косвенно.</span><span class="sxs-lookup"><span data-stu-id="aee6b-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="aee6b-105">Для удаления типа непосредственно вызвать его <xref:System.IDisposable.Dispose%2A> метод в `try` / `catch` блока.</span><span class="sxs-lookup"><span data-stu-id="aee6b-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="aee6b-106">Чтобы удалить ее косвенно, использовать языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="aee6b-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="aee6b-107">Дополнительные сведения см. в разделе «С помощью объекта, реализует интерфейс IDisposable» в <xref:System.IDisposable> разделе интерфейса.</span><span class="sxs-lookup"><span data-stu-id="aee6b-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aee6b-108">Следующий пример демонстрирует олицетворение пользователя, а затем вернуться к исходной идентификации.</span><span class="sxs-lookup"><span data-stu-id="aee6b-108">The following example demonstrates how to impersonate a user and then revert to the original identity.</span></span>  
  
 [!code-cpp[WindowsIdentity Impersonation#1](~/samples/snippets/cpp/VS_Snippets_CLR/WindowsIdentity Impersonation/CPP/source.cpp#1)]
 [!code-csharp[WindowsIdentity Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CLR/WindowsIdentity Impersonation/CS/source.cs#1)]
 [!code-vb[WindowsIdentity Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WindowsIdentity Impersonation/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="aee6b-109">Поскольку платформы Microsoft Windows 98 и Windows Millennium Edition не имеют пользователей и токены пользователя, олицетворение не может иметь место на этих платформах.</span><span class="sxs-lookup"><span data-stu-id="aee6b-109">Because Microsoft Windows 98 and Windows Millennium Edition platforms do not have users or user tokens, impersonation cannot take place on those platforms.</span></span></para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aee6b-110">Освобождает все ресурсы, занятые модулем <see cref="T:System.Security.Principal.WindowsImpersonationContext" />.</span><span class="sxs-lookup"><span data-stu-id="aee6b-110">Releases all resources used by the <see cref="T:System.Security.Principal.WindowsImpersonationContext" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsImpersonationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aee6b-111">Освобождает все ресурсы, занятые модулем <see cref="T:System.Security.Principal.WindowsImpersonationContext" />.</span><span class="sxs-lookup"><span data-stu-id="aee6b-111">Releases all resources used by the <see cref="T:System.Security.Principal.WindowsImpersonationContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aee6b-112">Вызовите метод <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> по окончании использования класса <xref:System.Security.Principal.WindowsImpersonationContext>.</span><span class="sxs-lookup"><span data-stu-id="aee6b-112">Call <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsImpersonationContext>.</span></span> <span data-ttu-id="aee6b-113">Метод <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> оставляет класс <xref:System.Security.Principal.WindowsImpersonationContext> в непригодном для использования состоянии.</span><span class="sxs-lookup"><span data-stu-id="aee6b-113">The <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsImpersonationContext> in an unusable state.</span></span> <span data-ttu-id="aee6b-114">После вызова метода <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Security.Principal.WindowsImpersonationContext> , сборщик мусора мог освободить память, <xref:System.Security.Principal.WindowsImpersonationContext> занимаемую.</span><span class="sxs-lookup"><span data-stu-id="aee6b-114">After calling <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsImpersonationContext> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsImpersonationContext> was occupying.</span></span> <span data-ttu-id="aee6b-115">Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [метода](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="aee6b-115">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="aee6b-116">**Примечание:** вызова всегда <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> перед освобождением последней ссылки на <xref:System.Security.Principal.WindowsImpersonationContext>.</span><span class="sxs-lookup"><span data-stu-id="aee6b-116">**Note:** Always call <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsImpersonationContext>.</span></span> <span data-ttu-id="aee6b-117">В противном случае им ресурсы не будут освобождены пока сборщик мусора не вызовет метод <xref:System.Security.Principal.WindowsImpersonationContext> объекта **Finalize** метод.</span><span class="sxs-lookup"><span data-stu-id="aee6b-117">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsImpersonationContext> object's **Finalize** method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="aee6b-118">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="aee6b-118"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="aee6b-119">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, а при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="aee6b-119">Releases the unmanaged resources used by the <see cref="T:System.Security.Principal.WindowsImpersonationContext" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aee6b-120">Этот метод вызывается методом открытые `Dispose()` метод и <xref:System.Object.Finalize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="aee6b-120">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="aee6b-121">`Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`.</span><span class="sxs-lookup"><span data-stu-id="aee6b-121">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="aee6b-122"><xref:System.Object.Finalize%2A> вызывает `Dispose` с `disposing` значение `false`.</span><span class="sxs-lookup"><span data-stu-id="aee6b-122"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="aee6b-123">При `disposing` параметр имеет значение true, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.Security.Principal.WindowsImpersonationContext> ссылки.</span><span class="sxs-lookup"><span data-stu-id="aee6b-123">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsImpersonationContext> references.</span></span> <span data-ttu-id="aee6b-124">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="aee6b-124">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="aee6b-125">Метод <see langword="Dispose" /> может вызываться несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="aee6b-125"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="aee6b-126">При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="aee6b-126">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="aee6b-127">Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />, в разделе [метода](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="aee6b-127">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="aee6b-128">Дополнительные сведения о <see langword="Dispose" /> и <see cref="M:System.Object.Finalize" />, в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="aee6b-128">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsImpersonationContext.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aee6b-129">Возвращает контекст пользователя пользователю Windows, представленному данным объектом.</span><span class="sxs-lookup"><span data-stu-id="aee6b-129">Reverts the user context to the Windows user represented by this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aee6b-130">В следующем примере показано, как олицетворение удостоверения Windows, с помощью указанного маркера пользователя.</span><span class="sxs-lookup"><span data-stu-id="aee6b-130">The following example shows how to impersonate a Windows identity using a specified user token.</span></span>  
  
 [!code-cpp[Classic WindowsImpersonationContext.Undo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic WindowsImpersonationContext.Undo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WindowsImpersonationContext.Undo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic WindowsImpersonationContext.Undo Example/CS/source.cs#1)]
 [!code-vb[Classic WindowsImpersonationContext.Undo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic WindowsImpersonationContext.Undo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="aee6b-131">Попытка использования данного метода для любых целей, кроме возврата удостоверения в исходное состояние.</span><span class="sxs-lookup"><span data-stu-id="aee6b-131">An attempt is made to use this method for any purpose other than to revert identity to self.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="aee6b-132">Поскольку платформы Microsoft Windows 98 и Windows Millennium Edition не имеют пользователей и токены пользователя, олицетворение не может иметь место на этих платформах.</span><span class="sxs-lookup"><span data-stu-id="aee6b-132">Because Microsoft Windows 98 and Windows Millennium Edition platforms do not have users or user tokens, impersonation cannot take place on those platforms.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>