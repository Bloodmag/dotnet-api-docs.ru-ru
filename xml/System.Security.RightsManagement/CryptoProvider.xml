<Type Name="CryptoProvider" FullName="System.Security.RightsManagement.CryptoProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c234e8f11adfc4fdfdba6bda560ab5779cbdbf76" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36622924" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CryptoProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CryptoProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.CryptoProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CryptoProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoProvider : IDisposable" />
  <TypeSignature Language="F#" Value="type CryptoProvider = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет службы управления правами для шифрования и расшифровки защищенного содержимого.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.CryptoProvider> создается в результате использования <xref:System.Security.RightsManagement.UseLicense.Bind%2A> метод при привязке права управляемого <xref:System.Security.RightsManagement.UseLicense> для <xref:System.Security.RightsManagement.SecureEnvironment>.  
  
 Как и другие <xref:System.Security.RightsManagement> типов, <xref:System.Security.RightsManagement.CryptoProvider> можно использовать только в приложения с полным доверием.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Security.RightsManagement.CryptoProvider> для создаваемого класса <xref:System.IO.Packaging.EncryptedPackageEnvelope>.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.RightsManagement.UseLicense" />
    <altmember cref="T:System.Security.RightsManagement.SecureEnvironment" />
  </Docs>
  <Members>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BlockSize : int" Usage="System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает размер блока шифра в байтах.</summary>
        <value>Размер блока шифра в байтах.  Размер блока по умолчанию для Advanced Encryption Standard (AES) — 8.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `clearText` И `cipherText` буферы, передаваемый <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> и <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> должен быть n *<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> байта, где 'n' должно быть целым числом больше или равно 1.  
  
 Если <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> — `false`, передаваемый буферы <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> должны иметь одинаковую длину, как буферы, передаваемый в <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.  
  
 Если <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> — `true`, передаваемый буферы <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> может быть разной длины из буферов, передаваемый <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (все размеры буферов по-прежнему всегда должен быть кратен <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> байт).  
  
 Объект <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 1 указывает, что шифр шифр потока; <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 2 или более указывает блочного шифра.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> свойства при преобразовании данных открытым текстом зашифрованные текстовые данные.  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundGrants">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt; BoundGrants { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.RightsManagement.ContentGrant&gt; BoundGrants" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundGrants As ReadOnlyCollection(Of ContentGrant)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ BoundGrants { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundGrants : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;" Usage="System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает набор, в котором перечислены прошедшие проверку и предоставленные пользователю права.</summary>
        <value>Набор, в котором перечислены прошедшие проверку и предоставленные пользователю права.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> , чтобы получить список прав, предоставленных через <xref:System.Security.RightsManagement.UseLicense>.  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecrypt">
      <MemberSignature Language="C#" Value="public bool CanDecrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDecrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanDecrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanDecrypt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDecrypt : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, позволяющее определить, есть ли у пользователя право на расшифровку.</summary>
        <value>Если **true** <see cref="T:System.Security.RightsManagement.UseLicense" /> предоставляет права пользователя для расшифровки; в противном случае ** false **.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> Возвращает **true** Если <xref:System.Security.RightsManagement.UseLicense> , привязанных к этому <xref:System.Security.RightsManagement.CryptoProvider> предоставляет пользователю права доступа на чтение, такие как представления, изменения, печати или владельца.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> свойство, чтобы определить возможность расшифровки.  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanEncrypt">
      <MemberSignature Language="C#" Value="public bool CanEncrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEncrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanEncrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanEncrypt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEncrypt : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, позволяющее определить, есть ли у пользователя право на шифрование.</summary>
        <value>Если **true** <see cref="T:System.Security.RightsManagement.UseLicense" /> предоставляет права пользователя для шифрования; в противном случае ** false **.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> Возвращает **true** Если <xref:System.Security.RightsManagement.UseLicense> , привязанных к этому <xref:System.Security.RightsManagement.CryptoProvider> предоставляет пользователю права доступа на запись, такие как редактирования или владельца.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanMergeBlocks">
      <MemberSignature Language="C#" Value="public bool CanMergeBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMergeBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMergeBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMergeBlocks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanMergeBlocks : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, позволяющее определить, могут ли методы <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> и <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> принимать буферы с разной длиной блоков.</summary>
        <value>** true ** если передаваемый буфер <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> может быть разной длины из буфера, переданного в <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; в противном случае ** false ** если буферы, передаваемые <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> и <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> должен иметь точное одинаковую длину.  Для AES значение по умолчанию — ** true **.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `clearText` И `cipherText` буферы, передаваемый <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> и <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> должен быть n *<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> байта, где 'n' должно быть целым числом больше или равно 1.  
  
 Если <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> — **false**, передаваемый буферы <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> должны иметь одинаковую длину, как буферы, передаваемый в <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.  
  
 Если <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> — **true**, передаваемый буферы <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> может быть разной длины из буферов, передаваемый <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (все размеры буферов по-прежнему всегда должен быть кратен <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> байт).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public byte[] Decrypt (byte[] cryptoText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Decrypt(unsigned int8[] cryptoText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrypt (cryptoText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ cryptoText);" />
      <MemberSignature Language="F#" Value="member this.Decrypt : byte[] -&gt; byte[]" Usage="cryptoProvider.Decrypt cryptoText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cryptoText">Зашифрованный текст, который нужно расшифровать.</param>
        <summary>Расшифровывает зашифрованный текст, преобразовывая его в открытый.</summary>
        <returns>Расшифрованный открытый текст параметра <paramref name="cryptoText" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> метод преобразования зашифрованные данные в незашифрованные данные.  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewdecrypt)]
 [!code-vb[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="cipherText" /> имеет значение null.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">Право на расшифровку не предоставляется.</exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Освобождает ресурсы, используемые объектом <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cryptoProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> выполняет <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**true**).  
  
 Вызовите метод <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> по окончании использования класса <xref:System.Security.RightsManagement.CryptoProvider>. Метод <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> оставляет класс <xref:System.Security.RightsManagement.CryptoProvider> в непригодном для использования состоянии. После вызова метода <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Security.RightsManagement.CryptoProvider> , сборщик мусора мог освободить память, <xref:System.Security.RightsManagement.CryptoProvider> занимаемую. Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [метода](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Всегда вызывайте метод <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.Security.RightsManagement.CryptoProvider>. В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Security.RightsManagement.CryptoProvider> метод `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cryptoProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Security.RightsManagement.CryptoProvider" />, а при необходимости освобождает также управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом открытые `Dispose()` метод и <xref:System.Object.Finalize%2A> метод. `Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`. <xref:System.Object.Finalize%2A> вызывает `Dispose` с `disposing` значение `false`.  
  
 При `disposing` параметр имеет значение true, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.Security.RightsManagement.CryptoProvider> ссылки. Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> может вызываться несколько раз другими объектами. При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />. Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />, в разделе [реализация Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Дополнительные сведения о <see langword="Dispose" /> и <see cref="M:System.Object.Finalize" />, в разделе [очистки неуправляемых Resources](~/docs/standard/garbage-collection/unmanaged.md) и [переопределение метода Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (byte[] clearText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(unsigned int8[] clearText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (clearText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ clearText);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : byte[] -&gt; byte[]" Usage="cryptoProvider.Encrypt clearText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clearText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="clearText">Открытый текст для шифрования.</param>
        <summary>Шифрует открытый текст.</summary>
        <returns>Зашифрованный текст из заданного <paramref name="clearText" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Байтовая длина `clearText` буфера должен быть кратен шифр <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> свойство.  
  
 Система управления цифровыми правами использует блочного шифра AES.  С помощью AES блоки шифруются независимо таким образом, что два блока идентичного открытого текста результаты идентичные зашифрованного текста.  Чтобы свести к минимуму потенциальную угрозу расшифровки при независимом шифровании блоков, в приложениях должны применяться методы изменения содержимого, например сжатие, которые позволят избежать шифрования идентичных блоков открытого текста.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> метода для преобразования текстовых данных в зашифрованные текстовые данные.  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="clearText" /> имеет значение null.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">Шифрование запрещено.</exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CryptoProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CryptoProvider ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cryptoProvider.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает ресурсы и внутреннюю очистку, прежде чем экземпляр будет удален при сборке мусора.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> выполняет <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**false**).  
  
 Этот метод переопределяет <xref:System.Object.Finalize%2A>. Код приложения не должен вызывать этот метод; Объект `Finalize` метод автоматически вызывается во время сборки мусора, если завершение работы сборщика мусора была отключена с помощью вызова <xref:System.GC.SuppressFinalize%2A> метод.  
  
 Дополнительные сведения см. в разделе [методы Finalize и деструкторы](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md), и [переопределение метода Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>