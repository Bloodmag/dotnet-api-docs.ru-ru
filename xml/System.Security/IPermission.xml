<Type Name="IPermission" FullName="System.Security.IPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab62c8d43e0ca696a66655b37755ebe3e68e56e6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30499668" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPermission : System.Security.ISecurityEncodable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPermission implements class System.Security.ISecurityEncodable" />
  <TypeSignature Language="DocId" Value="T:System.Security.IPermission" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPermission&#xA;Implements ISecurityEncodable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPermission : System::Security::ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="453dc-101">Определяет методы, реализуемые типами разрешений.</span>
      <span class="sxs-lookup">
        <span data-stu-id="453dc-101">Defines methods implemented by permission types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="453dc-102">Разрешения в среду, объекты, описывающие наборы операций, которые могут быть закреплены за указанные ресурсы.</span><span class="sxs-lookup"><span data-stu-id="453dc-102">Permissions in the common language runtime are objects that describe sets of operations that can be secured for specified resources.</span></span> <span data-ttu-id="453dc-103">Объект разрешения описывает операции или доступ, подлежащие контролю безопасности; он не представляет доступ или право на выполнение операций.</span><span class="sxs-lookup"><span data-stu-id="453dc-103">A permission object describes operations or access that is subject to security control; it does not represent access or a right to perform operations.</span></span> <span data-ttu-id="453dc-104">Код приложения и системы безопасности .NET Framework используются разрешения в одним из следующих способов.</span><span class="sxs-lookup"><span data-stu-id="453dc-104">Permissions are used by both application code and the .NET Framework security system in the following ways.</span></span>  
  
-   <span data-ttu-id="453dc-105">Код запрашивает разрешения, необходимые для его выполнения.</span><span class="sxs-lookup"><span data-stu-id="453dc-105">Code requests the permissions it needs in order to run.</span></span>  
  
-   <span data-ttu-id="453dc-106">Политика системы безопасности предоставляет разрешения для кода, чтобы его выполнить.</span><span class="sxs-lookup"><span data-stu-id="453dc-106">The security system policy grants permissions to code in order for it to run.</span></span>  
  
-   <span data-ttu-id="453dc-107">Код требует, чтобы вызывающий код имеет разрешение.</span><span class="sxs-lookup"><span data-stu-id="453dc-107">Code demands that calling code has a permission.</span></span>  
  
-   <span data-ttu-id="453dc-108">Код переопределяет стека безопасности, с помощью assert/deny и permit only.</span><span class="sxs-lookup"><span data-stu-id="453dc-108">Code overrides the security stack using assert/deny/permit-only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="453dc-109">При написании нового разрешения необходимо реализовать этот интерфейс в классе.</span><span class="sxs-lookup"><span data-stu-id="453dc-109">If you write a new permission, you must implement this interface in your class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="453dc-110">Разрешение может осуществляться из нескольких потоков.</span><span class="sxs-lookup"><span data-stu-id="453dc-110">A permission can be accessed by multiple threads.</span></span> <span data-ttu-id="453dc-111">При реализации этого интерфейса, необходимо гарантировать, что <xref:System.Security.IPermission.IsSubsetOf%2A>, <xref:System.Security.IPermission.Intersect%2A>, <xref:System.Security.IPermission.Union%2A>, и <xref:System.Security.IPermission.Copy%2A> реализации метода являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="453dc-111">When implementing this interface, you must guarantee that the <xref:System.Security.IPermission.IsSubsetOf%2A>, <xref:System.Security.IPermission.Intersect%2A>, <xref:System.Security.IPermission.Union%2A>, and <xref:System.Security.IPermission.Copy%2A> method implementations are thread safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="453dc-112">В этом примере показано, как определить класс разрешений для использования с доступом для кода.</span><span class="sxs-lookup"><span data-stu-id="453dc-112">This example shows how to define a permission class for use with code access security.</span></span> <span data-ttu-id="453dc-113">Все необходимые интерфейсы разрешений реализованы.</span><span class="sxs-lookup"><span data-stu-id="453dc-113">All of the necessary permission interfaces are implemented.</span></span>  
  
 [!code-cpp[Permission#1](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#1)]
 [!code-csharp[Permission#1](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#1)]
 [!code-vb[Permission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="453dc-114">Создает и возвращает идентичную копию текущего разрешения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-114">Creates and returns an identical copy of the current permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="453dc-115">Копия текущего разрешения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-115">A copy of the current permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="453dc-116">Копия разрешения предоставляет такой же доступ к ресурсам, что само разрешение.</span><span class="sxs-lookup"><span data-stu-id="453dc-116">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="453dc-117">В следующем примере кода демонстрируется реализация <xref:System.Security.IPermission.Copy%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="453dc-117">The following code example demonstrates implementing the <xref:System.Security.IPermission.Copy%2A> method.</span></span> <span data-ttu-id="453dc-118">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.IPermission> класса.</span><span class="sxs-lookup"><span data-stu-id="453dc-118">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#4](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#4)]
 [!code-csharp[Permission#4](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#4)]
 [!code-vb[Permission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="453dc-119">Создает исключение <see cref="T:System.Security.SecurityException" /> во время выполнения, если требования безопасности не выполнены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-119">Throws a <see cref="T:System.Security.SecurityException" /> at run time if the security requirement is not met.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="453dc-120">Этот метод обычно используется с защищенными библиотеками для обеспечения наличия у вызывающих объектов разрешений на доступ к ресурсу.</span><span class="sxs-lookup"><span data-stu-id="453dc-120">This method is typically used by secure libraries to ensure that callers have permission to access a resource.</span></span> <span data-ttu-id="453dc-121">Например, файл класса в безопасной библиотеке классов вызывает <xref:System.Security.CodeAccessPermission.Demand%2A> для необходимого <xref:System.Security.Permissions.FileIOPermission> перед выполнением операции файл запрошенную вызывающим.</span><span class="sxs-lookup"><span data-stu-id="453dc-121">For example, a file class in a secure class library calls <xref:System.Security.CodeAccessPermission.Demand%2A> for the necessary <xref:System.Security.Permissions.FileIOPermission> before performing a file operation requested by the caller.</span></span>  
  
 <span data-ttu-id="453dc-122">Несмотря на то, что большинство классов, реализующих этот метод интерфейса, удовлетворяют требованиям безопасности, выполняя полную проверку стека, обход стека выполняется не обязательно.</span><span class="sxs-lookup"><span data-stu-id="453dc-122">Although the majority of the classes that implement this interface method satisfy the security criteria by performing a full stack walk, a stack walk is not necessarily performed.</span></span> <span data-ttu-id="453dc-123">Пример реализации, который не выполняет обход стека — <xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="453dc-123">An example of an implementation that does not perform a stack walk is <xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="453dc-124">Когда выполняется обход стека, разрешения для кода, который вызывает этот метод, не проверяется; Проверка начинается с непосредственный вызывающий объект кода и продолжается вверх по стеку.</span><span class="sxs-lookup"><span data-stu-id="453dc-124">When a stack walk is performed, the permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="453dc-125">Стек вызовов обычно представляется как растет вниз, так что методы, расположенные выше в стеке вызовов вызывать методы, расположенные в стеке вызовов.</span><span class="sxs-lookup"><span data-stu-id="453dc-125">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="453dc-126"><xref:System.Security.CodeAccessPermission.Demand%2A> выполняется успешно, только если не <xref:System.Security.SecurityException> возникает.</span><span class="sxs-lookup"><span data-stu-id="453dc-126"><xref:System.Security.CodeAccessPermission.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="453dc-127">Разрешение, пересекающееся с текущим разрешением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-127">A permission to intersect with the current permission.</span>
          </span>
          <span data-ttu-id="453dc-128">Его тип должен совпадать с типом текущего разрешения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-128">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="453dc-129">Создает и возвращает разрешение, представляющее собой пересечение текущего и указанного разрешений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-129">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="453dc-130">Новое разрешение, представляющее собой пересечение текущего и указанного разрешений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-130">A new permission that represents the intersection of the current permission and the specified permission.</span>
          </span>
          <span data-ttu-id="453dc-131">Если пересечение пусто, новое разрешение имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-131">This new permission is <see langword="null" /> if the intersection is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="453dc-132">Пересечение двух разрешений является разрешением, которое описывает набор операций, в обоих разрешениях.</span><span class="sxs-lookup"><span data-stu-id="453dc-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="453dc-133">Только запрос, передающий оба исходных разрешения, передает их пересечение.</span><span class="sxs-lookup"><span data-stu-id="453dc-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="453dc-134">Следующие инструкции должны выполняться для всех реализаций <xref:System.Security.IPermission.Intersect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="453dc-134">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.Intersect%2A> method.</span></span> <span data-ttu-id="453dc-135">`X` и `Y` представляют <xref:System.Security.IPermission> ссылок на объекты, которые не являются `null`.</span><span class="sxs-lookup"><span data-stu-id="453dc-135">`X` and `Y` represent <xref:System.Security.IPermission> object references that are not `null`.</span></span>  
  
-   <span data-ttu-id="453dc-136">`X`. Intersect (`X`) возвращает значение, равное `X`.</span><span class="sxs-lookup"><span data-stu-id="453dc-136">`X`.Intersect(`X`) returns a value equal to `X`.</span></span>  
  
-   <span data-ttu-id="453dc-137">`X`. Intersect (`Y`) возвращает то же значение, что `Y`. Intersect (`X`).</span><span class="sxs-lookup"><span data-stu-id="453dc-137">`X`.Intersect(`Y`) returns the same value as `Y`.Intersect(`X`).</span></span>  
  
-   <span data-ttu-id="453dc-138">`X`. Intersect (`null`) возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="453dc-138">`X`.Intersect(`null`) returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="453dc-139">В следующем примере кода демонстрируется реализация <xref:System.Security.IPermission.Intersect%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="453dc-139">The following code example demonstrates implementing the <xref:System.Security.IPermission.Intersect%2A> method.</span></span> <span data-ttu-id="453dc-140">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.IPermission> класса.</span><span class="sxs-lookup"><span data-stu-id="453dc-140">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#2](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#2)]
 [!code-csharp[Permission#2](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#2)]
 [!code-vb[Permission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="453dc-141">Параметр <paramref name="target" /> не равен <see langword="null" /> и не является экземпляром того же класса, что и текущее разрешение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-141">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="453dc-142">Разрешение, для которого требуется проверить отношение подмножества.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-142">A permission that is to be tested for the subset relationship.</span>
          </span>
          <span data-ttu-id="453dc-143">Его тип должен совпадать с типом текущего разрешения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-143">This permission must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="453dc-144">Определяет, является ли текущее разрешение подмножеством указанного разрешения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-144">Determines whether the current permission is a subset of the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="453dc-145">Значение <see langword="true" />, если текущее разрешение является подмножеством заданного разрешения; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-145">
              <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="453dc-146">Текущее разрешение является подмножеством указанного разрешения, если текущее разрешение задает набор операций, полностью содержащихся в заданном разрешении.</span><span class="sxs-lookup"><span data-stu-id="453dc-146">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="453dc-147">Например, разрешение, которое предоставляет доступ к C:\example.txt является подмножеством разрешения, предоставляющего доступ к C:\\.</span><span class="sxs-lookup"><span data-stu-id="453dc-147">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="453dc-148">Если этот метод возвращает `true`, текущее разрешение не предоставляет большего доступа к защищенному ресурсу, чем указанное разрешение.</span><span class="sxs-lookup"><span data-stu-id="453dc-148">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="453dc-149">Следующие инструкции должны выполняться для всех реализаций <xref:System.Security.IPermission.IsSubsetOf%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="453dc-149">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="453dc-150">`X`, `Y`, и `Z` представляют <xref:System.Security.IPermission> объектов, которые не являются `null`.</span><span class="sxs-lookup"><span data-stu-id="453dc-150">`X`, `Y`, and `Z` represent <xref:System.Security.IPermission> objects that are not `null`.</span></span>  
  
-   <span data-ttu-id="453dc-151">`X`. IsSubsetOf (`X`) возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="453dc-151">`X`.IsSubsetOf(`X`) returns `true`.</span></span>  
  
-   <span data-ttu-id="453dc-152">`X`. IsSubsetOf (`Y`) возвращает то же значение, что `Y`. IsSubsetOf (`X`), только если `X` и `Y` представляют один и тот же набор разрешений.</span><span class="sxs-lookup"><span data-stu-id="453dc-152">`X`.IsSubsetOf(`Y`) returns the same value as `Y`.IsSubsetOf(`X`) if and only if `X` and `Y` represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="453dc-153">Если `X`. IsSubsetOf (`Y`) и `Y`. IsSubsetOf (`Z`) в обоих случаях возвращается `true`, `X`. IsSubsetOf (`Z`) возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="453dc-153">If `X`.IsSubsetOf(`Y`) and `Y`.IsSubsetOf(`Z`) both return `true`, `X`.IsSubsetOf(`Z`) returns `true`.</span></span>  
  
 <span data-ttu-id="453dc-154">Если `X` представляет пустой <xref:System.Security.IPermission> объекта с состоянием разрешения <xref:System.Security.Permissions.PermissionState.None> и `Y` представляет <xref:System.Security.IPermission> объект, `null`, `X`. IsSubsetOf (`Y`) возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="453dc-154">If `X` represents an empty <xref:System.Security.IPermission> object with a permission state of <xref:System.Security.Permissions.PermissionState.None> and `Y` represents an <xref:System.Security.IPermission> object that is `null`, `X`.IsSubsetOf(`Y`) returns `true`.</span></span> <span data-ttu-id="453dc-155">Если `Z` также является пустое разрешение, набор составной операции `X`. UNION(Z). IsSubsetOf(Y) также вернет `true` поскольку объединение двух пустых разрешений является пустое разрешение.</span><span class="sxs-lookup"><span data-stu-id="453dc-155">If `Z` is also an empty permission, the compound set operation `X`.Union(Z).IsSubsetOf(Y) also returns `true` because the union of two empty permissions is an empty permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="453dc-156">В следующем примере кода демонстрируется реализация <xref:System.Security.IPermission.IsSubsetOf%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="453dc-156">The following code example demonstrates implementing the <xref:System.Security.IPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="453dc-157">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.IPermission> класса.</span><span class="sxs-lookup"><span data-stu-id="453dc-157">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#3](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#3)]
 [!code-csharp[Permission#3](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#3)]
 [!code-vb[Permission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="453dc-158">Параметр <paramref name="target" /> не равен <see langword="null" /> и не относится к тому же типу, что и текущее разрешение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-158">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="453dc-159">Разрешение, которое требуется объединить с текущим разрешением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-159">A permission to combine with the current permission.</span>
          </span>
          <span data-ttu-id="453dc-160">Его тип должен совпадать с типом текущего разрешения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-160">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="453dc-161">Создает разрешение, представляющее собой объединение текущего и указанного разрешений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-161">Creates a permission that is the union of the current permission and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="453dc-162">Новое разрешение, представляющее собой объединение текущего и указанного разрешений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-162">A new permission that represents the union of the current permission and the specified permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="453dc-163">Результат вызова метода <xref:System.Security.IPermission.Union%2A> является разрешение, представляющее все действия, представленные текущего разрешения и указанного разрешений.</span><span class="sxs-lookup"><span data-stu-id="453dc-163">The result of a call to <xref:System.Security.IPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="453dc-164">Любой запрос, передающий любое разрешение, передает их объединение.</span><span class="sxs-lookup"><span data-stu-id="453dc-164">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="453dc-165">Следующие инструкции должны выполняться для всех реализаций <xref:System.Security.IPermission.Union%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="453dc-165">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.Union%2A> method.</span></span> <span data-ttu-id="453dc-166">`X` и `Y` представляют <xref:System.Security.IPermission> объектов, которые не являются `null`.</span><span class="sxs-lookup"><span data-stu-id="453dc-166">`X` and `Y` represent <xref:System.Security.IPermission> objects that are not `null`.</span></span>  
  
-   <span data-ttu-id="453dc-167">`X`. UNION (`X`) возвращает объект, имеющий то же значение, что `X`.</span><span class="sxs-lookup"><span data-stu-id="453dc-167">`X`.Union(`X`) returns an object that has the same value as `X`.</span></span>  
  
-   <span data-ttu-id="453dc-168">`X`. UNION (`Y`) возвращает объект, имеющий то же значение, что и объект, возвращаемый `Y`. UNION (`X`).</span><span class="sxs-lookup"><span data-stu-id="453dc-168">`X`.Union(`Y`) returns an object that has the same value as the object returned by `Y`.Union(`X`).</span></span>  
  
-   <span data-ttu-id="453dc-169">`X`. UNION (`null`) возвращает объект, имеющий то же значение, что `X`.</span><span class="sxs-lookup"><span data-stu-id="453dc-169">`X`.Union(`null`) returns an object that has the same value as `X`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="453dc-170">В следующем примере кода демонстрируется реализация <xref:System.Security.IPermission.Union%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="453dc-170">The following code example demonstrates implementing the <xref:System.Security.IPermission.Union%2A> method.</span></span> <span data-ttu-id="453dc-171">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.IPermission> класса.</span><span class="sxs-lookup"><span data-stu-id="453dc-171">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#5](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#5)]
 [!code-csharp[Permission#5](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#5)]
 [!code-vb[Permission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#5)]  
  
-  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="453dc-172">Параметр <paramref name="target" /> не равен <see langword="null" /> и не относится к тому же типу, что и текущее разрешение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="453dc-172">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>