<Type Name="IStackWalk" FullName="System.Security.IStackWalk">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b37ff083eff27618aa07c0a744562f3f8a613708" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.IStackWalk" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStackWalk" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b0ac5-101">Управляет проверкой стека, которая определяет, имеют ли все вызывающие объекты в стеке вызовов разрешения, необходимые для доступа к защищенному ресурсу.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0ac5-101">Manages the stack walk that determines whether all callers in the call stack have the required permissions to access a protected resource.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0ac5-102">Частично доверенный код всегда представляет угрозу безопасности.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-102">Partially trusted code always presents a security risk.</span></span> <span data-ttu-id="b0ac5-103">Иногда, ими можно управлять для выполнения действий от имени вредоносный код, который не имеет разрешения на доступ к ресурсу.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-103">It can sometimes be manipulated to perform actions on behalf of malicious code that does not have permission to access a resource.</span></span> <span data-ttu-id="b0ac5-104">Таким образом вредоносный код может получить высокий уровень доступа, чем следует разрешить.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-104">In this way, malicious code can achieve higher security access than it should be allowed.</span></span>  
  
 <span data-ttu-id="b0ac5-105">Общеязыковая среда выполнения защищает управляемый код от подобных атак, выполнив проверку стека вызова.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-105">The common language runtime helps protect managed code from these attacks by running a stack walk on all calls.</span></span> <span data-ttu-id="b0ac5-106">Обход стека требует, что весь код в стеке вызовов имеет разрешение на доступ к защищенному ресурсу.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-106">The stack walk requires that all code in the call stack has permission to access a protected resource.</span></span> <span data-ttu-id="b0ac5-107">Поскольку коду, выполняющему атаки, всегда попадает в стек вызовов, он сможет превышать свои собственные разрешения безопасности.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-107">Because the code attempting the attack will always be somewhere in the call stack, it will be unable to exceed its own security permissions.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Assert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0ac5-108">Подтверждает, что вызывающий код может получить доступ к ресурсу, определяемому текущим объектом разрешения, даже если вызывающим объектам выше в стеке вызовов не предоставлено разрешение на доступ к ресурсу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0ac5-108">Asserts that the calling code can access the resource identified by the current permission object, even if callers higher in the stack have not been granted permission to access the resource.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0ac5-109">Вызов <xref:System.Security.IStackWalk.Assert%2A> прекращает проверку наличия разрешений на вызывающим объектам выше в стеке вызовов.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-109">Calling <xref:System.Security.IStackWalk.Assert%2A> stops the permission check on callers higher in the call stack.</span></span> <span data-ttu-id="b0ac5-110">Таким образом даже если эти вызывающие объекты не имеют необходимых разрешений, они по-прежнему доступны ресурсы.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-110">Therefore, even if these callers do not have the requisite permissions, they can still access resources.</span></span> <span data-ttu-id="b0ac5-111">Утверждение действует только в том случае, если код, вызывающий <xref:System.Security.IStackWalk.Assert%2A> проходит проверку безопасности на наличие утверждающего разрешения.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-111">An assertion is effective only if the code that calls <xref:System.Security.IStackWalk.Assert%2A> passes the security check for the permission that it is asserting.</span></span>  
  
 <span data-ttu-id="b0ac5-112">Вызов <xref:System.Security.IStackWalk.Assert%2A> действует только до возврата вызывающему коду, вызвавшему ее или до последующего вызова <xref:System.Security.IStackWalk.Assert%2A> сделает предыдущее утверждение неэффективным.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-112">A call to <xref:System.Security.IStackWalk.Assert%2A> is effective until the calling code returns to its caller or until a subsequent call to <xref:System.Security.IStackWalk.Assert%2A> renders the previous assertion ineffective.</span></span> <span data-ttu-id="b0ac5-113">Кроме того <xref:System.Security.CodeAccessPermission.RevertAssert%2A> или <xref:System.Security.CodeAccessPermission.RevertAll%2A> удаляет ожидающие <xref:System.Security.IStackWalk.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-113">Also, <xref:System.Security.CodeAccessPermission.RevertAssert%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> removes a pending <xref:System.Security.IStackWalk.Assert%2A>.</span></span>  
  
 <span data-ttu-id="b0ac5-114"><xref:System.Security.IStackWalk.Assert%2A> учитывается для разрешения не предоставляются, так как запрос на это разрешение не будет успешным.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-114"><xref:System.Security.IStackWalk.Assert%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="b0ac5-115">Тем не менее если код, расположенный ниже в стеке вызовов вызывает <xref:System.Security.IStackWalk.Demand%2A> этим разрешением, <xref:System.Security.SecurityException> возникает при проверке стека достигается код, который пытался вызвать <xref:System.Security.IStackWalk.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-115">However, if code lower on the call stack calls <xref:System.Security.IStackWalk.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.IStackWalk.Assert%2A>.</span></span> <span data-ttu-id="b0ac5-116">Это происходит потому, что код, вызвавший <xref:System.Security.IStackWalk.Assert%2A> не предоставлено разрешение, несмотря на то, что он пытался <xref:System.Security.IStackWalk.Assert%2A> его.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-116">This happens because the code that called <xref:System.Security.IStackWalk.Assert%2A> has not been granted the permission, even though it tried to <xref:System.Security.IStackWalk.Assert%2A> it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b0ac5-117">Поскольку вызов <xref:System.Security.IStackWalk.Assert%2A> удаляет требование, что весь код в цепочке вызовов должно быть предоставлено разрешение на доступ к указанному ресурсу, может привести к возникновению уязвимости системы безопасности неправильное или неверно.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-117">Because calling <xref:System.Security.IStackWalk.Assert%2A> removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</span></span> <span data-ttu-id="b0ac5-118">Таким образом он должен использоваться с большой осторожностью.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-118">Therefore, it should be used with great caution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="b0ac5-119">У вызывающего кода отсутствует <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0ac5-119">The calling code does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0ac5-120">Определяет во время выполнения, было ли разрешение, указанное текущим объектом разрешений, предоставлено всем вызывающим методам в стеке вызовов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0ac5-120">Determines at run time whether all callers in the call stack have been granted the permission specified by the current permission object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0ac5-121">Этот метод обычно используется с защищенными библиотеками для обеспечения наличия у вызывающих объектов разрешений на доступ к ресурсу.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-121">This method is typically used by secure libraries to ensure that callers have permission to access a resource.</span></span> <span data-ttu-id="b0ac5-122">Например, файл класса в безопасной библиотеке классов вызывает <xref:System.Security.IStackWalk.Demand%2A> для необходимого <xref:System.Security.Permissions.FileIOPermission> перед выполнением операции файл запрошенную вызывающим.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-122">For example, a file class in a secure class library calls <xref:System.Security.IStackWalk.Demand%2A> for the necessary <xref:System.Security.Permissions.FileIOPermission> before performing a file operation requested by the caller.</span></span>  
  
 <span data-ttu-id="b0ac5-123">Разрешения для кода, который вызывает этот метод, не проверяется; Проверка начинается с непосредственный вызывающий объект кода и продолжается вверх по стеку.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-123">The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="b0ac5-124"><xref:System.Security.IStackWalk.Demand%2A> выполняется успешно, только если не <xref:System.Security.SecurityException> возникает.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-124"><xref:System.Security.IStackWalk.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="b0ac5-125">Вызывающий метод, расположенный выше в стеке вызовов, не имеет разрешения, указанного текущим объектом разрешений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0ac5-125">A caller higher in the call stack does not have the permission specified by the current permission object.</span>
          </span>
          <span data-ttu-id="b0ac5-126">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0ac5-126">-or-</span>
          </span>
          <span data-ttu-id="b0ac5-127">Вызывающий метод в стеке вызовов вызвал <see cref="M:System.Security.IStackWalk.Deny" /> в текущем объекте разрешений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0ac5-127">A caller in the call stack has called <see cref="M:System.Security.IStackWalk.Deny" /> on the current permission object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Deny();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0ac5-128">Вызывает ошибку каждого <see cref="M:System.Security.IStackWalk.Demand" /> для текущего объекта, проходящего через вызывающий код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0ac5-128">Causes every <see cref="M:System.Security.IStackWalk.Demand" /> for the current object that passes through the calling code to fail.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0ac5-129">Этот метод не позволяет вызывающим объектам выше в стеке вызовов доступ к защищенному ресурсу через код, вызывающий этот метод, даже если этим вызывающим предоставлено разрешение на доступ к нему.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-129">This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</span></span> <span data-ttu-id="b0ac5-130">Стек вызовов обычно представляется как растет вниз, так что методы, расположенные выше в стеке вызовов вызывать методы, расположенные в стеке вызовов.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-130">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="b0ac5-131"><xref:System.Security.IStackWalk.Deny%2A> можно ограничить ответственность программиста или предотвратить случайное уязвимостей, поскольку он не позволяет использовать метод, вызывающий <xref:System.Security.IStackWalk.Deny%2A> не могут использоваться для доступа к ресурсу, защищенному путем отказа в разрешении.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-131"><xref:System.Security.IStackWalk.Deny%2A> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <xref:System.Security.IStackWalk.Deny%2A> from being used to access the resource protected by the denied permission.</span></span> <span data-ttu-id="b0ac5-132">Если метод вызывает метод <xref:System.Security.IStackWalk.Deny%2A> для разрешения и если <xref:System.Security.IStackWalk.Demand%2A> для этого разрешения вызывающий объект, расположенный ниже в стеке вызовов, то проверка безопасности завершится ошибкой при достижении <xref:System.Security.IStackWalk.Deny%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-132">If a method calls <xref:System.Security.IStackWalk.Deny%2A> on a permission, and if a <xref:System.Security.IStackWalk.Demand%2A> for that permission is invoked by a caller lower in the call stack, that security check will fail when it reaches the <xref:System.Security.IStackWalk.Deny%2A>.</span></span>  
  
 <span data-ttu-id="b0ac5-133"><xref:System.Security.IStackWalk.Deny%2A> учитывается для разрешения не предоставляются, так как запрос на это разрешение не будет успешным.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-133"><xref:System.Security.IStackWalk.Deny%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b0ac5-134">Этот метод нельзя переопределить.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b0ac5-134">You cannot override this method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PermitOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0ac5-135">Принудительно блокирует все проходящие через вызывающий код вызовы <see cref="M:System.Security.IStackWalk.Demand" /> для всех объектов, кроме текущего, даже если расположенный выше в стеке вызовов код обладает разрешениями на доступ к другим ресурсам.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0ac5-135">Causes every <see cref="M:System.Security.IStackWalk.Demand" /> for all objects except the current one that passes through the calling code to fail, even if code higher in the call stack has been granted permission to access other resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0ac5-136"><xref:System.Security.IStackWalk.PermitOnly%2A> Аналогично <xref:System.Security.IStackWalk.Deny%2A>, в том, что оба метода приводят стека возвращать ошибку, если они в противном случае будет выполнено успешно.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-136"><xref:System.Security.IStackWalk.PermitOnly%2A> is similar to <xref:System.Security.IStackWalk.Deny%2A>, in that both cause stack walks to fail when they would otherwise succeed.</span></span> <span data-ttu-id="b0ac5-137">Различие состоит в том <xref:System.Security.IStackWalk.Deny%2A> задает разрешения, которые стека терпит неудачу, но <xref:System.Security.IStackWalk.PermitOnly%2A> указывает только разрешения, которые не приводят к сбою стека.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-137">The difference is that <xref:System.Security.IStackWalk.Deny%2A> specifies permissions that will cause the stack walk to fail, but <xref:System.Security.IStackWalk.PermitOnly%2A> specifies the only permissions that do not cause the stack walk to fail.</span></span> <span data-ttu-id="b0ac5-138">Вызовите этот метод, чтобы убедиться, что код может использоваться для доступа к только к заданным ресурсам.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-138">Call this method to ensure that your code can be used to access only the specified resources.</span></span>  
  
 <span data-ttu-id="b0ac5-139"><xref:System.Security.IStackWalk.PermitOnly%2A> учитывается для разрешения не предоставляются, так как запрос на это разрешение не будет успешным.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-139"><xref:System.Security.IStackWalk.PermitOnly%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="b0ac5-140">Тем не менее если код, расположенный ниже, при вызове стеке вызовов <xref:System.Security.IStackWalk.Demand%2A> этим разрешением, <xref:System.Security.SecurityException> возникает при проверке стека достигается код, который пытался вызвать <xref:System.Security.IStackWalk.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-140">However, if code lower on the call stack later calls <xref:System.Security.IStackWalk.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.IStackWalk.PermitOnly%2A>.</span></span> <span data-ttu-id="b0ac5-141">Это так, как код, вызвавший <xref:System.Security.IStackWalk.PermitOnly%2A> не предоставлено разрешение, несмотря на вызов <xref:System.Security.IStackWalk.PermitOnly%2A> для этого разрешения.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-141">This is because the code that called <xref:System.Security.IStackWalk.PermitOnly%2A> has not been granted the permission, even though it called <xref:System.Security.IStackWalk.PermitOnly%2A> for that permission.</span></span> <span data-ttu-id="b0ac5-142">Стек вызовов обычно представляется как растет вниз, так что методы, расположенные выше в стеке вызовов вызывать методы, расположенные в стеке вызовов.</span><span class="sxs-lookup"><span data-stu-id="b0ac5-142">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>