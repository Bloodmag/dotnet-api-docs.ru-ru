<Type Name="IStackWalk" FullName="System.Security.IStackWalk">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68bb1d581343b243676d9e52c3b1ec47ab5eed42" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49143202" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.IStackWalk" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStackWalk" />
  <TypeSignature Language="F#" Value="type IStackWalk = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Управляет проверкой стека, которая определяет, имеют ли все вызывающие объекты в стеке вызовов разрешения, необходимые для доступа к защищенному ресурсу.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Частично доверенный код всегда представляет угрозу безопасности. Иногда, ими можно управлять для выполнения действий от имени вредоносный код, который не имеет разрешения на доступ к ресурсу. В этом случае вредоносный код может получить высокий уровень доступа, чем ему должен быть разрешен.  
  
 Среда CLR помогает защитить управляемого кода от таких атак, выполнив обход стека вызова. Обход стека требует, что весь код в стеке вызовов имеет разрешение на доступ к защищенному ресурсу. Так как коду, выполняющему атака всегда будет где-нибудь в стеке вызовов, он сможет превысить собственные разрешения безопасности.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Assert();" />
      <MemberSignature Language="F#" Value="abstract member Assert : unit -&gt; unit" Usage="iStackWalk.Assert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Подтверждает, что вызывающий код может получить доступ к ресурсу, определяемому текущим объектом разрешения, даже если вызывающим объектам выше в стеке вызовов не предоставлено разрешение на доступ к ресурсу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов <xref:System.Security.IStackWalk.Assert%2A> прекращает проверку наличия разрешений на вызывающим объектам выше в стеке вызовов. Таким образом даже если эти вызывающие объекты не имеют необходимых разрешений, они могут осуществлять доступ к ресурсам. Утверждение действует только в том случае, если код, вызывающий <xref:System.Security.IStackWalk.Assert%2A> проходит проверку безопасности для разрешения, которое утверждающего.  
  
 Вызов <xref:System.Security.IStackWalk.Assert%2A> вступает в силу, пока вызывающий код возвращает в вызывающий его объект, или до последующего вызова <xref:System.Security.IStackWalk.Assert%2A> сделает предыдущее утверждение неэффективным. Кроме того <xref:System.Security.CodeAccessPermission.RevertAssert%2A> или <xref:System.Security.CodeAccessPermission.RevertAll%2A> удаляет ожидающие <xref:System.Security.IStackWalk.Assert%2A>.  
  
 <xref:System.Security.IStackWalk.Assert%2A> учитывается для разрешения не предоставлены, так как запрос на это разрешение не будет выполнено. Тем не менее если код, расположенный ниже в стеке вызовов вызывает <xref:System.Security.IStackWalk.Demand%2A> для данного разрешения <xref:System.Security.SecurityException> возникает, если обход стека достигнет этого кода, который пытался вызвать <xref:System.Security.IStackWalk.Assert%2A>. Это происходит потому, что код, вызвавший <xref:System.Security.IStackWalk.Assert%2A> не предоставлено разрешение, несмотря на то, что он пытался <xref:System.Security.IStackWalk.Assert%2A> его.  
  
> [!CAUTION]
>  Поскольку вызов <xref:System.Security.IStackWalk.Assert%2A> удаляет требование, что весь код в цепочке вызовов должно быть предоставлено разрешение на доступ к указанному ресурсу, может привести к возникновению уязвимости системы безопасности неправильное или неправильно. Таким образом его можно использовать с большой осторожностью.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">У вызывающего кода отсутствует <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</exception>
        <related type="Article" href="~/docs/framework/misc/using-the-assert-method.md">Использование метода Assert</related>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit" Usage="iStackWalk.Demand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Определяет во время выполнения, было ли разрешение, указанное текущим объектом разрешений, предоставлено всем вызывающим методам в стеке вызовов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно этот метод используется безопасных библиотек, чтобы убедиться, что вызывающие объекты имеют разрешение на доступ к ресурсу. Например, файл класса в безопасной библиотеке классов вызывает <xref:System.Security.IStackWalk.Demand%2A> для необходимого <xref:System.Security.Permissions.FileIOPermission> перед выполнением операции файл запрошенный вызывающей стороной.  
  
 Разрешения кода, который вызывает этот метод, не проверяется; Проверка начинается с непосредственный вызывающий объект этого кода и продолжается вверх по стеку. <xref:System.Security.IStackWalk.Demand%2A> выполняется успешно, только если не <xref:System.Security.SecurityException> возникает.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Вызывающий метод, расположенный выше в стеке вызовов, не имеет разрешения, указанного текущим объектом разрешений.  
  
- или - 
Вызывающий метод в стеке вызовов вызвал <see cref="M:System.Security.IStackWalk.Deny" /> в текущем объекте разрешений.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Deny();" />
      <MemberSignature Language="F#" Value="abstract member Deny : unit -&gt; unit" Usage="iStackWalk.Deny " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывает ошибку каждого <see cref="M:System.Security.IStackWalk.Demand" /> для текущего объекта, проходящего через вызывающий код.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предотвращает доступ к защищенному ресурсу через код, который вызывает этот метод, даже если эти вызывающие объекты имеют разрешение на доступ к нему вызывающим объектам выше в стеке вызовов. Стек вызовов обычно представляется как растет вниз, таким образом, методы, расположенные выше в стеке вызовов вызывать методы, расположенные в стеке вызовов.  
  
 <xref:System.Security.IStackWalk.Deny%2A> можно ограничить ответственность программиста или предотвратить случайное уязвимостей, поскольку он помогает предотвратить метода, который вызывает <xref:System.Security.IStackWalk.Deny%2A> не могут использоваться для доступа к ресурсу, защищенному путем отказа в разрешении. Если метод вызывает <xref:System.Security.IStackWalk.Deny%2A> для разрешения и если <xref:System.Security.IStackWalk.Demand%2A> для этого разрешения вызывающего объекта, расположенные ниже в стеке вызовов, что эта проверка безопасности завершится ошибкой, когда он достигает <xref:System.Security.IStackWalk.Deny%2A>.  
  
 <xref:System.Security.IStackWalk.Deny%2A> учитывается для разрешения не предоставлены, так как запрос на это разрешение не будет выполнено.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Этот метод нельзя переопределить.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PermitOnly();" />
      <MemberSignature Language="F#" Value="abstract member PermitOnly : unit -&gt; unit" Usage="iStackWalk.PermitOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывает сбой всех <see cref="M:System.Security.IStackWalk.Demand" /> для всех объектов, кроме текущего, проходящих через вызывающий код, даже если коду выше в стеке вызовов было предоставлено разрешение на доступ к другим ресурсам.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.IStackWalk.PermitOnly%2A> аналогичен <xref:System.Security.IStackWalk.Deny%2A>, в том, что оба метода приводят стека возвращать ошибку, если они в противном случае будет выполнено успешно. Разница в том, <xref:System.Security.IStackWalk.Deny%2A> указывает разрешения, которые вызовут стека переход на другой, но <xref:System.Security.IStackWalk.PermitOnly%2A> задает только те разрешения, которые не приводят к стека переход на другой. Вызовите этот метод, чтобы убедиться, что ваш код может использоваться для доступа к только к указанным ресурсам.  
  
 <xref:System.Security.IStackWalk.PermitOnly%2A> учитывается для разрешения не предоставлены, так как запрос на это разрешение не будет выполнено. Тем не менее если код, расположенный ниже, при вызове функции стеке вызовов <xref:System.Security.IStackWalk.Demand%2A> для данного разрешения <xref:System.Security.SecurityException> возникает, если обход стека достигнет этого кода, который пытался вызвать <xref:System.Security.IStackWalk.PermitOnly%2A>. Это потому, что код, вызвавший <xref:System.Security.IStackWalk.PermitOnly%2A> не предоставлено разрешение, несмотря на то, что он вызывается <xref:System.Security.IStackWalk.PermitOnly%2A> для данного разрешения. Стек вызовов обычно представляется как растет вниз, таким образом, методы, расположенные выше в стеке вызовов вызывать методы, расположенные в стеке вызовов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>