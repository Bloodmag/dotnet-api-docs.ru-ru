<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PermissionSet.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c95f6c01a7b25f39bc7cb8067cfb65f467a5def79.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95f6c01a7b25f39bc7cb8067cfb65f467a5def79</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.PermissionSet">
          <source>Represents a collection that can contain many different types of permissions.</source>
          <target state="translated">Представляет коллекцию, которая может содержать несколько разных типов разрешений.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.PermissionSet">
          <source>You can use <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> to perform operations on several different permissions as a group.</source>
          <target state="translated">Можно использовать <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> для выполнения операций с несколькими различными разрешениями в группу.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.PermissionSet">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class and members.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> классов и членов.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.PermissionSet">
          <source>for inheritors to be fully trusted, or in an assembly that is signed with the Microsoft <ph id="ph1">&lt;see cref="T:System.Security.Policy.StrongName" /&gt;</ph>.</source>
          <target state="translated">для наследующих объектов с полным доверием или в сборке, которая подписывается с помощью Microsoft <ph id="ph1">&lt;see cref="T:System.Security.Policy.StrongName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Security.PermissionSet">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>One of the enumeration values that specifies the permission set's access to resources.</source>
          <target state="translated">Одно из значений перечисления, определяющее набор разрешений доступа к ресурсам.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> указанным значением <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>The <ph id="ph1">`Unrestricted`</ph> state allows all permissions that implement the <ph id="ph2">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface, while <ph id="ph3">`None`</ph> allows no permissions.</source>
          <target state="translated"><ph id="ph1">`Unrestricted`</ph> Состояние позволяет использовать все разрешения, которые реализуют <ph id="ph2">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> интерфейс, пока <ph id="ph3">`None`</ph> позволяет никаких разрешений.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> on an empty <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> to define the set in greater detail.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> с пустым <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> для определения набора более подробно.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.%23ctor%2A&gt;</ph> constructor to create a permission set with a permission state of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph>.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.%23ctor%2A&gt;</ph> задать конструктор Создание разрешения с состоянием разрешения <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>The <ph id="ph1">&lt;paramref name="state" /&gt;</ph> parameter is not a valid <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="state" /&gt;</ph> не является допустимым объектом <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>The set from which to take the value of the new <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to create an empty <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Набор, из которого берется значение нового объекта <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, либо значение <ph id="ph2">&lt;see langword="null" /&gt;</ph> для создания пустого объекта <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> class with initial values taken from the <ph id="ph2">&lt;paramref name="permSet" /&gt;</ph> parameter.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> с начальными значениями, получаемыми из параметра <ph id="ph2">&lt;paramref name="permSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>The new <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> contains copies of the permissions contained in the specified <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Новый <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> содержит копии разрешений, содержащихся в заданном <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>This is equivalent to <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> when the <ph id="ph2">`permSet`</ph> parameter is not <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Это эквивалентно <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> при <ph id="ph2">`permSet`</ph> не <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The permission to add.</source>
          <target state="translated">Разрешение для добавления.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>Adds a specified permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Добавляет указанное разрешение в набор <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The union of the permission added and any permission of the same type that already exists in the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Объединение добавленного разрешения и любого разрешения того же типа, уже существующего в <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>If a permission of the same type as the added permission already exists in the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, the new permission is the union of the existing permission object and the specified permission object.</source>
          <target state="translated">Если разрешение того же типа, что добавлено разрешение уже существует в <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, новое разрешение представляет собой объединение существующего объекта разрешения и указанного разрешения объекта.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>For example, if a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is added to an <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, the resulting union is the original <ph id="ph4">`Unrestricted`</ph><ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Например, если разрешение, которое реализует <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> добавляется <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, является результатом объединения исходный <ph id="ph4">`Unrestricted`</ph> <ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> method to add a permission to a permission set.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> метода необходимо добавить разрешение в набор разрешений.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Метод вызывается из <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /&gt;</ph> method.</source>
          <target state="translated">При наследовании от <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, можно изменить поведение <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /&gt;</ph> метод путем переопределения <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The permission to add.</source>
          <target state="translated">Разрешение для добавления.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>Adds a specified permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Добавляет указанное разрешение в набор <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The union of the permission added and any permission of the same type that already exists in the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="perm" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Объединение добавленного разрешения и любого разрешения того же типа, уже имеющегося в объекте <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, или значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>, если параметр <ph id="ph3">&lt;paramref name="perm" /&gt;</ph> имеет значение <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermissionImpl%2A&gt;</ph> Метод является реализацией для <ph id="ph2">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>If a permission of the same type as the added permission already exists in the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, the new permission is the union of the existing permission object and the specified permission object.</source>
          <target state="translated">Если разрешение того же типа, что добавлено разрешение уже существует в <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, новое разрешение представляет собой объединение существующего объекта разрешения и указанного разрешения объекта.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>For example, if a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is added to an <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, the resulting union is the original <ph id="ph4">`Unrestricted`</ph><ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Например, если разрешение, которое реализует <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> добавляется <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, является результатом объединения исходный <ph id="ph4">`Unrestricted`</ph> <ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Метод вызывается из <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</source>
          <target state="translated">Объявляет, что вызывающий код может получить доступ к ресурсу, защищенному требованием разрешения, через код, вызывающий этот метод, даже если вызывающим объектам выше в стеке вызовов не предоставлено разрешение на доступ к ресурсу.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>Using <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph> can create security vulnerabilities.</source>
          <target state="translated">Применение метода <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph> может привести к образованию уязвимых мест в системе безопасности.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>This is the only way to assert multiple permissions at the same time within a frame because only one <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> can be active on a frame.</source>
          <target state="translated">Это единственный способ утверждать несколько разрешений в то же время, в течение периода, так как только один <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> могут быть активными в каждом кадре.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> is only effective for granted permissions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> действует только для предоставленных разрешений.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>Call the <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType&gt;</ph> method to cancel an active <ph id="ph3">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph>.</source>
          <target state="translated">Вызовите <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType&gt;</ph> или <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType&gt;</ph> метода для отмены активной <ph id="ph3">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>Because calling the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> method removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</source>
          <target state="translated">Поскольку вызов <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> метод удаляет требование, что весь код в цепочке вызовов должно быть предоставлено разрешение на доступ к указанному ресурсу, может привести к возникновению уязвимости системы безопасности неправильное или неверно.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>Therefore, it should be used with great caution.</source>
          <target state="translated">Таким образом он должен использоваться с большой осторожностью.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> instance asserted has not been granted to the asserting code.</source>
          <target state="translated">Утвержденный экземпляр <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> не был предоставлен утверждающему коду.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>There is already an active <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph> for the current frame.</source>
          <target state="translated">Уже имеется активное утверждение <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph> для текущего кадра.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> contains permissions that are not derived from <ph id="ph2">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph>.</source>
          <target state="translated">Получает значение, показывающее, содержит ли коллекция <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> разрешения, не являющиеся производными от <ph id="ph2">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> contains permissions that are not derived from <ph id="ph3">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> содержит разрешения, которые не являются производными от <ph id="ph3">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph>; в противном случае — значение <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</source>
          <target state="translated">Строка, представляющая один из следующих форматов кодировки: ASCII, Юникод или двоичный.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</source>
          <target state="translated">Возможные значения: XMLASCII или XML, XMLUNICODE и BINARY.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>An XML-encoded permission set.</source>
          <target state="translated">Набор разрешений в XML-кодировке.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</source>
          <target state="translated">Строка, представляющая один из следующих форматов кодировки: ASCII, Юникод или двоичный.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</source>
          <target state="translated">Возможные значения: XMLASCII или XML, XMLUNICODE и BINARY.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Converts an encoded <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> from one XML encoding format to another XML encoding format.</source>
          <target state="translated">Преобразует закодированный объект <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> из одного формата кодировки XML в другой формат кодировки XML.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>An encrypted permission set with the specified output format.</source>
          <target state="translated">Зашифрованный набор разрешений с указанным выходным форматом.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Do not use this method.</source>
          <target state="translated">Этот метод использовать не следует.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>In all cases.</source>
          <target state="translated">Во всех случаях.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Copy">
          <source>Creates a copy of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Создает копию объекта <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Copy">
          <source>A copy of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Копия объекта <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>A copy of a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> represents the same access to resources as the original object.</source>
          <target state="translated">Копия <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> предоставляет такой же доступ к ресурсам, что и исходный объект.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>Changes made to the copy do not affect the original permission set.</source>
          <target state="translated">Изменения, внесенные в копию, не влияют на исходный набор разрешений.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> method to create a copy of a permission set.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> метод для создания копии набора разрешений.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The target array to which to copy.</source>
          <target state="translated">Целевой массив, в который выполняется копирование.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The starting position in the array to begin copying (zero based).</source>
          <target state="translated">Начальная позиция в массиве, с которой начинается копирование (от нуля).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>Copies the permission objects of the set to the indicated location in an <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>.</source>
          <target state="translated">Копирует объекты разрешений из набора в указанное место в <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="array" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="array" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="array" /&gt;</ph> parameter has more than one dimension.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="array" /&gt;</ph> имеет несколько измерений.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> parameter is out of the range of the <ph id="ph2">&lt;paramref name="array" /&gt;</ph> parameter.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="index" /&gt;</ph> находится за пределами диапазона параметра <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.Count">
          <source>Gets the number of permission objects contained in the permission set.</source>
          <target state="translated">Получает число объектов разрешений, содержащихся в наборе разрешений.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>The number of permission objects contained in the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Число объектов разрешений, содержащихся в <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>In the <ph id="ph1">`None`</ph> or <ph id="ph2">`Unrestricted`</ph> state this returns zero, because no actual permission object instances are used.</source>
          <target state="translated">В <ph id="ph1">`None`</ph> или <ph id="ph2">`Unrestricted`</ph> состояние возвращается нуль, поскольку нет экземпляр объекта разрешений фактически не используются.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Count%2A&gt;</ph> property to get the number of permission objects in a permission set.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.Count%2A&gt;</ph> свойства, чтобы получить число объектов разрешений в наборе разрешений.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Demand">
          <source>Forces a <ph id="ph1">&lt;see cref="T:System.Security.SecurityException" /&gt;</ph> at run time if all callers higher in the call stack have not been granted the permissions specified by the current instance.</source>
          <target state="translated">Принудительно создает <ph id="ph1">&lt;see cref="T:System.Security.SecurityException" /&gt;</ph> во время выполнения, если все вызывающие методы, расположенные выше в стеке вызовов, не получили разрешения, указанные текущим экземпляром.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>Use <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> to ensure that all callers have all permissions in the set with one operation.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> на <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> чтобы убедиться, что все вызывающие объекты имеют все разрешения в наборе с одной операцией.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</source>
          <target state="translated">Разрешения для кода, который вызывает этот метод, не проверяется; Проверка начинается с непосредственный вызывающий объект кода и продолжается вверх по стеку.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">Стек вызовов обычно представляется как растет вниз, так что методы, расположенные выше в стеке вызовов вызывать методы, расположенные в стеке вызовов.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> succeeds only if no <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> выполняется успешно, только если не <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> возникает исключение.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>If the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> contains permissions that do not inherit from <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission&gt;</ph>, the <ph id="ph3">`Demand`</ph> methods of those permissions are called as well.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> содержит разрешения, которые не наследуются от <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission&gt;</ph>, <ph id="ph3">`Demand`</ph> также вызываются методы из указанных разрешений.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> method to demand all the permissions in a permission set.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> метод, чтобы требовать все разрешения в набор разрешений.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Demand">
          <source>A caller in the call chain does not have the permission demanded.</source>
          <target state="translated">У вызывающего метода в цепочке вызовов нет требуемых разрешений.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Deny">
          <source>Causes any <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph> that passes through the calling code for a permission that has an intersection with a permission of a type contained in the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> to fail.</source>
          <target state="translated">Вызывает сбой любого требования <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph>, проходящего через вызывающий код для получения разрешения, которое пересекается с разрешением типа, содержащегося в текущем наборе <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source>This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</source>
          <target state="translated">Этот метод не позволяет вызывающим объектам выше в стеке вызовов доступ к защищенному ресурсу через код, вызывающий этот метод, даже если этим вызывающим предоставлено разрешение на доступ к нему.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">Стек вызовов обычно представляется как растет вниз, так что методы, расположенные выше в стеке вызовов вызывать методы, расположенные в стеке вызовов.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> from being used to access the resource protected by the denied permission.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> можно ограничить ответственность программиста или предотвратить случайное уязвимостей, поскольку он не позволяет использовать метод, вызывающий <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> не могут использоваться для доступа к ресурсу, защищенному путем отказа в разрешении.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source>If a method calls <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> on a permission, and if a <ph id="ph2">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> for that permission is invoked by a caller lower in the call stack, that security check fails when it reaches the <ph id="ph3">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>.</source>
          <target state="translated">Если метод вызывает метод <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> для разрешения и если <ph id="ph2">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> для этого разрешения вызывающий объект, расположенный ниже в стеке вызовов, то проверка безопасности завершается ошибкой, при достижении <ph id="ph3">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> is ignored for a permission that is not granted because a demand for that permission cannot succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> учитывается для разрешения, которое не предоставляется, поскольку запрос на это разрешение не может быть удовлетворен.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Deny">
          <source>A previous call to <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Deny" /&gt;</ph> has already restricted the permissions for the current stack frame.</source>
          <target state="translated">Предыдущий вызов <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Deny" /&gt;</ph> уже ограничил разрешения для текущего кадра стека.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>The object to compare with the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Объект, который требуется сравнить с текущим объектом <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph> object is equal to the current <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Определяет, равен ли заданный объект <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> или <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph> текущему объекту <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если указанный объект равен текущему объекту <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>Equality is determined by the permissions contained in the permission set specified by <ph id="ph1">`obj`</ph>.</source>
          <target state="translated">Равенство определяется по разрешениям, содержащимся в соответствии с набором разрешений, <ph id="ph1">`obj`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source><ph id="ph1">`obj`</ph> can be either a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> object or a <ph id="ph3">&lt;xref:System.Security.NamedPermissionSet&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`obj`</ph> может быть как <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> объекта или <ph id="ph3">&lt;xref:System.Security.NamedPermissionSet&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>If <ph id="ph1">`obj`</ph> is a <ph id="ph2">&lt;xref:System.Security.NamedPermissionSet&gt;</ph>, the name and description are ignored.</source>
          <target state="translated">Если <ph id="ph1">`obj`</ph> — <ph id="ph2">&lt;xref:System.Security.NamedPermissionSet&gt;</ph>, то имя и описание, игнорируются.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <ph id="ph1">&lt;xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The XML encoding to use to reconstruct the security object.</source>
          <target state="translated">Кодировка XML, используемая для восстановления объекта безопасности.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>Reconstructs a security object with a specified state from an XML encoding.</source>
          <target state="translated">Восстанавливает объект безопасности с указанным состоянием из кодировки XML.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.FromXml%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.FromXml%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="et" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="et" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="et" /&gt;</ph> parameter is not a valid permission element.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="et" /&gt;</ph> не является допустимым элементом разрешения.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="et" /&gt;</ph> parameter's version number is not supported.</source>
          <target state="translated">Номер версии параметра <ph id="ph1">&lt;paramref name="et" /&gt;</ph> не поддерживается.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>Returns an enumerator for the permissions of the set.</source>
          <target state="translated">Возвращает перечислитель для разрешений в наборе.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>An enumerator object for the permissions of the set.</source>
          <target state="translated">Объект-перечислитель для разрешений в наборе.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>Use the enumerator as an index to access individual permission objects in the set.</source>
          <target state="translated">Используйте как индекс для доступа к объектам отдельных разрешений в наборе.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> method to list all the permissions in a permission set.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> метода для составления списка всех разрешений в наборе разрешений.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetEnumerator" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /&gt;</ph> method.</source>
          <target state="translated">При наследовании от <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, можно изменить поведение <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetEnumerator" /&gt;</ph> метод путем переопределения <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumeratorImpl">
          <source>Returns an enumerator for the permissions of the set.</source>
          <target state="translated">Возвращает перечислитель для разрешений в наборе.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumeratorImpl">
          <source>An enumerator object for the permissions of the set.</source>
          <target state="translated">Объект-перечислитель для разрешений в наборе.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumeratorImpl">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumeratorImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumeratorImpl%2A&gt;</ph> Метод является реализацией для <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetHashCode">
          <source>Gets a hash code for the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> object that is suitable for use in hashing algorithms and data structures such as a hash table.</source>
          <target state="translated">Возвращает хэш-код для объекта <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, который можно использовать в алгоритмах хэширования и структурах данных, например в хэш-таблице.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> object.</source>
          <target state="translated">Хэш-код для текущего объекта <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetHashCode">
          <source>The hash code for two instances of the same permission set might be different, so a hash code should not be used to compare two <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> objects.</source>
          <target state="translated">Хэш-код для двух экземпляров с тем же набором разрешений может отличаться, поэтому хэш-код не следует использовать для сравнения двух <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>The type of the desired permission object.</source>
          <target state="translated">Тип требуемого объекта разрешений.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>Gets a permission object of the specified type, if it exists in the set.</source>
          <target state="translated">Получает объект разрешений указанного типа, если он существует в наборе.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>A copy of the permission object of the type specified by the <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph> parameter contained in the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">Копия объекта разрешений, тип которого указан в параметре <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph>, содержащегося в объекте <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, либо <ph id="ph3">&lt;see langword="null" /&gt;</ph>, если такой объект отсутствует.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>The method returns <ph id="ph1">`null`</ph> for an <ph id="ph2">`Unrestricted`</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Метод возвращает <ph id="ph1">`null`</ph> для <ph id="ph2">`Unrestricted`</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>Although an <ph id="ph1">`Unrestricted`</ph><ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> effectively contains all permissions, it does not have any actual instances to return.</source>
          <target state="translated">Несмотря на то что <ph id="ph1">`Unrestricted`</ph> <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> фактически содержит все разрешения, не включает все экземпляры, которые можно вернуть.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">При наследовании от <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, можно изменить поведение <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /&gt;</ph> метод путем переопределения <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>The type of the permission object.</source>
          <target state="translated">Тип объекта разрешений.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>Gets a permission object of the specified type, if it exists in the set.</source>
          <target state="translated">Получает объект разрешений указанного типа, если он существует в наборе.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>A copy of the permission object, of the type specified by the <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph> parameter, contained in the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">Копия объекта разрешений, тип которого указан в параметре <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph>, содержащегося в объекте <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, либо значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>, если такой объект отсутствует.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetPermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetPermission%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.GetPermissionImpl%2A&gt;</ph> Метод является реализацией для <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetPermission%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>The method returns <ph id="ph1">`null`</ph> for an <ph id="ph2">`Unrestricted`</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Метод возвращает <ph id="ph1">`null`</ph> для <ph id="ph2">`Unrestricted`</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>Although an <ph id="ph1">`Unrestricted`</ph><ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> effectively contains all permissions, it does not have any actual instances to return.</source>
          <target state="translated">Несмотря на то что <ph id="ph1">`Unrestricted`</ph> <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> фактически содержит все разрешения, не включает все экземпляры, которые можно вернуть.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>A permission set to intersect with the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Набор разрешений, пересечение которого с текущим объектом <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> требуется получить.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>Creates and returns a permission set that is the intersection of the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Создает и возвращает набор разрешений, представляющий собой пересечение текущего объекта <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> и указанного объекта <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>A new permission set that represents the intersection of the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified target.</source>
          <target state="translated">Новый набор разрешений, представляющий собой пересечение текущего объекта <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> с указанным целевым объектом.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>This object is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the intersection is empty.</source>
          <target state="translated">Если пересечение пусто, этот объект имеет значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>The intersection of two permission sets is a permission set that describes the set of operations they both describe in common.</source>
          <target state="translated">Пересечение двух наборов разрешений является набор разрешений, описывающий набор операций, в обоих разрешениях.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>Specifically, it represents the minimum permissions such that any demand that passes both permission sets also passes their intersection.</source>
          <target state="translated">В частности он представляет минимальный набор разрешений, таким образом, что любое требование, удовлетворяющее обоим наборам, передает их пересечения.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>For each type of permission that is present in both sets, the two instances of those permissions are intersected using the permission's <ph id="ph1">`Intersect`</ph> method; the resulting permission is included in the resulting <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Для каждого типа разрешений, присутствующего в обоих наборах, пересечение двух экземпляров таких разрешений выполняется с помощью разрешение <ph id="ph1">`Intersect`</ph> метода; полученное разрешение включается в результирующий <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>Permission types that exist in only one of the two sets are excluded from the resulting set.</source>
          <target state="translated">Типы разрешений, которые существуют только в одном из двух наборов, исключаются из результирующего набора.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Intersect%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.Intersect%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsEmpty">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is empty.</source>
          <target state="translated">Получает значение, определяющее, пуст ли объект <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is empty; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если объект <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> пуст; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsEmpty">
          <source>A <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> can be empty and yet contain instances of permissions if those permissions are in the fully-restricted state.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> может быть пустым и еще содержать экземпляры разрешений, если эти разрешения находятся в состоянии полного ограничения.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsEmpty">
          <source>Permissions are in a fully restricted state if their <ph id="ph1">`IsSubsetOf`</ph> methods return <ph id="ph2">`true`</ph> when <ph id="ph3">`null`</ph> is passed as a parameter.</source>
          <target state="translated">Разрешения находятся в состоянии полного ограничения при их <ph id="ph1">`IsSubsetOf`</ph> методы возвращают <ph id="ph2">`true`</ph> при <ph id="ph3">`null`</ph> передается в качестве параметра.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>Gets a value indicating whether the collection is read-only.</source>
          <target state="translated">Возвращает значение, указывающее, является ли коллекция доступной только для чтения.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>Always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Всегда <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>A <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> cannot be read-only, so this property is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> не может быть только для чтения, поэтому данное свойство всегда имеет <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>The following code example shows the value returned by the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsReadOnly%2A&gt;</ph> property.</source>
          <target state="translated">В следующем примере кода показано значение, возвращаемое <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsReadOnly%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>The permission set to test for the subset relationship.</source>
          <target state="translated">Набор разрешений для проверки соотношения подмножеств.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>This must be either a <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> or a <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Можно использовать объект <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> либо объект <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is a subset of the specified <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Определяет, является ли текущий набор <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> подмножеством указанного набора <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is a subset of the <ph id="ph3">&lt;paramref name="target" /&gt;</ph> parameter; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если текущий набор <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> является подмножеством набора, определяемого параметром <ph id="ph3">&lt;paramref name="target" /&gt;</ph>; в противном случае —<ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>A <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> is a subset of the target <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> if all demands that succeed for the <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> also succeed for the target.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> — это подмножество целевой <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> Если все требования, успешно для <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> , также будут выполнены для целевого объекта.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>That is, the target contains at least the permissions contained in the subset.</source>
          <target state="translated">Таким образом объект содержит по крайней мере разрешения, принадлежащие подмножеству.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSubsetOf%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSubsetOf%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>Gets a value indicating whether the collection is guaranteed to be thread safe.</source>
          <target state="translated">Возвращает значение, указывающее, гарантируется ли потокобезопасность коллекции.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>Always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Всегда <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> does not automatically handle thread safety, so this property is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> не обрабатывает потокобезопасность автоматически, поэтому данное свойство всегда имеет <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>This method is required to support <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Этот метод требуется для поддержки <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>The following code example shows the value returned by the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSynchronized%2A&gt;</ph> property.</source>
          <target state="translated">В следующем примере кода показано значение, возвращаемое <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSynchronized%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is <ph id="ph2">&lt;see langword="Unrestricted" /&gt;</ph>.</source>
          <target state="translated">Определяет, является ли текущее значение <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> равным <ph id="ph2">&lt;see langword="Unrestricted" /&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is <ph id="ph3">&lt;see langword="Unrestricted" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="Unrestricted" /&gt;</ph>; в противном случае — значение <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>An <ph id="ph1">`Unrestricted`</ph><ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> effectively contains all permissions that implement the <ph id="ph3">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">`Unrestricted`</ph> <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> Фактически содержит все разрешения, которые реализуют <ph id="ph3">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsUnrestricted%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsUnrestricted%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>Causes any <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph> that passes through the calling code for any <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is not a subset of the current <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> to fail.</source>
          <target state="translated">Принудительно блокирует каждый вызов метода <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph>, проходящий через вызывающий код, для каждого набора <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, не являющегося подмножеством текущего набора <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> is similar to <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>, in that both cause stack walks to fail when they would otherwise succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> Аналогично <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>, в том, что оба метода приводят стека возвращать ошибку, если они в противном случае будет выполнено успешно.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>The difference is that <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> specifies permissions that will cause the stack walk to fail, but <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> specifies the only permissions that do not cause the stack walk to fail.</source>
          <target state="translated">Различие состоит в том <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> задает разрешения, которые стека терпит неудачу, но <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> указывает только разрешения, которые не приводят к сбою стека.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>Call this method to ensure that your code can be used to access only the specified resources.</source>
          <target state="translated">Вызовите этот метод, чтобы убедиться, что код может использоваться для доступа к только к заданным ресурсам.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> is ignored for a permission not granted because a demand for that permission cannot succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> учитывается для разрешения не предоставляются, так как запрос на это разрешение не может быть удовлетворен.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>However, if code lower on the call stack later calls <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> for that permission, a <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when the stack walk reaches the code that tried to call <ph id="ph3">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph>.</source>
          <target state="translated">Тем не менее если код, расположенный ниже, при вызове стеке вызовов <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> этим разрешением, <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> возникает при проверке стека достигается код, который пытался вызвать <ph id="ph3">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>This is because the code that called <ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> has not been granted the permission, even though it called <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> for that permission.</source>
          <target state="translated">Это так, как код, вызвавший <ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> не предоставлено разрешение, несмотря на вызов <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> для этого разрешения.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">Стек вызовов обычно представляется как растет вниз, так что методы, расположенные выше в стеке вызовов вызывать методы, расположенные в стеке вызовов.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The type of permission to delete.</source>
          <target state="translated">Тип удаляемого разрешения.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>Removes a permission of a certain type from the set.</source>
          <target state="translated">Удаляет разрешение определенного типа из набора.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The permission removed from the set.</source>
          <target state="translated">Разрешение, удаленное из набора.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>You cannot remove permissions from an unrestricted permission set.</source>
          <target state="translated">Не удается удалить разрешения из набора разрешений «неограниченно».</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</source>
          <target state="translated">Набор останется неограниченный после попытки удалить разрешение, и исключение не создается.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The following C# code attempts to remove the <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> from the <ph id="ph2">`FullTrust`</ph> permission set, but the permission is not removed.</source>
          <target state="translated">Следующий код C# пытается удалить <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> из <ph id="ph2">`FullTrust`</ph> набор разрешений, но не удаляются.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> method to remove a <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> from a permission set.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> метод для удаления <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> разрешение набора.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Метод вызывается из <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">При наследовании от <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, можно изменить поведение <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /&gt;</ph> метод путем переопределения <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The type of the permission to remove.</source>
          <target state="translated">Тип удаляемого разрешения.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>Removes a permission of a certain type from the set.</source>
          <target state="translated">Удаляет разрешение определенного типа из набора.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The permission removed from the set.</source>
          <target state="translated">Разрешение, удаленное из набора.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermissionImpl%2A&gt;</ph> Метод является реализацией для <ph id="ph2">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>You cannot remove permissions from an unrestricted permission set.</source>
          <target state="translated">Не удается удалить разрешения из набора разрешений «неограниченно».</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</source>
          <target state="translated">Набор останется неограниченный после попытки удалить разрешение, и исключение не создается.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Метод вызывается из <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RevertAssert">
          <source>Causes any previous <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph> for the current frame to be removed and no longer be in effect.</source>
          <target state="translated">Удаляет все предыдущие методы <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph> для текущего кадра и прекращает их действие.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RevertAssert">
          <source>If there is no <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;</ph> for the current frame, an <ph id="ph2">&lt;xref:System.ExecutionEngineException&gt;</ph> is thrown.</source>
          <target state="translated">При наличии не <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;</ph> для текущего кадра <ph id="ph2">&lt;xref:System.ExecutionEngineException&gt;</ph> возникает исключение.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RevertAssert">
          <source>There is no previous <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph> for the current frame.</source>
          <target state="translated">Для текущего кадра отсутствует предыдущий метод <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The permission to set.</source>
          <target state="translated">Разрешение для установки.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>Sets a permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, replacing any existing permission of the same type.</source>
          <target state="translated">Устанавливает разрешение в объекте <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, заменяя все имеющиеся разрешения одного типа.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The set permission.</source>
          <target state="translated">Установленное разрешение.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>This method removes any existing permission object of the same type from the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> and replaces it with the <ph id="ph2">`perm`</ph> parameter.</source>
          <target state="translated">Этот метод удаляет любые имеющиеся объекты разрешений из того же типа <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> и заменяет его с помощью <ph id="ph2">`perm`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>If a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is set on a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> that is <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, the resulting <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> is no longer <ph id="ph5">`Unrestricted`</ph>.</source>
          <target state="translated">Если разрешение, которое реализует <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> устанавливается на <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> , <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, итоговый <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> больше не <ph id="ph5">`Unrestricted`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Метод вызывается из <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /&gt;</ph> method.</source>
          <target state="translated">При наследовании от <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, можно изменить поведение <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /&gt;</ph> метод путем переопределения <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The permission to set.</source>
          <target state="translated">Разрешение для установки.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>Sets a permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, replacing any existing permission of the same type.</source>
          <target state="translated">Устанавливает разрешение в объекте <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, заменяя все имеющиеся разрешения одного типа.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The set permission.</source>
          <target state="translated">Установленное разрешение.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermissionImpl%2A&gt;</ph> Метод является реализацией для <ph id="ph2">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>This method removes any existing permission object of the same type from the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> and replaces it with the <ph id="ph2">`perm`</ph> parameter.</source>
          <target state="translated">Этот метод удаляет любые имеющиеся объекты разрешений из того же типа <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> и заменяет его с помощью <ph id="ph2">`perm`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>If a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is set on a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> that is <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, the resulting <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> is no longer <ph id="ph5">`Unrestricted`</ph>.</source>
          <target state="translated">Если разрешение, которое реализует <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> устанавливается на <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> , <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, итоговый <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> больше не <ph id="ph5">`Unrestricted`</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Метод вызывается из <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>Gets the root object of the current collection.</source>
          <target state="translated">Возвращает корневой объект текущей коллекции.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>The root object of the current collection.</source>
          <target state="translated">Корневой объект текущей коллекции.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>This method is required to support <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Этот метод требуется для поддержки <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>The following code example shows the use of <ph id="ph1">&lt;xref:System.Security.PermissionSet.SyncRoot%2A&gt;</ph> property to get the root object of the current collection.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.SyncRoot%2A&gt;</ph> свойства, чтобы получить корневой объект текущей коллекции.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The object that initiated the callback.</source>
          <target state="translated">Объект, который инициализирует обратный вызов.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The functionality for this parameter is not currently implemented.</source>
          <target state="translated">Данная функциональная возможность для этого параметра в настоящее время не реализуется.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>Runs when the entire object graph has been deserialized.</source>
          <target state="translated">Выполняется, когда полностью десериализован граф объектов.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToString">
          <source>Returns a string representation of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Возвращает строковое представление объекта <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToString">
          <source>A representation of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Представление объекта <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToString">
          <source>The string representation is useful in debugging to see the state of a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Строковое представление полезен при отладке, чтобы увидеть состояние <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToString">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToString%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToString%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToString">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToXml">
          <source>Creates an XML encoding of the security object and its current state.</source>
          <target state="translated">Создает кодировку XML для объекта безопасности и его текущего состояния.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToXml">
          <source>An XML encoding of the security object, including any state information.</source>
          <target state="translated">Кодировка XML объекта безопасности, включающая сведения о состоянии.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToXml">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToXml%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToXml%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToXml">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>The permission set to form the union with the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Набор разрешений, объединяемый с текущим объектом <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is the union of the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Создает объект <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, представляющий собой объединение текущего набора <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> и указанного набора <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>A new permission set that represents the union of the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Новый набор разрешений, представляющий собой объединение текущего объекта <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> с указанным объектом <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>The result of a call to <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> is a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> that represents all the operations represented by the current <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> as well as all the operations represented by the specified <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Результат вызова <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> — <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> , представляющий все действия, представленные текущим <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> а также все операции, представленное указанным <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>If either set is <ph id="ph1">`Unrestricted`</ph>, the union is <ph id="ph2">`Unrestricted`</ph> as well.</source>
          <target state="translated">Если любой из наборов находится <ph id="ph1">`Unrestricted`</ph>, объединение является <ph id="ph2">`Unrestricted`</ph> также.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> класса.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>