<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecureString.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c4d029653e3eb38bb3ed2b723b2a1a007b810413e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d029653e3eb38bb3ed2b723b2a1a007b810413e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.SecureString">
          <source>Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed.</source>
          <target state="translated">Представляет текст, который должен оставаться конфиденциальным, например, путем его удаления из памяти компьютера, если он больше не нужен.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.SecureString">
          <source>This class cannot be inherited.</source>
          <target state="translated">Этот класс не наследуется.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is a string type that provides a measure of security.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> имеет тип string, содержащий данные безопасности.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>It tries to avoid storing potentially sensitive strings in process memory as plain text.</source>
          <target state="translated">Он пытается избежать хранения конфиденциальных строк в памяти процесса в виде обычного текста.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>(For limitations, however, see the <bpt id="p1">[</bpt>How secure is SecureString?<ept id="p1">](#HowSecure)</ept> section.) The value of an instance of <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is automatically protected using a mechanism supported by the underlying platform when the instance is initialized or when the value is modified.</source>
          <target state="translated">(Однако ограничениях см <bpt id="p1">[</bpt>как обеспечить безопасность SecureString?<ept id="p1">](#HowSecure)</ept> раздел.) Значение экземпляра <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> автоматически защищены с помощью механизма, поддерживаемые базовой платформы, при инициализации экземпляра или изменить это значение.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Your application can render the instance immutable and prevent further modification by invoking the <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> method.</source>
          <target state="translated">Приложение может отрисовки неизменяемый экземпляр и запретить его дальнейшее изменение путем вызова <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The maximum length of a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance is 65,536 characters.</source>
          <target state="translated">Максимальная длина <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> экземпляра — 65 536 символов.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Этот тип реализует <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>When you have finished using an instance of the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">После завершения, используя экземпляр типа, следует освободить его прямо или косвенно.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Для удаления типа непосредственно вызвать его <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> метод в <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> блока.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Чтобы удалить ее косвенно, использовать языковой конструкции, такие как <ph id="ph1">`using`</ph> (в C#) или <ph id="ph2">`Using`</ph> (в Visual Basic).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Дополнительные сведения см. в разделе «С помощью объекта, реализует интерфейс IDisposable» в <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> разделе интерфейса.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class and its members are not visible to COM.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> Класс и его члены не отображаются для COM.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;</ph>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>In this section:</source>
          <target state="translated">Содержание</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>String vs. SecureString<ept id="p1">](#vsString)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Строка vs. SecureString<ept id="p1">](#vsString)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>SecureString operations<ept id="p1">](#Ops)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>SecureString операций<ept id="p1">](#Ops)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>SecureString and interop<ept id="p1">](#interop)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>SecureString и взаимодействия<ept id="p1">](#interop)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>How secure is  SecureString?<ept id="p1">](#HowSecure)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Как обеспечить безопасность SecureString?<ept id="p1">](#HowSecure)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>String versus SecureString</source>
          <target state="translated">Строка или SecureString</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>An instance of the <ph id="ph1">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> class is both immutable and, when no longer needed, cannot be programmatically scheduled for garbage collection; that is, the instance is read-only after it is created, and it is not possible to predict when the instance will be deleted from computer memory.</source>
          <target state="translated">Экземпляр <ph id="ph1">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> класса является неизменяемым и, если больше не нужны, не удастся программными средствами для сборки мусора; то есть экземпляр доступен только для чтения после его создания, и невозможно предсказать, когда экземпляр будет удаляется из памяти компьютера.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Because <ph id="ph1">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> instances are immutable, operations that appear to modify an existing instance  actually create a copy of it to manipulate.</source>
          <target state="translated">Поскольку <ph id="ph1">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> экземпляры являются неизменяемыми, операции, которые отображаются для изменения существующего экземпляра фактически создайте копию данных для работы.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Consequently, if a <ph id="ph1">&lt;xref:System.String&gt;</ph> object contains sensitive information such as a password, credit card number, or personal data, there is a risk the information could be revealed after it is used because your application cannot delete the data from computer memory.</source>
          <target state="translated">Следовательно Если <ph id="ph1">&lt;xref:System.String&gt;</ph> объект содержит конфиденциальные сведения, например пароль, номер кредитной карты или персональные данные, есть риск, данные могут стать доступными после использования, поскольку приложение не может удалить данные из памяти компьютера .</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object is similar to a <ph id="ph2">&lt;xref:System.String&gt;</ph> object in that it has a text value.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> объект подобен <ph id="ph2">&lt;xref:System.String&gt;</ph> объекта в том, что он имеет значение text.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>However, the value of a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object is pinned in memory, may use a protection mechanism, such as encryption, provided by the underlying operating system, can be modified until your application marks it as read-only, and can be deleted from computer memory either by your application calling the <ph id="ph2">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> method  or by the .NET Framework garbage collector.</source>
          <target state="translated">Тем не менее значение <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> объекта закреплен в памяти, могут использовать механизм защиты, такие как шифрование, предоставляемые операционной системы, могут быть изменены, пока приложение помечает его как только для чтения и может быть удален из памяти компьютера либо с приложением, вызывающим метод <ph id="ph2">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> метода или сборщиком мусора .NET Framework.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>For a discussion of the limitations of the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class, see the <bpt id="p1">[</bpt>How secure is  SecureString?<ept id="p1">](#HowSecure)</ept> section.</source>
          <target state="translated">Описание ограничений <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> см. в описании <bpt id="p1">[</bpt>как обеспечить безопасность SecureString?<ept id="p1">](#HowSecure)</ept> раздела.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>К началу<ept id="p1">](#top)</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>SecureString operations</source>
          <target state="translated">SecureString операций</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class includes members that allow you to do the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> Класс содержит элементы, которые позволяют выполнять следующие:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Instantiate a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object</source>
          <target state="translated">Создать экземпляр <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> объекта</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>You instantiate a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object by calling its parameterless constructor.</source>
          <target state="translated">Можно создать <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> , вызывая его конструктор без параметров.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Add characters to a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object</source>
          <target state="translated">Добавление символов <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> объекта</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>You can add a single character at a time to a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object  by calling its <ph id="ph2">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> method.</source>
          <target state="translated">За один раз можно добавить один символ <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> , вызывая его <ph id="ph2">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> или <ph id="ph3">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object should never be constructed from a <ph id="ph2">&lt;xref:System.String&gt;</ph>, because the sensitive data is already subject to the memory persistence consequences of the immutable <ph id="ph3">&lt;xref:System.String&gt;</ph> class.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> объект никогда не должен быть создан из <ph id="ph2">&lt;xref:System.String&gt;</ph>, так как конфиденциальные данные уже регулируется памяти сохраняемости последствия неизменяемом <ph id="ph3">&lt;xref:System.String&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The best way to construct a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object is from a character-at-a-time unmanaged source, such as the <ph id="ph2">&lt;xref:System.Console.ReadKey%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Лучший способ создания <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> объект относится неуправляемый исходный символ во время, таких как <ph id="ph2">&lt;xref:System.Console.ReadKey%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Remove characters from a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object</source>
          <target state="translated">Удалите символы из <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> объекта</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>You can replace an individual character by calling the <ph id="ph1">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph> method, remove an individual character by calling the <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> method, or remove all characters from the <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> instance by calling the  <ph id="ph4">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> method.</source>
          <target state="translated">Вы можете заменить отдельный символ, вызвав <ph id="ph1">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph> метод, удалить отдельный символ путем вызова <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> метода или удалите все символы из <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> экземпляр путем вызова <ph id="ph4">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Make the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object read-only</source>
          <target state="translated">Сделать <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> объект только для чтения</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Once you have defined the string that the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object represents, you call its  <ph id="ph2">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> method to make the string read-only.</source>
          <target state="translated">После определения строки, <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> представляет объект, вызывать его <ph id="ph2">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> метод, образуя из строки только для чтения.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Get information about the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object</source>
          <target state="translated">Получение сведений <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> объекта</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class has only two members that provide information about the string: its <ph id="ph2">&lt;xref:System.Security.SecureString.Length%2A&gt;</ph> property, which indicates the number of UTF16-encoded code units in the string; and the <ph id="ph3">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph>, method, which indicates whether the instance is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> Класс имеет только два члена, которые предоставляют сведения о строке: его <ph id="ph2">&lt;xref:System.Security.SecureString.Length%2A&gt;</ph> свойство, которое содержит количество единиц кода в кодировке UTF16 в строку; и <ph id="ph3">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph>, метод, который указывает, является ли экземпляр только для чтения.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Release the memory allocated to the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance</source>
          <target state="translated">Освободить память, выделенную для <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> экземпляра</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Because <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> implements the <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface, you release its memory by calling the <ph id="ph3">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> method.</source>
          <target state="translated">Поскольку <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> реализует <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> интерфейс освобождать память, вызывая <ph id="ph3">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class has no members that inspect, compare, or convert the value of a <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> Класс не содержит членов, проверять, сравнивать или преобразовать значение <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The absence of such members helps protect the value of the instance from accidental or malicious exposure.</source>
          <target state="translated">Отсутствие таких членов защищает значение экземпляра от случайного или злонамеренного раскрытия.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Use appropriate members of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType&gt;</ph> class, such as the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt;</ph> method, to manipulate the value of a <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">Используйте соответствующие члены <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType&gt;</ph> класса, такие как <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt;</ph> метода, чтобы управлять значение <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The .NET Framework Class Library commonly uses <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instances in the following ways:</source>
          <target state="translated">Библиотека классов .NET Framework, широко используемые <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> экземпляров одним из следующих способов:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To provide password information to a process by using the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> structure or by calling an overload of the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType&gt;</ph> method that has a parameter of type <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph>.</source>
          <target state="translated">Для предоставления сведений пароль к процессу с помощью <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> структуры или путем вызова перегрузки <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType&gt;</ph> метод, который имеет параметр типа <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To provide network password information by calling a <ph id="ph1">&lt;xref:System.Net.NetworkCredential&gt;</ph> class constructor that has a parameter of type <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> or by using the <ph id="ph3">&lt;xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Для предоставления сведений сетевой пароль, вызвав <ph id="ph1">&lt;xref:System.Net.NetworkCredential&gt;</ph> конструктор класса, который имеет параметр типа <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> или с помощью <ph id="ph3">&lt;xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To provide password information for SQL Server Authentication by calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor or retrieving the value of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Для предоставления сведений пароль для проверки подлинности SQL Server, вызвав <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType&gt;</ph> конструктор или получение значения <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>To pass a string to unmanaged code.</source>
          <target state="translated">Для передачи строки в неуправляемый код.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>For more information, see the <bpt id="p1">[</bpt>SecureString and interop<ept id="p1">](#interop)</ept> section.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>SecureString и взаимодействия<ept id="p1">](#interop)</ept> раздела.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>К началу<ept id="p1">](#top)</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>SecureString and interop</source>
          <target state="translated">SecureString и взаимодействия</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Because the operating system does not  directly support <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph>, you must convert the value of the <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> object to the required string type before passing the string to a native method.</source>
          <target state="translated">Так как операционная система не поддерживает напрямую <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph>, необходимо преобразовать значение <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> объект к типу перед передачей их собственный метод обязательная строка.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class has five methods that do this:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> Класс имеет пять методов, которые это сделать:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType&gt;</ph>, which converts the <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> string value to a binary string (BSTR) recognized by COM.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType&gt;</ph>, который преобразует <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> строковое значение, двоичную строку (BSTR), известным COM.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType&gt;</ph>, which copy the <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> string value to an ANSI string in unmanaged memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType&gt;</ph> и <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType&gt;</ph>, какая копий <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> строковое значение в строку ANSI в неуправляемой памяти.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType&gt;</ph>, which copy the <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> string value to a Unicode string in unmanaged memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType&gt;</ph> и <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType&gt;</ph>, какая копий <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> строковое значение в строку Юникода в неуправляемой памяти.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Each of these methods creates a clear-text string in unmanaged memory.</source>
          <target state="translated">Каждый из этих методов создает строку открытым текстом в неуправляемой памяти.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>It is the responsibility of the developer to zero out and free that memory as soon as it is no longer needed.</source>
          <target state="translated">Возлагается на разработчика обнуляет и высвобождают память, как только он больше не нужен.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Each of the string conversion and memory allocation methods has a corresponding method to zero out and free the allocated memory:</source>
          <target state="translated">Каждый из методы распределения строк преобразование и памяти имеет соответствующий метод обнуляет и освобождения выделенной памяти.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Allocation and conversion method</source>
          <target state="translated">Метод распределения и преобразования</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Zero and free method</source>
          <target state="translated">Ноль и free-метод</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>К началу<ept id="p1">](#top)</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>How secure is SecureString?</source>
          <target state="translated">Как обеспечить безопасность SecureString?</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>When created properly, a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance provides more data protection than a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">При создании надлежащим образом, <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> экземпляра обеспечивает защиту данных больше, чем <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>When creating a string from a character-at-a-time source, <ph id="ph1">&lt;xref:System.String&gt;</ph> creates multiple intermediate in memory, whereas  <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> creates just a single instance.</source>
          <target state="translated">При создании строки из источника символа во время <ph id="ph1">&lt;xref:System.String&gt;</ph> создает несколько промежуточных в памяти, в то время как <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> создает только один экземпляр.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Garbage collection of <ph id="ph1">&lt;xref:System.String&gt;</ph> objects  is non-deterministic.</source>
          <target state="translated">Сборку мусора для <ph id="ph1">&lt;xref:System.String&gt;</ph> объектов является недетерминированным.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>In addition, because its memory is not pinned, the garbage collector will make additional copies of <ph id="ph1">&lt;xref:System.String&gt;</ph> values when moving and compacting memory.</source>
          <target state="translated">Кроме того, так как не закреплен объем памяти, сборщик мусора будет сделать дополнительные копии <ph id="ph1">&lt;xref:System.String&gt;</ph> значения при перемещении и сжатие памяти.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>In contrast, the memory allocated to a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object is pinned,  and that memory can be freed by calling the <ph id="ph2">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> method.</source>
          <target state="translated">Напротив, памяти, выделенной для <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> закреплен объект, и что память можно освободить путем вызова <ph id="ph2">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Although data stored in a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance is more secure than data stored in a <ph id="ph2">&lt;xref:System.String&gt;</ph> instance, there are significant limitations on how secure a <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> instance is.</source>
          <target state="translated">Несмотря на то, что данные, хранящиеся в <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> более безопасны, чем данные, хранящиеся в экземпляре <ph id="ph2">&lt;xref:System.String&gt;</ph> , имеют значительные ограничения, как обеспечить безопасность на экземпляр <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> экземпляр.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>These include:</source>
          <target state="translated">Сюда входит следующее.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Platform</source>
          <target state="translated">Platform</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>On the Windows operating system, the contents of a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance's internal character array are encrypted.</source>
          <target state="translated">В операционной системе Windows, а содержимое <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> массив внутренней символов экземпляра шифруются.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>However, whether because of missing APIs or key management issues,  encryption is not available on all platforms.</source>
          <target state="translated">Тем не менее является ли из-за отсутствия API или проблемы управления ключами, шифрование недоступно на всех платформах.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Because of this platform dependency, <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> does not encrypt the internal storage on non-Windows platform.</source>
          <target state="translated">Из-за этой зависимости платформы <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> не шифрует внутреннего хранилища на платформе, отличной от Windows.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Other techniques are used on those platforms to provide additional protection.</source>
          <target state="translated">Другие методы используются на этих платформах для обеспечения дополнительной защиты.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Duration</source>
          <target state="translated">Длительность</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Even if the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> implementation is able to take advantage of encryption, the plain text assigned to the <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> instance may be exposed at various times:</source>
          <target state="translated">Даже если <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> реализации могут использовать шифрование, назначен в виде обычного текста <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> экземпляр может быть открыто в разное время:</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Because Windows doesn't offer a secure string implementation at the operating system level, the .NET Framework still has to convert the secure string value to its plain text representation in order to use it.</source>
          <target state="translated">Поскольку Windows не предоставляет реализацию защищенной строки на уровне операционной системы, платформа .NET Framework по-прежнему содержит преобразуемое значение безопасной строки в представление в виде обычного текста для использования.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Whenever the value of the secure string is modified by methods such as <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, it must be decrypted (i.e., converted back to plain text), modified, and then encrypted again.</source>
          <target state="translated">Значение безопасной строки при изменении методами, такими как <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, необходимо расшифровать (т. е. преобразованное обратно в обычный текст), изменить, а затем еще раз.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>If the secure string is used in an interop call, it must be converted to an ANSI string, a Unicode string, or a binary string (BSTR).</source>
          <target state="translated">Если защищенная строка используется в вызов взаимодействия, его необходимо преобразовать в строку ANSI, строки в Юникоде или двоичную строку (BSTR).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>For more information, see the <bpt id="p1">[</bpt>SecureString and interop<ept id="p1">](#interop)</ept> section.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>SecureString и взаимодействия<ept id="p1">](#interop)</ept> раздела.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The time interval for which the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance's value is exposed  is merely shortened in comparison to the <ph id="ph2">&lt;xref:System.String&gt;</ph> class.</source>
          <target state="translated">Интервал времени, для которого <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> предоставляется значение этого экземпляра просто сокращено по сравнению с <ph id="ph2">&lt;xref:System.String&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Storage versus usage</source>
          <target state="translated">Сравнение использования</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>More generally, the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class defines a storage mechanism for string values that should be protected or kept confidential.</source>
          <target state="translated">Как правило <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> класс определяет механизм хранения для строковых значений, которые должны быть защищены или хранить в тайне.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>However, outside of the .NET Framework itself, no usage mechanism supports <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph>.</source>
          <target state="translated">Однако за пределами самого .NET Framework поддерживает механизм использования <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>This means that the secure string must be converted to a usable form (typically a clear text form) that can be recognized by its target, and     that decryption and conversion must occur in user space.</source>
          <target state="translated">Это означает, защищенной строки необходимо преобразовать в форму можно использовать (как правило, форма открытым текстом), распознаваемое своей цели и расшифровки и преобразование должно находиться в пространстве пользователя.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Overall, <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is more secure than <ph id="ph2">&lt;xref:System.String&gt;</ph> because it limits the exposure of sensitive string data.</source>
          <target state="translated">Общее, <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> надежнее, чем <ph id="ph2">&lt;xref:System.String&gt;</ph> , так как она ограничивает возможность раскрытия конфиденциальных строковых данных.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>However, those strings may still be exposed to any process or operation that has access to raw memory, such as a malicious process running on the host computer, a process dump, or a user-viewable swap file.</source>
          <target state="translated">Тем не менее эти строки по-прежнему могут быть предоставлены для любого процесса или операцию, которая имеет доступ к памяти raw, например вредоносный процесса, выполняющегося на главном компьютере, дамп процесса или в файл подкачки для просмотра пользователем.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>Instead of using <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> to protect passwords, the recommended alternative is to use an opaque handle to credentials that are stored outside of the process.</source>
          <target state="translated">Вместо использования <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> взамен рекомендуется использовать для защиты паролей, является использование непрозрачный дескриптор, чтобы учетные данные, хранящиеся вне процесса.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>К началу<ept id="p1">](#top)</ept></target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecureString">
          <source>The following example demonstrates how to use a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> to secure a user’s password for use as a credential to start a new process.</source>
          <target state="translated">В следующем примере демонстрируется использование <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> для защиты пароля пользователя для использования в качестве учетных данных для запуска нового процесса.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="T:System.Security.SecureString">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor">
          <source>The following example uses the default (or parameterless) constructor to instantiate a new <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">В следующем примере используется значение по умолчанию (или без параметров) конструктор для создания нового <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> method to add an array of characters to it.</source>
          <target state="translated">Затем он вызывает <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> метод, чтобы добавить к нему массив символов.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object from the value of a <ph id="ph2">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> объекта из значения <ph id="ph2">&lt;xref:System.String&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor">
          <source>An error occurred while protecting or unprotecting the value of this instance.</source>
          <target state="translated">Произошла ошибка при защите значения этого экземпляра или снятии с него защиты.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor">
          <source>This operation is not supported on this platform.</source>
          <target state="translated">Эта операция не поддерживается этой платформой.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>A pointer to an array of <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> objects.</source>
          <target state="translated">Указатель на массив объектов <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>The number of elements of <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to include in the new instance.</source>
          <target state="translated">Число элементов массива <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, включаемых в новый экземпляр.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> class from a subarray of <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> objects.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> из подмассива объектов <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>This constructor is not CLS-compliant.</source>
          <target state="translated">Этот конструктор несовместим с CLS.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>The CLS-compliant alternative is <ph id="ph1">&lt;see cref="M:System.Security.SecureString.#ctor" /&gt;</ph>.</source>
          <target state="translated">CLS-совместимая альтернатива — <ph id="ph1">&lt;see cref="M:System.Security.SecureString.#ctor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>This constructor initializes the new <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object to the number of characters in <ph id="ph2">`value`</ph> specified by <ph id="ph3">`length`</ph>; the value of the instance is then encrypted.</source>
          <target state="translated">Этот конструктор инициализирует новый <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> объекта в число символов в <ph id="ph2">`value`</ph> заданные <ph id="ph3">`length`</ph>; значение экземпляра шифруется.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>In C#, this constructor is defined only in the context of unsafe code.</source>
          <target state="translated">В C# этот конструктор определен только в контексте небезопасного кода.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>The following example instantiates a new <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> object by passing its constructor a pointer to a character array.</source>
          <target state="translated">В следующем примере создается новый <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> объекта путем передачи его конструктору указатель на массив символов.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="value" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="length" /&gt;</ph> is less than zero or greater than 65,536.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="length" /&gt;</ph> меньше нуля или больше 65 536.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>This operation is not supported on this platform.</source>
          <target state="translated">Эта операция не поддерживается этой платформой.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">требуется полное доверие для непосредственно вызывающего метода.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Этот член не может использоваться частично доверенным или прозрачным кодом.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>A character to append to this secure string.</source>
          <target state="translated">Знак, добавляемый к защищенной строке.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>Appends a character to the end of the current secure string.</source>
          <target state="translated">Добавляет знак в конец текущей защищенной строки.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is appended; then the new value of the secure string is re-protected.</source>
          <target state="translated">Если реализация использует механизм защиты, такие как шифрование, значение этой защищенной строки, если таковая имеется, незащищенных; <ph id="ph1">`c`</ph> добавляется; затем новое значение защищенной строки повторной защиты.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> methods affect the value of a <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">В следующем примере показано, как <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, и <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> методы повлияет на значение <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> methods can be used to collect the characters in a password.</source>
          <target state="translated">В следующем примере показано, как <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> методы можно использовать для сбора символов в пароле.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Защищенная строка уже удалена.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>This secure string is read-only.</source>
          <target state="translated">Данная защищенная строка доступна только для чтения.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>Performing this operation would make the length of this secure string greater than 65,536 characters.</source>
          <target state="translated">При выполнении этой операции длина защищенной строки превысит 65 536 символов.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.AppendChar(System.Char)">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Clear">
          <source>Deletes the value of the current secure string.</source>
          <target state="translated">Удаляет значение текущей защищенной строки.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.Clear">
          <source>The computer memory that contains the value of this secure string is zeroed, then the length of the value of this secure string is set to zero.</source>
          <target state="translated">Обнулить памяти компьютера, который содержит значение этой защищенной строки, то длина значения этой защищенной строки присваивается нулевое значение.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.Clear">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> methods affect the value of a <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">В следующем примере показано, как <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, и <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> методы повлияет на значение <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Clear">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Защищенная строка уже удалена.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Clear">
          <source>This secure string is read-only.</source>
          <target state="translated">Данная защищенная строка доступна только для чтения.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Copy">
          <source>Creates a copy of the current secure string.</source>
          <target state="translated">Создает копию текущей защищенной строки.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Copy">
          <source>A duplicate of this secure string.</source>
          <target state="translated">Копия этой защищенной строки.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.Copy">
          <source>If an instance of a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is marked read-only, the copy of that instance will not be read-only.</source>
          <target state="translated">Если экземпляр <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> является помечен только для чтения, копия этого экземпляра не будет доступной только для чтения.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Copy">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Защищенная строка уже удалена.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Copy">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.Dispose">
          <source>Releases all resources used by the current <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> object.</source>
          <target state="translated">Освобождает все ресурсы, используемые текущим объектом <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> method writes binary zeroes to the allocated memory that contains the value of this <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> object, then frees the allocated memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString.Dispose%2A&gt;</ph> Метод записывает двоичных нулей на выделенную память, содержащий значение этого аргумента <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> объекта, а затем освобождает выделенную память.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>мусора<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>The index position where parameter <bpt id="p1">&lt;c&gt;</bpt>c<ept id="p1">&lt;/c&gt;</ept> is inserted.</source>
          <target state="translated">Индекс позиции вставки параметра <bpt id="p1">&lt;c&gt;</bpt>c<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>The character to insert.</source>
          <target state="translated">Вставляемый знак.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>Inserts a character in this secure string at the specified index position.</source>
          <target state="translated">Вставляет знак в заданную индексом позицию защищенной строки.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>The index is zero-based; the first character in this secure string is at index position zero.</source>
          <target state="translated">Индекс (с нуля); Первый символ в этой защищенной строки индекс равен нулю.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is inserted at the specified index position; then the new value is re-protected.</source>
          <target state="translated">Если реализация использует механизм защиты, такие как шифрование защищенной строки, если таковая имеется, равен незащищенных; <ph id="ph1">`c`</ph> вставляется в указанной позиции индекса; затем новое значение повторной защиты.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> method yields the same results as the <ph id="ph2">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> method, which inserts a character at the end of a secure string, if the <ph id="ph3">`index`</ph> parameter of <ph id="ph4">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> is set to the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> Позволяет получить те же результаты, что <ph id="ph2">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> метод, который вставляет символ в конце защищенной строки, если <ph id="ph3">`index`</ph> параметр <ph id="ph4">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph> равно длине данного экземпляра.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> methods affect the value of a <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">В следующем примере показано, как <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, и <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> методы повлияет на значение <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Защищенная строка уже удалена.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>This secure string is read-only.</source>
          <target state="translated">Данная защищенная строка доступна только для чтения.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero, or greater than the length of this secure string.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="index" /&gt;</ph> менее нуля или более длины защищенной строки.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>Performing this operation would make the length of this secure string greater than 65,536 characters.</source>
          <target state="translated">При выполнении этой операции длина защищенной строки превысит 65 536 символов.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.IsReadOnly">
          <source>Indicates whether this secure string is marked read-only.</source>
          <target state="translated">Указывает, что защищенная строка доступна только для чтения.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this secure string is marked read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если защищенная строка доступна только для чтения; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.IsReadOnly">
          <source>After an instance of <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> is marked read-only by the <ph id="ph2">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> method, any attempt to modify the value of the instance throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">После возникновения <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> помечен только для чтения <ph id="ph2">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> метод, любая попытка изменить значение создает экземпляр <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.IsReadOnly">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph> method to test whether a <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> is read-only before attempting to modify it.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph> тестируемого метода ли <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> доступно только для чтения, прежде чем пытаться изменить его.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.IsReadOnly">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Защищенная строка уже удалена.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.Security.SecureString.Length">
          <source>Gets the number of characters in the current secure string.</source>
          <target state="translated">Возвращает количество символов в текущей защищенной строке.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecureString.Length">
          <source>The number of <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> objects in this secure string.</source>
          <target state="translated">Количество объектов <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> в этой защищенной строке.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecureString.Length">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecureString.Length%2A&gt;</ph> property returns the number of <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects in this instance, not the number of Unicode characters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecureString.Length%2A&gt;</ph> Свойство возвращает число <ph id="ph2">&lt;xref:System.Char&gt;</ph> объектов в этом экземпляре, не число символов Юникода.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecureString.Length">
          <source>A Unicode character might be represented by more than one <ph id="ph1">&lt;xref:System.Char&gt;</ph> object.</source>
          <target state="translated">Символ Юникода могут быть представлены в более чем одной <ph id="ph1">&lt;xref:System.Char&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecureString.Length">
          <source>The maximum length of a <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> instance is 65,536 characters.</source>
          <target state="translated">Максимальная длина <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> экземпляра — 65 536 символов.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Security.SecureString.Length">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Защищенная строка уже удалена.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>Makes the text value of this secure string read-only.</source>
          <target state="translated">Делает текстовое значение этой защищенной строки доступным только для чтения.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>Initialize the text value of an instance of the <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> class with the <ph id="ph2">&lt;xref:System.Security.SecureString.%23ctor%2A&gt;</ph> constructors, and modify the value with the <ph id="ph3">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> methods.</source>
          <target state="translated">Инициализировать текстовое значение экземпляра <ph id="ph1">&lt;xref:System.Security.SecureString&gt;</ph> класса <ph id="ph2">&lt;xref:System.Security.SecureString.%23ctor%2A&gt;</ph> конструкторы и измените значение с <ph id="ph3">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, и <ph id="ph7">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> методы.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>After you have made your final modifications, use the <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> method to make the value of the instance immutable (read-only).</source>
          <target state="translated">После окончательного изменения были внесены, используйте <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> метод, чтобы сделать неизменяемым значение экземпляра (только для чтения).</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>After the value is marked as read-only, any further attempt to modify it throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Дополнительно после значение помечен только для чтения, любая попытка его изменить вызывает <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>The effect of invoking <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> is permanent because the <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> class provides no means to make the secure string modifiable again.</source>
          <target state="translated">Результат вызова <ph id="ph1">&lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;</ph> необратимо поскольку <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> класс предоставляет нет средств, чтобы вновь сделать изменяемой защищенной строки.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph> method to test whether an instance of <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> is read-only.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;</ph> метод для проверки соответствия экземпляра <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> доступно только для чтения.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> methods can be used to collect the characters in a password.</source>
          <target state="translated">В следующем примере показано, как <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> методы можно использовать для сбора символов в пароле.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>After the password is collected, it is made read-only.</source>
          <target state="translated">После сбора пароля, является доступным только для чтения.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.MakeReadOnly">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Защищенная строка уже удалена.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>The index position of a character in this secure string.</source>
          <target state="translated">Индекс знака в защищенной строке.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>Removes the character at the specified index position from this secure string.</source>
          <target state="translated">Удаляет из защищенной строки знак, расположенный по указанному индексу.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>The index is zero-based; the first character in this instance is at index position zero.</source>
          <target state="translated">Индекс (с нуля); Первый символ в данном экземпляре индекс равен нулю.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; the character at the specified index position is removed; then the new value is re-protected.</source>
          <target state="translated">Если реализация использует механизм защиты, такие как шифрование, значение этой защищенной строки, если таковая имеется, незащищенных; символ в указанной позиции индекса удаляется; Выберите новое значение повторной защиты.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> methods affect the value of a <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">В следующем примере показано, как <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, и <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> методы повлияет на значение <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> methods can be used to collect the characters in a password.</source>
          <target state="translated">В следующем примере показано, как <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph> методы можно использовать для сбора символов в пароле.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Защищенная строка уже удалена.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>This secure string is read-only.</source>
          <target state="translated">Данная защищенная строка доступна только для чтения.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero, or greater than or equal to the length of this secure string.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="index" /&gt;</ph> меньше нуля или больше или равно длине данной защищенной строки.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.RemoveAt(System.Int32)">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>The index position of an existing character in this secure string</source>
          <target state="translated">Индекс имеющегося знака в защищенной строке.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>A character that replaces the existing character.</source>
          <target state="translated">Знак, заменяющий имеющийся знак.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>Replaces the existing character at the specified index position with another character.</source>
          <target state="translated">Заменяет расположенный по указанному индексу знак другим знаком.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>The index is zero-based; the first character in this instance is at index position zero.</source>
          <target state="translated">Индекс (с нуля); Первый символ в данном экземпляре индекс равен нулю.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is assigned to the specified index position; then the new value is re-protected.</source>
          <target state="translated">Если реализация использует механизм защиты, такие как шифрование защищенной строки, если таковая имеется, равен незащищенных; <ph id="ph1">`c`</ph> назначен указанному положению индекса; затем новое значение повторной защиты.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> methods affect the value of a <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> object.</source>
          <target state="translated">В следующем примере показано, как <ph id="ph1">&lt;xref:System.Security.SecureString.AppendChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.SecureString.InsertAt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.SecureString.RemoveAt%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecureString.SetAt%2A&gt;</ph>, и <ph id="ph5">&lt;xref:System.Security.SecureString.Clear%2A&gt;</ph> методы повлияет на значение <ph id="ph6">&lt;xref:System.Security.SecureString&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Защищенная строка уже удалена.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>This secure string is read-only.</source>
          <target state="translated">Данная защищенная строка доступна только для чтения.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero, or greater than or equal to the length of this secure string.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="index" /&gt;</ph> меньше нуля или больше или равно длине данной защищенной строки.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Security.SecureString.SetAt(System.Int32,System.Char)">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>