<Type Name="SecurityElement" FullName="System.Security.SecurityElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9e13ab606e9616d0c4f55d43e917229c2a09f97" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityElement sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ab5e6-101">Представляет объектную модель XML для кодирования объектов безопасности.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ab5e6-101">Represents the XML object model for encoding security objects.</span>
      </span>
      <span data-ttu-id="ab5e6-102">Этот класс не наследуется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ab5e6-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-103">Этот класс должен быть облегченная реализация простой объектной модели XML для использования в системе безопасности, а не для использования в качестве общей объектной модели XML.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-103">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span> <span data-ttu-id="ab5e6-104">В этой документации предполагается базовое представление об XML.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-104">This documentation assumes a basic knowledge of XML.</span></span>  
  
 <span data-ttu-id="ab5e6-105">Простой объектной модели XML для элемента состоит из следующих частей:</span><span class="sxs-lookup"><span data-stu-id="ab5e6-105">The simple XML object model for an element consists of the following parts:</span></span>  
  
-   <span data-ttu-id="ab5e6-106">Тег является имя элемента.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-106">The tag is the element name.</span></span>  
  
-   <span data-ttu-id="ab5e6-107">Атрибуты имеют ноль или более пары имя значение атрибута в элементе.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-107">The attributes are zero or more name/value attribute pairs on the element.</span></span>  
  
-   <span data-ttu-id="ab5e6-108">Дочерние элементы — ноль или более элементов, вложенные в `<tag>` и `</tag>`.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-108">The children are zero or more elements nested within `<tag>` and `</tag>`.</span></span>  
  
 <span data-ttu-id="ab5e6-109">Настоятельно рекомендуется использование XML-представление на основе атрибутов для описания элементов безопасности и их значений.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-109">It is strongly suggested that attribute based XML representation is used to express security elements and their values.</span></span> <span data-ttu-id="ab5e6-110">Это означает, что свойства элемента выражаются в виде атрибутов и значений свойств выражаются в виде значения атрибута.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-110">This means properties of an element are expressed as attributes and property values are expressed as attribute values.</span></span> <span data-ttu-id="ab5e6-111">Избегайте вложения текста внутри тегов.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-111">Avoid nesting text within tags.</span></span> <span data-ttu-id="ab5e6-112">Для любого `<tag>text</tag>` представление в представление типа `<tag value="text"/>` обычно доступен.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-112">For any `<tag>text</tag>` representation a representation of type `<tag value="text"/>` is usually available.</span></span> <span data-ttu-id="ab5e6-113">С помощью этого представления XML на основе атрибутов повышает удобочитаемость и облегчает переносимость WMI полученной сериализации XML.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-113">Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</span></span>  
  
 <span data-ttu-id="ab5e6-114">Имя атрибута должен быть один или несколько знаков больше времени и не может быть `null`.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-114">An attribute name must be one character or longer, and cannot be `null`.</span></span> <span data-ttu-id="ab5e6-115">Если используется представление значений на основе элементов, элементы с текстом строка, являющаяся `null` представлены в `<tag/>` форме; в противном случае текст отделяется `<tag>` и `</tag>` маркеров.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-115">If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens.</span></span> <span data-ttu-id="ab5e6-116">Обе формы можно комбинировать с атрибутами, которые отображаются при его наличии.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-116">Both forms can be combined with attributes, which are shown if present.</span></span>  
  
 <span data-ttu-id="ab5e6-117">Теги, атрибуты и текст элементов, если он имеется, всегда с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-117">The tags, attributes, and text of elements, if present, are always case-sensitive.</span></span> <span data-ttu-id="ab5e6-118">Форма XML содержит кавычки и escape-последовательности при необходимости.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-118">The XML form contains quotations and escapes where necessary.</span></span> <span data-ttu-id="ab5e6-119">Строковые значения, которые содержат символы, недопустимые для использования в XML, приведут <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-119">String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="ab5e6-120">Эти правила применяются ко всем свойствам и методам.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-120">These rules apply to all properties and methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab5e6-121">Из соображений производительности допустимость знаков проверяется только при кодировании элемента в виде текста XML, а не для каждого набора, свойства или метода.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-121">For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</span></span> <span data-ttu-id="ab5e6-122">Статические методы позволяют явную проверку по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-122">Static methods allow explicit checking where needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-123">В следующем примере показано использование элементов <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-123">The following example shows the use of members of the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]
 [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]
 [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ab5e6-124">Инициализирует новый экземпляр класса <see cref="T:System.Security.SecurityElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="ab5e6-125">Имя тега элемента XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-125">The tag name of an XML element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab5e6-126">Инициализирует новый экземпляр класса <see cref="T:System.Security.SecurityElement" /> с указанным тегом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-127">`tag` Параметр должен содержать допустимое имя тега XML.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-127">The `tag` parameter must consist of a valid XML tag name.</span></span> <span data-ttu-id="ab5e6-128">Используйте <xref:System.Security.SecurityElement.Escape%2A> для удаления недопустимых символов из строки.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-128">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-129">В следующем коде показано использование <xref:System.Security.SecurityElement.%23ctor%2A> конструктор для создания нового <xref:System.Security.SecurityElement> объекта.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-129">The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.</span></span>  <span data-ttu-id="ab5e6-130">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-130">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]
 [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]
 [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab5e6-131">Параметр <paramref name="tag" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab5e6-132">Параметр <paramref name="tag" /> недопустим в XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-132">The <paramref name="tag" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag, System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="ab5e6-133">Имя тега элемента XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-133">The tag name of the XML element.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="ab5e6-134">Текстовое содержимое элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-134">The text content within the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab5e6-135">Инициализирует новый экземпляр класса <see cref="T:System.Security.SecurityElement" /> с указанным тегом и текстом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-136">Если `text` параметр `null` этот конструктор создает тот же элемент, конструктор по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-136">If the `text` parameter is `null` this constructor produces an element identical to the default constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab5e6-137">Параметр <paramref name="tag" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab5e6-138">Параметры <paramref name="tag" /> и <paramref name="text" /> недопустимы в XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ab5e6-139">Имя атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-139">The name of the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ab5e6-140">Значение атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-140">The value of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab5e6-141">Добавляет атрибут "имя-значение" к элементу XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-141">Adds a name/value attribute to an XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-142">Имена и значения атрибутов должны содержать только допустимые символы XML-атрибута.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-142">Names and values in attributes should only contain valid XML attribute characters.</span></span> <span data-ttu-id="ab5e6-143">Имена атрибутов XML должны быть уникальными.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-143">XML attribute names must be unique.</span></span> <span data-ttu-id="ab5e6-144">Используйте <xref:System.Security.SecurityElement.Escape%2A> для удаления недопустимых символов из строки.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-144">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="ab5e6-145">Не поддерживается для строки в кавычках, поэтому строки для пары "имя значение" не должны содержать кавычки или другие символы, требующие заключения в кавычки.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-145">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-146">В следующем коде показано использование <xref:System.Security.SecurityElement.AddAttribute%2A> метода для добавления атрибута имени и значения в XML-элемента.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-146">The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element.</span></span> <span data-ttu-id="ab5e6-147">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-147">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]
 [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]
 [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab5e6-148">Параметр <paramref name="name" /> или <paramref name="value" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab5e6-149">Параметры <paramref name="name" /> и <paramref name="value" /> недопустимы в XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span>
          </span>
          <span data-ttu-id="ab5e6-150">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-150">-or-</span>
          </span>
          <span data-ttu-id="ab5e6-151">Атрибут с именем, определяемым параметром <paramref name="name" />, уже существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-151">An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.SecurityElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.SecurityElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::SecurityElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="ab5e6-152">Добавляемый дочерний элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-152">The child element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab5e6-153">Добавляет дочерний элемент в элемент XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-153">Adds a child element to the XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-154">Дочерний элемент добавляется после всех существующих дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-154">The child element is added following any previously existing child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-155">В следующем коде показано использование <xref:System.Security.SecurityElement.AddChild%2A> метод, чтобы добавить дочерний элемент в XML-элемент.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-155">The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.</span></span>  <span data-ttu-id="ab5e6-156">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-156">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]
 [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]
 [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab5e6-157">Параметр <paramref name="child" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-157">The <paramref name="child" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public string Attribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Attribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Attribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Attribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Attribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ab5e6-158">Имя атрибута для поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-158">The name of the attribute for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab5e6-159">Находит атрибут с заданным именем в элементе XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-159">Finds an attribute by name in an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab5e6-160">Значение, связанное с именованным атрибутом, или <see langword="null" />, если атрибута с именем <paramref name="name" /> не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-160">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-161">С помощью XML следующим образом: `Attribute("B")` вернет значение «456».</span><span class="sxs-lookup"><span data-stu-id="ab5e6-161">With XML as follows, `Attribute("B")` would return "456".</span></span>  
  
```  
<thetag A="123" B="456" C="789">text</thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-162">В следующем коде показано использование <xref:System.Security.SecurityElement.Attribute%2A> метод для поиска по имени атрибута.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-162">The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name.</span></span> <span data-ttu-id="ab5e6-163">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-163">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]
 [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]
 [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab5e6-164">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-164">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ Attributes { System::Collections::Hashtable ^ get(); void set(System::Collections::Hashtable ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab5e6-165">Получает или задает атрибуты элемента XML в виде пар "имя-значение".</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-165">Gets or sets the attributes of an XML element as name/value pairs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab5e6-166">Объект <see cref="T:System.Collections.Hashtable" /> для значений атрибутов элемента XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-166">The <see cref="T:System.Collections.Hashtable" /> object for the attribute values of the XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-167">Каждый атрибут хранится в <xref:System.Collections.Hashtable> как пара имя значение.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-167">Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.</span></span>  
  
 <span data-ttu-id="ab5e6-168">Имена и значения атрибутов должны содержать только допустимые символы атрибута XML.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-168">Names and values in attributes should contain only valid XML attribute characters.</span></span> <span data-ttu-id="ab5e6-169">Используйте <xref:System.Security.SecurityElement.Escape%2A> для удаления недопустимых символов из строки.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-169">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="ab5e6-170">Не поддерживается для строки в кавычках, поэтому строки для пары "имя значение" не должны содержать кавычки или другие символы, требующие заключения в кавычки.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-170">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-171">В следующем коде показано использование <xref:System.Security.SecurityElement.Attributes%2A> свойства атрибута элемента XML.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-171">The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element.</span></span> <span data-ttu-id="ab5e6-172">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-172">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]
 [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]
 [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ab5e6-173">Недопустимое имя или значение объекта <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-173">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab5e6-174">Имя атрибута XML является недопустимым.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-174">The name is not a valid XML attribute name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Children { System::Collections::ArrayList ^ get(); void set(System::Collections::ArrayList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab5e6-175">Получает или задает массив дочерних элементов данного элемента XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-175">Gets or sets the array of child elements of the XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab5e6-176">Упорядоченные дочерние элементы данного элемента XML в виде элементов безопасности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-176">The ordered child elements of the XML element as security elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-177">Если <xref:System.Security.SecurityElement> содержит оба <xref:System.Security.SecurityElement.Text%2A> и <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> будут отображаться первыми.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-177">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-178">В следующем коде показано использование <xref:System.Security.SecurityElement.Children%2A> свойства, чтобы получить массив дочерних элементов элемента XML.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-178">The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element.</span></span> <span data-ttu-id="ab5e6-179">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-179">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]
 [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]
 [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab5e6-180">Дочерний элемент родительского узла XML равен <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-180">A child of the XML parent node is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ab5e6-181">Создает и возвращает точную копию текущего объекта <see cref="T:System.Security.SecurityElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-181">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab5e6-182">Копия текущего объекта <see cref="T:System.Security.SecurityElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-182">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-183">Копия включает в себя <xref:System.Security.SecurityElement.Children%2A> и <xref:System.Security.SecurityElement.Attributes%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-183">The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (System.Security.SecurityElement other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equal(class System.Security.SecurityElement other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equal (other As SecurityElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equal(System::Security::SecurityElement ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="ab5e6-184">Объект элемента XML, с которым сравнивается текущий объект элемента XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-184">An XML element object to which to compare the current XML element object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab5e6-185">Сравнивает два объекта элементов XML, чтобы определить, равны ли они.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-185">Compares two XML element objects for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab5e6-186">
            <see langword="true" />, если тег, имена и значения атрибутов, дочерние элементы и текстовые поля текущего элемента XML идентичны соответствующим составляющим параметра <paramref name="other" />; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-186">
              <see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-187">При наличии дочерних элементов сравнение распространяется рекурсивно к ним.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-187">If there are child elements, comparison extends recursively to them.</span></span>  
  
 <span data-ttu-id="ab5e6-188">Сравнение различных XML-представлений одинаковых знаков не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-188">There is no support for comparing different XML representations of the same characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-189">В следующем коде показано использование <xref:System.Security.SecurityElement.Equal%2A> метод для сравнения двух XML-элементов.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-189">The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements.</span></span> <span data-ttu-id="ab5e6-190">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-190">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]
 [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]
 [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="ab5e6-191">Строка, в которой выполняется обработка недопустимых знаков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-191">The string within which to escape invalid characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab5e6-192">Заменяет недопустимые для XML знаки в строке их допустимыми эквивалентами в XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-192">Replaces invalid XML characters in a string with their valid XML equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab5e6-193">Строка ввода с замененными недопустимыми знаками.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-193">The input string with invalid characters replaced.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-194">Используйте этот метод для замены недопустимых символов в строке перед применением строки в <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-194">Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>.</span></span> <span data-ttu-id="ab5e6-195">Если использованы недопустимые символы в <xref:System.Security.SecurityElement> не обработанные должным образом, <xref:System.ArgumentException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-195">If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="ab5e6-196">Ниже приведены недопустимые символы XML и их допустимые эквиваленты.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-196">The following table shows the invalid XML characters and their escaped equivalents.</span></span>  
  
|<span data-ttu-id="ab5e6-197">Недопустимый символ XML</span><span class="sxs-lookup"><span data-stu-id="ab5e6-197">invalid XML Character</span></span>|<span data-ttu-id="ab5e6-198">Заменить на</span><span class="sxs-lookup"><span data-stu-id="ab5e6-198">Replaced With</span></span>|  
|---------------------------|-------------------|  
|<span data-ttu-id="ab5e6-199">"\<"</span><span class="sxs-lookup"><span data-stu-id="ab5e6-199">"\<"</span></span>|<span data-ttu-id="ab5e6-200">"&lt;"</span><span class="sxs-lookup"><span data-stu-id="ab5e6-200">"&lt;"</span></span>|  
|<span data-ttu-id="ab5e6-201">">"</span><span class="sxs-lookup"><span data-stu-id="ab5e6-201">">"</span></span>|<span data-ttu-id="ab5e6-202">"&gt;"</span><span class="sxs-lookup"><span data-stu-id="ab5e6-202">"&gt;"</span></span>|  
|<span data-ttu-id="ab5e6-203">"\\""</span><span class="sxs-lookup"><span data-stu-id="ab5e6-203">"\\""</span></span>|<span data-ttu-id="ab5e6-204">"&quot;"</span><span class="sxs-lookup"><span data-stu-id="ab5e6-204">"&quot;"</span></span>|  
|<span data-ttu-id="ab5e6-205">"\\'"</span><span class="sxs-lookup"><span data-stu-id="ab5e6-205">"\\'"</span></span>|<span data-ttu-id="ab5e6-206">"&apos;"</span><span class="sxs-lookup"><span data-stu-id="ab5e6-206">"&apos;"</span></span>|  
|<span data-ttu-id="ab5e6-207">"&"</span><span class="sxs-lookup"><span data-stu-id="ab5e6-207">"&"</span></span>|<span data-ttu-id="ab5e6-208">"&amp;"</span><span class="sxs-lookup"><span data-stu-id="ab5e6-208">"&amp;"</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-209">В следующем коде показано использование <xref:System.Security.SecurityElement.Escape%2A> символы в строке с их допустимыми эквивалентами в XML, метод для замены недопустимый XML-код.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-209">The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent.</span></span> <span data-ttu-id="ab5e6-210">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-210">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]
 [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]
 [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement FromString (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityElement FromString(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (xml As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityElement ^ FromString(System::String ^ xml);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="ab5e6-211">Строка в XML-кодировке, на основе которой следует создать элемент безопасности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-211">The XML-encoded string from which to create the security element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab5e6-212">Создает элемент безопасности на основе строки в XML-кодировке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-212">Creates a security element from an XML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab5e6-213">Элемент <see cref="T:System.Security.SecurityElement" />, созданный на основе XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-213">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-214">Не используйте одинарные кавычки в XML-строку; Вместо этого используйте escape-символы двойных кавычек.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-214">Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</span></span> <span data-ttu-id="ab5e6-215">Например, вместо объекта «`<value name='Company'>Microsoft</value>"` использовать «`<value name=\"Company\">Microsoft</value>"`.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-215">For example, instead of "`<value name='Company'>Microsoft</value>"` use "`<value name=\"Company\">Microsoft</value>"`.</span></span>  
  
 <span data-ttu-id="ab5e6-216">Использование одинарных кавычек может привести к либо исключение или, в некоторых случаях в одиночные кавычки, которые обрабатываются как текст в строке.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-216">Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.XmlSyntaxException">
          <span data-ttu-id="ab5e6-217">
            <paramref name="xml" /> содержит один или несколько символов одинарных кавычек.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-217">
              <paramref name="xml" /> contains one or more single quotation mark characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab5e6-218">Свойство <paramref name="xml" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-218">
              <paramref name="xml" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ab5e6-219">Имя атрибута, проверяемое на допустимость.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-219">The attribute name to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab5e6-220">Определяет, является ли строка допустимым именем атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-220">Determines whether a string is a valid attribute name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab5e6-221">
            <see langword="true" />, если параметр <paramref name="name" /> является допустимым именем атрибута XML; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-221">
              <see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-222">Этот метод можно использовать для проверки атрибута перед его добавлением в элемент безопасности.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-222">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-223">В следующем коде показано использование <xref:System.Security.SecurityElement.IsValidAttributeName%2A> метод, чтобы определить, является ли строка допустимым именем атрибута.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-223">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name.</span></span> <span data-ttu-id="ab5e6-224">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-224">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]
 [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]
 [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeValue">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeValue(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ab5e6-225">Значение атрибута, проверяемое на допустимость.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-225">The attribute value to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab5e6-226">Определяет, является ли строка допустимым значением атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-226">Determines whether a string is a valid attribute value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab5e6-227">
            <see langword="true" />, если параметр <paramref name="value" /> является допустимым значением атрибута XML; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-227">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-228">Этот метод можно использовать для проверки атрибута перед его добавлением в элемент безопасности.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-228">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-229">В следующем коде показано использование <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> метод, чтобы определить, является ли строка допустимым значением атрибута.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-229">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value.</span></span> <span data-ttu-id="ab5e6-230">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-230">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]
 [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]
 [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTag">
      <MemberSignature Language="C#" Value="public static bool IsValidTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidTag (tag As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidTag(System::String ^ tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="ab5e6-231">Тег, проверяемый на допустимость.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-231">The tag to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab5e6-232">Определяет, является ли строка допустимым тегом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-232">Determines whether a string is a valid tag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab5e6-233">
            <see langword="true" />, если параметр <paramref name="tag" /> является допустимым тегом XML; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-233">
              <see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-234">Это может использоваться для тестирования <xref:System.Security.SecurityElement.Tag%2A> перед заданием.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-234">This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-235">В следующем коде показано использование <xref:System.Security.SecurityElement.IsValidTag%2A> метод, чтобы определить, является ли строка допустимым атрибутом тег.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-235">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag.</span></span> <span data-ttu-id="ab5e6-236">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-236">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]
 [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]
 [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidText">
      <MemberSignature Language="C#" Value="public static bool IsValidText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidText (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="ab5e6-237">Текст, проверяемый на допустимость.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-237">The text to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab5e6-238">Определяет, допустима ли строка в качестве текста в составе элемента XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-238">Determines whether a string is valid as text within an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab5e6-239">
            <see langword="true" />, если параметр <paramref name="text" /> является допустимым текстовым элементом XML; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-239">
              <see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-240">Этот метод можно использовать для тестирования <xref:System.Security.SecurityElement.Text%2A> перед заданием.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-240">This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-241">В следующем коде показано использование <xref:System.Security.SecurityElement.IsValidText%2A> метод, чтобы определить, является ли строка допустимым как элемент XML-текст.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-241">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text.</span></span> <span data-ttu-id="ab5e6-242">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-242">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]
 [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]
 [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForChildByTag">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement SearchForChildByTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement SearchForChildByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForChildByTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForChildByTag (tag As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ SearchForChildByTag(System::String ^ tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="ab5e6-243">Тег, для которого нужно выполнить поиск среди дочерних элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-243">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab5e6-244">Выполняет поиск дочернего элемента по имени тега.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-244">Finds a child by its tag name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab5e6-245">Первый дочерний элемент XML с указанным значением тега или <see langword="null" />, если дочернего элемента с тегом <paramref name="tag" /> не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-245">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-246">С помощью XML следующим образом: `SearchForChildByTag("second")` возвращает дочерний элемент `<second>`.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-246">With XML as follows, `SearchForChildByTag("second")` would return the child element `<second>`.</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
       <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-247">В следующем коде показано использование <xref:System.Security.SecurityElement.SearchForChildByTag%2A> метод для поиска по имени тега дочернего.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-247">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name.</span></span> <span data-ttu-id="ab5e6-248">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-248">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]
 [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]
 [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab5e6-249">Параметр <paramref name="tag" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-249">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchForTextOfTag">
      <MemberSignature Language="C#" Value="public string SearchForTextOfTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SearchForTextOfTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForTextOfTag (tag As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SearchForTextOfTag(System::String ^ tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="ab5e6-250">Тег, для которого нужно выполнить поиск среди дочерних элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-250">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab5e6-251">Выполняет поиск дочернего элемента по имени тега и возвращает содержащийся в элементе текст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-251">Finds a child by its tag name and returns the contained text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab5e6-252">Текстовое содержимое первого дочернего элемента с указанным значением тега.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-252">The text contents of the first child element with the specified tag value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-253">Этот метод эквивалентен следующему:</span><span class="sxs-lookup"><span data-stu-id="ab5e6-253">This method is equivalent to the following:</span></span>  
  
 [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]
 [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  
  
 <span data-ttu-id="ab5e6-254">С помощью XML следующим образом: `SearchForTextOfTag("second")` вернет «Текст2».</span><span class="sxs-lookup"><span data-stu-id="ab5e6-254">With XML as follows, `SearchForTextOfTag("second")` would return "text2".</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
    <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-255">В следующем коде показано использование <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> метод для поиска по имени тега дочернего и возврата содержащегося текста.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-255">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text.</span></span> <span data-ttu-id="ab5e6-256">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-256">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]
 [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]
 [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab5e6-257">Свойство <paramref name="tag" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-257">
              <paramref name="tag" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab5e6-258">Получает или задает имя тега элемента XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-258">Gets or sets the tag name of an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab5e6-259">Имя тега элемента XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-259">The tag name of an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-260">В XML-тег отображается в скрипте, как указано ниже:</span><span class="sxs-lookup"><span data-stu-id="ab5e6-260">In XML, the tag appears in the script as appears below:</span></span>  
  
```  
<tag attributes>text</tag>  
```  
  
 <span data-ttu-id="ab5e6-261">Если этот элемент содержит дочерние элементы, последние заменяют `text`.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-261">If this element has child elements, the children will replace `text`.</span></span>  
  
 <span data-ttu-id="ab5e6-262">Присвойте этому свойству только допустимые строки тегов XML.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-262">Assign only valid XML tag strings to this property.</span></span> <span data-ttu-id="ab5e6-263">Используйте <xref:System.Security.SecurityElement.Escape%2A> для удаления недопустимых символов из строки.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-263">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-264">В следующем коде показано использование <xref:System.Security.SecurityElement.Tag%2A> свойства, чтобы получить имя тега элемента XML.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-264">The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element.</span></span> <span data-ttu-id="ab5e6-265">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-265">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]
 [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]
 [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab5e6-266">Значение тега равно <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-266">The tag is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab5e6-267">Тег не является допустимым в XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-267">The tag is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab5e6-268">Получает или задает текст внутри элемента XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-268">Gets or sets the text within an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab5e6-269">Значение текста внутри элемента XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-269">The value of the text within an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-270">Текст не должен содержать специальные символы XML.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-270">The text should not contain XML special characters.</span></span> <span data-ttu-id="ab5e6-271">Используйте <xref:System.Security.SecurityElement.Escape%2A> для удаления недопустимых символов из строки.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-271">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="ab5e6-272">Если <xref:System.Security.SecurityElement> содержит оба <xref:System.Security.SecurityElement.Text%2A> и <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> будут отображаться первыми.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-272">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab5e6-273">В следующем коде показано использование <xref:System.Security.SecurityElement.Text%2A> свойство для получения текста элемента XML.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-273">The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element.</span></span> <span data-ttu-id="ab5e6-274">Данный пример кода является частью большего примера, приведенного для <xref:System.Security.SecurityElement> класса.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-274">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]
 [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]
 [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab5e6-275">Текст не является допустимым в XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-275">The text is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ab5e6-276">Выдает строковое представление элемента XML вместе с атрибутами, дочерними элементами и текстом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-276">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab5e6-277">Элемент XML и его содержимое.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab5e6-277">The XML element and its contents.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab5e6-278">Этот метод полезен при отладке, чтобы увидеть XML-представление элемента.</span><span class="sxs-lookup"><span data-stu-id="ab5e6-278">This method is useful in debugging to see the XML representation of the element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>