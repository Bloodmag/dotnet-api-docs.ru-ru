<Type Name="SuppressUnmanagedCodeSecurityAttribute" FullName="System.Security.SuppressUnmanagedCodeSecurityAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6be1e0dbf1cc6bf9f376bd89fb4676055a18a294" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30497178" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SuppressUnmanagedCodeSecurityAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SuppressUnmanagedCodeSecurityAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.SuppressUnmanagedCodeSecurityAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SuppressUnmanagedCodeSecurityAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SuppressUnmanagedCodeSecurityAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Позволяет управляемому коду вызывать неуправляемый код без обхода стека. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  Этот атрибут можно используйте с особой осторожностью. Неправильное использование может создать уязвимости безопасности.  
  
 Этот атрибут может применяться к методам, которые необходимо вызывать в машинном коде без потерь производительности, проверку безопасности во время выполнения при этом. Проверка стека, выполняемая при вызове неуправляемого кода пропущено во время выполнения приведет к значительно повышает быстродействие. С помощью этого атрибута в классе применяет все методы класса.  
  
 Как правило, каждый раз, когда управляемый код вызывает неуправляемый код (с помощью взаимодействия PInvoke или COM с машинным кодом), есть требование `UnmanagedCode` разрешения, чтобы все вызывающие объекты имеют необходимое разрешение для этого. Применяя этот явный атрибут, разработчики могут отключить это требование во время выполнения. Разработчик должен отвечать за чтобы удостовериться, что переход к неуправляемому коду надежно защищен другими способами. Потребность в `UnmanagedCode` разрешение по-прежнему будет возникать во время компоновки. Например, если функция A вызывает функцию B, а функция B помечается <xref:System.Security.SuppressUnmanagedCodeSecurityAttribute>, функция будет выполнена проверка A разрешение неуправляемого кода во время компиляции just-in-time, но не во время выполнения.  
  
 Этот атрибут действует только при применении к методам PInvoke (или классов, содержащих методы PInvoke) либо при определении интерфейса, через который будет осуществляться взаимодействие вызовов. Оно будет игнорироваться во всех других контекстах.  
  
 Этот атрибут полезен при реализации класса, который предоставляет доступ к системным ресурсам посредством неуправляемого кода. Код, который не имеет разрешения на доступ к неуправляемому коду, может вызывать класс с этим атрибутом для доступа к неуправляемому коду. Это только безопасным, если модуль записи класса с этим атрибутом, обеспечил безопасность класса. В противном случае этот атрибут является опасной операцией и может разрешить код, который использует его для неправильного использования.  
  
 Это не атрибутом декларативной безопасности, а обычным атрибутом (он является производным от <xref:System.Attribute>, а не <xref:System.Security.Permissions.SecurityAttribute>).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SuppressUnmanagedCodeSecurityAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SuppressUnmanagedCodeSecurityAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.SuppressUnmanagedCodeSecurityAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Конструктор по умолчанию инициализирует все поля значениями по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>