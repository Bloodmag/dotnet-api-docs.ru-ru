<Type Name="IBindingRuntimePreferences" FullName="System.ServiceModel.Channels.IBindingRuntimePreferences">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="af046cf39591bb89cd1c3e955e1a654b061cf120" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34313867" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет необязательный контракт, который можно реализовать в привязке, чтобы указать способ обработки входящих запросов службой (синхронный или асинхронный).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В некоторых случаях привязка эффективнее обрабатывает сообщения с помощью синхронного метода <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> или <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>. В классе <xref:System.ServiceModel.Channels.Binding> также можно реализовать класс <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, указывающий вызывающим объектам, что этот метод является предпочтительным.  
  
 Если привязка не реализует <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, уровень модели служб Windows Communication Foundation (WCF) по умолчанию использует асинхронные версии `Receive` и `Request` методы. Если в привязке реализован <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, уровень модели служб WCF проверяет значение <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> и использует, чтобы определить, следует ли вызывать синхронные версии этих методов (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> или <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) или асинхронный версии (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> и <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> или <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> и <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>. Если в привязке реализован класс <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> и его свойство `true` возвращает значение <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>, рекомендуется использовать синхронные методы <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> и <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> для получения сообщений из этого канала. Если класс <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> не реализован в привязке или его свойство `false` возвращает значение <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>, рекомендуется использовать методы <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> и <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> или <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> и <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>.  
  
 Вне зависимости от значения, возвращаемого свойством <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>, во всех привязках должны быть надлежащим образом реализованы как синхронные, так и асинхронные версии методов `Receive` для реализуемых конкретных типов каналов. Дополнительные сведения о реализации пользовательских каналов см. в разделе [разработка каналов](~/docs/framework/wcf/extending/developing-channels.md).  
  
   
  
## Examples  
 В следующем примере показана реализация привязки с реализацией интерфейса <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>. Этот код взят из [фрагментов канала](~/docs/framework/wcf/samples/chunking-channel.md) образца:  
  
 [!code-csharp[S_UE_ChunkingChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveSynchronously { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее наиболее эффективный способ обработки входящих запросов: синхронный или асинхронный.</summary>
        <value>
          <see langword="true" /> Если запросы, которые могут обрабатываться более эффективно синхронно. в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" /> (асинхронная обработка запросов).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот интерфейс реализован в стандартных (системных) привязках, предоставляемых Windows Communication Foundation (WCF) и в некоторых случаях переопределить значение по умолчанию, чтобы использовалась синхронная обработка входящих сообщений.  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChunkingChannel#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>