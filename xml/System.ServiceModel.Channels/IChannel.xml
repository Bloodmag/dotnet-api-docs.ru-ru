<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IChannel.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cf048a83a83d9d4dbb1dd852b5ce9805de7794ba.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf048a83a83d9d4dbb1dd852b5ce9805de7794ba</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IChannel">
          <source>Defines the basic interface that all channel objects must implement.</source>
          <target state="translated">Определяет базовый интерфейс, который должен быть реализован во всех объектах каналов.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IChannel">
          <source>It requires that they implement the state machine interface shared by all communication objects and that they implement a method to retrieve objects from the channel stack.</source>
          <target state="translated">Требуется, чтобы в них был реализован интерфейс конечного автомата, совместно используемый всеми коммуникационными объектами, а также метод для извлечения объектов из стека каналов.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source>Channels must satisfy the contract of a state machine as defined by the <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> interface.</source>
          <target state="translated">Каналы должны соответствовать контракту конечного автомата, определенному в интерфейсе <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannel&gt;</ph> interface adds the</source>
          <target state="translated">Интерфейс <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannel&gt;</ph> добавляет метод</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannel.GetProperty%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannel.GetProperty%2A&gt;</ph> в интерфейс <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source>This method provides a mechanism for retrieving properties from the channel stack regardless of where in the stack those properties live.</source>
          <target state="translated">Этот метод предоставляет механизм извлечения свойств из стека каналов вне зависимости от их местоположения в этом стеке.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source>The term "property" in the method name refers to a piece of information that belongs to one of the channels in the stack.</source>
          <target state="translated">Слово "property" (свойство) в имени метода относится к информации, принадлежащей одному из каналов в стеке.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source>The CLR type for that property is determined by <ph id="ph1">`T`</ph>.</source>
          <target state="translated">Тип CLR для этого свойства определяется как <ph id="ph1">`T`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source>This method of retrieval is also used on channel factories and channel listeners.</source>
          <target state="translated">Этот метод извлечения данных также используется с фабриками каналов и прослушивателями каналов.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source><ph id="ph1">`IChannel`</ph> is inherited by each of the channel interfaces associated with the basic message-exchange patterns:</source>
          <target state="translated">Класс <ph id="ph1">`IChannel`</ph> наследуется всеми интерфейсами каналов, связанными с базовыми шаблонами обмена сообщениями:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> for receiving messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> для получения сообщений.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> for sending messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> для отправки сообщений.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph> for sending a request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph> для отправки запроса.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph> for sending a reply.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph> для отправки ответа.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexChannel&gt;</ph> for bi-directional messaging.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexChannel&gt;</ph> для двустороннего обмена сообщениями.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>The typed object for which the method is querying.</source>
          <target state="translated">Типизированный объект, запрашиваемый методом.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</source>
          <target state="translated">Возвращает запрошенный типизированный объект, если он имеется, из соответствующего уровня стека каналов.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is present or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not.</source>
          <target state="translated">Запрашиваемый типизированный объект <ph id="ph1">&lt;paramref name="T" /&gt;</ph>, если он имеется, или значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>, если он отсутствует.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.</source>
          <target state="translated">Этот метод следует использовать для запроса типизированного объекта, например интерфейса для задания свойств или получения состояния из соответствующего уровня стека каналов.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>If a layer supports returning the requested object, it returns it.</source>
          <target state="translated">Если уровень поддерживает возврат запрошенного объекта, он возвращает его.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>If not, it delegates the call down to the next layer in the stack.</source>
          <target state="translated">В противном случае вызов делегируется на следующий более низкий уровень стека.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Если достигнуто дно стека и уровень канала, поддерживающий запрошенный объект, не найден, метод возвращает значение <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>The following sample shows how this property can be implemented by a channel that delegates the call down the stack using an<ph id="ph1">`InnerChannel`</ph> property that retrieves the inner channel for this channel.</source>
          <target state="translated">В следующем примере показано, как это свойство может быть реализован в канале, делегирующем вызов на более низкий уровень стека с помощью<ph id="ph1">`InnerChannel`</ph> свойство, которое извлекает внутренний канал этого канала.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>