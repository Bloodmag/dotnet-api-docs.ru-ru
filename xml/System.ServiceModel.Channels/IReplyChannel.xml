<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IReplyChannel.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac559a62b5af42b1a06346ccd412414096f0908aa4f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59a62b5af42b1a06346ccd412414096f0908aa4f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IReplyChannel">
          <source>Defines the interface that a channel must implement to be on the receiving side of a request-reply communication between messaging endpoints.</source>
          <target state="translated">Определяет интерфейс, который должен реализовывать канал, чтобы быть на принимающей стороне взаимодействия запрос-ответ между конечными точками, обменивающимися сообщениями.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IReplyChannel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph> interface includes synchronous and asynchronous variants of a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph> method return an <ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> that can be used to construct replies to received requests.</source>
          <target state="translated">Интерфейс <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph> включает в себя синхронный и асинхронный варианты метода <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph>, который возвращает объект <ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph>, позволяющий создать ответы на полученные запросы.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IReplyChannel">
          <source>The contract includes synchronous and asynchronous variants of receive, try-to-receive and wait-for-a-message functionality.</source>
          <target state="translated">Контракт включает в себя синхронный и асинхронный варианты функций получения, попытки получения и ожидания сообщения.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IReplyChannel">
          <source>An <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph> is not necessarily bound to a single sender.</source>
          <target state="translated">Интерфейс <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph> не обязательно привязан к одному отправителю.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IReplyChannel">
          <source>Other channels and channel interfaces provide correlation between the sender and the reply channel, but the base contract makes no such restriction.</source>
          <target state="translated">Другие каналы и интерфейсы каналов устанавливают соответствие между отправителем и каналом ответа, но базовый контракт не делает такого ограничения.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IReplyChannel">
          <source>The pull model is used with an <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph> to receive messages.</source>
          <target state="translated">Модель извлечения используется с интерфейсом <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph> для получения сообщений.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IReplyChannel">
          <source>This model consists of calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph> (or one of its variants) and then waiting for a message to arrive.</source>
          <target state="translated">Эта модель состоит из вызова метода <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph> (или одного из его вариантов) и ожидания прихода сообщения.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IReplyChannel">
          <source>Begins an asynchronous operation to receive an available request.</source>
          <target state="translated">Начинает асинхронную операцию для получения доступного запроса.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous receive that a request operation completes.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>, принимающий уведомление об асинхронном получении, завершенном операцией запроса.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</source>
          <target state="translated">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронным получением операции запроса.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to receive an available request with a default timeout.</source>
          <target state="translated">Начинает асинхронную операцию для получения доступного запроса со временем ожидания по умолчанию.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous reception of the request.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, ссылающийся на асинхронное получение запроса.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.AsyncCallback%2CSystem.Object%29&gt;</ph> method implements the standard pattern for invoking <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest&gt;</ph> asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.AsyncCallback%2CSystem.Object%29&gt;</ph> Метод реализует стандартный шаблон для вызова <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest&gt;</ph> асинхронно.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
          <source>The default timeout is 1 minute.</source>
          <target state="translated">Время ожидания по умолчанию — 1 минута.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
          <source>If a receive timeout is set on the binding used to configure the connection, then that value is used.</source>
          <target state="translated">Если время ожидания получения задано в привязке, использованной для настройки подключения, используется это значение.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if you want to specify an explicit timeout with the call that overrides these other values.</source>
          <target state="translated">Используйте метод <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph>, если необходимо явно задать время ожидания для вызова, которое переопределит другие значения.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
          <source>If the request message received is larger that the maximum message size allowed by the binding being used, a <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph> is thrown.</source>
          <target state="translated">Если размер полученного сообщения запроса превышает максимальный размер сообщения, допускаемый используемой привязкой, создается исключение <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
          <source>The maximum message size is set by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph> property.</source>
          <target state="translated">Максимальный размер сообщения задается свойством <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">Значение по умолчанию — 65 536 байт.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">В следующем примере кода показано, как реализовать этот метод.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time to wait for the reception of an available request.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>, который задает время ожидания получения доступного запроса.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous receive that a request operation completes.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>, принимающий уведомление об асинхронном получении, завершенном операцией запроса.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</source>
          <target state="translated">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронным получением операции запроса.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to receive an available request with a specified timeout.</source>
          <target state="translated">Начинает асинхронную операцию для получения доступного запроса с заданным временем ожидания.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous reception of the request.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, ссылающийся на асинхронное получение запроса.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method implements the standard pattern for invoking <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29&gt;</ph> asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> Метод реализует стандартный шаблон для вызова <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29&gt;</ph> асинхронно.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The timeout set on this method overrides a receive timeout set on the binding that is used to configure the connection.</source>
          <target state="translated">Время ожидания, заданное в этом методе, переопределяет время ожидания получения, заданное в привязке, используемой для настройки подключения.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the request message received is larger that the maximum message size allowed by the binding being used, a <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph> is thrown.</source>
          <target state="translated">Если размер полученного сообщения запроса превышает максимальный размер сообщения, допускаемый используемой привязкой, создается исключение <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The maximum message size is set by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph> property.</source>
          <target state="translated">Максимальный размер сообщения задается свойством <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">Значение по умолчанию — 65 536 байт.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">В следующем примере кода показано, как реализовать этот метод.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the receive request operation has to complete before timing out and returning <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>, указывающий, за какое время должно завершиться получение операции запроса, прежде чем истечет время ожидания и будет возвращено значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous receive that a request operation completes.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>, принимающий уведомление об асинхронном получении, завершенном операцией запроса.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</source>
          <target state="translated">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронным получением операции запроса.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to receive a request message that has a specified time out and state object associated with it.</source>
          <target state="translated">Начинает асинхронную операцию получения сообщения запроса, с которым связано определенное время ожидания и объект состояния.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous receive request operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, ссылающийся на асинхронное получение операции запроса.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method when you need the application processing to continue without waiting.</source>
          <target state="translated">Если работа приложения должна продолжаться без ожидания, используйте асинхронный метод <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Use one of the synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29&gt;</ph> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the timeout interval is exceeded.</source>
          <target state="translated">Если допустима блокировка текущего потока до ответа на сообщение запроса или до истечения времени ожидания, используйте один из синхронных методов <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">Посредством обратного вызова этот метод получает уведомление об идентификации обработчика событий для операции.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation is not complete until either a message becomes available in the channel or the time out occurs.</source>
          <target state="translated">Операция остается незавершенной, пока сообщение не станет доступным в канале или пока не истечет время ожидания.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">В следующем примере кода показано, как реализовать этот метод.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded.</source>
          <target state="translated">Операция возвращает значение <ph id="ph1">&lt;see langword="false" /&gt;</ph>, если превышено указанное время ожидания <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time to wait for the reception of an available request.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>, который задает время ожидания получения доступного запроса.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous receive that a request operation completes.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>, принимающий уведомление об асинхронном получении, завершенном операцией запроса.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</source>
          <target state="translated">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронным получением операции запроса.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request operation that has a specified time out and state object associated with it.</source>
          <target state="translated">Начинает асинхронную операцию запроса, с которой связано определенное время ожидания и объект состояния.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous operation to wait for a request message to arrive.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, который ссылается на асинхронную операцию ожидания прихода сообщения запроса.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Use the synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29&gt;</ph> method when it is acceptable for the current thread to be blocked while it waits for a request message to arrive in the queue.</source>
          <target state="translated">Если текущий поток можно заблокировать, пока ожидается поступление в очередь сообщения запроса, используйте синхронный метод <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The thread is blocked up to the specified <ph id="ph1">`timeout`</ph>.</source>
          <target state="translated">Поток заблокирован вплоть до указанного значения <ph id="ph1">`timeout`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">Посредством обратного вызова этот метод получает уведомление об идентификации обработчика событий для операции.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation is not complete until either a request message becomes available in the channel or the time out occurs.</source>
          <target state="translated">Операция остается незавершенной, пока сообщение запроса не станет доступным в канале или пока не истечет время ожидания.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">В следующем примере кода показано, как реализовать этот метод.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded.</source>
          <target state="translated">Операция возвращает значение <ph id="ph1">&lt;see langword="false" /&gt;</ph>, если превышено указанное время ожидания <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /&gt;</ph> method.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, возвращенный вызовом метода <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)">
          <source>Completes an asynchronous operation to receive an available request.</source>
          <target state="translated">Завершает асинхронную операцию получения доступного запроса.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> used to construct a reply to the request.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph>, использованный для создания ответа на запрос.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)">
          <source>If the request message received is larger that the maximum message size allowed by the binding being used, a <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph> is thrown.</source>
          <target state="translated">Если размер полученного сообщения запроса превышает максимальный размер сообщения, допускаемый используемой привязкой, создается исключение <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)">
          <source>The maximum message size is set by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph> property.</source>
          <target state="translated">Максимальный размер сообщения задается свойством <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">Значение по умолчанию — 65 536 байт.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">В следующем примере кода показано, как реализовать этот метод.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)">
          <source>The operation should throw a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded before the operation is completed.</source>
          <target state="translated">Операция должна создать исключение <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>, если до завершения операции превышено заданное значение параметра <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, возвращенный вызовом метода <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> received.</source>
          <target state="translated">Полученное сообщение <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)">
          <source>Completes the specified asynchronous operation to receive a request message.</source>
          <target state="translated">Завершает указанную асинхронную операцию получения сообщения запроса.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a request message is received before the specified interval of time elapses; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если сообщение запроса получено до истечения заданного интервала времени; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">В следующем примере кода показано, как реализовать этот метод.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that identifies the <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> operation to finish, and from which to retrieve an end result.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, определяющий операцию <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> для завершения и извлечения конечного результата.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(System.IAsyncResult)">
          <source>Completes the specified asynchronous wait-for-a-request message operation.</source>
          <target state="translated">Завершает указанную асинхронную операцию ожидания сообщения запроса.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a request is received before the specified interval of time elapses; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если запрос получен до истечения заданного интервала времени; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(System.IAsyncResult)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">В следующем примере кода показано, как реализовать этот метод.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.IReplyChannel.LocalAddress">
          <source>Gets the address on which this reply channel receives messages.</source>
          <target state="translated">Возвращает адрес, на который этот канал ответа получает сообщения.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.IReplyChannel.LocalAddress">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> on which this reply channel receives messages.</source>
          <target state="translated">Адрес <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>, на который этот канал ответа получает сообщения.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.IReplyChannel.LocalAddress">
          <source>The following code illustrates how to implement this property:</source>
          <target state="translated">Следующий код показывает, как реализовать это свойство.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IReplyChannel">
          <source>Returns the context of the request received, if one is available</source>
          <target state="translated">Возвращает контекст полученного запроса, если таковой доступен.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest">
          <source>Returns the context of the request received, if one is available.</source>
          <target state="translated">Возвращает контекст полученного запроса, если таковой доступен.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest">
          <source>If a context is not available, waits until there is one available.</source>
          <target state="translated">Если контекст недоступен, ожидает появления доступного контекста.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> used to construct replies.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph>, использованный для создания ответов.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> encapsulates the request message and a mechanism for replying to that message.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> инкапсулирует сообщение запроса и механизм для ответа на это сообщение.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph> can be called multiple times or concurrently.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph> может быть вызван несколько раз или одновременно.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest">
          <source>Only one <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph> call completes per request received.</source>
          <target state="translated">На один полученный запрос завершается только один вызов метода <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest">
          <source>If the request message received is larger that the maximum message size allowed by the binding being used, a <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph> is thrown.</source>
          <target state="translated">Если размер полученного сообщения запроса превышает максимальный размер сообщения, допускаемый используемой привязкой, создается исключение <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest">
          <source>The maximum message size is set by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph> property.</source>
          <target state="translated">Максимальный размер сообщения задается свойством <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">Значение по умолчанию — 65 536 байт.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">В следующем примере кода показано, как реализовать этот метод.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the receive of a request operation has to complete before timing out and returning <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>, указывающий, за какое время должно завершиться получение операции запроса, прежде чем истечет время ожидания и будет возвращено значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)">
          <source>Returns the context of the request received, if one is available.</source>
          <target state="translated">Возвращает контекст полученного запроса, если таковой доступен.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)">
          <source>If a context is not available, waits until there is one available.</source>
          <target state="translated">Если контекст недоступен, ожидает появления доступного контекста.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> used to construct replies.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph>, использованный для создания ответов.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> encapsulates the request message and a mechanism for replying to that message.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> инкапсулирует сообщение запроса и механизм для ответа на это сообщение.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph> can be called multiple times or concurrently.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph> может быть вызван несколько раз или одновременно.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)">
          <source>Only one <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph> call completes per request received.</source>
          <target state="translated">На один полученный запрос завершается только один вызов метода <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)">
          <source>If the request message received is larger that the maximum message size allowed by the binding being used, a <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph> is thrown.</source>
          <target state="translated">Если размер полученного сообщения запроса превышает максимальный размер сообщения, допускаемый используемой привязкой, создается исключение <ph id="ph1">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)">
          <source>The maximum message size is set by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph> property.</source>
          <target state="translated">Максимальный размер сообщения задается свойством <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">Значение по умолчанию — 65 536 байт.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">В следующем примере кода показано, как реализовать этот метод.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the receive of a request operation has to complete before timing out and returning <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>, указывающий, за какое время должно завершиться получение операции запроса, прежде чем истечет время ожидания и будет возвращено значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> received.</source>
          <target state="translated">Полученное сообщение <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)">
          <source>Returns a value that indicates whether a request is received before a specified interval of time elapses.</source>
          <target state="translated">Возвращает значение, указывающее, был ли запрос получен до истечения заданного промежутка времени.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a request message is received before the specified interval of time elapses; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если сообщение запроса получено до истечения заданного интервала времени; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a request message to arrive in the queue.</source>
          <target state="translated">Используйте метод <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29&gt;</ph>, если текущий поток можно заблокировать, пока ожидается поступление в очередь сообщения запроса.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)">
          <source>The thread is blocked up to the specified <ph id="ph1">`timeout`</ph>.</source>
          <target state="translated">Поток заблокирован вплоть до указанного значения <ph id="ph1">`timeout`</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)">
          <source>If you need the application processing to continue without waiting, use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Если работа приложения должна продолжаться без ожидания, используйте асинхронный метод <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">В следующем примере кода показано, как реализовать этот метод.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)">
          <source>The operation returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded.</source>
          <target state="translated">Операция возвращает значение <ph id="ph1">&lt;see langword="false" /&gt;</ph>, если превышено указанное время ожидания <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long a request operation has to complete before timing out and returning <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>, указывающий, за какое время должна завершиться операция запроса, прежде чем истечет время ожидания и будет возвращено значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)">
          <source>Returns a value that indicates whether a request message is received before a specified interval of time elapses.</source>
          <target state="translated">Возвращает значение, указывающее, было ли сообщение запроса получено до истечения заданного промежутка времени.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a request is received before the specified interval of time elapses; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если запрос получен до истечения заданного интервала времени; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)">
          <source>Calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29&gt;</ph> does not result in a request message being received or processed in any way.</source>
          <target state="translated">Вызов метода <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29&gt;</ph> не приводит к получению сообщения запроса или его обработке.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method exists primarily for transacted scenarios where the user wants to receive the message using a transaction.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> в основном существует для транзакционных сценариев, в которых пользователю требуется получать это сообщение в рамках транзакции.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)">
          <source>When using just <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph> normally for this, the user must create the transaction, and then call <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph> and hope the message arrives before the transaction times out, which may not be possible.</source>
          <target state="translated">Если, как обычно, использовать для этого метод <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph>, пользователю придется сначала создать транзакцию, а затем вызвать метод <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph> и надеяться, что сообщение будет получено до истечения времени ожидания транзакции, что может быть невозможно.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)">
          <source>Instead, the user can call <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29&gt;</ph> and specify the time out (even infinite), then when a message arrives they can open the transaction, call <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph> and be confident that they can get the message back before the transaction expires.</source>
          <target state="translated">Вместо этого пользователь может вызвать метод <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29&gt;</ph> и задать время ожидания (возможно, бесконечное), а затем, когда придет сообщение, открыть транзакцию, вызвать метод <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</ph> и быть уверенным, что ответное сообщение будет получено до истечения времени ожидания транзакции.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29&gt;</ph> используется, если текущий поток можно заблокировать на время, пока ожидается поступление сообщения в очередь.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)">
          <source>The thread is blocked up to the specified <ph id="ph1">`timeout`</ph>.</source>
          <target state="translated">Поток заблокирован вплоть до указанного значения <ph id="ph1">`timeout`</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)">
          <source>If you need the application processing to continue without waiting, use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Если работа приложения должна продолжаться без ожидания, используйте асинхронный метод <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">В следующем примере кода показано, как реализовать этот метод.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)">
          <source>The operation returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded.</source>
          <target state="translated">Операция возвращает значение <ph id="ph1">&lt;see langword="false" /&gt;</ph>, если превышено указанное время ожидания <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>