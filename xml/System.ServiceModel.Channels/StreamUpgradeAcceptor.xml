<Type Name="StreamUpgradeAcceptor" FullName="System.ServiceModel.Channels.StreamUpgradeAcceptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f19adbabaf4f2af73c9b143d05e4df22198a3d1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30507508" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class StreamUpgradeAcceptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StreamUpgradeAcceptor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.StreamUpgradeAcceptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StreamUpgradeAcceptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamUpgradeAcceptor abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ecbea-101">Чтобы реализовать акцептор пользовательского обновления, необходимо унаследовать его от этого абстрактного базового класса (<see langword="abstract" />).</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecbea-101">To implement a custom upgrade acceptor, inherited from this <see langword="abstract" /> base class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecbea-102">Пример обновления потока — создание потока сжатия непосредственно поверх транспортного потока.</span><span class="sxs-lookup"><span data-stu-id="ecbea-102">An example of a stream upgrade is to build a compression stream directly on top of the transport stream.</span></span>  
  
 <span data-ttu-id="ecbea-103">Для реализации обновления пользовательского потока используется этот класс с <xref:System.ServiceModel.Channels.StreamUpgradeInitiator> и <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.</span><span class="sxs-lookup"><span data-stu-id="ecbea-103">This class is used with <xref:System.ServiceModel.Channels.StreamUpgradeInitiator> and <xref:System.ServiceModel.Channels.StreamUpgradeProvider> to implement a custom stream upgrade.</span></span>  
  
 <span data-ttu-id="ecbea-104">Подробное описание процесса обновления см. в разделе <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.</span><span class="sxs-lookup"><span data-stu-id="ecbea-104">For a detailed description of the upgrade process, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StreamUpgradeAcceptor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StreamUpgradeAcceptor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecbea-105">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeAcceptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecbea-105">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeAcceptor" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptUpgrade">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream AcceptUpgrade (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream AcceptUpgrade(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ AcceptUpgrade(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="ecbea-106">Поток, который необходимо обновить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecbea-106">The stream to be upgraded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecbea-107">Обновляет поток транспорта и возвращает обновленный поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecbea-107">Upgrades the transport stream and returns the upgraded stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecbea-108">Возвращает обновленный поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecbea-108">Returns the upgraded stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecbea-109">Этот метод можно использовать, чтобы создать оболочку для существующего потока транспорта, добавив дополнительные возможности, например поток сжатия.</span><span class="sxs-lookup"><span data-stu-id="ecbea-109">This method can be used to wrap the existing transport stream by providing additional capabilities; for example, a compressing stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptUpgrade">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginAcceptUpgrade (System.IO.Stream stream, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAcceptUpgrade(class System.IO.Stream stream, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginAcceptUpgrade(System::IO::Stream ^ stream, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="ecbea-110">Поток, который необходимо обновить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecbea-110">The stream to be upgraded.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="ecbea-111">Метод, вызываемый после завершения вызова метода <see langword="AcceptUpgrade" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecbea-111">The method to be called when the <see langword="AcceptUpgrade" /> call has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ecbea-112">Информация о состоянии для вызова метода <see langword="AcceptUpgrade" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecbea-112">State information for the <see langword="AcceptUpgrade" /> call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecbea-113">Асинхронный вариант метода <see cref="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecbea-113">Asynchronous version of <see cref="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecbea-114">Возвращает результирующий код, который передается методу EndAcceptUpgrade для доступа к обновленному потоку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecbea-114">Returns a result code that is passed into EndAcceptUpgrade to access the upgraded stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecbea-115">Дополнительные сведения можно найти в заметках для метода <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecbea-115">For more information, see the remarks for <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUpgrade">
      <MemberSignature Language="C#" Value="public abstract bool CanUpgrade (string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanUpgrade(string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CanUpgrade (contentType As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CanUpgrade(System::String ^ contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">
          <span data-ttu-id="ecbea-116">Тип содержимого, которое требуется проверить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecbea-116">The type of content to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecbea-117">Определяет, поддерживается ли запрошенное обновление текущим акцептором обновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecbea-117">Determines whether the upgrade requested is supported by this upgrade acceptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecbea-118">Значение <see langword="true" />, если данное обновление поддерживается; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecbea-118">
              <see langword="true" /> if this kind of upgrade is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecbea-119">Разработчик может проверить запрошенный тип содержимого и определить, можно ли выполнить результирующее обновление с этим акцептором обновления.</span><span class="sxs-lookup"><span data-stu-id="ecbea-119">The developer can inspect the requested content type and determine whether the resulting upgrade can be performed by this upgrade acceptor.</span></span> <span data-ttu-id="ecbea-120">Тип содержимого получается от метода `GetNextUpgrade` на соответствующем инициаторе обновления.</span><span class="sxs-lookup"><span data-stu-id="ecbea-120">This content type comes from the `GetNextUpgrade` method on the matching upgrade initiator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptUpgrade">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream EndAcceptUpgrade (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream EndAcceptUpgrade(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndAcceptUpgrade (result As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ EndAcceptUpgrade(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="ecbea-121">Результат IAsyncResult, возвращенный методом <see langword="BeginAcceptUpgrade" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecbea-121">The IAsyncResult returned from <see langword="BeginAcceptUpgrade" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecbea-122">Асинхронный вариант метода <see cref="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecbea-122">Asynchronous version of <see cref="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecbea-123">Возвращает обновленный поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecbea-123">Returns the upgraded stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecbea-124">Дополнительные сведения можно найти в заметках для метода <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecbea-124">For more information, see the remarks in <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>