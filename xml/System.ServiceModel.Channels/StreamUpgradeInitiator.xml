<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StreamUpgradeInitiator.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d7820b8725ff89c33c823ff51fc8bf3c51218781.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7820b8725ff89c33c823ff51fc8bf3c51218781</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.StreamUpgradeInitiator">
          <source>To implement a custom upgrade initiator, inherit from this <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> base class.</source>
          <target state="translated">Чтобы реализовать пользовательский инициатор обновления, необходимо наследовать его от этого базового класса <ph id="ph1">&lt;see langword="abstract" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.StreamUpgradeInitiator">
          <source>An example of a stream upgrade is to build a compression stream directly on top of the transport stream.</source>
          <target state="translated">Пример обновления потока — создание потока сжатия непосредственно поверх транспортного потока.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.StreamUpgradeInitiator">
          <source>This class is used with <ph id="ph1">&lt;xref:System.ServiceModel.Channels.StreamUpgradeAcceptor&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt;</ph> to implement a custom stream upgrade.</source>
          <target state="translated">Для реализации обновления пользовательского потока используется этот класс с <ph id="ph1">&lt;xref:System.ServiceModel.Channels.StreamUpgradeAcceptor&gt;</ph> и <ph id="ph2">&lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.StreamUpgradeInitiator">
          <source>For a detailed description of the upgrade process, see <ph id="ph1">&lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt;</ph>.</source>
          <target state="translated">Подробное описание процесса обновления см. в разделе <ph id="ph1">&lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)">
          <source>The stream to be upgraded.</source>
          <target state="translated">Поток, который необходимо обновить.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)">
          <source>The method to call when the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" /&gt;</ph> has completed.</source>
          <target state="translated">Метод, вызываемый после завершения метода <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)">
          <source>State information about the status of the asynchronous call.</source>
          <target state="translated">Сведения о состоянии асинхронного вызова.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)">
          <source>This <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> method can be implemented to do asynchronous processing that initiates an upgrade.</source>
          <target state="translated">Этот метод <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> может быть реализован для асинхронной обработки, инициирующей обновление.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> to be passed into the <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" /&gt;</ph> method.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, передаваемый в метод <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)">
          <source>This method calls <ph id="ph1">&lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A&gt;</ph> and returns.</source>
          <target state="translated">Данный метод вызывает и возвращает метод <ph id="ph1">&lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see langword="IAsyncResult" /&gt;</ph> returned from the <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see langword="IAsyncResult" /&gt;</ph>, возвращенный из метода <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)">
          <source>This method is the asynchronous callback method that is called after <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /&gt;</ph> has completed.</source>
          <target state="translated">Этот метод является методом обратного асинхронного вызова, который вызывается после завершения метода <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)">
          <source>Returns the upgraded stream.</source>
          <target state="translated">Возвращает обновленный поток.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)">
          <source>For more information about using this method, see the remarks in <ph id="ph1">&lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A&gt;</ph>.</source>
          <target state="translated">Дополнительные сведения об использовании этого метода см. в примечаниях о методе <ph id="ph1">&lt;xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.GetNextUpgrade">
          <source>Returns the content type of the next upgrade to be performed.</source>
          <target state="translated">Возвращает тип содержимого следующего выполняемого обновления.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.GetNextUpgrade">
          <source>Returns the content type of the next upgrade.</source>
          <target state="translated">Возвращает тип содержимого следующего обновления.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.GetNextUpgrade">
          <source>This method returns a set of upgrade content types supported by the upgrade provider in the order in which they are expected.</source>
          <target state="translated">Этот метод возвращает набор типов содержимого обновления, поддерживаемых поставщиком обновления в ожидаемой последовательности.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.GetNextUpgrade">
          <source>Upgrade providers that support a single upgrade return only a single value.</source>
          <target state="translated">Поставщики обновления, которые поддерживают только одно обновление, возвращают только одно значение.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.GetNextUpgrade">
          <source>Upgrade providers that support multiple upgrades return the values in order (for example, compression content type followed by the security content type).</source>
          <target state="translated">Поставщики обновления, которые поддерживают несколько обновлений, возвращают значения в определенной последовательности (например, тип содержимого безопасности, следующий за типом содержимого сжатия).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)">
          <source>The stream to be upgraded.</source>
          <target state="translated">Поток, который необходимо обновить.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)">
          <source>Initiates the upgrade of the stream by requesting the other end of its connection to upgrade the channel transport layer.</source>
          <target state="translated">Инициирует обновление потока, отправляя другому концу подключения запрос на обновление транспортного уровня канала.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)">
          <source>Returns the upgraded stream.</source>
          <target state="translated">Возвращает обновленный поток.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)">
          <source>This method can be called multiple times for each upgrade supported by the upgrade provider.</source>
          <target state="translated">Этот метод можно вызывать несколько раз для каждого обновления, поддерживаемого поставщиком обновления.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)">
          <source>For example, an upgrade provider that supports compression and security would call this method twice: first to upgrade the default transport streaming for compression, and second to upgrade the security.</source>
          <target state="translated">Например, поставщик обновления, поддерживающий сжатие и безопасность, вызовет этот метод дважды: сначала для обновления потоковой передачи транспорта по умолчанию для сжатия, затем — для обновления безопасности.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)">
          <source>Subsequent calls to this method should pass in the upgrade stream from the previous call.</source>
          <target state="translated">Последующие вызовы этого метода должны передаваться в потоке обновления от предыдущего вызова.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>