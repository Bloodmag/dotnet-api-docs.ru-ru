<Type Name="StreamUpgradeInitiator" FullName="System.ServiceModel.Channels.StreamUpgradeInitiator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40a84e6a574595e1288250fc95451e5a27d5945b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39969349" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class StreamUpgradeInitiator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StreamUpgradeInitiator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.StreamUpgradeInitiator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StreamUpgradeInitiator" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamUpgradeInitiator abstract" />
  <TypeSignature Language="F#" Value="type StreamUpgradeInitiator = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c9c70-101">Чтобы реализовать пользовательский инициатор обновления, необходимо наследовать его от этого базового класса <see langword="abstract" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c9c70-101">To implement a custom upgrade initiator, inherit from this <see langword="abstract" /> base class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9c70-102">Пример обновления потока — создание потока сжатия непосредственно поверх транспортного потока.</span><span class="sxs-lookup"><span data-stu-id="c9c70-102">An example of a stream upgrade is to build a compression stream directly on top of the transport stream.</span></span> <span data-ttu-id="c9c70-103">Для реализации обновления пользовательского потока используется этот класс с <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor> и <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.</span><span class="sxs-lookup"><span data-stu-id="c9c70-103">This class is used with <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor> and <xref:System.ServiceModel.Channels.StreamUpgradeProvider> to implement a custom stream upgrade.</span></span>  
  
 <span data-ttu-id="c9c70-104">Подробное описание процесса обновления см. в разделе <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.</span><span class="sxs-lookup"><span data-stu-id="c9c70-104">For a detailed description of the upgrade process, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StreamUpgradeInitiator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StreamUpgradeInitiator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9c70-105">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9c70-105">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInitiateUpgrade">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginInitiateUpgrade (System.IO.Stream stream, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInitiateUpgrade(class System.IO.Stream stream, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginInitiateUpgrade(System::IO::Stream ^ stream, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginInitiateUpgrade : System.IO.Stream * AsyncCallback * obj -&gt; IAsyncResult" Usage="streamUpgradeInitiator.BeginInitiateUpgrade (stream, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="c9c70-106">Обновляемый поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9c70-106">The stream to be upgraded.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c9c70-107">Метод, вызываемый после завершения метода <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9c70-107">The method to call when the <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" /> has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c9c70-108">Сведения о состоянии асинхронного вызова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9c70-108">State information about the status of the asynchronous call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9c70-109">Этот метод <see langword="abstract" /> может быть реализован для асинхронной обработки, инициирующей обновление.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9c70-109">This <see langword="abstract" /> method can be implemented to do asynchronous processing that initiates an upgrade.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9c70-110">Возвращает объект <see cref="T:System.IAsyncResult" />, передаваемый в метод <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9c70-110">Returns an <see cref="T:System.IAsyncResult" /> to be passed into the <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9c70-111">Данный метод вызывает и возвращает метод <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9c70-111">This method calls <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A> and returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInitiateUpgrade">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream EndInitiateUpgrade (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream EndInitiateUpgrade(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndInitiateUpgrade (result As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ EndInitiateUpgrade(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndInitiateUpgrade : IAsyncResult -&gt; System.IO.Stream" Usage="streamUpgradeInitiator.EndInitiateUpgrade result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c9c70-112">Объект <see langword="IAsyncResult" />, возвращаемый из метода <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9c70-112">The <see langword="IAsyncResult" /> returned from the <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9c70-113">Этот метод является методом обратного асинхронного вызова, который вызывается после завершения метода <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9c70-113">This method is the asynchronous callback method that is called after <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /> has completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9c70-114">Возвращает обновленный поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9c70-114">Returns the upgraded stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9c70-115">Дополнительные сведения об использовании этого метода см. в примечаниях о методе <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9c70-115">For more information about using this method, see the remarks in <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextUpgrade">
      <MemberSignature Language="C#" Value="public abstract string GetNextUpgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNextUpgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.GetNextUpgrade" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextUpgrade () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetNextUpgrade();" />
      <MemberSignature Language="F#" Value="abstract member GetNextUpgrade : unit -&gt; string" Usage="streamUpgradeInitiator.GetNextUpgrade " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9c70-116">Возвращает тип содержимого следующего выполняемого обновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9c70-116">Returns the content type of the next upgrade to be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9c70-117">Возвращает тип содержимого следующего обновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9c70-117">Returns the content type of the next upgrade.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9c70-118">Этот метод возвращает набор типов содержимого обновления, поддерживаемых поставщиком обновления в ожидаемой последовательности.</span><span class="sxs-lookup"><span data-stu-id="c9c70-118">This method returns a set of upgrade content types supported by the upgrade provider in the order in which they are expected.</span></span> <span data-ttu-id="c9c70-119">Поставщики обновления, которые поддерживают только одно обновление, возвращают только одно значение.</span><span class="sxs-lookup"><span data-stu-id="c9c70-119">Upgrade providers that support a single upgrade return only a single value.</span></span> <span data-ttu-id="c9c70-120">Поставщики обновления, которые поддерживают несколько обновлений, возвращают значения в определенной последовательности (например, тип содержимого безопасности, следующий за типом содержимого сжатия).</span><span class="sxs-lookup"><span data-stu-id="c9c70-120">Upgrade providers that support multiple upgrades return the values in order (for example, compression content type followed by the security content type).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitiateUpgrade">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream InitiateUpgrade (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream InitiateUpgrade(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ InitiateUpgrade(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member InitiateUpgrade : System.IO.Stream -&gt; System.IO.Stream" Usage="streamUpgradeInitiator.InitiateUpgrade stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="c9c70-121">Обновляемый поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9c70-121">The stream to be upgraded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9c70-122">Инициирует обновление потока, отправляя другому концу подключения запрос на обновление транспортного уровня канала.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9c70-122">Initiates the upgrade of the stream by requesting the other end of its connection to upgrade the channel transport layer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9c70-123">Возвращает обновленный поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9c70-123">Returns the upgraded stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9c70-124">Этот метод можно вызывать несколько раз для каждого обновления, поддерживаемого поставщиком обновления.</span><span class="sxs-lookup"><span data-stu-id="c9c70-124">This method can be called multiple times for each upgrade supported by the upgrade provider.</span></span> <span data-ttu-id="c9c70-125">Например, поставщик обновления, поддерживающий сжатие и безопасность, вызовет этот метод дважды: сначала для обновления потоковой передачи транспорта по умолчанию для сжатия, затем — для обновления безопасности.</span><span class="sxs-lookup"><span data-stu-id="c9c70-125">For example, an upgrade provider that supports compression and security would call this method twice: first to upgrade the default transport streaming for compression, and second to upgrade the security.</span></span> <span data-ttu-id="c9c70-126">Последующие вызовы этого метода должны передаваться в потоке обновления от предыдущего вызова.</span><span class="sxs-lookup"><span data-stu-id="c9c70-126">Subsequent calls to this method should pass in the upgrade stream from the previous call.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>