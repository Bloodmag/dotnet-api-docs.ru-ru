<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SupportedAddressingMode.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52e96bbd9b4b430691aed6a16a4a3b6015bec77b8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e96bbd9b4b430691aed6a16a4a3b6015bec77b8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Specifies whether a service supports sending responses to anonymous addresses only, to non-anonymous addresses only, or to both.</source>
          <target state="translated">Указывает, поддерживает ли служба отправку ответов только на анонимные адреса, только на неанонимные адреса, или на оба типа адресов.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>This enumeration is used to specify the capability of a server, which, in turn, imposes a requirement on its clients.</source>
          <target state="translated">Это перечисление используется для задания возможностей сервера, который, в свою очередь, устанавливает требования для клиентов.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> has a variety of addressing controls for specifying where messages should be sent.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> имеет ряд элементов для управления адресацией, позволяющих задать место назначения сообщений.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>For example, there is the logical <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph> address for the message destination, the physical ("Via") address, used by the transport, at which a service listens, and the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A&gt;</ph> address of the endpoint that provides the address of the client endpoint.</source>
          <target state="translated">Например, есть логический адрес <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph> для места назначения сообщения, физический адрес ("Via"), который используется транспортом, прослушиваемым службой, и адрес <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A&gt;</ph> конечной точки, содержащий адрес конечной точки клиента.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>In the most basic case, when two parties exchange messages between themselves only, it is not necessary to specify these addresses separately.</source>
          <target state="translated">В самом общем случае, когда две стороны обмениваются сообщениями только между собой, нет необходимости отдельно задавать эти адреса.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>But because exchanges can involve other message destinations, you must be able to specify when addresses must be explicitly provided.</source>
          <target state="translated">Но так как в обмене сообщениями могут быть задействованы другие пункты назначения, нужно уметь определить, когда требуется задать эти адреса явно.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Even between just two parties this ability is sometimes required, as with dual HTTP where the server must create its own HTTP request.</source>
          <target state="translated">Даже при взаимодействии только двух сторон это иногда может потребоваться, как, например, в случае с двусторонним HTTP-взаимодействием, когда сервер должен создавать собственный HTTP-запрос.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>The following kinds of relationships are defined by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SupportedAddressingMode&gt;</ph> enumeration to capture these messaging patterns:</source>
          <target state="translated">Следующие типы отношений определены перечислением <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SupportedAddressingMode&gt;</ph> для описания шаблонов обмена сообщениями.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Anonymous addresses are the most basic form of addressing.</source>
          <target state="translated">Анонимные адреса — основной вид адресации.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Anonymous addressing is used when there is a default path for a response.</source>
          <target state="translated">Анонимная адресация используется, если есть путь ответа по умолчанию.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>TCP is a bi-directional communication transport and the response to a TCP message can be sent back to the other side of the socket that sent the original message.</source>
          <target state="translated">Протокол TCP — это двунаправленный транспорт, ответ на сообщение TCP может быть отправлен обратно на тот же сокет, с которого пришло исходное сообщение.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Similarly, the request-reply model of HTTP sends responses through the HTTP reply channel.</source>
          <target state="translated">Аналогично, модель запрос-ответ протокола HTTP отправляет ответы по каналу HTTP-ответа.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Neither of these responses requires specifying where the response messages are going.</source>
          <target state="translated">Ни один из этих двух видов ответов не требует указания, куда идут сообщения ответа-HTTP.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>When a server requires anonymous responses from the client, it uses the Anonymous value of the enumeration.</source>
          <target state="translated">Если сервер требует анонимных ответов от клиента, используется анонимный значение перечисления.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>The <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> system-provided <ph id="ph2">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> bindings always use Anonymous addresses.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> Системных <ph id="ph2">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> и <ph id="ph4">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> привязки всегда использовать анонимные адреса.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>NonAnonymous addresses are used when sending the response requires creating a new channel for communication.</source>
          <target state="translated">Неанонимные адреса будут использоваться при отправке ответа требует создания нового канала связи.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>The <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> system-provided <ph id="ph2">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph> binding uses a NonAnonymous address.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> Системных <ph id="ph2">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph> привязка использует неанонимный адрес.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>With dual HTTP, the client creates an HTTP request to send a message and then the server must create its own HTTP request to send a response.</source>
          <target state="translated">При двустороннем HTTP-взаимодействии клиент создает HTTP-запрос для отправки сообщения, а затем сервер должен создать собственный HTTP-запрос для отправки ответа.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Because the server is initiating the send, it must have a specific endpoint to establish the connection.</source>
          <target state="translated">Поскольку сервер инициирует отправку, он должен указать определенную конечную точку для установки соединения.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>You must provide the server the address of an endpoint for its response.</source>
          <target state="translated">Необходимо предоставить серверу адрес конечной точки для ответа.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Similarly, if a service must respond to a one-way message that it received, it also requires a NonAnonymous address because there is no back channel available for communication.</source>
          <target state="translated">Аналогично Если служба должна ответить на одностороннее сообщение, полученное, необходимо также неанонимных адресов, поскольку нет обратного канала для обмена данными.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>If the server sends a message back, a completely separate operation from that used to send the first message is required.</source>
          <target state="translated">Если сервер отправляет сообщение обратно, требуется совершенно отдельная операция, не связанная с операцией отправки первого сообщения.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Mixed is a third form of addressing which combines Anonymous and NonAnonymous addresses depending on the message that is being sent.</source>
          <target state="translated">Смешанный — третий вид адресации, который объединяет в себе анонимный доступ и неанонимных адреса в зависимости от того, который отправляется сообщение.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>A typical example of mixed-mode addressing is the use of a dedicated machine for processing fault or acknowledgment messages.</source>
          <target state="translated">Типичный пример адресации в режиме Mixed — использование выделенного компьютера для обработки сообщений об ошибках и подтверждений.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>If the standard exchange sequence for replies is HTTP or TCP, the responses use Anonymous addressing but the faults use non-anonymous addressing.</source>
          <target state="translated">Если в стандартной последовательности обмена для ответов — HTTP или TCP, для ответных сообщений используется анонимная адресация, но ошибок используется адресация non-anonymous.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>While <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> does not provide Mixed addressing functionality in one of its standard bindings, it is possible to write a channel that allows the service to send responses directly on the back-channel (when the response address is Anonymous) or on a separate channel (when the response address is NonAnonymous).</source>
          <target state="translated">Во время <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> не поддерживает смешанный адресации функции в какой-либо стандартной привязке, можно создать канал, позволяющий службе отправлять ответы напрямую по обратному каналу (если адрес ответа является анонимный) или на отдельном канал (когда обратный адрес неанонимных).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>In such a case, the binding element of the channel is used to set <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SupportedAddressingMode&gt;</ph> to Mixed.</source>
          <target state="translated">В этом случае элемент привязки канала используется для задания <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SupportedAddressingMode&gt;</ph> смешанный режим.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous">
          <source>The server only supports anonymous addresses and clients must provide an anonymous response address.</source>
          <target state="translated">Сервер поддерживает только анонимные адреса и клиенты должны предоставлять анонимный обратный адрес.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed">
          <source>The server supports both anonymous and non-anonymous addresses and clients may choose to use either or both.</source>
          <target state="translated">Сервер поддерживает анонимные и неанонимные адреса и клиенты могут выбрать использовать один из них или оба.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous">
          <source>The server only supports non-anonymous addresses and clients must provide a non-anonymous response address.</source>
          <target state="translated">Сервер поддерживает только неанонимные адреса и клиенты должны предоставлять неанонимный обратный адрес.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>