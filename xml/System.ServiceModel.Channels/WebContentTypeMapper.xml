<Type Name="WebContentTypeMapper" FullName="System.ServiceModel.Channels.WebContentTypeMapper">
  <TypeSignature Language="C#" Value="public abstract class WebContentTypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebContentTypeMapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.WebContentTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebContentTypeMapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebContentTypeMapper abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f5e7c-101">Задает формат, которому сопоставляется тип контента входящего сообщения.</span><span class="sxs-lookup"><span data-stu-id="f5e7c-101">Specifies the format to which the content type of an incoming message is mapped.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5e7c-102">Это точка расширения в модели программирования, используемой кодировщиком веб-сообщений для переопределения способов сопоставления типов контента форматам.</span><span class="sxs-lookup"><span data-stu-id="f5e7c-102">This is an extensibility point in the programming model that is used by the Web message encoder to override how content types are mapped to formats.</span></span> <span data-ttu-id="f5e7c-103">Для реализации этого класса необходимо переопределить метод <xref:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="f5e7c-103">To implement this class, override the <xref:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType%28System.String%29> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebContentTypeMapper ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.WebContentTypeMapper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebContentTypeMapper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f5e7c-104">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" />.</span><span class="sxs-lookup"><span data-stu-id="f5e7c-104">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageFormatForContentType">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.WebContentFormat GetMessageFormatForContentType (string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.ServiceModel.Channels.WebContentFormat GetMessageFormatForContentType(string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMessageFormatForContentType (contentType As String) As WebContentFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::WebContentFormat GetMessageFormatForContentType(System::String ^ contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.WebContentFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType"><span data-ttu-id="f5e7c-105">Тип контента, указывающий MIME-тип данных, которые необходимо интерпретировать.</span><span class="sxs-lookup"><span data-stu-id="f5e7c-105">The content type that indicates the MIME type of data to be interpreted.</span></span></param>
        <summary><span data-ttu-id="f5e7c-106">При переопределении в производном классе возвращает формат сообщений, используемый для заданного типа контента.</span><span class="sxs-lookup"><span data-stu-id="f5e7c-106">When overridden in a derived class, returns the message format used for a specified content type.</span></span></summary>
        <returns><span data-ttu-id="f5e7c-107"><see cref="T:System.ServiceModel.Channels.WebContentFormat" />, задающий формат, которому сопоставляется тип контента сообщения.</span><span class="sxs-lookup"><span data-stu-id="f5e7c-107">The <see cref="T:System.ServiceModel.Channels.WebContentFormat" /> that specifies the format to which the message content type is mapped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5e7c-108">Он предназначен для использования в качестве механизма расширения для переопределения способов сопоставления типов контента форматам веб-содержимого.</span><span class="sxs-lookup"><span data-stu-id="f5e7c-108">This is intended to be an extensibility mechanism that can be used to override how content types are mapped to Web content formats.</span></span> <span data-ttu-id="f5e7c-109">Например, если все входящие сообщения обрабатываются как «необработанные двоичные данные» в этом не проводится анализ XML или JSON, вы можете реализовать <xref:System.ServiceModel.Channels.WebContentTypeMapper> , всегда возвращаются <xref:System.ServiceModel.Channels.WebContentFormat.Raw> независимо от того, тип содержимого, который был передан.</span><span class="sxs-lookup"><span data-stu-id="f5e7c-109">For example, if all incoming messages are processed as "raw binary data" without ever doing XML or JSON parsing, you could implement a <xref:System.ServiceModel.Channels.WebContentTypeMapper> that always returned <xref:System.ServiceModel.Channels.WebContentFormat.Raw> regardless of the content type that was passed in.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>