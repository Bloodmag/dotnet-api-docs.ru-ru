<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IContractBehavior.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72114f8a235597b1f1c6ee487226dbe4228db0eadf.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">114f8a235597b1f1c6ee487226dbe4228db0eadf</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Implements methods that can be used to extend run-time behavior for a contract in either a service or client application.</source>
          <target state="translated">Реализует методы, которые могут использоваться для расширения поведения времени выполнения для контракта приложения службы или клиентского приложения.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> interface to modify, examine, or extend some aspect of contract-wide execution at the application level.</source>
          <target state="translated">Реализует интерфейс <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> для изменения, проверки или расширения некоторых аспектов выполнения для всего контракта на уровне приложения.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Unlike <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> objects, <ph id="ph3">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> objects cannot be added to the runtime using an application configuration file; they can only be added programmatically or using an attribute.</source>
          <target state="translated">В отличие от объектов <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> и <ph id="ph2">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph>, объекты <ph id="ph3">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> не могут добавляться в среду выполнения с помощью файла конфигурации приложения; они могут добавляться только программным способом или с использованием атрибута.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>For more information about choosing between service, endpoint, and contract behaviors, see <bpt id="p1">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о выборе между службой, конечной точки и контракта см. в разделе <bpt id="p1">[</bpt>настройку и расширение среды выполнения с помощью поведений<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> method to provide binding elements with custom data to support the behavior.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> используется для предоставления элементов привязки с пользовательскими данными для поддержки поведения.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to a contract in a client application.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> используется для изменения, проверки или вставки расширений в контракт в клиентском приложении.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to a contract in a service application.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> используется для изменения, проверки или вставки расширений в контракт в приложении службы.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> method to ensure that a contract can support a particular feature.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> используется для обеспечения поддержки определенных возможностей контрактом.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return without any value.</source>
          <target state="translated">Объекты <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> могут использовать любые из этих методов, но часто важен только один; в таких случаях неиспользуемые методы могут не возвращать какого-либо значения.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> as parameters.</source>
          <target state="translated">Все методы <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> в качестве параметров передают <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType&gt;</ph> и <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>These parameters are for examination; if you modify the objects the execution behavior is undefined.</source>
          <target state="translated">Эти параметры нужны для проверки; если производится изменение объектов, поведение выполнения является неопределенным.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> types can be used on either the service or the client, or both.</source>
          <target state="translated">Типы <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> могут использоваться в службе или в клиенте, либо в них обоих.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>To perform a customization task on the service, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the construction of the service runtime, which occurs when the <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method is called on the <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">Чтобы выполнить задачу настройки для службы, объект <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> должен быть добавлен к свойству <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> до построения среды выполнения службы, которое происходит, когда вызывается метод <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> в объекте <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>There are two ways to do this.</source>
          <target state="translated">Это можно сделать двумя способами.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The first method is to programmatically add the custom contract behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the point when the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method is called on the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">Первым способом является программное добавление пользовательского поведения контракта в свойство <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> перед вызовом метода <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> в объекте <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>When applied this way, the behavior is applied for all messages flowing through that contract on any endpoint.</source>
          <target state="translated">В этом случае поведение применяется для всех сообщений, проходящих по этому контракту в любой конечной точке.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The behavior is applied to all contracts of the same type.</source>
          <target state="translated">Поведение применяется ко всем контрактам одинакового типа.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>For example, if you programmatically add the same contract type to more than one endpoint, the behavior modifies all endpoints that refer to the same contract object.</source>
          <target state="translated">Например, если программно добавить один тип контракта к нескольким конечным точкам, поведение изменит все конечные точки, относящиеся к одному объекту контракта.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The second method is to create a custom attribute that implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> and apply that to:</source>
          <target state="translated">Вторым методом является создание пользовательского атрибута, который реализует <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>, и применение его к следующим объектам:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A contract interface.</source>
          <target state="translated">Интерфейс контракта.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to all contracts of that type in any endpoint.</source>
          <target state="translated">В этом случае поведение применяется ко всем контрактам этого типа в любой конечной точке.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A service class.</source>
          <target state="translated">Класс службы.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to all endpoints regardless of contract.</source>
          <target state="translated">В этом случае поведение применяется ко всем конечным точкам, независимо от контракта.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A callback class.</source>
          <target state="translated">Класс обратного вызова.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to the duplex client's endpoint.</source>
          <target state="translated">В этом случае поведение применяется к конечной точке дуплексного клиента.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The behavior of the second approach varies slightly if the custom attribute also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Поведение во втором подходе немного отличается, если пользовательский атрибут также реализует <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is as follows:</source>
          <target state="translated">В этом случае поведение выглядит следующим образом.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A contract interface.</source>
          <target state="translated">Интерфейс контракта.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to all contracts of that type in any endpoint and <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> ignores the value of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">В этом случае поведение применяется ко всем контрактам этого типа в любой конечной точке, а среда <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> не учитывает значение свойства <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A service class.</source>
          <target state="translated">Класс службы.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied only to endpoints the contract of which is the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">В этом случае поведение применяется только к конечным точкам, контракт которых имеет значение, равное значению свойства <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A callback class.</source>
          <target state="translated">Класс обратного вызова.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to the duplex client's endpoint and WCF ignores the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">В этом случае поведение применяется к конечной точке дуплексного клиента и WCF игнорирует значение <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>To perform the customization task on the client for which it is intended, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the construction of the client runtime, which occurs when <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated">Чтобы выполнить задачу настройки на клиенте, для которого она предназначена, объект <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> должен быть добавлен к свойству <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> до построения клиентской среды выполнения, которое происходит при вызове <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>There are two ways to do this:</source>
          <target state="translated">Это можно сделать двумя способами.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Programmatically add the custom contract behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the point when the <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated">Программным способом добавить пользовательское поведение контракта в свойство <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> до вызова <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Create a custom attribute that also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>.</source>
          <target state="translated">Создать пользовательский атрибут, который также реализует <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>For more information on programmatically adding <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> types to either the client or service application, see <bpt id="p1">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о программном добавлении <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> типы для приложения службы или клиента, в разделе <bpt id="p1">[</bpt>настройку и расширение среды выполнения с помощью поведений<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The following code example assumes a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> implementation called <ph id="ph2">`ObjectProviderBehavior`</ph> that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</source>
          <target state="translated">В следующем примере кода предполагается наличие пользовательской реализации <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> с именем <ph id="ph2">`ObjectProviderBehavior`</ph>, которая обеспечивает «одноэлементное» поведение; метод всегда возвращает один и тот же экземпляр службы и не использует его повторно.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>To insert the instance provider customization, the example shows how to implement a custom attribute (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> to insert the custom service instance provider.</source>
          <target state="translated">Чтобы вставить настройку поставщика экземпляров, в этом примере показано, как реализовать пользовательский атрибут (<ph id="ph1">`SingletonBehaviorAttribute`</ph>), который реализует <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> для вставки пользовательского поставщика экземпляров службы.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>It also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, which binds its use to the <ph id="ph2">`ISampleService`</ph> contract.</source>
          <target state="translated">В нем также реализуется интерфейс <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, который связывает его использование с контрактом <ph id="ph2">`ISampleService`</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The contract description to modify.</source>
          <target state="translated">Изменяемое описание контракта.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The endpoint to modify.</source>
          <target state="translated">Изменяемая конечная точка.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The objects that binding elements require to support the behavior.</source>
          <target state="translated">Объекты, необходимые элементам привязки для поддержки этого режима.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Configures any binding elements to support the contract behavior.</source>
          <target state="translated">Настраивает элементы привязки для поддержки поведения контракта.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> method to provide binding elements with the extra objects they require to support the contract behavior.</source>
          <target state="translated">Реализует метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> для предоставления элементам привязки дополнительных объектов, которые им необходимы для поддержки поведения контракта.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">Этот метод вызывается один раз для каждой конечной точки, которая использует указанный контракт службы.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The contract description for which the extension is intended.</source>
          <target state="translated">Описание контракта, для которого предназначено расширение.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The endpoint.</source>
          <target state="translated">Конечная точка.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The client runtime.</source>
          <target state="translated">Среда выполнения клиента.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Implements a modification or extension of the client across a contract.</source>
          <target state="translated">Реализует изменение или расширение клиента для всего контракта.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> method to view, modify, or add custom extensions to the client runtime across all messages or for one specific operation.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> реализуется для просмотра, изменения или добавления пользовательских расширений в клиентскую среду выполнения для всех сообщений или для одной конкретной операции.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>For details about what customizations you can do with a client run-time object, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>.</source>
          <target state="translated">Сведения о том, какие настройки можно выполнить с объектом клиентской среды выполнения, см. в разделах <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> и <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> method can throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception if the behavior is only intended for use in a service application.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> может вызывать исключение <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph>, если поведение предназначено для использования только в приложении службы.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">Этот метод вызывается один раз для каждой конечной точки, которая использует указанный контракт службы.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> and that returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A&gt;</ph> property.</source>
          <target state="translated">Обратите внимание, что в описании могут быть две операции с одинаковым именем (одна в каждом направлении), поэтому если нужно выполнить перебор операций, в которых контракт является дуплексным, необходимо сопоставить направление сообщений между средой <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> конечной точки и средой выполнения, возвращаемой свойством <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in the description as there are <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> property.</source>
          <target state="translated">Поскольку другие поведения, возможно, уже добавили или удалили некоторые операции из среды выполнения, нет никакой гарантии, что в описании имеется такое же количество операций, что и количество объектов <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> в свойстве <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The following code example assumes a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> implementation called <ph id="ph2">`ObjectProviderBehavior`</ph> that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</source>
          <target state="translated">В следующем примере кода предполагается наличие пользовательской реализации <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> с именем <ph id="ph2">`ObjectProviderBehavior`</ph>, которая обеспечивает «одноэлементное» поведение; метод всегда возвращает один и тот же экземпляр службы и не использует его повторно.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>To insert the instance provider customization, the example shows how to implement a custom attribute (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> to insert the custom service instance provider.</source>
          <target state="translated">Чтобы вставить настройку поставщика экземпляров, в этом примере показано, как реализовать пользовательский атрибут (<ph id="ph1">`SingletonBehaviorAttribute`</ph>), который реализует <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> для вставки пользовательского поставщика экземпляров службы.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>It also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, which binds its use to the <ph id="ph2">`ISampleService`</ph> contract.</source>
          <target state="translated">В нем также реализуется интерфейс <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, который связывает его использование с контрактом <ph id="ph2">`ISampleService`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The contract description to be modified.</source>
          <target state="translated">Изменяемое описание контракта.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The endpoint that exposes the contract.</source>
          <target state="translated">Конечная точка, предоставляющая контракт.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The dispatch runtime that controls service execution.</source>
          <target state="translated">Среда выполнения распределения, которая контролирует выполнение службы.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>Implements a modification or extension of the client across a contract.</source>
          <target state="translated">Реализует изменение или расширение клиента для всего контракта.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> to view, modify, or add custom extensions to the service runtime across all messages in a specific contract or for one specific operation in that contract.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> реализуется для просмотра, изменения или добавления пользовательских расширений в среду выполнения служб для всех сообщений в конкретном контракте или для одной конкретной операции в этом контракте.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>For details about what customizations you can perform in a service application, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph>.</source>
          <target state="translated">Сведения о том, какие настройки можно выполнить в приложении службы, см. в разделах <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> и <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> method can throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception if the behavior is only intended for use in a client application.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> может вызывать исключение <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph>, если поведение предназначено для использования только в клиентском приложении.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">Этот метод вызывается один раз для каждой конечной точки, которая использует указанный контракт службы.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> and that returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A&gt;</ph> property.</source>
          <target state="translated">Обратите внимание, что в описании могут быть две операции с одинаковым именем (одна в каждом направлении), поэтому если нужно выполнить перебор операций, в которых контракт является дуплексным, необходимо сопоставить направление сообщений между средой <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> конечной точки и средой выполнения, возвращаемой свойством <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph> property.</source>
          <target state="translated">Кроме того, поскольку другие поведения, возможно, уже добавили или удалили некоторые операции из среды выполнения, нет никакой гарантии, что в описании имеется такое же количество операций, что и количество объектов <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> в свойстве <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The following code example assumes a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> implementation called <ph id="ph2">`ObjectProviderBehavior`</ph> that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</source>
          <target state="translated">В следующем примере кода предполагается наличие пользовательской реализации <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> с именем <ph id="ph2">`ObjectProviderBehavior`</ph>, которая обеспечивает «одноэлементное» поведение; метод всегда возвращает один и тот же экземпляр службы и не использует его повторно.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>To insert the instance provider customization, the example shows how to implement a custom attribute (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> to insert the custom service instance provider.</source>
          <target state="translated">Чтобы вставить настройку поставщика экземпляров, в этом примере показано, как реализовать пользовательский атрибут (<ph id="ph1">`SingletonBehaviorAttribute`</ph>), который реализует <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> для вставки пользовательского поставщика экземпляров службы.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>It also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, which binds its use to the <ph id="ph2">`ISampleService`</ph> contract.</source>
          <target state="translated">В нем также реализуется интерфейс <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, который связывает его использование с контрактом <ph id="ph2">`ISampleService`</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The contract to validate.</source>
          <target state="translated">Контракт, который необходимо проверить.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The endpoint to validate.</source>
          <target state="translated">Проверяемая конечная точка.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Implement to confirm that the contract and endpoint can support the contract behavior.</source>
          <target state="translated">Реализуется для подтверждения того, что контракт и конечная точка могут поддерживать поведение контракта.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> method to confirm that the contract description is sufficient to support the custom contract behavior.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> реализуется для подтверждения того, что описание контракта достаточно для поддержки пользовательского поведения контракта.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Implementations can inspect the description and either throw or return no value.</source>
          <target state="translated">Реализации могут проверять описание и либо создать значение, либо не возвратить никакого значения.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">Этот метод вызывается один раз для каждой конечной точки, которая использует указанный контракт службы.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>