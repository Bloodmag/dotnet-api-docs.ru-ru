<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IPolicyExportExtension.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50a6b8d6f9eba114a914bd0ed20fc48d2ac4ea6b9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a6b8d6f9eba114a914bd0ed20fc48d2ac4ea6b9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>Implement <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.IPolicyExportExtension" /&gt;</ph> to insert custom binding policy assertions in the Web Services Description Language (WSDL) information.</source>
          <target state="translated">Реализуйте <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.IPolicyExportExtension" /&gt;</ph> для вставки настраиваемых утверждений политики привязки в сведениях о языке описания служб (SDL).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph> interface on a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement?displayProperty=nameWithType&gt;</ph> object to write statements about endpoint capabilities or requirements into the WSDL information exposed by a particular endpoint.</source>
          <target state="translated">Реализуйте интерфейс <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph> в объекте <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement?displayProperty=nameWithType&gt;</ph>, чтобы записать выписки о возможностях и требованиях конечной точки в сведения языка WSDL, предоставленные определенной конечной точкой.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>Typically the binding element is one that implements some feature, but this is not required.</source>
          <target state="translated">Обычно элементом привязки является элемент, реализующий определенное свойство, однако это не является обязательным.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>To load your policy exporter from a configuration file, implement a <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BindingElementExtensionElement?displayProperty=nameWithType&gt;</ph> that returns the policy exporter <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> object.</source>
          <target state="translated">Для загрузки средства экспорта политики из файла конфигурации, реализуйте интерфейс <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BindingElementExtensionElement?displayProperty=nameWithType&gt;</ph>, возвращающий объект <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> средства импорта политики.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>The policy exporter is used by <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> to use policy assertions to communicate to clients the existence of that custom binding requirement or endpoint capability.</source>
          <target state="translated">Средство экспорта политики используется <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> для использования утверждений политики, чтобы сообщить клиентам о существовании требования настраиваемой привязки или возможности конечной точки.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy%2A&gt;</ph> method takes the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataExporter&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> objects.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy%2A&gt;</ph> принимает объекты <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataExporter&gt;</ph> и <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> methods to obtain collections of policy assertions that have already been exported at various scopes.</source>
          <target state="translated">Используйте методы <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph> и <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph>, чтобы получить коллекции утверждений политики, экспортированные в различные области.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>Then add your custom policy assertion object to the appropriate collection.</source>
          <target state="translated">Затем добавьте объект утверждения настраиваемой политики в соответствующую коллекцию.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt;</ph> property exposes the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> for the endpoint that is being exported.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt;</ph> предоставляет объект <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> для экспортируемой конечной точки.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>This allows the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph> extension to correctly scope their exported policy assertions.</source>
          <target state="translated">Этот позволяет расширению <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph> правильно определить область экспортированных утверждений политики.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>For example, security attributes in code may add behaviors to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> that indicate where security policy assertions should be added.</source>
          <target state="translated">Например, атрибуты безопасности в коде могут добавлять поведения в объект <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph>, указывающие, куда должны быть добавлены утверждения политики безопасности.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph> mechanism only supports exporting policy assertions in WSDL.</source>
          <target state="translated">Механизм <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph> поддерживает только экспорт утверждений политики в языке WSDL.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>To export custom WSDL elements you must use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension&gt;</ph> mechanism to modify the WSDL directly.</source>
          <target state="translated">Для экспорта настраиваемых элементов языка WSDL необходимо использовать механизм <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension&gt;</ph>, чтобы изменить язык WSDL напрямую.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>Once custom policy assertions have been attached to the WSDL information, clients can detect and import the custom binding assertions by using an <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> object.</source>
          <target state="translated">После присоединения утверждений настраиваемой политики к информации WSDL клиенты могут обнаруживать и импортировать утверждения настраиваемой привязки путем использования объекта <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>The following code example shows the implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph> on a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph>.</source>
          <target state="translated">В следующем примере кода показана реализация метода <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph> в <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>In this example, a custom binding element is attached to the WSDL file at the binding level.</source>
          <target state="translated">В этом примере элемент настраиваемой привязки присоединяется к файлу WSDL на уровне привязки.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>The following code example shows a <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BindingElementExtensionElement?displayProperty=nameWithType&gt;</ph> implementation that enables the preceding policy exporter to be loaded from an application configuration file.</source>
          <target state="translated">В следующем примере кода показана реализация <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BindingElementExtensionElement?displayProperty=nameWithType&gt;</ph>, которая делает возможной загрузку предыдущего средства импорта политики из файла конфигурации приложения.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>The following example shows the host configuration file that loads the custom policy exporter.</source>
          <target state="translated">В следующем примере показан основной файл конфигурации, загружающий средство экспорта настраиваемой политики.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyExportExtension">
          <source>The following example shows the custom assertion in the WSDL file.</source>
          <target state="translated">В следующем примере показано настраиваемое утверждение в файле WSDL.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph> that you can use to modify the exporting process.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph>, который можно использовать для изменения процесса экспорта.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph> that you can use to insert your custom policy assertion.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph>, который можно использовать для вставки утверждения пользовательской политики.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Implement to include for exporting a custom policy assertion about bindings.</source>
          <target state="translated">Реализация необходима для включения для экспорта утверждения настраиваемой политики о привязках.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> methods to obtain collections of policy assertions that have already been exported at various scopes.</source>
          <target state="translated">Используйте методы <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph> и <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph>, чтобы получить коллекции утверждений политики, экспортированные в различные области.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Then add your <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph> object to the appropriate collection.</source>
          <target state="translated">Затем добавьте объект <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph> в соответствующую коллекцию.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The following code example shows the implementation of <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph> on a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph>.</source>
          <target state="translated">В следующем примере кода показана реализация метода <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph> в <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>In this example, a custom binding element is attached to the WSDL file at the binding level.</source>
          <target state="translated">В этом примере элемент настраиваемой привязки присоединяется к файлу WSDL на уровне привязки.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The following code example shows a <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BindingElementExtensionElement?displayProperty=nameWithType&gt;</ph> implementation that enables the preceding policy exporter to be loaded from an application configuration file.</source>
          <target state="translated">В следующем примере кода показана реализация <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BindingElementExtensionElement?displayProperty=nameWithType&gt;</ph>, которая делает возможной загрузку предыдущего средства импорта политики из файла конфигурации приложения.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The following example shows the host configuration file that loads the custom policy exporter.</source>
          <target state="translated">В следующем примере показан основной файл конфигурации, загружающий средство экспорта настраиваемой политики.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The following example shows the custom assertion in the WSDL file.</source>
          <target state="translated">В следующем примере показано настраиваемое утверждение в файле WSDL.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>