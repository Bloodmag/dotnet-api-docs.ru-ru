<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IPolicyImportExtension.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72eabdc083ee43a8830cc82eb6bfb3c6b2f2e9e8af.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eabdc083ee43a8830cc82eb6bfb3c6b2f2e9e8af</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Defines a method for objects that import custom policy assertions about bindings.</source>
          <target state="translated">Определяет метод для объектов, которые импортируют утверждения настраиваемой политики о привязках.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> interface to search WSDL information exposed by a particular endpoint for custom policy assertions about endpoint capabilities or requirements.</source>
          <target state="translated">Реализуйте интерфейс <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> для поиска сведений языка WSDL, предоставленных определенной конечной точкой для утверждений пользовательской политики о возможностях и требованиях конечной точки.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Typically, a policy importer searches for a specific assertion and either inserts a binding element, configures a binding element, or modifies the contract to support the requirements of the assertion.</source>
          <target state="translated">Обычно средство импорта политики производит поиск конкретного утверждения и вставляет элемент привязки, настраивает элемент привязки или изменяет контракт для поддержки требований утверждения.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Unlike its counterpart, <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> does not require implementation by a <ph id="ph3">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> object; you can load it using the client configuration section shown in the Examples section or programmatically by adding it to the <ph id="ph4">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">В отличие от аналога, <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> не требует реализации объектом <ph id="ph3">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph>; его можно загрузить с помощью раздела конфигурации клиента, показанного в разделе «Пример», или программным образом путем добавления к конструктору <ph id="ph4">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> passes two objects to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt;</ph> method, a <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> and a <ph id="ph4">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> передает два объекта методу <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt;</ph>: <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> и <ph id="ph4">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Typically the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> object already contains the policy assertions for each binding scope.</source>
          <target state="translated">Обычно в объекте <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> уже содержатся утверждения политики для каждой области привязки.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>An <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> implementation performs the following steps:</source>
          <target state="translated">Реализация <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> выполняет следующие действия:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Locates the custom policy assertion for which it is responsible by calling either the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> methods, depending upon the scope.</source>
          <target state="translated">Располагает утверждение настраиваемой политики, за которое она отвечает, путем вызова методов <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph> или <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph>, в зависимости от области.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Removes the policy assertion from the assertion collection.</source>
          <target state="translated">Удаляет утверждение политики из коллекции утверждений.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> method locates, returns, and removes the assertion in one step.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> располагает, возвращает и удаляет утверждение за один шаг.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Modify the binding stack or the contract by either adding a required custom <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;</ph> property or by modifying the <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Измените стек привязок или контракт путем добавления необходимого настраиваемого объекта <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> в свойство <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;</ph> или путем изменения свойства <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Step 2 is important.</source>
          <target state="translated">Шаг 2 является важным.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>After all policy importers have been called, WCF checks for the existence of any policy assertions that remain.</source>
          <target state="translated">После вызова всех средств импорта политики WCF проверяет существование оставшихся утверждений политики.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>If one exists, WCF assumes that the policy import was unsuccessful and does not import the associated binding.</source>
          <target state="translated">При наличии такового WCF предполагается, что Импорт политики завершилась неудачно и не импортирует связанную привязку.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>A malicious metadata supplier can attempt to send malformed XML as part of metadata in an attempt to exploit a policy importer.</source>
          <target state="translated">Поставщик вредоносных метаданных может попытаться отправить неправильно сформированное XML как часть метаданных в попытке воспользоваться средством импорта политики.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>It is strongly recommended that custom policy importers be robust to all forms of XML that can be passed to it.</source>
          <target state="translated">Настоятельно рекомендуется, чтобы средства импорта настраиваемой политики были надежными для всех форм XML, передача которых возможна.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>Custom <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> implementations must implement their own <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> object to extract the policy assertions attached to the custom metadata format.</source>
          <target state="translated">Настраиваемые реализации <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> должны реализовать свой собственный объект <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> для извлечения утверждений политики, прикрепленных к формату настраиваемых метаданных.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>If you want to export and import custom WSDL elements that are not policy assertions, see <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">При необходимости в экспорте и импорте настраиваемых элементов WSDL, не являющихся утверждениями политики, см. разделы <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=nameWithType&gt;</ph> и <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>You can use custom policy importers and exporters with the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> by using the same configuration elements in a configuration file and the <ph id="ph1">`/svcutilConfig:&lt;configFile&gt;`</ph> option.</source>
          <target state="translated">Можно использовать средства импорта настраиваемой политики и экспорта с <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> с помощью одинаковых элементов конфигурации в файле конфигурации и <ph id="ph1">`/svcutilConfig:&lt;configFile&gt;`</ph> параметр.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> method to locate, return, and remove the assertion in one step.</source>
          <target state="translated">В следующем примере кода показано применение метода <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> для расположения, возвращения и удаления утверждения за один шаг.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>The following code example shows the client application configuration file to load the custom policy importer when the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType&gt;</ph> is invoked.</source>
          <target state="translated">В следующем примере кода показан файл конфигурации клиентского приложения для загрузки средства импорта настраиваемой политики при вызове <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IPolicyImportExtension">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver&gt;</ph> to download and resolve metadata into description objects.</source>
          <target state="translated">В следующем примере кода показано применение <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver&gt;</ph> для загрузки и разрешения метаданных в объекты описания.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataImporter" /&gt;</ph> object in use.</source>
          <target state="translated">Используемый объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataImporter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph> that contains both the policy assertions that can be imported and the collections of binding elements to which implementing binding elements can be added.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph>, содержащий как утверждения политики, которые могут быть импортированы, так и коллекции элементов привязки, к которым могут быть добавлены реализующие элементы привязки.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Defines a method that can import custom policy assertions and add implementing binding elements.</source>
          <target state="translated">Определяет метод, который может импортировать утверждения пользовательской политики и добавлять реализующие элементы привязки.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Implement the <ph id="ph1">`ImportPolicy`</ph> method to obtain policy assertions and perform some modification of the imported contract or binding to support the assertion.</source>
          <target state="translated">Реализуйте метод <ph id="ph1">`ImportPolicy`</ph>, чтобы получить утверждения политики и выполнить изменения импортированного контракта или привязки для поддержки утверждения.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Typically, a policy importer responds to finding a custom policy assertion by configuring or inserting a binding element into the binding being imported.</source>
          <target state="translated">Обычно средство импорта политики отвечает на нахождение утверждения настраиваемой политики путем настройки или вставки элемента привязки в импортируемую привязку.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> passes two objects to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt;</ph> method, a <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> and a <ph id="ph4">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> передает два объекта методу <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt;</ph>: <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> и <ph id="ph4">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Typically the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> object already contains the policy assertions for each binding scope.</source>
          <target state="translated">Обычно в объекте <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> уже содержатся утверждения политики для каждой области привязки.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>An <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> implementation performs the following steps:</source>
          <target state="translated">Реализация <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> выполняет следующие действия:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Locates the custom policy assertion for which it is responsible by calling either the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> methods, depending upon the scope.</source>
          <target state="translated">Располагает утверждение настраиваемой политики, за которое она отвечает, путем вызова методов <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph> или <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph>, в зависимости от области.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Removes the policy assertion from the assertion collection.</source>
          <target state="translated">Удаляет утверждение политики из коллекции утверждений.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> method locates, returns, and removes the assertion in one step.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> располагает, возвращает и удаляет утверждение за один шаг.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Modifies the binding stack or the contract by either adding a required custom <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;</ph> property or by modifying the <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Изменяет стек привязок или контракт путем добавления необходимого настраиваемого объекта <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> в свойство <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;</ph> или путем изменения свойства <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Step 2 is important.</source>
          <target state="translated">Шаг 2 является важным.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>After all policy importers have been called, WCF checks for the existence of any policy assertions that remain.</source>
          <target state="translated">После вызова всех средств импорта политики WCF проверяет существование оставшихся утверждений политики.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>If one exists, WCF assumes that the policy import was unsuccessful and does not import the associated binding.</source>
          <target state="translated">При наличии такового WCF предполагается, что Импорт политики завершилась неудачно и не импортирует связанную привязку.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> method to locate, return, and remove the assertion in one step.</source>
          <target state="translated">В следующем примере кода показано применение метода <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType&gt;</ph> для расположения, возвращения и удаления утверждения за один шаг.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The following code example shows the client application configuration file to load the custom policy importer when the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType&gt;</ph> is invoked.</source>
          <target state="translated">В следующем примере кода показан файл конфигурации клиентского приложения для загрузки средства импорта настраиваемой политики при вызове <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver&gt;</ph> to download and resolve metadata into description objects.</source>
          <target state="translated">В следующем примере кода показано применение <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataResolver&gt;</ph> для загрузки и разрешения метаданных в объекты описания.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>