<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IServiceBehavior.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5778e3fb7b36e48f48f3deab84c6e43e92c9aeebe.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">778e3fb7b36e48f48f3deab84c6e43e92c9aeebe</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Provides a mechanism to modify or insert custom extensions across an entire service, including the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>.</source>
          <target state="translated">Предоставляет механизм для изменения или вставки настраиваемых расширений в целые службы, включая <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Implement <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> to modify, examine, or extend some aspect of service-wide execution at the application level:</source>
          <target state="translated">Реализует <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> для изменения, проверки или расширения определенного аспекта выполнения для всей службы на уровне приложения.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</source>
          <target state="translated">Можно использовать метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> для изменения значений свойства времени выполнения или для вставки объектов настраиваемых расширений, например, обработчиков ошибок, перехватчиков параметров или сообщений, а также других объектов настраиваемых расширений.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> method to examine the description before <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> constructs the executing service to confirm that it can execute properly.</source>
          <target state="translated">Можно использовать метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> для проверки описания до того, как <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> выполнит построение службы выполнения, чтобы проверить ее работу.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> method to pass to a binding element the custom information for the service so that it can support the service correctly.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> используется для передачи в элемент привязки настраиваемых сведений для службы, чтобы обеспечить ее работу.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> objects can make use of any of these methods, but often only one is important; in such cases the unused methods can return without a value.</source>
          <target state="translated">Объекты <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> могут использовать любые из этих методов, но часто важен только один; в таких случаях неиспользуемые методы могут не возвращать никакого значения.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">Все методы <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> передают в качестве параметра объекты <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> и <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination only; if you modify these objects the execution behavior is undefined.</source>
          <target state="translated">Этот параметр используется только для проверки; при изменении объекта <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph>, расширение функциональности выполнения не определено.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>To perform the customization task for which it is intended, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> property prior to the construction of the service runtime.</source>
          <target state="translated">Чтобы выполнить настройку задачи, для которой предназначен этот параметр, необходимо добавить объект <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> в свойство <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> перед построением среды выполнения службы.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>There are three ways to do this:</source>
          <target state="translated">Это можно сделать тремя способами:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Programmatically add the custom service behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> property prior to the point where the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method is called on the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">Программно добавить пользовательское расширение функциональности настраиваемой службы в свойство <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> перед тем, как метод <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> вызывается на объекте <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Create a custom attribute that implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> and use it to mark service classes that are to be modified.</source>
          <target state="translated">Создать настраиваемый атрибут, который реализует <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> и использует его для маркировки классов службы, которые следует изменить.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>When a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object is constructed, <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> uses reflection to discover the attributes on the service type.</source>
          <target state="translated">При создании объекта <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> использует отражение для обнаружения атрибутов в типе службы.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>If any attributes implement <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph>, they are added to the behaviors collection on <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph>.</source>
          <target state="translated">Любые атрибуты, реализующие <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph>, добавляются в коллекцию расширений функциональности в <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Extend the <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph> class to support the specification of the behavior in an application or machine configuration file.</source>
          <target state="translated">Примените расширение для класса <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, чтобы включить поддержку спецификаций расширений функциональности в приложении или файле конфигурации.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>See the Example section for more information.</source>
          <target state="translated">Дополнительные сведения см. в разделе «Пример».</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Examples of service behaviors in <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> include the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> attribute, the <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType&gt;</ph>, the <ph id="ph4">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType&gt;</ph> and the <ph id="ph5">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType&gt;</ph> behavior.</source>
          <target state="translated">К примерам расширений функциональности службы в <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> относится атрибут <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph>, расширения функциональности <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType&gt;</ph>,  <ph id="ph4">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType&gt;</ph> и <ph id="ph5">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</source>
          <target state="translated">В следующем образце кода показано использование расширений функциональности службы, заданных в файле конфигурации, для вставки настраиваемого обработчика ошибок в приложение службы.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>In this example, the error handler catches all exceptions and converts them into a custom <ph id="ph1">`GreetingFault`</ph> SOAP fault that is then returned to the client.</source>
          <target state="translated">В данном примере обработчик ошибок выполняет перехват всех исключений и преобразование их в настраиваемые ошибки SOAP <ph id="ph1">`GreetingFault`</ph>, которые затем возвращаются клиенту.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>The following <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> implementation adds no binding parameter objects, adds the custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> object to each <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> property, and validates that each operation of the service to which the service behavior is applied and has a <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> of type <ph id="ph5">`GreetingFault`</ph>.</source>
          <target state="translated">Следующая реализация <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> не добавляет объекты параметра привязки, но добавляет настраиваемый объект <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> в каждое свойство <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> и проверяет наличие для каждой операции службы, к которой применяются расширения функциональности службы, <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> типа <ph id="ph5">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>In this example, the behavior class also implements <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</source>
          <target state="translated">В данном примере класс расширений функциональности также реализует <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, который включает расширения функциональности службы для вставки путем их использования в файле конфигурации приложения, как показано в следующем примере кода.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The service description of the service.</source>
          <target state="translated">Описание службы.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The host of the service.</source>
          <target state="translated">Ведущее приложение службы.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The service endpoints.</source>
          <target state="translated">Конечные точки службы.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Custom objects to which binding elements have access.</source>
          <target state="translated">Настраиваемые объекты, к которым имеют доступ элементы привязки.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Provides the ability to pass custom data to binding elements to support the contract implementation.</source>
          <target state="translated">Предоставляет возможности передачи настраиваемых данных в элементы привязки для предоставления поддержки реализации контракта.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> method to add custom data objects to the <ph id="ph2">`parameters`</ph> collection that binding elements can use to acquire extra information to enable them to support the contract.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> можно использовать для добавления объектов настраиваемых данных в коллекцию <ph id="ph2">`parameters`</ph>, которая может использоваться элементами привязки для получения дополнительных сведений, что обеспечивает поддержку контракта в данных элементах.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>This method is called once for each listen URI.</source>
          <target state="translated">Данный метод вызывается один раз для каждого универсального кода ресурса (URI) ожидания передачи данных.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>For example, if a service has four endpoints, and two of them have the same listen URI, then this method gets called three times.</source>
          <target state="translated">Например, если служба содержит четыре конечных точки, и две из них имеют одинаковый универсальный код ресурса (URI) ожидания передачи данных, этот метод вызывается трижды.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The reason is that the <ph id="ph1">`bindingParameters`</ph> target each channel stack and there is one channel stack for each listen URI.</source>
          <target state="translated">Это обусловлено тем, что <ph id="ph1">`bindingParameters`</ph> использует в качестве конечного объекта каждый стек канала, при этом для каждого универсального кода ресурса (URI) ожидания передачи данных существует один стек канала.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Because each call receives those endpoints at that listen URI, two calls each get a single <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph>, and one call gets a collection of two <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> objects.</source>
          <target state="translated">Поскольку каждый вызов получает данные конечные точки на этом универсальном коде ресурса (URI) ожидания передачи данных, один из двух вызовов получает один <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph>, а второй вызов получает коллекцию из двух объектов <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">Все методы <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> передают в качестве параметра объекты <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> и <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</source>
          <target state="translated">Этот параметр используется только для проверки и вставки настроек; при изменении объекта <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph>, расширение функциональности выполнения не определено.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service description.</source>
          <target state="translated">Описание службы.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The host that is currently being built.</source>
          <target state="translated">Ведущее приложение, построение которого выполняется в настоящее время.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Provides the ability to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</source>
          <target state="translated">Предоставляет возможности для изменения значений свойства времени выполнения или для вставки объектов настраиваемых расширений, например, обработчиков ошибок, перехватчиков параметров или сообщений, а также других объектов настраиваемых расширений.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to inspect or modify the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> object that is being constructed in order to support some custom execution scenario.</source>
          <target state="translated">Реализует метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> для проверки или изменения объекта <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph>, который создается для обеспечения поддержки определенных настраиваемых сценариев выполнения.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">Все методы <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> передают в качестве параметра объекты <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> и <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</source>
          <target state="translated">Этот параметр используется только для проверки и вставки настроек; при изменении объекта <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph>, расширение функциональности выполнения не определено.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</source>
          <target state="translated">В следующем образце кода показано использование расширений функциональности службы, заданных в файле конфигурации, для вставки настраиваемого обработчика ошибок в приложение службы.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the error handler catches all exceptions and converts them into a custom <ph id="ph1">`GreetingFault`</ph> SOAP fault that is then returned to the client.</source>
          <target state="translated">В данном примере обработчик ошибок выполняет перехват всех исключений и преобразование их в настраиваемые ошибки SOAP <ph id="ph1">`GreetingFault`</ph>, которые затем возвращаются клиенту.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> implementation adds no binding parameter objects, adds the custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> object to each <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> property, and validates that each operation of the service to which the service behavior is applied and has a <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> of type <ph id="ph5">`GreetingFault`</ph>.</source>
          <target state="translated">Следующая реализация <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> не добавляет объекты параметра привязки, но добавляет настраиваемый объект <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> в каждое свойство <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> и проверяет наличие для каждой операции службы, к которой применяются расширения функциональности службы, <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> типа <ph id="ph5">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the behavior class also implements <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</source>
          <target state="translated">В данном примере класс расширений функциональности также реализует <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, который включает расширения функциональности службы для вставки путем их использования в файле конфигурации приложения, как показано в следующем примере кода.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service description.</source>
          <target state="translated">Описание службы.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service host that is currently being constructed.</source>
          <target state="translated">Ведущее приложение службы, которое создается в настоящий момент.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Provides the ability to inspect the service host and the service description to confirm that the service can run successfully.</source>
          <target state="translated">Предоставляет возможности проверки ведущего приложения и описания службы, чтобы подтвердить готовность службы.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> method to confirm whether the current service can execute properly according to your scenario.</source>
          <target state="translated">Можно использовать метод <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> для подтверждения готовности текущей службы к выполнению в соответствии с заданным сценарием.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">Все методы <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> передают в качестве параметра объекты <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> и <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</source>
          <target state="translated">Этот параметр используется только для проверки и вставки настроек; при изменении объекта <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph>, расширение функциональности выполнения не определено.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</source>
          <target state="translated">В следующем образце кода показано использование расширений функциональности службы, заданных в файле конфигурации, для вставки настраиваемого обработчика ошибок в приложение службы.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the error handler catches all exceptions and converts them into a custom <ph id="ph1">`GreetingFault`</ph> SOAP fault that is then returned to the client.</source>
          <target state="translated">В данном примере обработчик ошибок выполняет перехват всех исключений и преобразование их в настраиваемые ошибки SOAP <ph id="ph1">`GreetingFault`</ph>, которые затем возвращаются клиенту.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> implementation adds no binding parameter objects, adds the custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> object to each <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> property, and validates that each operation of the service to which the service behavior is applied and has a <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> of type <ph id="ph5">`GreetingFault`</ph>.</source>
          <target state="translated">Следующая реализация <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> не добавляет объекты параметра привязки, но добавляет настраиваемый объект <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> в каждое свойство <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> и проверяет наличие для каждой операции службы, к которой применяются расширения функциональности службы, <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> типа <ph id="ph5">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the behavior class also implements <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</source>
          <target state="translated">В данном примере класс расширений функциональности также реализует <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, который включает расширения функциональности службы для вставки путем их использования в файле конфигурации приложения, как показано в следующем примере кода.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>