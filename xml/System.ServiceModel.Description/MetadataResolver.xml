<Type Name="MetadataResolver" FullName="System.ServiceModel.Description.MetadataResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a18a682c6305de93c74530f1a31d1ff5481cca7a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36616803" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class MetadataResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MetadataResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataResolver abstract sealed" />
  <TypeSignature Language="F#" Value="type MetadataResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="80406-101">Извлекает и импортирует метаданные как объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80406-101">Retrieves and imports metadata as <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-102">Используйте класс <xref:System.ServiceModel.Description.MetadataResolver>, чтобы быстро импортировать конечные точки для службы из метаданных.</span><span class="sxs-lookup"><span data-stu-id="80406-102">Use the <xref:System.ServiceModel.Description.MetadataResolver> class to quickly import endpoints for a service from metadata.</span></span> <span data-ttu-id="80406-103">Этот класс загружает и преобразовывает метаданные в объекты <xref:System.ServiceModel.Description.ServiceEndpoint>.</span><span class="sxs-lookup"><span data-stu-id="80406-103">This class downloads and converts metadata into <xref:System.ServiceModel.Description.ServiceEndpoint> objects.</span></span> <span data-ttu-id="80406-104">Чтобы загрузить метаданные и обработать эти сведения как <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType>, см. раздел <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="80406-104">To download metadata and process that information as a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType>, see <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80406-105">В следующем примере кода показано применение класса <xref:System.ServiceModel.Description.MetadataResolver> для возвращения метаданных как коллекции объектов <xref:System.ServiceModel.Description.ServiceEndpoint>, которые затем используются для подключения к экземпляру службы.</span><span class="sxs-lookup"><span data-stu-id="80406-105">The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.</span></span>  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 <span data-ttu-id="80406-106">В следующем примере кода показано применение <xref:System.ServiceModel.Description.MetadataResolver> для загрузки и возвращения метаданных как коллекции объектов <xref:System.ServiceModel.Description.ServiceEndpoint> с помощью запроса HTTP GET, а не WS-Transfer.</span><span class="sxs-lookup"><span data-stu-id="80406-106">The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.</span></span>  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginResolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80406-107">Начинает асинхронный вызов, разрешающий адрес метаданных в коллекцию объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для этой службы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-107">Begins an asynchronous call that resolves a metadata address into a collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for that service.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-108">Эти методы начинают асинхронные версии методов <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A>.</span><span class="sxs-lookup"><span data-stu-id="80406-108">These methods begin asynchronous versions of the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">
          <span data-ttu-id="80406-109">Контракты, для которых требуется загрузить и разрешить метаданные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-109">The contracts for which to download and resolve metadata.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="80406-110">Адрес метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-110">The metadata address.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="80406-111">Делегат асинхронного обратного вызова, который вызывается после завершения вызова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-111">The asynchronous callback delegate invoked when the call is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="80406-112">Состояние, связанное с асинхронным вызовом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-112">The state associated with the asynchronous call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80406-113">Начинает асинхронный вызов, разрешающий адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов, с помощью заданного адреса и асинхронного состояния, и делегата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-113">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address and asynchronous state and delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80406-114">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию разрешения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-114">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-115">Параметры по умолчанию в <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> используются для извлечения метаданных, а значением по умолчанию <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> является <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="80406-115">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="80406-116">Чтобы загрузить метаданные, не разрешая информацию в объекты <xref:System.ServiceModel.Description.ServiceEndpoint>, используйте <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> напрямую.</span><span class="sxs-lookup"><span data-stu-id="80406-116">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80406-117">Если не была импортирована ни одна конечная точка или ни одна из конечных точек не соответствует контракту, возвращается пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="80406-117">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="80406-118">Если возвращается пустая коллекция, записывается трассировка предупреждений.</span><span class="sxs-lookup"><span data-stu-id="80406-118">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80406-119">Адрес, контракт или обратный вызов имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-119">The address, contract, or callback is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80406-120">Параметр <paramref name="contracts" /> пуст, по крайней мере один член параметра <paramref name="contracts" /> имеет значение <see langword="null" /> или параметр <paramref name="contracts" /> содержит несколько контрактов с совпадающими именами и пространствами имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-120">
              <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is <see langword="null" />, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="80406-121">Контракт, для которого требуется загрузить и разрешить метаданные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-121">The contract for which to download and resolve metadata.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="80406-122">Адрес метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-122">The metadata address.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="80406-123">Делегат асинхронного обратного вызова, который вызывается после завершения вызова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-123">The asynchronous callback delegate invoked when the call is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="80406-124">Состояние, связанное с асинхронным вызовом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-124">The state associated with the asynchronous call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80406-125">Начинает асинхронный вызов, разрешающий адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданного контракта, с помощью заданного адреса и асинхронного состояния, и делегата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-125">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract using the specified address and asynchronous state and delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80406-126">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию разрешения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-126">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-127">Параметры по умолчанию в <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> используются для извлечения метаданных, а значением по умолчанию <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> является <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="80406-127">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="80406-128">Чтобы загрузить метаданные, не разрешая информацию в объекты <xref:System.ServiceModel.Description.ServiceEndpoint>, используйте <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> напрямую.</span><span class="sxs-lookup"><span data-stu-id="80406-128">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80406-129">Если не была импортирована ни одна конечная точка или ни одна из конечных точек не соответствует контракту, возвращается пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="80406-129">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="80406-130">Если возвращается пустая коллекция, записывается трассировка предупреждений.</span><span class="sxs-lookup"><span data-stu-id="80406-130">If an empty collection is returned, a warning trace is written.</span></span>  
  
 <span data-ttu-id="80406-131">Этот метод требует указания типа контракта.</span><span class="sxs-lookup"><span data-stu-id="80406-131">This method requires that you specify a contract type.</span></span> <span data-ttu-id="80406-132">Можно указать контракт путем объявления интерфейса службы в коде клиента или с помощью клиента WCF, созданного программой Svcutil.exe.</span><span class="sxs-lookup"><span data-stu-id="80406-132">You can specify the contract by declaring the service interface in the client code or by using a WCF client generated by Svcutil.exe.</span></span> <span data-ttu-id="80406-133">Если интерфейс изменился (добавлена новая операция, например), необходимо обновить интерфейс в коде клиента или создать новый клиент WCF.</span><span class="sxs-lookup"><span data-stu-id="80406-133">If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new WCF client.</span></span> <span data-ttu-id="80406-134">В противном случае возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="80406-134">If you do not, an exception is thrown.</span></span> <span data-ttu-id="80406-135">Например, в наличии имеется служба, реализующая контракт службы, называемый ICalculator и определяющий Add(), Sub(), Mult() и Div().</span><span class="sxs-lookup"><span data-stu-id="80406-135">For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div().</span></span> <span data-ttu-id="80406-136">Создание клиентского приложения и создание клиента WCF.</span><span class="sxs-lookup"><span data-stu-id="80406-136">You create a client application and generate WCF client.</span></span> <span data-ttu-id="80406-137">После чего к ICalculator добавляется метод Echo().</span><span class="sxs-lookup"><span data-stu-id="80406-137">You then add a method to ICalculator called Echo().</span></span> <span data-ttu-id="80406-138">Затем при записи приложения, вызывающего <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> без создания нового клиента WCF возникает следующее исключение.</span><span class="sxs-lookup"><span data-stu-id="80406-138">If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new WCF client you get the following exception.</span></span>  
  
 <span data-ttu-id="80406-139">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.</span><span class="sxs-lookup"><span data-stu-id="80406-139">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80406-140">Адрес, контракт или обратный вызов имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-140">The address, contract, or callback is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">
          <span data-ttu-id="80406-141">Контракты, для которых требуется загрузить и разрешить метаданные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-141">The contracts for which to download and resolve metadata.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="80406-142">Адрес метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-142">The metadata address.</span>
          </span>
        </param>
        <param name="client">
          <span data-ttu-id="80406-143">
            <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> используется для извлечения метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-143">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="80406-144">Делегат асинхронного обратного вызова, который вызывается после завершения вызова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-144">The asynchronous callback delegate invoked when the call is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="80406-145">Состояние, связанное с асинхронным вызовом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-145">The state associated with the asynchronous call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80406-146">Начинает асинхронный вызов, разрешающий адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов, с помощью заданного адреса, <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, асинхронного состояния и делегата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-146">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, asynchronous state and delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80406-147">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию разрешения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-147">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-148">Значением по умолчанию <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> является <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="80406-148">The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="80406-149">Чтобы загрузить метаданные, не разрешая информацию в объекты <xref:System.ServiceModel.Description.ServiceEndpoint>, используйте <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> напрямую.</span><span class="sxs-lookup"><span data-stu-id="80406-149">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80406-150">Если не была импортирована ни одна конечная точка или ни одна из конечных точек не соответствует контракту, возвращается пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="80406-150">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="80406-151">Если возвращается пустая коллекция, записывается трассировка предупреждений.</span><span class="sxs-lookup"><span data-stu-id="80406-151">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80406-152">Адрес, контракт, клиент или обратный вызов имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-152">The address, contract, client, or callback is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80406-153">Параметр <paramref name="contracts" /> пуст, по крайней мере один член параметра <paramref name="contracts" /> имеет значение «null» или параметр <paramref name="contracts" /> содержит несколько контрактов с совпадающими именами и пространствами имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-153">
              <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">
          <span data-ttu-id="80406-154">Контракты, для которых требуется загрузить и разрешить метаданные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-154">The contracts for which to download and resolve metadata.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="80406-155">Адрес метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-155">The metadata address.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="80406-156">Режим получения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-156">The mode of retrieval.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="80406-157">Делегат асинхронного обратного вызова, который вызывается после завершения вызова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-157">The asynchronous callback delegate invoked when the call is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="80406-158">Состояние, связанное с асинхронным вызовом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-158">The state associated with the asynchronous call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80406-159">Начинает асинхронный вызов, разрешающий адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов, с помощью заданного адреса, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, асинхронного состояния и делегата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-159">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> value, asynchronous state and delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80406-160">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию разрешения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-160">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-161">Параметры по умолчанию в <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> используются для извлечения метаданных.</span><span class="sxs-lookup"><span data-stu-id="80406-161">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata.</span></span>  
  
 <span data-ttu-id="80406-162">Чтобы загрузить метаданные, не разрешая информацию в объекты <xref:System.ServiceModel.Description.ServiceEndpoint>, используйте <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> напрямую.</span><span class="sxs-lookup"><span data-stu-id="80406-162">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80406-163">Если не была импортирована ни одна конечная точка или ни одна из конечных точек не соответствует контракту, возвращается пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="80406-163">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="80406-164">Если возвращается пустая коллекция, записывается трассировка предупреждений.</span><span class="sxs-lookup"><span data-stu-id="80406-164">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80406-165">Адрес, контракт или обратный вызов имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-165">The address, contract, or callback is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80406-166">Параметр <paramref name="contracts" /> пуст, по крайней мере один член параметра <paramref name="contracts" /> имеет значение «null» или параметр <paramref name="contracts" /> содержит несколько контрактов с совпадающими именами и пространствами имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-166">
              <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="80406-167">Контракт, для которого требуется загрузить и разрешить метаданные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-167">The contract for which to download and resolve metadata.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="80406-168">Адрес метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-168">The metadata address.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="80406-169">Режим получения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-169">The mode of retrieval.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="80406-170">Делегат асинхронного обратного вызова, который вызывается после завершения вызова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-170">The asynchronous callback delegate invoked when the call is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="80406-171">Состояние, связанное с асинхронным вызовом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-171">The state associated with the asynchronous call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80406-172">Начинает асинхронный вызов, разрешающий адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданного контракта, с помощью заданного адреса, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, асинхронного состояния и делегата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-172">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, asynchronous state and delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80406-173">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию разрешения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-173">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-174">Параметры по умолчанию в <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> используются для извлечения метаданных.</span><span class="sxs-lookup"><span data-stu-id="80406-174">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata.</span></span>  
  
 <span data-ttu-id="80406-175">Чтобы загрузить метаданные, не разрешая информацию в объекты <xref:System.ServiceModel.Description.ServiceEndpoint>, используйте <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> напрямую.</span><span class="sxs-lookup"><span data-stu-id="80406-175">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80406-176">Если не была импортирована ни одна конечная точка или ни одна из конечных точек не соответствует контракту, возвращается пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="80406-176">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="80406-177">Если возвращается пустая коллекция, записывается трассировка предупреждений.</span><span class="sxs-lookup"><span data-stu-id="80406-177">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80406-178">Адрес, контракт или обратный вызов имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-178">The address, contract, or callback is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">
          <span data-ttu-id="80406-179">Контракты, для которых требуется загрузить и разрешить метаданные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-179">The contracts for which to download and resolve metadata.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="80406-180">Адрес метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-180">The metadata address.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="80406-181">Режим получения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-181">The mode of retrieval.</span>
          </span>
        </param>
        <param name="client">
          <span data-ttu-id="80406-182">
            <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> используется для извлечения метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-182">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="80406-183">Делегат асинхронного обратного вызова, который вызывается после завершения вызова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-183">The asynchronous callback delegate invoked when the call is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="80406-184">Состояние, связанное с асинхронным вызовом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-184">The state associated with the asynchronous call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80406-185">Начинает асинхронный вызов, разрешающий адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов, с помощью заданного адреса <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /><see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, асинхронного состояния и делегата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-185">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, asynchronous state, and delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80406-186">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию разрешения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-186">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-187">Чтобы загрузить метаданные, не разрешая информацию в объекты <xref:System.ServiceModel.Description.ServiceEndpoint>, используйте <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> напрямую.</span><span class="sxs-lookup"><span data-stu-id="80406-187">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80406-188">Если не была импортирована ни одна конечная точка или ни одна из конечных точек не соответствует контракту, возвращается пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="80406-188">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="80406-189">Если возвращается пустая коллекция, записывается трассировка предупреждений.</span><span class="sxs-lookup"><span data-stu-id="80406-189">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80406-190">Адрес, контракт или обратный вызов имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-190">The address, contract, or callback is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80406-191">Параметр <paramref name="contracts" /> пуст, по крайней мере один член параметра <paramref name="contracts" /> имеет значение «null» или параметр <paramref name="contracts" /> содержит несколько контрактов с совпадающими именами и пространствами имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-191">
              <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection EndResolve(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (result As IAsyncResult) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ EndResolve(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.EndResolve result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="80406-192">Объект <see cref="T:System.IAsyncResult" />, полученный из вызова метода <see cref="Overload:System.ServiceModel.Description.MetadataResolver.BeginResolve" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-192">The <see cref="T:System.IAsyncResult" /> object that was received from a call to the <see cref="Overload:System.ServiceModel.Description.MetadataResolver.BeginResolve" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80406-193">Завершает асинхронный вызов для разрешения метаданных в коллекцию конечных точек.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-193">Completes an asynchronous call to resolve metadata into a collection of endpoints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80406-194">Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для конечных точек, содержащихся в метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-194">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the endpoints contained in the metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-195">Завершает асинхронный вызов для одного из методов <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>.</span><span class="sxs-lookup"><span data-stu-id="80406-195">Ends an asynchronous call to one of the <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80406-196">Загружает и разрешает адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для службы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-196">Downloads and resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for that service.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-197">Чтобы загрузить метаданные, не разрешая информацию в объекты <xref:System.ServiceModel.Description.ServiceEndpoint>, используйте <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> напрямую.</span><span class="sxs-lookup"><span data-stu-id="80406-197">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
 <span data-ttu-id="80406-198">Для всех синхронных и асинхронных методов `Resolve` возвращается пустая коллекция, если не была импортирована ни одна конечная точка или ни одна из конечных точек не соответствует контракту.</span><span class="sxs-lookup"><span data-stu-id="80406-198">For all synchronous and asynchronous `Resolve` methods, an empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="80406-199">Если возвращается пустая коллекция, записывается трассировка предупреждений.</span><span class="sxs-lookup"><span data-stu-id="80406-199">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contracts">
          <span data-ttu-id="80406-200">Контракты, для которых требуется загрузить и разрешить метаданные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-200">The contracts for which to download and resolve metadata.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="80406-201">Адрес метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-201">The metadata address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80406-202">Разрешает адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов с помощью заданного адреса метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-202">Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified metadata address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80406-203">Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для указанного контракта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-203">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-204">Параметры по умолчанию в <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> используются для извлечения метаданных, а значением по умолчанию <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> является <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="80406-204">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="80406-205">Чтобы загрузить метаданные, не разрешая информацию в объекты <xref:System.ServiceModel.Description.ServiceEndpoint>, используйте <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> напрямую.</span><span class="sxs-lookup"><span data-stu-id="80406-205">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80406-206">Если не была импортирована ни одна конечная точка или ни одна из конечных точек не соответствует контракту, возвращается пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="80406-206">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="80406-207">Если возвращается пустая коллекция, записывается трассировка предупреждений.</span><span class="sxs-lookup"><span data-stu-id="80406-207">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80406-208">Адрес или коллекция контрактов имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-208">The address or contracts collection is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80406-209">Параметр <paramref name="contracts" /> пуст, по крайней мере один член параметра <paramref name="contracts" /> имеет значение «null» или параметр <paramref name="contracts" /> содержит несколько контрактов с совпадающими именами и пространствами имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-209">
              <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="80406-210">Контракты, для которых требуется загрузить и разрешить метаданные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-210">The contracts for which to download and resolve metadata.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="80406-211">Адрес метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-211">The metadata address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80406-212">Загружает и разрешает адрес метаданных в коллекцию объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданного контракта по заданному адресу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-212">Downloads and resolves a metadata address into a collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for a specified contract at a specified address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80406-213">Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для указанного контракта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-213">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-214">Используйте метод <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A>, чтобы задать контракт и адрес метаданных для использования при загрузке и разрешении метаданных.</span><span class="sxs-lookup"><span data-stu-id="80406-214">Use the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> method to specify the contract and the metadata address to use when downloading and resolving metadata.</span></span>  
  
 <span data-ttu-id="80406-215">Параметры по умолчанию в <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> используются для извлечения метаданных, а значением по умолчанию <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> является <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="80406-215">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="80406-216">Чтобы загрузить метаданные, не разрешая информацию в объекты <xref:System.ServiceModel.Description.ServiceEndpoint>, используйте <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> напрямую.</span><span class="sxs-lookup"><span data-stu-id="80406-216">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80406-217">Если не была импортирована ни одна конечная точка или ни одна из конечных точек не соответствует контракту, возвращается пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="80406-217">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="80406-218">Если возвращается пустая коллекция, записывается трассировка предупреждений.</span><span class="sxs-lookup"><span data-stu-id="80406-218">If an empty collection is returned, a warning trace is written.</span></span>  
  
 <span data-ttu-id="80406-219">Этот метод требует указания типа контракта.</span><span class="sxs-lookup"><span data-stu-id="80406-219">This method requires that you specify a contract type.</span></span> <span data-ttu-id="80406-220">Можно указать контракт путем объявления интерфейса службы в коде клиента или с помощью клиента WCF, созданного программой Svcutil.exe.</span><span class="sxs-lookup"><span data-stu-id="80406-220">You can specify the contract by declaring the service interface in the client code or by using a WCF client generated by Svcutil.exe.</span></span> <span data-ttu-id="80406-221">Если интерфейс изменился (добавлена новая операция, например), необходимо обновить интерфейс в коде клиента или создать новый клиент WCF.</span><span class="sxs-lookup"><span data-stu-id="80406-221">If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new WCF client.</span></span> <span data-ttu-id="80406-222">В противном случае возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="80406-222">If you do not, an exception is thrown.</span></span> <span data-ttu-id="80406-223">Например, в наличии имеется служба, реализующая контракт службы, называемый ICalculator и определяющий Add(), Sub(), Mult() и Div().</span><span class="sxs-lookup"><span data-stu-id="80406-223">For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div().</span></span> <span data-ttu-id="80406-224">Создание клиентского приложения и создание клиента WCF.</span><span class="sxs-lookup"><span data-stu-id="80406-224">You create a client application and generate WCF client.</span></span> <span data-ttu-id="80406-225">После чего к ICalculator добавляется метод Echo().</span><span class="sxs-lookup"><span data-stu-id="80406-225">You then add a method to ICalculator called Echo().</span></span> <span data-ttu-id="80406-226">Затем при записи приложения, вызывающего <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> без создания нового клиента WCF возникает следующее исключение.</span><span class="sxs-lookup"><span data-stu-id="80406-226">If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new WCF client you get the following exception.</span></span>  
  
 <span data-ttu-id="80406-227">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.</span><span class="sxs-lookup"><span data-stu-id="80406-227">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80406-228">В следующем примере кода показано применение класса <xref:System.ServiceModel.Description.MetadataResolver> для возвращения метаданных как коллекции объектов <xref:System.ServiceModel.Description.ServiceEndpoint>, которые затем используются для подключения к экземпляру службы.</span><span class="sxs-lookup"><span data-stu-id="80406-228">The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.</span></span>  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80406-229">Адрес или контракт имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-229">The address or the contract is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts">
          <span data-ttu-id="80406-230">Контракты, для которых требуется загрузить и разрешить метаданные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-230">The contracts for which to download and resolve metadata.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="80406-231">Адрес метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-231">The metadata address.</span>
          </span>
        </param>
        <param name="client">
          <span data-ttu-id="80406-232">
            <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> используется для извлечения метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-232">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80406-233">Разрешает адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов с помощью заданного адреса метаданных и <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-233">Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified metadata address and <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80406-234">Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для указанного контракта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-234">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-235">Значением по умолчанию <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> является <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="80406-235">The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="80406-236">Чтобы загрузить метаданные, не разрешая информацию в объекты <xref:System.ServiceModel.Description.ServiceEndpoint>, используйте <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> напрямую.</span><span class="sxs-lookup"><span data-stu-id="80406-236">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80406-237">Если не была импортирована ни одна конечная точка или ни одна из конечных точек не соответствует контракту, возвращается пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="80406-237">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="80406-238">Если возвращается пустая коллекция, записывается трассировка предупреждений.</span><span class="sxs-lookup"><span data-stu-id="80406-238">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80406-239">Адрес, коллекция контрактов или клиент имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-239">The address, contracts collection, or client is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80406-240">Параметр <paramref name="contracts" /> пуст, по крайней мере один член параметра <paramref name="contracts" /> имеет значение «null» или параметр <paramref name="contracts" /> содержит несколько контрактов с совпадающими именами и пространствами имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-240">
              <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contracts">
          <span data-ttu-id="80406-241">Контракты, для которых требуется загрузить и разрешить метаданные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-241">The contracts for which to download and resolve metadata.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="80406-242">Адрес метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-242">The metadata address.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="80406-243">Режим получения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-243">The mode of retrieval.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80406-244">Разрешает адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов с помощью заданного адреса и режима передачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-244">Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified address and transfer mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80406-245">Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для указанного контракта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-245">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-246">Параметры по умолчанию в <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> используются для извлечения метаданных.</span><span class="sxs-lookup"><span data-stu-id="80406-246">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata.</span></span>  
  
 <span data-ttu-id="80406-247">Чтобы загрузить метаданные, не разрешая информацию в объекты <xref:System.ServiceModel.Description.ServiceEndpoint>, используйте <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> напрямую.</span><span class="sxs-lookup"><span data-stu-id="80406-247">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80406-248">Если не была импортирована ни одна конечная точка или ни одна из конечных точек не соответствует контракту, возвращается пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="80406-248">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="80406-249">Если возвращается пустая коллекция, записывается трассировка предупреждений.</span><span class="sxs-lookup"><span data-stu-id="80406-249">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80406-250">Адрес или коллекция контрактов имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-250">The address or contracts collection is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80406-251">Параметр <paramref name="contracts" /> пуст, по крайней мере один член параметра <paramref name="contracts" /> имеет значение «null» или параметр <paramref name="contracts" /> содержит несколько контрактов с совпадающими именами и пространствами имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-251">
              <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="80406-252">Контракт, для которого требуется загрузить и разрешить метаданные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-252">The contract for which to download and resolve metadata.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="80406-253">Адрес метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-253">The metadata address.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="80406-254">Режим получения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-254">The mode of retrieval.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80406-255">Разрешает адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданного контракта с помощью заданного адреса и режима передачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-255">Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract using the specified address and transfer mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80406-256">Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для указанного контракта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-256">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-257">Используйте метод <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A>, чтобы задать контракт, адрес и механизм загрузки для использования.</span><span class="sxs-lookup"><span data-stu-id="80406-257">Use the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> method to specify a contract, and address, and the download mechanism to use.</span></span>  
  
 <span data-ttu-id="80406-258">Параметры по умолчанию в <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> используются для извлечения метаданных.</span><span class="sxs-lookup"><span data-stu-id="80406-258">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata.</span></span>  
  
 <span data-ttu-id="80406-259">Чтобы загрузить метаданные, не разрешая информацию в объекты <xref:System.ServiceModel.Description.ServiceEndpoint>, используйте <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> напрямую.</span><span class="sxs-lookup"><span data-stu-id="80406-259">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80406-260">Если не была импортирована ни одна конечная точка или ни одна из конечных точек не соответствует контракту, возвращается пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="80406-260">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="80406-261">Если возвращается пустая коллекция, записывается трассировка предупреждений.</span><span class="sxs-lookup"><span data-stu-id="80406-261">If an empty collection is returned, a warning trace is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80406-262">В следующем примере кода показано применение <xref:System.ServiceModel.Description.MetadataResolver> для загрузки и возвращения метаданных как коллекции объектов <xref:System.ServiceModel.Description.ServiceEndpoint> с помощью запроса HTTP GET, а не WS-Transfer.</span><span class="sxs-lookup"><span data-stu-id="80406-262">The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.</span></span>  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80406-263">Адрес или контракт имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-263">The address or contract is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts">
          <span data-ttu-id="80406-264">Контракты, для которых требуется загрузить и разрешить метаданные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-264">The contracts for which to download and resolve metadata.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="80406-265">Адрес метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-265">The metadata address.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="80406-266">Режим получения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-266">The mode of retrieval.</span>
          </span>
        </param>
        <param name="client">
          <span data-ttu-id="80406-267">
            <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> используется для извлечения метаданных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-267">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80406-268">Разрешает адрес метаданных в объекты <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для заданных контрактов с помощью заданного адреса, режима передачи и клиента передачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-268">Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified address, transfer mode, and transfer client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80406-269">Коллекция объектов <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> для указанного контракта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-269">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80406-270">Чтобы загрузить метаданные, не разрешая информацию в объекты <xref:System.ServiceModel.Description.ServiceEndpoint>, используйте <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> напрямую.</span><span class="sxs-lookup"><span data-stu-id="80406-270">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80406-271">Если не была импортирована ни одна конечная точка или ни одна из конечных точек не соответствует контракту, возвращается пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="80406-271">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="80406-272">Если возвращается пустая коллекция, записывается трассировка предупреждений.</span><span class="sxs-lookup"><span data-stu-id="80406-272">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80406-273">Адрес, коллекция контрактов или клиент имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-273">The address, contracts collection, or client is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80406-274">Параметр <paramref name="contracts" /> пуст, по крайней мере один член параметра <paramref name="contracts" /> имеет значение «null» или параметр <paramref name="contracts" /> содержит несколько контрактов с совпадающими именами и пространствами имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80406-274">
              <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>