<Type Name="IErrorHandler" FullName="System.ServiceModel.Dispatcher.IErrorHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1598e70fe551845ecee45c28edf60e852cf1f45b" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IErrorHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IErrorHandler" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IErrorHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IErrorHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IErrorHandler" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="08770-101">Позволяет разработчику управлять сообщениями об ошибках, возвращаемыми вызывающему объекту, и дополнительно выполнять пользовательскую обработку ошибок, например ведение журнала.</span>
      <span class="sxs-lookup">
        <span data-stu-id="08770-101">Allows an implementer to control the fault message returned to the caller and optionally perform custom error processing such as logging.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08770-102">Чтобы явно контролировать поведение приложения при возникновении исключения, реализовать <xref:System.ServiceModel.Dispatcher.IErrorHandler> интерфейс и добавьте его в <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>в <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="08770-102">To explicitly control the behavior of the application when an exception is thrown, implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler> interface and add it to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>’s <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span> <span data-ttu-id="08770-103"><xref:System.ServiceModel.Dispatcher.IErrorHandler> позволяет пользователю явно управлять сообщением SOAP об ошибке, принимать решение о том, отправлять ли сообщение назад клиенту, и выполнять соответствующие задачи, например по ведению журнала.</span><span class="sxs-lookup"><span data-stu-id="08770-103"><xref:System.ServiceModel.Dispatcher.IErrorHandler> enables you to explicitly control the SOAP fault generated, decide whether to send it back to the client, and perform associated tasks, such as logging.</span></span> <span data-ttu-id="08770-104">Обработчики ошибок вызываются в том порядке, в котором они добавлены к свойству <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="08770-104">Error handlers are called in the order in which they were added to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 <span data-ttu-id="08770-105">Реализуйте метод <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> для управления сообщением об ошибке, которое возвращается клиенту.</span><span class="sxs-lookup"><span data-stu-id="08770-105">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method to control the fault message that is returned to the client.</span></span>  
  
 <span data-ttu-id="08770-106">Реализуйте метод <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>, чтобы обеспечить поведения, связанные с ошибками, например, ведение журнала ошибок, быстрое прекращение работы, завершение приложения, и т. п.</span><span class="sxs-lookup"><span data-stu-id="08770-106">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method to ensure error-related behaviors, including error logging, assuring a fail fast, shutting down the application, and so on.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="08770-107">Поскольку метод<xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> можно вызвать из множества разных мест, гарантии относительно того, что метод будет вызван на каком-то конкретном потоке, отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="08770-107">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="08770-108">Не полагайтесь на метод <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>, вызываемый на потоке операции.</span><span class="sxs-lookup"><span data-stu-id="08770-108">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method being called on the operation thread.</span></span>  
  
 <span data-ttu-id="08770-109">Все реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> вызываются первыми, перед отправлением ответного сообщения.</span><span class="sxs-lookup"><span data-stu-id="08770-109">All <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations are called first, prior to sending a response message.</span></span> <span data-ttu-id="08770-110">Если все реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> уже были вызваны и возвращены, и если параметр `fault` имеет значение, отличное от `null`, он отправляется обратно клиенту согласно контракту операции.</span><span class="sxs-lookup"><span data-stu-id="08770-110">When all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations have been called and return, and if `fault` is non-`null`, it is sent back to the client according to the operation contract.</span></span> <span data-ttu-id="08770-111">Если параметр `fault` имеет значение `null` после всех вызванных реализаций, ответное сообщение управляется значением свойства <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="08770-111">If `fault` is `null` after all implementations have been called, the response message is controlled by the <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="08770-112">Исключения могут возникать после вызова всех реализаций <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> и передачи ответного сообщения каналу.</span><span class="sxs-lookup"><span data-stu-id="08770-112">Exceptions can occur after all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations are called and a response message is handed to the channel.</span></span> <span data-ttu-id="08770-113">При возникновении исключения канала (например, сложности сериализации сообщения) <xref:System.ServiceModel.Dispatcher.IErrorHandler> объекты получают уведомления.</span><span class="sxs-lookup"><span data-stu-id="08770-113">If a channel exception occurs (for example, difficulty serializing the message) <xref:System.ServiceModel.Dispatcher.IErrorHandler> objects are notified.</span></span> <span data-ttu-id="08770-114">В этом случае следует производить среды разработки перехватывает и отображает такие исключения пользователю, иначе используют трассировки для обнаружения проблемы.</span><span class="sxs-lookup"><span data-stu-id="08770-114">In this case, you should still make sure that your development environment catches and displays such exceptions to you or makes use of tracing to discover the problem.</span></span> <span data-ttu-id="08770-115">Дополнительные сведения о трассировке см. в разделе [с помощью трассировки для устранения неполадок приложения](~/docs/framework/wcf/diagnostics/tracing/using-tracing-to-troubleshoot-your-application.md).</span><span class="sxs-lookup"><span data-stu-id="08770-115">For more information about tracing, see [Using Tracing to Troubleshoot Your Application](~/docs/framework/wcf/diagnostics/tracing/using-tracing-to-troubleshoot-your-application.md).</span></span>  
  
 <span data-ttu-id="08770-116">После отправки ответного сообщения все реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> вызываются в том же порядке.</span><span class="sxs-lookup"><span data-stu-id="08770-116">After the response message has been sent, all <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> implementations are called in the same order.</span></span>  
  
 <span data-ttu-id="08770-117">Обычно реализация <xref:System.ServiceModel.Dispatcher.IErrorHandler> добавляется к свойству<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> в службе (и к клиенту в случае дуплексного обмена данными).</span><span class="sxs-lookup"><span data-stu-id="08770-117">Typically, an <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation is added to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property on the service (and the client in the case of duplex communication).</span></span>  
  
 <span data-ttu-id="08770-118">Можно добавить интерфейс <xref:System.ServiceModel.Dispatcher.IErrorHandler> к среде выполнения, реализовав поведение (<xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> или <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType> объекта), и использовать поведение программным способом, из файла конфигурации или с пользовательским атрибутом для присоединения интерфейса <xref:System.ServiceModel.Dispatcher.IErrorHandler>.</span><span class="sxs-lookup"><span data-stu-id="08770-118">You can add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> to the runtime by implementing a behavior (either an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>, or <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType> object) and use the behavior programmatically, from a configuration file or with a custom attribute to attach your <xref:System.ServiceModel.Dispatcher.IErrorHandler>.</span></span>  
  
 <span data-ttu-id="08770-119">Дополнительные сведения об использовании поведений для изменения среды выполнения см. в разделе [настройку и расширение среды выполнения с помощью поведений](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span><span class="sxs-lookup"><span data-stu-id="08770-119">For more information about using behaviors to modify the runtime, see [Configuring and Extending the Runtime with Behaviors](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08770-120">В следующем примере кода демонстрируется служба, которая реализует интерфейс <xref:System.ServiceModel.Dispatcher.IErrorHandler>, возвращающий только исключение <xref:System.ServiceModel.FaultException%601> типа `GreetingFault`, когда метод службы создает управляемое исключение.</span><span class="sxs-lookup"><span data-stu-id="08770-120">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="08770-121">В следующем примере кода показано использование поведения службы для добавления реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler> к свойству<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="08770-121">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="08770-122">В следующем примере кода показано, как настроить службу для загрузки поведения службы с помощью файла конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="08770-122">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="08770-123">Дополнительные сведения о том, как предоставить поведение службы в файле конфигурации, см. в разделе <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="08770-123">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  

 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="HandleError">
      <MemberSignature Language="C#" Value="public bool HandleError (Exception error);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleError(class System.Exception error) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleError (error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HandleError(Exception ^ error);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public bool HandleError (Exception exception);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleError(class System.Exception exception) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.HandleError(System.Exception)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HandleError(Exception ^ exception);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <param name="exception">To be added.</param>
        <summary>
          <span data-ttu-id="08770-124">Включает обработку, связанную с ошибками, и возвращает значение, которое показывает, прерывает ли диспетчер в определенных случаях сеанс и контекст экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08770-124">Enables error-related processing and returns a value that indicates whether the dispatcher aborts the session and the instance context in certain cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="08770-125">Значение <see langword="true" />, если служба [!INCLUDE[indigo1](~/includes/indigo1-md.md)] не должна прерывать сеанс (если он имеется) и контекст экземпляра, если только этим контекстом не является <see cref="F:System.ServiceModel.InstanceContextMode.Single" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08770-125">
              <see langword="true" /> if [!INCLUDE[indigo1](~/includes/indigo1-md.md)] should not abort the session (if there is one) and instance context if the instance context is not <see cref="F:System.ServiceModel.InstanceContextMode.Single" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="08770-126">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08770-126">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08770-127">Используйте метод <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> для реализации поведений, связанных с ошибками, например, ведения журнала ошибок, системных уведомлений, завершения приложения и т. п., а также для возвращения значения, которое указывает, было ли исключение обработано правильно.</span><span class="sxs-lookup"><span data-stu-id="08770-127">Use the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method to implement error-related behaviors such as error logging, system notifications, shutting down the application, and so on, and return a value that specifies whether the exception has been handled appropriately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="08770-128">Поскольку метод<xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> можно вызвать из множества разных мест, гарантии относительно того, что метод будет вызван на каком-то конкретном потоке, отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="08770-128">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="08770-129">Не полагайтесь на метод <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>, вызываемый на потоке операции.</span><span class="sxs-lookup"><span data-stu-id="08770-129">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method being called on the operation thread.</span></span>  
  
 <span data-ttu-id="08770-130">Вызываются все реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler>.</span><span class="sxs-lookup"><span data-stu-id="08770-130">All <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementations are called.</span></span> <span data-ttu-id="08770-131">По умолчанию (Если возвращаемое значение равно `false`), если существует одно исключение, диспетчер прерывает любой сеанс и прерывает <xref:System.ServiceModel.InstanceContext> Если <xref:System.ServiceModel.InstanceContextMode> отличается от <xref:System.ServiceModel.InstanceContextMode.Single>.</span><span class="sxs-lookup"><span data-stu-id="08770-131">By default (when the return value is `false`), if there is an exception, the dispatcher aborts any session and aborts the <xref:System.ServiceModel.InstanceContext> if the <xref:System.ServiceModel.InstanceContextMode> is anything other than <xref:System.ServiceModel.InstanceContextMode.Single>.</span></span>  <span data-ttu-id="08770-132">Затем исключение считается необработанным, и любое состояние считается поврежденным.</span><span class="sxs-lookup"><span data-stu-id="08770-132">The exception is then considered unhandled and any state is considered corrupt.</span></span>  
  
 <span data-ttu-id="08770-133">Передайте значение `true` из метода <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>, чтобы заблокировать это поведение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="08770-133">Return `true` from <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> to prevent this default behavior.</span></span> <span data-ttu-id="08770-134">Если любой из обработчиков ошибок возвращает значение `true`, служба [!INCLUDE[indigo2](~/includes/indigo2-md.md)] может продолжать безопасно использовать состояние, связанное с неудачным запросом.</span><span class="sxs-lookup"><span data-stu-id="08770-134">If any error handler returns `true` it instructs [!INCLUDE[indigo2](~/includes/indigo2-md.md)] that it is safe to continue using state associated with the failed request.</span></span>  
  
 <span data-ttu-id="08770-135">Если ни один обработчик ошибок не возвращает значение `true` из метода <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>, исключение считается необработанным и используется ответное сообщение по умолчанию, что может привести к прекращению работы <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> и канала, если используется взаимодействие через канал сеанса или если свойство <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> имеет значение, отличное от <xref:System.ServiceModel.InstanceContextMode.Single?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="08770-135">If no error handler returns `true` from the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method the exception is considered unhandled and the default response applies, potentially resulting in an aborted <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> and channel when communicating on a session channel or the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> property is not set to <xref:System.ServiceModel.InstanceContextMode.Single?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="08770-136">Параметр `error` никогда не имеет значения `null` и содержит объект исключения, которое было создано.</span><span class="sxs-lookup"><span data-stu-id="08770-136">The `error` parameter is never `null` and contains the exception object that was thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08770-137">В следующем примере кода демонстрируется служба, которая реализует интерфейс <xref:System.ServiceModel.Dispatcher.IErrorHandler>, возвращающий только исключение <xref:System.ServiceModel.FaultException%601> типа `GreetingFault`, когда метод службы создает управляемое исключение.</span><span class="sxs-lookup"><span data-stu-id="08770-137">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="08770-138">В следующем примере кода показано использование поведения службы для добавления реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler> к свойству<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="08770-138">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="08770-139">В следующем примере кода показано, как настроить службу для загрузки поведения службы с помощью файла конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="08770-139">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="08770-140">Дополнительные сведения о том, как предоставить поведение службы в файле конфигурации, см. в разделе <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="08770-140">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideFault">
      <MemberSignature Language="C#" Value="public void ProvideFault (Exception error, System.ServiceModel.Channels.MessageVersion version, ref System.ServiceModel.Channels.Message fault);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProvideFault(class System.Exception error, class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.Channels.Message&amp; fault) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProvideFault (error As Exception, version As MessageVersion, ByRef fault As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProvideFault(Exception ^ error, System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::Channels::Message ^ % fault);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void ProvideFault (Exception exception, System.ServiceModel.Channels.MessageVersion version, ref System.ServiceModel.Channels.Message fault);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProvideFault(class System.Exception exception, class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.Channels.Message&amp; fault) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProvideFault(Exception ^ exception, System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::Channels::Message ^ % fault);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" Index="1" />
        <Parameter Name="fault" Type="System.ServiceModel.Channels.Message&amp;" RefType="ref" Index="2" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <param name="exception">To be added.</param>
        <param name="version">
          <span data-ttu-id="08770-141">SOAP-версия сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08770-141">The SOAP version of the message.</span>
          </span>
        </param>
        <param name="fault">
          <span data-ttu-id="08770-142">Объект <see cref="T:System.ServiceModel.Channels.Message" />, который возвращается клиенту или службе (при наличии дуплексного взаимодействия).</span>
          <span class="sxs-lookup">
            <span data-stu-id="08770-142">The <see cref="T:System.ServiceModel.Channels.Message" /> object that is returned to the client, or service, in the duplex case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08770-143">Позволяет создать пользовательское исключение <see cref="T:System.ServiceModel.FaultException`1" />, которое возвращается из исключения в ходе работы метода службы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08770-143">Enables the creation of a custom <see cref="T:System.ServiceModel.FaultException`1" /> that is returned from an exception in the course of a service method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08770-144">Реализуйте метод <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> для создания пользовательского сообщения об ошибке, которое возвращается клиенту.</span><span class="sxs-lookup"><span data-stu-id="08770-144">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method to create a custom fault message that is returned to the client.</span></span>  <span data-ttu-id="08770-145"><xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> Метод всегда будет вызываться для исключений, которые оставляют операции, кроме при распознает исключение в виде особенно Неустранимая среды выполнения WCF и повторно создает исключение.</span><span class="sxs-lookup"><span data-stu-id="08770-145">The <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method will always be called for exceptions that leave operations, except when the WCF runtime recognizes the exception as especially fatal and rethrows the exception itself.</span></span> <span data-ttu-id="08770-146">Если все реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> уже были вызваны, сообщение об ошибке отправляется клиенту обратно (если параметр `fault` имеет значение, отличное от `null`).</span><span class="sxs-lookup"><span data-stu-id="08770-146">When all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations have been called, the fault message is sent back to the client (if `fault` is non-`null`).</span></span> <span data-ttu-id="08770-147">Если `fault` параметр `null` клиенту по умолчанию отправляется клиенту.</span><span class="sxs-lookup"><span data-stu-id="08770-147">If the `fault` parameter is `null` the default fault is sent to the client.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="08770-148">Входящее сообщение, инициировавшее ошибку обработки, доступно в данном методе из свойства <xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="08770-148">The inbound message that caused the processing error is available during this method from the <xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="08770-149">Поскольку метод<xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> можно вызвать из множества разных мест, гарантии относительно того, что метод будет вызван на каком-то конкретном потоке, отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="08770-149">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="08770-150">Не полагайтесь на метод <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A>, вызываемый на потоке операции.</span><span class="sxs-lookup"><span data-stu-id="08770-150">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method being called on the operation thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08770-151">В следующем примере кода демонстрируется служба, которая реализует интерфейс <xref:System.ServiceModel.Dispatcher.IErrorHandler>, возвращающий только исключение <xref:System.ServiceModel.FaultException%601> типа `GreetingFault`, когда метод службы создает управляемое исключение.</span><span class="sxs-lookup"><span data-stu-id="08770-151">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="08770-152">В следующем примере кода показано использование поведения службы для добавления реализации <xref:System.ServiceModel.Dispatcher.IErrorHandler> к свойству<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="08770-152">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="08770-153">В следующем примере кода показано, как настроить службу для загрузки поведения службы с помощью файла конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="08770-153">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="08770-154">Дополнительные сведения о том, как предоставить поведение службы в файле конфигурации, см. в разделе <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="08770-154">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>