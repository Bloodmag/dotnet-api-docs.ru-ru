<Type Name="IInstanceContextInitializer" FullName="System.ServiceModel.Dispatcher.IInstanceContextInitializer">
  <TypeSignature Language="C#" Value="public interface IInstanceContextInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInstanceContextInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInstanceContextInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInstanceContextInitializer" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4ca21-101">Определяет методы, необходимые для проверки или изменения создания объектов <see cref="T:System.ServiceModel.InstanceContext" />.</span><span class="sxs-lookup"><span data-stu-id="4ca21-101">Defines the methods necessary to inspect or modify the creation of <see cref="T:System.ServiceModel.InstanceContext" /> objects when required.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ca21-102">Для проверки или изменения объектов <xref:System.ServiceModel.InstanceContext> при их создании реализуйте интерфейс <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer> и используйте <xref:System.ServiceModel.Description.IContractBehavior>, чтобы добавить его к свойству <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A>.</span><span class="sxs-lookup"><span data-stu-id="4ca21-102">To inspect or modify <xref:System.ServiceModel.InstanceContext> objects when they are created, implement the <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer> interface and use an <xref:System.ServiceModel.Description.IContractBehavior> to add it to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A> property.</span></span>  
  
 <span data-ttu-id="4ca21-103">У службы может быть любое число инициализаторов контекста.</span><span class="sxs-lookup"><span data-stu-id="4ca21-103">There can be any number of context initializers for a service.</span></span> <span data-ttu-id="4ca21-104">Обычно интерфейс <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer> добавляется для присоединения расширения к объекту <xref:System.ServiceModel.InstanceContext> в качестве механизма сквозной передачи данных в приложении.</span><span class="sxs-lookup"><span data-stu-id="4ca21-104">Typically, the <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer> is added to attach an extension to the <xref:System.ServiceModel.InstanceContext> object as a mechanism for passing data throughout an application.</span></span>  
  
 <span data-ttu-id="4ca21-105">Если необходимо участвовать в предоставлении или выборе объекта <xref:System.ServiceModel.InstanceContext>, который обрабатывает сообщение, см. раздел <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4ca21-105">If you want to participate in providing or selecting the <xref:System.ServiceModel.InstanceContext> object that processes a message, see <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ServiceModel.InstanceContext instanceContext, class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::ServiceModel::InstanceContext ^ instanceContext, System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="instanceContext"><span data-ttu-id="4ca21-106">Контекст экземпляра, предоставляемый системой.</span><span class="sxs-lookup"><span data-stu-id="4ca21-106">The system-supplied instance context.</span></span></param>
        <param name="message"><span data-ttu-id="4ca21-107">Сообщение, вызывающее создание контекста экземпляра.</span><span class="sxs-lookup"><span data-stu-id="4ca21-107">The message that triggered the creation of the instance context.</span></span></param>
        <summary><span data-ttu-id="4ca21-108">Предоставляет возможность изменять вновь созданный объект <see cref="T:System.ServiceModel.InstanceContext" />.</span><span class="sxs-lookup"><span data-stu-id="4ca21-108">Provides the ability to modify the newly created <see cref="T:System.ServiceModel.InstanceContext" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ca21-109">Метод <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize%2A> вызывается при создании объекта <xref:System.ServiceModel.InstanceContext>.</span><span class="sxs-lookup"><span data-stu-id="4ca21-109">The <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize%2A> method is called when an <xref:System.ServiceModel.InstanceContext> object is created.</span></span> <span data-ttu-id="4ca21-110">Обычно этот метод используется для присоединения расширения, чтобы пользовательские данные были доступны во всем приложении.</span><span class="sxs-lookup"><span data-stu-id="4ca21-110">Typically this method is used to attach an extension so that custom data can be accessed throughout an application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>