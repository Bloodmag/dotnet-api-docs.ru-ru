<Type Name="PersistenceProvider" FullName="System.ServiceModel.Persistence.PersistenceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47c79f6c0b41f17304c2993fb11979f822b05793" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PersistenceProvider : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceProvider extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceProvider&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceProvider abstract : System::ServiceModel::Channels::CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a180b-101">Абстрактный базовый класс, от которого наследуются все поставщики сохраняемости устойчивых служб.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a180b-101">The abstract base class from which all durable service persistence providers are derived.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a180b-102">На основе этого типа можно создавать производные классы для создания поставщиков сохраняемости устойчивых служб, использующих настраиваемые хранилища сохраняемости, такие как базы данных независимых разработчиков, файловая система или системы хранения с удаленным доступом.</span><span class="sxs-lookup"><span data-stu-id="a180b-102">Users can create classes derived from this type to create durable service persistence providers that use custom persistence stores, such as third-party databases, the file system, or storage systems accessed remotely.</span></span> <span data-ttu-id="a180b-103">Сведения о создании предоставляемой системой реализации этого типа, использующей Microsoft SQL Server в качестве хранилища сохраняемости, см. в разделе <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</span><span class="sxs-lookup"><span data-stu-id="a180b-103">To create a system-provided implementation of this type that uses Microsoft SQL Server as a persistence store, see <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a180b-104">При создании реализаций поставщика сохраняемости важно сохранить исходную идентификацию потока в новых методах поставщика (таких как <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="a180b-104">When creating persistence provider implementations, it is important to maintain the thread's original identity in the new provider's methods (such as <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.</span></span> <span data-ttu-id="a180b-105">В противном случае могут образоваться бреши в системе безопасности, поскольку операции будут выполняться под неправильной идентификацией.</span><span class="sxs-lookup"><span data-stu-id="a180b-105">Otherwise, security loopholes could be created, because operations would then run under the wrong identity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a180b-106">Реализацию этого типа, в которой в качестве хранилища сохраняемости используется файловая система, см. в файле FilePersistenceProviderFactory.cs в образце пакета SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="a180b-106">For an implementation of this type that uses the file system as a persistence store, see the FilePersistenceProviderFactory.cs file in the DurableServiceFactory SDK sample.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (id As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceProvider(Guid id);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="a180b-107">Уникальный идентификатор сохраняемых данных о состоянии службы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-107">The unique identifier of the service state data being saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-108">При реализации в производном классе инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-108">When implemented in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-109">В следующем примере кода показано использование конструктора <xref:System.ServiceModel.Persistence.PersistenceProvider>.</span><span class="sxs-lookup"><span data-stu-id="a180b-109">The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider> constructor.</span></span> <span data-ttu-id="a180b-110">Данный пример кода является частью образца пакета SDK «DurableServiceFactory » из файла FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="a180b-110">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a180b-111"> Образец пакета SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="a180b-111"> the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#0](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginCreate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginCreate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="a180b-112">Фактическое состояние экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-112">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="a180b-113">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-113">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="a180b-114">Метод, вызываемый при завершении этой операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-114">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="a180b-115">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-115">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-116">При реализации в производном классе представляет начало этапа Create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-116">When implemented in a derived class, represents the beginning of the Create phase.</span>
          </span>
          <span data-ttu-id="a180b-117">Этап Create наступает при первом создании записей экземпляров службы в хранилище сохраняемости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-117">The Create phase occurs when service instance records are first created in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a180b-118">Состояние вызова асинхронного метода <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-118">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-119">В следующем коде демонстрируется реализация метода <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate%2A>.</span><span class="sxs-lookup"><span data-stu-id="a180b-119">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#14](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDelete">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginDelete (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDelete(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginDelete (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginDelete(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="a180b-120">Фактическое состояние экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-120">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="a180b-121">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-121">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="a180b-122">Метод, вызываемый при завершении этой операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-122">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="a180b-123">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-123">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-124">При реализации в производном классе представляет начало этапа Delete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-124">When implemented in a derived class, represents the beginning of the Delete phase.</span>
          </span>
          <span data-ttu-id="a180b-125">Этап Delete наступает при окончательном удалении данных о состоянии службы из хранилища сохраняемости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-125">The Delete phase occurs when service state data is permanently deleted from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a180b-126">Состояние вызова асинхронного метода <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-126">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-127">В следующем коде демонстрируется реализация метода `BeginDelete`.</span><span class="sxs-lookup"><span data-stu-id="a180b-127">The following code demonstrates how to implement the `BeginDelete` method.</span></span> <span data-ttu-id="a180b-128">Данный пример кода является частью образца пакета SDK «DurableServiceFactory » из файла FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="a180b-128">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a180b-129"> Образец пакета SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="a180b-129"> the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#6](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginLoad (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginLoad(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="a180b-130">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-130">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="a180b-131">Метод, вызываемый при завершении этой операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-131">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="a180b-132">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-132">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-133">При реализации в производном классе представляет начало этапа Load.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-133">When implemented in a derived class, represents the beginning of the Load phase.</span>
          </span>
          <span data-ttu-id="a180b-134">Этап Load наступает при загрузке данных о состоянии в поставщика сохраняемости из хранилища сохраняемости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-134">The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a180b-135">Состояние вызова асинхронного метода <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-135">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-136">В следующем коде демонстрируется реализация метода `BeginLoad`.</span><span class="sxs-lookup"><span data-stu-id="a180b-136">The following code demonstrates how to implement the `BeginLoad` method.</span></span> <span data-ttu-id="a180b-137">Данный пример кода является частью образца пакета SDK «DurableServiceFactory » из файла FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="a180b-137">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a180b-138"> Образец пакета SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="a180b-138"> the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#7](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginLoadIfChanged (timeout As TimeSpan, instanceToken As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginLoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="a180b-139">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-139">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="instanceToken">
          <span data-ttu-id="a180b-140">Маркер, который возвращается предыдущим вызовом <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> или <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> и представляет текущее состояние, хранимое в вызывающем объекте.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-140">The token returned by a previous <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> or <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> that represents the current state held by the caller.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="a180b-141">Метод, вызываемый при завершении этой операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-141">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="a180b-142">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-142">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-143">При реализации в производном классе представляет начало этапа LoadIfChanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-143">When implemented in a derived class, represents the beginning of the LoadIfChanged phase.</span>
          </span>
          <span data-ttu-id="a180b-144">Этап LoadIfChanged наступает, когда данные о состоянии загружаются в поставщик сохраняемости из хранилища сохраняемости, данные о состоянии в хранилище сохраняемости изменены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-144">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a180b-145">Состояние вызова асинхронного метода <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-145">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-146">В следующем коде демонстрируется реализация метода <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="a180b-146">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#11](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginUpdate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginUpdate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="a180b-147">Фактическое состояние экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-147">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="a180b-148">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-148">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="a180b-149">Метод, вызываемый при завершении этой операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-149">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="a180b-150">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-150">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-151">При реализации в производном классе представляет начало этапа Update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-151">When implemented in a derived class, represents the beginning of the Update phase.</span>
          </span>
          <span data-ttu-id="a180b-152">Этап Update наступает при обновлении данных о состоянии службы в хранилище сохраняемости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-152">The Update phase occurs when service state data is updated in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a180b-153">Состояние вызова асинхронного метода <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-153">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-154">В следующем коде демонстрируется реализация метода <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate%2A>.</span><span class="sxs-lookup"><span data-stu-id="a180b-154">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#17](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public abstract object Create (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Create (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Create(System::Object ^ instance, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="a180b-155">Фактическое состояние экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-155">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="a180b-156">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-156">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-157">При реализации в производном классе создает запись состояния службы в хранилище сохраняемости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-157">When implemented in a derived class, creates a service state record in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a180b-158">Маркер экземпляра, соответствующий только что сохраненному состоянию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-158">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="a180b-159">Может передаваться в метод <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />, чтобы определить, отличается ли состояние в хранилище сохраняемости от состояния на момент вызова метода Create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-159">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-160">В следующем коде демонстрируется реализация метода <xref:System.ServiceModel.Persistence.PersistenceProvider.Create%2A>.</span><span class="sxs-lookup"><span data-stu-id="a180b-160">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Create%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#15](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public abstract void Delete (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Delete (instance As Object, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Delete(System::Object ^ instance, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="a180b-161">Фактическое состояние экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-161">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="a180b-162">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-162">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-163">При реализации в производном классе окончательно удаляет информацию о состоянии службы из хранилища сохраняемости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-163">When implemented in a derived class, permanently deletes service state information from the persistence store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-164">В следующем коде демонстрируется реализация метода <xref:System.ServiceModel.Persistence.PersistenceProvider.Delete%2A>.</span><span class="sxs-lookup"><span data-stu-id="a180b-164">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Delete%2A> method.</span></span> <span data-ttu-id="a180b-165">Данный пример кода является частью образца пакета SDK «DurableServiceFactory » из файла FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="a180b-165">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a180b-166"> Образец пакета SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="a180b-166"> the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#9](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreate">
      <MemberSignature Language="C#" Value="public abstract object EndCreate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndCreate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndCreate (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndCreate(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="a180b-167">Ссылка на результат операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-167">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-168">При реализации в производном классе представляет конец этапа Create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-168">When implemented in a derived class, represents the end of the Create phase.</span>
          </span>
          <span data-ttu-id="a180b-169">Этап Create наступает при первом создании записей состояния службы в хранилище сохраняемости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-169">The Create phase occurs when service state records are first created in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a180b-170">Маркер экземпляра, соответствующий только что сохраненному состоянию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-170">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="a180b-171">Может передаваться в метод <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />, чтобы определить, отличается ли состояние в хранилище сохраняемости от состояния на момент вызова метода Create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-171">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-172">В следующем коде демонстрируется реализация метода <xref:System.ServiceModel.Persistence.PersistenceProvider.EndCreate%2A>.</span><span class="sxs-lookup"><span data-stu-id="a180b-172">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndCreate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#16](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDelete">
      <MemberSignature Language="C#" Value="public abstract void EndDelete (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDelete(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndDelete (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndDelete(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="a180b-173">Ссылка на результат операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-173">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-174">При реализации в производном классе представляет конец этапа Delete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-174">When implemented in a derived class, represents the end of the Delete phase.</span>
          </span>
          <span data-ttu-id="a180b-175">Этап Delete наступает при окончательном удалении данных о состоянии из хранилища сохраняемости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-175">The Delete phase occurs when state data is permanently deleted from the persistence store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-176">В следующем коде демонстрируется реализация метода <xref:System.ServiceModel.Persistence.PersistenceProvider.EndDelete%2A>.</span><span class="sxs-lookup"><span data-stu-id="a180b-176">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndDelete%2A> method.</span></span> <span data-ttu-id="a180b-177">Данный пример кода является частью образца пакета SDK «DurableServiceFactory » из файла FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="a180b-177">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="a180b-178">Дополнительные сведения см. в образце пакета SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="a180b-178">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#5](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public abstract object EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndLoad (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndLoad(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="a180b-179">Ссылка на результат операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-179">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-180">При реализации в производном классе представляет конец этапа Load.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-180">When implemented in a derived class, represents the end of the Load phase.</span>
          </span>
          <span data-ttu-id="a180b-181">Этап Load наступает при загрузке данных о состоянии в поставщика сохраняемости из хранилища сохраняемости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-181">The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a180b-182">Сведения о состоянии службы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-182">The service state information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-183">В следующем примере кода показано использование метода `EndLoad`.</span><span class="sxs-lookup"><span data-stu-id="a180b-183">The following code demonstrates how to use the `EndLoad` method.</span></span> <span data-ttu-id="a180b-184">Данный пример кода является частью образца пакета SDK «DurableServiceFactory » из файла FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="a180b-184">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a180b-185"> Образец пакета SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="a180b-185"> the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#1](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool EndLoadIfChanged (IAsyncResult result, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndLoadIfChanged(class System.IAsyncResult result, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndLoadIfChanged (result As IAsyncResult, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndLoadIfChanged(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="instance" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="a180b-186">Ссылка на результат операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-186">A reference to the result of the operation.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="a180b-187">Фактическое состояние экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-187">The actual instance state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-188">При реализации в производном классе представляет конец этапа LoadIfChanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-188">When implemented in a derived class, represents the end of the LoadIfChanged phase.</span>
          </span>
          <span data-ttu-id="a180b-189">Этап LoadIfChanged наступает, когда данные о состоянии загружаются в поставщик сохраняемости из хранилища сохраняемости, данные о состоянии в хранилище сохраняемости изменены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-189">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a180b-190">Значение <see langword="true" />, если для параметра <see langword="out" /> экземпляра задана последняя копия из хранилища сохраняемости; значение <see langword="false" />, если локально кэшированное состояние не требует обновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-190">
              <see langword="true" /> if the instance <see langword="out" /> parameter has been set with the latest copy from the persistence store; <see langword="false" /> if the locally cached state is already up-to-date.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-191">В следующем коде демонстрируется реализация метода <xref:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="a180b-191">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#12](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public abstract object EndUpdate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndUpdate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndUpdate (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndUpdate(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="a180b-192">Ссылка на результат операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-192">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-193">Представляет конец этапа Update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-193">Represents the end of the Update phase.</span>
          </span>
          <span data-ttu-id="a180b-194">Этап Update наступает при обновлении записей состояния службы в хранилище сохраняемости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-194">The Update phase occurs when service state records are updated in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a180b-195">Маркер экземпляра, соответствующий только что сохраненному состоянию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-195">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="a180b-196">Может передаваться в метод <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />, чтобы определить, отличается ли состояние в хранилище сохраняемости от состояния на момент вызова метода Create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-196">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-197">В следующем коде демонстрируется реализация метода <xref:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate%2A>.</span><span class="sxs-lookup"><span data-stu-id="a180b-197">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#19](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.PersistenceProvider.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Id { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a180b-198">Представляет объект <see cref="T:System.Guid" />, связанный с данным экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-198">Represents the <see cref="T:System.Guid" /> associated with this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a180b-199">Идентификатор GUID, связанный с этим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-199">The GUID associated with this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-200">В следующем примере кода демонстрируется применение свойства <xref:System.ServiceModel.Persistence.PersistenceProvider.Id%2A>.</span><span class="sxs-lookup"><span data-stu-id="a180b-200">The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider.Id%2A> property.</span></span>  
  
 [!code-csharp[PersistenceProvider#10](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract object Load (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Load(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Load (timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Load(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="a180b-201">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-201">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-202">При реализации в производном классе загружает информацию о состоянии службы из хранилища сохраняемости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-202">When implemented in a derived class, loads service state information from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a180b-203">Загруженное состояние экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-203">The loaded instance state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a180b-204">Изменения, внесенные в параметры безопасности маркера в <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> метод, если не будут возвращены, остаются в силе в течение оставшейся части этого сообщения обработки.</span><span class="sxs-lookup"><span data-stu-id="a180b-204">Changes made to the security token in the <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> method, if not reverted, stay in effect for the remainder of that message's processing.</span></span> <span data-ttu-id="a180b-205">Это означает, что код пользователя операции службы, путь ответного сообщения через диспетчер, а также все пути ошибок выполняются в измененном контексте безопасности.</span><span class="sxs-lookup"><span data-stu-id="a180b-205">This means that the service operation's user code, the response message path through the dispatcher, as well as any error paths, run in the changed security context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a180b-206">В следующем коде демонстрируется реализация метода <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="a180b-206">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> method.</span></span> <span data-ttu-id="a180b-207">Данный пример кода является частью образца пакета SDK «DurableServiceFactory » из файла FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="a180b-207">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a180b-208"> Образец пакета SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="a180b-208"> the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#3](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadIfChanged (timeout As TimeSpan, instanceToken As Object, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool LoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="instance" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="a180b-209">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-209">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="instanceToken">
          <span data-ttu-id="a180b-210">Метка, возвращенная предыдущим вызовом <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> или <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />, которая представляет текущее состояние, в котором находится вызывающий объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-210">The token returned by a previous <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> or <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />, which represents the current state held by the caller.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="a180b-211">Фактическое состояние экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-211">The actual instance state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-212">При реализации в производном классе загружает информацию о состоянии службы из хранилища сохраняемости, если эти данные были изменены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-212">When implemented in a derived class, loads service state information from the persistence store if that data has been changed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a180b-213">Значение <see langword="true" />, если для параметра <paramref name="instance" /><see langword="out" /> задана последняя копия из хранилища сохраняемости; значение <see langword="false" />, если локально кэшированное состояние не требует обновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-213">
              <see langword="true" /> if the <paramref name="instance" /><see langword="out" /> parameter has been set with the latest copy from the persistence store; <see langword="false" /> if the locally cached state is already up to date.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-214">В следующем коде демонстрируется реализация метода <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="a180b-214">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#13](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract object Update (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Update(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Update (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Update(System::Object ^ instance, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="a180b-215">Фактическое состояние экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-215">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="a180b-216">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-216">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a180b-217">При реализации в производном классе обновляет записи состояния службы в хранилище сохраняемости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-217">When implemented in a derived class, updates service state records in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a180b-218">Маркер экземпляра, соответствующий только что сохраненному состоянию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-218">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="a180b-219">Может передаваться в метод <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />, чтобы определить, отличается ли состояние в хранилище сохраняемости от состояния на момент вызова метода Create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a180b-219">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a180b-220">В следующем коде демонстрируется реализация метода <xref:System.ServiceModel.Persistence.PersistenceProvider.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="a180b-220">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Update%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#18](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>