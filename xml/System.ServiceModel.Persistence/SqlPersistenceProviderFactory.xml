<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlPersistenceProviderFactory.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72cbcdeea4515414cca74a003bee4f7993a91b26ae.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cbcdeea4515414cca74a003bee4f7993a91b26ae</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>A system-provided <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" /&gt;</ph> implementation used to create a <ph id="ph2">&lt;see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /&gt;</ph> instance that uses a SQL database to store persisted service state data.</source>
          <target state="translated">Предоставляемая системой реализация <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" /&gt;</ph>, используемая для создания экземпляра <ph id="ph2">&lt;see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /&gt;</ph>, использующего базу данных SQL для хранения сведений о сохраняемом состоянии службы.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class represents a factory class for a fully-functional, durable service persistence provider.</source>
          <target state="translated">Класс <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> представляет класс фабрики для полнофункционального поставщика сохраняемых служб.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>You can use this system-provided provider to persist and retrieve state information about a durable WCF service.</source>
          <target state="translated">Для сохранения и получения сведений о создании устойчивой службы WCF, можно использовать этот поставщик, предоставляемый системой.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>In addition to persistence, the provider created by the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class implements locking of service state data records by inheriting from the abstract <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider&gt;</ph> class.</source>
          <target state="translated">Помимо сохраняемости, поставщик, созданный классом <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph>, реализует блокировку записей данных о состоянии службы путем наследования из абстрактного класса <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>Methods that interact with persisted data (such as <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A&gt;</ph>) have an optional parameter (<ph id="ph3">`lockInstance`</ph>) that defines whether locks on the data in question are released or maintained.</source>
          <target state="translated">Методы, взаимодействующие с хранимыми данными (такие как <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A&gt;</ph>) иметь необязательный параметр (<ph id="ph3">`lockInstance`</ph>), определяющее, является ли сняты или сохранены блокировки соответствующих данных.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Persistence.PersistenceException&gt;</ph> exceptions thrown by <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> do not have their exception details hidden by default.</source>
          <target state="translated">Для исключений <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.PersistenceException&gt;</ph>, вызываемых объектом <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph>, по умолчанию не скрываются подробные сведения.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>To protect against security vulnerabilities, these details can be hidden by setting <ph id="ph1">&lt;xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Чтобы обеспечить защиту от уязвимостей системы безопасности, эти сведения могут быть скрыты, задав <ph id="ph1">&lt;xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A&gt;</ph> для <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>The SQL Persistence Provider stores and retrieves data from a SQL Server database.</source>
          <target state="translated">Поставщик сохраняемости SQL сохраняет данные в базе данных SQL Server и извлекает их из этой базы.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database.</source>
          <target state="translated">Ведущее приложение должно создать безопасную среду SQL Server, чтобы защититься от злоумышленников, получающих доступ для чтения/записи данных о состоянии экземпляра либо в базе данных, либо на линии связи между приложением и базой данных.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>Overloads of the constructor for the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class provide parameters for setting the following:</source>
          <target state="translated">Перегружает конструктор для класса <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> и предоставляет параметры для задания перечисленного ниже.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>The connection string used for accessing the SQL database.</source>
          <target state="translated">Строка соединения, используемая для доступа к базе данных SQL.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>The lock time-out used for defining lock ownership duration.</source>
          <target state="translated">Время ожидания блокировки, используемое для задания длительности блокировки владения.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>Whether the persistence data is serialized as XML or binary data.</source>
          <target state="translated">Формат сериализации данных сохраняемости: XML или двоичные данные.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The collection of parameters used by the new persistence provider factory.</source>
          <target state="translated">Коллекция параметров, используемых новой фабрикой поставщика сохраняемости.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>Valid parameters include <ph id="ph1">&lt;see langword="lockTimeout" /&gt;</ph>, <ph id="ph2">&lt;see langword="connectionStringName" /&gt;</ph>, and <ph id="ph3">&lt;see langword="serializeAsText" /&gt;</ph>.</source>
          <target state="translated">В число допустимых параметров входят <ph id="ph1">&lt;see langword="lockTimeout" /&gt;</ph>, <ph id="ph2">&lt;see langword="connectionStringName" /&gt;</ph> и <ph id="ph3">&lt;see langword="serializeAsText" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph> class, configured with the specified parameter collection.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph>, настроенный с указанной коллекцией параметров.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>This constructor can be used to arbitrarily specify <ph id="ph1">`lockTimeout`</ph>, <ph id="ph2">`connectionString`</ph>, and <ph id="ph3">`serializeAsText`</ph> without specifying the other parameters as required by the other constructors (for example, to specify the <ph id="ph4">`connectionString`</ph> and <ph id="ph5">`lockTimeout`</ph> parameters without specifying the <ph id="ph6">`serializeAsText`</ph> parameter.)</source>
          <target state="translated">Этот конструктор можно использовать для произвольного задания параметров <ph id="ph1">`lockTimeout`</ph>, <ph id="ph2">`connectionString`</ph> и <ph id="ph3">`serializeAsText`</ph> без задания остальных параметров, необходимых для других конструкторов (например, чтобы задать параметры <ph id="ph4">`connectionString`</ph> и <ph id="ph5">`lockTimeout`</ph>, не задавая параметр <ph id="ph6">`serializeAsText`</ph>).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The following code example shows how to create a new instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class using a parameters collection.</source>
          <target state="translated">В следующем примере кода показано, как создать новый экземпляр класса <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph>, используя коллекцию параметров.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)">
          <source>The connection parameters for the new persistence provider instance.</source>
          <target state="translated">Параметры соединения для нового экземпляра поставщика сохраняемости.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph> class, configured with the specified connection string.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph>, настроенный с указанной строкой подключения.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)">
          <source>The following code example shows how to create a new instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class using a connection string.</source>
          <target state="translated">В следующем примере кода показано, как создать новый экземпляр класса <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph>, используя строку подключения.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)">
          <source>The connection parameters for the new persistence provider instance.</source>
          <target state="translated">Параметры соединения для нового экземпляра поставщика сохраняемости.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)">
          <source>Specifies whether data is serialized as text rather than binary.</source>
          <target state="translated">Задает, будут ли данные сериализованы как текст или как двоичные данные.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph> class, configured with the specified connection string and <ph id="ph2">&lt;see langword="serializeAsText" /&gt;</ph> parameters.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph>, настроенный с указанной строкой подключения и параметрами <ph id="ph2">&lt;see langword="serializeAsText" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)">
          <source>The default value for <ph id="ph1">`serializeAsText`</ph> is <ph id="ph2">`false`</ph>, which indicates that persistence information is serialized as binary data.</source>
          <target state="translated">Значение по умолчанию для <ph id="ph1">`serializeAsText`</ph> — <ph id="ph2">`false`</ph>, который указывает, сохраняемости информацию сериализуется как двоичные данные.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)">
          <source>The following code example shows how to create a new instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class.</source>
          <target state="translated">В следующем примере кода демонстрируется создание нового экземпляра класса <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>The connection parameters for the new persistence provider factory instance.</source>
          <target state="translated">Параметры соединения для нового экземпляра фабрики поставщика сохраняемости.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>Specifies whether data is serialized as text rather than binary.</source>
          <target state="translated">Задает, будут ли данные сериализованы как текст или как двоичные данные.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>The time-out for lock ownership.</source>
          <target state="translated">Время ожидания для блокировки владения.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>Locked instances are automatically unlocked after this time period.</source>
          <target state="translated">Заблокированные экземпляры автоматически разблокируются по прошествии этого времени.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>A time-out of <ph id="ph1">&lt;see langword="TimeSpan.Zero" /&gt;</ph> specifies that no locking is used.</source>
          <target state="translated">Время ожидания <ph id="ph1">&lt;see langword="TimeSpan.Zero" /&gt;</ph>означает, что блокировка не используется.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph> class, configured with the specified connection string, <ph id="ph2">&lt;see langword="serializeAsText" /&gt;</ph>, and <ph id="ph3">&lt;see langword="lockTimeout" /&gt;</ph> parameters.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph>, настроенный с указанной строкой подключения и параметрами <ph id="ph2">&lt;see langword="serializeAsText" /&gt;</ph> и <ph id="ph3">&lt;see langword="lockTimeout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>The default value for <ph id="ph1">`serializeAsText`</ph> is <ph id="ph2">`false`</ph>, which indicates that persistence information is serialized as binary data.</source>
          <target state="translated">Значение по умолчанию для <ph id="ph1">`serializeAsText`</ph> — <ph id="ph2">`false`</ph>, который указывает, сохраняемости информацию сериализуется как двоичные данные.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>The default value for <ph id="ph1">`lockTimeout`</ph> is <ph id="ph2">`TimeSpan.Zero`</ph>, which indicates that locking is not used.</source>
          <target state="translated">Значение по умолчанию для <ph id="ph1">`lockTimeout`</ph> — <ph id="ph2">`TimeSpan.Zero`</ph>, указывающая, что блокировка не используется.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>If <ph id="ph1">`TimeSpan.MaxValue`</ph> is used, then locks are maintained indefinitely.</source>
          <target state="translated">Если <ph id="ph1">`TimeSpan.MaxValue`</ph> используется, то блокировки сохраняются в течение неограниченного времени.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>The following code example shows how to create a new instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class.</source>
          <target state="translated">В следующем примере кода демонстрируется создание нового экземпляра класса <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString">
          <source>Gets the connection parameters for persistence provider instances created with this factory.</source>
          <target state="translated">Возвращает параметры соединения для экземпляров поставщика сохраняемости, создаваемых этой фабрикой.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString">
          <source>The connection parameters for persistence provider instances created with this factory.</source>
          <target state="translated">Параметры соединения для экземпляров поставщика сохраняемости, создаваемых этой фабрикой.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString">
          <source>The following code example shows how to set and access the <ph id="ph1">`ConnectionString`</ph> property.</source>
          <target state="translated">В следующем примере кода показано, как осуществляется задание свойства <ph id="ph1">`ConnectionString`</ph> и доступ к нему.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)">
          <source>The unique identifier of the persistence provider being created.</source>
          <target state="translated">Уникальный идентификатор создаваемого поставщика сохраняемости.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /&gt;</ph> instance that uses a SQL database as its persistence store.</source>
          <target state="translated">Инициализирует новый экземпляр <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /&gt;</ph>, использующий в качестве хранилища сохраняемости базу данных SQL.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)">
          <source>A newly-created <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /&gt;</ph>.</source>
          <target state="translated">Созданный новый объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)">
          <source>The initialized persistence provider uses the current parameters of the creating factory (<ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A&gt;</ph>), even if the factory's parameters are changed after the persistence provider is created.</source>
          <target state="translated">Инициализированный поставщик сохраняемости использует текущие параметры создающей фабрики (<ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A&gt;</ph> и <ph id="ph3">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A&gt;</ph>), даже если параметры фабрики изменились после создания поставщика сохраняемости.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)">
          <source>The following code example shows how to execute the <ph id="ph1">`CreateProvider`</ph> method.</source>
          <target state="translated">В следующем примере кода демонстрируется выполнение метода <ph id="ph1">`CreateProvider`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)">
          <source>Note that the resulting provider is accessed as a <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider&gt;</ph> instance.</source>
          <target state="translated">Обратите внимание, что обращение к получающемуся поставщику производится как к экземпляру <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout">
          <source>Gets the default time-out value used when persistence providers created with this factory are closed.</source>
          <target state="translated">Возвращает значение времени ожидания по умолчанию, используемое при закрытии поставщиков сохраняемости, созданных с помощью этой фабрики.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout">
          <source>The default time-out value.</source>
          <target state="translated">Значение времени ожидания по умолчанию.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout">
          <source>The default value for close time-out is 15 seconds.</source>
          <target state="translated">Значение по умолчанию для времени ожидания закрытия составляет 15 секунд.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout">
          <source>Gets the default time-out value used when persistence provider is opened.</source>
          <target state="translated">Возвращает значение времени ожидания по умолчанию, используемое при открытии поставщика сохраняемости.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout">
          <source>The default time-out value.</source>
          <target state="translated">Значение времени ожидания по умолчанию.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout">
          <source>The default value for open time-out is 15 seconds.</source>
          <target state="translated">Значение по умолчанию для времени ожидания открытия составляет 15 секунд.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout">
          <source>The time-out for lock ownership used by persistence provider instances created by this instance.</source>
          <target state="translated">Значение времени ожидания для блокировки владения, используемое экземплярами поставщика сохраняемости, созданными этим экземпляром.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout">
          <source>Locked instances are automatically unlocked after this time period.</source>
          <target state="translated">Заблокированные экземпляры автоматически разблокируются по прошествии этого времени.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout">
          <source>The time-out value for lock ownership.</source>
          <target state="translated">Значение времени ожидания для владения блокировкой.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout">
          <source>A time-out of <ph id="ph1">`TimeSpan.Zero`</ph> specifies that no locking is used.</source>
          <target state="translated">Время ожидания <ph id="ph1">`TimeSpan.Zero`</ph>означает, что блокировка не используется.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout">
          <source>The following code example shows how to access the <ph id="ph1">`LockTimeout`</ph> property.</source>
          <target state="translated">В следующем примере кода показано, как осуществляется доступ к свойству <ph id="ph1">`LockTimeout`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort">
          <source>Represents the Abort phase.</source>
          <target state="translated">Представляет этап прерывания.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort">
          <source><ph id="ph1">`OnAbort`</ph> fires when the service host shuts down abruptly and active commands currently being processed are closed.</source>
          <target state="translated"><ph id="ph1">`OnAbort`</ph> активируется, когда узел службы неожиданно завершает работу и активных команд, которые в данный момент обработка закрываются.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the operation is completed.</source>
          <target state="translated">Метод, вызываемый при завершении этой операции.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A user-provided object that distinguishes this particular asynchronous operation from other operations.</source>
          <target state="translated">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Represents the beginning of the Close phase.</source>
          <target state="translated">Представляет начало этапа Close.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The state of the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> asynchronous method call.</source>
          <target state="translated">Состояние вызова асинхронного метода <ph id="ph1">&lt;see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The Close phase occurs when the service is closed.</source>
          <target state="translated">Этап Close наступает при закрытии службы.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the operation is completed.</source>
          <target state="translated">Метод, вызываемый при завершении этой операции.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A user-provided object that distinguishes this particular asynchronous operation from other operations.</source>
          <target state="translated">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Represents the beginning of the Open phase.</source>
          <target state="translated">Представляет начало этапа Open.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The state of the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> asynchronous method call.</source>
          <target state="translated">Состояние вызова асинхронного метода <ph id="ph1">&lt;see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The Open phase occurs when the service is opened.</source>
          <target state="translated">Этап Open наступает при открытии службы.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)">
          <source>Represents the Close phase.</source>
          <target state="translated">Представляет этап Close.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)">
          <source>The Close phase occurs when the service is closed.</source>
          <target state="translated">Этап Close наступает при закрытии службы.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)">
          <source>A reference to the result of the operation.</source>
          <target state="translated">Ссылка на результат операции.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)">
          <source>Represents the end of the Close phase.</source>
          <target state="translated">Представляет конец этапа Close.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)">
          <source>The Close phase occurs when the service is closed.</source>
          <target state="translated">Этап Close наступает при закрытии службы.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)">
          <source>A reference to the result of the operation.</source>
          <target state="translated">Ссылка на результат операции.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)">
          <source>Represents the end of the Open phase.</source>
          <target state="translated">Представляет конец этапа Open.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)">
          <source>The Open phase occurs when the service is opened.</source>
          <target state="translated">Этап Open наступает при открытии службы.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)">
          <source>Represents the Open phase.</source>
          <target state="translated">Представляет этап Open.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)">
          <source>The Open phase occurs when the service is opened.</source>
          <target state="translated">Этап Open наступает при открытии службы.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText">
          <source>Specifies whether data is serialized as text rather than binary in persistence providers created with this factory.</source>
          <target state="translated">Указывает способ сериализации данных в поставщиках сохраняемости, созданных этой фабрикой: как текст или как двоичные данные.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service information is serialized as text; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если данные службы проходят сериализацию как текст, в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText">
          <source>The default value for <ph id="ph1">`serializeAsText`</ph> is <ph id="ph2">`false`</ph>, which indicates that persistence information is serialized as binary data.</source>
          <target state="translated">Значение по умолчанию для <ph id="ph1">`serializeAsText`</ph> — <ph id="ph2">`false`</ph>, который указывает, сохраняемости информацию сериализуется как двоичные данные.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText">
          <source>The following code example shows how to access the <ph id="ph1">`SerializeAsText`</ph> property.</source>
          <target state="translated">В следующем примере кода показано, как осуществляется доступ к свойству <ph id="ph1">`SerializeAsText`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>