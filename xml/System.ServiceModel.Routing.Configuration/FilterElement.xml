<Type Name="FilterElement" FullName="System.ServiceModel.Routing.Configuration.FilterElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="083c730c973b20da86f40bb60cf06534b54512ea" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32691696" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FilterElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FilterElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.Configuration.FilterElement" />
  <TypeSignature Language="VB.NET" Value="Public Class FilterElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterElement : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет элемент конфигурации, определяющий элемент фильтра. Этот элемент используется для определения типа фильтра, а также других вспомогательных данных или параметров, необходимых фильтру.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilterElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Routing.Configuration.FilterElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomType">
      <MemberSignature Language="C#" Value="public string CustomType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.CustomType" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("customType", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает полное имя для пользовательского типа, используемого в качестве фильтра.</summary>
        <value>Полный тип.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если для свойства <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A> задано значение «пользовательский», то свойство <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> должно быть полностью квалифицированным именем типа для создаваемого класса. <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> может содержать значения, используемые при вычислении фильтра <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A>. В <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> должен быть реализован конструктор, принимающий строковое значение, которое содержит сведения <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.  
  
 Дополнительные сведения см. в разделе <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter1">
      <MemberSignature Language="C#" Value="public string Filter1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter1" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter1" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter1 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("filter1", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает данные filter1 для этого элемента конфигурации. Это значение используется, только если свойство <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" /> имеет значение And.</summary>
        <value>Значение filter1 для этого элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Содержимое <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter1%2A> используется только во время вычисления фильтра AND. Дополнительные сведения см. в разделе <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter2">
      <MemberSignature Language="C#" Value="public string Filter2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter2" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter2" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter2 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter2 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("filter2", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает данные filter2 для этого элемента конфигурации. Это значение используется, только если свойство <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" /> имеет значение AND.</summary>
        <value>Значение filter2 для этого элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Содержимое <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter2%2A> используется только во время вычисления фильтров AND. Дополнительные сведения см. в разделе <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterData">
      <MemberSignature Language="C#" Value="public string FilterData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterData" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterData" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("filterData", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает данные фильтра для этого элемента конфигурации.</summary>
        <value>Данные фильтра для этого элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующий таблице описана функция <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> в зависимости от значения <xref:System.ServiceModel.Routing.Configuration.FilterType>.  
  
|Тип фильтра|Описание:|Значение данных фильтра|Пример фильтра|  
|------------------|-----------------|-------------------------|--------------------|  
|Действие|Использует ActionMessageFilter, входящий в состав WCF.|Действие, по которому производится фильтрация.|\<filter name="action1" filterType="Action" filterData="http://ACTION" />|  
|Адрес|Использует EndpointAddressMessageFilter, входящий в состав WCF, с параметром ignore host name == true.|Адрес, по которому будет выполняться фильтрация (в поле «Кому»).|\<Имя фильтра = filterType «address1» = «Адрес» filterData =»http://host/vdir/s.svc/b"/ >|  
|AddressPrefix|Использует PrefixEndpointAddressMessageFilter, входящий в состав WCF, с параметром ignore host name == true.|Адрес, по которому будет выполняться фильтрация с использованием самого длинного совпадающего префикса.|\<Имя фильтра = filterType «prefix1» = «AddressPrefix» filterData =»http://host"/ >|  
|StrictAnd|Пользовательский AndMessageFilter, который всегда проверяет оба условия перед возвратом значения.|Параметр filterData не используется. Вместо этого filter1 и filter2 содержат имена соответствующих фильтров сообщений (также упомянутых в таблице), к которым применяется логическая операция «И».|\<Имя фильтра = filterType «и «1 = фильтр1 «И» = «address1» filter2 = «action1» / >|  
|Другой|Определяемый пользователем тип, который расширяет класс MessageFilter и содержит конструктор, принимающий строку.|Атрибут customType является полным именем типа для создаваемого класса. Параметр filterData — это строка, передаваемая в конструктор при создании фильтра.|\<Имя фильтра = filterType «custom1» = «Custom» customType="CustomAssembly.CustomMsgFilter, CustomAssembly» filterData = «Пользовательские данные» / >|  
|EndpointName|Пользовательский фильтр сообщений, который используется исключительно в службе маршрутизации и фильтрует сообщения по имени конечной точки службы.|Имя конечной точки службы, например: «serviceEndpoint1».  Это должна быть одна из конечных точек, представленных в службе Routing Service.|\<Имя фильтра = «stock1» filterType = filterData «Конечная точка» = «SvcEndpoint»->|  
|MatchAll|Использует MatchAllMessageFilter, входящий в состав WCF.|Н/Д|\<Имя фильтра = filterType «matchAll1» = «MatchAll» / >|  
|XPath|Использует XPathMessageFilter, входящий в состав WCF.|Запрос XPath, используемый при сопоставлении сообщений.|\<Имя фильтра = filterType «XPath1» = «XPath» filterData = «//ns:element» / >|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterType">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Routing.Configuration.FilterType FilterType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Routing.Configuration.FilterType FilterType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterType As FilterType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Routing::Configuration::FilterType FilterType { System::ServiceModel::Routing::Configuration::FilterType get(); void set(System::ServiceModel::Routing::Configuration::FilterType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("filterType", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.IsRequired)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает тип <see cref="T:System.ServiceModel.Routing.Configuration.FilterType" /> этого элемента конфигурации.</summary>
        <value>Тип фильтра для этого элемента.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.IsKey | System.Configuration.ConfigurationPropertyOptions.IsRequired)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя данного элемента конфигурации.</summary>
        <value>Уникальное имя этого элемента конфигурации.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>