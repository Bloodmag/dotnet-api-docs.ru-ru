<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ImpersonateOnSerializingReplyMessageProperty.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55d3b3dcc8cbf09ae49800f488e29343a5c51de8f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5d3b3dcc8cbf09ae49800f488e29343a5c51de8f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty">
          <source>A helper class to enable impersonation while serializing the body of the reply message.</source>
          <target state="translated">Вспомогательный класс для включения олицетворения при сериализации тела ответного сообщения.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy">
          <source>Creates a copy of the message property.</source>
          <target state="translated">Создает копию свойства сообщения.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy">
          <source>The copy of the message property.</source>
          <target state="translated">Копия свойства сообщения.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name">
          <source>Gets the name of the message property.</source>
          <target state="translated">Получает имя свойства сообщения.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name">
          <source>The name of the message property.</source>
          <target state="translated">Имя свойства сообщения.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>When this method returns, contains the impersonated context.</source>
          <target state="translated">При возврате результатов этот метод содержит олицетворенный контекст.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>This parameter is treated as uninitialized.</source>
          <target state="translated">Этот параметр обрабатывается как неинициализированный.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>When this method returns, contains the original principal on the thread before invoking this method.</source>
          <target state="translated">Когда выполнение этого метода завершается, содержит исходный субъект в потоке до вызова этого метода.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>This parameter is treated as uninitialized.</source>
          <target state="translated">Этот параметр обрабатывается как неинициализированный.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>When this method returns, contains a value that indicates whether the principal was set on the thread by this method.</source>
          <target state="translated">Когда выполнение этого метода завершается, содержит значение, указывающее, был ли субъект задан в потоке этим методом.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>This parameter returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the operation context was not available to impersonate.</source>
          <target state="translated">Этот параметр возвращает значение <ph id="ph1">&lt;see langword="false" /&gt;</ph>, если контекст операции был недоступен для олицетворения.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>This parameter is treated as uninitialized.</source>
          <target state="translated">Этот параметр обрабатывается как неинициализированный.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>Starts impersonating with the caller's context if impersonation is enabled on the service and sets the appropriate principal on the thread as per the service configuration.</source>
          <target state="translated">Запускает олицетворение с контекстом вызывающего объекта, если для службы включено олицетворение, и задает соответствующий субъект в потоке согласно конфигурации службы.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)">
          <source>The impersonation context to revert.</source>
          <target state="translated">Контекст олицетворения для отмены изменений.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)">
          <source>The original principal to set on the thread.</source>
          <target state="translated">Исходный субъект, который требуется задать в потоке.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)">
          <source>A value that indicates whether the thread principal was set during impersonation.</source>
          <target state="translated">Значение, указывающее, был ли задан субъект потока во время олицетворения.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the principal was set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если субъект установлен; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)">
          <source>Reverts impersonation and sets the specified original principal on the thread.</source>
          <target state="translated">Отменяет олицетворение и устанавливает указанный исходный субъект в потоке.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> property from the specified message or message properties.</source>
          <target state="translated">Получает свойство <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> из указанного сообщения или свойств сообщения.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source>The message from which to extract the property.</source>
          <target state="translated">Сообщение, из которого требуется извлечь свойство.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> property extracted from the message.</source>
          <target state="translated">Когда выполнение этого метода завершается, содержит свойство <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph>, извлеченное из сообщения.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> property from the specified message.</source>
          <target state="translated">Получает свойство <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> из указанного сообщения.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the  property was found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если свойство найдено; в противном случае значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source>The message properties object from which to extract the property.</source>
          <target state="translated">Объект свойств сообщения, из которого требуется извлечь свойство.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> property extracted from the message.</source>
          <target state="translated">Когда выполнение этого метода завершается, содержит свойство <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph>, извлеченное из сообщения.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> property from the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> object..</source>
          <target state="translated">Получает свойство <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> из указанного объекта <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the  property was found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если свойство найдено; в противном случае значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>