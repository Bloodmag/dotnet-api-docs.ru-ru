<Type Name="SecurityAlgorithmSuite" FullName="System.ServiceModel.Security.SecurityAlgorithmSuite">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="273047e679aef6a68ea353260abff1dfa1131aba" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30520238" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityAlgorithmSuite" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract SecurityAlgorithmSuite extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityAlgorithmSuite" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityAlgorithmSuite abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9a2f8-101">Задает свойства алгоритмов.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9a2f8-101">Specifies properties of algorithms.</span>
      </span>
      <span data-ttu-id="9a2f8-102">Это класс <see langword="abstract" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9a2f8-102">This is an <see langword="abstract" /> class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-103">Экземпляры этого класса используются для определения характеристик алгоритмов шифрования, применяемых для защиты сообщений.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-103">Instances of this class are used to specify the cryptographic characteristics of the algorithms used when securing messages.</span></span>  
  
 <span data-ttu-id="9a2f8-104">Этот класс используется производными классами для создания экземпляров наборов алгоритмов безопасности, а также содержит свойства, описывающие алгоритмы безопасности.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-104">This class is used by derived classes to instantiate security algorithm suites, and contains properties that describe the security algorithms.</span></span> <span data-ttu-id="9a2f8-105">Например, в привязке `wsBasicHttp` используется внутренний производный класс, задающий свойства алгоритмов безопасности.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-105">For example, the `wsBasicHttp` binding uses an internal derived class to specify the properties of its security algorithms.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityAlgorithmSuite ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityAlgorithmSuite();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-106">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-107">Экземпляры этого класса состоят из статических свойств и свойств, доступных только для чтения, поэтому в конструкторе класса свойства не инициализируются.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-107">The instances of this class consist of static properties and read-only properties, so the constructor does not initialize any properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-108">Возвращает набор алгоритмов Basic128.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-108">Gets the Basic128 algorithm suite.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-109">Базовый 128-разрядный набор алгоритмов <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-109">The 128-bit Basic <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-110">По умолчанию используется AES-128 в качестве алгоритма шифрования.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-110">By default, AES-128 is used as the encryption algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-111">Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, а в качестве алгоритма шифрования сообщений — базовый 128-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-111">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-112">Набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, а в качестве алгоритма шифрования сообщений — базовый 128-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-112">An algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-113">Возвращаемый набор алгоритмов <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> фактически представляет собой внутренний подкласс, в котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-113">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-114">Возвращает набор алгоритмов, в котором в качестве алгоритма создания хэша сигнатуры используется SHA256, а в качестве алгоритма шифрования сообщений — базовый 128-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-114">Gets an algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-115">Набор алгоритмов, в котором в качестве алгоритма создания хэша сигнатуры используется SHA256, а в качестве алгоритма шифрования сообщений — базовый 128-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-115">An algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-116">Возвращаемый набор алгоритмов <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> фактически представляет собой внутренний подкласс, в котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-116">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-117">Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, в качестве алгоритма создания хэша сигнатуры — SHA256, а в качестве алгоритма шифрования сообщений — базовый 128-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-117">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-118">Набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, в качестве алгоритма создания хэша сигнатуры — SHA256, а в качестве алгоритма шифрования сообщений — базовый 128-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-118">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-119">Возвращаемый набор алгоритмов <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> фактически представляет собой внутренний подкласс, в котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-119">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-120">Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования сообщений используется базовый 192-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-120">Gets an algorithm suite that uses 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-121">Набор алгоритмов, в котором в качестве алгоритма шифрования сообщений используется базовый 192-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-121">An algorithm suite that uses 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-122">По умолчанию в качестве алгоритма шифрования используется алгоритм AES-192.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-122">By default, AES-192 is used as the encryption algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-123">Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, а в качестве алгоритма шифрования сообщений — базовый 192-битовый алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-123">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-124">Набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей и базовый 192-разрядный в качестве алгоритма шифрования сообщений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-124">An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-125">Возвращаемый набор алгоритмов <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> фактически представляет собой внутренний подкласс, в котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-125">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-126">Возвращает набор алгоритмов, в котором в качестве алгоритма создания хэш-кода сигнатуры используется SHA256, а в качестве алгоритма шифрования сообщений — базовый 192-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-126">Gets an algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-127">Набор алгоритмов, в котором в качестве алгоритма создания хэша сигнатуры используется SHA256, а в качестве алгоритма шифрования сообщений — базовый 192-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-127">An algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-128">Возвращаемый набор алгоритмов <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> фактически представляет собой внутренний подкласс, в котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-128">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-129">Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, в качестве алгоритма создания хэш-кода сигнатуры — SHA256, а в качестве алгоритма шифрования сообщений — базовый 192-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-129">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-130">Набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей, SHA256 для хэш-кода сигнатуры и базовый 192-разрядный в качестве алгоритма шифрования сообщений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-130">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-131">Возвращаемый набор алгоритмов <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> фактически представляет собой внутренний подкласс, в котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-131">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-132">Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования сообщений используется базовый 256-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-132">Gets an algorithm suite that uses 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-133">Набор алгоритмов, в качестве алгоритма шифрования сообщений используется базовый 256-разрядный.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-133">An algorithm suite that uses 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-134">По умолчанию в качестве алгоритма шифрования используется алгоритм AES-256.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-134">By default, AES-256 is used for the encryption algorithm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a2f8-135">В следующем примере кода показано, как присвоить этому свойству значение <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-135">The following code shows how to set <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> to this property.</span></span>  
  
 [!code-csharp[c_ProgrammingSecurity#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_programmingsecurity/cs/source.cs#8)]
 [!code-vb[c_ProgrammingSecurity#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_programmingsecurity/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-136">Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, а в качестве алгоритма шифрования сообщений — базовый 256-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-136">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-137">Набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей и базовый 256-разрядный в качестве алгоритма шифрования сообщений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-137">An algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-138">Возвращаемый набор алгоритмов <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> фактически представляет собой внутренний подкласс, в котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-138">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-139">Возвращает набор алгоритмов, в котором в качестве алгоритма создания хэша сигнатуры используется SHA256, а в качестве алгоритма шифрования сообщений — базовый 256-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-139">Gets an algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-140">Набор алгоритмов, используется SHA256 для хэш-кода сигнатуры и базовый 256-разрядный в качестве алгоритма шифрования сообщений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-140">An algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-141">Возвращаемый набор алгоритмов <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> фактически представляет собой внутренний подкласс, в котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-141">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-142">Получает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, в качестве алгоритма создания хэша сигнатуры — SHA256, а в качестве алгоритма шифрования сообщений — базовый 256-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-142">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-143">Набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, в качестве алгоритма создания хэша сигнатуры — SHA256, а в качестве алгоритма шифрования сообщений — базовый 256-разрядный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-143">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-144">Возвращаемый набор алгоритмов <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> фактически представляет собой внутренний подкласс, в котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-144">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Default" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Default { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-145">Возвращает набор алгоритмов по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-145">Gets the default algorithm suite.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-146">В качестве набора алгоритмов <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> по умолчанию выбран <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, в котором используется 256-разрядный алгоритм симметричного шифрования AES (Advanced Encryption Standard).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-146">The default <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-147">Возвращаемый набор алгоритмов <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> фактически представляет собой внутренний подкласс, в котором переопределены свойства, задающие значения по умолчанию, а также некоторые методы.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-147">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides the properties specifying default values as well as the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAsymmetricKeyWrapAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultAsymmetricKeyWrapAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAsymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultAsymmetricKeyWrapAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultAsymmetricKeyWrapAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-148">Возвращает используемый по умолчанию алгоритм шифрования асимметричного ключа в виде строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-148">Gets the default asymmetric key wrap algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-149">Алгоритм шифрования асимметричного ключа по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-149">The default asymmetric key wrap algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-150">При переопределении возвращает строковое значение, которое будет использоваться для сравнения в методе <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-150">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAsymmetricSignatureAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultAsymmetricSignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAsymmetricSignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultAsymmetricSignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultAsymmetricSignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-151">Возвращает используемый по умолчанию асимметричный алгоритм создания сигнатуры в виде строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-151">Gets the default asymmetric signature algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-152">Асимметричный алгоритм создания сигнатуры по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-152">The default asymmetric signature algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-153">При переопределении возвращает строковое значение, которое будет использоваться для сравнения в методе <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-153">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCanonicalizationAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultCanonicalizationAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultCanonicalizationAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCanonicalizationAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultCanonicalizationAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-154">Возвращает используемый по умолчанию алгоритм канонизации в виде строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-154">Gets the default canonicalization algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-155">Алгоритм канонизации по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-155">The default canonicalization algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-156">При переопределении возвращает строковое значение, которое будет использоваться для сравнения в методе <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-156">When overridden, provides a string value that will be used for comparison in the method <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDigestAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultDigestAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultDigestAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultDigestAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultDigestAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-157">Возвращает используемый по умолчанию алгоритм хэш-кода в виде строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-157">Gets the default digest algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-158">Алгоритм выборки по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-158">The default digest algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-159">При переопределении возвращает строковое значение, которое будет использоваться для сравнения в методе <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-159">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultEncryptionAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultEncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultEncryptionAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultEncryptionAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-160">Возвращает используемый по умолчанию алгоритм шифрования в виде строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-160">Gets the default encryption algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-161">Алгоритм шифрования по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-161">The default encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-162">При переопределении возвращает строковое значение, которое будет использоваться для сравнения в методе <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-162">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEncryptionKeyDerivationLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultEncryptionKeyDerivationLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultEncryptionKeyDerivationLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultEncryptionKeyDerivationLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultEncryptionKeyDerivationLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-163">Возвращает длину производного ключа шифрования по умолчанию в виде значения <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-163">Gets the default encryption key derivation length as an <see cref="T:System.Int32" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-164">Длина производного ключа шифрования по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-164">The default encryption key derivation length.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-165">Возвращаемое значение меняется в зависимости от подкласса, в котором оно реализовано.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-165">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="9a2f8-166">Для алгоритма шифрования `Basic256` возвращается значение 256.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-166">For `Basic256` encryption, it returns 256.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSignatureKeyDerivationLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultSignatureKeyDerivationLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSignatureKeyDerivationLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSignatureKeyDerivationLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultSignatureKeyDerivationLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-167">Возвращает длину производного ключа сигнатуры по умолчанию в виде значения <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-167">Gets the default signature key derivation length as an <see cref="T:System.Int32" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-168">Длина производного ключа сигнатуры по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-168">The default signature key derivation length.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-169">Возвращаемое значение меняется в зависимости от подкласса, в котором оно реализовано.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-169">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="9a2f8-170">Для `Basic256` шифрования, он возвращает 192.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-170">For `Basic256` encryption, it returns 192.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeyLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultSymmetricKeyLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSymmetricKeyLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricKeyLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultSymmetricKeyLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-171">Возвращает длину симметричного ключа по умолчанию в виде значения <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-171">Gets the default symmetric key length as an <see cref="T:System.Int32" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-172">Длина симметричного ключа по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-172">The default symmetric key length.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-173">Возвращаемое значение меняется в зависимости от подкласса, в котором оно реализовано.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-173">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="9a2f8-174">Для алгоритма шифрования `Basic256` возвращается значение 256.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-174">For `Basic256` encryption, it returns 256.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeyWrapAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultSymmetricKeyWrapAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultSymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricKeyWrapAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultSymmetricKeyWrapAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-175">Возвращает используемый по умолчанию алгоритм шифрования симметричного ключа в виде строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-175">Gets the default symmetric key wrap algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-176">Алгоритм шифрования симметричного ключа по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-176">The default symmetric key wrap algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricSignatureAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultSymmetricSignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultSymmetricSignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricSignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultSymmetricSignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-177">Получает симметричный алгоритм подписи по умолчанию в виде строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-177">Gets the default symmetric signature algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-178">Симметричный алгоритм создания сигнатуры по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-178">The default symmetric signature algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricKeyLengthSupported">
      <MemberSignature Language="C#" Value="public abstract bool IsAsymmetricKeyLengthSupported (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricKeyLengthSupported(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsAsymmetricKeyLengthSupported (length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsAsymmetricKeyLengthSupported(int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="9a2f8-179">Проверяемая длина ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-179">The key length to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a2f8-180">Указывает, поддерживается ли асимметричным алгоритмом конкретная длина ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-180">Indicates whether a particular key length is supported by the asymmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a2f8-181">Значение <see langword="true" />, если длина ключа поддерживается асимметричным алгоритмом; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-181">
              <see langword="true" /> if the key length is supported by the asymmetric algorithm; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-182">Обычно используются ключи длиной 128, 192 и 256 бит.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-182">Typical key lengths are 128, 192, and 256 bits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricKeyWrapAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsAsymmetricKeyWrapAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricKeyWrapAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAsymmetricKeyWrapAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAsymmetricKeyWrapAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="9a2f8-183">Проверяемый алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-183">The algorithm to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a2f8-184">Указывает, поддерживается ли алгоритм шифрования асимметричного ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-184">Indicates whether an asymmetric key wrap algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a2f8-185">Значение <see langword="true" />, если алгоритм шифрования асимметричного ключа поддерживается; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-185">
              <see langword="true" /> if the asymmetric key wrap algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-186">Алгоритм `algorithm` сравнивается со строкой, возвращенной методом <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-186">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricSignatureAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsAsymmetricSignatureAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricSignatureAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAsymmetricSignatureAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAsymmetricSignatureAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="9a2f8-187">Имя алгоритма для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-187">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a2f8-188">Указывает, поддерживается ли асимметричный алгоритм создания сигнатуры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-188">Indicates whether an asymmetric signature algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a2f8-189">Значение <see langword="true" />, если асимметричный алгоритм создания сигнатуры поддерживается; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-189">
              <see langword="true" /> if the asymmetric signature algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-190">Алгоритм `algorithm` сравнивается со строкой, возвращенной методом <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-190">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanonicalizationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsCanonicalizationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCanonicalizationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsCanonicalizationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsCanonicalizationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="9a2f8-191">Имя алгоритма для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-191">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a2f8-192">Указывает, поддерживается ли алгоритм канонизации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-192">Indicates whether a canonicalization algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a2f8-193">Значение <see langword="true" />, если алгоритм канонизации поддерживается; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-193">
              <see langword="true" /> if the canonicalization algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-194">Алгоритм `algorithm` сравнивается со строкой, возвращенной методом <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-194">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDigestAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsDigestAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDigestAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDigestAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDigestAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="9a2f8-195">Имя алгоритма для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-195">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a2f8-196">Указывает, поддерживается ли алгоритм хэш-кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-196">Indicates whether a digest algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a2f8-197">Значение <see langword="true" />, если алгоритм хэширования поддерживается; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-197">
              <see langword="true" /> if the digest algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-198">Алгоритм `algorithm` сравнивается со строкой, возвращенной методом <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-198">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptionAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsEncryptionAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEncryptionAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEncryptionAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEncryptionAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="9a2f8-199">Имя алгоритма для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-199">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a2f8-200">Указывает, поддерживается ли алгоритм шифрования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-200">Indicates whether an encryption algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a2f8-201">Значение <see langword="true" />, если алгоритм шифрования поддерживается; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-201">
              <see langword="true" /> if the encryption algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-202">Алгоритм `algorithm` сравнивается со строкой, возвращенной методом <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-202">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptionKeyDerivationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsEncryptionKeyDerivationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEncryptionKeyDerivationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEncryptionKeyDerivationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEncryptionKeyDerivationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="9a2f8-203">Имя алгоритма для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-203">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a2f8-204">Указывает, поддерживается ли алгоритм создания производных ключей шифрования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-204">Indicates whether an encryption key derivation algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a2f8-205">Значение <see langword="true" />, если алгоритм создания производных ключей шифрования поддерживается; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-205">
              <see langword="true" /> if the encryption key derivation algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignatureKeyDerivationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSignatureKeyDerivationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignatureKeyDerivationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignatureKeyDerivationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignatureKeyDerivationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="9a2f8-206">Имя алгоритма для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-206">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a2f8-207">Указывает, поддерживается ли алгоритм создания производных ключей сигнатуры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-207">Indicates whether a signature key derivation algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a2f8-208">Значение <see langword="true" />, если алгоритм создания производных ключей сигнатуры поддерживается; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-208">
              <see langword="true" /> if the signature key derivation algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricKeyLengthSupported">
      <MemberSignature Language="C#" Value="public abstract bool IsSymmetricKeyLengthSupported (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricKeyLengthSupported(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSymmetricKeyLengthSupported (length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSymmetricKeyLengthSupported(int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="9a2f8-209">Проверяемая длина ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-209">The key length to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a2f8-210">При переопределении в производном классе указывает, поддерживается ли конкретная длина симметричного ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-210">When overridden in a derived class, indicates whether a particular symmetric key length is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a2f8-211">Значение <see langword="true" />, если длина симметричного ключа поддерживается; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-211">
              <see langword="true" /> if the symmetric key length is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-212">Значение `length` сравнивается с диапазоном значений для конкретного подкласса.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-212">The `length` is compared to a range of values depending on the subclass.</span></span> <span data-ttu-id="9a2f8-213">Например, в подклассе `TripleDES` этот метод проверяет, попадает ли значение `length` в диапазон от 192 до 256 (включительно).</span><span class="sxs-lookup"><span data-stu-id="9a2f8-213">For example, in the `TripleDES` subclass, this method verifies that `length` is between 192 and 256, inclusive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricKeyWrapAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSymmetricKeyWrapAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricKeyWrapAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSymmetricKeyWrapAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSymmetricKeyWrapAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="9a2f8-214">Имя алгоритма для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-214">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a2f8-215">Указывает, поддерживается ли алгоритм шифрования симметричного ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-215">Indicates whether a symmetric key wrap algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a2f8-216">Значение <see langword="true" />, если алгоритм шифрования симметричного ключа поддерживается; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-216">
              <see langword="true" /> if the symmetric key wrap algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricSignatureAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSymmetricSignatureAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricSignatureAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSymmetricSignatureAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSymmetricSignatureAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="9a2f8-217">Имя алгоритма для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-217">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a2f8-218">Указывает, поддерживается ли симметричный алгоритм создания сигнатуры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-218">Indicates whether a symmetric signature algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a2f8-219">Значение <see langword="true" />, если симметричный алгоритм создания сигнатуры поддерживается; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-219">
              <see langword="true" /> if the symmetric signature algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDes">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDes As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDes { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-220">Возвращает набор алгоритмов 3DES (Triple Data Encryption Standard).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-220">Gets the Triple Data Encryption Standard (DES) algorithm suite.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-221">Набор алгоритмов 3DES <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-221">The Triple DES <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-222">Возвращаемый набор алгоритмов <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> фактически представляет собой внутренний подкласс, в котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-222">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesRsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesRsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesRsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-223">Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, а в качестве алгоритма шифрования сообщений — 192-разрядный 3DES (Triple Data Encryption Standard).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-223">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-224">Набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, а в качестве алгоритма шифрования сообщений — 192-разрядный 3DES (Triple Data Encryption Standard).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-224">An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-225">Возвращаемый набор алгоритмов <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> фактически представляет собой внутренний подкласс, в котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-225">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesSha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesSha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesSha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-226">Возвращает набор алгоритмов, в котором в качестве алгоритма создания хэша сигнатуры используется SHA256, а в качестве алгоритма шифрования сообщений — 192-разрядный 3DES (Triple Data Encryption Standard).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-226">Gets an algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-227">Набор алгоритмов, в котором в качестве алгоритма создания хэша сигнатуры используется SHA256, а в качестве алгоритма шифрования сообщений — 192-разрядный 3DES (Triple Data Encryption Standard).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-227">An algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-228">Возвращаемый набор алгоритмов <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> фактически представляет собой внутренний подкласс, в котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-228">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesSha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesSha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesSha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a2f8-229">Возвращает набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, в качестве алгоритма создания хэша сигнатуры — SHA256, а в качестве алгоритма шифрования сообщений — 192-разрядный 3DES (Triple Data Encryption Standard).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-229">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a2f8-230">Набор алгоритмов, в котором в качестве алгоритма шифрования ключей используется RSA15, в качестве алгоритма создания хэша сигнатуры — SHA256, а в качестве алгоритма шифрования сообщений — 192-разрядный 3DES (Triple Data Encryption Standard).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a2f8-230">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a2f8-231">Возвращаемый набор алгоритмов <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> фактически представляет собой внутренний подкласс, в котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</span><span class="sxs-lookup"><span data-stu-id="9a2f8-231">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>