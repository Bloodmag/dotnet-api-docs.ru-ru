<Type Name="SyndicationFeed" FullName="System.ServiceModel.Syndication.SyndicationFeed">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe635a15eb1d7f7a82bb7e0c502c3fe3586cc900" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32037817" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SyndicationFeed" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SyndicationFeed extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.SyndicationFeed" />
  <TypeSignature Language="VB.NET" Value="Public Class SyndicationFeed" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyndicationFeed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет объект веб-канала верхнего уровня: &lt;<see langword="feed" />&gt; в Atom 1.0 и &lt;<see langword="rss" />&gt; в RSS 2.0.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации в Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationFeed> экземпляр записывается в <`feed`> элемент. Следующая таблица показывает, как выполняется сериализация в Atom 1.0 для каждого свойства, определенного в классе <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
|Свойство SyndicationFeed|Сериализованная форма|  
|------------------------------|---------------------|  
|`AttributeExtensions`|Атрибут в <`feed`> элемент для каждого атрибута в коллекции.|  
|`Authors`|<`author`> Для каждого элемента <xref:System.ServiceModel.Syndication.SyndicationPerson> в коллекции.|  
|`Categories`|A <`category`> для каждого элемента <xref:System.ServiceModel.Syndication.SyndicationCategory> в коллекции.|  
|`Contributors`|A <`contributor`> для каждого элемента <xref:System.ServiceModel.Syndication.SyndicationPerson> в коллекции.|  
|`Copyright`|A <`rights`> элемент.|  
|`Description`|A <`subtitle`> элемент.|  
|`ElementExtensions`|Каждый элемент в коллекции, заключенное в <`feed`> элемент.|  
|`Generator`|A <`generator`> элемент.|  
|`Id`|<`id`> Элемент.|  
|`ImageUri`|A <`logo`> элемент.|  
|`Items`|<`entry`> Для каждого элемента <xref:System.ServiceModel.Syndication.SyndicationItem> в коллекции.|  
|`Language`|Не является сериализованным.|  
|`LastUpdatedTime`|<`updated`> Элемент.|  
|`Links`|A <`link`> для каждого элемента <xref:System.ServiceModel.Syndication.SyndicationLink> в коллекции.|  
|`Title`|A <`title`> элемент.|  
  
 При сериализации в RSS 2.0 <xref:System.ServiceModel.Syndication.SyndicationFeed> экземпляр записывается в <`rss`> элемент. Следующая таблица показывает, как выполняется сериализация в RSS 2.0 для каждого свойства, определенного в классе <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
|Свойство SyndicationFeed|Сериализованная форма|  
|------------------------------|---------------------|  
|`AttributeExtensions`|Атрибут в <`channel`> элемент для каждого атрибута в коллекции.|  
|`Authors`|A <`managingEditor`> элемент, если только один <xref:System.ServiceModel.Syndication.SyndicationPerson> содержится в коллекции; в противном случае <`a10:author`> для каждого элемента <xref:System.ServiceModel.Syndication.SyndicationPerson> в коллекции.|  
|`Categories`|A <`category`> для каждого элемента <xref:System.ServiceModel.Syndication.SyndicationCategory> в коллекции.|  
|`Contributors`|<`a10:contributor`> Для каждого элемента <xref:System.ServiceModel.Syndication.SyndicationPerson> в коллекции.|  
|`Copyright`|A <`copyright`> элемент.|  
|`Description`|A <`description`> элемент.|  
|`ElementExtensions`|Каждый элемент в коллекции, заключенное в <`channel`> элемент.|  
|`Generator`|A <`generator`> элемент.|  
|`Id`|<`a10:id`> Элемент.|  
|`ImageUri`|<`image`> Элемент.|  
|`Items`|<`item`> Для каждого элемента <xref:System.ServiceModel.Syndication.SyndicationItem> в коллекции.|  
|`Language`|A <`language`> элемент.|  
|`LastUpdatedTime`|A <`lastBuildDate`> элемент.|  
|`Links`|<`a10:link`> Для каждого элемента <xref:System.ServiceModel.Syndication.SyndicationLink> в коллекции.|  
|`Title`|A <`title`> элемент.|  
  
   
  
## Examples  
 В следующем примере кода показано, как создать экземпляр <xref:System.ServiceModel.Syndication.SyndicationFeed> и выполнить его сериализацию в Atom 1.0 и RSS 2.0.  
  
 [!code-csharp[SyndicationFeed#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#0)]
 [!code-vb[SyndicationFeed#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#0)]  
  
 В следующем XML-коде показано, как объект <xref:System.ServiceModel.Syndication.SyndicationFeed> сериализуется в Atom 1.0.  
  
 [!code-xml[SyndicationFeed#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#1)]  
  
 В следующем XML-коде показано, как экземпляр <xref:System.ServiceModel.Syndication.SyndicationFeed> сериализуется в RSS 2.0.  
  
 [!code-xml[SyndicationFeed#2](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of SyndicationItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> с указанной коллекцией объектов <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Выполняется буферизация коллекции объектов <xref:System.ServiceModel.Syndication.SyndicationItem>, переданной в данный конструктор.  
  
   
  
## Examples  
 В следующем примере показан вызов этого конструктора.  
  
 [!code-csharp[SyndicationFeed#3](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#3)]
 [!code-vb[SyndicationFeed#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SyndicationFeed (System.ServiceModel.Syndication.SyndicationFeed source, bool cloneItems);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Syndication.SyndicationFeed source, bool cloneItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As SyndicationFeed, cloneItems As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SyndicationFeed(System::ServiceModel::Syndication::SyndicationFeed ^ source, bool cloneItems);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.ServiceModel.Syndication.SyndicationFeed" />
        <Parameter Name="cloneItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">Для инициализации нового экземпляра используется объект <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</param>
        <param name="cloneItems">Значение, указывающее на необходимость клонирования элементов в исходном экземпляре.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> с указанным веб-каналом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если параметр `cloneItems` имеет значение `true`, все экземпляры <xref:System.ServiceModel.Syndication.SyndicationItem> в исходном экземпляре <xref:System.ServiceModel.Syndication.SyndicationFeed> клонируются и добавляются в коллекцию <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> нового экземпляра <xref:System.ServiceModel.Syndication.SyndicationFeed>. Если параметр `cloneItems` имеет значение `false`, коллекция <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> нового экземпляра <xref:System.ServiceModel.Syndication.SyndicationFeed> содержит ссылки на существующие экземпляры <xref:System.ServiceModel.Syndication.SyndicationItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="title">Заголовок канала.</param>
        <param name="description">Описание веб-канала.</param>
        <param name="feedAlternateLink">Универсальный код ресурса (URI) для веб-канала.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> с заданным заголовком, описанием и универсальным кодом ресурса (URI).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показан вызов этого конструктора.  
  
 [!code-csharp[SyndicationFeed#4](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#4)]
 [!code-vb[SyndicationFeed#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri, items As IEnumerable(Of SyndicationItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;" />
      </Parameters>
      <Docs>
        <param name="title">Заголовок канала.</param>
        <param name="description">Описание веб-канала.</param>
        <param name="feedAlternateLink">Универсальный код ресурса (URI) для веб-канала.</param>
        <param name="items">Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> с заданным заголовком, описанием, универсальным кодом ресурса (URI) и коллекцией объектов <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показан вызов этого конструктора.  
  
 [!code-csharp[SyndicationFeed#5](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#5)]
 [!code-vb[SyndicationFeed#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink, string id, DateTimeOffset lastUpdatedTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink, string id, valuetype System.DateTimeOffset lastUpdatedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri, id As String, lastUpdatedTime As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink, System::String ^ id, DateTimeOffset lastUpdatedTime);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lastUpdatedTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="title">Заголовок веб-канала.</param>
        <param name="description">Описание веб-канала синдикации.</param>
        <param name="feedAlternateLink">Альтернативный универсальный код ресурса (URI) для веб-канала.</param>
        <param name="id">Идентификатор веб-канала синдикации.</param>
        <param name="lastUpdatedTime">Экземпляр <see cref="T:System.DateTimeOffset" />, содержащий время последнего обновления веб-канала синдикации.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как вызвать этот конструктор.  
  
 [!code-csharp[SyndicationFeed#49](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#49)]
 [!code-vb[SyndicationFeed#49](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#49)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink, string id, DateTimeOffset lastUpdatedTime, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink, string id, valuetype System.DateTimeOffset lastUpdatedTime, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri, id As String, lastUpdatedTime As DateTimeOffset, items As IEnumerable(Of SyndicationItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink, System::String ^ id, DateTimeOffset lastUpdatedTime, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lastUpdatedTime" Type="System.DateTimeOffset" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;" />
      </Parameters>
      <Docs>
        <param name="title">Заголовок веб-канала.</param>
        <param name="description">Описание веб-канала синдикации.</param>
        <param name="feedAlternateLink">Альтернативный универсальный код ресурса (URI) для веб-канала.</param>
        <param name="id">Идентификатор веб-канала синдикации.</param>
        <param name="lastUpdatedTime">Экземпляр <see cref="T:System.DateTimeOffset" />, содержащий время последнего обновления веб-канала синдикации.</param>
        <param name="items">Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как вызвать этот конструктор.  
  
 [!code-csharp[SyndicationFeed#50](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#50)]
 [!code-vb[SyndicationFeed#50](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#50)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,string&gt; AttributeExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, string&gt; AttributeExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeExtensions As Dictionary(Of XmlQualifiedName, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ AttributeExtensions { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.AttributeExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию расширений атрибутов.</summary>
        <value>Словарь, который содержит коллекцию расширений атрибутов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Расширениями атрибута являются допустимые атрибуты XML, которые не указаны в спецификациях Atom 1.0 и RSS 2.0. При сериализации в Atom 1.0 каждого настраиваемого атрибута в коллекции записывается в <`atom`> элемент. При сериализации в RSS 2.0, каждый настраиваемый атрибут записывается в <`channel`> элемент. Пример добавления расширения атрибута см. в разделе [Loosely-Typed расширения](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md) образца.  
  
   
  
## Examples  
 В следующем примере кода показано, как добавить расширение атрибута в веб-канал синдикации.  
  
 [!code-csharp[LooselyTypedExtensions#0](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/program.cs#0)] 
 [!code-vb[LooselyTypedExtensions#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/program.vb#0)]   
  
 В следующем XML-коде показано, как расширение атрибута сериализуется в Atom 1.0.  
  
 [!code-xml[SyndicationFeed#14](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#14)]  
  
 В следующем XML-коде показано, как расширение атрибута сериализуется в RSS 2.0.  
  
 [!code-xml[SyndicationFeed#15](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt; Authors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationPerson&gt; Authors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Authors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authors As Collection(Of SyndicationPerson)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ Authors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию авторов веб-канала.</summary>
        <value>Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />, представляющая авторов веб-канала.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации в Atom 1.0 каждого <xref:System.ServiceModel.Syndication.SyndicationPerson> коллекции записывается в <`author`> элемент. При сериализации в RSS 2.0, если только один <xref:System.ServiceModel.Syndication.SyndicationPerson> существует в коллекции, оно записывается в <`managingEditor`> элемент. В противном случае каждый <xref:System.ServiceModel.Syndication.SyndicationPerson> записывается в <`a10:author`> элемент.  
  
   
  
## Examples  
 В следующем примере кода показано, как добавлять автора в коллекцию <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> экземпляра <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationFeed#8](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#8)]
 [!code-vb[SyndicationFeed#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#8)]  
  
 В следующем XML-коде показано, как коллекция <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> сериализуется в Atom 1.0.  
  
 [!code-xml[SyndicationFeed#16](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#16)]  
  
 В следующем XML-коде показано, как коллекция <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> сериализуется в RSS 2.0.  
  
 [!code-xml[SyndicationFeed#17](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает и задает базовый универсальный код ресурса (URI) для экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
        <value>Базовый универсальный код ресурса (URI) для экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как получить доступ к базовому универсальному коду ресурса экземпляра <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationFeed#48](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#48)]
 [!code-vb[SyndicationFeed#48](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Categories">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationCategory&gt; Categories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationCategory&gt; Categories" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Categories" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Categories As Collection(Of SyndicationCategory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationCategory ^&gt; ^ Categories { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationCategory ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationCategory&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию категорий веб-канала.</summary>
        <value>Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />, которые представляют категории веб-канала.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации в Atom 1.0 каждого <xref:System.ServiceModel.Syndication.SyndicationCategory> коллекции записывается в <`category`> элемент.  
  
 При сериализации в RSS 2.0 каждого <xref:System.ServiceModel.Syndication.SyndicationCategory> коллекции записывается в <`category`> элемент.  
  
   
  
## Examples  
 В следующем примере кода показано, как добавлять категорию в коллекцию <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> элемента <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationFeed#10](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#10)]
 [!code-vb[SyndicationFeed#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#10)]  
  
 В следующем XML-коде показано, как коллекция <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> сериализуется в Atom 1.0.  
  
 [!code-xml[SyndicationFeed#18](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#18)]  
  
 В следующем XML-коде показано, как коллекция <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> сериализуется в RSS 2.0.  
  
 [!code-xml[SyndicationFeed#19](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Syndication.SyndicationFeed Clone (bool cloneItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationFeed Clone(bool cloneItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone (cloneItems As Boolean) As SyndicationFeed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Syndication::SyndicationFeed ^ Clone(bool cloneItems);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationFeed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloneItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cloneItems">Значение, которое указывает, являются ли объекты <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> клонированными.</param>
        <summary>Создает копию экземпляра <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
        <returns>Дубликат объекта <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если параметр `cloneItems` имеет значение `true`, все элементы в объекте <xref:System.ServiceModel.Syndication.SyndicationFeed> являются клонированными; в противном случае новая коллекция элементов экземпляра <xref:System.ServiceModel.Syndication.SyndicationFeed> содержит ссылки на элементы исходного экземпляра <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать этот метод.  
  
 [!code-csharp[SyndicationFeed#47](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#47)]
 [!code-vb[SyndicationFeed#47](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contributors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt; Contributors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationPerson&gt; Contributors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contributors As Collection(Of SyndicationPerson)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ Contributors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию участников веб-канала.</summary>
        <value>Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />, представляющая участников веб-канала.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации в Atom 1.0 каждого <xref:System.ServiceModel.Syndication.SyndicationPerson> коллекции записывается в <`contributor`> элемент.  
  
 При сериализации в RSS 2.0 каждого <xref:System.ServiceModel.Syndication.SyndicationPerson> коллекции записывается в <`a10:contributor`> элемент.  
  
   
  
## Examples  
 В следующем примере кода показано, как добавлять участника в коллекцию <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> для <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationFeed#11](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#11)]
 [!code-vb[SyndicationFeed#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#11)]  
  
 В следующем XML-коде показано, как коллекция <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> сериализуется в Atom 1.0.  
  
 [!code-xml[SyndicationFeed#20](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#20)]  
  
 В следующем XML-коде показано, как коллекция <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> сериализуется в RSS 2.0.  
  
 [!code-xml[SyndicationFeed#21](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copyright">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.TextSyndicationContent Copyright { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.TextSyndicationContent Copyright" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright" />
      <MemberSignature Language="VB.NET" Value="Public Property Copyright As TextSyndicationContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::TextSyndicationContent ^ Copyright { System::ServiceModel::Syndication::TextSyndicationContent ^ get(); void set(System::ServiceModel::Syndication::TextSyndicationContent ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.TextSyndicationContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает и задает сведения об авторских правах для веб-канала.</summary>
        <value>Объект <see cref="T:System.ServiceModel.Syndication.SyndicationContent" />, представляющий сведения об авторском праве для веб-канала.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации в Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> записывается в <`rights`> элемент.  
  
 При сериализации в RSS 2.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> записывается в <`copyright`> элемент.  
  
   
  
## Examples  
 В следующем примере кода показано, как указывать сведения об авторском праве для <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationFeed#12](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#12)]
 [!code-vb[SyndicationFeed#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#12)]  
  
 В следующем XML-коде показано, как свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> сериализуется в Atom 1.0.  
  
 [!code-xml[SyndicationFeed#22](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#22)]  
  
```  
<rights type="text">Copyright 2007</rights>  
```  
  
 В следующем XML-коде показано, как класс <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> сериализуется в RSS 2.0.  
  
 [!code-xml[SyndicationFeed#23](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCategory">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationCategory CreateCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationCategory CreateCategory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateCategory () As SyndicationCategory" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationCategory ^ CreateCategory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationCategory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</summary>
        <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный метод не добавляет объект <xref:System.ServiceModel.Syndication.SyndicationCategory> в коллекцию <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationItem CreateItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationItem CreateItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreateItem" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateItem () As SyndicationItem" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationItem ^ CreateItem();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
        <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный метод не добавляет объект <xref:System.ServiceModel.Syndication.SyndicationItem> в коллекцию <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLink">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationLink CreateLink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationLink CreateLink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreateLink" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateLink () As SyndicationLink" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationLink ^ CreateLink();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
        <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Новый экземпляр <xref:System.ServiceModel.Syndication.SyndicationLink> не добавляется в экземпляр <xref:System.ServiceModel.Syndication.SyndicationFeed>, использованный для его создания.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePerson">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationPerson CreatePerson ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationPerson CreatePerson() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreatePerson () As SyndicationPerson" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationPerson ^ CreatePerson();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationPerson</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <returns>Новый экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный метод не добавляет объект <xref:System.ServiceModel.Syndication.SyndicationPerson> в коллекцию <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> или <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.TextSyndicationContent Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.TextSyndicationContent Description" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As TextSyndicationContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::TextSyndicationContent ^ Description { System::ServiceModel::Syndication::TextSyndicationContent ^ get(); void set(System::ServiceModel::Syndication::TextSyndicationContent ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.TextSyndicationContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает и задает описание веб-канала.</summary>
        <value>Объект <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />, представляющий описание веб-канала.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации в Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> записывается в <`subtitle`> элемент.  
  
 При сериализации в RSS 2.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> записывается в <`description`> элемент.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> для объекта <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationFeed#13](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#13)]
 [!code-vb[SyndicationFeed#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#13)]  
  
 В следующем XML-коде показано, как свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> сериализуется в Atom 1.0.  
  
 [!code-xml[SyndicationFeed#24](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#24)]  
  
 В следующем XML-коде показано, как свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> сериализуется в RSS 2.0.  
  
 [!code-xml[SyndicationFeed#25](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementExtensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementExtensions As SyndicationElementExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ ElementExtensions { System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.ElementExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationElementExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает расширения элемента для веб-канала.</summary>
        <value>Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" />, содержащий расширения элемента в веб-канале.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Расширениями элементов являются допустимые элементы XML, которые не описаны в спецификациях Atom 1.0 и RSS 2.0. В качестве расширения можно добавить любой допустимый элемент XML при условии, что его пространство имен отличается от внешнего пространства имен.  
  
 `<mg:MyElement xmlns:mg="http://myserver/elements" />`  
  
 Пример добавления расширения элемента см. в разделе [Loosely-Typed расширения](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md) образца.  
  
   
  
## Examples  
 В следующем примере кода показано, как добавлять расширения элемента в экземпляр <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[LooselyTypedExtensions#1](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/snippets.cs#1)]
 [!code-vb[LooselyTypedExtensions#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generator">
      <MemberSignature Language="C#" Value="public string Generator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Generator" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Generator" />
      <MemberSignature Language="VB.NET" Value="Public Property Generator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Generator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает и задает генератор веб-канала.</summary>
        <value>Имя средства, создавшего веб-канал.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации в Atom 1.0 и RSS 2.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> записывается в <`generator`> элемент.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> для объекта <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationFeed#39](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#39)]
 [!code-vb[SyndicationFeed#39](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#39)]
 [!code-xml[SyndicationFeed#39](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#39)]  
  
 В следующем XML-коде показано, как свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> сериализуется в Atom 1.0 и RSS 2.0.  
  
 [!code-xml[SyndicationFeed#26](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAtom10Formatter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.Atom10FeedFormatter GetAtom10Formatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Syndication.Atom10FeedFormatter GetAtom10Formatter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.GetAtom10Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAtom10Formatter () As Atom10FeedFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Syndication::Atom10FeedFormatter ^ GetAtom10Formatter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.Atom10FeedFormatter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает экземпляр <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" />.</summary>
        <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRss20Formatter">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает экземпляр <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRss20Formatter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRss20Formatter () As Rss20FeedFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Syndication::Rss20FeedFormatter ^ GetRss20Formatter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.Rss20FeedFormatter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает экземпляр <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</summary>
        <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRss20Formatter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter (bool serializeExtensionsAsAtom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter(bool serializeExtensionsAsAtom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRss20Formatter (serializeExtensionsAsAtom As Boolean) As Rss20FeedFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Syndication::Rss20FeedFormatter ^ GetRss20Formatter(bool serializeExtensionsAsAtom);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.Rss20FeedFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializeExtensionsAsAtom" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializeExtensionsAsAtom">Значение, которое задает сериализацию расширений элементов и атрибутов в пространстве имен Atom 1.0.</param>
        <summary>Возвращает новый экземпляр <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</summary>
        <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Спецификация RSS 2.0 допускает элементы и атрибуты, которые не указаны в его спецификации, только в том случае, если они включены в пространство имен. Если параметру `serializedExtensionsAsAtom` присвоено значение `true`, модуль форматирования автоматически добавляет квалификатор пространства имен `a10` для всех расширений; в противном случае, сериализация расширений не выполняется.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает и задает идентификатор веб-канала.</summary>
        <value>Идентификатор веб-канала.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации в Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> записывается в <`id`> элемент.  
  
 При сериализации в RSS 2.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> записывается в <`a10:id`> элемент.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> в экземпляре <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationFeed#40](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#40)]
 [!code-vb[SyndicationFeed#40](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#40)]  
  
 В следующем XML-коде показано, как свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> сериализуется в Atom 1.0.  
  
 [!code-xml[SyndicationFeed#27](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#27)]  
  
 В следующем XML-коде показано, как свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> сериализуется в RSS 2.0.  
  
 [!code-xml[SyndicationFeed#28](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public Uri ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ImageUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает и задает URL-адрес изображения для веб-канала.</summary>
        <value>URL-адрес изображения для веб-канала.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации в Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> свойство записывается в <`logo`> элемент.  
  
 При сериализации в RSS 2.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> свойство записывается в <`image`> элемент.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> в экземпляре <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationFeed#41](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#41)]
 [!code-vb[SyndicationFeed#41](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#41)]  
  
 В следующем XML-коде показано, как свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> сериализуется в Atom 1.0.  
  
 [!code-xml[SyndicationFeed#29](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#29)]  
  
 В следующем XML-коде показано, как свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> сериализуется в RSS 2.0.  
  
 [!code-xml[SyndicationFeed#30](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; Items { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Items" />
      <MemberSignature Language="VB.NET" Value="Public Property Items As IEnumerable(Of SyndicationItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ Items { System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ get(); void set(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию элементов веб-канала, содержащихся в веб-канале.</summary>
        <value>Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации в Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> записывается коллекции <`entry`> элементов.  
  
 При сериализации в Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> записывается коллекции <`item`> элементов.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать коллекцию <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> экземпляра <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationFeed#42](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#42)]
 [!code-vb[SyndicationFeed#42](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#42)]  
  
 В следующем XML-коде показано, как коллекция <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> сериализуется в Atom 1.0.  
  
 [!code-xml[SyndicationFeed#31](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#31)]  
  
 В следующем XML-коде показано, как коллекция <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> сериализуется в RSS 2.0.  
  
 [!code-xml[SyndicationFeed#32](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает и задает язык веб-канала.</summary>
        <value>Имя языка, на котором написан веб-канал.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации в Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> запись в свойство `lang` атрибута в <`feed`> элемент.  
  
 При сериализации в RSS 2.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> свойство записывается в <`language`> элемент.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> в экземпляре <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationFeed#43](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#43)]
 [!code-vb[SyndicationFeed#43](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#43)]  
  
 В следующем XML-коде показано, как свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> сериализуется в Atom 1.0.  
  
 [!code-xml[SyndicationFeed#14](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#14)]  
  
 В следующем XML-коде показано, как свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> сериализуется в RSS 2.0.  
  
 [!code-xml[SyndicationFeed#33](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastUpdatedTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset LastUpdatedTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastUpdatedTime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LastUpdatedTime As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeOffset LastUpdatedTime { DateTimeOffset get(); void set(DateTimeOffset value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает и задает время последнего обновления веб-канала.</summary>
        <value>Экземпляр <see cref="T:System.DateTimeOffset" />, содержащий время последнего обновления веб-канала.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации в Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> свойство записывается в <`updated`> элемент.  
  
 При сериализации в RSS 2.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> свойство записывается в <`lastBuildDate`> элемент.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> в экземпляре <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationFeed#44](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#44)]
 [!code-vb[SyndicationFeed#44](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#44)]  
  
 В следующем XML-коде показано, как свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> сериализуется в Atom 1.0.  
  
 [!code-xml[SyndicationFeed#34](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#34)]  
  
 В следующем XML-коде показано, как свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> сериализуется в RSS 2.0.  
  
 [!code-xml[SyndicationFeed#35](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationLink&gt; Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationLink&gt; Links" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As Collection(Of SyndicationLink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationLink ^&gt; ^ Links { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationLink ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationLink&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылки, связанные с веб-каналом.</summary>
        <value>Коллекция объектов <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации в Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> коллекции записывается ряд <`link`> элементов.  
  
 При сериализации в RSS 2.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> коллекции записывается ряд <`a10:link`> элементов.  
  
   
  
## Examples  
 В следующем примере кода показано, как добавлять ссылку в коллекцию <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> экземпляра <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationFeed#45](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#45)]
 [!code-vb[SyndicationFeed#45](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#45)]  
  
 В следующем XML-коде показано, как коллекция <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> сериализуется в Atom 1.0.  
  
 [!code-xml[SyndicationFeed#36](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#36)]  
  
 В следующем XML-коде показано, как коллекция <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> сериализуется в RSS 2.0.  
  
 [!code-xml[SyndicationFeed#36](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationFeed Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationFeed Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (reader As XmlReader) As SyndicationFeed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationFeed ^ Load(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationFeed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, из которого выполняется загрузка веб-канала.</param>
        <summary>Загружает веб-канал синдикации из указанного средства чтения XML.</summary>
        <returns>Экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, который содержит загруженное содержимое.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как вызывается данный метод.  
  
 [!code-csharp[SyndicationFeed#9](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#9)]
 [!code-vb[SyndicationFeed#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load&lt;TSyndicationFeed&gt;">
      <MemberSignature Language="C#" Value="public static TSyndicationFeed Load&lt;TSyndicationFeed&gt; (System.Xml.XmlReader reader) where TSyndicationFeed : System.ServiceModel.Syndication.SyndicationFeednew();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSyndicationFeed Load&lt;.ctor (class System.ServiceModel.Syndication.SyndicationFeed) TSyndicationFeed&gt;(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load(Of TSyndicationFeed As {SyndicationFeedNew}) (reader As XmlReader) As TSyndicationFeed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSyndicationFeed&gt;&#xA; where TSyndicationFeed : System::ServiceModel::Syndication::SyndicationFeedgcnew() static TSyndicationFeed Load(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSyndicationFeed</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSyndicationFeed">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>System.ServiceModel.Syndication.SyndicationFeed</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <typeparam name="TSyndicationFeed">Тип веб-канала синдикации.</typeparam>
        <param name="reader">Экземпляр <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
        <summary>Загружает производный экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> из указанного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>Производный экземпляр <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />, в котором содержится веб-канал.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный метод следует использовать при загрузке элемента синдикации в класс, производный от <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
   
  
## Examples  
 В следующем примере кода показано, как загружать веб-канал синдикации из экземпляра <xref:System.Xml.XmlReader>.  
  
 [!code-csharp[SyndicationFeed#9](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#9)]
 [!code-vb[SyndicationFeed#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
      </Docs>
    </Member>
    <Member MemberName="SaveAsAtom10">
      <MemberSignature Language="C#" Value="public void SaveAsAtom10 (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAsAtom10(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsAtom10(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsAtom10 (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAsAtom10(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
        <summary>Запишите веб-канал синдикации в заданный экземпляр <see cref="T:System.Xml.XmlWriter" /> в формате Atom 1.0.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как записать экземпляр <xref:System.ServiceModel.Syndication.SyndicationFeed> в формате Atom 1.0.  
  
 [!code-csharp[SyndicationFeed#52](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#52)]
 [!code-vb[SyndicationFeed#52](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#52)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsRss20">
      <MemberSignature Language="C#" Value="public void SaveAsRss20 (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAsRss20(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsRss20(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsRss20 (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAsRss20(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
        <summary>Запишите веб-канал синдикации в заданный экземпляр <see cref="T:System.Xml.XmlWriter" /> в формате RSS 2.0.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как записать экземпляр <xref:System.ServiceModel.Syndication.SyndicationFeed> в формате RSS 2.0.  
  
 [!code-csharp[SyndicationFeed#51](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#51)]
 [!code-vb[SyndicationFeed#51](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.TextSyndicationContent Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.TextSyndicationContent Title" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As TextSyndicationContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::TextSyndicationContent ^ Title { System::ServiceModel::Syndication::TextSyndicationContent ^ get(); void set(System::ServiceModel::Syndication::TextSyndicationContent ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.TextSyndicationContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает и задает заголовок веб-канала.</summary>
        <value>Экземпляр <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />, в котором содержится заголовок веб-канала.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации в Atom 1.0 и RSS 2.0 <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> свойство записывается в <`title`> элемент.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> экземпляра <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationFeed#46](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#46)]
 [!code-vb[SyndicationFeed#46](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#46)]  
  
 В следующем XML-коде показано, как свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> сериализуется в Atom 1.0.  
  
 [!code-csharp[SyndicationFeed#39](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#39)]
 [!code-vb[SyndicationFeed#39](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#39)]
 [!code-xml[SyndicationFeed#39](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#39)]  
  
 В следующем XML-коде показано, как свойство <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> сериализуется в RSS 2.0.  
  
 [!code-xml[SyndicationFeed#38](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseAttribute (string name, string ns, string value, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseAttribute(string name, string ns, string value, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseAttribute (name As String, ns As String, value As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseAttribute(System::String ^ name, System::String ^ ns, System::String ^ value, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя элемента.</param>
        <param name="ns">Пространство имен элемента.</param>
        <param name="value">Анализируемый атрибут.</param>
        <param name="version">Версия механизма синдикации для использования при анализе.</param>
        <summary>Пытается проанализировать расширение атрибута.</summary>
        <returns>Значение, указывающее, успешно ли было проанализировано расширение атрибута.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Расширения атрибутов являются настраиваемыми атрибутами, которые не определены в спецификации Atom 1.0 или RSS 2.0. Они сериализуются как атрибуты элемента <`feed`> (для Atom 1.0) или <`rss`> (для RSS 1.0) элемент, который зависит от используемой версии механизма синдикации. Этот метод является точкой расширения, позволяющей обрабатывать десериализацию расширения настраиваемого атрибута. Для этого необходимо создать класс, производный от класса <xref:System.ServiceModel.Syndication.SyndicationFeed>, и переопределить этот метод. Этот метод вызывается для всех неопознанных расширений атрибутов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseElement (System.Xml.XmlReader reader, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseElement(class System.Xml.XmlReader reader, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseElement (reader As XmlReader, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseElement(System::Xml::XmlReader ^ reader, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Экземпляр <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
        <param name="version">Версия механизма синдикации для использования при анализе.</param>
        <summary>Пытается проанализировать расширение элемента.</summary>
        <returns>Значение, указывающее, успешно ли было проанализировано расширение элемента.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Расширениями элементов являются допустимые элементы XML, которые не описаны в спецификациях Atom 1.0 и RSS 2.0. В качестве расширения можно добавить любой допустимый элемент XML при условии, что его пространство имен отличается от внешнего пространства имен. Этот метод является точкой расширения, позволяющей обрабатывать десериализацию расширения настраиваемого элемента. Для этого необходимо создать класс, производный от класса <xref:System.ServiceModel.Syndication.SyndicationFeed>, и переопределить этот метод. Этот метод вызывается для всех неопознанных расширений элементов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Во время операции чтения обнаружен недопустимый XML-код.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteAttributeExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteAttributeExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteAttributeExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteAttributeExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Экземпляр <see cref="T:System.Xml.XmlReader" />, в который выполняется запись.</param>
        <param name="version">Версия механизма синдикации для использования при записи.</param>
        <summary>Записывает расширения атрибутов в указанный экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанной версии механизма синдикации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Расширения атрибутов являются настраиваемыми атрибутами, которые не определены в спецификации Atom 1.0 или RSS 2.0. Они сериализуются как атрибуты элемента <`feed`> (для Atom 1.0) или <`rss`> (для RSS 1.0) элемент, который зависит от используемой версии механизма синдикации. Этот метод является точкой расширения, позволяющей обрабатывать сериализацию расширений настраиваемых атрибутов. Для этого необходимо создать класс, производный от класса <xref:System.ServiceModel.Syndication.SyndicationFeed>, и переопределить этот метод. Этот метод вызывается для всех неопознанных расширений атрибутов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteElementExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteElementExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteElementExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteElementExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteElementExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Экземпляр <see cref="T:System.Xml.XmlReader" />, в который выполняется запись.</param>
        <param name="version">Версия механизма синдикации для использования при записи.</param>
        <summary>Записывает расширения элемента в указанный экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанной версии механизма синдикации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Расширениями элементов являются допустимые элементы XML, которые не описаны в спецификациях Atom 1.0 и RSS 2.0. В качестве расширения можно добавить любой допустимый элемент XML при условии, что его пространство имен отличается от внешнего пространства имен. Этот метод является точкой расширения, позволяющей обрабатывать сериализацию расширений настраиваемых элементов. Для этого необходимо создать класс, производный от класса <xref:System.ServiceModel.Syndication.SyndicationFeed>, и переопределить этот метод. Этот метод вызывается для всех неопознанных расширений элементов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>