<Type Name="XPathMessageContextTypeConverter" FullName="System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f927369ea3dc0b9619feb38b2a9700eab83caa7" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39804571" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XPathMessageContextTypeConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XPathMessageContextTypeConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class XPathMessageContextTypeConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XPathMessageContextTypeConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type XPathMessageContextTypeConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="82140-101">Предоставляет способ преобразования объекта <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" /> к формату, обеспечивающему сериализацию как XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="82140-101">Provides a way to convert an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" /> to a format that can be serialized as XAML.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82140-102">Объект <xref:System.ServiceModel.Dispatcher.XPathMessageContext> не может быть сериализован как XAML.</span><span class="sxs-lookup"><span data-stu-id="82140-102">The <xref:System.ServiceModel.Dispatcher.XPathMessageContext> cannot be serialized as XAML.</span></span> <span data-ttu-id="82140-103">Для решения этой проблемы используйте <xref:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter> для преобразования экземпляра класса <xref:System.ServiceModel.Dispatcher.XPathMessageContext> в экземпляр <xref:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension>.</span><span class="sxs-lookup"><span data-stu-id="82140-103">To solve this problem, use the <xref:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter> to convert an instance of the <xref:System.ServiceModel.Dispatcher.XPathMessageContext> class to an instance of the <xref:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageContextTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageContextTypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="82140-104">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-104">Initializes a new instance of the <see cref="T:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="xPathMessageContextTypeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82140-105">Тип, представляющий контекст формата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-105">A type that provides the format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="82140-106">Преобразовываемый тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-106">The type to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82140-107">Проверяет, может ли контекст быть преобразован из одного типа в тип этого преобразователя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-107">Tests whether a context can be converted from one type to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82140-108">Значение <see langword="true" />, если тип может быть преобразован; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-108">
              <see langword="true" /> if the type can be converted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="xPathMessageContextTypeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82140-109">Тип, представляющий контекст формата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-109">A type that provides the format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="82140-110">Тип, представляющий контекст формата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-110">A type that provides the format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82140-111">Проверяет, может ли быть преобразован тип в целевой тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-111">Tests whether a type can be converted into a target type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82140-112">Значение <see langword="true" />, если преобразование может быть выполнено; в противном случае — значение <see langword="false" />. </span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-112">
              <see langword="true" /> if the conversion can be performed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="xPathMessageContextTypeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82140-113">Тип, представляющий контекст формата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-113">A type that provides the format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="82140-114">Определенные региональные сведения, например, календарях или форматах чисел.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-114">The information about a specific culture, such as calendars, and number formats.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="82140-115">Преобразуемый объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-115">The object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82140-116">Преобразует указанный объект контекста в тип данного преобразователя, сериализуемый по XAML, используя заданные контекстные сведения и сведения о языке и региональных параметрах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-116">Converts the provided context object into the XAML-serializable type of this converter, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82140-117">Результат процесса преобразования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-117">The result of the conversion process.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="xPathMessageContextTypeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82140-118">Тип, представляющий контекст формата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-118">A type that provides the format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="82140-119">Определенные региональные сведения, например, календарях или форматах чисел.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-119">The information about a specific culture, such as calendars, and number formats.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="82140-120">Преобразуемый объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-120">The object to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="82140-121">Тип, в который преобразуется аргумент <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-121">The type to convert the <c>value</c> argument to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82140-122">Преобразует указанный объект контекста в тип данного преобразователя, сериализуемый по XAML, используя заданные контекстные сведения и сведения о языке и региональных параметрах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-122">Converts the provided context object into the XAML-serializable type of this converter, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82140-123">Преобразуемый контекст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82140-123">The converted context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>