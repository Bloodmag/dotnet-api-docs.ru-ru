<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FaultContractAttribute.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72580fa93e9a7d56a6e252da7977c1826741e78c93.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">580fa93e9a7d56a6e252da7977c1826741e78c93</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Specifies one or more SOAP faults that are returned when a service operation encounters processing errors.</source>
          <target state="translated">Задает одну или несколько ошибок протокола SOAP, сообщения о которых возвращаются, когда операция службы обнаруживает ошибки обработки.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Mark an operation with the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> attribute to declare one or more specific exception conditions that are added to the Web Service Description Language (WSDL) description of the service operation as explicit SOAP fault messages returned by the operation.</source>
          <target state="translated">Отметьте операцию атрибутом <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> для объявления одного или нескольких конкретных условий исключений, которые добавляются в описание WSDL операции службы в виде явных сообщений об ошибках SOAP, возвращаемых операцией.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>In all managed applications, processing errors are represented by <ph id="ph1">&lt;xref:System.Exception&gt;</ph> objects.</source>
          <target state="translated">Во всех управляемых приложениях обработка ошибок представлена объектами <ph id="ph1">&lt;xref:System.Exception&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>In SOAP-based applications such as <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> applications, service methods communicate processing error information using SOAP fault messages.</source>
          <target state="translated">В приложениях, основанных на протоколе SOAP, таких как <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>, методы службы передают информацию об ошибке обработки с помощью сообщений об ошибке протокола SOAP.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Because WCF applications execute under both types of error systems, any managed exception information that must be sent to the client must be converted from exceptions into SOAP faults.</source>
          <target state="translated">Поскольку приложения WCF, выполняются в системах ошибок обоих типов, любые сведения управляемых исключений, которая должна быть отправлена клиенту может быть преобразована из исключений в ошибки SOAP.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>You can use the default service exception behaviors, or you can explicitly control whether -- and how -- exceptions are mapped to fault messages.</source>
          <target state="translated">Можно использовать поведения исключений службы по умолчанию или явно управлять тем, будут ли исключения сопоставляться с сообщениями об ошибках и как будет выполняться это сопоставление.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>For an overview of exceptions and SOAP faults in WCF applications, see <bpt id="p1">[</bpt>Specifying and Handling Faults in Contracts and Services<ept id="p1">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>.</source>
          <target state="translated">Обзор исключения и ошибки SOAP в приложениях WCF см. в разделе <bpt id="p1">[</bpt>указание и обработка сбоев в контрактах и службах<ept id="p1">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>It is recommended that service operations use the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> to formally specify all SOAP faults that a client can expect to receive in the normal course of an operation.</source>
          <target state="translated">Рекомендуется, чтобы операции службы использовали атрибут <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> для формального указания всех ошибок SOAP, которые клиент может получить во время обычной операции.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>It is also recommended that only that information a client must know is returned in a SOAP fault to minimize information disclosure.</source>
          <target state="translated">Кроме того, чтобы свести к минимуму раскрытие информации, рекомендуется возвращать в сообщении об ошибке SOAP только те сведения, которые необходимо знать клиенту.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.Action%2A&gt;</ph> property controls the action of the fault message.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.Action%2A&gt;</ph> управляет действием сообщения об ошибке.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.DetailType%2A&gt;</ph> property gets the type of the detail object serialized in the fault message.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.DetailType%2A&gt;</ph> возвращает тип объекта сведений, сериализованного в сообщении об ошибке.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.Namespace%2A&gt;</ph> properties control the name and namespace, respectively, of the fault message.</source>
          <target state="translated">Свойства <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.Name%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.Namespace%2A&gt;</ph> управляют именем и пространством имен сообщения об ошибке, соответственно.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A&gt;</ph> indicates whether the fault message has a protection level specified, and if so, the <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> property controls that level of protection.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A&gt;</ph> указывает, имеет ли сообщение об ошибке заданный уровень защиты, и, если да, свойство <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> управляет этим уровнем защиты.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> property be set.</source>
          <target state="translated">Если сообщение об ошибке содержит конфиденциальную информацию или может привести к проблемам с безопасностью, настоятельно рекомендуется задать свойство <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>If you set the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> explicitly to either <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>, then you must use a binding with security enabled using the <ph id="ph4">&lt;xref:System.ServiceModel.SecurityMode?displayProperty=nameWithType&gt;</ph> property on the binding or an exception is thrown.</source>
          <target state="translated">Если для свойства <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> явно задается значение <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph> или <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>, необходимо использовать привязку с разрешенным для нее с помощью свойства <ph id="ph4">&lt;xref:System.ServiceModel.SecurityMode?displayProperty=nameWithType&gt;</ph> обеспечением безопасности. В противном случае будет вызвано исключение.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>If you select a binding that enables security and you do not set the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> property anywhere on the contract, all application data will be encrypted and signed.</source>
          <target state="translated">Если выбирается привязка, разрешающая обеспечение безопасности, а свойство <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> нигде в контракте не задается, все данные приложений будут шифроваться и подписываться.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>If you select a binding that does not have security enabled (for example, the <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding?displayProperty=nameWithType&gt;</ph> has security disabled by default), and the <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> is not explicitly set, then none of the application data will be protected.</source>
          <target state="translated">Если выбирается привязка, в которой не разрешено обеспечение безопасности (например, в классе <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding?displayProperty=nameWithType&gt;</ph> обеспечение безопасности запрещено по умолчанию), и свойство <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> явно не задано, данные приложений защищаться не будут.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>For many scenarios setting <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> for fault messages is sufficient.</source>
          <target state="translated">Во многих случаях достаточно присвоить свойству <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> значение <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> для сообщений об ошибках.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>For more details, see <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>уровень защиты основные сведения о<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>To return a specified fault from an operation marked with <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>, throw a <ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> (where the type parameter is the serializable error information) when the managed exception occurs during the operation.</source>
          <target state="translated">Чтобы возвратить указанную ошибку из операции, отмеченной атрибутом <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>, вызовите исключение <ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> (где параметр типа содержит сериализуемые сведения об ошибке) при возникновении управляемого исключения во время операции.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>WCF client applications surface the SOAP fault as the same type as was thrown in the client implementation -- that is, as a <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> (where the typeparameter is the serializable error information).</source>
          <target state="translated">Клиентские приложения WCF контактной ошибки SOAP имеет тот же тип, как было создано в клиентской реализации, то есть, как <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> (где typeparameter — сериализуемые сведения об ошибке).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> can be used only to specify SOAP faults for two-way service operations and for asynchronous operation pairs; one-way operations do not support SOAP faults and therefore do not support <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>.</source>
          <target state="translated">Атрибут <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> может использоваться только для указания ошибок SOAP для двусторонних операций служб и для пар асинхронных операций; односторонние операции не поддерживают ошибки SOAP и, следовательно, атрибут <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>You can use any serializable type to convey error information.</source>
          <target state="translated">Для передачи информации об ошибках можно использовать любой сериализуемый тип.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The only restriction in this version of WCF is that types specified in a <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> must be serializable by the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Единственное ограничение в этой версии WCF — типы, заданные в <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> должен быть сериализуем методом <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>For the serialization support the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> provides, see <bpt id="p1">[</bpt>Data Contract Serializer<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-serializer.md)</ept>.</source>
          <target state="translated">Для поддержки сериализации <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> предоставляет, см. <bpt id="p1">[</bpt>сериализатор контракта данных<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-serializer.md)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>For example, to specify that clients can expect a SOAP fault that contains an <ph id="ph1">&lt;xref:System.Int32&gt;</ph>, place that type parameter in the <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> on your service method.</source>
          <target state="translated">Например, чтобы задать, что клиенты могут ожидать сообщение об ошибке SOAP, содержащее <ph id="ph1">&lt;xref:System.Int32&gt;</ph>, разместите этот параметр типа в атрибуте <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> метода службы.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The following code examples do not set the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.Name%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceModel.FaultContractAttribute.Namespace%2A&gt;</ph> properties.</source>
          <target state="translated">В приведенных ниже примерах кода не задаются свойства <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.Name%2A&gt;</ph> и <ph id="ph3">&lt;xref:System.ServiceModel.FaultContractAttribute.Namespace%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Then, in your service method, throw a new <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> where the type parameter is the type that contains the error information (in the above case, a <ph id="ph2">&lt;xref:System.Int32&gt;</ph>).</source>
          <target state="translated">Затем в методе службы вызовите новое исключение <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph>, где параметром типа является тип, содержащий информацию об ошибке (в представленном выше случае — <ph id="ph2">&lt;xref:System.Int32&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>For example:</source>
          <target state="translated">Пример:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The preceding example is very basic; almost any information can be passed using an <ph id="ph1">&lt;xref:System.Int32?displayProperty=nameWithType&gt;</ph> code, so this detail type is not the most useful.</source>
          <target state="translated">Представленный пример — очень общий; почти любая информация может быть передана с помощью кода <ph id="ph1">&lt;xref:System.Int32?displayProperty=nameWithType&gt;</ph>, поэтому этот тип сведений не является наиболее полезным.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Typically, WCF applications specify SOAP faults with detail types specific to the error information requirements of the client.</source>
          <target state="translated">Как правило ошибки SOAP указываются приложений WCF с типами сведений, связанными с требованиями сведения ошибка клиента.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>For a more complete example, see the Example section.</source>
          <target state="translated">Более полный пример см. в подразделе "Пример".</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>If you specify a <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> where the type parameter is a <ph id="ph2">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph>, the string value is assigned to the Detail property in the client application; clients cannot retrieve that string by calling the <ph id="ph3">&lt;xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Если задается исключение <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph>, где параметр типа — <ph id="ph2">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph>, свойству Detail в клиентском приложении присваивается строковое значение; клиенты не могут извлекать эту строку путем вызова метода <ph id="ph3">&lt;xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>To have the string value returned when the client application calls <ph id="ph1">&lt;xref:System.Exception.ToString%2A?displayProperty=nameWithType&gt;</ph>, throw a <ph id="ph2">&lt;xref:System.ServiceModel.FaultException?displayProperty=nameWithType&gt;</ph> exception inside the operation and pass the string to the constructor.</source>
          <target state="translated">Чтобы при вызове клиентским приложением метода <ph id="ph1">&lt;xref:System.Exception.ToString%2A?displayProperty=nameWithType&gt;</ph> возвращалось строковое значение, необходимо вызывать исключение <ph id="ph2">&lt;xref:System.ServiceModel.FaultException?displayProperty=nameWithType&gt;</ph> внутри операции и передавать строку конструктору.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>To explicitly control the behavior of the application when an exception or <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> is thrown, implement the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> interface on an <ph id="ph3">&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> or <ph id="ph5">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph> and assign it to the <ph id="ph6">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Для явного управления поведением приложения в случае возникновения исключения или <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph>, реализуйте интерфейс <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> на <ph id="ph3">&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> или <ph id="ph5">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph> и добавьте его к свойству <ph id="ph6">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler&gt;</ph> enables you to explicitly control the SOAP fault that is generated and whether to send it back to the client.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler&gt;</ph> позволяет явным образом управлять ошибки SOAP, которое создается и будут ли отправляться обратно клиенту.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>To facilitate debugging, set the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`true`</ph> in code or you can use the <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> in an application configuration file.</source>
          <target state="translated">Чтобы упростить отладку, задайте <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> для <ph id="ph2">`true`</ph> можно использовать в коде или <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> в файле конфигурации приложения.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>When enabled, the service automatically returns exception information to the caller.</source>
          <target state="translated">Когда эта функция включена, служба автоматически возвращает вызывающему объекту информацию об исключениях.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>These faults appear to the client as <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> exceptions.</source>
          <target state="translated">Эти ошибки выглядят для клиента как исключения <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Because managed exceptions can expose internal application information, setting <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">`true`</ph> can permit WCF clients to obtain information about internal service operation exceptions, including personally identifiable or other sensitive information.</source>
          <target state="translated">Поскольку управляемые исключения могут предоставлять внутренние сведения о приложении, задание <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> или <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> для <ph id="ph3">`true`</ph> может позволить клиентам WCF для получения сведений о внутренних исключениях операций службы, включая личные идентифицируемую и другую конфиденциальную информацию.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Therefore, setting <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">`true`</ph> is only recommended as a way of temporarily debugging a service application.</source>
          <target state="translated">Поэтому задавать для свойства <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> или <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> значение <ph id="ph3">`true`</ph> рекомендуется только для временной отладки приложения службы.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> of type <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Кроме того, WSDL для метода, который возвращает такие необработанные управляемые исключения, не содержит контракт для исключения <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> типа <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Clients must expect the possibility of an unknown SOAP fault (returned to WCF clients as <ph id="ph1">&lt;xref:System.ServiceModel.FaultException?displayProperty=nameWithType&gt;</ph> objects) to obtain the debugging information properly.</source>
          <target state="translated">Клиенты должны быть предусмотрена возможность получения неизвестной ошибки SOAP (в возвращаемом клиенту WCF <ph id="ph1">&lt;xref:System.ServiceModel.FaultException?displayProperty=nameWithType&gt;</ph> объектов) для надлежащего получения отладочной информации.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The following code example shows the use of <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> to specify that the <ph id="ph2">`SampleMethod`</ph> operation can return a SOAP fault with the detail type of <ph id="ph3">`GreetingFault`</ph>.</source>
          <target state="translated">В следующем примере кода показано, как с помощью атрибута <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> указать, что операция <ph id="ph2">`SampleMethod`</ph> может возвращать ошибку SOAP с типом по умолчанию <ph id="ph3">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The following code example shows that WCF clients of <ph id="ph1">`ISampleService`</ph> experience this SOAP fault as a <ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> of type <ph id="ph3">`GreetingFault`</ph>.</source>
          <target state="translated">В следующем примере кода показано, что клиентов WCF <ph id="ph1">`ISampleService`</ph> Эта ошибка SOAP выглядит как <ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> типа <ph id="ph3">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
          <source>The serializable type that contains error information for the caller.</source>
          <target state="translated">Сериализуемый тип, который содержит информацию об ошибке для вызывающего объекта.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultContractAttribute" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultContractAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
          <source>The constructor is typically executed by applying the attribute to a service method and specifying a type as the argument in the attribute.</source>
          <target state="translated">Этот конструктор обычно выполняется путем применения атрибута к методу службы и указания типа в качестве аргумента в атрибуте.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
          <source>The following code example shows the use of <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> to specify that the <ph id="ph2">`SampleMethod`</ph> operation can return a SOAP fault with the detail type of <ph id="ph3">`GreetingFault`</ph>.</source>
          <target state="translated">В следующем примере кода показано, как с помощью атрибута <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> указать, что операция <ph id="ph2">`SampleMethod`</ph> может возвращать ошибку SOAP с типом по умолчанию <ph id="ph3">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="detailType" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Аргумент <ph id="ph1">&lt;paramref name="detailType" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultContractAttribute.Action">
          <source>Gets or sets the action of the SOAP fault message that is specified as part of the operation contract.</source>
          <target state="translated">Возвращает или задает действие сообщения об ошибке SOAP, которое задается как компонент контракта операции.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.Action">
          <source>The value of the action for the SOAP fault message.</source>
          <target state="translated">Значение действия для сообщения об ошибке SOAP.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.Action">
          <source>Use to control the action of the SOAP fault message.</source>
          <target state="translated">Используйте для управления действием сообщения об ошибке SOAP.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultContractAttribute.DetailType">
          <source>Gets the type of a serializable object that contains error information.</source>
          <target state="translated">Возвращает тип сериализуемого объекта, который содержит информацию об ошибке.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.DetailType">
          <source>The type that represents the serializable error class.</source>
          <target state="translated">Тип, представляющий сериализуемый класс ошибки.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.DetailType">
          <source>The following code example shows the use of <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> to specify that the <ph id="ph2">`SampleMethod`</ph> operation can return a SOAP fault with the detail type of <ph id="ph3">`GreetingFault`</ph>.</source>
          <target state="translated">В следующем примере кода показано, как с помощью атрибута <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> указать, что операция <ph id="ph2">`SampleMethod`</ph> может возвращать ошибку SOAP с типом по умолчанию <ph id="ph3">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel">
          <source>Gets a value that indicates whether the SOAP fault message has a protection level assigned.</source>
          <target state="translated">Возвращает значение, указывающее, присвоен ли сообщению об ошибке SOAP уровень защиты.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the fault message has a protection level; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если сообщению об ошибке присвоен уровень защиты; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A&gt;</ph> property to specify whether the SOAP fault message must be encrypted, signed, or both.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A&gt;</ph> определяет, необходимо ли шифровать, подписывать сообщения об ошибках SOAP или выполнять оба эти действия.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel">
          <source>See the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> property for details.</source>
          <target state="translated">Дополнительные сведения см. в описании свойства <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultContractAttribute.Name">
          <source>Gets or sets the name of the fault message in Web Services Description Language (WSDL).</source>
          <target state="translated">Возвращает или задает имя сообщения об ошибке в языке WSDL.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.Name">
          <source>The fault message name.</source>
          <target state="translated">Имя сообщения ошибки.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.Name">
          <source>The default is the name of the type used as the fault detail.</source>
          <target state="translated">Значение по умолчанию — имя типа, используемого в качестве сведений об ошибке.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultContractAttribute.Namespace">
          <source>Gets or sets the namespace of the SOAP fault.</source>
          <target state="translated">Возвращает или задает пространство имен ошибки SOAP.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.Namespace">
          <source>The namespace of the SOAP fault.</source>
          <target state="translated">Пространство имен ошибки SOAP.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>Specifies the level of protection the SOAP fault requires from the binding.</source>
          <target state="translated">Задает уровень защиты, который требуется от привязки для ошибки SOAP.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.FaultDescription.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property to specify the degree to which the binding must encrypt, sign, or both when sending the SOAP fault.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.Description.FaultDescription.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> определяет, как привязка должна выполнять шифрование, подписывание или оба эти действия при передаче сообщения об ошибке SOAP.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>It is strongly recommended that an operation's fault explicitly decide the security protection level requirements on the contract.</source>
          <target state="translated">Настоятельно рекомендуется, чтобы ошибка операции явным образом определяла требования к уровню защиты безопасности в контракте.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>The default protection level is <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>, meaning that the SOAP fault message you are defining does not require encryption or a digital signature (although your binding may provide this support if it is configured to do so).</source>
          <target state="translated">Уровень защиты по умолчанию — <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>. Это означает, что для определяемого сообщения об ошибке SOAP не требуются ни шифрование, ни цифровая сигнатура (хотя привязка может обеспечивать поддержку этих функций, если она настроена на их поддержку).</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> property be set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Если сообщение об ошибке содержит конфиденциальную информацию или может привести к проблемам с безопасностью, настоятельно рекомендуется задать для свойства <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> значение <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>For more about security issues, see <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о проблемах безопасности см. в разделе <bpt id="p1">[</bpt>уровень защиты основные сведения о<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>The protection behavior at runtime is the combination of the protection-level properties that have a hierarchical structure.</source>
          <target state="translated">Поведение защиты в среде выполнения представляет собой сочетание свойств уровня защиты, которые имеют иерархическую структуру.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</source>
          <target state="translated">При задании внешнего значения устанавливается значение по умолчанию для всех более узких областей, если явно не задано другое значение для более узкой области.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</source>
          <target state="translated">В этом случае внешнее значение остается значением по умолчанию для всех более узких областей за исключением тех областей, для которых задано иное значение.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>For example, if <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed, including fault messages.</source>
          <target state="translated">Например, если для свойства <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> задано значение <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> и другие более узкие области не имеют параметров уровня защиты, все сообщения в контракте операции шифруются и подписываются, включая сообщения об ошибках.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>If, however, one of those operations has the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed, including fault messages.</source>
          <target state="translated">Однако если атрибуту <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> одной из этих операций присвоено значение <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>, сообщения для этой операции подписываются, а все другие сообщения в контракте шифруются и подписываются, включая сообщения об ошибках.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>The scopes at which these values are set are:</source>
          <target state="translated">Ниже приводятся области, в которых заданы эти значения.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> атрибута <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> атрибута <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Если в контракте отсутствует явно заданный уровень защиты, а базовая привязка поддерживает безопасность (как на транспортном уровне, так и на уровне сообщений), эффективным уровнем защиты для всего контракта является <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>If the binding does not support security (such as <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), the effective <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> is <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> for the whole contract.</source>
          <target state="translated">Если привязка не поддерживает безопасность (например, <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), эффективным уровнем <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> является <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> для всего контракта.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">В результате в зависимости от привязки конечной точки клиенты могут требовать разную степень защиты на уровне сообщений или транспортном уровне, даже если контракт задает <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>