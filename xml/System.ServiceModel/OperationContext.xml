<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OperationContext.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b722e678be6a4d98378e3e3131115b69b7a65af3680.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e678be6a4d98378e3e3131115b69b7a65af3680</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.OperationContext">
          <source>Provides access to the execution context of a service method.</source>
          <target state="translated">Предоставляет доступ к контексту выполнения метода службы.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> from within a service operation to access the current operation execution environment.</source>
          <target state="translated">Для доступа к текущей среде выполнения операций из операции службы нужно использовать контекст <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>In particular, the operation context is used to access callback channels in duplex services, to store extra state data across portions of the operations, and to access incoming message headers and properties as well as add outgoing message headers and properties.</source>
          <target state="translated">Контекст операции используется для доступа к каналам обратного вызова в дуплексных службах, для хранения дополнительных данных о состоянии для разных частей операций, для доступа к заголовкам и свойствам входящих сообщений и для добавления заголовков и свойств в исходящие сообщения.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>For more information about using extensions to store state data, see <bpt id="p1">[</bpt>Extensible Objects<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об использовании расширений для хранения данных о состоянии см. в разделе <bpt id="p1">[</bpt>расширяемых объектов<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> has the following properties and methods.</source>
          <target state="translated">Контекст <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> имеет следующие свойства и методы.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object representing the current execution context.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> выводит объект <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>, отражающий текущий контекст выполнения.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> property returns the security environment under which the method executes.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> выводит среду безопасности, в которой выполняется метод.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A&gt;</ph> property gets the operation's <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A&gt;</ph> получает значение <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType&gt;</ph> для операции.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> property returns an extension collection for the current <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> выводит коллекцию расширений для текущего контекста <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Host%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> object that manages the service.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Host%2A&gt;</ph> выводит <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> объект, управляющий службой.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A&gt;</ph> property returns a value that indicates whether the method has supporting tokens, if so, the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.SupportingTokens%2A&gt;</ph> property gets them.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A&gt;</ph> выводит значение, указывающее наличие у метода вспомогательных маркеров. Если вспомогательные маркеры имеются, свойство <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.SupportingTokens%2A&gt;</ph> получает их.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A&gt;</ph> properties get these items from the incoming message.</source>
          <target state="translated">Свойства <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A&gt;</ph> и <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A&gt;</ph> получают эти элементы из входящего сообщения.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> event is fired when the operation has completed.</source>
          <target state="translated">Событие <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> происходит при завершении операции.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A&gt;</ph> properties get these items for the outbound message.</source>
          <target state="translated">Свойства <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A&gt;</ph> получают эти элементы для исходящего сообщения.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> implementation for the method.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> выводит реализацию метода <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> associated with the operation.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> выводит контекст <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph>, связанный с операцией.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SessionId%2A&gt;</ph> property returns the session identifier for the current channel and object.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SessionId%2A&gt;</ph> выводит идентификатор сеанса для текущего канала и объекта.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method returns a callback channel to the caller in the case of duplex communication.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> возвращает вызывающей стороне канал обратного вызова в дуплексных системах связи.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> method commits the current transaction.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> фиксирует текущую транзакцию.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method to obtain the channel back to the caller from within a method.</source>
          <target state="translated">В следующем примере кода свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> и метод <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> используется для возврата канала вызывающей стороне из метода.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</source>
          <target state="translated">Все методы в этом примере являются односторонними, позволяя службе и клиенту независимо взаимодействовать в обоих направлениях.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</source>
          <target state="translated">В этом случае приведенное в качестве примера клиентское приложение ожидает только одного обратного вызова перед выходом, однако другое клиентское приложение, например клиент Windows Forms, может получать любое количество вызовов от службы.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The following client implements the <ph id="ph1">`SampleDuplexHelloCallback`</ph> to receive the callback message.</source>
          <target state="translated">В следующем клиенте для получения сообщения обратного вызова используется команда <ph id="ph1">`SampleDuplexHelloCallback`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>The imported callback contract is not the same name as the one in the service, due to the use of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> property in the preceding example.</source>
          <target state="translated">Имя импортированного контракта обратного вызова отличается от имени, используемого в службе, в связи с использованием в предыдущем примере свойства <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</source>
          <target state="translated">Необходимо отметить, что клиент не делает предположения относительно возможности получения обратного вызова. Обратный вызов сервера полностью независим от исходящего вызова клиента.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContext">
          <source>For an example that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class in a client scenario, see <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</source>
          <target state="translated">Пример, в котором используется класс <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> в клиентском сценарии, можно найти в разделе <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> used to create a new client <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Канал <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph>, используемый для создания нового клиента <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> class that uses the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> in a client application.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>, использующий указанный канал <ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> в клиентском приложении.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.%23ctor%2A&gt;</ph> constructor to create a new operation context within the scope of which the proxy is associated in order to modify outbound items such as headers.</source>
          <target state="translated">Конструктор <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.%23ctor%2A&gt;</ph> используется для создания нового контекста операций в области, с которой связан клиентский прокси-класс, с целью изменения элементов исходящих сообщений, например заголовков.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application in order to add a custom header to the outgoing message.</source>
          <target state="translated">В следующем примере показано, как использовать область контекста <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> для создания нового контекста в клиентском приложении для добавления пользовательского заголовка к исходящему сообщению.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
          <source>The channel is null.</source>
          <target state="translated">Канал имеет значение null.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Channel">
          <source>Gets the channel associated with the current <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> object.</source>
          <target state="translated">Получает канал, связанный с текущим объектом <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Channel">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> associated with the current <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Канал <ph id="ph1">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph>, сопоставленный с текущим контекстом <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.ClaimsPrincipal">
          <source>Gets the claims-based principal associated with the operation.</source>
          <target state="translated">Получает субъект требований, связанный с операцией.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.ClaimsPrincipal">
          <source>The claims principal.</source>
          <target state="translated">Субъект утверждений.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Current">
          <source>Gets or sets the execution context for the current thread.</source>
          <target state="translated">Возвращает или задает контекст выполнения текущего потока.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> that represents the messaging and execution context of the current method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>, представляющий контекст сообщений и выполнения текущего метода.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property to obtain the execution and message context for the current method.</source>
          <target state="translated">Для получения контекста сообщений и выполнения текущего метода следует использовать свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method to create a channel back to the caller from within a method.</source>
          <target state="translated">В следующем примере кода свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> и метод <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> используются для создания канала к вызывающей стороне из метода.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</source>
          <target state="translated">Все методы в этом примере являются односторонними, позволяя службе и клиенту независимо взаимодействовать в обоих направлениях.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Current">
          <source>In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</source>
          <target state="translated">В этом случае приведенное в качестве примера клиентское приложение ожидает только одного обратного вызова перед выходом, однако другое клиентское приложение, например клиент Windows Forms, может получать любое количество вызовов от службы.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.EndpointDispatcher">
          <source>Gets or sets the endpoint dispatcher for the endpoint to inspect or modify.</source>
          <target state="translated">Возвращает или задает диспетчер конечной точки для проверяемой или изменяемой конечной точки.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.EndpointDispatcher">
          <source>The endpoint dispatcher for the endpoint to inspect or modify.</source>
          <target state="translated">Диспетчер конечной точки для проверяемой или изменяемой конечной точки.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>Gets the collection of service extensions from the current message context.</source>
          <target state="translated">Возвращает коллекцию расширений службы из контекста текущего сообщения.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>A collection of extensions of <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Коллекция расширений <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> property to obtain a collection of all extensions of the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> used to modify the context or add custom state.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Extensions%2A&gt;</ph> используется для получения коллекции всех расширений <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>, использованных для изменения контекста или добавления пользовательского состояния.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Extensions">
          <source>For more information about extensions, see <bpt id="p1">[</bpt>Extensible Objects<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о расширениях см. в разделе <bpt id="p1">[</bpt>расширяемых объектов<ept id="p1">](~/docs/framework/wcf/extending/extensible-objects.md)</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The type of channel used to call back to the client.</source>
          <target state="translated">Тип канала, использованный для обратного вызова клиента.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>Gets a channel to the client instance that called the current operation.</source>
          <target state="translated">Возвращает канал экземпляру клиента, вызвавшему текущую операцию.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>A channel to the client instance that called the operation of the type specified in the <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /&gt;</ph> property.</source>
          <target state="translated">Экземпляр канала к клиенту, вызвавшего операцию типа, указанного в свойстве <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>Call the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> property to obtain a channel that you can use to call operations on the client instance that called the service.</source>
          <target state="translated">Для получения канала, доступного для вызова операций на экземпляре клиента, вызвавшем службу, следует использовать свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> method to create a channel back to the caller from within a operation.</source>
          <target state="translated">В следующем примере кода свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> и метод <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A&gt;</ph> используются для создания канала к вызывающей стороне из операции.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>All operations in this example are one-way operations, enabling the service and the client to communicate in both directions independently.</source>
          <target state="translated">Все операции в этом примере являются односторонними, позволяя службе и клиенту независимо взаимодействовать в обоих направлениях.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</source>
          <target state="translated">В этом случае приведенное в качестве примера клиентское приложение ожидает только одного обратного вызова перед выходом, однако другое клиентское приложение, например клиент Windows Forms, может получать любое количество вызовов от службы.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The following client implements the <ph id="ph1">`SampleDuplexHelloCallback`</ph> to receive the callback message.</source>
          <target state="translated">В следующем клиенте для получения сообщения обратного вызова используется команда <ph id="ph1">`SampleDuplexHelloCallback`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>The imported callback contract is not the same name as the one in the service, due to the use of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> property in the preceding example.</source>
          <target state="translated">Имя импортированного контракта обратного вызова отличается от имени, используемого в службе, в связи с использованием в предыдущем примере свойства <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</source>
          <target state="translated">Необходимо отметить, что клиент не делает предположения относительно возможности получения обратного вызова. Обратный вызов сервера полностью независим от исходящего вызова клиента.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
          <source>For an example that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class in a client scenario, see <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</source>
          <target state="translated">Пример, в котором используется класс <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> в клиентском сценарии, можно найти в разделе <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.HasSupportingTokens">
          <source>Gets a value that indicates whether the incoming message has supporting tokens.</source>
          <target state="translated">Получает значение, указывающее, имеет ли входящее сообщение вспомогательные маркеры.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.HasSupportingTokens">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the incoming message has supporting tokens; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если входящее сообщение имеет вспомогательные маркеры; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.Host">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> for the current service object.</source>
          <target state="translated">Возвращает значение <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> для объекта текущей службы.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.Host">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>Gets the incoming message headers for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Получает заголовки входящих сообщений для <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph> object that contains the incoming message headers.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph>, содержащий заголовки входящих сообщений.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>Use this property to inspect or modify the request headers that arrive at a service operation or reply headers that arrive at a client proxy.</source>
          <target state="translated">Это свойство используется для проверки или изменения заголовков запросов, поступающих в операцию службы, или заголовков ответов, поступающих клиентскому прокси-классу.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
          <source>The following code example shows how to read the incoming message headers in a service operation.</source>
          <target state="translated">В следующем примере кода показано, как нужно считывать заголовки входящих сообщений в операции службы.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
          <source>Gets the message properties for the incoming message in the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Получает свойства для входящего сообщения в контексте <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> object that contains the message properties on the incoming message.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph>, содержащий свойства входящего сообщения.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
          <source>Use this property to inspect or modify the message properties for a request message in a service operation or a reply message in a client proxy.</source>
          <target state="translated">Это свойство используется для проверки или изменения свойств сообщений запросов, поступающих в операцию службы, или ответных сообщений, поступающих клиентскому прокси-классу.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
          <source>Gets the incoming SOAP message version for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Получает свойства для SOAP-версии входящего сообщения в контексте <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
          <source>The SOAP version of the incoming message.</source>
          <target state="translated">SOAP-версия входящего сообщения.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
          <source>Use this property to inspect the SOAP version of the request message that arrives at a service operation or the SOAP version of the reply message that arrives at a client proxy.</source>
          <target state="translated">Это свойство используется для проверки SOAP-версии сообщений запроса, поступающих в операцию службы, или SOAP-версии ответных сообщений, поступающих клиентскому прокси-классу.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.InstanceContext">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object that manages the current service instance.</source>
          <target state="translated">Получает объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>, управляющих текущим экземпляром службы.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.InstanceContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object for the current service.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> для текущей службы.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.InstanceContext">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> property to access the run-time object that manages the current service object.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.InstanceContext%2A&gt;</ph> используется для доступа к объекту времени выполнения, который управляет текущим объектом службы.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.IsUserContext">
          <source>This property is intended for system use and should not be called by users.</source>
          <target state="translated">Это свойство предназначено для системных целей и не должно вызываться пользователями.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.IsUserContext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Occurs when the operation has completed.</source>
          <target state="translated">Создается по завершении операции.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> event to dispose parameters or a return value if you set <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Событие <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> используется для удаления параметров или возвращаемого значения при установке для параметра <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> значения <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Normally you set <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`false`</ph> to prevent WCF from calling <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> on the parameter and return value objects.</source>
          <target state="translated">Обычно устанавливается <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType&gt;</ph> для <ph id="ph2">`false`</ph> для предотвращения вызова WCF <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> значение параметров и возвращаемых объектов.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>However, if some parameters need to be preserved while others need to be disposed, this event is the best place to dispose those parameters.</source>
          <target state="translated">Однако если некоторые параметры требуется сохранить, а другие требуется удалить, это событие лучше всего подходит для частичного удаления параметров.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>Also, with duplex bindings, this event can be used to send a request on the callback channel after the reply for the current operation is sent.</source>
          <target state="translated">Вместе с дуплексными привязками это событие можно использовать для отправки запроса на канал обратного вызова после отправки ответа для текущей операции.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>If a caller is listening for the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph> event for an <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph> operation, it is possible to block when the response is received.</source>
          <target state="translated">Если вызывающий объект прослушивает событие <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph> для операции <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph>, при получении ответа возможна блокировка.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.OperationContext.OperationCompleted">
          <source>The proper way to handle this is to schedule work on another thread when <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> is raised and then immediately return from that event handler.</source>
          <target state="translated">Для надлежащей обработки такой ситуации необходимо запланировать работу в другом потоке при появлении события <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> и затем немедленно вернуться из этого обработчика событий.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>Gets the outgoing message headers for the active <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Получает заголовки исходящих сообщений для активного контекста <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph> object that contains outbound message headers for the active <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageHeaders" /&gt;</ph>, содержащий заголовки исходящих сообщений для активного контекста <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>Use this property to add reply headers that are sent by a service operation or request headers that are sent by a WCF client object.</source>
          <target state="translated">Это свойство используется для добавления заголовков ответов, отправляемых операцией службы или заголовков запросов, отправляемых объекта клиента WCF.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application in order to add a custom header to the outgoing message.</source>
          <target state="translated">В следующем примере показано, как использовать область контекста <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> для создания нового контекста в клиентском приложении для добавления пользовательского заголовка к исходящему сообщению.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
          <source>Gets the message properties for the outbound message in the active <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">Получает свойства для исходящего сообщения в активном контексте <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> object that contains the message properties on the outbound message.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph>, содержащий свойства исходящего сообщения.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
          <source>Use this property to add message properties for a reply message from a service operation or message properties for a request message from a client proxy.</source>
          <target state="translated">Это свойство используется для добавления свойств ответных сообщений из операции службы или свойств сообщений запросов, поступающих от клиентского прокси-класса.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.RequestContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> implementation for this method.</source>
          <target state="translated">Возвращает или задает реализацию <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> для этого метода.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.RequestContext">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> implementation, or null if there is no request context.</source>
          <target state="translated">Реализация <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> или нулевое значение при отсутствии контекста запроса.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.RequestContext">
          <source>One-way operations are do not have a request context.</source>
          <target state="translated">В односторонних операциях контекста запроса нет.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.ServiceSecurityContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> within which this method executes.</source>
          <target state="translated">Возвращает или задает контекст <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph>, в котором выполняется этот метод.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.ServiceSecurityContext">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.SessionId">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> used to identify the current session.</source>
          <target state="translated">Получает строку <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, используемую для идентификации текущего сеанса.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.SessionId">
          <source>The session identifier.</source>
          <target state="translated">Идентификатор сеанса.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>Commits the currently executing transaction.</source>
          <target state="translated">Фиксирует выполняемую транзакцию.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>This is only useful in operations that set <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Это полезно только в операциях, устанавливающих для атрибута <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> значение <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>Typically, services do this on some but not all operations.</source>
          <target state="translated">Обычно службы выполняют это действие для некоторых операций, но не для всех.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>When <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> is false the transaction completes automatically.</source>
          <target state="translated">Если атрибут <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType&gt;</ph> имеет значение false, транзакция завершается автоматически.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph> in cases where it is not possible to determine at design-time whether an operation needs to complete the transaction.</source>
          <target state="translated">При невозможности определить во время разработки необходимость выполнения транзакции операцией следует использовать <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContext.SetTransactionComplete">
          <source>There is no transaction in the context.</source>
          <target state="translated">В контексте нет транзакции.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContext.SupportingTokens">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated">Получает коллекцию <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> типа <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContext.SupportingTokens">
          <source>A collection of security tokens.</source>
          <target state="translated">Коллекция маркеров безопасности.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>