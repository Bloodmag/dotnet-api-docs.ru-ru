<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceHost.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cc0149a800a359334b4485a2453d74929b5e70b9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0149a800a359334b4485a2453d74929b5e70b9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceHost">
          <source>Provides a host for services.</source>
          <target state="translated">Предоставляет ведущее приложение для служб.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>Implements the host used by the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service model programming model.</source>
          <target state="translated">Реализует узел, используемый моделью программирования модели служб <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service.</source>
          <target state="translated">Используйте класс <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> для настройки и отображения службы, предназначенной для использования клиентскими приложениями, если для отображения службы не используются службы IIS или службы активации Windows (WAS).</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>Both IIS and WAS interact with a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object on your behalf.</source>
          <target state="translated">Как службы IIS, так и службы WAS взаимодействуют с объектом <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> от вашего имени.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>To expose a service for use by callers, <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> requires a complete service description (represented by the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> class).</source>
          <target state="translated">Чтобы отобразить службу для использования вызывающими ее объектами, <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> требуется полное описание службы (представляемое классом <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class creates a <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> from the service type and configuration information and then uses that description to create <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> objects for each endpoint in the description.</source>
          <target state="translated">Класс <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> создает описание <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> из типа службы и информации о конфигурации, а затем использует это описание, чтобы создать объекты <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> для каждой конечной точки из этого описания.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>Use a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.</source>
          <target state="translated">Используйте объект <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> для загрузки службы, настройки конечных точек, применения параметров безопасности и запуска прослушивателей, обрабатывающих входящие запросы.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceHost">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor">
          <source>There are two constructors used to create an instance of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class.</source>
          <target state="translated">Для создания экземпляра класса <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> используются два конструктора.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29&gt;</ph> constructor which takes the service type as an input parameter, most of the time.</source>
          <target state="translated">Используйте конструктор <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29&gt;</ph>, который принимает тип службы как входной параметр в большинстве случаев.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor">
          <source>The host can use this to create new services as needed.</source>
          <target state="translated">Его может использовать ведущее приложение для создания новых служб по мере необходимости.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> constructor instead only when you want the service host to use a specific singleton instance of the service.</source>
          <target state="translated">Используйте вместо него конструктор <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph>, только если узел службы должен использовать особый одноэлементный экземпляр службы.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>The instance of the hosted service.</source>
          <target state="translated">Экземпляр размещенной службы.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the base addresses for the hosted service.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> типа <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>, содержащий базовые адреса размещенной службы.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> class with the instance of the service and its base addresses specified.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> с указанными экземпляром службы и базовыми адресами.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>Use this constructor as an alternative to implementing a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType&gt;</ph> when you want to provide a specific object instance for use by a singleton service.</source>
          <target state="translated">Используйте этот конструктор в качестве альтернативного варианта реализации пользовательского инициализатора <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType&gt;</ph>, если требуется предоставить определенный экземпляр объекта для использования одноэлементной службой.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).</source>
          <target state="translated">Этот перегружаемый метод можно использовать, когда тип реализации службы не позволяет легко использовать конструктор (например, если он не реализует открытый конструктор по умолчанию, не имеющий параметров).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>Note that when an object is provided to this overload, some features related to the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> instancing behavior work differently.</source>
          <target state="translated">Обратите внимание, что когда этой перегрузке передается объект, некоторые функции <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>, связанные с созданием экземпляров, работают по-другому.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>For example, calling <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType&gt;</ph> have no effect when a well-known object instance is provided using this constructor overload.</source>
          <target state="translated">Например, вызов <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType&gt;</ph> не выполняет никаких действий, если предоставлен экземпляр хорошо известного объекта с использованием перегрузки конструктора.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>Similarly, any other instance release mechanism is ignored.</source>
          <target state="translated">Аналогичным образом игнорируются все другие механизмы освобождения экземпляров.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> always behaves as if the <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType&gt;</ph> for all operations.</source>
          <target state="translated">Приложение <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> всегда ведет себя таким образом, как если бы для свойства <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType&gt;</ph> было задано значение <ph id="ph3">&lt;xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType&gt;</ph> для всех операций.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source><ph id="ph1">&lt;paramref name="singletonInstance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="singletonInstance" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>The type of hosted service.</source>
          <target state="translated">Тип размещенной службы.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the base addresses for the hosted service.</source>
          <target state="translated">Массив типа <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>, содержащий базовые адреса размещенной службы.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> class with the type of service and its base addresses specified.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> с указанными типом службы и базовыми адресами.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance.</source>
          <target state="translated">Используйте этот конструктор, когда имеется тип службы и можно создать ее новые экземпляры при необходимости, даже если требуется одноэлементный экземпляр.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> constructor instead only when you want the service host to use a specific singleton instance of the service.</source>
          <target state="translated">Используйте вместо него конструктор <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph>, только если узел службы должен использовать особый одноэлементный экземпляр службы.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>This sample illustrates how to use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class to host a Windows Communication Foundation service:</source>
          <target state="translated">В этом образце показано, как использовать класс <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> для размещения службы Windows Communication Foundation.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceHost">
          <source>Adds a service endpoint to the hosted service.</source>
          <target state="translated">Добавляет конечную точку службы в размещенную службу.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of contract for the endpoint added.</source>
          <target state="translated">Тип <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> контракта для добавленной конечной точки.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">Привязка <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> для добавленной конечной точки.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>The address for the endpoint added.</source>
          <target state="translated">Адрес для добавленной конечной точки.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.</source>
          <target state="translated">Добавляет конечную точку службы в размещенную службу с указанными контрактом, привязкой и адресом конечной точки.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>, добавленный в размещенную службу.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>, <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> или <ph id="ph3">&lt;paramref name="address" /&gt;</ph> имеет значение <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of contract for the endpoint added.</source>
          <target state="translated">Тип <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> контракта для добавленной конечной точки.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">Привязка <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> для добавленной конечной точки.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the address for the endpoint added.</source>
          <target state="translated">Код <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>, содержащий адрес для добавленной конечной точки.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.</source>
          <target state="translated">Добавляет конечную точку службы в размещенную службу с указанными контрактом, привязкой и универсальным кодом ресурса, содержащим адрес конечной точки.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>, добавленный в размещенную службу.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>, <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> или <ph id="ph3">&lt;paramref name="address" /&gt;</ph> имеет значение <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of contract for the endpoint added.</source>
          <target state="translated">Тип <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> контракта для добавленной конечной точки.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">Привязка <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> для добавленной конечной точки.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The endpoint address for the service.</source>
          <target state="translated">Адрес конечной точки для службы.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> on which the service endpoints can listen.</source>
          <target state="translated">Код <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>, по которому конечные точки службы могут ожидать передачи данных.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.</source>
          <target state="translated">Добавляет конечную точку службы в размещенную службу с указанными контрактом, привязкой, адресом конечной точки и универсальным кодом ресурса, по которому служба выполняет прослушивание.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>, добавленный в размещенную службу.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</source>
          <target state="translated">Используйте эту версию метода при наличии нескольких конечных точек, которые необходимо прослушивать по одному и тому же определенному универсальному коду ресурса.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>, <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> или <ph id="ph3">&lt;paramref name="address" /&gt;</ph> имеет значение <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of contract for the endpoint added.</source>
          <target state="translated">Тип <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> контракта для добавленной конечной точки.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">Привязка <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> для добавленной конечной точки.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the address for the endpoint added.</source>
          <target state="translated">Код <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>, содержащий адрес для добавленной конечной точки.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> on which the service endpoints can listen.</source>
          <target state="translated">Код <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>, по которому конечные точки службы могут ожидать передачи данных.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.</source>
          <target state="translated">Добавляет конечную точку службы в размещенную службу с указанными контрактом, привязкой, универсальным кодом ресурса, содержащим адрес конечной точки, и универсальным кодом ресурса, по которому служба выполняет прослушивание.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>, добавленный в размещенную службу.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</source>
          <target state="translated">Используйте эту версию метода при наличии нескольких конечных точек, которые необходимо прослушивать по одному и тому же определенному универсальному коду ресурса.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>, <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> или <ph id="ph3">&lt;paramref name="address" /&gt;</ph> имеет значение <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The contracts are not initialized or the contract keys cannot be found.</source>
          <target state="translated">Контракты не инициализированы, или ключи контрактов не найдены.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.ApplyConfiguration">
          <source>Loads the service description from the configuration file and applies it to the runtime being constructed.</source>
          <target state="translated">Загружает описание службы из файла конфигурации и применяет его к создаваемой среде выполнения.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> with key pairs of type (<ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ContractDescription" /&gt;</ph>) that contains the keyed-contracts of the hosted service that have been implemented.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> с парами ключей типа (<ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ContractDescription" /&gt;</ph>) с контрактами с ключами реализованной размещенной службы.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>Creates a description of the service hosted.</source>
          <target state="translated">Создает описание размещенной службы.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> of the hosted service.</source>
          <target state="translated">Описание <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> размещенной службы.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>This method is used to construct contract descriptions from customized programming models.</source>
          <target state="translated">Этот метод используется для создания описаний контракта из пользовательских моделей программирования.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>Override the corresponding base class method, <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29&gt;</ph>, to implement the customized model.</source>
          <target state="translated">Переопределите соответствующий метод базового класса, <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29&gt;</ph>, чтобы реализовать пользовательскую модель.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>The type of service hosted is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Тип размещенной службы — <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceHost">
          <source>Initializes a description of the service hosted based on its type or instance.</source>
          <target state="translated">Инициализирует описание службы, размещенной на основании ее типа или экземпляра.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>This method removes the requirement for passing base addresses as part of <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">Этот метод удаляет требование передачи базовых адресов как части <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> can call <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%2A&gt;</ph> and then can call one of the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost.InitializeDescription%2A&gt;</ph> when a base address is available.</source>
          <target state="translated">Классы, наследуемые от <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, могут вызывать <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%2A&gt;</ph>, а затем вызывать одно из описаний <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost.InitializeDescription%2A&gt;</ph>, когда доступен базовый адрес.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>This is how the Service Model Metadata Utility Tool (Svcutil.exe) is implemented.</source>
          <target state="translated">Таким образом реализуется средство метаданных модели службы (Svcutil.exe).</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>The instance of the hosted service.</source>
          <target state="translated">Экземпляр размещенной службы.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /&gt;</ph> that contains the base addresses for the hosted service.</source>
          <target state="translated">Коллекция <ph id="ph1">&lt;see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /&gt;</ph>, содержащая базовые адреса размещенной службы.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>Initializes a description of the service hosted based on its instance and specified base addresses.</source>
          <target state="translated">Инициализирует описание службы, размещенной на основе ее экземпляра и указанных базовых адресов.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
          <source><ph id="ph1">&lt;paramref name="singletonInstance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="singletonInstance" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of service hosted.</source>
          <target state="translated">Тип <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> размещенной службы.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /&gt;</ph> that contains the base addresses for the hosted service.</source>
          <target state="translated">Коллекция <ph id="ph1">&lt;see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /&gt;</ph>, содержащая базовые адреса размещенной службы.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>Initializes a description of the service hosted based on its type and specified base addresses.</source>
          <target state="translated">Инициализирует описание службы, размещенной на основе ее типа и указанных базовых адресов.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.OnClosed">
          <source>Disposes of disposable services that are being hosted when the service host is closed.</source>
          <target state="translated">Удаляет службы с возможностью удаления, размещенные во время закрытия узла службы.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.OnClosed">
          <source>When overriding the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.OnClosed%2A&gt;</ph> method you must ensure the base.OnClosed method is called, even if an exception occurs.</source>
          <target state="translated">При переопределении метода <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.OnClosed%2A&gt;</ph> метод должен обеспечивать базовый. Вызывается метод OnClosed, даже при возникновении исключения.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.OnClosed">
          <source>The following code illustrates how to do this.</source>
          <target state="translated">Следующий код иллюстрирует, как это сделать.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHost.SingletonInstance">
          <source>Gets the singleton instance of the hosted service.</source>
          <target state="translated">Возвращает одноэлементный экземпляр размещенной службы.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHost.SingletonInstance">
          <source>The hosted service object.</source>
          <target state="translated">Объект размещенной службы.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHost.SingletonInstance">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used.</source>
          <target state="translated">Используйте конструктор <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> для инициализации одноэлементного экземпляра размещаемой службы, когда необходимо контролировать экземпляр используемой службы.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>