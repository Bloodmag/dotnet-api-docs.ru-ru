<Type Name="ServiceKnownTypeAttribute" FullName="System.ServiceModel.ServiceKnownTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d32ea625b1739a39c8b4ee8dab59202ab8c57344" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ServiceKnownTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceKnownTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceKnownTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceKnownTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceKnownTypeAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="14b07-101">Задает известные типы, которые должны использоваться службой при сериализации или десериализации.</span>
      <span class="sxs-lookup">
        <span data-stu-id="14b07-101">Specifies known types to be used by a service when serializing or deserializing.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b07-102">Класс <xref:System.ServiceModel.ServiceKnownTypeAttribute> предназначен для использования при создании контрактов службы [!INCLUDE[indigo1](~/includes/indigo1-md.md)] (интерфейсов, определяющих службу и ее методы).</span><span class="sxs-lookup"><span data-stu-id="14b07-102">The <xref:System.ServiceModel.ServiceKnownTypeAttribute> is intended for use when creating [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service contracts (interfaces that define the service and its methods).</span></span> <span data-ttu-id="14b07-103">*Известные типы* являются типами, которые могут присутствовать в графе объекта при возникновении сериализации или десериализации.</span><span class="sxs-lookup"><span data-stu-id="14b07-103">The *known types* are types that may be present in an object graph when serialization or deserialization occurs.</span></span> <span data-ttu-id="14b07-104">Дополнительные сведения об известных типах см. в разделе [известные типы контрактов данных](~/docs/framework/wcf/feature-details/data-contract-known-types.md).</span><span class="sxs-lookup"><span data-stu-id="14b07-104">For more information about known types, see [Data Contract Known Types](~/docs/framework/wcf/feature-details/data-contract-known-types.md).</span></span>  
  
 <span data-ttu-id="14b07-105">Чтобы использовать свойство <xref:System.ServiceModel.ServiceKnownTypeAttribute.MethodName%2A>, создайте класс, который содержит метод (или методы), возвращающий массив типов (каждый из которых является известным типом).</span><span class="sxs-lookup"><span data-stu-id="14b07-105">To use the <xref:System.ServiceModel.ServiceKnownTypeAttribute.MethodName%2A> property, create a class that contains a method (or methods) that returns an array of types (each being a known type).</span></span> <span data-ttu-id="14b07-106">При применении данного атрибута задайте для свойства `methodName` имя метода, который возвращает список типов, а для свойства `declaringType` — тип, содержащий этот метод.</span><span class="sxs-lookup"><span data-stu-id="14b07-106">When applying the attribute, set the `methodName` to the name of a method that returns the list of types and set the `declaringType` to the type that contains the method.</span></span> <span data-ttu-id="14b07-107">Метод должен вернуть тип, реализующий интерфейс <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="14b07-107">The method must return a type that implements the <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span> <span data-ttu-id="14b07-108">Метод должен также включать параметр типа <xref:System.Reflection.ICustomAttributeProvider>.</span><span class="sxs-lookup"><span data-stu-id="14b07-108">The method must also include a parameter of type <xref:System.Reflection.ICustomAttributeProvider>.</span></span>  
  
 <span data-ttu-id="14b07-109">Данный атрибут можно также применить несколько раз для интерфейса, класса или метода, каждый раз задавая новый известный тип.</span><span class="sxs-lookup"><span data-stu-id="14b07-109">You can also apply the attribute several times to an interface, class, or method, each time specifying a new known type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="14b07-110">В коде Microsoft Visual Basic или C# вместо слова `ServiceKnownType` можно использовать более короткое слово `ServiceKnownTypeAttribute`.</span><span class="sxs-lookup"><span data-stu-id="14b07-110">You can use the word `ServiceKnownType` in your Microsoft Visual Basic or C# code instead of the longer `ServiceKnownTypeAttribute`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b07-111">В следующем примере атрибут <xref:System.ServiceModel.ServiceKnownTypeAttribute> применяется для интерфейса, где он задает имя метода и тип объявления.</span><span class="sxs-lookup"><span data-stu-id="14b07-111">The following example applies the <xref:System.ServiceModel.ServiceKnownTypeAttribute> attribute to an interface where the attribute specifies a method name and a declaring type.</span></span>  
  
 [!code-csharp[ServiceKnownTypeAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/serviceknowntypeattribute/cs/source.cs#1)]
 [!code-vb[ServiceKnownTypeAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/serviceknowntypeattribute/vb/source.vb#1)]  
  
 <span data-ttu-id="14b07-112">Можно также применить атрибут для интерфейса, задав включаемый известный тип.</span><span class="sxs-lookup"><span data-stu-id="14b07-112">Alternatively, apply the attribute to the interface specifying the known type to include.</span></span>  
  
 [!code-csharp[ServiceKnownTypeAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/serviceknowntypeattribute/cs/source.cs#2)]
 [!code-vb[ServiceKnownTypeAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/serviceknowntypeattribute/vb/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractAttribute" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14b07-113">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14b07-113">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceKnownTypeAttribute (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceKnownTypeAttribute(System::String ^ methodName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="14b07-114">Имя метода, который возвращает известные типы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14b07-114">The name of a method that returns the known types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14b07-115">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> и задает имя метода, который возвращает известные типы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14b07-115">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> class and specifies the name of a method that returns the known types.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b07-116">Используйте этот конструктор при применении атрибута <xref:System.ServiceModel.ServiceKnownTypeAttribute> к классу, который содержит методы, возвращающие известные типы.</span><span class="sxs-lookup"><span data-stu-id="14b07-116">Use this constructor when applying the <xref:System.ServiceModel.ServiceKnownTypeAttribute> to a class that contains methods that return known types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType" />
        <altmember cref="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceKnownTypeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceKnownTypeAttribute(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="14b07-117">Задает известный тип, который может использоваться в параметре или возвращаемом значении, определенном службой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14b07-117">Specifies a known type that can be used in a parameter or return value defined by the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14b07-118">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> с заданным известным типом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14b07-118">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> class with the specified known type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b07-119">Атрибут <xref:System.ServiceModel.ServiceKnownTypeAttribute> может применяться для метода несколько раз с указанием при каждом применении другого известного типа, который может присутствовать в графе объектов, возвращаемом этим методом.</span><span class="sxs-lookup"><span data-stu-id="14b07-119">The <xref:System.ServiceModel.ServiceKnownTypeAttribute> can be applied several times to a method, with each application naming a different known type that may be present in the object graph returned by the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b07-120">В следующем примере атрибут <xref:System.ServiceModel.ServiceKnownTypeAttribute> применяется для интерфейса, где он задает включаемый тип.</span><span class="sxs-lookup"><span data-stu-id="14b07-120">The following example applies the <xref:System.ServiceModel.ServiceKnownTypeAttribute> attribute to an interface where the attribute specifies the type to include.</span></span>  
  
 [!code-csharp[ServiceKnownTypeAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/serviceknowntypeattribute/cs/source.cs#2)]
 [!code-vb[ServiceKnownTypeAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/serviceknowntypeattribute/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceKnownTypeAttribute (string methodName, Type declaringType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodName, class System.Type declaringType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodName As String, declaringType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceKnownTypeAttribute(System::String ^ methodName, Type ^ declaringType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="14b07-121">Имя метода, который возвращает известные типы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14b07-121">The name of a method that returns the known types.</span>
          </span>
        </param>
        <param name="declaringType">
          <span data-ttu-id="14b07-122">Тип, который может использовать известные типы в своем графе объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14b07-122">The type that can use the known types in its object graph.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14b07-123">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> с именем метода, который возвращает известные типы и тип, содержащий метод (или методы), возвращающий известные типы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14b07-123">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> class with the name of a method that returns the known types and the type that contains the method (or methods) that returns the known types.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14b07-124">В следующем примере атрибут <xref:System.ServiceModel.ServiceKnownTypeAttribute> применяется для интерфейса, где он задает имя метода и тип объявления.</span><span class="sxs-lookup"><span data-stu-id="14b07-124">The following example applies the <xref:System.ServiceModel.ServiceKnownTypeAttribute> attribute to an interface where the attribute specifies a method name and a declaring type.</span></span>  
  
 [!code-csharp[ServiceKnownTypeAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/serviceknowntypeattribute/cs/source.cs#1)]
 [!code-vb[ServiceKnownTypeAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/serviceknowntypeattribute/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType" />
        <altmember cref="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName" />
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14b07-125">Возвращает тип, который содержит методы, возвращающие известные типы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14b07-125">Gets the type that contains the methods that return the known types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14b07-126">Тип <see cref="T:System.Type" />, который содержит методы, возвращающие известные типы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14b07-126">The <see cref="T:System.Type" /> that contains the methods that return the known types.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14b07-127">Возвращает имя метода, возвращающего коллекцию известных типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14b07-127">Gets the name of a method that returns the collection of known types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14b07-128">Имя метода, который возвращает известные типы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14b07-128">The name of the method that returns the known types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b07-129">Имя <xref:System.ServiceModel.ServiceKnownTypeAttribute.MethodName%2A> должно быть именем метода для типа, заданного свойством <xref:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="14b07-129">The <xref:System.ServiceModel.ServiceKnownTypeAttribute.MethodName%2A> must be the name of a method on the type specified by the <xref:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceKnownTypeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14b07-130">Известный тип, который может быть включен в граф объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14b07-130">The known type that can be included in an object graph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14b07-131">Объект <see cref="T:System.Type" /> известного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14b07-131">The <see cref="T:System.Type" /> of the known type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>