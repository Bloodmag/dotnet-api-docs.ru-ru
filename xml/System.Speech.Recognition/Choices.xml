<Type Name="Choices" FullName="System.Speech.Recognition.Choices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd9cc2fbd432c884d0969daa9ad6628ba5115386" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33680882" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Choices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Choices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.Choices" />
  <TypeSignature Language="VB.NET" Value="Public Class Choices" />
  <TypeSignature Language="C++ CLI" Value="public ref class Choices" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_oneOf.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет набор вариантов в ограничениях грамматики распознавания речи.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Speech.Recognition.Choices> объект представляет собой компонент фразу, которая может иметь одно из следующих значений. Этот класс используется при создании Грамматика распознавания речи из <xref:System.Speech.Recognition.GrammarBuilder> объекта.  
  
 Например <xref:System.Speech.Recognition.Choices> объект может представлять собой компонент *colorChoice* из фразы «можно изменить цвет на *colorChoice*», где допустимые значения для *colorChoice* «red» или «зеленый» и «синий».  
  
> [!NOTE]
>  Для использования <xref:System.Speech.Recognition.Choices> объекта в качестве дополнительного компонента во фразе, создайте <xref:System.Speech.Recognition.Choices> и добавьте его к <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> объекта с `minRepeat` и `maxRepeat` значение 0 и 1, соответственно. Независимо от того, имеется ли произносятся дополнительный компонент, распознаваемое фраз, содержащий дополнительные компоненты.  
  
 <xref:System.Speech.Recognition.Choices> Класс выполняет ту же функцию, что `one-of` элементом XML, определенным в [спецификации грамматики распознавания речи (SRGS) версии 1.0](https://www.w3.org/TR/speech-grammar/) и похож на <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> класса в <xref:System.Speech.Recognition.SrgsGrammar> пространство имен.  
  
 Дополнительные сведения об определении Грамматика распознавания речи см. в разделе [распознавания речи](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) и [создание грамматики GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).  
  
   
  
## Examples  
 В следующем примере создается Грамматика распознавания речи для фразы «задать фон *colorChoice*», где *colorChoice* может принимать одно из определенных цветов. <xref:System.Speech.Recognition.GrammarBuilder> Используется для определения ограничений для грамматики.  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a Choices object that contains a set of alternative colors.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  colorChoice.Add(new string[] {"cyan", "yellow", "magenta"});  
  
  // Construct the phrase.  
  GrammarBuilder builder = new GrammarBuilder("Set background to");  
  builder.Append(colorChoice);  
  
  // Create a grammar for the phrase.  
  Grammar colorGrammar = new Grammar(builder);  
  colorGrammar.Name = "SetBackground";  
  
  return colorGrammar;  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.Choices" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно создать <xref:System.Speech.Recognition.Choices> объекта, используя конструктор по умолчанию (который возвращает пустой объект), из группы <xref:System.String> объектов, или из набора <xref:System.Speech.Recognition.GrammarBuilder> объектов.  
  
 Поскольку <xref:System.Speech.Recognition.GrammarBuilder> объект поддерживает неявное преобразование из <xref:System.Speech.Recognition.SemanticResultValue> и <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices> могут создаваться из этих объектов с помощью приведения к типу массива.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Speech.Recognition.Choices> объектов для создания двух списков альтернативных вариантов.  
  
 Первый <xref:System.Speech.Recognition.Choices> объект создается из массива <xref:System.String> объектов. Другой <xref:System.Speech.Recognition.Choices> объект создается из массива <xref:System.Speech.Recognition.GrammarBuilder> объекты, которые неявно преобразовать путем приведения.  
  
 В этом примере <xref:System.Speech.Recognition.GrammarBuilder> объекта сборка фразу, с помощью <xref:System.Speech.Recognition.Choices> объектов и двух дополнительных строк, которые могут использоваться для распознавания речи ввода в форме «Call [contactlList] на телефоне [phoneType]», например «Jane вызова на мобильный телефон».  
  
```  
public GrammarBuilder ChoicesContructor2 ()  
{  
    GrammarBuilder gb = new GrammarBuilder ();  
    Choices phoneType = new Choices (new string[] {"cell", "home", "work"});  
    Choices contactList = new Choices (new GrammarBuilder[] {(GrammarBuilder) "Mark", (GrammarBuilder) "Jane", (GrammarBuilder) "Frank"});  
    gb.Append ("Call");  
    gb.Append (contactList);  
    gb.Append ("on");  
    gb.Append (phoneType);  
    gb.Append ("phone");  
    return gb;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.Choices" />, содержащий пустой набор вариантов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор возвращает допустимый, пустой набор альтернативных вариантов. Можно добавить одним из альтернативных <xref:System.Speech.Recognition.Choices.Add%2A> методы.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Speech.Recognition.Choices> и <xref:System.Speech.Recognition.GrammarBuilder> объекты для создания фразу, которая может использоваться для распознавания речи входные данные, такие как «Вызов Anne своей ячейке» и «James вызов на свой рабочий телефон». В примере используется неявное приведение из <xref:System.Speech.Recognition.Choices> и <xref:System.String> для <xref:System.Speech.Recognition.GrammarBuilder>.  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices (params System.Speech.Recognition.GrammarBuilder[] alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder[] alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray alternateChoices As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices(... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ alternateChoices);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="alternateChoices">Массив, содержащий набор альтернатив.</param>
        <summary>Инициализирует экземпляр класса <see cref="T:System.Speech.Recognition.Choices" /> из массива, содержащего один или несколько объектов <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый <xref:System.Speech.Recognition.GrammarBuilder> в `alternateChoices` определяет один из них. Если `alternateChoices` — пустой массив, конструктор возвращает пустой набор альтернативных вариантов. Можно добавить одним из альтернативных <xref:System.Speech.Recognition.Choices.Add%2A> методы.  
  
 Конструктор вызывает <xref:System.ArgumentNullException> при `alternateChoices` — `null` или если все элементы массива являются `null`.  
  
 Поскольку <xref:System.Speech.Recognition.GrammarBuilder> класс обеспечивает поддержку неявное преобразование <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultValue>, и <xref:System.Speech.Recognition.SemanticResultKey> объектов <xref:System.Speech.Recognition.GrammarBuilder> экземпляров, с надлежащим образом при использовании приведений, этот конструктор может также использоваться для создания <xref:System.Speech.Recognition.Choices> объект из списка любые из этих объектов.  
  
   
  
## Examples  
 В следующем примере используется `Choices` и <xref:System.Speech.Recognition.GrammarBuilder> объектов для создания <xref:System.Speech.Recognition.Grammar> фраз, такие как «Вызов Anne своей ячейке» и «James вызов на свой рабочий телефон». В примере используется неявное приведение из `Choices` и <xref:System.String> для <xref:System.Speech.Recognition.GrammarBuilder>.  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices (params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices(... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="phrases">Массив, содержащий набор альтернатив.</param>
        <summary>Инициализирует экземпляр класса <see cref="T:System.Speech.Recognition.Choices" /> из массива, содержащего один или несколько объектов <see cref="T:System.String" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый <xref:System.String> в `phrases` определяет один из них. Распознавание речи можно использовать один из элементов в массиве строк в соответствии с входными данными речи. Если `phrases` — пустой массив, конструктор возвращает пустой набор альтернативных вариантов. Можно добавить одним из альтернативных <xref:System.Speech.Recognition.Choices.Add%2A> методы.  
  
 Конструктор вызывает <xref:System.ArgumentNullException> при `phrases` — `null` или какой-либо из элементов массива `null`. Конструктор вызывает <xref:System.ArgumentException> Если любой элемент в массиве является пустая строка (»»).  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Speech.Recognition.Choices> и <xref:System.Speech.Recognition.GrammarBuilder> объектов для создания <xref:System.Speech.Recognition.Grammar> фраз, такие как «Вызов Anne своей ячейке» и «James вызов на свой рабочий телефон». В примере используется неявное приведение из `Choices` и <xref:System.String> для <xref:System.Speech.Recognition.GrammarBuilder>.  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет элементы в набор вариантов.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (params System.Speech.Recognition.GrammarBuilder[] alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Speech.Recognition.GrammarBuilder[] alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (ParamArray alternateChoices As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ alternateChoices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="alternateChoices">Объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, добавляемый в данный объект <see cref="T:System.Speech.Recognition.Choices" />.</param>
        <summary>Добавляет массив, содержащий один или несколько объектов <see cref="T:System.Speech.Recognition.GrammarBuilder" />, в набор вариантов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Благодаря поддержке неявное преобразование из <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, и <xref:System.Speech.Recognition.SemanticResultValue> объекты для <xref:System.Speech.Recognition.GrammarBuilder>, могут быть добавлены этих трех классов <xref:System.Speech.Recognition.Choices> также экземпляр.  
  
 Если `alternateChoices` — пустой массив, этот метод не обновляет набор альтернативных методов.  
  
 Приложения могут использовать оба <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> и <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> Добавление альтернативы <xref:System.Speech.Recognition.Choices> объекта.  
  
 Этот метод создает исключение <xref:System.ArgumentNullException> при `alternateChoices` — `null` или какой-либо из элементов массива `null`.  
  
   
  
## Examples  
 В следующем примере создается Грамматика распознавания речи для фраз, такие как «Вызов Anne своей ячейке» и «James вызов на свой рабочий телефон». В этом примере обе перегрузки <xref:System.Speech.Recognition.Choices.Add%2A> метод для построения грамматики.  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.Add(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="phrases">Строки для добавления в этот объект <see cref="T:System.Speech.Recognition.Choices" />.</param>
        <summary>Добавляет массив, содержащий один или несколько объектов <see cref="T:System.String" />, в набор вариантов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения могут использовать оба <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> и <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> Добавление альтернативы <xref:System.Speech.Recognition.Choices> объекта.  
  
 Если `phrases` — пустой массив, этот метод не обновляет набор вариантов.  
  
 Этот метод создает исключение <xref:System.ArgumentNullException> при `phrases` — `null` или какой-либо из элементов массива `null`. Этот метод создает исключение <xref:System.ArgumentException> Если любой элемент в массиве является пустой строкой (»»).  
  
   
  
## Examples  
 В следующем примере создается Грамматика распознавания речи фраз аналогично «Вызова Anne своей ячейке» и «James вызов на свой рабочий телефон». В этом примере обе перегрузки <xref:System.Speech.Recognition.Choices.Add%2A> метод для построения грамматики.  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Speech.Recognition.GrammarBuilder" /> из данного объекта <see cref="T:System.Speech.Recognition.Choices" />.</summary>
        <returns>
          <see cref="T:System.Speech.Recognition.GrammarBuilder" />, соответствующий данному объекту <see cref="T:System.Speech.Recognition.Choices" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Recognition.GrammarBuilder> Возвращается с помощью данного метода эквивалентен один возвращается одно из следующих.  
  
-   Вызов <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> конструктор с этим объектом, в качестве параметра.  
  
-   С помощью явного или неявного приведения для этого объекта <xref:System.Speech.Recognition.GrammarBuilder>.  
  
   
  
## Examples  
 В следующем примере создается грамматику распознавания речи для изменения цвета фона.  
  
```csharp  
  
private Grammar CreateColorChoice()  
{  
  
  // Create a Choices object that contains a set of alternative colors.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append(new Choices(new string[] {"Set", "Change"}));  
  gb.Append("background to");  
  gb.Append(colorChoice.ToGrammarBuilder());  
  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "modify background color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>