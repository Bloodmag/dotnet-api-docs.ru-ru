<Type Name="GrammarBuilder" FullName="System.Speech.Recognition.GrammarBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5180154fc823f5d48fbe9b004e9bbaeb45758265" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39988875" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GrammarBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GrammarBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.GrammarBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class GrammarBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class GrammarBuilder" />
  <TypeSignature Language="F#" Value="type GrammarBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f89fd-101">Предоставляет механизм для программного создания ограничений для грамматики распознавания речи.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f89fd-101">Provides a mechanism for programmatically building the constraints for a speech recognition grammar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-102">Грамматиками распознавания речи часто разрабатываются в XML-формате, заданном параметром [спецификации грамматики распознавания речи (SRGS) версии 1.0](http://go.microsoft.com/fwlink/?LinkId=201761).</span><span class="sxs-lookup"><span data-stu-id="f89fd-102">Speech recognition grammars are commonly authored in the XML format defined by the [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761).</span></span> <span data-ttu-id="f89fd-103">Если вы знакомы с SRGS, но необходимо программно создавать грамматики, можно использовать <xref:System.Speech.Recognition.SrgsGrammar> пространства имен, члены которого близко соответствуют элементами и атрибутами, определенными по SRGS.</span><span class="sxs-lookup"><span data-stu-id="f89fd-103">If you are familiar with SRGS but want to generate the grammars programmatically, you can use the <xref:System.Speech.Recognition.SrgsGrammar> namespace, whose members correspond closely to the elements and attributes defined by SRGS.</span></span> <span data-ttu-id="f89fd-104">Если вы не знакомы с SRGS, или упрощенный программный подход для создания грамматики, с помощью которых можно эффективно выполнять множество распространенных сценариев; можно использовать <xref:System.Speech.Recognition.GrammarBuilder> и <xref:System.Speech.Recognition.Choices> классы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-104">If you are unfamiliar with SRGS, or you want a lightweight, programmatic approach to authoring grammars with which you can efficiently accomplish many common scenarios; you can use the <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> classes.</span></span>  
  
 <span data-ttu-id="f89fd-105">Используйте <xref:System.Speech.Recognition.GrammarBuilder> объектов для построения иерархическое дерево состоит из <xref:System.Speech.Recognition.Choices> объекты, которые содержат фразы, смешивается с преамбула и после amble фраз в каждом узле и заполняется семантического значения, которые передают значение в приложение.</span><span class="sxs-lookup"><span data-stu-id="f89fd-105">Use <xref:System.Speech.Recognition.GrammarBuilder> objects to build a hierarchical tree composed of <xref:System.Speech.Recognition.Choices> objects that contain alternate phrases, interspersed with preamble and post-amble phrases at each node, and seeded with semantic values that convey  meaning back to the application.</span></span>  
  
 <span data-ttu-id="f89fd-106">Чтобы использовать <xref:System.Speech.Recognition.GrammarBuilder> для создания <xref:System.Speech.Recognition.Grammar> объекта, выполните следующие действия.</span><span class="sxs-lookup"><span data-stu-id="f89fd-106">To use a <xref:System.Speech.Recognition.GrammarBuilder> to create a <xref:System.Speech.Recognition.Grammar> object, use the following steps.</span></span>  
  
1.  <span data-ttu-id="f89fd-107">Создание объекта <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-107">Create a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
2.  <span data-ttu-id="f89fd-108">Добавление ограничений к <xref:System.Speech.Recognition.GrammarBuilder>, такие как <xref:System.String> объектов, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>и другие <xref:System.Speech.Recognition.GrammarBuilder> объекты, определяющие ограничения для грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-108">Append constraints to the <xref:System.Speech.Recognition.GrammarBuilder>, such as <xref:System.String> objects, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>, and other <xref:System.Speech.Recognition.GrammarBuilder> objects that define the constraints for the grammar.</span></span>  
  
3.  <span data-ttu-id="f89fd-109">Используйте один из <xref:System.Speech.Recognition.Grammar.%23ctor%2A> конструкторы для создания <xref:System.Speech.Recognition.Grammar> объект из завершенного <xref:System.Speech.Recognition.GrammarBuilder> грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-109">Use one of the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructors to create a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder> grammar.</span></span>  
  
 <span data-ttu-id="f89fd-110">Разработка с помощью <xref:System.Speech.Recognition.GrammarBuilder> лучше всего подходит для грамматики, иметь одно правило, содержащий списков или списков возможно списков.</span><span class="sxs-lookup"><span data-stu-id="f89fd-110">Authoring with <xref:System.Speech.Recognition.GrammarBuilder> is best suited to grammars that have a single rule containing lists, or perhaps lists of lists.</span></span> <span data-ttu-id="f89fd-111">Чтобы программно создавать грамматики, имеющих несколько правил, или которым необходимо выполнять внутреннее правило ссылки, используйте классы <xref:System.Speech.Recognition.SrgsGrammar> пространства имен.</span><span class="sxs-lookup"><span data-stu-id="f89fd-111">To programmatically build grammars that have multiple rules, or that need to make internal rule references, use the classes of the <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span></span>  
  
 <span data-ttu-id="f89fd-112">Экземпляры <xref:System.Speech.Recognition.GrammarBuilder> также можно получить путем неявного преобразования из некоторые другие классы или путем объединения <xref:System.Speech.Recognition.GrammarBuilder> со второй объект, содержащий ограничения для грамматики...</span><span class="sxs-lookup"><span data-stu-id="f89fd-112">Instances of <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained by implicit conversions from certain other classes or by combining a  <xref:System.Speech.Recognition.GrammarBuilder> with a second object that contains constraints for a grammar..</span></span> <span data-ttu-id="f89fd-113">Дополнительные сведения см. в разделе <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> и <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> операторы и <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-113">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators and the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="f89fd-114">Чтобы добавить правила в существующий <xref:System.Speech.Recognition.GrammarBuilder>, использовать <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, и <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-114">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-115">Распознаватель речи может создавать исключения, при использовании грамматики распознавания речи, содержит повторяющиеся семантические элементы с тем же именем ключа или нескольких семантические элементы, которые многократно может изменять значение элемента же семантической.</span><span class="sxs-lookup"><span data-stu-id="f89fd-115">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="f89fd-116">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [с помощью SemanticResultKey и объекты SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-116">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="f89fd-117">Чтобы помочь с отладкой, <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> свойство возвращает текущее состояние <xref:System.Speech.Recognition.GrammarBuilder> как строка.</span><span class="sxs-lookup"><span data-stu-id="f89fd-117">To help with debugging, the <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> property returns the current status of the <xref:System.Speech.Recognition.GrammarBuilder> as a string.</span></span>  
  
 <span data-ttu-id="f89fd-118">Дополнительные сведения о создании и использовании грамматиками распознавания речи, см. в разделе [распознавания речи](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) и [создание грамматики GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="f89fd-118">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-119">В следующем примере используется <xref:System.Speech.Recognition.GrammarBuilder> и <xref:System.Speech.Recognition.Choices> объекты для создания грамматики, который может распознать одно из двух фразы «фон *colorChoice*"или «Меняем цвет фона на *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="f89fd-119">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="f89fd-120">В примере используется <xref:System.Speech.Recognition.Choices> объект для создания списка допустимых значений для *colorChoice* из массива <xref:System.String> объектов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-120">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="f89fd-121">Объект <xref:System.Speech.Recognition.Choices> объекта является аналогом `one-of` в спецификации SRGS и содержит набор фраз, которые можно распознать при произношении.</span><span class="sxs-lookup"><span data-stu-id="f89fd-121">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="f89fd-122">В примере также используется <xref:System.Speech.Recognition.Choices> объекта для группирования массив из двух <xref:System.Speech.Recognition.GrammarBuilder> объекты в пару альтернативные фраз, которые может распознать результирующий грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-122">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="f89fd-123">Альтернативные слова или фразы являются компонентами большинства грамматики и <xref:System.Speech.Recognition.Choices> объект предоставляет следующие функциональные возможности для грамматик создан с параметром <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-123">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="f89fd-124">Наконец, в примере создается <xref:System.Speech.Recognition.Grammar> объекта из <xref:System.Speech.Recognition.GrammarBuilder> образована <xref:System.Speech.Recognition.Choices> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-124">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Choices" />
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f89fd-125">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-125">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-126">Экземпляры этого класса можно получить также неявные преобразования из других классов или путем объединения <xref:System.Speech.Recognition.GrammarBuilder> объект со второй объект из нового <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-126">Instances of this class can also be obtained by implicit conversions from other classes or by combining a <xref:System.Speech.Recognition.GrammarBuilder> object with a second object to from a new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="f89fd-127">Дополнительные сведения см. в разделе <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> и <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-127">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods.</span></span>  
  
 <span data-ttu-id="f89fd-128">Добавление ограничений к существующему <xref:System.Speech.Recognition.GrammarBuilder>, использовать <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, и <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> методов и <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> оператор.</span><span class="sxs-lookup"><span data-stu-id="f89fd-128">To add constraints to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-129">Распознаватель речи может создавать исключения, при использовании грамматики распознавания речи, содержит повторяющиеся семантические элементы с тем же именем ключа или нескольких семантические элементы, которые многократно может изменять значение элемента же семантической.</span><span class="sxs-lookup"><span data-stu-id="f89fd-129">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="f89fd-130">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [с помощью SemanticResultKey и объекты SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-130">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="f89fd-131">Дополнительные сведения о создании и использовании грамматиками распознавания речи, см. в разделе [распознавания речи](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) и [создание грамматики GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="f89fd-131">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f89fd-132">Инициализирует новый пустой экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-132">Initializes a new, empty instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-133">Чтобы добавить правила в существующий <xref:System.Speech.Recognition.GrammarBuilder> , используйте <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, и <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> методов и <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> оператор.</span><span class="sxs-lookup"><span data-stu-id="f89fd-133">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder> object, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-134">Распознаватель речи может создавать исключения, при использовании грамматики распознавания речи, содержит повторяющиеся семантические элементы с тем же именем ключа или нескольких семантические элементы, которые многократно может изменять значение элемента же семантической.</span><span class="sxs-lookup"><span data-stu-id="f89fd-134">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="f89fd-135">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [с помощью SemanticResultKey и объекты SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-135">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-136">В следующем примере используется <xref:System.Speech.Recognition.GrammarBuilder> и <xref:System.Speech.Recognition.Choices> объекты для создания грамматики, который может распознать одно из двух фразы «фон *colorChoice*"или «Меняем цвет фона на *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="f89fd-136">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="f89fd-137">В примере используется <xref:System.Speech.Recognition.Choices> объект для создания списка допустимых значений для *colorChoice* из массива <xref:System.String> объектов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-137">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="f89fd-138">Объект <xref:System.Speech.Recognition.Choices> объекта является аналогом `one-of` в спецификации SRGS и содержит набор фраз, любое из которых можно распознать при произношении.</span><span class="sxs-lookup"><span data-stu-id="f89fd-138">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any one of which can be recognized when spoken.</span></span> <span data-ttu-id="f89fd-139">В примере также используется <xref:System.Speech.Recognition.Choices> объекта для группирования массив из двух <xref:System.Speech.Recognition.GrammarBuilder> объекты в пару альтернативные фраз, которые может распознать результирующий грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-139">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="f89fd-140">Альтернативные слова или фразы являются компонентами большинства грамматики и <xref:System.Speech.Recognition.Choices> объект предоставляет следующие функциональные возможности для грамматик создан с параметром <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-140">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="f89fd-141">Наконец, в примере создается <xref:System.Speech.Recognition.Grammar> объекта из <xref:System.Speech.Recognition.GrammarBuilder> образована <xref:System.Speech.Recognition.Choices> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-141">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  GrammarBuilder bothPhrases = new GrammarBuilder();  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  bothPhrases.Append(bothChoices);  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder alternateChoices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="f89fd-142">Набор вариантов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-142">The set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-143">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" /> из набора объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-143">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a set of alternatives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-144">Дополнительные сведения о создании грамматики распознавания речи, который содержит альтернативные варианты, см. в разделе [с помощью варианта для создания грамматики GrammarBuilder](http://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span><span class="sxs-lookup"><span data-stu-id="f89fd-144">For more information about building a speech recognition grammar that contains alternatives, see [Using Choices to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-145">В следующем примере используется <xref:System.Speech.Recognition.GrammarBuilder> и <xref:System.Speech.Recognition.Choices> объекты для создания грамматики, который может распознать одно из двух фразы «фон *colorChoice*"или «Меняем цвет фона на *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="f89fd-145">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="f89fd-146">В примере используется <xref:System.Speech.Recognition.Choices> объект для создания списка допустимых значений для *colorChoice* из массива <xref:System.String> объектов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-146">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="f89fd-147">Объект <xref:System.Speech.Recognition.Choices> объекта является аналогом `one-of` в спецификации SRGS и содержит набор фраз, которые можно распознать при произношении.</span><span class="sxs-lookup"><span data-stu-id="f89fd-147">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="f89fd-148">В примере также используется <xref:System.Speech.Recognition.Choices> объекта для группирования массив из двух <xref:System.Speech.Recognition.GrammarBuilder> объекты в пару альтернативные фраз, которые может распознать результирующий грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-148">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="f89fd-149">Альтернативные слова или фразы являются компонентами большинства грамматики и <xref:System.Speech.Recognition.Choices> объект предоставляет следующие функциональные возможности для грамматик создан с параметром <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-149">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="f89fd-150">Наконец, в примере создается <xref:System.Speech.Recognition.Grammar> объекта из <xref:System.Speech.Recognition.GrammarBuilder> образована <xref:System.Speech.Recognition.Choices> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-150">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f89fd-151">Семантический ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-151">The semantic key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-152">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" /> из семантического ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-152">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-153">При создании <xref:System.Speech.Recognition.GrammarBuilder> экземпляра из <xref:System.Speech.Recognition.SemanticResultValue> объекта, добавьте семантической информации в грамматику, которые могут быть возвращены в результате распознавания.</span><span class="sxs-lookup"><span data-stu-id="f89fd-153">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="f89fd-154">Вы можете получить доступ к семантической информации в результат распознавания с помощью <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> свойство <xref:System.Speech.Recognition.RecognizedPhrase>, которая доступна в обработчике `SpeechRecognized` событий.</span><span class="sxs-lookup"><span data-stu-id="f89fd-154">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="f89fd-155">Если <xref:System.Speech.Recognition.GrammarBuilder> определяет <xref:System.Speech.Recognition.SemanticResultKey>, это может использоваться для получения семантической информации в верности результата распознавания, связанный с ключом.</span><span class="sxs-lookup"><span data-stu-id="f89fd-155">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="f89fd-156">См. в примере <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, а также см. в разделе <xref:System.Speech.Recognition.SemanticResultValue> и <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-156">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-157">При построении <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> экземпляров, убедитесь в том, позволяет избежать создания повторяющихся семантические элементы с тем же именем ключа или нескольких семантические элементы, которые многократно изменить <xref:System.Speech.Recognition.SemanticValue.Value%2A> Свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-157">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="f89fd-158">Распознаватель речи может создавать исключения при обнаружении этих обстоятельствах.</span><span class="sxs-lookup"><span data-stu-id="f89fd-158">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="f89fd-159">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [с помощью SemanticResultKey и объекты SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-159">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-160">В следующем примере создается грамматику распознавания речи, который может распознать две фразы «фон *colorChoice*"и «Меняем цвет фона на *colorChoice*«, где * colorChoice* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-160">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="f89fd-161">Грамматика позволяет пользователю ни один из нескольких названий цветов и возвращает семантической информации об имени распознанных цвет к приложению.</span><span class="sxs-lookup"><span data-stu-id="f89fd-161">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="f89fd-162">В примере используется один <xref:System.Speech.Recognition.SemanticResultKey> с помощью которого можно получить <xref:System.Speech.Recognition.SemanticValue> который связан с цветом, произносятся пользователем.</span><span class="sxs-lookup"><span data-stu-id="f89fd-162">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="f89fd-163">Например, если входные данные содержат фразу «Set фон на красный,» результат распознавания содержит семантическое значение «#ff0000», который можно получить с помощью обработчика для `SpeechRecognized` событий.</span><span class="sxs-lookup"><span data-stu-id="f89fd-163">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="f89fd-164">В примере используется <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, и <xref:System.Speech.Recognition.GrammarBuilder> объектов для создания ограничений, содержащихся в последнем <xref:System.Speech.Recognition.GrammarBuilder> объекта, `bothPhrases`.</span><span class="sxs-lookup"><span data-stu-id="f89fd-164">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="f89fd-165">Наконец, в примере создается <xref:System.Speech.Recognition.Grammar> объект из завершенного <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-165">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices object for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the Grammar object from the GrammarBuilder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f89fd-166">Семантическое значение или пара имя-значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-166">The semantic value or name/value pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-167">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" /> из семантического значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-167">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-168">При создании <xref:System.Speech.Recognition.GrammarBuilder> экземпляра из <xref:System.Speech.Recognition.SemanticResultValue> объекта, добавьте семантической информации в грамматику, которые могут быть возвращены в результате распознавания.</span><span class="sxs-lookup"><span data-stu-id="f89fd-168">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="f89fd-169">Вы можете получить доступ к семантической информации в результат распознавания с помощью <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> свойство <xref:System.Speech.Recognition.RecognizedPhrase>, которая доступна в обработчике `SpeechRecognized` событий.</span><span class="sxs-lookup"><span data-stu-id="f89fd-169">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="f89fd-170">Если <xref:System.Speech.Recognition.GrammarBuilder> определяет <xref:System.Speech.Recognition.SemanticResultKey>, это может использоваться для получения семантической информации в верности результата распознавания, связанный с ключом.</span><span class="sxs-lookup"><span data-stu-id="f89fd-170">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="f89fd-171">См. в примере <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, а также см. в разделе <xref:System.Speech.Recognition.SemanticResultValue> и <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-171">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-172">При построении <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> экземпляров, убедитесь в том, позволяет избежать создания повторяющихся семантические элементы с тем же именем ключа или нескольких семантические элементы, которые многократно изменить <xref:System.Speech.Recognition.SemanticValue.Value%2A> Свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-172">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="f89fd-173">Распознаватель речи может создавать исключения при обнаружении этих обстоятельствах.</span><span class="sxs-lookup"><span data-stu-id="f89fd-173">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="f89fd-174">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [с помощью SemanticResultKey и объекты SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-174">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-175">В следующем примере создается грамматику распознавания речи, который может распознать две фразы «фон *colorChoice*"и «Меняем цвет фона на *colorChoice*«, где * colorChoice* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-175">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="f89fd-176">Грамматика позволяет пользователю ни один из нескольких названий цветов и возвращает семантической информации об имени распознанных цвет к приложению.</span><span class="sxs-lookup"><span data-stu-id="f89fd-176">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="f89fd-177">В примере используется один <xref:System.Speech.Recognition.SemanticResultKey> с помощью которого можно получить <xref:System.Speech.Recognition.SemanticValue> который связан с цветом, произносятся пользователем.</span><span class="sxs-lookup"><span data-stu-id="f89fd-177">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="f89fd-178">Например, если входные данные содержат фразу «Set фон на красный,» результат распознавания содержит семантическое значение «#ff0000», который можно получить с помощью обработчика для `SpeechRecognized` событий.</span><span class="sxs-lookup"><span data-stu-id="f89fd-178">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="f89fd-179">В примере используется <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, и <xref:System.Speech.Recognition.GrammarBuilder> объектов для создания ограничений, содержащихся в последнем <xref:System.Speech.Recognition.GrammarBuilder> объекта, `bothPhrases`.</span><span class="sxs-lookup"><span data-stu-id="f89fd-179">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="f89fd-180">Наконец, в примере создается <xref:System.Speech.Recognition.Grammar> объект из завершенного <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-180">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the grammar from the grammar builder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder phrase" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="f89fd-181">Последовательность слов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-181">The sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-182">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" /> из последовательности слов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-182">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a sequence of words.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-183">Фраза представляет точное произнесенной фразой, который может распознать грамматики распознавания речи.</span><span class="sxs-lookup"><span data-stu-id="f89fd-183">The phrase represents an exact spoken phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="f89fd-184">Дополнительные сведения о создании грамматики распознавания речи, который содержит строки, см. в разделе [использованию строк для создания грамматики GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="f89fd-184">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-185">В следующем примере используется <xref:System.Speech.Recognition.GrammarBuilder> и <xref:System.Speech.Recognition.Choices> объекты для создания грамматики, который может распознать одно из двух фразы «фон *colorChoice*"или «Меняем цвет фона на *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="f89fd-185">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="f89fd-186">После создания списка допустимых значений для *colorChoice* с помощью <xref:System.Speech.Recognition.Choices> объекта, в примере инициализируются два <xref:System.Speech.Recognition.GrammarBuilder> объектов, `makePhrase` и `setPhrase`, используя строку в качестве аргумента.</span><span class="sxs-lookup"><span data-stu-id="f89fd-186">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using a string as an argument.</span></span>  
  
 <span data-ttu-id="f89fd-187">Наконец, в примере создается <xref:System.Speech.Recognition.Grammar> объекта из <xref:System.Speech.Recognition.Choices> объект приведен к <xref:System.Speech.Recognition.GrammarBuilder> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-187">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * System.Speech.Recognition.SubsetMatchingMode -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, subsetMatchingCriteria)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="f89fd-188">Последовательность слов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-188">The sequence of words.</span>
          </span>
        </param>
        <param name="subsetMatchingCriteria">
          <span data-ttu-id="f89fd-189">Соответствующий режим, используемый грамматикой распознавания речи для распознавания фразы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-189">The matching mode the speech recognition grammar uses to recognize the phrase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-190">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для подмножества последовательности слов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-190">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class for a subset of a sequence of words.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-191">`phrase` Параметр представляет фразу, которая может распознать грамматики распознавания речи.</span><span class="sxs-lookup"><span data-stu-id="f89fd-191">The `phrase` parameter represents the phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="f89fd-192">`subsetMatchingMode` Параметр определяет подмножество фразу, которая может произнести для достижения успешного распознавание всю фразу.</span><span class="sxs-lookup"><span data-stu-id="f89fd-192">The `subsetMatchingMode` parameter specifies a subset of the phrase that can be spoken to achieve successful recognition of the entire phrase.</span></span> <span data-ttu-id="f89fd-193">Это можно использовать для создания грамматики со списком записей, имеющих длинные имена, не требуя от пользователей произнести полное имя, чтобы соответствовать элементу.</span><span class="sxs-lookup"><span data-stu-id="f89fd-193">You can use this to create a grammar with a list of entries that have long names, without requiring users to speak an entire name to match an item.</span></span>  
  
 <span data-ttu-id="f89fd-194">Дополнительные сведения о режимах сопоставления см. в разделе <xref:System.Speech.Recognition.SubsetMatchingMode>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-194">For more information about the matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode>.</span></span> <span data-ttu-id="f89fd-195">Дополнительные сведения о создании грамматики распознавания речи, который содержит строки, см. в разделе [использованию строк для создания грамматики GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="f89fd-195">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-196">В следующем примере создается грамматики распознавания речи для каждого <xref:System.Speech.Recognition.SubsetMatchingMode> значение и грамматику по выбору между соответствующий режим грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-196">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value and a grammar for choosing between the matching mode grammars.</span></span> <span data-ttu-id="f89fd-197">Если значение `phrase` — «один два три четыре пять шесть семь», то грамматики подпоследовательности распознает входные данные «два три четыре», но не входные данные «один три пять».</span><span class="sxs-lookup"><span data-stu-id="f89fd-197">If the value of `phrase` is "one two three four five six seven", then the Subsequence grammar recognizes the input "two three four", but not the input "one three five".</span></span> <span data-ttu-id="f89fd-198">Тем не менее Грамматика упорядоченный набор распознает оба эти входные данные.</span><span class="sxs-lookup"><span data-stu-id="f89fd-198">However, the Ordered Subset grammar recognizes both of these inputs.</span></span>  
  
```csharp  
  
private static IEnumerable<Grammar>  
  CreateMatchingModeGrammars(string phrase)  
{  
  List<Grammar> grammars = new List<Grammar>(5);  
  
  Choices modeChoice = new Choices();  
  Type enumType = typeof(SubsetMatchingMode);  
  foreach (SubsetMatchingMode mode in Enum.GetValues(enumType))  
  {  
    string modeName = Enum.GetName(enumType, mode);  
    modeName = BreakAtCaps(modeName);  
  
    GrammarBuilder builder = new GrammarBuilder(phrase, mode);  
    Grammar modeGrammar = new Grammar(builder);  
    modeGrammar.Name = modeName;  
    modeGrammar.Enabled = false;  
    grammars.Add(modeGrammar);  
  
    modeChoice.Add(modeName);  
  }  
  
  Grammar choiceGrammar = new Grammar(modeChoice);  
  choiceGrammar.Name = "choice";  
  grammars.Add(choiceGrammar);  
  
  return grammars;  
}  
  
// Insert spaces preceding each uppercase letter in a string.   
private static string BreakAtCaps(string item)  
{  
  if (item == null || item.Length == 0)  
  {  
    return item;  
  }  
  
  StringBuilder sb = new StringBuilder(item[0].ToString());  
  for (int i = 1; i < item.Length; i++)  
  {  
    char c = item[i];  
    if (char.IsUpper(c))  
    {  
      sb.Append(" ");  
    }  
    sb.Append(c);  
  }  
  
  return sb.ToString();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SubsetMatchingMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.GrammarBuilder * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (builder, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="f89fd-199">Повторяющийся элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-199">The repeated element.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="f89fd-200">Минимальное количество сопоставлений входных данных элементу, определенному в <c>builder</c>, при котором засчитывается совпадение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-200">The minimum number of times that input matching the element defined by <c>builder</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="f89fd-201">Максимальное количество сопоставлений входных данных элементу, определенному в <c>builder</c>, при котором засчитывается совпадение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-201">The maximum number of times that input matching the element defined by <c>builder</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-202">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" /> из повторяющегося элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-202">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a repeated element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-203">Если значение `minRepeat` равно 0, то новый <xref:System.Speech.Recognition.GrammarBuilder> представляет необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="f89fd-203">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="f89fd-204">Значение `minRepeat` должно быть больше или равно 0 и меньше или равно значению `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="f89fd-204">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-205">При указании повторов для <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> экземпляров, убедитесь в том, позволяет избежать создания повторяющихся семантические элементы с тем же именем ключа или несколько семантические элементы, которые неоднократно могут изменять <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-205">When you specify repeats for <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="f89fd-206">Распознаватель речи может создавать исключения при обнаружении этих обстоятельствах.</span><span class="sxs-lookup"><span data-stu-id="f89fd-206">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="f89fd-207">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [с помощью SemanticResultKey и объекты SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-207">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-208">В следующем примере создается грамматики распознавания речи для заказа пиццы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-208">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="f89fd-209">Он начинается с необязательным, откройте фразы, следуют начинки от одной до четырех и закрывает со словом «пицца».</span><span class="sxs-lookup"><span data-stu-id="f89fd-209">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object from a string array of alternative toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="f89fd-210">Повторяющаяся последовательность слов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-210">The repeated sequence of words.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="f89fd-211">Минимальное количество сопоставлений входной фразы, при котором засчитывается совпадение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-211">The minimum number of times that input matching the phrase must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="f89fd-212">Максимальное количество сопоставлений входной фразы, при котором засчитывается совпадение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-212">The maximum number of times that input matching the phrase can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-213">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" /> из последовательности слов в <see cref="T:System.String" /> и определяет, сколько раз можно повторить <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-213">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from the sequence of words in a <see cref="T:System.String" /> and specifies how many times the <see cref="T:System.String" /> can be repeated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-214">Если значение `minRepeat` равно 0, то новый <xref:System.Speech.Recognition.GrammarBuilder> представляет необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="f89fd-214">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="f89fd-215">Значение `minRepeat` должно быть больше или равно 0 и меньше или равно значению `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="f89fd-215">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span> <span data-ttu-id="f89fd-216">Дополнительные сведения о создании грамматики распознавания речи, который содержит строки, см. в разделе [использованию строк для создания грамматики GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="f89fd-216">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-217">В следующем примере создается грамматики распознавания речи для заказа пиццы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-217">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="f89fd-218">Он начинается с необязательным, откройте фразы, следуют начинки от одной до четырех и закрывает со словом «пицца».</span><span class="sxs-lookup"><span data-stu-id="f89fd-218">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f89fd-219">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий последовательность из двух элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-219">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-220">Статический <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> методы предоставляют другой механизм, с помощью которых можно комбинировать различные типы для создания разнообразия и гибко грамматики созданных с помощью <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-220">The static <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods provide another mechanism by which you can combine various types to create diversity and flexibility in grammars built with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="f89fd-221">Эти методы соответствуют статического <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> методы, которые также определены на <xref:System.Speech.Recognition.GrammarBuilder> класса.</span><span class="sxs-lookup"><span data-stu-id="f89fd-221">These methods correspond to the static <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods, which are also defined on the <xref:System.Speech.Recognition.GrammarBuilder> class.</span></span> <span data-ttu-id="f89fd-222">Порядок параметров определяет порядок элементов в новом <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-222">The order of the parameters determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="f89fd-223">Объект <xref:System.Speech.Recognition.GrammarBuilder> также может быть получен из <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, и [строка](http://go.microsoft.com/fwlink/?LinkId=159733) объектов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-223">A <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and [String](http://go.microsoft.com/fwlink/?LinkId=159733) objects.</span></span> <span data-ttu-id="f89fd-224">Дополнительные сведения см. в разделе <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> и <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> операторы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-224">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-225">Распознаватель речи может создавать исключения, при использовании грамматики распознавания речи, содержит повторяющиеся семантические элементы с тем же именем ключа или нескольких семантические элементы, которые многократно может изменять значение элемента же семантической.</span><span class="sxs-lookup"><span data-stu-id="f89fd-225">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="f89fd-226">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [с помощью SemanticResultKey и объекты SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-226">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="f89fd-227">Дополнительные сведения о создании и использовании грамматиками распознавания речи, см. в разделе [распознавания речи](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) и [создание грамматики GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="f89fd-227">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (choices, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="f89fd-228">Первый элемент grammar, представляющий набор альтернатив.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-228">The first grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="f89fd-229">Второй элемент grammar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-229">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-230">Создает элемент <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий объект <see cref="T:System.Speech.Recognition.Choices" />, за которым следует объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-230">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f89fd-231">Объект <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности элементов <paramref name="choices" />, за которой следует элемент <paramref name="builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-231">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> element followed by the <paramref name="builder" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-232"><xref:System.Speech.Recognition.GrammarBuilder> поддерживает неявные преобразования из следующих классов:</span><span class="sxs-lookup"><span data-stu-id="f89fd-232"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="f89fd-233">Этот метод принимает объекты, перечисленные выше для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="f89fd-233">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="f89fd-234">Дополнительные сведения см. в разделе <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> и <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> операторы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-234">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-235">При объединении <xref:System.Speech.Recognition.Choices> и <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> экземпляров, убедитесь в том, позволяет избежать создания повторяющихся семантические элементы с тем же именем ключа или нескольких семантические элементы, которые многократно изменить <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-235">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="f89fd-236">Распознаватель речи может создавать исключения при обнаружении этих обстоятельствах.</span><span class="sxs-lookup"><span data-stu-id="f89fd-236">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="f89fd-237">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [добавьте семантику грамматике GrammarBuilder](https://msdn.microsoft.com/library/hh361581.aspx).</span><span class="sxs-lookup"><span data-stu-id="f89fd-237">For more information about building a speech recognition grammar that contains semantic information, see [Add Semantics to a GrammarBuilder Grammar](https://msdn.microsoft.com/library/hh361581.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, choices)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="f89fd-238">Первый элемент грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-238">The first grammar element.</span>
          </span>
        </param>
        <param name="choices">
          <span data-ttu-id="f89fd-239">Второй элемент грамматики, который представляет набор вариантов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-239">The second grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-240">Создает элемент <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, за которым следует объект <see cref="T:System.Speech.Recognition.Choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-240">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f89fd-241">Объект <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности элементов <paramref name="builder" />, за которой следует элемент <paramref name="choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-241">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="choices" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-242"><xref:System.Speech.Recognition.GrammarBuilder> поддерживает неявные преобразования из следующих классов:</span><span class="sxs-lookup"><span data-stu-id="f89fd-242"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="f89fd-243">Этот метод принимает объекты, перечисленные выше для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="f89fd-243">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="f89fd-244">Дополнительные сведения см. в разделе <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> и <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> операторы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-244">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-245">При объединении <xref:System.Speech.Recognition.Choices> и <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> экземпляров с помощью других элементов грамматики, убедитесь в том, позволяет избежать создания повторяющихся семантические элементы с тем же именем ключа или несколько элементов семантической несколько раз изменить <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-245">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="f89fd-246">Распознаватель речи может создавать исключения при обнаружении этих обстоятельствах.</span><span class="sxs-lookup"><span data-stu-id="f89fd-246">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="f89fd-247">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [с помощью SemanticResultKey и объекты SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-247">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-248">В следующем примере создается грамматику распознавания речи, который может распознать две фразы «фон *цвет*"и «Меняем цвет фона на *цвет*«, где *цвет* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-248">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="f89fd-249">Различные типы используются для создания окончательного грамматики, такие как [строка](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, и <xref:System.Speech.Recognition.GrammarBuilder> объектов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-249">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="f89fd-250">Операторы явного приведения в вызовы <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> методы являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="f89fd-250">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder1, builder2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1">
          <span data-ttu-id="f89fd-251">Первый элемент грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-251">The first grammar element.</span>
          </span>
        </param>
        <param name="builder2">
          <span data-ttu-id="f89fd-252">Второй элемент grammar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-252">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-253">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий последовательность из двух объектов <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-253">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f89fd-254">Объект <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности элементов <paramref name="builder1" />, за которой следует элемент <paramref name="builder2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-254">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> element followed by the <paramref name="builder2" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-255"><xref:System.Speech.Recognition.GrammarBuilder> поддерживает неявные преобразования из следующих классов:</span><span class="sxs-lookup"><span data-stu-id="f89fd-255"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="f89fd-256">Этот метод принимает объекты, перечисленные выше для `builder1` или `builder2` параметра.</span><span class="sxs-lookup"><span data-stu-id="f89fd-256">This method accepts the objects listed above for the `builder1` or `builder2` parameter.</span></span>  
  
 <span data-ttu-id="f89fd-257">Дополнительные сведения см. в разделе <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> и <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> операторы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-257">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-258">При объединении <xref:System.Speech.Recognition.Choices> и <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> экземпляров с помощью других элементов грамматики, убедитесь в том, позволяет избежать создания повторяющихся семантические элементы с тем же именем ключа или несколько элементов семантической несколько раз изменить <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-258">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="f89fd-259">Распознаватель речи может создавать исключения при обнаружении этих обстоятельствах.</span><span class="sxs-lookup"><span data-stu-id="f89fd-259">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="f89fd-260">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [с помощью SemanticResultKey и объекты SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-260">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-261">В следующем примере создается грамматику распознавания речи, который может распознать две фразы «фон *цвет*"и «Меняем цвет фона на *цвет*«, где *цвет* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-261">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="f89fd-262">Различные типы используются для создания окончательного грамматики, такие как [строка](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, и <xref:System.Speech.Recognition.GrammarBuilder> объектов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-262">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="f89fd-263">Операторы явного приведения в вызовы <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> методы являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="f89fd-263">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, phrase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="f89fd-264">Первый элемент грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-264">The first grammar element.</span>
          </span>
        </param>
        <param name="phrase">
          <span data-ttu-id="f89fd-265">Второй элемент грамматики, который представляет последовательность слов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-265">The second grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-266">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, после которого следует фраза.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-266">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a phrase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f89fd-267">Объект <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности элементов <paramref name="builder" />, за которой следует элемент <paramref name="phrase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-267">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="phrase" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-268"><xref:System.Speech.Recognition.GrammarBuilder> поддерживает неявные преобразования из следующих классов:</span><span class="sxs-lookup"><span data-stu-id="f89fd-268"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="f89fd-269">Этот метод принимает объекты, перечисленные выше для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="f89fd-269">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="f89fd-270">Дополнительные сведения см. в разделе <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> и <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> операторы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-270">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-271">В следующем примере создается грамматику распознавания речи, который может распознать две фразы «фон *цвет*"и «Меняем цвет фона на *цвет*«, где *цвет* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-271">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="f89fd-272">Различные типы используются для создания окончательного грамматики, такие как [строка](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, и <xref:System.Speech.Recognition.GrammarBuilder> объектов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-272">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="f89fd-273">Операторы явного приведения в вызовы <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> методы являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="f89fd-273">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (phrase, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="f89fd-274">Первый элемент грамматики, который представляет последовательность слов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-274">The first grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="f89fd-275">Второй элемент grammar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-275">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-276">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий фразу, после которой следует объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-276">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f89fd-277">Объект <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности элементов <paramref name="phrase" />, за которой следует элемент <paramref name="builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-277">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> element followed by the <paramref name="builder" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-278"><xref:System.Speech.Recognition.GrammarBuilder> поддерживает неявные преобразования из следующих классов:</span><span class="sxs-lookup"><span data-stu-id="f89fd-278"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="f89fd-279">Этот метод принимает объекты, перечисленные выше для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="f89fd-279">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="f89fd-280">Дополнительные сведения см. в разделе <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> и <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> операторы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-280">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-281">В следующем примере создается грамматику распознавания речи, который может распознать две фразы «фон *цвет*"и «Меняем цвет фона на *цвет*«, где *цвет* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-281">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="f89fd-282">Различные типы используются для создания окончательного грамматики, такие как [строка](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, и <xref:System.Speech.Recognition.GrammarBuilder> объектов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-282">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="f89fd-283">Операторы явного приведения в вызовы <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> методы являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="f89fd-283">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f89fd-284">Добавляет элемент грамматики к текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-284">Appends a grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-285">Эти методы можно использовать для добавления элементов грамматики к существующему <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-285">Use these methods to append grammar elements to an existing <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="f89fd-286">При создании элементов грамматики, их можно добавить в существующий конструктор для последовательной разработки ограничения для грамматики распознавания речи.</span><span class="sxs-lookup"><span data-stu-id="f89fd-286">As you create grammar elements, you can append them to the existing builder to progressively develop the constraints for a speech recognition grammar.</span></span> <span data-ttu-id="f89fd-287">Каждый элемент добавляется в конец текущей последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-287">Each element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="f89fd-288">Этот метод имеет перегрузки для добавления <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, и <xref:System.Speech.Recognition.SemanticResultValue> объектов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-288">This method has overloads for appending <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-289">Распознаватель речи может создавать исключения, при использовании грамматики распознавания речи, содержит повторяющиеся семантические элементы с тем же именем ключа или нескольких семантические элементы, которые многократно может изменять значение элемента же семантической.</span><span class="sxs-lookup"><span data-stu-id="f89fd-289">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="f89fd-290">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [с помощью SemanticResultKey и объекты SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-290">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="f89fd-291">Дополнительные сведения о создании и использовании грамматиками распознавания речи, см. в разделе [распознавания речи](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) и [создание грамматики GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="f89fd-291">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.Choices -&gt; unit" Usage="grammarBuilder.Append alternateChoices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="f89fd-292">Набор вариантов для добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-292">The set of alternatives to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-293">Добавляет набор альтернатив к текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-293">Appends a set of alternatives to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-294">`alternateChoices` добавляется в конец текущей последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-294">`alternateChoices` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-295">При добавлении <xref:System.Speech.Recognition.Choices> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> экземпляры <xref:System.Speech.Recognition.GrammarBuilder> объекта, убедитесь, что позволяет избежать создания повторяющихся семантические элементы с тем же именем ключа или несколько семантической элементов, которые могут несколько раз изменить <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-295">When you append <xref:System.Speech.Recognition.Choices> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="f89fd-296">Распознаватель речи может создавать исключения при обнаружении этих обстоятельствах.</span><span class="sxs-lookup"><span data-stu-id="f89fd-296">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="f89fd-297">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [SemanticResultValue понимание и объекты SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-297">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-298">В следующем примере создается грамматики распознавания речи для фразах, таких как «James вызов на работе» и «Anne вызов на свой сотовый телефон», где слово «телефон» является необязательным.</span><span class="sxs-lookup"><span data-stu-id="f89fd-298">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="f89fd-299">В примере представлены использование <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f89fd-299">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder -&gt; unit" Usage="grammarBuilder.Append builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="f89fd-300">Элемент грамматики для добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-300">The grammar element to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-301">Добавляет элемент грамматики к текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-301">Appends a grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-302">`builder` добавляется в конец текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-302">`builder` is added to the end of the current sequence of grammar elements.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f89fd-303">При добавлении <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> экземпляры <xref:System.Speech.Recognition.GrammarBuilder> объекта, убедитесь, что позволяет избежать создания повторяющихся семантические элементы с тем же именем ключа или несколько семантической элементов, которые могут несколько раз изменить <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-303">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="f89fd-304">Распознаватель речи может создавать исключения при обнаружении этих обстоятельствах.</span><span class="sxs-lookup"><span data-stu-id="f89fd-304">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="f89fd-305">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [с помощью SemanticResultKey и объекты SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-305">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-306">В следующем примере создается грамматики распознавания речи для фразах, таких как «James вызов на работе» и «Anne вызов на свой сотовый телефон», где слово «телефон» является необязательным.</span><span class="sxs-lookup"><span data-stu-id="f89fd-306">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="f89fd-307"><xref:System.Speech.Recognition.GrammarBuilder> и <xref:System.Speech.Recognition.Choices> объекты используются для создания грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-307"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="f89fd-308">В примере представлены использование <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f89fd-308">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultKey -&gt; unit" Usage="grammarBuilder.Append key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f89fd-309">Семантический ключ для добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-309">The semantic key to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-310">Добавляет семантический ключ к текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-310">Appends a semantic key to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-311">`key` добавляется в конец текущей последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-311">`key` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-312">При добавлении <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> экземпляры <xref:System.Speech.Recognition.GrammarBuilder> объекта, убедитесь, что позволяет избежать создания повторяющихся семантические элементы с тем же именем ключа или нескольких семантические элементы, которые многократно изменить <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-312">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="f89fd-313">Распознаватель речи может создавать исключения при обнаружении этих обстоятельствах.</span><span class="sxs-lookup"><span data-stu-id="f89fd-313">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="f89fd-314">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [SemanticResultValue понимание и объекты SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-314">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-315">Следующий пример является частью консольного приложения для выбора назначения и городов рейса.</span><span class="sxs-lookup"><span data-stu-id="f89fd-315">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="f89fd-316">Приложение распознает фраз, такие как «Я хочу летать из Майами в Чикаго».</span><span class="sxs-lookup"><span data-stu-id="f89fd-316">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="f89fd-317">Обработчик <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> событие использует <xref:System.Speech.Recognition.SemanticResultKey> мог извлечь нужный код аэропорта, указанный в <xref:System.Speech.Recognition.SemanticResultValue> города, источник и назначение.</span><span class="sxs-lookup"><span data-stu-id="f89fd-317">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create a Choices object and add  cities and airport codes  
        // using SemanticResultValue objects.  
        Choices cities = new Choices();  
        cities.Add(new SemanticResultValue("Chicago", "ORD"));  
        cities.Add(new SemanticResultValue("Boston", "BOS"));  
        cities.Add(new SemanticResultValue("Miami", "MIA"));  
        cities.Add(new SemanticResultValue("Dallas", "DFW"));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultValue -&gt; unit" Usage="grammarBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f89fd-318">Прибавляемое семантическое значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-318">The semantic value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-319">Добавляет семантическое значение к текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-319">Appends a semantic value to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-320">`value` добавляется в конец текущей последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-320">`value` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-321">При добавлении <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> экземпляры <xref:System.Speech.Recognition.GrammarBuilder> объекта, убедитесь, что позволяет избежать создания повторяющихся семантические элементы с тем же именем ключа или нескольких семантические элементы, которые многократно изменить <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-321">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="f89fd-322">Распознаватель речи может создавать исключения при обнаружении этих обстоятельствах.</span><span class="sxs-lookup"><span data-stu-id="f89fd-322">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="f89fd-323">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [SemanticResultValue понимание и объекты SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-323">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-324">Следующий пример является частью консольного приложения для выбора назначения и городов рейса.</span><span class="sxs-lookup"><span data-stu-id="f89fd-324">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="f89fd-325">Приложение распознает фраз, такие как «Я хочу летать из Майами в Чикаго».</span><span class="sxs-lookup"><span data-stu-id="f89fd-325">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="f89fd-326">Обработчик <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> событие использует <xref:System.Speech.Recognition.SemanticResultKey> мог извлечь нужный код аэропорта, указанный в <xref:System.Speech.Recognition.SemanticResultValue> города, источник и назначение.</span><span class="sxs-lookup"><span data-stu-id="f89fd-326">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create GrammarBuilder objects and append SemanticResultValue objects   
        // that contain cities and airport codes.  
  
        GrammarBuilder chicago = new GrammarBuilder();  
        chicago.Append(new SemanticResultValue("Chicago", "ORD"));  
  
        GrammarBuilder boston = new GrammarBuilder();  
        boston.Append(new SemanticResultValue("Boston", "BOS"));  
  
        GrammarBuilder miami = new GrammarBuilder();  
        miami.Append(new SemanticResultValue("Miami", "MIA"));  
  
        GrammarBuilder dallas = new GrammarBuilder();  
        dallas.Append(new SemanticResultValue("Dallas", "DFW"));  
  
        // Create a Choices object and add the cities using implicit conversion from   
        // SemanticResultValue to GrammarBuilder.  
        Choices cities = new Choices();  
        cities.Add(new Choices(new GrammarBuilder[] { chicago, boston, miami, dallas }));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="member this.Append : string -&gt; unit" Usage="grammarBuilder.Append phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="f89fd-327">Последовательность слов для добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-327">The sequence of words to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-328">Добавляет фразу к текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-328">Appends a phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-329">`phrase` добавляется в конец текущей последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-329">`phrase` is added to the end of the current sequence of elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="member this.Append : string * System.Speech.Recognition.SubsetMatchingMode -&gt; unit" Usage="grammarBuilder.Append (phrase, subsetMatchingCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="f89fd-330">Последовательность слов для добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-330">The sequence of words to append.</span>
          </span>
        </param>
        <param name="subsetMatchingCriteria">
          <span data-ttu-id="f89fd-331">Соответствующий режим, используемый грамматикой для распознавания фразы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-331">The matching mode the grammar uses to recognize the phrase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-332">Добавляет элемент для подмножества фразы к текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-332">Appends an element for a subset of a phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-333">Подмножество элемент добавлен в конец текущей последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-333">The subset element is added to the end of the current sequence of elements.</span></span> <span data-ttu-id="f89fd-334">Дополнительные сведения о создании грамматики распознавания речи с помощью строки, см. в разделе [использованию строк для создания грамматики GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="f89fd-334">For more information about building a speech recognition grammar using strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
 <span data-ttu-id="f89fd-335">Подробные сведения об использовании режима сопоставления подмножеств см. в разделе <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-335">For detailed information on the use of subset matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-336">В следующем примере создается грамматики распознавания речи для каждого <xref:System.Speech.Recognition.SubsetMatchingMode> значение.</span><span class="sxs-lookup"><span data-stu-id="f89fd-336">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value.</span></span> <span data-ttu-id="f89fd-337">Например, созданный грамматики `OrderedSubset` распознает фразах, «три четыре пять» и «один три пять» и грамматики `Subsequence` распознает фразы «три четыре пять», но не фразы, «один три пять».</span><span class="sxs-lookup"><span data-stu-id="f89fd-337">For example, the generated grammar `OrderedSubset` recognizes the phrases, "three four five" and "one three five", and the grammar `Subsequence` recognizes the phrase "three four five", but not the phrase, "one three five".</span></span>  
  
```csharp  
  
private Grammar[] CreateSubsetMatchTest()  
{  
  List<Grammar> grammars = new List<Grammar>(4);  
  
  string phrase = "one two three four five six";  
  foreach (SubsetMatchingMode mode in  
    Enum.GetValues(typeof(SubsetMatchingMode)))  
  {  
    GrammarBuilder gb = new GrammarBuilder();  
    gb.Append(phrase, mode);  
  
    Grammar grammar = new Grammar(gb);  
    grammar.Name = mode.ToString();  
    grammars.Add(grammar);  
  }  
  
  return grammars.ToArray();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder * int * int -&gt; unit" Usage="grammarBuilder.Append (builder, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="f89fd-338">Повторяющийся элемент грамматики для добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-338">The repeated grammar element to append.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="f89fd-339">Минимальное количество сопоставлений входных данных элементу, определенному в <c>builder</c>, при котором засчитывается совпадение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-339">The minimum number of times that input matching the element defined by <c>builder</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="f89fd-340">Максимальное количество сопоставлений входных данных элементу, определенному в <c>builder</c>, при котором засчитывается совпадение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-340">The maximum number of times that input matching the element defined by <c>builder</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-341">Добавляет повторный элемент грамматики к текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-341">Appends a repeated grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-342">Значение `minRepeat` должно быть больше или равно 0 и меньше или равно значению `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="f89fd-342">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-343">При добавлении <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> экземпляры <xref:System.Speech.Recognition.GrammarBuilder> объекта, убедитесь, что позволяет избежать создания повторяющихся семантические элементы с тем же именем ключа или несколько семантической элементов, которые могут несколько раз изменить <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-343">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="f89fd-344">Распознаватель речи может создавать исключения при обнаружении этих обстоятельствах.</span><span class="sxs-lookup"><span data-stu-id="f89fd-344">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="f89fd-345">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [SemanticResultValue понимание и объекты SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-345">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-346">В следующем примере создается грамматики распознавания речи для фразах, таких как «James вызов на работе» и «Anne вызов на свой сотовый телефон», где слово «телефон» является необязательным.</span><span class="sxs-lookup"><span data-stu-id="f89fd-346">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="f89fd-347"><xref:System.Speech.Recognition.GrammarBuilder> и <xref:System.Speech.Recognition.Choices> объекты используются для создания грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-347"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="f89fd-348">В примере представлены использование <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f89fd-348">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : string * int * int -&gt; unit" Usage="grammarBuilder.Append (phrase, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="f89fd-349">Повторяющаяся последовательность слов для добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-349">The repeated sequence of words to append.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="f89fd-350">Минимальное количество сопоставлений входной фразы <c>phrase</c>, при котором засчитывается совпадение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-350">The minimum number of times that input matching <c>phrase</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="f89fd-351">Максимальное количество сопоставлений входной фразы <c>phrase</c>, при котором засчитывается совпадение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-351">The maximum number of times that input matching <c>phrase</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-352">Добавляет повторную фразу к текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-352">Appends a repeated phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-353">Значение `minRepeat` должно быть больше или равно 0 и меньше или равно значению `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="f89fd-353">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-354">В следующем примере создается грамматики распознавания речи для фразах, таких как «James вызов на работе» и «Anne вызов на свой сотовый телефон», где слово «телефон» является необязательным.</span><span class="sxs-lookup"><span data-stu-id="f89fd-354">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="f89fd-355"><xref:System.Speech.Recognition.GrammarBuilder> и <xref:System.Speech.Recognition.Choices> объекты используются для создания грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-355"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="f89fd-356">В примере представлены использование <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f89fd-356">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendDictation">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f89fd-357">Добавляет грамматику диктовки к текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-357">Appends a dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-358"><xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> Методы позволяют добавить грамматику диктовки, как правило, <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-358">The <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> methods allow you to append a dictation grammar as a rule to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="f89fd-359">Дополнительные сведения о грамматики диктовки, см. в разделе <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-359">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation();" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : unit -&gt; unit" Usage="grammarBuilder.AppendDictation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f89fd-360">Добавляет грамматику диктовки по умолчанию к текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-360">Appends the default dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-361">Дополнительные сведения о грамматики диктовки, см. в разделе <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-361">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-362">В следующем примере создается грамматику распознавания речи, который включает режим диктовки.</span><span class="sxs-lookup"><span data-stu-id="f89fd-362">The following example creates a speech recognition grammar that incorporates dictation.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation();  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation (string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation(string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation (category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation(System::String ^ category);" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : string -&gt; unit" Usage="grammarBuilder.AppendDictation category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">
          <span data-ttu-id="f89fd-363">Категория грамматики диктовки для добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-363">The category of the dictation grammar to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-364">Добавляет указанную грамматику диктовки к текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-364">Appends the specified dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-365">Чтобы использовать грамматику диктовки правописания, задайте `category` для `spelling`.</span><span class="sxs-lookup"><span data-stu-id="f89fd-365">To use the spelling dictation grammar, set `category` to `spelling`.</span></span>  
  
 <span data-ttu-id="f89fd-366">Дополнительные сведения о грамматики диктовки, см. в разделе <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-366">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-367">В следующем примере создается грамматику распознавания речи, которое включает в себя правила грамматики диктовки правописания.</span><span class="sxs-lookup"><span data-stu-id="f89fd-367">The following example creates a speech recognition grammar that incorporates the spelling dictation grammar rules.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation("spelling");  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendRuleReference">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f89fd-368">Добавляет файл грамматики или правило грамматики к текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-368">Appends a grammar file or a grammar rule to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-369"><xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> Методы можно добавить файл грамматики или правило грамматики из файла.</span><span class="sxs-lookup"><span data-stu-id="f89fd-369">The <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> methods can append a grammar file or a grammar rule from a file.</span></span> <span data-ttu-id="f89fd-370">Эти методы позволяют приложениям сделать использование предварительно развернутый или общедоступным грамматические правила.</span><span class="sxs-lookup"><span data-stu-id="f89fd-370">These methods allow applications to make use of pre-deployed or publicly available grammar rules.</span></span> <span data-ttu-id="f89fd-371">Приложение должно иметь доступ на чтение к расположению файлов указанного грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-371">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="f89fd-372">Эти методы можно считать грамматики распознавания речи из следующих форматов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-372">These methods can read a speech recognition grammar from the following formats.</span></span>  
  
-   <span data-ttu-id="f89fd-373">Файлы XML-формата, которые соответствуют W3C [спецификации грамматики распознавания речи (SRGS) версии 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)</span><span class="sxs-lookup"><span data-stu-id="f89fd-373">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="f89fd-374">Двоичные файлы, которые соответствуют Microsoft Speech распознавания грамматики двоичный формат (расширением файла cfg)</span><span class="sxs-lookup"><span data-stu-id="f89fd-374">Binary files that conform to the Microsoft Speech Recognition Grammar Binary Format (.cfg file extension)</span></span>  
  
 <span data-ttu-id="f89fd-375">Компиляция SRGS XML-формата файла грамматики в двоичный файл грамматики с расширением cfg можно уменьшить время, затраченное поиск совпадения, особенно в том случае, если Грамматика требует распознавания большое количество слов и фраз.</span><span class="sxs-lookup"><span data-stu-id="f89fd-375">Compiling an XML-format SRGS grammar file to a binary grammar file with the .cfg extension can reduce the time consumed by searches for a match, especially if the grammar requires recognition of a large number of words and phrases.</span></span> <span data-ttu-id="f89fd-376">Дополнительные сведения о компиляции грамматик SRGS в двоичный формат CFG, см. в разделе <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-376">For information about compiling SRGS grammars to the CFG binary format, see <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string -&gt; unit" Usage="grammarBuilder.AppendRuleReference path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f89fd-377">Путь или универсальный идентификатор ресурса (URI) файла, который описывает грамматику распознавания речи в поддерживаемом формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-377">The path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-378">Добавляет файл определения грамматики к текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-378">Appends a grammar definition file to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-379">URI, предоставляемые `path` аргумент может быть локальным или удаленным.</span><span class="sxs-lookup"><span data-stu-id="f89fd-379">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="f89fd-380">Приложение должно иметь доступ на чтение к расположению файлов указанного грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-380">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="f89fd-381">Представление W3C грамматики распознавания речи Specification (SRGS) можно определить корневое правило.</span><span class="sxs-lookup"><span data-stu-id="f89fd-381">A W3C Speech Recognition Grammar Specification (SRGS) representation can define a root rule.</span></span> <span data-ttu-id="f89fd-382">Этот метод добавляет грамматику, начиная с правилом корневой к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-382">This method appends the grammar, beginning with its root rule, to the current sequence of grammar elements.</span></span> <span data-ttu-id="f89fd-383">Чтобы добавить правило грамматики, используйте <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f89fd-383">To append a specific grammar rule, use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-384">В следующем примере C# создается грамматику распознавания речи, который использует правило с именем `Cities` в локальном файле SRGS, cities.grxml.</span><span class="sxs-lookup"><span data-stu-id="f89fd-384">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="f89fd-385">Содержимое файла cities.grxml появляется в примере кода C#.</span><span class="sxs-lookup"><span data-stu-id="f89fd-385">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar1()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.AppendRuleReference("file://c:/temp/cities.grxml");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 1";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-16" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path, string rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path, string rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String, rule As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path, System::String ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string * string -&gt; unit" Usage="grammarBuilder.AppendRuleReference (path, rule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rule" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f89fd-386">Путь к файлу или универсальный идентификатор ресурса (URI) файла, который описывает грамматику распознавания речи в поддерживаемом формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-386">The file path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span>
          </span>
        </param>
        <param name="rule">
          <span data-ttu-id="f89fd-387">Идентификатор добавляемого правила или значение <see langword="null" />, чтобы добавить корневое правило файла грамматики по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-387">The identifier of the rule to append, or <see langword="null" /> to append the default root rule of the grammar file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-388">Добавляет указанное правило файла определения грамматики к текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-388">Appends the specified rule of a grammar definition file to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-389">URI, предоставляемые `path` аргумент может быть локальным или удаленным.</span><span class="sxs-lookup"><span data-stu-id="f89fd-389">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="f89fd-390">Приложение должно иметь доступ на чтение к расположению файлов указанного грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-390">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="f89fd-391">Можно использовать <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> метод для добавления файла грамматики, начиная с его корневое правило.</span><span class="sxs-lookup"><span data-stu-id="f89fd-391">You can use the use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method to append a grammar file beginning with its root rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-392">В следующем примере C# создается грамматику распознавания речи, который использует правило с именем `Cities` в локальном файле SRGS, cities.grxml.</span><span class="sxs-lookup"><span data-stu-id="f89fd-392">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="f89fd-393">Содержимое файла cities.grxml появляется в примере кода C#.</span><span class="sxs-lookup"><span data-stu-id="f89fd-393">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar2()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.Append("Does");  
  builder.AppendRuleReference(@"c:\temp\cities.grxml", "Cities");  
  builder.Append("have a shuttle");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendWildcard">
      <MemberSignature Language="C#" Value="public void AppendWildcard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendWildcard() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendWildcard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendWildcard();" />
      <MemberSignature Language="F#" Value="member this.AppendWildcard : unit -&gt; unit" Usage="grammarBuilder.AppendWildcard " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f89fd-394">Добавляет элемент грамматики распознавания, соответствующий любой входной информации для текущей последовательности элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-394">Appends a recognition grammar element that matches any input to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-395">Группового элемента добавляется в конец текущей последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-395">The wildcard element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="f89fd-396">Подстановочный элемент соответствует любой произнесенного слова.</span><span class="sxs-lookup"><span data-stu-id="f89fd-396">The wildcard element matches any spoken word.</span></span> <span data-ttu-id="f89fd-397">Он не соответствует фонового шума или бездействия.</span><span class="sxs-lookup"><span data-stu-id="f89fd-397">It does not match background noise or silence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-398">В следующем примере создается грамматику, которая принимает входные данные пароля в качестве подстановочного знака.</span><span class="sxs-lookup"><span data-stu-id="f89fd-398">The following example creates a grammar that accepts password input as a wildcard.</span></span> <span data-ttu-id="f89fd-399">В этом примере подключается <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> обработчик событий для грамматики, который проверяет ввод пароля.</span><span class="sxs-lookup"><span data-stu-id="f89fd-399">The example attaches a <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> event handler to the grammar that validates the password input.</span></span>  
  
```csharp  
private Grammar CreatePasswordGrammar()  
{  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey passwordKey =  
    new SemanticResultKey("Password", wildcardBuilder);  
  
  GrammarBuilder passwordBuilder =  
    new GrammarBuilder("My Password is");  
  passwordBuilder.Append(passwordKey);  
  
  Grammar passwordGrammar = new Grammar(passwordBuilder);  
  passwordGrammar.Name = "Password input";  
  
  passwordGrammar.SpeechRecognized +=  
    new EventHandler<SpeechRecognizedEventArgs>(  
      PasswordInputHandler);  
  
  return passwordGrammar;  
}  
  
// Handle the SpeechRecognized event for the password grammar.  
private void PasswordInputHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  RecognitionResult result = e.Result;  
  SemanticValue semantics = e.Result.Semantics;  
  
  if (semantics.ContainsKey("Password"))  
  {  
    RecognizedAudio passwordAudio =  
      result.GetAudioForWordRange(  
        result.Words[3], result.Words[result.Words.Count - 1]);  
  
    if (IsValidPassword(passwordAudio))  
    {  
      Console.WriteLine("Password accepted.");  
  
      // Add code to handle a valid password here.  
    }  
    else  
    {  
      Console.WriteLine("Invalid password.");  
  
      // Add code to handle an invalid password here.  
    }  
  }  
}  
  
// Validate the password input.   
private bool IsValidPassword(RecognizedAudio passwordAudio)  
{  
  Console.WriteLine("Validating password.");  
  
  // Add password validation code here.  
  
  return false;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f89fd-400">Получает или задает язык и региональные параметры грамматики распознавания речи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-400">Gets or sets the culture of the speech recognition grammar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f89fd-401">Язык и региональные параметры <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-401">The culture of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
          <span data-ttu-id="f89fd-402">По умолчанию — свойство <see cref="P:System.Threading.Thread.CurrentUICulture" /> выполняющего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-402">The default is the executing thread's <see cref="P:System.Threading.Thread.CurrentUICulture" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-403"><xref:System.Speech.Recognition.Grammar.%23ctor%2A> Конструктор создает <xref:System.Speech.Recognition.Grammar> объект, который может использоваться распознавателем речи соответствующего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="f89fd-403">The <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor creates a <xref:System.Speech.Recognition.Grammar> object that can be used by a speech recognizer of the corresponding culture.</span></span> <span data-ttu-id="f89fd-404">Только <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> свойство <xref:System.Speech.Recognition.GrammarBuilder> , предоставляется как параметр в конструктор грамматики, используемый для задания языка и региональных параметров, полученный грамматики распознавания речи.</span><span class="sxs-lookup"><span data-stu-id="f89fd-404">Only the <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> property of the <xref:System.Speech.Recognition.GrammarBuilder> that is provided as the parameter to the Grammar constructor is used to set the culture of the resulting speech recognition grammar.</span></span>  
  
 <span data-ttu-id="f89fd-405">Microsoft Windows и System.Speech API принять все допустимые коды языка страны.</span><span class="sxs-lookup"><span data-stu-id="f89fd-405">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="f89fd-406">Для выполнения распознавания речи с помощью языка, заданного параметром `Culture` свойство, в обработчик распознавания речи, который поддерживает, что код страны язык должен быть установлен.</span><span class="sxs-lookup"><span data-stu-id="f89fd-406">To perform speech recognition using the language specified in the `Culture` property, a speech recognition engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="f89fd-407">Механизмы распознавания речи, поставляемых вместе с Microsoft Windows 7 работать со следующими кодами языка страны.</span><span class="sxs-lookup"><span data-stu-id="f89fd-407">The speech recognition engines that shipped with Microsoft Windows 7 work with the following language-country codes.</span></span>  
  
-   <span data-ttu-id="f89fd-408">en-GB.</span><span class="sxs-lookup"><span data-stu-id="f89fd-408">en-GB.</span></span> <span data-ttu-id="f89fd-409">Английский (Соединенное Королевство)</span><span class="sxs-lookup"><span data-stu-id="f89fd-409">English (United Kingdom)</span></span>  
  
-   <span data-ttu-id="f89fd-410">en US.</span><span class="sxs-lookup"><span data-stu-id="f89fd-410">en-US.</span></span> <span data-ttu-id="f89fd-411">Русский (Россия)</span><span class="sxs-lookup"><span data-stu-id="f89fd-411">English (United States)</span></span>  
  
-   <span data-ttu-id="f89fd-412">de-DE.</span><span class="sxs-lookup"><span data-stu-id="f89fd-412">de-DE.</span></span> <span data-ttu-id="f89fd-413">Немецкий (Германия)</span><span class="sxs-lookup"><span data-stu-id="f89fd-413">German (Germany)</span></span>  
  
-   <span data-ttu-id="f89fd-414">es-ES.</span><span class="sxs-lookup"><span data-stu-id="f89fd-414">es-ES.</span></span> <span data-ttu-id="f89fd-415">Испанский (Испания)</span><span class="sxs-lookup"><span data-stu-id="f89fd-415">Spanish (Spain)</span></span>  
  
-   <span data-ttu-id="f89fd-416">fr-FR.</span><span class="sxs-lookup"><span data-stu-id="f89fd-416">fr-FR.</span></span> <span data-ttu-id="f89fd-417">Французский (Франция)</span><span class="sxs-lookup"><span data-stu-id="f89fd-417">French (France)</span></span>  
  
-   <span data-ttu-id="f89fd-418">ja-JP.</span><span class="sxs-lookup"><span data-stu-id="f89fd-418">ja-JP.</span></span> <span data-ttu-id="f89fd-419">Японский (Япония)</span><span class="sxs-lookup"><span data-stu-id="f89fd-419">Japanese (Japan)</span></span>  
  
-   <span data-ttu-id="f89fd-420">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="f89fd-420">zh-CN.</span></span> <span data-ttu-id="f89fd-421">Китайский (Китай)</span><span class="sxs-lookup"><span data-stu-id="f89fd-421">Chinese (China)</span></span>  
  
-   <span data-ttu-id="f89fd-422">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="f89fd-422">zh-TW.</span></span> <span data-ttu-id="f89fd-423">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="f89fd-423">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="f89fd-424">Коды двухбуквенный языка, например «en», «fr», или «es» разрешено.</span><span class="sxs-lookup"><span data-stu-id="f89fd-424">Two-letter language codes such as "en", "fr", or "es" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89fd-425">В следующем примере создается грамматики распознавания речи для заказа пиццы с до четырех начинки.</span><span class="sxs-lookup"><span data-stu-id="f89fd-425">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="f89fd-426">В частности задает <xref:System.Speech.Recognition.GrammarBuilder> объекта языка и региональных параметров, на английский (США).</span><span class="sxs-lookup"><span data-stu-id="f89fd-426">It specifically sets the <xref:System.Speech.Recognition.GrammarBuilder> object's culture to English (United States).</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="DebugShowPhrases">
      <MemberSignature Language="C#" Value="public string DebugShowPhrases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DebugShowPhrases" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DebugShowPhrases As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DebugShowPhrases { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DebugShowPhrases : string" Usage="System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f89fd-427">Получает строку, которая отображает содержимое и структуру грамматики, содержащейся в <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-427">Gets a string that shows the contents and structure of the grammar contained by the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f89fd-428">Текущее содержимое и структура <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-428">The current content and structure of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f89fd-429">В следующем примере создается грамматики распознавания речи для заказа пиццы с до четырех начинки.</span><span class="sxs-lookup"><span data-stu-id="f89fd-429">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="f89fd-430">Он записывает состояние <xref:System.Speech.Recognition.GrammarBuilder> в консоль, прежде чем создавать грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-430">It writes the status of the <xref:System.Speech.Recognition.GrammarBuilder> to the console before creating the grammar.</span></span> <span data-ttu-id="f89fd-431">Этот метод создает следующие выходные данные:</span><span class="sxs-lookup"><span data-stu-id="f89fd-431">This method generates the following output:</span></span>  
  
-   `GrammarBuilder status: I would like a [cheese,mushroom,tomato,onion,anchovy,chic ken,pepperoni] and [cheese,mushroom,tomato,onion,anchovy,chicken,pepperoni] pizza`  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Write the contents and structure of the GrammarBuilder to the console.  
  Console.WriteLine("Grammar content and structure: {0}", gb.DebugShowPhrases);  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Addition">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f89fd-432">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, соответствующий последовательности из двух элементов грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-432">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that corresponds to a sequence of two grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-433">Порядок операндов определяет порядок элементов в новом <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-433">The order of the operands determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-434">Внимание рекомендуется использовать при объединении <xref:System.Speech.Recognition.Choices> или <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> экземпляров с помощью других элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="f89fd-434">Caution is recommended when combining <xref:System.Speech.Recognition.Choices> or <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements.</span></span> <span data-ttu-id="f89fd-435">Распознаватель речи может создавать исключения, при использовании грамматики распознавания речи, содержит повторяющиеся семантические элементы с тем же именем ключа или нескольких семантические элементы, которые многократно может изменять значение элемента же семантической.</span><span class="sxs-lookup"><span data-stu-id="f89fd-435">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="f89fd-436">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [с помощью SemanticResultKey и объекты SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-436">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="f89fd-437">Дополнительные сведения о создании и использовании грамматиками распознавания речи, см. в разделе [распознавания речи](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) и [создание грамматики GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="f89fd-437">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="choices + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="f89fd-438">Первый элемент grammar, представляющий набор альтернатив.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-438">The first grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="f89fd-439">Второй элемент grammar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-439">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-440">Создает элемент <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий объект <see cref="T:System.Speech.Recognition.Choices" />, за которым следует объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-440">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f89fd-441">Возвращает <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности параметра <paramref name="choices" />, а затем параметр <paramref name="builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-441">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> parameter followed by the <paramref name="builder" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-442"><xref:System.Speech.Recognition.GrammarBuilder> поддерживает преобразования из следующих классов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-442"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="f89fd-443">Этот метод принимает объекты, перечисленные выше для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="f89fd-443">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="f89fd-444">Дополнительные сведения см. в разделе <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> операторы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-444">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-445">При объединении <xref:System.Speech.Recognition.Choices> и <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> экземпляров, убедитесь в том, позволяет избежать создания повторяющихся семантические элементы с тем же именем ключа или нескольких семантические элементы, которые многократно изменить <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-445">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="f89fd-446">Распознаватель речи может создавать исключения при обнаружении этих обстоятельствах.</span><span class="sxs-lookup"><span data-stu-id="f89fd-446">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="f89fd-447">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [SemanticResultValue понимание и объекты SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-447">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="f89fd-448">Имеет эквивалентный метод для этого оператора <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="f89fd-448">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="f89fd-449">Первый элемент грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-449">The first grammar element.</span>
          </span>
        </param>
        <param name="choices">
          <span data-ttu-id="f89fd-450">Второй элемент грамматики, который представляет набор альтернативных вариантов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-450">The second grammar element, which represents a set of alternative elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-451">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, после которого следует <see cref="T:System.Speech.Recognition.Choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-451">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a <see cref="T:System.Speech.Recognition.Choices" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f89fd-452">Возвращает <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности параметра <paramref name="builder" />, а затем параметр <paramref name="choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-452">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="choices" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-453"><xref:System.Speech.Recognition.GrammarBuilder> поддерживает преобразования из следующих классов:</span><span class="sxs-lookup"><span data-stu-id="f89fd-453"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="f89fd-454">Этот метод принимает объекты, перечисленные выше для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="f89fd-454">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="f89fd-455">Дополнительные сведения см. в разделе <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> операторы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-455">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-456">При объединении <xref:System.Speech.Recognition.Choices> и <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> экземпляров, убедитесь в том, позволяет избежать создания повторяющихся семантические элементы с тем же именем ключа или нескольких семантические элементы, которые многократно изменить <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-456">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="f89fd-457">Распознаватель речи может создавать исключения при обнаружении этих обстоятельствах.</span><span class="sxs-lookup"><span data-stu-id="f89fd-457">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="f89fd-458">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [SemanticResultValue понимание и объекты SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-458">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="f89fd-459">Имеет эквивалентный метод для этого оператора <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="f89fd-459">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="f89fd-460">В следующем примере создается грамматику распознавания речи, который может распознать две фразы «фон *цвет*"и «Меняем цвет фона на *цвет*«, где *цвет* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-460">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="f89fd-461">Различные типы используются для создания окончательного грамматики, такие как [строка](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, и <xref:System.Speech.Recognition.GrammarBuilder> объектов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-461">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder1 + builder2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1">
          <span data-ttu-id="f89fd-462">Первый элемент грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-462">The first grammar element.</span>
          </span>
        </param>
        <param name="builder2">
          <span data-ttu-id="f89fd-463">Второй элемент grammar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-463">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-464">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий последовательность из двух объектов <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-464">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f89fd-465">Возвращает <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности параметра <paramref name="builder1" />, а затем параметр <paramref name="builder2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-465">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> parameter followed by the <paramref name="builder2" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-466"><xref:System.Speech.Recognition.GrammarBuilder> поддерживает преобразования из следующих классов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-466"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="f89fd-467">Этот метод принимает объекты, перечисленные выше для `builder1` и `builder2` параметров.</span><span class="sxs-lookup"><span data-stu-id="f89fd-467">This method accepts the objects listed above for the `builder1` and `builder2` parameters.</span></span> <span data-ttu-id="f89fd-468">Дополнительные сведения см. в разделе <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> операторы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-468">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89fd-469">При объединении <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> экземпляров, убедитесь в том, позволяет избежать создания повторяющихся семантические элементы с тем же именем ключа или нескольких семантические элементы, которые многократно изменить <xref:System.Speech.Recognition.SemanticValue.Value%2A> Свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-469">When you combine <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="f89fd-470">Распознаватель речи может создавать исключения при обнаружении этих обстоятельствах.</span><span class="sxs-lookup"><span data-stu-id="f89fd-470">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="f89fd-471">Дополнительные сведения о создании грамматики распознавания речи, который содержит информацию о своем см. в разделе [SemanticResultValue понимание и объекты SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="f89fd-471">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="f89fd-472">Имеет эквивалентный метод для этого оператора <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="f89fd-472">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="f89fd-473">Первый элемент грамматики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-473">The first grammar element.</span>
          </span>
        </param>
        <param name="phrase">
          <span data-ttu-id="f89fd-474">Второй элемент грамматики, который представляет последовательность слов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-474">The second grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-475">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, после которой следует фраза.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-475">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a phrase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f89fd-476">Возвращает <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности параметра <paramref name="builder" />, а затем параметр <paramref name="phrase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-476">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="phrase" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-477"><xref:System.Speech.Recognition.GrammarBuilder> поддерживает преобразования из следующих классов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-477"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="f89fd-478">Этот метод принимает объекты, перечисленные выше для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="f89fd-478">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="f89fd-479">Дополнительные сведения см. в разделе <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> операторы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-479">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="f89fd-480">Имеет эквивалентный метод для этого оператора <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="f89fd-480">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="phrase + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="f89fd-481">Первый элемент грамматики, который представляет последовательность слов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-481">The first grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="f89fd-482">Второй элемент grammar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-482">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-483">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий фразу, после которой следует объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-483">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f89fd-484">Возвращает <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности параметра <paramref name="phrase" />, а затем параметр <paramref name="builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-484">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> parameter followed by the <paramref name="builder" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-485"><xref:System.Speech.Recognition.GrammarBuilder> поддерживает преобразования из следующих классов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-485"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="f89fd-486">Этот метод принимает объекты, перечисленные выше для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="f89fd-486">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="f89fd-487">Дополнительные сведения см. в разделе <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> операторы.</span><span class="sxs-lookup"><span data-stu-id="f89fd-487">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="f89fd-488">Имеет эквивалентный метод для этого оператора <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="f89fd-488">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="f89fd-489">В следующем примере создается грамматику распознавания речи, который может распознать две фразы «фон *цвет*"и «Меняем цвет фона на *цвет*«, где *цвет* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-489">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="f89fd-490">Различные типы используются для создания окончательного грамматики, такие как [строка](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, и <xref:System.Speech.Recognition.GrammarBuilder> объектов.</span><span class="sxs-lookup"><span data-stu-id="f89fd-490">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f89fd-491">Преобразует другой тип в <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-491">Converts another type to a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-492">Неявное преобразование создает новый экземпляр класса <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-492">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="f89fd-493">Каждый из следующих классов можно привести <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-493">You can cast each of the following classes to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="f89fd-494">Каждый из неявного приведения эквивалентно вызову конструктора.</span><span class="sxs-lookup"><span data-stu-id="f89fd-494">Each of the implicit casts is equivalent to calling the constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="f89fd-495">Набор вариантов для преобразования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-495">The set of alternatives to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-496">Преобразует объект <see cref="T:System.Speech.Recognition.Choices" /> в объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-496">Converts a <see cref="T:System.Speech.Recognition.Choices" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f89fd-497">Преобразованный объект <see cref="T:System.Speech.Recognition.Choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-497">The converted <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-498">Неявное преобразование создает новый экземпляр класса <xref:System.Speech.Recognition.GrammarBuilder>. Этот оператор эквивалентен вызову <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> и указав `choices` для `alternateChoices`.</span><span class="sxs-lookup"><span data-stu-id="f89fd-498">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `choices` for the `alternateChoices`.</span></span>  
  
 <span data-ttu-id="f89fd-499">Имеет эквивалентный метод для этого оператора <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="f89fd-499">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="f89fd-500">В следующем примере создается грамматику распознавания речи, который может распознать ответ «Да» или «no» вопрос.</span><span class="sxs-lookup"><span data-stu-id="f89fd-500">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="f89fd-501">Оператор неявного преобразования, используемый при построении <xref:System.Speech.Recognition.SemanticResultValue> объекта из <xref:System.Speech.Recognition.Choices> объекта, при построении <xref:System.Speech.Recognition.Choices> объект из двух <xref:System.Speech.Recognition.SemanticResultValue> объектов и при построении <xref:System.Speech.Recognition.Grammar> объект из <xref:System.Speech.Recognition.SemanticResultKey> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-501">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultKey semanticKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultKey semanticKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticKey As SemanticResultKey) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultKey ^ semanticKey);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticKey" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="semanticKey">
          <span data-ttu-id="f89fd-502">Семантический ключ для преобразования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-502">The semantic key to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-503">Преобразует объект <see cref="T:System.Speech.Recognition.SemanticResultKey" /> в объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-503">Converts a <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f89fd-504">Преобразованный объект <see cref="T:System.Speech.Recognition.SemanticResultKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-504">The converted <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-505">Неявное преобразование создает новый экземпляр класса <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-505">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="f89fd-506">Этот оператор эквивалентен вызову <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> и указав `semanticKey` для `key`.</span><span class="sxs-lookup"><span data-stu-id="f89fd-506">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticKey` for the `key`.</span></span>  
  
 <span data-ttu-id="f89fd-507">Имеет эквивалентный метод для этого оператора <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="f89fd-507">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="f89fd-508">В следующем примере создается грамматику распознавания речи, который может распознать ответ «Да» или «no» вопрос.</span><span class="sxs-lookup"><span data-stu-id="f89fd-508">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="f89fd-509">Оператор неявного преобразования, используемый при построении <xref:System.Speech.Recognition.SemanticResultValue> объекта из <xref:System.Speech.Recognition.Choices> объекта, при построении <xref:System.Speech.Recognition.Choices> объект из двух <xref:System.Speech.Recognition.SemanticResultValue> объектов и при построении <xref:System.Speech.Recognition.Grammar> объект из <xref:System.Speech.Recognition.SemanticResultKey> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-509">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultValue semanticValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultValue semanticValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticValue As SemanticResultValue) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultValue ^ semanticValue);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticValue" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="semanticValue">
          <span data-ttu-id="f89fd-510">Преобразуемый объект <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-510">The <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-511">Преобразует объект <see cref="T:System.Speech.Recognition.SemanticResultValue" /> в объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-511">Converts a <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f89fd-512">Преобразованный объект <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-512">The converted <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-513">Неявное преобразование создает новый экземпляр класса <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-513">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="f89fd-514">Этот оператор эквивалентен вызову <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> и указав `semanticValue` для `value`.</span><span class="sxs-lookup"><span data-stu-id="f89fd-514">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticValue` for the `value`.</span></span>  
  
 <span data-ttu-id="f89fd-515">Имеет эквивалентный метод для этого оператора <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="f89fd-515">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="f89fd-516">В следующем примере создается грамматику распознавания речи, который может распознать ответ «Да» или «no» вопрос.</span><span class="sxs-lookup"><span data-stu-id="f89fd-516">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="f89fd-517">Оператор неявного преобразования, используемый при построении <xref:System.Speech.Recognition.SemanticResultValue> объекта из <xref:System.Speech.Recognition.Choices>объекта, при построении <xref:System.Speech.Recognition.Choices> объект из двух <xref:System.Speech.Recognition.SemanticResultValue> объектов и при построении <xref:System.Speech.Recognition.Grammar> объект из <xref:System.Speech.Recognition.SemanticResultKey> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-517">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices>object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="f89fd-518">Преобразуемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-518">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f89fd-519">Преобразует строку в объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-519">Converts a string to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f89fd-520">Преобразованная строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f89fd-520">The converted string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89fd-521">Неявное преобразование создает новый экземпляр класса <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="f89fd-521">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="f89fd-522">Этот оператор эквивалентен вызову <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> и указав те же `phrase`.</span><span class="sxs-lookup"><span data-stu-id="f89fd-522">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying the same `phrase`.</span></span>  
  
 <span data-ttu-id="f89fd-523">Имеет эквивалентный метод для этого оператора <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="f89fd-523">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="f89fd-524">В следующем примере используется <xref:System.Speech.Recognition.GrammarBuilder> и <xref:System.Speech.Recognition.Choices> объекты для создания грамматики, который может распознать одно из двух фразы «фон *colorChoice*"или «Меняем цвет фона на *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="f89fd-524">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="f89fd-525">После создания списка допустимых значений для *colorChoice* с помощью <xref:System.Speech.Recognition.Choices> объекта, в примере инициализируются два <xref:System.Speech.Recognition.GrammarBuilder> объектов, `makePhrase` и `setPhrase`, с правилами неявного преобразования из строки объекты.</span><span class="sxs-lookup"><span data-stu-id="f89fd-525">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using implicit conversion from string objects.</span></span>  
  
 <span data-ttu-id="f89fd-526">Наконец, в примере создается <xref:System.Speech.Recognition.Grammar> объекта из <xref:System.Speech.Recognition.Choices> объект приведен к <xref:System.Speech.Recognition.GrammarBuilder> объекта.</span><span class="sxs-lookup"><span data-stu-id="f89fd-526">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
  </Members>
</Type>