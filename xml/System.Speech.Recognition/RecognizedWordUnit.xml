<Type Name="RecognizedWordUnit" FullName="System.Speech.Recognition.RecognizedWordUnit">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71f3e67169fb38681d72a3ed7a2aef2d3fadc3aa" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51896018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RecognizedWordUnit" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RecognizedWordUnit extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.RecognizedWordUnit" />
  <TypeSignature Language="VB.NET" Value="Public Class RecognizedWordUnit" />
  <TypeSignature Language="C++ CLI" Value="public ref class RecognizedWordUnit" />
  <TypeSignature Language="F#" Value="type RecognizedWordUnit = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Text: {Text}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d8b18-101">Предоставляет атомарный блок распознанной речи.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8b18-101">Provides the atomic unit of recognized speech.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b18-102">Все результаты, возвращенные механизма распознавания конструируются из <xref:System.Speech.Recognition.RecognizedWordUnit> объектов.</span><span class="sxs-lookup"><span data-stu-id="d8b18-102">All results returned by a recognition engine are constructed of <xref:System.Speech.Recognition.RecognizedWordUnit> objects.</span></span>  
  
 <span data-ttu-id="d8b18-103">Массив <xref:System.Speech.Recognition.RecognizedWordUnit> объектов доступна для любой операции распознавания через <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> свойство <xref:System.Speech.Recognition.RecognizedPhrase> объекта.</span><span class="sxs-lookup"><span data-stu-id="d8b18-103">An array of <xref:System.Speech.Recognition.RecognizedWordUnit> objects is accessible for any recognition operation through the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
 <span data-ttu-id="d8b18-104">Помимо предоставления меры точности распознавания (<xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A>) <xref:System.Speech.Recognition.RecognizedWordUnit> предоставляет экземпляр:</span><span class="sxs-lookup"><span data-stu-id="d8b18-104">In addition to providing a measure of recognition certainty (<xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A>) a <xref:System.Speech.Recognition.RecognizedWordUnit> instance provides:</span></span>  
  
-   <span data-ttu-id="d8b18-105">Нормализованная и точное (или лексические) текстовое представления для распознанного слова.</span><span class="sxs-lookup"><span data-stu-id="d8b18-105">Normalized and exact (or lexical) text representations for a recognized word.</span></span> <span data-ttu-id="d8b18-106">Дополнительные сведения см. в разделах <xref:System.Speech.Recognition.ReplacementText>, <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A> и <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8b18-106">For more information, see <xref:System.Speech.Recognition.ReplacementText>, <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>, and <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>.</span></span>  
  
-   <span data-ttu-id="d8b18-107">Произношение сведения с помощью символов из поддерживаемого фонетического алфавита, например международного фонетического алфавита (IPA) или универсальный набор звуков (UPS).</span><span class="sxs-lookup"><span data-stu-id="d8b18-107">Pronunciation information using characters from a supported phonetic alphabet, such as the International Phonetic Alphabet (IPA) or the Universal Phone Set (UPS).</span></span> <span data-ttu-id="d8b18-108">Дополнительные сведения см. в разделе <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8b18-108">For more information see <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>.</span></span>  
  
-   <span data-ttu-id="d8b18-109">Форматирование для печати.</span><span class="sxs-lookup"><span data-stu-id="d8b18-109">Formatting for printing.</span></span> <span data-ttu-id="d8b18-110">Дополнительные сведения см. в разделе <xref:System.Speech.Recognition.DisplayAttributes> класса и его <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="d8b18-110">For more information see the <xref:System.Speech.Recognition.DisplayAttributes> class and its <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b18-111">В следующем примере показано служебной процедуры (`stringFromWordArray`), который создает строки.</span><span class="sxs-lookup"><span data-stu-id="d8b18-111">The following example shows a utility routine (`stringFromWordArray`) that generates strings.</span></span> <span data-ttu-id="d8b18-112">Строки содержат лексические выходные данные (с помощью <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), нормализованы текст (с помощью <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), или фонетические знаки из международного фонетического алфавита (с помощью <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span><span class="sxs-lookup"><span data-stu-id="d8b18-112">The strings contain lexical output (using <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalized text (using <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), or phonetic characters from the International Phonetic Alphabet (using <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span></span> <span data-ttu-id="d8b18-113">Форматирование строк с помощью <xref:System.Speech.Recognition.DisplayAttributes> получить объекты из <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> свойства из <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> из <xref:System.Speech.Recognition.RecognizedWordUnit> объектов.</span><span class="sxs-lookup"><span data-stu-id="d8b18-113">Strings are formatted using <xref:System.Speech.Recognition.DisplayAttributes> objects obtained from the <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> property from a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Speech.Recognition.RecognizedWordUnit> objects.</span></span> <span data-ttu-id="d8b18-114"><xref:System.Speech.Recognition.RecognizedWordUnit> Объекты извлекаются из <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> свойство <xref:System.Speech.Recognition.RecognizedPhrase> объекта.</span><span class="sxs-lookup"><span data-stu-id="d8b18-114">The <xref:System.Speech.Recognition.RecognizedWordUnit> objects are obtained from the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
```csharp  
  
internal enum WordType   
{  
  Text,  
  Normalized = Text,  
  Lexical,  
  Pronunciation  
}  
```  
  
```csharp  
internal static string stringFromWordArray(ReadOnlyCollection<RecognizedWordUnit> words, WordType type)   
{  
  string text = "";  
  foreach (RecognizedWordUnit word in words)   
  {  
    string wordText = "";  
    if (type == WordType.Text || type == WordType.Normalized)   
    {  
      wordText = word.Text;  
    }   
    else if (type == WordType.Lexical)   
    {  
      wordText = word.LexicalForm;  
    }   
    else if (type == WordType.Pronunciation)   
    {  
      wordText = word.Pronunciation;  
    }   
    else   
    {  
      throw new InvalidEnumArgumentException(String.Format("[0}: is not a valid input", type));  
    }  
    // Use display attribute  
  
    if ((word.DisplayAttributes & DisplayAttributes.OneTrailingSpace) != 0)   
    {  
      wordText += " ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.TwoTrailingSpaces) != 0)  
    {  
      wordText += "  ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ConsumeLeadingSpaces) != 0)   
    {  
      wordText = wordText.TrimStart();  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ZeroTrailingSpaces) != 0)  
    {  
      wordText = wordText.TrimEnd();  
    }  
  
    text += wordText;  
  
  }  
  return text;  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.DisplayAttributes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RecognizedWordUnit (string text, float confidence, string pronunciation, string lexicalForm, System.Speech.Recognition.DisplayAttributes displayAttributes, TimeSpan audioPosition, TimeSpan audioDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, float32 confidence, string pronunciation, string lexicalForm, valuetype System.Speech.Recognition.DisplayAttributes displayAttributes, valuetype System.TimeSpan audioPosition, valuetype System.TimeSpan audioDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.RecognizedWordUnit.#ctor(System.String,System.Single,System.String,System.String,System.Speech.Recognition.DisplayAttributes,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RecognizedWordUnit(System::String ^ text, float confidence, System::String ^ pronunciation, System::String ^ lexicalForm, System::Speech::Recognition::DisplayAttributes displayAttributes, TimeSpan audioPosition, TimeSpan audioDuration);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.RecognizedWordUnit : string * single * string * string * System.Speech.Recognition.DisplayAttributes * TimeSpan * TimeSpan -&gt; System.Speech.Recognition.RecognizedWordUnit" Usage="new System.Speech.Recognition.RecognizedWordUnit (text, confidence, pronunciation, lexicalForm, displayAttributes, audioPosition, audioDuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="confidence" Type="System.Single" />
        <Parameter Name="pronunciation" Type="System.String" />
        <Parameter Name="lexicalForm" Type="System.String" />
        <Parameter Name="displayAttributes" Type="System.Speech.Recognition.DisplayAttributes" />
        <Parameter Name="audioPosition" Type="System.TimeSpan" />
        <Parameter Name="audioDuration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="d8b18-115">Нормализованный текст для распознанного слова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-115">The normalized text for a recognized word.</span>
          </span>
          <span data-ttu-id="d8b18-116">Возможные значения — <see langword="null" />, "" или <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-116">This value can be <see langword="null" />, "", or <see cref="F:System.String.Empty" />.</span>
          </span>
        </param>
        <param name="confidence">
          <span data-ttu-id="d8b18-117">Значение от 0,0 до 1.0 <see langword="float" />, указывающий определенность распознавания слова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-117">A <see langword="float" /> value from 0.0 through 1.0 indicating the certainty of word recognition.</span>
          </span>
        </param>
        <param name="pronunciation">
          <span data-ttu-id="d8b18-118">Фонетическое написание распознанного слова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-118">The phonetic spelling of a recognized word.</span>
          </span>
          <span data-ttu-id="d8b18-119">Возможные значения — <see langword="null" />, "" или <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-119">This value can be <see langword="null" />, "", or <see cref="F:System.String.Empty" />.</span>
          </span>
        </param>
        <param name="lexicalForm">
          <span data-ttu-id="d8b18-120">Ненормализованный текст для распознанного слова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-120">The unnormalized text for a recognized word.</span>
          </span>
          <span data-ttu-id="d8b18-121">Этот аргумент обязателен и не может быть <see langword="null" />, "" или <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-121">This argument is required and may not be <see langword="null" />, "", or <see cref="F:System.String.Empty" />.</span>
          </span>
        </param>
        <param name="displayAttributes">
          <span data-ttu-id="d8b18-122">Определяет использование пробелов для отображения распознанных слов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-122">Defines the use of white space to display recognized words.</span>
          </span>
        </param>
        <param name="audioPosition">
          <span data-ttu-id="d8b18-123">Расположение распознанного слова во входном звуковом потоке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-123">The location of the recognized word in the audio input stream.</span>
          </span>
          <span data-ttu-id="d8b18-124">Это значение может быть равно <see cref="F:System.TimeSpan.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-124">This value can be <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </param>
        <param name="audioDuration">
          <span data-ttu-id="d8b18-125">Длина входных звуковых данных, которые соответствуют распознанному слову.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-125">The length of the audio input corresponding to the recognized word.</span>
          </span>
          <span data-ttu-id="d8b18-126">Это значение может быть равно <see cref="F:System.TimeSpan.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-126">This value can be <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b18-127">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.RecognizedWordUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-127">Initializes a new instance of the <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b18-128">Если `text` или `pronunciation` являются `null`, «», или <xref:System.String.Empty> и <xref:System.Speech.Recognition.RecognizedWordUnit> используется в операции распознавания, механизм распознавания создаст соответствующие значения в выходных данных <xref:System.Speech.Recognition.RecognizedWordUnit> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="d8b18-128">If `text` or `pronunciation` are `null`, "", or <xref:System.String.Empty> and the <xref:System.Speech.Recognition.RecognizedWordUnit> is used in a recognition operation, the recognition engine will generate appropriate values in any output <xref:System.Speech.Recognition.RecognizedWordUnit> instance.</span></span>  
  
 <span data-ttu-id="d8b18-129">Прямой конструкции <xref:System.Speech.Recognition.RecognizedWordUnit> экземпляров обычно используется только в том случае, если эмуляция операций распознавания с помощью <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize%2A> или <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync%2A> методы <xref:System.Speech.Recognition.SpeechRecognitionEngine> класс и <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize%2A> или <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync%2A> методы <xref:System.Speech.Recognition.SpeechRecognizer> класса.</span><span class="sxs-lookup"><span data-stu-id="d8b18-129">Direct construction of <xref:System.Speech.Recognition.RecognizedWordUnit> instances is typically used only when emulating recognition operations using the <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize%2A> or <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync%2A> methods of the <xref:System.Speech.Recognition.SpeechRecognitionEngine> class and the <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize%2A> or <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync%2A> methods of the <xref:System.Speech.Recognition.SpeechRecognizer> class.</span></span>  
  
 <span data-ttu-id="d8b18-130">Для фактического приложения, не создавайте непосредственно <xref:System.Speech.Recognition.RecognizedWordUnit>, вместо получения его с помощью <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> свойство <xref:System.Speech.Recognition.RecognizedPhrase> объекта.</span><span class="sxs-lookup"><span data-stu-id="d8b18-130">For actual applications, do not directly construct <xref:System.Speech.Recognition.RecognizedWordUnit>, rather obtain it through the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b18-131">Следующий пример надуманный тестом эмуляции, где создан из входных данных и передаются в эмуляторе и затем Проверка новых слов.</span><span class="sxs-lookup"><span data-stu-id="d8b18-131">The following example is a somewhat contrived test of emulation, where new words are generated from the input and passed to the emulator, and then verified.</span></span>  
  
```csharp  
private void _emulateAndVerify_Click(object sender, EventArgs e)   
{  
  char[] delimiterChars = { ' ', ',', '.', ':', ';', '\t' };  
  string text = _emulateTextBox.Text;  
  string[] words = text.Split(delimiterChars);  
  
  RecognizedWordUnit[] InputWordUnits = new RecognizedWordUnit[words.Length];  
  for (int i = 0; i < words.Length; i++)   
  {  
    InputWordUnits[i] = new RecognizedWordUnit(  
        "",   
        0,   
        "",  
        words[i].ToLower(),   
        DisplayAttributes.OneTrailingSpace,   
        new TimeSpan(),   
        new TimeSpan());  
  }  
  
  RecognitionResult rec = _recognizer.EmulateRecognize(  
        InputWordUnits,   
        System.Globalization.CompareOptions.IgnoreCase);  
  if (rec == null)   
  {  
    MessageBox.Show(String.Format("Recognition emulation for {0} failed.\n", text));  
  }   
  else if (InputWordUnits.Length != rec.Words.Count)   
  {  
    MessageBox.Show(  
       String.Format("Length mismatch: Input was {0} words, Recognition has {1} words.\n}"));  
  }   
  else   
  {  
    for (int i = 0; i < InputWordUnits.Length; i++)   
    {  
  
      if (rec.Words[i].LexicalForm.ToLower() != InputWordUnits[i].LexicalForm.ToLower())   
      {  
        MessageBox.Show(  
          String.Format("Input word {0} \"{1}\" not found. Recognition output is {2}",  
          i, InputWordUnits[i].LexicalForm, rec.Words[i].LexicalForm));  
        continue;  
      }  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DisplayAttributes" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=58363">
          <span data-ttu-id="d8b18-132">Международного фонетического алфавита</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-132">International Phonetic Alphabet</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Confidence">
      <MemberSignature Language="C#" Value="public float Confidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Confidence" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedWordUnit.Confidence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Confidence As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Confidence { float get(); };" />
      <MemberSignature Language="F#" Value="member this.Confidence : single" Usage="System.Speech.Recognition.RecognizedWordUnit.Confidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8b18-133">Получает значение, присвоенное распознавателем, которое представляет вероятность того, что распознанное слово соответствует заданным входным данным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-133">Gets a value, assigned by the recognizer, that represents the likelihood that a recognized word matches a given input.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8b18-134">Относительная меры точности для машинного правильного распознавания слов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-134">A relative measure of the certainty of correct recognition for a word.</span>
          </span>
          <span data-ttu-id="d8b18-135">Значение находится в диапазоне от 0,0 до 1,0 (низкая и высокая достоверность соответственно).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-135">The value is from 0.0 to 1.0, for low to high confidence, respectively.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b18-136">Достоверности указывает абсолютный вероятность правильного распознавания слова.</span><span class="sxs-lookup"><span data-stu-id="d8b18-136">Confidence scores do not indicate the absolute likelihood that a word was recognized correctly.</span></span> <span data-ttu-id="d8b18-137">Вместо этого достоверности предоставляют механизм для сравнения относительную точность нескольких альтернативных результатов распознавания для данного входа.</span><span class="sxs-lookup"><span data-stu-id="d8b18-137">Instead, confidence scores provide a mechanism for comparing the relative accuracy of multiple recognition alternates for a given input.</span></span> <span data-ttu-id="d8b18-138">Это облегчает, возвращая наиболее точный результат распознавания.</span><span class="sxs-lookup"><span data-stu-id="d8b18-138">This facilitates returning the most accurate recognition result.</span></span> <span data-ttu-id="d8b18-139">Например если показатель достоверности 0,8 распознанного слова, это означает, что слово имеет шанс 80% точное совпадение для входных данных.</span><span class="sxs-lookup"><span data-stu-id="d8b18-139">For example, if a recognized word has a confidence score of 0.8, this does not mean that the word has an 80% chance of being the correct match for the input.</span></span>  <span data-ttu-id="d8b18-140">Это означает, что слово скорее всего, следует убедиться, что точное совпадение для входных данных, чем другие результаты, которые имеют достоверности оценки меньше, чем 0,8.</span><span class="sxs-lookup"><span data-stu-id="d8b18-140">It means that the word is more likely to be the correct match for the input than other results that have confidence scores less than 0.8.</span></span>  
  
 <span data-ttu-id="d8b18-141">Показатель достоверности, сам по себе не имеет смысла, если у вас нет альтернативных результатов для сравнения, из той же операции распознавания или из предыдущих распознаваний же входных данных.</span><span class="sxs-lookup"><span data-stu-id="d8b18-141">A confidence score on its own is not meaningful unless you have alternative results to compare against, either from the same recognition operation or from previous recognitions of the same input.</span></span>  
  
 <span data-ttu-id="d8b18-142">Значения, возвращаемые методом <xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A> : относительный и уникальным для каждого механизма распознавания.</span><span class="sxs-lookup"><span data-stu-id="d8b18-142">The values returned by <xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A> are relative and unique to each recognition engine.</span></span> <span data-ttu-id="d8b18-143">Нет определения, как достоверность значения в диапазоне от двух разных распознавания сравнения, ни как <xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A> отдельных <xref:System.Speech.Recognition.RecognizedWordUnit> объекты определяют <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> из <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="d8b18-143">There is no definition of how confidence values between two different recognition engines compare, nor how the <xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A> of individual <xref:System.Speech.Recognition.RecognizedWordUnit> objects define the <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> of a <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
 <span data-ttu-id="d8b18-144">В обработчик распознавания речи может назначить низкий показатель достоверности ввода речи по различным причинам, включая фона помех, inarticulate речи или непредвиденных слова или последовательностей слов.</span><span class="sxs-lookup"><span data-stu-id="d8b18-144">A speech recognition engine may assign a low confidence score to spoken input for various reasons, including background interference, inarticulate speech, or unanticipated words or word sequences.</span></span> <span data-ttu-id="d8b18-145">Если приложение использует <xref:System.Speech.Recognition.SpeechRecognitionEngine> экземпляр, можно изменить уровень достоверности которого речь принят или отклонен с одним из входных данных <xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="d8b18-145">If your application is using a <xref:System.Speech.Recognition.SpeechRecognitionEngine> instance, you can modify the confidence level at which speech input is accepted or rejected with one of the <xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> methods.</span></span> <span data-ttu-id="d8b18-146">Пороговые значения достоверности для общий распознаватель, управляет <xref:System.Speech.Recognition.SpeechRecognizer>, связанные с профилем пользователя, хранятся в реестре Windows.</span><span class="sxs-lookup"><span data-stu-id="d8b18-146">Confidence thresholds for the shared recognizer, managed by <xref:System.Speech.Recognition.SpeechRecognizer>, are associated with a user profile and stored in the Windows registry.</span></span> <span data-ttu-id="d8b18-147">Приложения не следует записывать изменения в реестр для свойств общего распознаватель.</span><span class="sxs-lookup"><span data-stu-id="d8b18-147">Applications should not write changes to the registry for the properties of the shared recognizer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAttributes">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.DisplayAttributes DisplayAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Recognition.DisplayAttributes DisplayAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayAttributes As DisplayAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::DisplayAttributes DisplayAttributes { System::Speech::Recognition::DisplayAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayAttributes : System.Speech.Recognition.DisplayAttributes" Usage="System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8b18-148">Получает сведения о форматировании, используемые для создания текстового вывода из текущего экземпляра <see cref="T:System.Speech.Recognition.RecognizedWordUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-148">Gets formatting information used to create the text output from the current <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8b18-149">Указывает использование пробелов для отображения содержимого объекта <see cref="T:System.Speech.Recognition.RecognizedWordUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-149">Specifies the use of white space to display of the contents of a <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b18-150"><xref:System.Speech.Recognition.DisplayAttributes> Объект, возвращаемый <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> свойство задает начальные и конечные пробелы для использования с данного слова, если таковые имеются.</span><span class="sxs-lookup"><span data-stu-id="d8b18-150">The <xref:System.Speech.Recognition.DisplayAttributes> object returned by the <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> property specifies the leading and trailing spaces to be used with a given word, if any.</span></span>  
  
 <span data-ttu-id="d8b18-151">Дополнительные сведения о том, как использовать эти сведения о форматировании см. в разделе <xref:System.Speech.Recognition.DisplayAttributes> перечисления.</span><span class="sxs-lookup"><span data-stu-id="d8b18-151">For more information about how to use this formatting information, see the <xref:System.Speech.Recognition.DisplayAttributes> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b18-152">В следующем примере показано служебной процедуры (`stringFromWordArray`), создает строку, отформатированную в одном из трех способов: лексически (с помощью <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), нормализованную (с помощью <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), или фонетически (с помощью <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span><span class="sxs-lookup"><span data-stu-id="d8b18-152">The following example shows a utility routine (`stringFromWordArray`) that generates a string that is formatted in one of three ways: lexically (using <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalized (using <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), or phonetically (using <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span></span> <span data-ttu-id="d8b18-153">Выходной текст извлекается из <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> свойство <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> из <xref:System.Speech.Recognition.RecognizedWordUnit> объекты, которые извлекаются из <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> свойство <xref:System.Speech.Recognition.RecognizedPhrase> объекта.</span><span class="sxs-lookup"><span data-stu-id="d8b18-153">The text output is obtained from the <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> property on a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Speech.Recognition.RecognizedWordUnit> objects, which is obtained from the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on a <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
```csharp  
  
internal enum WordType   
{  
  Text,  
  Normalized = Text,  
  Lexical,  
  Pronunciation  
}  
```  
  
```csharp  
internal static string stringFromWordArray(  
        ReadOnlyCollection<RecognizedWordUnit> words,   
        WordType type)   
{  
  string text = "";  
  foreach (RecognizedWordUnit word in words)   
  {  
    string wordText = "";  
    if (type == WordType.Text || type == WordType.Normalized)   
    {  
      wordText = word.Text;  
    }   
    else if (type == WordType.Lexical)   
    {  
      wordText = word.LexicalForm;  
    }  
    else if (type == WordType.Pronunciation)   
    {  
       wordText = word.Pronunciation;  
    }   
    else   
    {  
      throw new InvalidEnumArgumentException(  
         String.Format("[0}: is not a valid input", type));  
    }  
  
    // Use display attribute  
    if ((word.DisplayAttributes & DisplayAttributes.OneTrailingSpace) != 0)   
    {  
      wordText += " ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.TwoTrailingSpaces) != 0)  
    {  
      wordText += "  ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ConsumeLeadingSpaces) != 0)   
    {  
      wordText = wordText.TrimStart();  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ZeroTrailingSpaces) != 0)  
    {  
      wordText = wordText.TrimEnd();  
    }  
  
    text += wordText;  
  
  }  
  return text;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DisplayAttributes" />
      </Docs>
    </Member>
    <Member MemberName="LexicalForm">
      <MemberSignature Language="C#" Value="public string LexicalForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LexicalForm" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedWordUnit.LexicalForm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LexicalForm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LexicalForm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LexicalForm : string" Usage="System.Speech.Recognition.RecognizedWordUnit.LexicalForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8b18-154">Получает ненормализованный текст распознанного слова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-154">Gets the unnormalized text of a recognized word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8b18-155">Возвращает <see cref="T:System.String" />, содержащий текст распознанного слова, не выполняя нормализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-155">Returns a <see cref="T:System.String" /> containing the text of a recognized word, without any normalization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b18-156">В большинстве случаев значения, возвращаемые методом <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A> и <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A> идентичны.</span><span class="sxs-lookup"><span data-stu-id="d8b18-156">In most cases the values returned by <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A> and <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A> are identical.</span></span> <span data-ttu-id="d8b18-157">Тем не менее механизмы распознавания может использовать нормализации речи для возврата более понятного или colloquial текстовые представления входных звуковых данных.</span><span class="sxs-lookup"><span data-stu-id="d8b18-157">However, recognition engines may use speech normalization to return more user-friendly or colloquial text representations of audio input.</span></span>  
  
 <span data-ttu-id="d8b18-158">Нормализации речи — это использовать специальные конструкции, так и символы для выражения речи в письменной форме.</span><span class="sxs-lookup"><span data-stu-id="d8b18-158">Speech normalization is the use of special constructs or symbols to express speech in writing.</span></span> <span data-ttu-id="d8b18-159">Например нормализация можно заменить произнесенного слова «доллара и шестнадцать центов» «$1.16"в выходной текст.</span><span class="sxs-lookup"><span data-stu-id="d8b18-159">For example, normalization can replace the spoken words "a dollar and sixteen cents" with "$1.16" in output text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b18-160">В следующем примере показано подпрограмму служебная программа, которая создает текст в одном из трех форматов: лексический (с помощью <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), нормализованную (с помощью <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>) и фонетические (с помощью <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span><span class="sxs-lookup"><span data-stu-id="d8b18-160">The following example shows a utility routine that generates text in one of three formats: lexical (using <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalized (using <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), and phonetic (using <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span></span> <span data-ttu-id="d8b18-161">Выходной текст извлекается из <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> из <xref:System.Speech.Recognition.RecognizedWordUnit> объекты, которые извлекаются из <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> свойство <xref:System.Speech.Recognition.RecognizedPhrase> объекта.</span><span class="sxs-lookup"><span data-stu-id="d8b18-161">The text output is obtained from a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Speech.Recognition.RecognizedWordUnit> objects, which is obtained from the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
```csharp  
  
internal enum WordType   
{  
  Text,  
  Normalized = Text,  
  Lexical,  
  Pronunciation  
}  
```  
  
```csharp  
internal static string stringFromWordArray(  
         ReadOnlyCollection<RecognizedWordUnit> words,   
         WordType type)   
{  
  string text = "";  
  foreach (RecognizedWordUnit word in words)   
  {  
    string wordText = "";  
    if (type == WordType.Text || type == WordType.Normalized)   
    {  
      wordText = word.Text;  
    }   
    else if (type == WordType.Lexical)   
    {  
      wordText = word.LexicalForm;  
    }   
    else if (type == WordType.Pronunciation)   
    {  
      wordText = word.Pronunciation;  
    }   
    else   
    {  
      throw new InvalidEnumArgumentException(  
          String.Format("[0}: is not a valid input", type));  
    }  
  
    // Use display attribute  
    if ((word.DisplayAttributes & DisplayAttributes.OneTrailingSpace) != 0)   
    {  
      wordText += " ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.TwoTrailingSpaces) != 0)  
    {  
      wordText += "  ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ConsumeLeadingSpaces) != 0)   
    {  
      wordText = wordText.TrimStart();  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ZeroTrailingSpaces) != 0)  
    {  
    wordText = wordText.TrimEnd();  
    }  
  
    text += wordText;  
  
  }  
  return text;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DisplayAttributes" />
      </Docs>
    </Member>
    <Member MemberName="Pronunciation">
      <MemberSignature Language="C#" Value="public string Pronunciation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pronunciation" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedWordUnit.Pronunciation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pronunciation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pronunciation { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pronunciation : string" Usage="System.Speech.Recognition.RecognizedWordUnit.Pronunciation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8b18-162">Получает фонетическое написание распознанного слова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-162">Gets the phonetic spelling of a recognized word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8b18-163">Строка символов из поддерживаемого фонетического алфавита, такого как международный фонетический алфавит (IPA) или универсальный набор звуков (UPS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-163">A string of characters from a supported phonetic alphabet, such as the International Phonetic Alphabet (IPA) or the Universal Phone Set (UPS).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b18-164">Содержание <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A> указать, какие произношение распознавания речи используются для сопоставления речевого ввода к одному из его загруженных <xref:System.Speech.Recognition.Grammar> объектов.</span><span class="sxs-lookup"><span data-stu-id="d8b18-164">The contents of <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A> indicate which pronunciation the speech recognition engine used to match speech input to one of its loaded <xref:System.Speech.Recognition.Grammar> objects.</span></span> <span data-ttu-id="d8b18-165">Произношение может быть определено в внутренний словарь механизма распознавания речи, лексикон документа, связанного с грамматику для распознавания на загруженной <xref:System.Speech.Recognition.Grammar> объекта или непосредственно в грамматику для распознавания на загруженной <xref:System.Speech.Recognition.Grammar> объекта.</span><span class="sxs-lookup"><span data-stu-id="d8b18-165">Pronunciations may be defined in the speech recognition engine's internal lexicon, in a lexicon document that is linked from a recognition grammar in a loaded <xref:System.Speech.Recognition.Grammar> object, or inline in a recognition grammar in a loaded <xref:System.Speech.Recognition.Grammar> object.</span></span> <span data-ttu-id="d8b18-166">В обработчик распознавания речи может также создавать произношения редко встречающиеся слова, в которых произношений не определены в лексикона или грамматики, к которому распознавания речи в настоящее время имеет доступ.</span><span class="sxs-lookup"><span data-stu-id="d8b18-166">A speech recognition engine may also create pronunciations for uncommon words whose pronunciations are not defined in a lexicon or grammar to which the speech recognition engine currently has access.</span></span>  
  
 <span data-ttu-id="d8b18-167">Многие шрифты Юникода на основе Windows, например Courier New поддерживают отображение IPA строк.</span><span class="sxs-lookup"><span data-stu-id="d8b18-167">Many Windows-based Unicode fonts, such as Courier New, support the display of IPA strings.</span></span> <span data-ttu-id="d8b18-168">Дополнительные сведения см. в разделе [международного фонетического алфавита](https://go.microsoft.com/fwlink/?LinkId=58363).</span><span class="sxs-lookup"><span data-stu-id="d8b18-168">For more information, see [International Phonetic Alphabet](https://go.microsoft.com/fwlink/?LinkId=58363).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b18-169">В следующем примере показано подпрограмму служебная программа, которая создает строку с одним из трех возможных форматах: лексический (с помощью <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), нормализованное (с помощью <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>) и фонетические (с помощью <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span><span class="sxs-lookup"><span data-stu-id="d8b18-169">The following example shows a utility routine that generates a string with one of three possible formats: lexical (using <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalized (using <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), and phonetic (using <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span></span> <span data-ttu-id="d8b18-170">Выходной текст извлекается из <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> из <xref:System.Speech.Recognition.RecognizedWordUnit> объекты, которые извлекаются из <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> свойство <xref:System.Speech.Recognition.RecognizedPhrase> объекта.</span><span class="sxs-lookup"><span data-stu-id="d8b18-170">The text output is obtained from a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Speech.Recognition.RecognizedWordUnit> objects, which is obtained from the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
```csharp  
  
internal enum WordType   
{  
  Text,  
  Normalized = Text,  
  Lexical,  
  Pronunciation  
}  
```  
  
```csharp  
internal static string stringFromWordArray(  
          ReadOnlyCollection<RecognizedWordUnit> words,   
          WordType type)   
{  
  string text = "";  
  foreach (RecognizedWordUnit word in words)   
  {  
    string wordText = "";  
    if (type == WordType.Text || type == WordType.Normalized)   
    {  
      wordText = word.Text;  
    }   
    else if (type == WordType.Lexical)   
    {  
      wordText = word.LexicalForm;  
    }   
    else if (type == WordType.Pronunciation)   
    {  
      wordText = word.Pronunciation;  
    }   
    else   
    {  
      throw new InvalidEnumArgumentException(  
          String.Format("[0}: is not a valid input", type));  
    }  
    // Use display attribute  
  
    if ((word.DisplayAttributes & DisplayAttributes.OneTrailingSpace) != 0)   
    {  
      wordText += " ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.TwoTrailingSpaces) != 0)   
    {  
      wordText += "  ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ConsumeLeadingSpaces) != 0)   
    {  
      wordText = wordText.TrimStart();  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ZeroTrailingSpaces) != 0)   
    {  
      wordText = wordText.TrimEnd();  
    }  
  
    text += wordText;  
  }  
  return text;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DisplayAttributes" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=58363">
          <span data-ttu-id="d8b18-171">Международного фонетического алфавита</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-171">International Phonetic Alphabet</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedWordUnit.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Speech.Recognition.RecognizedWordUnit.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8b18-172">Получает нормализованный текст для распознанного слова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-172">Gets the normalized text for a recognized word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8b18-173">Строка, содержащая нормализованный текстовый вывод для данного введенного слова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b18-173">A string that contains the normalized text output for a given input word.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b18-174">В большинстве случаев значения, возвращаемые методом <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A> и <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A> будут идентичны.</span><span class="sxs-lookup"><span data-stu-id="d8b18-174">In most cases the values returned by <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A> and <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A> will be identical.</span></span> <span data-ttu-id="d8b18-175">Тем не менее механизмы распознавания может использовать нормализации речи для возврата более понятного или colloquial текстовые представления входных звуковых данных.</span><span class="sxs-lookup"><span data-stu-id="d8b18-175">However, recognition engines may use speech normalization to return more user-friendly or colloquial text representations of audio input.</span></span>  
  
 <span data-ttu-id="d8b18-176">Нормализации речи — это использовать специальные конструкции, так и символы для выражения речи в письменной форме.</span><span class="sxs-lookup"><span data-stu-id="d8b18-176">Speech normalization is the use of special constructs or symbols to express speech in writing.</span></span> <span data-ttu-id="d8b18-177">Например нормализация можно заменить произнесенного слова «доллара и шестнадцать центов» «$1.16"в выходной текст.</span><span class="sxs-lookup"><span data-stu-id="d8b18-177">For example, normalization can replace the spoken words "a dollar and sixteen cents" with "$1.16" in output text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b18-178">В следующем примере показано подпрограмму служебная программа, которая создает строку в одном из трех форматов: лексический (с помощью <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), нормализованную (с помощью <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>) и фонетические (с помощью <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span><span class="sxs-lookup"><span data-stu-id="d8b18-178">The following example shows a utility routine that generates a string in one of three formats: lexical (using <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalized (using <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), and phonetic (using <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span></span> <span data-ttu-id="d8b18-179">Выходной текст извлекается из <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> из <xref:System.Speech.Recognition.RecognizedWordUnit> объекты, которые извлекаются из <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> свойство <xref:System.Speech.Recognition.RecognizedPhrase> объекта.</span><span class="sxs-lookup"><span data-stu-id="d8b18-179">The text output is obtained from a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Speech.Recognition.RecognizedWordUnit> objects, which is obtained from the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
```csharp  
  
internal enum WordType   
{  
  Text,  
  Normalized = Text,  
  Lexical,  
  Pronunciation  
}  
```  
  
```csharp  
internal static string stringFromWordArray(  
          ReadOnlyCollection<RecognizedWordUnit> words,   
          WordType type)   
{  
  string text = "";  
  foreach (RecognizedWordUnit word in words)   
  {  
    string wordText = "";  
    if (type == WordType.Text || type == WordType.Normalized)   
    {  
      wordText = word.Text;  
    }   
    else if (type == WordType.Lexical)   
    {  
      wordText = word.LexicalForm;  
    }   
    else if (type == WordType.Pronunciation)   
    {  
      wordText = word.Pronunciation;  
    }   
    else   
    {  
      throw new InvalidEnumArgumentException(  
           String.Format("[0}: is not a valid input", type));  
    }  
  
    // Use display attribute  
    if ((word.DisplayAttributes & DisplayAttributes.OneTrailingSpace) != 0)   
    {  
      wordText += " ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.TwoTrailingSpaces) != 0)   
    {  
      wordText += "  ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ConsumeLeadingSpaces) != 0)   
    {  
      wordText = wordText.TrimStart();  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ZeroTrailingSpaces) != 0)   
    {  
      wordText = wordText.TrimEnd();  
    }  
  
    text += wordText;  
  
  }  
  return text;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>