<Type Name="SemanticResultValue" FullName="System.Speech.Recognition.SemanticResultValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="907b483bc1be02cb41e948c494d9e811209c0ba1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55374622" /></Metadata><TypeSignature Language="C#" Value="public class SemanticResultValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultValue" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultValue" />
  <TypeSignature Language="F#" Value="type SemanticResultValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_tag.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b771b-101">Представляет семантическое значение и, при необходимости, связывает значение с компонентом грамматики распознавания речи.</span><span class="sxs-lookup"><span data-stu-id="b771b-101">Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b771b-102">Использование <xref:System.Speech.Recognition.SemanticResultValue> и <xref:System.Speech.Recognition.SemanticResultKey> объектов, в сочетании с <xref:System.Speech.Recognition.GrammarBuilder> и <xref:System.Speech.Recognition.Choices>, является самым простым способом для создания семантической структуры для <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="b771b-102">Use of <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices>, is the easiest way to design a semantic structure for a <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="b771b-103">Информацию о своем фразы осуществляется путем получения экземпляра <xref:System.Speech.Recognition.SemanticValue>, до <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> свойство <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="b771b-103">Semantic information for a phrase is accessed by obtaining an instance of <xref:System.Speech.Recognition.SemanticValue>, through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b771b-104">Значения, под управлением <xref:System.Speech.Recognition.SemanticResultValue> объектов определяются <xref:System.Object> передать экземпляров в их конструкторы.</span><span class="sxs-lookup"><span data-stu-id="b771b-104">Values managed by <xref:System.Speech.Recognition.SemanticResultValue> objects are defined by <xref:System.Object> instances passed to their constructors.</span></span> <span data-ttu-id="b771b-105">Базовый тип данного <xref:System.Object> должно быть `bool`, `int`, `float`, или `string`.</span><span class="sxs-lookup"><span data-stu-id="b771b-105">The underlying type of this <xref:System.Object> must be `bool`, `int`, `float`, or `string`.</span></span> <span data-ttu-id="b771b-106">Любой другой тип предотвратит создание <xref:System.Speech.Recognition.Grammar> с экземпляром <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="b771b-106">Any other type will prevent construction of a <xref:System.Speech.Recognition.Grammar> instance with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="b771b-107">Типичное использование <xref:System.Speech.Recognition.SemanticResultValue> экземпляр связывает экземпляр с запоминающееся компонентом <xref:System.Speech.Recognition.Grammar>, например фразой, правило, или <xref:System.Speech.Recognition.Choices> объекта.</span><span class="sxs-lookup"><span data-stu-id="b771b-107">The typical use of a <xref:System.Speech.Recognition.SemanticResultValue> instance associates the instance with a recognizable component of a <xref:System.Speech.Recognition.Grammar>, such as a phrase, a rule, or a <xref:System.Speech.Recognition.Choices> object.</span></span> <span data-ttu-id="b771b-108">Если связанный компонент используется как часть операции распознавания, <xref:System.Speech.Recognition.SemanticResultValue> используется для определения значения в семантике возвращаемый фразы.</span><span class="sxs-lookup"><span data-stu-id="b771b-108">If the associated component is used as part of a recognition operation, the <xref:System.Speech.Recognition.SemanticResultValue> is used to define a value in the semantics of the returned phrase.</span></span>  
  
 <span data-ttu-id="b771b-109">Существует два основных способа для связывания <xref:System.Speech.Recognition.SemanticResultValue> экземпляр с элемент грамматики, в зависимости от того, конструктор, используемый для создания <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="b771b-109">There are two basic methods for associating a <xref:System.Speech.Recognition.SemanticResultValue> instance with a grammar element, depending on the constructor used to create the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
-   <span data-ttu-id="b771b-110">Если только значение (указанный с помощью экземпляра <xref:System.Object>) используется для создания <xref:System.Speech.Recognition.SemanticResultValue> объекта, <xref:System.Speech.Recognition.SemanticResultValue> связан с компонентом грамматики, перед которым стоит, в дополнение к <xref:System.Speech.Recognition.GrammarBuilder> объекта.</span><span class="sxs-lookup"><span data-stu-id="b771b-110">If only the value (specified by an instance of <xref:System.Object>) is used to construct a <xref:System.Speech.Recognition.SemanticResultValue> object, the <xref:System.Speech.Recognition.SemanticResultValue> is associated with the grammar component that preceded it, in addition to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
     <span data-ttu-id="b771b-111">Например, в фрагменте кода ниже, если <xref:System.Speech.Recognition.Grammar> создан с помощью этого <xref:System.Speech.Recognition.GrammarBuilder> экземпляр распознает слово «фон», значение `true` задается в семантике распознанной фразы.</span><span class="sxs-lookup"><span data-stu-id="b771b-111">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
    ```csharp  
    GrammarBuilder backgroundGB=new GrammarBuilder("background");  
    backgroundGB.Append(new SemanticResultValue(true));  
    ```  
  
     <span data-ttu-id="b771b-112">Дополнительные сведения см. в описании <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="b771b-112">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span>  
  
-   <span data-ttu-id="b771b-113">Если строковое значение фразы или определенному <xref:System.Speech.Recognition.GrammarBuilder> экземпляра используется, и вместе с <xref:System.Object> , указывающий <xref:System.Speech.Recognition.SemanticResultValue> значение, что значение автоматически связывается с фразой значение строки или <xref:System.Speech.Recognition.GrammarBuilder> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="b771b-113">If a string value phrase or specific <xref:System.Speech.Recognition.GrammarBuilder> instance is used, together with a <xref:System.Object> that specifies a <xref:System.Speech.Recognition.SemanticResultValue> value, that value is automatically associated with the string value phrase or the <xref:System.Speech.Recognition.GrammarBuilder> instance.</span></span>  <span data-ttu-id="b771b-114">Если фраза или <xref:System.Speech.Recognition.GrammarBuilder> объект используется в процессе распознавания, значение будет назначаться семантика распознанной фразой.</span><span class="sxs-lookup"><span data-stu-id="b771b-114">If the phrase or <xref:System.Speech.Recognition.GrammarBuilder> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.</span></span>  
  
     <span data-ttu-id="b771b-115">Это показано в следующем примере и является функциональным эквивалентом предыдущий пример, в котором используется явных вызовов <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> и <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="b771b-115">The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span> <span data-ttu-id="b771b-116">Если логики распознавания используется слово «фон», значение `true` добавляется распознанных семантику.</span><span class="sxs-lookup"><span data-stu-id="b771b-116">If the recognition logic uses the word "background", the value `true` will be added to the recognized semantics.</span></span>  
  
    ```csharp  
    fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background", true));  
    ```  
  
     <span data-ttu-id="b771b-117">Дополнительные сведения см. в описании <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> и <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="b771b-117">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span></span>  
  
 <span data-ttu-id="b771b-118">Для использования <xref:System.Speech.Recognition.Grammar> возможности распознавания, все <xref:System.Speech.Recognition.SemanticResultValue> экземпляров должен быть связан с одним из <xref:System.Speech.Recognition.SemanticValue> объекты, используемые приложением, <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="b771b-118">To be used by a <xref:System.Speech.Recognition.Grammar> in recognition, all <xref:System.Speech.Recognition.SemanticResultValue> instances must be associated with one of the <xref:System.Speech.Recognition.SemanticValue> objects used by that <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="b771b-119">Это делается путем связывания семантический ключ с <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="b771b-119">This is done by associating a semantic key with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="b771b-120">Семантические ключи можно явным образом прикрепить к <xref:System.Speech.Recognition.SemanticResultValue>, с использованием <xref:System.Speech.Recognition.SemanticResultKey> объекта.</span><span class="sxs-lookup"><span data-stu-id="b771b-120">Semantic keys can be explicitly attached to a <xref:System.Speech.Recognition.SemanticResultValue>, using a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  <span data-ttu-id="b771b-121"><xref:System.Speech.Recognition.SemanticResultValue> вложенные экземпляры, которые явно не присоединен к ключу в корневой ключ по умолчанию <xref:System.Speech.Recognition.SemanticValue>.</span><span class="sxs-lookup"><span data-stu-id="b771b-121"><xref:System.Speech.Recognition.SemanticResultValue> instances not explicitly attached to a key are attached to the root key of the default <xref:System.Speech.Recognition.SemanticValue>.</span></span>  
  
 <span data-ttu-id="b771b-122">После <xref:System.Speech.Recognition.SemanticResultValue> используется для задания <xref:System.Speech.Recognition.SemanticValue.Value%2A>, является ли оно помечается корневой ключ по умолчанию или какого-либо конкретного <xref:System.Speech.Recognition.SemanticResultKey>, это значение не должно изменяться, или во время операций распознавания, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="b771b-122">After a <xref:System.Speech.Recognition.SemanticResultValue> has been used to set the <xref:System.Speech.Recognition.SemanticValue.Value%2A>, whether it is tagged with the default root key or by any particular <xref:System.Speech.Recognition.SemanticResultKey>, that value must not be modified or an exception will occur during recognition operations.</span></span>  
  
 <span data-ttu-id="b771b-123">Следующий пример создает исключение, так как он задает и затем изменяет корневой <xref:System.Speech.Recognition.SemanticValue.Value%2A> из <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="b771b-123">The following example will cause an exception because it sets and then modifies the root <xref:System.Speech.Recognition.SemanticValue.Value%2A> of a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
```csharp  
GrammarBuilder gb=new GrammarBuilder();  
gb.Append(new SemanticResultValue("One"));  
gb.Append(new SemanticResultValue("Two"));  
```  
  
 <span data-ttu-id="b771b-124">С другой стороны код в следующем примере разрешение.</span><span class="sxs-lookup"><span data-stu-id="b771b-124">On the other hand, the code in the following example is permitted.</span></span> <span data-ttu-id="b771b-125">Несмотря на то, что он определяет несколько экземпляров <xref:System.Speech.Recognition.SemanticResultValue>, они включаются в <xref:System.Speech.Recognition.Choices> объекта, а также только один будет всегда будут использоваться для задания значения ключа `bgOrfgText`.</span><span class="sxs-lookup"><span data-stu-id="b771b-125">Although it defines multiple instances of <xref:System.Speech.Recognition.SemanticResultValue>, they are included in a <xref:System.Speech.Recognition.Choices> object, and only one will ever be used to set the value of the key `bgOrfgText`.</span></span>  
  
```csharp  
Choices fgOrbgChoice = new Choices();  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background"));  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground"));  
SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgText", fgOrbgChoice);  
```
  
## Examples  
 <span data-ttu-id="b771b-126">В следующем примере возвращается <xref:System.Speech.Recognition.Grammar> , распознает команду «Set/изменение/Alter переднего плана и фона...</span><span class="sxs-lookup"><span data-stu-id="b771b-126">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="b771b-127">[Список цветов]».</span><span class="sxs-lookup"><span data-stu-id="b771b-127">[color list]".</span></span>  <span data-ttu-id="b771b-128"><xref:System.Speech.Recognition.SemanticResultValue> и <xref:System.Speech.Recognition.SemanticResultKey> экземпляры (вместе с <xref:System.Speech.Recognition.Choices> и <xref:System.Speech.Recognition.GrammarBuilder> объекты) используются для определения семантику, который может быть проанализирован на распознавание.</span><span class="sxs-lookup"><span data-stu-id="b771b-128"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="b771b-129">Проанализированный семантику определяет какой цвет был запрошен и ли обычном или фоновом режиме будет изменено.</span><span class="sxs-lookup"><span data-stu-id="b771b-129">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(new SemanticResultValue(introGB, String.Format("Command: {0}", introString)));  
  }    
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
        (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                       cmdIntro,  
                       new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361587(v%3doffice.14)"><span data-ttu-id="b771b-130">С помощью SemanticResultKey для извлечения SemanticResultValue</span><span class="sxs-lookup"><span data-stu-id="b771b-130">Using a SemanticResultKey to Extract a SemanticResultValue</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b771b-131">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="b771b-131">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b771b-132">`SemanticResultValue` Конструкторы поддерживает указание <xref:System.Object> экземпляр с базовым типом данных `bool`, `int`, `float`, или `string`.</span><span class="sxs-lookup"><span data-stu-id="b771b-132">The `SemanticResultValue` constructors support specifying an <xref:System.Object> instance with an underlying data type of `bool`, `int`, `float`, or `string`.</span></span>  
  
 <span data-ttu-id="b771b-133">Можно создать конструктор `SemanticResultValue` экземпляра в любом из двух случаев:</span><span class="sxs-lookup"><span data-stu-id="b771b-133">A constructor can create a `SemanticResultValue` instance in either of two circumstances:</span></span>  
  
-   <span data-ttu-id="b771b-134">`SemanticResultValue` Экземпляр должен быть явно связан с элемент грамматики, при использовании <xref:System.Speech.Recognition.GrammarBuilder> для создания <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="b771b-134">The `SemanticResultValue` instance must be explicitly associated with a grammar element when using a <xref:System.Speech.Recognition.GrammarBuilder> to construct a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
-   <span data-ttu-id="b771b-135">`SemanticResultValue` Уже связан с фразой значение строки или <xref:System.Speech.Recognition.GrammarBuilder> объекта.</span><span class="sxs-lookup"><span data-stu-id="b771b-135">The `SemanticResultValue` is already associated with a string value phrase or a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b771b-136">Значение, управляемое объектом <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="b771b-136">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="b771b-137">Должен иметь тип <see langword="bool" />, <see langword="int" />, <see langword="float" /> или <see langword="string" />.</span><span class="sxs-lookup"><span data-stu-id="b771b-137">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="b771b-138">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SemanticResultValue" /> и указывает семантическое значение.</span><span class="sxs-lookup"><span data-stu-id="b771b-138">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and specifies a semantic value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b771b-139">Объект `SemanticResultValue` возвращает этот конструктор не связан с любым элементом конкретной грамматики.</span><span class="sxs-lookup"><span data-stu-id="b771b-139">A `SemanticResultValue` returned by this constructor is not associated with any particular grammar element.</span></span> <span data-ttu-id="b771b-140">Связи необходимы явные с помощью экземпляра `SemanticResultValue` в сочетании с <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="b771b-140">The association must be made explicit by using the instance of `SemanticResultValue` in conjunction with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="b771b-141">Например, в фрагменте кода ниже, если <xref:System.Speech.Recognition.Grammar> создан с помощью этого <xref:System.Speech.Recognition.GrammarBuilder> экземпляр распознает слово «фон», значение `true` задается в семантике распознанной фразы.</span><span class="sxs-lookup"><span data-stu-id="b771b-141">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
```csharp  
GrammarBuilder backgroundGB=new GrammarBuilder("background");  
backgroundGB.Append(new SemanticResultValue(true));  
```  
  
   
  
## Examples  
 <span data-ttu-id="b771b-142">В следующем примере возвращается <xref:System.Speech.Recognition.Grammar> , распознает команду «Set/изменение/Alter переднего плана и фона...</span><span class="sxs-lookup"><span data-stu-id="b771b-142">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="b771b-143">[Список цветов]».</span><span class="sxs-lookup"><span data-stu-id="b771b-143">[color list]".</span></span> <span data-ttu-id="b771b-144"><xref:System.Speech.Recognition.SemanticResultValue> и <xref:System.Speech.Recognition.SemanticResultKey> экземпляры (вместе с <xref:System.Speech.Recognition.Choices> и <xref:System.Speech.Recognition.GrammarBuilder> объекты) используются для определения семантику, который может быть проанализирован на распознавание.</span><span class="sxs-lookup"><span data-stu-id="b771b-144"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="b771b-145">Проанализированный семантику определяет какой цвет был запрошен и ли обычном или фоновом режиме будет изменено.</span><span class="sxs-lookup"><span data-stu-id="b771b-145">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
                 (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
        cmdIntro,   
        new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (System.Speech.Recognition.GrammarBuilder builder, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Speech::Recognition::GrammarBuilder ^ builder, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : System.Speech.Recognition.GrammarBuilder * obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue (builder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="b771b-146">Компонент грамматики, используемый при распознавании.</span><span class="sxs-lookup"><span data-stu-id="b771b-146">A grammar component to be used in recognition.</span></span></param>
        <param name="value"><span data-ttu-id="b771b-147">Значение, управляемое объектом <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="b771b-147">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="b771b-148">Должен иметь тип <see langword="bool" />, <see langword="int" />, <see langword="float" /> или <see langword="string" />.</span><span class="sxs-lookup"><span data-stu-id="b771b-148">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="b771b-149">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SemanticResultValue" /> и связывает семантическое значение с объектом <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="b771b-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b771b-150">Если элемент грамматики, указанный параметром <xref:System.Speech.Recognition.GrammarBuilder> используется в логике распознавания, `value` устанавливается в семантике распознанных выходных данных.</span><span class="sxs-lookup"><span data-stu-id="b771b-150">If the grammar element specified by <xref:System.Speech.Recognition.GrammarBuilder> is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="b771b-151">В фрагменте кода ниже, если логики распознавания создан с параметром <xref:System.Speech.Recognition.GrammarBuilder> экземпляра (`myGb`) использует <xref:System.Speech.Recognition.Choices> объекта (`myChoice`) для идентификации входных данных, значение `true` добавляется распознанных семантику.</span><span class="sxs-lookup"><span data-stu-id="b771b-151">In the code fragment below, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the <xref:System.Speech.Recognition.Choices> object (`myChoice`) to identify input, the value `true` is added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue(myChoice, true);  
```  
  
 <span data-ttu-id="b771b-152">Как <xref:System.Speech.Recognition.GrammarBuilder> поддерживает неявное преобразование для <xref:System.Speech.Recognition.Choices>, `SemanticResultValue`, и <xref:System.Speech.Recognition.SemanticResultKey>, этот конструктор можно использовать также для этих объектов.</span><span class="sxs-lookup"><span data-stu-id="b771b-152">As <xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversion for <xref:System.Speech.Recognition.Choices>,  `SemanticResultValue`, and <xref:System.Speech.Recognition.SemanticResultKey>, this constructor can use those objects as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b771b-153">В следующем примере возвращается <xref:System.Speech.Recognition.Grammar> , распознает команду «Set/изменение/Alter переднего плана и фона...</span><span class="sxs-lookup"><span data-stu-id="b771b-153">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="b771b-154">[Список цветов]».</span><span class="sxs-lookup"><span data-stu-id="b771b-154">[color list]".</span></span> <span data-ttu-id="b771b-155"><xref:System.Speech.Recognition.SemanticResultValue> и <xref:System.Speech.Recognition.SemanticResultKey> экземпляры (вместе с <xref:System.Speech.Recognition.Choices> и <xref:System.Speech.Recognition.GrammarBuilder> объекты) используются для определения семантику, который может быть проанализирован на распознавание.</span><span class="sxs-lookup"><span data-stu-id="b771b-155"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="b771b-156">Проанализированный семантику определяет какой цвет был запрошен и ли обычном или фоновом режиме будет изменено.</span><span class="sxs-lookup"><span data-stu-id="b771b-156">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
              (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
    }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                      cmdIntro,  
                      new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (string phrase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::String ^ phrase, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : string * obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue (phrase, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="b771b-157">Фраза, используемый при распознавании.</span><span class="sxs-lookup"><span data-stu-id="b771b-157">A phrase to be used in recognition.</span></span></param>
        <param name="value"><span data-ttu-id="b771b-158">Значение, управляемое объектом <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="b771b-158">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="b771b-159">Должен иметь тип <see langword="bool" />, <see langword="int" />, <see langword="float" /> или <see langword="string" />.</span><span class="sxs-lookup"><span data-stu-id="b771b-159">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="b771b-160">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SemanticResultValue" /> и связывает семантическое значение с объектом <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="b771b-160">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.String" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b771b-161">Если строка, заданная свойством `phrase` используется в логике распознавания, `value` устанавливается в семантике распознанных выходных данных.</span><span class="sxs-lookup"><span data-stu-id="b771b-161">If the string specified by `phrase` is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="b771b-162">В следующем фрагменте кода, если создан логики распознавания <xref:System.Speech.Recognition.GrammarBuilder> экземпляра (`myGb`) использует строку «my ипотеки» для идентификации входных данных, значение `true` добавляется распознанных семантику.</span><span class="sxs-lookup"><span data-stu-id="b771b-162">In the following code fragment, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the string "my mortgage" to identify input, the value `true` will be added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue("my mortgage", true);  
```  
  
   
  
## Examples  
 <span data-ttu-id="b771b-163">В следующем примере возвращается <xref:System.Speech.Recognition.Grammar> , распознает команду «Set/изменение/Alter переднего плана и фона...</span><span class="sxs-lookup"><span data-stu-id="b771b-163">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="b771b-164">[Список цветов]».</span><span class="sxs-lookup"><span data-stu-id="b771b-164">[color list]".</span></span> <span data-ttu-id="b771b-165"><xref:System.Speech.Recognition.SemanticResultValue> и <xref:System.Speech.Recognition.SemanticResultKey> экземпляры (вместе с <xref:System.Speech.Recognition.Choices> и <xref:System.Speech.Recognition.GrammarBuilder> объекты) используются для определения семантику, который может быть проанализирован на распознавание.</span><span class="sxs-lookup"><span data-stu-id="b771b-165"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="b771b-166">Проанализированный семантику определяет какой цвет был запрошен и ли обычном или фоновом режиме будет изменено.</span><span class="sxs-lookup"><span data-stu-id="b771b-166">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }  
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
          (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(cmdIntro,  
                         new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="semanticResultValue.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b771b-167">Возвращает экземпляр <see cref="T:System.Speech.Recognition.GrammarBuilder" />, созданный из текущего <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="b771b-167">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span></span></summary>
        <returns><span data-ttu-id="b771b-168">Возвращает экземпляр <see cref="T:System.Speech.Recognition.GrammarBuilder" />, созданный из текущего <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="b771b-168">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b771b-169">Использование <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> равнозначно использованию <xref:System.Speech.Recognition.GrammarBuilder> конструктор, принимающий <xref:System.Speech.Recognition.SemanticResultValue> в качестве аргумента (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span><span class="sxs-lookup"><span data-stu-id="b771b-169">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor that takes a <xref:System.Speech.Recognition.SemanticResultValue> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b771b-170">В следующем примере создается <xref:System.Speech.Recognition.Grammar> объектов, которые поддерживают команды, чтобы изменить цвет фона.</span><span class="sxs-lookup"><span data-stu-id="b771b-170">The following example creates <xref:System.Speech.Recognition.Grammar> objects that support commands to change the background color.</span></span>  
  
 <span data-ttu-id="b771b-171">Объект <xref:System.Speech.Recognition.Choices> объекта (`colorChoice`) со списком параметров для цвета фона заполняется с помощью <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> метод с <xref:System.Speech.Recognition.GrammarBuilder> экземпляры, которые извлекаются из <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> метод `SemanticResultValue` объекты, созданные из цветных строк.</span><span class="sxs-lookup"><span data-stu-id="b771b-171">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances that are obtained from the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the `SemanticResultValue` objects created from color strings.</span></span>  
  
 <span data-ttu-id="b771b-172">Объект <xref:System.Speech.Recognition.GrammarBuilder> затем получается путем вызова <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> на <xref:System.Speech.Recognition.SemanticResultKey> экземпляр, который будет использоваться для ключа семантической вариантов в `colorChoice` экземпляра.</span><span class="sxs-lookup"><span data-stu-id="b771b-172">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in the `colorChoice` instance.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RBG.  
  // Choices constructors do not take a SemanticResultValue parameter, so  
  // cast SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    SemanticResultValue colorValue =   
        new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
    colorChoice.Add(colorValue.ToGrammarBuilder());  
  }  
  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with an introductory phrase and the  
  // color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the final grammar, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] { makeBackgroundBuilder, configureBackgroundBuilder }));  
  grammar.Name = "Set Background Color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>