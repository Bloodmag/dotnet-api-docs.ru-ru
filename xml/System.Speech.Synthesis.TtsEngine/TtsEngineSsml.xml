<Type Name="TtsEngineSsml" FullName="System.Speech.Synthesis.TtsEngine.TtsEngineSsml">
  <TypeSignature Language="C#" Value="public abstract class TtsEngineSsml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TtsEngineSsml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TtsEngineSsml" />
  <TypeSignature Language="C++ CLI" Value="public ref class TtsEngineSsml abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7b5a3-101">Абстрактный базовый класс, который должен быть реализован всеми механизмами синтеза речи из текста.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-101">Abstract base class to be implemented by all text to speech synthesis engines.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b5a3-102">Чтобы создать обработчик пользовательского преобразования текста в речь, приложение всегда должно реализовать класс, производный от абстрактного базового класса <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-102">To construct a custom text to speech engine, an application must always implement a class derived from the abstract base class <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>.</span></span>  
  
 <span data-ttu-id="7b5a3-103">Неправильно зарегистрирован реализация <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> может быть использован как синтезатора речи, <xref:System.Speech.Synthesis> приложений на основе пространства имен.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-103">A properly registered implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> can then be used as a synthesizer voice by <xref:System.Speech.Synthesis> name space based applications.</span></span>  
  
 <span data-ttu-id="7b5a3-104">Наследование от объектов <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> необходимо переопределить следующие члены: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> и <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-104">Objects inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must override the following members: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.</span></span>  
  
 <span data-ttu-id="7b5a3-105">Самым важным элементом этого <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> класс для реализации <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-105">The most important member of the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> class to be implemented is the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method.</span></span>  
  
 <span data-ttu-id="7b5a3-106"><xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> Метод вызывается средством синтаксического анализа текста инфраструктур получения:</span><span class="sxs-lookup"><span data-stu-id="7b5a3-106">The <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method is called by the infrastructures text parser receiving:</span></span>  
  
1.  <span data-ttu-id="7b5a3-107">Ссылку на <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> интерфейс, который предоставляет доступ к службам системы, такие как даже очереди и записи звука выходных данных.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-107">A reference to the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface, which provides access to system services such as even queuing and writing audio output.</span></span>  
  
2.  <span data-ttu-id="7b5a3-108">Массив <xref:System.Speech.Synthesis.TtsEngine.TextFragment> экземпляра, полученных из входных данных языка разметки синтеза речи (SSML).</span><span class="sxs-lookup"><span data-stu-id="7b5a3-108">An array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance produced from Speech Synthesis Markup Language (SSML) input.</span></span> <span data-ttu-id="7b5a3-109">Помимо текста отображаются как речи синтаксический анализ SSML хранит сведения о запрошенных атрибутов речи в <xref:System.Speech.Synthesis.TtsEngine.FragmentState> экземпляр, связанный с каждой принимаемые <xref:System.Speech.Synthesis.TtsEngine.TextFragment> объекта.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-109">In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instance associated with each incoming <xref:System.Speech.Synthesis.TtsEngine.TextFragment> object.</span></span>  
  
 <span data-ttu-id="7b5a3-110">Речевого синтезатора приложения при необходимости можно выполнять запросы для указанным выходным форматом, реализовав <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> вызываемый платформой при попытке предоставить правильные выходные звуковые данные.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-110">A speech synthesizer application can optionally make requests for a specified output format by implementing <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> to be called by the platform when it tries to provide the correct audio output.</span></span>  
  
 <span data-ttu-id="7b5a3-111">Разработчик может также поддерживают управление внешние определения произношение или словари, с их реализации <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> и <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-111">An implementer can also provide support for managing external definitions of pronunciations, or lexicons, by their implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TtsEngineSsml (string registryKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string registryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (registryKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TtsEngineSsml(System::String ^ registryKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="registryKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="registryKey"><span data-ttu-id="7b5a3-112">Полное имя раздела реестра для токена голоса, связанного с реализацией <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-112">Full name of the registry key for the Voice Token associated with the <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> implementation.</span></span> <span data-ttu-id="7b5a3-113">обработчик.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-113">engine.</span></span></param>
        <summary><span data-ttu-id="7b5a3-114">Создает новый экземпляр <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> на основе соответствующего раздела реестра токена голоса.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-114">Constructs a new instance of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> based on an appropriate Voice Token registry key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b5a3-115">Вызывает этот конструктор обычно создаются путем <xref:System.Speech.Synthesis> приложений, выбрав синтезатора речи для использования экземпляром служб на основе <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-115">Calls to this constructor are typically generated by <xref:System.Speech.Synthesis> based applications selecting a synthesizer voice to be used by an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span>  
  
 <span data-ttu-id="7b5a3-116">Объект <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> должен быть регистром в HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-116">A <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must be register under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public abstract void AddLexicon (Uri uri, string mediaType, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLexicon(class System.Uri uri, string mediaType, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddLexicon(Uri ^ uri, System::String ^ mediaType, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="7b5a3-117">Допустимый экземпляр <see langword="System.Uri" />, указывающий местоположение информации о словарях.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-117">A valid instance of <see langword="System.Uri" /> indicating the location of the lexicon information.</span></span></param>
        <param name="mediaType"><span data-ttu-id="7b5a3-118">Строка, содержащая тип мультимедиа лексикона.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-118">A string containing the media type of the lexicon.</span></span> <span data-ttu-id="7b5a3-119">Типы мультимедиа не учитывают регистр.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-119">Media types are case insensitive.</span></span></param>
        <param name="site"><span data-ttu-id="7b5a3-120">Ссылка на интерфейс <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />, используемый для взаимодействия с инфраструктурой платформы.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-120">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface used to interact with the platform infrastructure.</span></span></param>
        <summary><span data-ttu-id="7b5a3-121">Добавляет лексикон к объекту <see langword="Synthesizer" /><see langword="Voice" />, реализованному текущим экземпляром <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-121">Adds a lexicon to the <see langword="Synthesizer" /><see langword="Voice" /> implemented by the current <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b5a3-122">Лексики произношение — это совокупность слов или фраз, а также их произношения, заданные с помощью соответствующих произношение буквой.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-122">A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</span></span>  
  
 <span data-ttu-id="7b5a3-123">Обычно этот метод вызывается инфраструктурой платформы в ответ на <xref:System.Speech.Synthesis> зависимости приложения, вызывающие <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> и с помощью синтезатора речи, реализуемый текущего <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-123">This method is typically called by the platform infrastructure in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span></span>  
  
 <span data-ttu-id="7b5a3-124">Значение `mediaType` — обычно спецификация MIME, как в спецификации SSML используется MIME для спецификаций носителя.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-124">The value of `mediaType` is typically a MIME specification, as the SSML specification uses MIME for media specifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b5a3-125">Реализация <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> использует <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> переданный интерфейс для загрузки лексики из ресурса.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-125">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> uses the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface passed in to load a lexicon from a resource.</span></span> <span data-ttu-id="7b5a3-126">Затем сохраняет `System.IO.Stream` для лексики в `System.Collections.Generic.Dictionary` экземпляра, индексированный по лексики URI.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-126">It then stores a `System.IO.Stream` to the lexicon in a `System.Collections.Generic.Dictionary` instance, indexed by the lexicon URI.</span></span>  
  
```  
public static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  
  
 public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  
    Stream stream = site.LoadResource(uri, mediaType);  
    _aLexicons.Add(uri, stream);  
}  
  
 public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  
     Stream stream;  
     if (_aLexicons.TryGetValue(uri, out stream)) {  
         stream.Close();  
         _aLexicons.Remove(uri);  
     }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7b5a3-127">Отвечает реализации полностью знание и обрабатывать лексики, хранящиеся в <paramref name="uri" />.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-127">It is the responsibility of the implementation to be fully familiar with and be able to process the lexicon stored at <paramref name="uri" />.</span></span> <span data-ttu-id="7b5a3-128">Реализация необходимо также отслеживать и управлять временем жизни всех словари, которые он добавляет.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-128">The implementation must also keep track and manage the lifetimes of all lexicons it adds.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetOutputFormat">
      <MemberSignature Language="C#" Value="public abstract IntPtr GetOutputFormat (System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetOutputFormat(valuetype System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, native int targetWaveFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IntPtr GetOutputFormat(System::Speech::Synthesis::TtsEngine::SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speakOutputFormat" Type="System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" />
        <Parameter Name="targetWaveFormat" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="speakOutputFormat"><span data-ttu-id="7b5a3-129">Допустимый член перечисления <see cref="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" />, указывающий тип запрошенного формата аудиовывода.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-129">Valid member of the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" /> enumeration indicating the type of requested audio output format.</span></span></param>
        <param name="targetWaveFormat"><span data-ttu-id="7b5a3-130">Указатель на структуру <see langword="struct" />, содержащую сведения о типе звукового формата, запрошенном аргументом <c>speakOutputFormat</c>.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-130">A pointer to a <see langword="struct" /> containing detail setting for the audio format type requested by the <c>speakOutputFormat</c> argument.</span></span></param>
        <summary><span data-ttu-id="7b5a3-131">Возвращает максимально точного соответствующие звуковые выходные данные, поддерживаемые данным ответом механизма синтеза на запрос к механизму синтеза на поддержку определенного формата вывода.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-131">Returns the best matching audio output supported by a given synthesize engine response to a request to the synthesizer engine for the support of a particular output format.</span></span></summary>
        <returns><span data-ttu-id="7b5a3-132">Возвращает допустимый экземпляр <see langword="IntPtr" /> при ссылке на <see langword="struct" />, содержащий подробные сведения о формате вывода.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-132">Returns a valid <see langword="IntPtr" /> instance referring to a <see langword="struct" /> containing detailed information about the output format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b5a3-133">Структура, используемая как `targetWaveFormat` и вернул метод должен быть совместим с `WAVEFORMATEX` доступен в разделе SAPI, и возвращаемое значение должны быть оборудованы с помощью `CoTaskMemAlloc`.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-133">The structure used as `targetWaveFormat` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI, and the returned value should be allocated using `CoTaskMemAlloc`.</span></span>  
  
 <span data-ttu-id="7b5a3-134">`struct` Необходимо предоставить эквивалентно функциональные возможности:</span><span class="sxs-lookup"><span data-stu-id="7b5a3-134">The `struct` must provide functionality equivalent to:</span></span>  
  
```  
internal struct WaveFormat  
{  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="7b5a3-135">Реализация образца ниже проверяет выбранных входных параметров, их использование, если они находятся в пределах, в противном случае — с использованием значений по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-135">The sample implementation below validates selected inputs, using them if they are within tolerances, otherwise using default values.</span></span>  
  
```  
public IntPtr GetOutputFormat(SpeakOutputFormat format, IntPtr targetWaveFormat) {  
    WaveFormat waveFormat = new WaveFormat();  
    WaveFormat rq=new WaveFormat();  
    Marshal.PtrToStructure(targetWaveFormat,rq);  
  
    waveFormat.AvgBytesPerSec = AvgBytesPerSec Min < rq.AvgBytesPerSec && rq.AvgBytesPerSec < AvgBytesPerSecMax? rq.AvgBytesPerSec : 3200;  
    waveFormat.BitsPerSample = BitsPerSampleMin < rq.AvgBytesPerSec && rq.BitsPerSample < BitsPerSampleMax ? rq.AvgBytesPerSec : 3200; 16;  
    waveFormat.BlockAlign = 2;  
    waveFormat.Channels = 1;  
    waveFormat.FormatTag = 1;  
    waveFormat.SamplesPerSec = 16000;  
    waveFormat.Size = 0;  
  
    IntPtr wfx = Marshal.AllocCoTaskMem(Marshal.SizeOf(waveFormat));  
    Marshal.StructureToPtr(waveFormat, wfx, false);  
  
    //Console.WriteLine ("GetOutputFormat called");  
    return wfx;  
}  
internal struct WaveFormat {  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7b5a3-136">Объект, наследуемый от <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> следует изучить запрошенного выходного формата в соответствии с <paramref name="targetWaveFormat" /> и возвращает ближайший формат, который он поддерживает.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-136">Object inheriting from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> should examine the requested output format as specified by <paramref name="targetWaveFormat" /> and return the closest format that it supports.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public abstract void RemoveLexicon (Uri uri, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveLexicon(class System.Uri uri, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveLexicon(Uri ^ uri, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="7b5a3-137">Допустимый экземпляр <see langword="System.Uri" />, указывающий местоположение информации о словарях.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-137">A valid instance of <see langword="System.Uri" /> indicating the location of the lexicon information.</span></span></param>
        <param name="site"><span data-ttu-id="7b5a3-138">Ссылка на интерфейс <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> передаваемые в инфраструктуре платформы, чтобы разрешить доступ к ресурсам инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-138">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</span></span></param>
        <summary><span data-ttu-id="7b5a3-139">Удаляет лексикон, загруженный в данный момент объектом <see langword="Synthesizer" /><see langword="Voice" />, который реализуется текущим экземпляром <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-139">Removes a lexicon currently loaded by the <see langword="Synthesizer" /><see langword="Voice" /> implemented by the current <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b5a3-140">Лексики произношение — это совокупность слов или фраз, а также их произношения, заданные с помощью соответствующих произношение буквой.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-140">A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</span></span>  
  
 <span data-ttu-id="7b5a3-141">Этот метод обычно вызывается в ответ на <xref:System.Speech.Synthesis> зависимости приложения, вызывающие <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> и с помощью синтезатора речи, реализуемый текущего <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-141">This method is typically called in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b5a3-142">Реализация <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> использует лексики URI для запроса к экземпляру `System.Collections.Generic.Dictionary` для `System.IO.Stream`, закрывает поток и удаляет uri, ссылающийся на правила.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-142">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> uses the lexicon URI to query an instance `System.Collections.Generic.Dictionary` for the `System.IO.Stream`, closes the stream and removes the uri referring to the lexicon.</span></span>  
  
```  
public static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  
  
 public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  
    Stream stream = site.LoadResource(uri, mediaType);  
    _aLexicons.Add(uri, stream);  
}  
  
 public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  
     Stream stream;  
     if (_aLexicons.TryGetValue(uri, out stream)) {  
         stream.Close();  
         _aLexicons.Remove(uri);  
     }  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7b5a3-143">Отвечает реализации полностью знание и обрабатывать лексики, хранящиеся в <paramref name="uri" />.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-143">It is the responsibility of the implementation to be fully familiar with and be able to process the lexicon stored at <paramref name="uri" />.</span></span> <span data-ttu-id="7b5a3-144">Реализация необходимо также отслеживать и управлять временем жизни всех словари, которые она удаляет.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-144">The implementation must also keep track and manage the lifetimes of all lexicons it removes.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public abstract void Speak (System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, IntPtr waveHeader, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak(class System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, native int waveHeader, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Speak (fragment As TextFragment(), waveHeader As IntPtr, site As ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Speak(cli::array &lt;System::Speech::Synthesis::TtsEngine::TextFragment ^&gt; ^ fragment, IntPtr waveHeader, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="System.Speech.Synthesis.TtsEngine.TextFragment[]" />
        <Parameter Name="waveHeader" Type="System.IntPtr" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="fragment"><span data-ttu-id="7b5a3-145">Массив экземпляров <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />, содержащих текст для преобразования в речь.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-145">An array of <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> instances containing the text to be rendered into speech.</span></span></param>
        <param name="waveHeader"><span data-ttu-id="7b5a3-146"><see langword="IntPtr" />, указывающий на структуру, содержащую формат аудиовыхода.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-146">An <see langword="IntPtr" /> pointing to a structure containing audio output format.</span></span></param>
        <param name="site"><span data-ttu-id="7b5a3-147">Ссылка на интерфейс <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> передаваемые в инфраструктуре платформы, чтобы разрешить доступ к ресурсам инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-147">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</span></span></param>
        <summary><span data-ttu-id="7b5a3-148">Отрисовывает указанный массив <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> в указанном формате вывода.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-148">Renders specified <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> array in the specified output format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b5a3-149">Структура, используемая как `waveHeader` и вернул метод должен быть совместим с `WAVEFORMATEX` доступен в разделе SAPI.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-149">The structure used as `waveHeader` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI.</span></span>  
  
 <span data-ttu-id="7b5a3-150">`struct` Необходимо предоставить эквивалентно функциональные возможности:</span><span class="sxs-lookup"><span data-stu-id="7b5a3-150">The `struct` must provide functionality equivalent to:</span></span>  
  
```  
internal struct WaveFormat  
{  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="7b5a3-151">Ниже приведен пример часть реализации синтеза речи пользовательских наследование от <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>и с помощью использование <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, и <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="7b5a3-151">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="7b5a3-152">Реализация <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="7b5a3-152">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="7b5a3-153">Получает массив <xref:System.Speech.Synthesis.TtsEngine.TextFragment> экземпляров и создает новый массив <xref:System.Speech.Synthesis.TtsEngine.TextFragment> экземпляры должны быть переданы `Speak` метода для базового механизма синтеза.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-153">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="7b5a3-154">Если <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> , найдено значение перечисления из <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> свойство <xref:System.Speech.Synthesis.TtsEngine.FragmentState> возвращенных <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> каждого экземпляра <xref:System.Speech.Synthesis.TtsEngine.TextFragment> экземпляр <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, реализация</span><span class="sxs-lookup"><span data-stu-id="7b5a3-154">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="7b5a3-155">Преобразует Americanism для Britishisms в Произносимый текст.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-155">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="7b5a3-156">Если <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> свойство <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> интерфейсов, предоставляемых для поддержки реализации <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> тип события <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> позволяет создать событие для диска индикатор синтезатора создается экземпляр.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-156">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="7b5a3-157">Затем вызывается механизм визуализации речи с измененной <xref:System.Speech.Synthesis.TtsEngine.TextFragment> массива.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-157">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
    _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7b5a3-158">Реализует синтезаторов речи пользовательских с использованием <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> и <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> работают как фильтры или посредников между приложениями синтезатора создано с помощью инфраструктуры платформы по членам <see cref="N:System.Speech.Synthesis" /> пространства имен и базовой системы синтеза речи.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-158">Custom speech synthesizer implements using <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> and <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> work as filters or intermediaries between synthesizer applications constructed using the platform infrastructure through the members of the <see cref="N:System.Speech.Synthesis" /> namespace and underlying system speech synthesis engines.</span></span>  
  
 <span data-ttu-id="7b5a3-159">Объект <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> реализации:</span><span class="sxs-lookup"><span data-stu-id="7b5a3-159">A <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> implementation:</span></span>  
  
1.  <span data-ttu-id="7b5a3-160">Перехватывает или изменять аспекты входящего <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> объектов</span><span class="sxs-lookup"><span data-stu-id="7b5a3-160">Traps or modify aspects of the incoming <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> objects</span></span>  
  
2.  <span data-ttu-id="7b5a3-161">Создает все необходимые события с помощью ссылки сайта <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> экземпляра</span><span class="sxs-lookup"><span data-stu-id="7b5a3-161">Generates any necessary events using the site reference to a <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> instance</span></span>  
  
3.  <span data-ttu-id="7b5a3-162">Создает фактические синтезированную речь.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-162">Generates the actual synthesized speech.</span></span>  
  
 <span data-ttu-id="7b5a3-163">Создание речи чаще всего выполнено путем вызова <c>Speak</c> на речи, Подготовка к просмотру ядер, предоставляемые операционной системой.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-163">Generation of speech is most typically done by calling <c>Speak</c> on one of the speech rendering engines provided by the operating system.</span></span>  
  
 <span data-ttu-id="7b5a3-164">Если один из доступных речи подготовки отчетов не используется, объект, наследуемый от <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> необходимо создать собственный модуль подготовки отчетов речи.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-164">If one of the available speech rendering engines is not used, a object inheriting from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> must create its own speech rendering engine.</span></span>  
  
 <span data-ttu-id="7b5a3-165">Доступ к <c>Speak</c> метод полученного с помощью реестра и отражение.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-165">Access to the <c>Speak</c> method on obtained using the registry and reflection.</span></span> <span data-ttu-id="7b5a3-166">.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-166">.</span></span>  
  
 <span data-ttu-id="7b5a3-167">При наследовании от <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />, необходимо переопределить следующие члены: <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />, и <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />.</span><span class="sxs-lookup"><span data-stu-id="7b5a3-167">When you inherit from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />, you must override the following members: <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />, and <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>