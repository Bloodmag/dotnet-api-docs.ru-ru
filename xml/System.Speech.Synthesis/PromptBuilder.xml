<Type Name="PromptBuilder" FullName="System.Speech.Synthesis.PromptBuilder">
  <TypeSignature Language="C#" Value="public class PromptBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PromptBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.PromptBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class PromptBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class PromptBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5f9fb-101">Создает пустой объект <see cref="T:System.Speech.Synthesis.Prompt" /> и предоставляет методы для добавления содержимого, выбора голоса, управления атрибутами голоса и управления произношением слов.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-101">Creates an empty <see cref="T:System.Speech.Synthesis.Prompt" /> object and provides methods for adding content, selecting voices, controlling voice attributes, and controlling the pronunciation of spoken words.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-102">С <xref:System.Speech.Synthesis.PromptBuilder>, можно добавить разнообразные типы содержимого для строки, включая обычный текст, разметку SSML (такой как строка или файл) записи звука или даже другой <xref:System.Speech.Synthesis.PromptBuilder> объекта.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-102">With <xref:System.Speech.Synthesis.PromptBuilder>, you can add a variety of content types to a prompt, including plain text, SSML markup (as a string or a file), recorded audio, or even another <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 <span data-ttu-id="5f9fb-103">Для добавления текста к <xref:System.Speech.Synthesis.PromptBuilder> объекта и при необходимости управления атрибутами голоса, такие как выделения, скорость и громкость, используйте один из <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-103">To append text to a <xref:System.Speech.Synthesis.PromptBuilder> object and optionally control voice attributes such as emphasis, rate, and volume, use one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> methods.</span></span>  <span data-ttu-id="5f9fb-104">Также можно управлять атрибутами голоса как группа с <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> и <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-104">You can also control voice attributes as a group with the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> and <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> methods.</span></span>  
  
 <span data-ttu-id="5f9fb-105">Можно добавить текст, а также управлять что слышит или как произносится с помощью <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>, или <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-105">You can append text and control what is spoken or how it is pronounced using the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>,  <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> methods.</span></span>  
  
 <span data-ttu-id="5f9fb-106">Изменение выбранного голоса в командной строке с помощью одного из перегруженных <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> требуется методы, именование конкретного голоса для использования или указав голосовой характеристиками, такими как возраст и пол.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-106">Change the currently selected speaking voice in the prompt using one of the overloaded <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods, naming a specific voice to use or specifying required voice characteristics, such as age and gender.</span></span>  
  
 <span data-ttu-id="5f9fb-107">Для формирования речи из <xref:System.Speech.Synthesis.PromptBuilder> объекта, можно передать в качестве аргумента для <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-107">To generate speech from a <xref:System.Speech.Synthesis.PromptBuilder> object, you can pass it as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
 <span data-ttu-id="5f9fb-108">Дополнительные сведения см. в разделе [построение сложных Prompt](http://msdn.microsoft.com/library/552cb356-7344-473e-b0f2-7a9983f8c1a4).</span><span class="sxs-lookup"><span data-stu-id="5f9fb-108">For more information, see [Constructing a Complex Prompt](http://msdn.microsoft.com/library/552cb356-7344-473e-b0f2-7a9983f8c1a4).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f9fb-109">Создает новый экземпляр класса <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-109">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PromptBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PromptBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f9fb-110">Создает новый экземпляр класса <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-110">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5f9fb-111">В следующем примере создается новый <xref:System.Speech.Synthesis.PromptBuilder> экземпляра и добавляет к нему строку текста.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-111">The following example creates a new <xref:System.Speech.Synthesis.PromptBuilder> instance and adds a text string to it.</span></span>  
  
```csharp  
using System.Speech.Synthesis;  
  
public void MySimpleText ()  
{  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendText("Hello world!");  
}  
```  
  
 <span data-ttu-id="5f9fb-112">В следующем примере показана эквивалент в речи синтеза Markup Language (SSML), (`xml:lang` является обязательным атрибутом элемента `speak` элемент):</span><span class="sxs-lookup"><span data-stu-id="5f9fb-112">The following markup shows the equivalent in Speech Synthesis Markup Language (SSML), (`xml:lang` is a required attribute of the `speak` element):</span></span>  
  
```xml  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US">  
  Hello world!  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PromptBuilder (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.#ctor(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PromptBuilder(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="5f9fb-113">Предоставляет сведения об определенном языке и региональных параметрах, например языке, названии языка и региональных параметров, системе письма, используемом календаре, формате дат и сортировке строк.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-113">Provides information about a specific culture, such as its language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="5f9fb-114">Создает экземпляр класса <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и задает язык и региональные параметры.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-114">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class and specifies a culture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-115">Этот конструктор задает значения для <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-115">This constructor sets the value for the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="5f9fb-116"><xref:System.Speech.Synthesis.SpeechSynthesizer> Будет пытаться выберите установленных голосовых, поддерживающий язык, заданный параметром `culture` параметр для обработки в строке.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-116">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object will attempt to select an installed voice that supports the language specified by the `culture` parameter to process the prompt.</span></span> <span data-ttu-id="5f9fb-117">Если обнаруживается голоса с заданной культурой, он будет использоваться.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-117">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="5f9fb-118">Если не удается найти голоса с заданной культурой, будет использоваться по умолчанию голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-118">If a voice with the specified culture cannot be found, the default voice will be used.</span></span>  
  
 <span data-ttu-id="5f9fb-119">Чтобы правильно произношения слов на языке, указанном в `culture` параметр синтеза (преобразования текста в речь или TTS) речи, поддерживающий язык должен быть установлен.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-119">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="5f9fb-120">Установленное ядро для поиска TTS называется голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-120">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="5f9fb-121">Чтобы получить сведения о том, какие установлены голоса для определенного языка и региональных параметров, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-121">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="5f9fb-122">Microsoft Windows и System.Speech API все допустимые коды страны язык принимает в качестве значения для `culture`.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-122">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="5f9fb-123">Модули преобразования текста в РЕЧЬ, поставляемых вместе с Windows 7 поддерживают следующие коды страны языка:</span><span class="sxs-lookup"><span data-stu-id="5f9fb-123">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="5f9fb-124">en US.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-124">en-US.</span></span> <span data-ttu-id="5f9fb-125">Английский (США)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-125">English (United States)</span></span>  
  
-   <span data-ttu-id="5f9fb-126">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-126">zh-CN.</span></span> <span data-ttu-id="5f9fb-127">Китайский (КНР)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-127">Chinese (China)</span></span>  
  
-   <span data-ttu-id="5f9fb-128">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-128">zh-TW.</span></span> <span data-ttu-id="5f9fb-129">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-129">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="5f9fb-130">Также допускаются кодов языка двух букв, например «en».</span><span class="sxs-lookup"><span data-stu-id="5f9fb-130">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-131">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> экземпляр и указывает его <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-131">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> instance and specifies its <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>.</span></span>  
  
```csharp  
using System.Speech.Synthesis;  
  
public void MySimpleText ()  
{  
    PromptBuilder builder = new PromptBuilder(new System.Globalization.CultureInfo("en-US"));  
    builder.AppendText("Hello world!");  
}  
```  
  
 <span data-ttu-id="5f9fb-132">В следующем примере показано эквивалентное SSML:</span><span class="sxs-lookup"><span data-stu-id="5f9fb-132">The following markup shows the equivalent SSML:</span></span>  
  
```xml  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US">  
  Hello world!  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendAudio">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f9fb-133">Добавляет указанный звуковой файл в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-133">Appends a specified audio file to a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="5f9fb-134">Полный путь к звуковому файлу.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-134">A fully qualified path to the audio file.</span></span></param>
        <summary><span data-ttu-id="5f9fb-135">Добавляет указанный звуковой файл в <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-135">Appends the specified audio file to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (Uri audioFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(class System.Uri audioFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (audioFile As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(Uri ^ audioFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="audioFile"><span data-ttu-id="5f9fb-136">Код URI звукового файла.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-136">URI for the audio file.</span></span></param>
        <summary><span data-ttu-id="5f9fb-137">Добавляет звуковой файл по указанному универсальному коду ресурса (URI) в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-137">Appends the audio file at the specified URI to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5f9fb-138">В следующем примере инициализируется новый экземпляр <xref:System.Speech.Synthesis.PromptBuilder> класса, а затем добавляет текст в него следуют звуковой файл.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-138">The following example initializes a new instance of the <xref:System.Speech.Synthesis.PromptBuilder> class and then adds text to it, followed by an audio file.</span></span>  
  
```csharp  
using System.Speech.PromptBuilder;  
  
public void SimpleConcatenation()  
{  
    // Add a prompt fragment from a .wav file.  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendText("How are you today?");  
    builder.AppendAudio(new Uri ("http://www.speech.microsoft.com/ding.wav"));  
}  
```  
  
 <span data-ttu-id="5f9fb-139">В следующем примере показано эквивалентное разметку SSML.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-139">The following markup shows the equivalent SSML markup.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis"  
       xmlns:ms="http://www.microsoft.com/speech/synthesis" xml:lang="en">  
  
  How are you today?  
  <audio src="http://www.speech.microsoft.com/ding.wav" />  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (Uri audioFile, string alternateText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(class System.Uri audioFile, string alternateText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (audioFile As Uri, alternateText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(Uri ^ audioFile, System::String ^ alternateText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.Uri" />
        <Parameter Name="alternateText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="audioFile"><span data-ttu-id="5f9fb-140">Код URI звукового файла.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-140">URI for the audio file.</span></span></param>
        <param name="alternateText"><span data-ttu-id="5f9fb-141">Строка, содержащая замещающий текст, представляющий звуковое содержимое.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-141">A string containing alternate text representing the audio.</span></span></param>
        <summary><span data-ttu-id="5f9fb-142">Добавляет указанный звуковой файл и замещающий текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-142">Appends the specified audio file and alternate text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-143">Синтеза речи будет согласовать альтернативный текст, если невозможно воспроизвести звуковой файл.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-143">The speech synthesis engine will speak the alternate text if the audio file cannot be played.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-144">Следующие примеры добавляет звукового файла, <xref:System.Speech.Synthesis.PromptBuilder> экземпляра и задает текст, говорят, если невозможно воспроизвести звуковой файл.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-144">The following examples adds an audio file to a <xref:System.Speech.Synthesis.PromptBuilder> instance and specifies text to speak if the audio file cannot be played.</span></span>  
  
```csharp  
using System.Speech.PromptBuilder;  
  
public void SimpleConcatenation()  
{  
  
    // Concatenate a prompt fragment from a .wav file.  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendAudio(new Uri ("C:\\OnHold.wav"), "Your call will be answered in the order it was received");  
}  
```  
  
 <span data-ttu-id="5f9fb-145">В следующем примере показано эквивалентное разметку SSML.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-145">The following markup shows the equivalent SSML markup.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis"  
       xmlns:ms="http://www.microsoft.com/speech/synthesis" xml:lang="en">  
  
  <audio src="C:\OnHold.wav"> Your call will be answered in the order it was received. </audio>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBookmark">
      <MemberSignature Language="C#" Value="public void AppendBookmark (string bookmarkName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBookmark(string bookmarkName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBookmark (bookmarkName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBookmark(System::String ^ bookmarkName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="5f9fb-146">Строка, содержащая имя добавляемой закладки.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-146">A string containing the name of the appended bookmark.</span></span></param>
        <summary><span data-ttu-id="5f9fb-147">Добавляет закладку для объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-147">Appends a bookmark to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-148">Создает синтеза речи <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> при обнаружении закладку при повторной из строки с помощью любого из <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, или <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-148">A speech synthesis engine will generate a <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event if it encounters a bookmark while speaking a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-149">В следующем примере создается запрос, включающий два закладки и отправляет выходные данные для воспроизведения WAV-файла.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-149">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="5f9fb-150">Обработчик <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> событий записывает имя закладки и его положения в звуковой поток при возникновении события на консоль.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-150">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendBreak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f9fb-151">Вставляет перерыв (паузу) в содержимое объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-151">Inserts a break (pause) in the content of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f9fb-152">Добавляет перерыв в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-152">Appends a break to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-153">Этот метод не указывает продолжительность перерыва.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-153">This method does not specify a duration for the break.</span></span> <span data-ttu-id="5f9fb-154"><xref:System.Speech.Synthesis.SpeechSynthesizer> Определяет значение длительности, на основе лингвистических контекста.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-154">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will determine a duration value based on the linguistic context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-155">Следующий пример создает строку, содержащую два предложения, разделенных разрывом и говорит приглашение звуковое устройство по умолчанию на компьютере.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-155">The following example builds a prompt containing two sentences separated by a break and speaks the prompt to the default audio device on the computer.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45.");  
        builder.AppendBreak();  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:30, and 9:15.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak (System.Speech.Synthesis.PromptBreak strength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak(valuetype System.Speech.Synthesis.PromptBreak strength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak (strength As PromptBreak)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak(System::Speech::Synthesis::PromptBreak strength);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strength" Type="System.Speech.Synthesis.PromptBreak" />
      </Parameters>
      <Docs>
        <param name="strength"><span data-ttu-id="5f9fb-156">Указывает продолжительность перерыва со следующими возрастающими значениями:</span><span class="sxs-lookup"><span data-stu-id="5f9fb-156">Indicates the duration of the break, with the following increasing values:</span></span></param>
        <summary><span data-ttu-id="5f9fb-157">Добавляет перерыв в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает его продолжительность.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-157">Appends a break to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies its strength (duration).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-158">Значения в <xref:System.Speech.Synthesis.PromptBreak> перечисления представляют диапазон разделение интервалов (пауза) между границами слов.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-158">The values in the <xref:System.Speech.Synthesis.PromptBreak> enumeration represent a range of separation intervals (pauses) between word boundaries.</span></span> <span data-ttu-id="5f9fb-159">Синтеза речи определяет точную продолжительность интервала.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-159">The speech synthesis engine determines the exact duration of the interval.</span></span> <span data-ttu-id="5f9fb-160">При запросе разрыв одно из следующих значений передается модуль преобразования текста в речь (TTS), который содержит сопоставление между эти значения и соответствующие значения разрыв миллисекунды.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-160">When a break is requested, one of these values is passed to the text-to-speech (TTS) engine, which contains a mapping between these values and the corresponding millisecond break values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-161">Следующий пример создает строку, содержащую два предложения, разделенных разрывом и отправляет выходные данные для воспроизведения WAV-файла.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-161">The following example builds a prompt containing two sentences separated by a break and sends the output to a WAV file for playback.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45");  
        builder.AppendBreak(PromptBreak.Medium);  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak (TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak(valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak (duration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak(TimeSpan duration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="duration"><span data-ttu-id="5f9fb-162">Время в тактах, где один такт равен 100 наносекунд.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-162">The time in ticks, where one tick equals 100 nanoseconds.</span></span></param>
        <summary><span data-ttu-id="5f9fb-163">Добавляет перерыв заданной длительности в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-163">Appends a break of the specified duration to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-164">Разрыв можно использовать для управления приостанавливает или других интонационную границы между словами.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-164">A break can be used to control pauses or other prosodic boundaries between words.</span></span> <span data-ttu-id="5f9fb-165">Разрыв является необязательным.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-165">A break is optional.</span></span> <span data-ttu-id="5f9fb-166">Если разрыв не указан, синтезатору определяет разрыв между словами, в зависимости от лингвистического контекста.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-166">If a break is not present, the synthesizer determines the break between words depending on the linguistic context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-167">Следующий пример создает строку, содержащую два предложения, разделенных разрывом 15 000 000 тактов (1,5 секунды) и говорит приглашение звуковое устройство по умолчанию на компьютере.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-167">The following example builds a prompt containing two sentences separated by a break of 15,000,000 ticks (1.5 seconds), and speaks the prompt to the default audio device on the computer.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45");  
        builder.AppendBreak(new TimeSpan(15000000));  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPromptBuilder">
      <MemberSignature Language="C#" Value="public void AppendPromptBuilder (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendPromptBuilder(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendPromptBuilder(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendPromptBuilder(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="5f9fb-168">Добавляемое содержимое.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-168">The content to append.</span></span></param>
        <summary><span data-ttu-id="5f9fb-169">Добавляет объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> к другому объекту <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-169">Appends a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object to another <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5f9fb-170">В следующем примере создается два <xref:System.Speech.Synthesis.PromptBuilder> экземпляров, а затем добавляет их в третьем <xref:System.Speech.Synthesis.PromptBuilder>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-170">The example that follows creates two <xref:System.Speech.Synthesis.PromptBuilder> instances and then appends them to a third <xref:System.Speech.Synthesis.PromptBuilder>.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\showtimes.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\showtimes.wav");  
  
        // Build child prompts.  
        PromptBuilder theatreA = new PromptBuilder();  
        theatreA.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 9:30");  
        theatreA.AppendBreak(PromptBreak.Large);  
        PromptBuilder theatreB = new PromptBuilder();  
        theatreB.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Build the parent prompt and append the two child prompts.  
        PromptBuilder showTimes = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        showTimes.AppendText(  
          "The following are the show times for tonight's movies:");  
        showTimes.AppendPromptBuilder(theatreA);  
        showTimes.AppendPromptBuilder(theatreB);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(showTimes);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSsml">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f9fb-171">Добавляет файл SSML к объекту <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-171">Appends an SSML file to a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="5f9fb-172">Полный путь к добавляемому файлу SSML.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-172">A fully qualified path to the SSML file to append.</span></span></param>
        <summary><span data-ttu-id="5f9fb-173">Добавляет файл SSML по указанному пути в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-173">Appends the SSML file at the specified path to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-174">Файл SSML должен быть XML-файл, соответствующий [язык разметки синтеза речи (SSML) версии 1.0](http://go.microsoft.com/fwlink/?LinkId=201763) спецификации.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-174">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763) specification.</span></span>  
  
 <span data-ttu-id="5f9fb-175">Также можно добавить разметку SSML как строки с помощью <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-175">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-176">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объекта и добавляет содержимое файла SSML с помощью <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-176">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends the contents of an SSML file using the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a file that defines an SSML prompt.  
        PromptBuilder ssmlFile = new PromptBuilder();  
        ssmlFile.AppendSsml("c:\\test\\Weather.ssml");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(ssmlFile);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 <span data-ttu-id="5f9fb-177">Ниже приведен файл SSML, который ссылается на приведенном выше примере.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-177">The following is the SSML file that the preceding example references.</span></span>  
  
```xml  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <s> The weather forecast for today is partly cloudy with some sun breaks. </s>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (Uri ssmlFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(class System.Uri ssmlFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (ssmlFile As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(Uri ^ ssmlFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlFile" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="ssmlFile"><span data-ttu-id="5f9fb-178">Полный URI добавляемого файла SSML.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-178">A fully qualified URI to the SSML file to append.</span></span></param>
        <summary><span data-ttu-id="5f9fb-179">Добавляет файл SSML по указанному универсальному коду ресурса (URI) в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-179">Appends the SSML file at the specified URI to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-180">Файл SSML должен быть XML-файл, соответствующий [язык разметки синтеза речи (SSML) версии 1.0](https://www.w3.org/TR/speech-synthesis/) спецификации.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-180">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://www.w3.org/TR/speech-synthesis/) specification.</span></span>  
  
 <span data-ttu-id="5f9fb-181">Также можно добавить разметку SSML как строки с помощью <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-181">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-182">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объекта и добавляет содержимое файла SSML с помощью <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-182">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends the contents of an SSML file using the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a file that defines an SSML prompt.  
        PromptBuilder ssmlFile = new PromptBuilder();  
        ssmlFile.AppendSsml(new Uri("c:\\test\\Weather.ssml"));  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(ssmlFile);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="5f9fb-183">Ниже приведен файл SSML, который ссылается на приведенном выше примере.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-183">The following is the SSML file that the preceding example references.</span></span>  
  
```xml  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <s> The weather forecast for today is partly cloudy with some sun breaks. </s>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (System.Xml.XmlReader ssmlFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(class System.Xml.XmlReader ssmlFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (ssmlFile As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(System::Xml::XmlReader ^ ssmlFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlFile" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="ssmlFile"><span data-ttu-id="5f9fb-184">Полное имя добавляемого файла XML.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-184">A fully qualified name to the XML file to append.</span></span></param>
        <summary><span data-ttu-id="5f9fb-185">Добавляет объект <c>XMLReader</c>, который ссылается на запрос SSML, в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-185">Appends an <c>XMLReader</c> object that references an SSML prompt to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-186">Файл SSML должен быть XML-файл, соответствующий [язык разметки синтеза речи (SSML) версии 1.0](https://www.w3.org/TR/speech-synthesis/) спецификации.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-186">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://www.w3.org/TR/speech-synthesis/) specification.</span></span>  
  
 <span data-ttu-id="5f9fb-187">Также можно добавить разметку SSML как строки с помощью <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-187">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-188">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объекта из <xref:System.Xml.XmlReader> объект, который ссылается на файл, содержащий разметку языка разметки синтеза речи (SSML).</span><span class="sxs-lookup"><span data-stu-id="5f9fb-188">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from an <xref:System.Xml.XmlReader> object that references a file containing Speech Synthesis Markup Language (SSML) markup.</span></span>  
  
```csharp  
using System;  
using System.Xml;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Create the path to the SSML file.  
        string weatherFile = Path.GetFullPath("c:\\test\\Weather.xml");  
        PromptBuilder builder = null;  
  
        // Create an XML Reader from the file, create a PromptBuilder and   
        // append the XmlReader.  
        if (File.Exists(weatherFile))  
        {  
          XmlReader reader = XmlReader.Create(weatherFile);  
          builder = new PromptBuilder();  
          builder.AppendSsml(reader);  
          reader.Close();  
        }  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsmlMarkup">
      <MemberSignature Language="C#" Value="public void AppendSsmlMarkup (string ssmlMarkup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsmlMarkup(string ssmlMarkup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsmlMarkup (ssmlMarkup As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsmlMarkup(System::String ^ ssmlMarkup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlMarkup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ssmlMarkup"><span data-ttu-id="5f9fb-189">Строка, содержащая разметку SSML.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-189">A string containing SSML markup.</span></span></param>
        <summary><span data-ttu-id="5f9fb-190">Добавляет указанную строку, содержащую разметку SSML, в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-190">Appends the specified string containing SSML markup to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-191">При наращивании разметку SSML, необходимо использовать соответствующие escape-символы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-191">You must use the appropriate escape characters when appending SSML markup.</span></span> <span data-ttu-id="5f9fb-192">Обратите внимание, обратной черты перед кавычки, включающего значение `interpret-as` атрибута в следующем примере:</span><span class="sxs-lookup"><span data-stu-id="5f9fb-192">Notice the backward-slashes preceding the quotation marks enclosing the value of the `interpret-as` attribute in the following example:</span></span>  
  
```csharp  
builder.AppendSsmlMarkup("<say-as interpret-as = \"characters\"> chair </say-as>");  
```  
  
> [!NOTE]
>  <span data-ttu-id="5f9fb-193">Строка используется в качестве аргумента для <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> не может включать `speak` элемент.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-193">The string used as an argument to <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> cannot include a `speak` element.</span></span>  
  
 <span data-ttu-id="5f9fb-194">При использовании <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> для указания произношения встроенной в `phoneme` элемента, можно использовать телефоны с любого из следующих фонетического алфавитах, указано, что текущий речи ее поддерживает:</span><span class="sxs-lookup"><span data-stu-id="5f9fb-194">When using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> to specify inline pronunciations in a `phoneme` element, you can use phones from any of the following phonetic alphabets, provided that the current speech engine supports it:</span></span>  
  
-   <span data-ttu-id="5f9fb-195">Международного фонетического алфавита (IPA)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-195">International Phonetic Alphabet (IPA)</span></span>  
  
-   <span data-ttu-id="5f9fb-196">Набор универсальных Phone (ИБП)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-196">Universal Phone Set (UPS)</span></span>  
  
-   <span data-ttu-id="5f9fb-197">Набор SAPI телефона</span><span class="sxs-lookup"><span data-stu-id="5f9fb-197">SAPI Phone Set</span></span>  
  
 <span data-ttu-id="5f9fb-198">Все совместимые SSML речи будет согласовать телефоны от IPA.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-198">Any SSML-compliant speech engine will speak phones from the IPA.</span></span>  
  
 <span data-ttu-id="5f9fb-199">Можно также добавить файл, содержащий разметку SSML, с помощью одного из <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-199">You can also append a file containing SSML markup using one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods.</span></span> <span data-ttu-id="5f9fb-200">Чтобы добавить Произносимый текст, не имеющую язык разметки, используйте один из <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, или <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-200">To append text to be spoken that is not formatted with markup language, use one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendText">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f9fb-201">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-201">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="5f9fb-202">Строка, содержащая произносимый текст.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-202">A string containing the text to be spoken.</span></span></param>
        <summary><span data-ttu-id="5f9fb-203">Указывает текст, который необходимо добавить в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-203">Specifies text to append to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-204">Чтобы добавить текст, отформатированный как языка разметки SSML, используйте <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-204">To append text that is formatted as SSML markup language, use <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-205">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объекта и добавляет строку текста с помощью <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-205">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends a text string using the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder speakText = new PromptBuilder();  
        speakText.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt.  
        synth.Speak(speakText);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptEmphasis emphasis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptEmphasis emphasis) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, emphasis As PromptEmphasis)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptEmphasis emphasis);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="emphasis" Type="System.Speech.Synthesis.PromptEmphasis" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="5f9fb-206">Строка, содержащая произносимый текст.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-206">A string containing the text to be spoken.</span></span></param>
        <param name="emphasis"><span data-ttu-id="5f9fb-207">Значение выделения, которое необходимо применить к тексту.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-207">The value for the emphasis or stress to apply to the text.</span></span></param>
        <summary><span data-ttu-id="5f9fb-208">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает степень выделения для текста.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-208">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the degree of emphasis for the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-209">В настоящее время синтеза речи в Windows не поддерживают параметр выделения.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-209">The speech synthesis engines in Windows do not support the emphasis parameter at this time.</span></span> <span data-ttu-id="5f9fb-210">Задание значений для параметра выделения сформирует без звуковой изменений в выводе синтезированную речь.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-210">Setting values for the emphasis parameter will produce no audible change in the synthesized speech output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptRate rate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptRate rate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, rate As PromptRate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptRate rate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="rate" Type="System.Speech.Synthesis.PromptRate" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="5f9fb-211">Строка, содержащая произносимый текст.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-211">A string containing the text to be spoken.</span></span></param>
        <param name="rate"><span data-ttu-id="5f9fb-212">Значение скорости озвучивания, которое необходимо применить к тексту.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-212">The value for the speaking rate to apply to the text.</span></span></param>
        <summary><span data-ttu-id="5f9fb-213">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает скорость озвучивания текста.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-213">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the speaking rate for the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5f9fb-214">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объекта и присоединяет строки текста.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-214">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends text strings.</span></span> <span data-ttu-id="5f9fb-215">В этом примере <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> интенсивность метод для указания медленно произношения для строки, который был добавлен, которых выполняет перечисление содержимого заказа.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-215">The example uses the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method to specify a slow speaking rate for the string being added, which enumerates the contents of an order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder speakRate = new PromptBuilder();  
        speakRate.AppendText("Your order for");  
        speakRate.AppendText("one kitchen sink and one faucet", PromptRate.Slow);  
        speakRate.AppendText("has been confirmed.");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(speakRate);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptVolume volume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptVolume volume) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, volume As PromptVolume)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptVolume volume);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="volume" Type="System.Speech.Synthesis.PromptVolume" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="5f9fb-216">Строка, содержащая произносимый текст.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-216">A string containing the text to be spoken.</span></span></param>
        <param name="volume"><span data-ttu-id="5f9fb-217">Значение громкости озвучивания, которое необходимо применить к тексту.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-217">The value for the speaking volume (loudness) to apply to the text.</span></span></param>
        <summary><span data-ttu-id="5f9fb-218">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает громкость озвучивания текста.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-218">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the volume to speak the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-219"><xref:System.Speech.Synthesis.PromptVolume.Default> Для <xref:System.Speech.Synthesis.PromptVolume> — всего тома, так как <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-219">The <xref:System.Speech.Synthesis.PromptVolume.Default> setting for <xref:System.Speech.Synthesis.PromptVolume> is full volume, which is the same as <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span></span> <span data-ttu-id="5f9fb-220">Другие параметры уменьшения громкости вывода речи относительно всего тома.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-220">The other settings decrease the volume of speech output relative to full volume.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-221">В следующем примере используется <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> метод, чтобы задать параметры тома, <xref:System.Speech.Synthesis.SpeechSynthesizer> применимы для вывода речи.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-221">The following example uses the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method to specify volume settings that the <xref:System.Speech.Synthesis.SpeechSynthesizer> should apply to speech output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt that applies different volume settings.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is the default speaking volume.", PromptVolume.Default);  
        builder.AppendBreak();  
        builder.AppendText("This is the extra loud speaking volume.", PromptVolume.ExtraLoud);  
        builder.AppendBreak();  
        builder.AppendText("This is the medium speaking volume.", PromptVolume.Medium);  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithAlias">
      <MemberSignature Language="C#" Value="public void AppendTextWithAlias (string textToSpeak, string substitute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithAlias(string textToSpeak, string substitute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithAlias (textToSpeak As String, substitute As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithAlias(System::String ^ textToSpeak, System::String ^ substitute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="substitute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="5f9fb-222">Строка, содержащая текстовое представление.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-222">A string containing the text representation.</span></span></param>
        <param name="substitute"><span data-ttu-id="5f9fb-223">Строка, содержащая произносимый текст.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-223">A string containing the text to be spoken.</span></span></param>
        <summary><span data-ttu-id="5f9fb-224">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает альтернативный текст для произнесения вместо добавленного текста.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-224">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the alias text to be spoken in place of the appended text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-225">Это позволяет документу содержать произносятся и форму по запросу.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-225">This allows a document to contain both a spoken and a written form for a prompt.</span></span> <span data-ttu-id="5f9fb-226">Например форму может быть акронима, например SAPI, и речевую форму удалось расширенной текстовой для сокращение в этом вариантов речи интерфейс прикладного программирования.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-226">For example, the written form could be an acronym, such as SAPI, and the spoken form could be the expanded text for the acronym, in this case Speech Application Programming Interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-227">Следующий пример добавляет текстовую строку («речи синтеза Markup Language») и псевдонима («SSML») <xref:System.Speech.Synthesis.PromptBuilder> объекта.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-227">The following example appends a text string ("Speech Synthesis Markup Language") and its alias ("SSML") to a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span> <span data-ttu-id="5f9fb-228">Синтезатор будет произношения «S S, M L».</span><span class="sxs-lookup"><span data-stu-id="5f9fb-228">The synthesizer will pronounce "S S M L".</span></span>  
  
```  
PromptBuilder alias = new PromptBuilder();  
alias.AppendTextWithAlias("Speech Synthesis Markup Language","SSML");   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendTextWithHint">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f9fb-229">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает тип содержимого текста.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-229">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the content type of the text.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendTextWithHint">
      <MemberSignature Language="C#" Value="public void AppendTextWithHint (string textToSpeak, System.Speech.Synthesis.SayAs sayAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithHint(string textToSpeak, valuetype System.Speech.Synthesis.SayAs sayAs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithHint(System::String ^ textToSpeak, System::Speech::Synthesis::SayAs sayAs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="sayAs" Type="System.Speech.Synthesis.SayAs" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="5f9fb-230">Строка, содержащая произносимый текст.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-230">A string containing the text to be spoken.</span></span></param>
        <param name="sayAs"><span data-ttu-id="5f9fb-231">Тип содержимого текста.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-231">The content type of the text.</span></span></param>
        <summary><span data-ttu-id="5f9fb-232">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает тип содержимого с помощью члена перечисления <see cref="T:System.Speech.Synthesis.SayAs" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-232">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the content type using a member of the <see cref="T:System.Speech.Synthesis.SayAs" /> enumeration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-233">Тип содержимого, указанный в `sayAs` рекомендации синтеза речи, о том, как содержимое произношения `textToSpeak`.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-233">The content type specified by `sayAs` can provide guidance to the speech synthesis engine about how to pronounce the contents of `textToSpeak`.</span></span>  
  
   
  
## Examples  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and define the data types for some of the added strings.  
        PromptBuilder sayAs = new PromptBuilder();  
        sayAs.AppendText("Your");  
        sayAs.AppendTextWithHint("1st", SayAs.NumberOrdinal);  
        sayAs.AppendText("request was for");  
        sayAs.AppendTextWithHint("1", SayAs.NumberCardinal);  
        sayAs.AppendText("room, on");  
        sayAs.AppendTextWithHint("10/19/2012,", SayAs.MonthDayYear);  
        sayAs.AppendText("with early arrival at");  
        sayAs.AppendTextWithHint("12:35pm", SayAs.Time12);  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(sayAs);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithHint">
      <MemberSignature Language="C#" Value="public void AppendTextWithHint (string textToSpeak, string sayAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithHint(string textToSpeak, string sayAs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithHint (textToSpeak As String, sayAs As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithHint(System::String ^ textToSpeak, System::String ^ sayAs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="sayAs" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="5f9fb-234">Строка, содержащая произносимый текст.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-234">A string containing the text to be spoken.</span></span></param>
        <param name="sayAs"><span data-ttu-id="5f9fb-235">Тип содержимого текста.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-235">The content type of the text.</span></span></param>
        <summary><span data-ttu-id="5f9fb-236">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и объект <see cref="T:System.String" />, указывающий тип содержимого текста.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-236">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and a <see cref="T:System.String" /> that specifies the content type of the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-237">Этот метод можно использовать для указания типа содержимого, которое не включено в <xref:System.Speech.Synthesis.SayAs> перечисления.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-237">You can use this method to specify a content type that is not included in the <xref:System.Speech.Synthesis.SayAs> enumeration.</span></span> <span data-ttu-id="5f9fb-238">Тем не менее речь должен поддерживать указанного параметра.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-238">However, the TTS engine must support the parameter that you specify.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithPronunciation">
      <MemberSignature Language="C#" Value="public void AppendTextWithPronunciation (string textToSpeak, string pronunciation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithPronunciation(string textToSpeak, string pronunciation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithPronunciation (textToSpeak As String, pronunciation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithPronunciation(System::String ^ textToSpeak, System::String ^ pronunciation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="pronunciation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="5f9fb-239">Строка, содержащая форму слова, записанную традиционными для соответствующего языка знаками алфавита.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-239">A string containing the written form of the word using the conventional alphabet for a language.</span></span></param>
        <param name="pronunciation"><span data-ttu-id="5f9fb-240">Строка, содержащая звуки из Международного фонетического алфавита (IPA), которые необходимо произнести.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-240">A string containing phones to be spoken from the International Phonetic Alphabet (IPA).</span></span></param>
        <summary><span data-ttu-id="5f9fb-241">Добавляет текст в объект <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает произношение текста.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-241">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the pronunciation for the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-242">Содержимое говорит синтезатору `pronunciation` параметра, а не содержимое из `textToSpeak` параметра.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-242">The synthesizer speaks the contents of the `pronunciation` parameter, not the contents of the `textToSpeak` parameter.</span></span>  
  
 <span data-ttu-id="5f9fb-243">Произношение встроено в запросах применяются только отдельные вхождения слова и переопределяют произношение речи или любого из его текущего активного словари.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-243">Pronunciations specified inline in prompts apply only to the individual occurrence of a word and override pronunciations of the speech engine or any of its currently active lexicons.</span></span> <span data-ttu-id="5f9fb-244">Как правило используется встроенный произношение для пользовательских произношение существующие слова или произношения редко встречающиеся слова, такие как имена собственные, которые синтеза речи может произносит, а также ожидаемого.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-244">Typically, you will use inline pronunciations for custom pronunciations of existing words or for pronunciation of uncommon words, such as proper names, which the speech synthesis engine may not pronounce as well as expected.</span></span>  
  
 <span data-ttu-id="5f9fb-245">Встроенная произношение должно быть указано с помощью телефонов из международного фонетического алфавита (IPA).</span><span class="sxs-lookup"><span data-stu-id="5f9fb-245">Inline pronunciations must be specified using phones from the International Phonetic Alphabet (IPA).</span></span> <span data-ttu-id="5f9fb-246">Телефон — это буква или символ, представляющий отдельное звука речи.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-246">A phone is a letter or character that represents a discreet sound of speech.</span></span> <span data-ttu-id="5f9fb-247">Речи, которые соответствуют [язык разметки синтеза речи (SSML) версии 1.0](http://go.microsoft.com/fwlink/?LinkId=201763) спецификации будет произношения телефоны от IPA.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-247">Speech engines that comply with the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763) specification will pronounce phones from the IPA.</span></span> <span data-ttu-id="5f9fb-248">Указание встроенной произношение с помощью других фонетического алфавитах, в разделе <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-248">To specify inline pronunciations using other phonetic alphabets, see <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
 <span data-ttu-id="5f9fb-249">Публикует IPA [диаграммы](http://go.microsoft.com/fwlink/?LinkId=58362) , перечислены его телефоны и сопоставляет их с цифры Юникода.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-249">The IPA publishes a [chart](http://go.microsoft.com/fwlink/?LinkId=58362) that lists its phones and maps them to Unicode numbers.</span></span>  
  
 <span data-ttu-id="5f9fb-250">Некоторых телефонах алфавита IPA иметь того же представления, как буквы латинского алфавита.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-250">Some phones in the IPA alphabet have the same representations as letters in the Latin alphabet.</span></span> <span data-ttu-id="5f9fb-251">В таких случаях можно ввести символы латинского алфавита и имеет правильную представления для телефона.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-251">In those cases, it is possible to type the Latin character and have the proper representation for a phone.</span></span> <span data-ttu-id="5f9fb-252">Поскольку латинские символы, как часто используемые в тексте могут представлять несколько телефонов набора phone IPA, просто введя символы латинского алфавита привести точный требуемого телефона IPA.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-252">Because the Latin characters as commonly used in text may represent several phones of the IPA phone set, simply typing the Latin character might not result in the precise IPA phone desired.</span></span> <span data-ttu-id="5f9fb-253">Другие телефоны IPA алфавита необходимость представить в коде как символьные ссылки, состоящий из амперсанд (&), знак номера (#), и номер Юникода для нужного телефона в шестнадцатеричном или десятичном, все заканчивается точкой с запятой (;).</span><span class="sxs-lookup"><span data-stu-id="5f9fb-253">Other phones of the IPA alphabet need to be represented in code as character references consisting of an ampersand (&), the number sign (#), and a Unicode number for the desired phone in hexadecimal or decimal, all followed by a semicolon (;).</span></span> <span data-ttu-id="5f9fb-254">Например, schwa (&\#x0259;) может быть представлена `&#x0259;`.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-254">For example, a schwa (&\#x0259;) would be represented by `&#x0259;`.</span></span>  
  
 <span data-ttu-id="5f9fb-255">Чтобы добавить новые или настраиваемые произношение нескольких слов, например express региональные диалекта или добавить имена собственные или словаря, характерное для обучения или медицинские Дисциплина, построение лексикона и добавить его в <xref:System.Speech.Synthesis.SpeechSynthesizer> с помощью <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-255">To add new or custom pronunciations for multiple words, for example to express regional dialects or to add proper names or vocabulary that is specific to an educational or medical discipline, build a lexicon and add it to the <xref:System.Speech.Synthesis.SpeechSynthesizer> using <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-256">В следующем примере инициализируется новый экземпляр <xref:System.Speech.Synthesis.PromptBuilder> класса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-256">The following example initializes a new instance of the <xref:System.Speech.Synthesis.PromptBuilder> class.</span></span> <span data-ttu-id="5f9fb-257">Он затем добавляет текстовую строку «is My name» в экземпляр.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-257">It then appends the text string "My name is" to the instance.</span></span> <span data-ttu-id="5f9fb-258">Наконец он добавляет строку, содержащую имя «DuBois» и указывает Произношение имени.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-258">Finally, it appends a string containing the proper name "DuBois" and specifies the pronunciation of the name.</span></span>  
  
```csharp  
public void ProperName()  
{  
    PromptBuilder builder = new PromptBuilder();  
    builder.AppendText("My name is");  
  
    // Add a proper name and its pronunciation.  
    builder.AppendTextWithPronunciation("DuBois", "duˈbwɑ");     
}  
```  
  
 <span data-ttu-id="5f9fb-259">В следующем примере показана SSML этим <xref:System.Speech.Synthesis.PromptBuilder> объекта приводит к возникновению ошибки.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-259">The following markup shows the SSML that this <xref:System.Speech.Synthesis.PromptBuilder> object generates.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-us">  
  My name is <phoneme ph="duˈbwɑ"> DuBois </phoneme>  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContent">
      <MemberSignature Language="C#" Value="public void ClearContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.ClearContent" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f9fb-260">Очищает содержимое из объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-260">Clears the content from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PromptBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f9fb-261">Возвращает или задает сведения о языке и региональных параметрах для объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-261">Gets or sets the culture information for the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-262"><xref:System.Speech.Synthesis.SpeechSynthesizer> Будет пытаться выберите установленных голосовых, поддерживающий язык, заданный параметром <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> свойства для обработки в строке.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-262">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object will attempt to select an installed voice that supports the language specified by the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property to process the prompt.</span></span> <span data-ttu-id="5f9fb-263">Если обнаруживается голоса с заданной культурой, он будет использоваться.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-263">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="5f9fb-264">Если не удается найти голоса с заданной культурой, будет использоваться по умолчанию голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-264">If a voice with the specified culture cannot be found, the default voice will be used.</span></span>  
  
 <span data-ttu-id="5f9fb-265">Также можно указать язык и региональные параметры из строки для содержимого с помощью отдельные значения разделов <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, и <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-265">A culture may also be specified within the prompt for discreet sections of content using the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, and <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> methods.</span></span> <span data-ttu-id="5f9fb-266">Язык и региональные параметры, указанный для части содержимого с помощью одного из указанных способов переопределит <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> свойства, хотя в действительности и <xref:System.Speech.Synthesis.SpeechSynthesizer> попытается выберите установленных голосовых, поддерживающий язык, заданный параметром `culture` параметр метода.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-266">A culture specified for a portion of content using one of the above methods will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property while in effect, and the <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter of the method.</span></span>  
  
 <span data-ttu-id="5f9fb-267">Чтобы правильно произношения слов на языке, указанном в <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> свойство синтеза (преобразования текста в речь или TTS) речи, поддерживающий язык должен быть установлен.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-267">To correctly pronounce words in the language specified by the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="5f9fb-268">Установленное ядро для поиска TTS называется голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-268">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="5f9fb-269">Чтобы получить сведения о том, какие установлены голоса для определенного языка и региональных параметров, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-269">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="5f9fb-270">Microsoft Windows и System.Speech API все допустимые коды страны язык принимает в качестве значения для `culture`.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-270">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="5f9fb-271">Модули преобразования текста в РЕЧЬ, поставляемых вместе с Windows 7 поддерживают следующие коды страны языка:</span><span class="sxs-lookup"><span data-stu-id="5f9fb-271">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="5f9fb-272">en US.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-272">en-US.</span></span> <span data-ttu-id="5f9fb-273">Английский (США)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-273">English (United States)</span></span>  
  
-   <span data-ttu-id="5f9fb-274">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-274">zh-CN.</span></span> <span data-ttu-id="5f9fb-275">Китайский (КНР)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-275">Chinese (China)</span></span>  
  
-   <span data-ttu-id="5f9fb-276">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-276">zh-TW.</span></span> <span data-ttu-id="5f9fb-277">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-277">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="5f9fb-278">Также допускаются кодов языка двух букв, например «en».</span><span class="sxs-lookup"><span data-stu-id="5f9fb-278">Two-letter language codes such as "en" are also permitted.</span></span>  <span data-ttu-id="5f9fb-279">В разделе [языка константы и строки кода](http://msdn.microsoft.com/library/dd318693\(VS.85\).aspx) полный список кодов языков.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-279">See [Language Identifier Constants and Strings](http://msdn.microsoft.com/library/dd318693\(VS.85\).aspx) for a comprehensive list of language codes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndParagraph">
      <MemberSignature Language="C#" Value="public void EndParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndParagraph() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndParagraph();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f9fb-280">Указывает конец абзаца в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-280">Specifies the end of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-281">Длинные запросы можно подготовить к просмотру больше похожи на телефонных разговоров они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-281">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span> <span data-ttu-id="5f9fb-282">Пример см. в разделе <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-282">See <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSentence">
      <MemberSignature Language="C#" Value="public void EndSentence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSentence() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndSentence" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSentence ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSentence();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f9fb-283">Указывает конец предложения в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-283">Specifies the end of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-284">Длинные запросы можно подготовить к просмотру больше похожи на телефонных разговоров они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-284">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span> <span data-ttu-id="5f9fb-285">Пример см. в разделе <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-285">See <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndStyle">
      <MemberSignature Language="C#" Value="public void EndStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f9fb-286">Указывает конец стиля в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-286">Specifies the end of a style in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-287"><xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> Метод останавливает текущий стиль говорящего.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-287">The <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> method stops the current speaking style.</span></span> <span data-ttu-id="5f9fb-288">Стиль озвучивания возвращается к параметру, который был фактически перед <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> метод запустил новый стиль говорящего.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-288">The speaking style reverts to the setting that was in effect before the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method initiated a new speaking style.</span></span> <span data-ttu-id="5f9fb-289">Пример см. в разделе <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-289">See <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndVoice">
      <MemberSignature Language="C#" Value="public void EndVoice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndVoice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndVoice" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndVoice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndVoice();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f9fb-290">Указывает конец использования голоса в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-290">Specifies the end of use of a voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-291"><xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A> Метод прекращает использование текущий голос для вывода речи.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-291">The <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A> method stops the use of the current voice for speech output.</span></span> <span data-ttu-id="5f9fb-292">Голоса восстанавливает значение, который был фактически перед <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> метод запуска нового голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-292">The voice reverts to the setting that was in effect before the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> method initiated a new voice.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PromptBuilder.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f9fb-293">Возвращает значение, указывающее, является ли <see cref="T:System.Speech.Synthesis.PromptBuilder" /> пустым.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-293">Gets whether the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> is empty.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartParagraph">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f9fb-294">Указывает начало абзаца в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и при необходимости указывает язык.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-294">Specifies the start of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object, and optionally specifies a language.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-295">Длинные запросы можно подготовить к просмотру больше похожи на телефонных разговоров они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-295">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartParagraph">
      <MemberSignature Language="C#" Value="public void StartParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartParagraph() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartParagraph();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f9fb-296">Указывает начало абзаца в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-296">Specifies the start of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-297">Длинные запросы можно подготовить к просмотру больше похожи на телефонных разговоров они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-297">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-298">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объекта, добавляет содержимое и упорядочивает содержимое в абзацев и предложений.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-298">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends content, and organizes the content into paragraphs and sentences.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content as paragraphs and sentences.  
        PromptBuilder parSent = new PromptBuilder();  
        parSent.StartParagraph();  
        parSent.StartSentence();  
        parSent.AppendText("Introducing the sentence element.");  
        parSent.EndSentence();  
        parSent.StartSentence();  
        parSent.AppendText("You can use it to mark individual sentences.");  
        parSent.EndSentence();  
        parSent.EndParagraph();  
        parSent.StartParagraph();  
        parSent.AppendText("Another simple paragraph. Sentence structure in this paragraph" +  
          "is not explicitly marked.");  
        parSent.EndParagraph();  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(parSent);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartParagraph">
      <MemberSignature Language="C#" Value="public void StartParagraph (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartParagraph(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartParagraph (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartParagraph(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="5f9fb-299">Предоставляет сведения об определенном языке и региональных параметрах, например языке, названии языка и региональных параметров, системе письма, используемом календаре, формате дат и сортировке строк.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-299">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="5f9fb-300">Указывает начало абзаца в определенном языке и региональных параметров в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-300">Specifies the start of a paragraph in the specified culture in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-301">Длинные запросы можно подготовить к просмотру больше похожи на телефонных разговоров они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-301">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 <span data-ttu-id="5f9fb-302">`culture` Параметр для абзаца может отличаться от <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> свойство <xref:System.Speech.Synthesis.PromptBuilder> содержащего его объекта.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-302">The `culture` parameter for a paragraph can be different than the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains it.</span></span> <span data-ttu-id="5f9fb-303">В сущности, а значение `culture` переопределит <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-303">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="5f9fb-304"><xref:System.Speech.Synthesis.SpeechSynthesizer> Попытается выберите установленных голосовых, поддерживающий язык, заданный параметром `culture` параметр оперировать абзаца.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-304">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the paragraph.</span></span> <span data-ttu-id="5f9fb-305">Если обнаруживается голоса с заданной культурой, он будет использоваться.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-305">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="5f9fb-306">Если не удается найти голоса с заданной культурой, будет использоваться по умолчанию голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-306">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="5f9fb-307">Чтобы прекратить использование голоса, заданные <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, вызовите <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-307">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>.</span></span>  
  
 <span data-ttu-id="5f9fb-308">Чтобы правильно произношения слов на языке, указанном в `culture` параметр синтеза (преобразования текста в речь или TTS) речи, поддерживающий язык должен быть установлен.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-308">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="5f9fb-309">Установленное ядро для поиска TTS называется голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-309">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="5f9fb-310">Чтобы получить сведения о том, какие установлены голоса для определенного языка и региональных параметров, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-310">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="5f9fb-311">Microsoft Windows и System.Speech API все допустимые коды страны язык принимает в качестве значения для `culture`.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-311">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="5f9fb-312">Модули преобразования текста в РЕЧЬ, поставляемых вместе с Windows 7 поддерживают следующие коды страны языка:</span><span class="sxs-lookup"><span data-stu-id="5f9fb-312">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="5f9fb-313">en US.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-313">en-US.</span></span> <span data-ttu-id="5f9fb-314">Английский (США)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-314">English (United States)</span></span>  
  
-   <span data-ttu-id="5f9fb-315">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-315">zh-CN.</span></span> <span data-ttu-id="5f9fb-316">Китайский (КНР)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-316">Chinese (China)</span></span>  
  
-   <span data-ttu-id="5f9fb-317">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-317">zh-TW.</span></span> <span data-ttu-id="5f9fb-318">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-318">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="5f9fb-319">Также допускаются кодов языка двух букв, например «en».</span><span class="sxs-lookup"><span data-stu-id="5f9fb-319">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartSentence">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f9fb-320">Указывает начало предложения в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и при необходимости указывает язык.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-320">Specifies the start of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object, and optionally specifies a language.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-321">Длинные запросы можно подготовить к просмотру больше похожи на телефонных разговоров они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-321">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartSentence">
      <MemberSignature Language="C#" Value="public void StartSentence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartSentence() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartSentence" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartSentence ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartSentence();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f9fb-322">Указывает начало предложения в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-322">Specifies the start of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-323">Длинные запросы можно подготовить к просмотру больше похожи на телефонных разговоров они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-323">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-324">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объекта, добавляет содержимое и упорядочивает содержимое в абзацев и предложений.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-324">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends content, and organizes the content into paragraphs and sentences.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content as paragraphs and sentences.  
        PromptBuilder parSent = new PromptBuilder();  
        parSent.StartParagraph();  
        parSent.StartSentence();  
        parSent.AppendText("Introducing the sentence element.");  
        parSent.EndSentence();  
        parSent.StartSentence();  
        parSent.AppendText("You can use it to mark individual sentences.");  
        parSent.EndSentence();  
        parSent.EndParagraph();  
        parSent.StartParagraph();  
        parSent.AppendText("Another simple paragraph. Sentence structure in this paragraph" +  
          "is not explicitly marked.");  
        parSent.EndParagraph();  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(parSent);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSentence">
      <MemberSignature Language="C#" Value="public void StartSentence (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartSentence(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartSentence (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartSentence(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="5f9fb-325">Предоставляет сведения об определенном языке и региональных параметрах, например языке, названии языка и региональных параметров, системе письма, используемом календаре, формате дат и сортировке строк.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-325">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="5f9fb-326">Указывает начало предложения в определенном языке и региональных параметрах в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-326">Specifies the start of a sentence in the specified culture in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-327">Длинные запросы можно подготовить к просмотру больше похожи на телефонных разговоров они разбиваются на предложения и абзацы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-327">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 <span data-ttu-id="5f9fb-328">`culture` Параметр предложения может отличаться от `culture` параметр абзац, который содержит предложение или <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> свойство <xref:System.Speech.Synthesis.PromptBuilder> , содержащий их.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-328">The `culture` parameter for a sentence can be different than the `culture` parameter for the paragraph that contains the sentence or the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains them.</span></span>  
  
 <span data-ttu-id="5f9fb-329">В сущности, а значение `culture` переопределит <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> свойство и `culture` параметр абзац, который содержит предложение.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-329">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property and the `culture` parameter for the paragraph that contains the sentence.</span></span> <span data-ttu-id="5f9fb-330"><xref:System.Speech.Synthesis.SpeechSynthesizer> Попытается выберите установленных голосовых, поддерживающий язык, заданный параметром `culture` параметр оперировать предложения.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-330">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the sentence.</span></span> <span data-ttu-id="5f9fb-331">Если обнаруживается голоса с заданной культурой, он будет использоваться.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-331">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="5f9fb-332">Если не удается найти голоса с заданной культурой, будет использоваться по умолчанию голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-332">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="5f9fb-333">Чтобы прекратить использование голоса, заданные <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>, вызовите <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-333">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A>.</span></span>  
  
 <span data-ttu-id="5f9fb-334">Чтобы правильно произношения слов на языке, указанном в `culture` параметр синтеза (преобразования текста в речь или TTS) речи, поддерживающий язык должен быть установлен.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-334">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="5f9fb-335">Установленное ядро для поиска TTS называется голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-335">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="5f9fb-336">Чтобы получить сведения о том, какие установлены голоса для определенного языка и региональных параметров, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-336">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="5f9fb-337">Microsoft Windows и System.Speech API все допустимые коды страны язык принимает в качестве значения для `culture`.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-337">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="5f9fb-338">Модули преобразования текста в РЕЧЬ, поставляемых вместе с Windows 7 поддерживают следующие коды страны языка:</span><span class="sxs-lookup"><span data-stu-id="5f9fb-338">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="5f9fb-339">en US.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-339">en-US.</span></span> <span data-ttu-id="5f9fb-340">Английский (США)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-340">English (United States)</span></span>  
  
-   <span data-ttu-id="5f9fb-341">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-341">zh-CN.</span></span> <span data-ttu-id="5f9fb-342">Китайский (КНР)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-342">Chinese (China)</span></span>  
  
-   <span data-ttu-id="5f9fb-343">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-343">zh-TW.</span></span> <span data-ttu-id="5f9fb-344">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-344">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="5f9fb-345">Также допускаются кодов языка двух букв, например «en».</span><span class="sxs-lookup"><span data-stu-id="5f9fb-345">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartStyle">
      <MemberSignature Language="C#" Value="public void StartStyle (System.Speech.Synthesis.PromptStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartStyle(class System.Speech.Synthesis.PromptStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartStyle(System.Speech.Synthesis.PromptStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartStyle (style As PromptStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartStyle(System::Speech::Synthesis::PromptStyle ^ style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Speech.Synthesis.PromptStyle" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="5f9fb-346">Начальный стиль.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-346">The style to start.</span></span></param>
        <summary><span data-ttu-id="5f9fb-347">Указывает начало стиля в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-347">Specifies the start of a style in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-348"><xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> Принимает <xref:System.Speech.Synthesis.PromptStyle> объект в качестве своего аргумента.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-348">The <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method takes a <xref:System.Speech.Synthesis.PromptStyle> object as its argument.</span></span> <span data-ttu-id="5f9fb-349">Можно использовать свойства <xref:System.Speech.Synthesis.PromptStyle> объекта, чтобы зафиксировать выделения, темпе произношения и громкости для применения к выводимой пока стиль речи.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-349">You can use the properties of the <xref:System.Speech.Synthesis.PromptStyle> object to set the emphasis, speaking rate, and volume (loudness) to apply to speech output while the style is in effect.</span></span> <span data-ttu-id="5f9fb-350">Чтобы прекратить использование текущего стиля, вызовите <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-350">To stop using the current style, call the <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> method.</span></span>  
  
> [!NOTE]
>  -   <span data-ttu-id="5f9fb-351">В настоящее время синтеза речи в Windows не поддерживают параметр выделения.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-351">The speech synthesis engines in Windows do not support the emphasis parameter at this time.</span></span> <span data-ttu-id="5f9fb-352">Задание значений для параметра выделения сформирует без звуковой изменений в выводе синтезированную речь.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-352">Setting values for the emphasis parameter will produce no audible change in the synthesized speech output.</span></span>  
> -   <span data-ttu-id="5f9fb-353"><xref:System.Speech.Synthesis.PromptVolume.Default> Для <xref:System.Speech.Synthesis.PromptVolume> — всего тома, так как <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-353">The <xref:System.Speech.Synthesis.PromptVolume.Default> setting for <xref:System.Speech.Synthesis.PromptVolume> is full volume, which is the same as <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span></span> <span data-ttu-id="5f9fb-354">Другие параметры уменьшения громкости вывода речи относительно всего тома.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-354">The other settings decrease the volume of speech output relative to full volume.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-355">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объекта и присоединяет строки текста.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-355">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends text strings.</span></span> <span data-ttu-id="5f9fb-356">В этом примере <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> интенсивность метод для указания медленно произношения для строки, который был добавлен, которых выполняет перечисление содержимого заказа.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-356">The example uses the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method to specify a slow speaking rate for the string being added, which enumerates the contents of an order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder style = new PromptBuilder();  
        style.AppendText("Your order for");  
        style.StartStyle(new PromptStyle(PromptRate.Slow));  
        style.AppendText("one kitchen sink and one faucet");  
        style.EndStyle();  
        style.AppendText("has been confirmed.");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(style);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartVoice">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f9fb-357">Предписывает синтезатору изменить голос в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-357">Instructs the synthesizer to change the voice in a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-358">Голоса представляет обработчик установленных TTS.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-358">A voice represents an installed TTS engine.</span></span> <span data-ttu-id="5f9fb-359">Используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> методы и <xref:System.Speech.Synthesis.VoiceInfo> классе, чтобы получить имена и атрибуты установлены голоса преобразования текста в речь (TTS), которые можно выбрать.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-359">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="5f9fb-360">Если приложение вызывает <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, метод проверяет, каждый из голоса, он находит в реестре заданным критериям минимальное.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-360">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="5f9fb-361">Для любого голоса, не прошедшей проверку <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> задает его <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойства `False`.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-361">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="5f9fb-362">Приложение не может вызвать любую <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> голосовых данных методам которого <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство `False`.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-362">An application cannot call any of the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods on a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="5f9fb-363">Как правило, приложения не задано голосовых <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-363">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="5f9fb-364">Предоставляет сведения об определенном языке и региональных параметрах, например языке, названии языка и региональных параметров, системе письма, используемом календаре, формате дат и сортировке строк.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-364">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="5f9fb-365">Предписывает синтезатору изменить голос в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает необходимые для данного голоса язык и региональные параметры.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-365">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the culture of the voice to use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-366">`culture` Параметр <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> может отличаться от <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> свойство <xref:System.Speech.Synthesis.PromptBuilder> содержащего его объекта.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-366">The `culture` parameter for <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> can be different than the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains it.</span></span>  <span data-ttu-id="5f9fb-367">В сущности, а значение `culture` переопределит <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-367">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="5f9fb-368"><xref:System.Speech.Synthesis.SpeechSynthesizer> Попытается выберите установленных голосовых, поддерживающий язык, заданный параметром `culture` параметр оперировать содержимое, заключенное <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> и <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-368">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the content enclosed by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> and <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span> <span data-ttu-id="5f9fb-369">Если обнаруживается голоса с заданной культурой, он будет использоваться.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-369">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="5f9fb-370">Если не удается найти голоса с заданной культурой, будет использоваться по умолчанию голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-370">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="5f9fb-371">Чтобы прекратить использование голоса, заданные <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, вызовите <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-371">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 <span data-ttu-id="5f9fb-372">Чтобы правильно произношения слов на языке, указанном в `culture` параметр синтеза (преобразования текста в речь или TTS) речи, поддерживающий язык должен быть установлен.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-372">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="5f9fb-373">Установленное ядро для поиска TTS называется голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-373">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="5f9fb-374">Чтобы получить сведения о том, какие установлены голоса для определенного языка и региональных параметров, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-374">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="5f9fb-375">Microsoft Windows и System.Speech API все допустимые коды страны язык принимает в качестве значения для `culture`.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-375">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="5f9fb-376">Модули преобразования текста в РЕЧЬ, поставляемых вместе с Windows 7 поддерживают следующие коды страны языка:</span><span class="sxs-lookup"><span data-stu-id="5f9fb-376">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="5f9fb-377">en US.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-377">en-US.</span></span> <span data-ttu-id="5f9fb-378">Английский (США)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-378">English (United States)</span></span>  
  
-   <span data-ttu-id="5f9fb-379">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-379">zh-CN.</span></span> <span data-ttu-id="5f9fb-380">Китайский (КНР)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-380">Chinese (China)</span></span>  
  
-   <span data-ttu-id="5f9fb-381">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-381">zh-TW.</span></span> <span data-ttu-id="5f9fb-382">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="5f9fb-382">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="5f9fb-383">Также допускаются кодов языка двух букв, например «en».</span><span class="sxs-lookup"><span data-stu-id="5f9fb-383">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="5f9fb-384">Пол используемого голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-384">The gender of the voice to use.</span></span></param>
        <summary><span data-ttu-id="5f9fb-385">Предписывает синтезатору изменить голос в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает пол голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-385">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the gender of the voice to use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-386">Используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> методы и <xref:System.Speech.Synthesis.VoiceInfo> классе, чтобы получить имена и атрибуты установлены голоса преобразования текста в речь (TTS), которые можно выбрать.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-386">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="5f9fb-387">Чтобы прекратить использование голоса, заданные <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> вызова <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-387">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceInfo voice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(class System.Speech.Synthesis.VoiceInfo voice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (voice As VoiceInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceInfo ^ voice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="voice" Type="System.Speech.Synthesis.VoiceInfo" />
      </Parameters>
      <Docs>
        <param name="voice"><span data-ttu-id="5f9fb-388">Критерии для используемого голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-388">The criteria for the voice to use.</span></span></param>
        <summary><span data-ttu-id="5f9fb-389">Предписывает синтезатору изменить голос в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и задает критерии для нового голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-389">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies criteria for the new voice.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-390">Используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> методы и <xref:System.Speech.Synthesis.VoiceInfo> классе, чтобы получить имена и атрибуты установлены голоса преобразования текста в речь (TTS), которые можно выбрать.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-390">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="5f9fb-391">Чтобы прекратить использование голоса, заданные <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> вызова <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-391">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5f9fb-392">Название используемого голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-392">The name of the voice to use.</span></span></param>
        <summary><span data-ttu-id="5f9fb-393">Предписывает синтезатору изменить голос в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает название голоса, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-393">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the name of the voice to use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-394">Чтобы получить сведения о том, какие установлены голоса, воспользуйтесь одним из <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-394">To get information about which voices are installed, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods.</span></span>  
  
 <span data-ttu-id="5f9fb-395">Чтобы прекратить использование голоса, заданные <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> вызова <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-395">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="5f9fb-396">Пол нового используемого голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-396">The gender of the new voice to use.</span></span></param>
        <param name="age"><span data-ttu-id="5f9fb-397">Возраст используемого голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-397">The age of the voice to use.</span></span></param>
        <summary><span data-ttu-id="5f9fb-398">Предписывает синтезатору изменить голос в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает пол и возраст нового голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-398">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the gender and the age of the new voice.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-399">Используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> методы и <xref:System.Speech.Synthesis.VoiceInfo> классе, чтобы получить имена и атрибуты установлены голоса преобразования текста в речь (TTS), которые можно выбрать.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-399">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="5f9fb-400">Чтобы прекратить использование голоса, заданные <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> вызова <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-400">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="5f9fb-401">Пол используемого голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-401">The gender of the voice to use.</span></span></param>
        <param name="age"><span data-ttu-id="5f9fb-402">Возраст используемого голоса.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-402">The age of the voice to use.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="5f9fb-403">Целое число, которое задает предпочтительный голос, когда несколько голосов соответствуют параметрам <c>gender</c> и <c>age</c>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-403">An integer that specifies a preferred voice when more than one voice matches the <c>gender</c> and <c>age</c> parameters.</span></span></param>
        <summary><span data-ttu-id="5f9fb-404">Предписывает синтезатору изменить голос в объекте <see cref="T:System.Speech.Synthesis.PromptBuilder" /> и указывает пол, возраст и предпочтительный голос, соответствующий указанным полу и возрасту.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-404">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies its gender, age, and a preferred voice that matches the specified gender and age.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-405">Синтеза речи подсчитывает совпадений, он находит для указанных параметров и возвращает голос, если счетчик равен `voiceAlternate` параметра.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-405">A speech synthesis engine counts the matches it finds for the specified parameters, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="5f9fb-406">Используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> методы и <xref:System.Speech.Synthesis.VoiceInfo> классе, чтобы получить имена и атрибуты установлены голоса преобразования текста в речь (TTS), которые можно выбрать.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-406">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="5f9fb-407">Чтобы прекратить использование голоса, заданные <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> вызова <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-407">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public string ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f9fb-408">Возвращает SSML, созданный на основе объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-408">Returns the SSML generated from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="5f9fb-409">Возвращает SSML, созданный на основе объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />, в виде одной строки.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-409">Returns the SSML generated from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object as a single line.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9fb-410"><xref:System.Speech.Synthesis.PromptBuilder.ToXml%2A> Метод не пытается формат возвращаемой SSML каким-либо образом.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-410">The <xref:System.Speech.Synthesis.PromptBuilder.ToXml%2A> method makes no attempt to format the returned SSML in any way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9fb-411">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объекта, добавляет текст, а затем записывает SSML эквивалент командной строке консоли до разговора содержимое строки.</span><span class="sxs-lookup"><span data-stu-id="5f9fb-411">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends text, and then writes the SSML equivalent of the prompt to the console before speaking the contents of the prompt.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder style = new PromptBuilder();  
        style.AppendText("Your order for");  
        style.StartStyle(new PromptStyle(PromptRate.Slow));  
        style.AppendText("one kitchen sink and one faucet");  
        style.EndStyle();  
        style.AppendText("has been confirmed.");  
  
        // Write the contents of the PromptBuilder object to the console as  
        // an SSML-compatible XML file.  
        string myXml = style.ToXml();  
        Console.WriteLine("This is the SSML equivalent of the PromptBuilder: \n\n" + myXml);  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(style);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>