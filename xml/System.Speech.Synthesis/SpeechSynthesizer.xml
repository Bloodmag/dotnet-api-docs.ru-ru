<Type Name="SpeechSynthesizer" FullName="System.Speech.Synthesis.SpeechSynthesizer">
  <TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechSynthesizer sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="19702-101">Предоставляет доступ к функциям установленного модуля синтеза речи.</span><span class="sxs-lookup"><span data-stu-id="19702-101">Provides access to the functionality of an installed speech synthesis engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-102">При создании нового <xref:System.Speech.Synthesis.SpeechSynthesizer> объекта, он использует голос системы по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="19702-102">When you create a new <xref:System.Speech.Synthesis.SpeechSynthesizer> object, it uses the default system voice.</span></span> <span data-ttu-id="19702-103">Чтобы настроить <xref:System.Speech.Synthesis.SpeechSynthesizer> для использования голоса (преобразования текста в речь) синтеза речи, установленного используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> или <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-103">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="19702-104">Чтобы получить сведения о том, какие установлены голоса, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод и <xref:System.Speech.Synthesis.VoiceInfo> класса.</span><span class="sxs-lookup"><span data-stu-id="19702-104">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 <span data-ttu-id="19702-105">Этот класс также предоставляет контроль над синтеза речи следующие аспекты:</span><span class="sxs-lookup"><span data-stu-id="19702-105">This class also provides control over the following aspects of speech synthesis:</span></span>  
  
-   <span data-ttu-id="19702-106">Чтобы настроить вывод для <xref:System.Speech.Synthesis.SpeechSynthesizer> , используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, и <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-106">To configure the output for the <xref:System.Speech.Synthesis.SpeechSynthesizer> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
-   <span data-ttu-id="19702-107">Для создания речи, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, или <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-107">To generate speech, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="19702-108"><xref:System.Speech.Synthesis.SpeechSynthesizer> Может привести к речи из текста, <xref:System.Speech.Synthesis.Prompt> или <xref:System.Speech.Synthesis.PromptBuilder> объекта, или из [язык разметки синтеза речи (SSML) версии 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="19702-108">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can produce speech from text, a <xref:System.Speech.Synthesis.Prompt> or <xref:System.Speech.Synthesis.PromptBuilder> object, or from [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span>  
  
-   <span data-ttu-id="19702-109">Чтобы приостанавливать и возобновлять синтеза речи, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> и <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-109">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
-   <span data-ttu-id="19702-110">Чтобы добавить или удалить словари, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> и <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-110">To add or remove lexicons, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> methods.</span></span> <span data-ttu-id="19702-111"><xref:System.Speech.Synthesis.SpeechSynthesizer> Можно использовать один или несколько словари вспомогательными его произношения слов.</span><span class="sxs-lookup"><span data-stu-id="19702-111">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can use one or more lexicons to guide its pronunciation of words.</span></span>  
  
-   <span data-ttu-id="19702-112">Чтобы изменить доставки вывода речи, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> и <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="19702-112">To modify the delivery of speech output, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> properties.</span></span>  
  
 <span data-ttu-id="19702-113"><xref:System.Speech.Synthesis.SpeechSynthesizer> Инициирует события при возникновении некоторых функций в запросах: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, и <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span><span class="sxs-lookup"><span data-stu-id="19702-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises events when it encounters certain features in prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span></span> <span data-ttu-id="19702-114">Он также вызывает события, которые отчетов при запуске (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) и окончания (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) из говорят на операции и изменений, голоса (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span><span class="sxs-lookup"><span data-stu-id="19702-114">It also raises events that report on the start (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) and end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) of speak operations and on the change of the speaking voice (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19702-115">Всегда вызывайте метод <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="19702-115">Always call <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> before you release your last reference to the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="19702-116">В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Speech.Synthesis.SpeechSynthesizer> метод <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="19702-116">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Speech.Synthesis.SpeechSynthesizer> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-117">Следующий пример является частью консольное приложение, которое инициализирует <xref:System.Speech.Synthesis.SpeechSynthesizer> объекта и говорит строка.</span><span class="sxs-lookup"><span data-stu-id="19702-117">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and speaks a string.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string.  
      synth.Speak("This example demonstrates a basic use of Speech Synthesizer");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="T:System.Speech.Synthesis.Prompt" />
    <altmember cref="T:System.Speech.Synthesis.PromptBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechSynthesizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19702-118">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="19702-118">Initializes a new instance of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-119">При инициализации нового <xref:System.Speech.Synthesis.SpeechSynthesizer> экземпляр, он использует голос системы по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="19702-119">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, it uses the default system voice.</span></span> <span data-ttu-id="19702-120">Чтобы настроить <xref:System.Speech.Synthesis.SpeechSynthesizer> для использования голоса (преобразования текста в речь) синтеза речи, установленного используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> или <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-120">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="19702-121">Чтобы получить сведения о том, какие установлены голоса, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод и <xref:System.Speech.Synthesis.VoiceInfo> класса.</span><span class="sxs-lookup"><span data-stu-id="19702-121">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public void AddLexicon (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLexicon(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLexicon(Uri ^ uri, System::String ^ mediaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="19702-122">Расположение сведений о лексиконе.</span><span class="sxs-lookup"><span data-stu-id="19702-122">The location of the lexicon information.</span></span></param>
        <param name="mediaType"><span data-ttu-id="19702-123">Тип носителя лексикона.</span><span class="sxs-lookup"><span data-stu-id="19702-123">The media type of the lexicon.</span></span> <span data-ttu-id="19702-124">Значения типов мультимедиа не учитывают регистр.</span><span class="sxs-lookup"><span data-stu-id="19702-124">Media type values are not case sensitive.</span></span></param>
        <summary><span data-ttu-id="19702-125">Добавляет лексикон в объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="19702-125">Adds a lexicon to the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-126">Лексики произношение — это совокупность слов или фраз, а также их произношения, состоящие из буквы и символы из поддерживаемых фонетического алфавита.</span><span class="sxs-lookup"><span data-stu-id="19702-126">A pronunciation lexicon is a collection of words or phrases together with their pronunciations, which consist of letters and characters from a supported phonetic alphabet.</span></span> <span data-ttu-id="19702-127">Лексики позволяет указать пользовательские произношения специализированных терминов в приложении.</span><span class="sxs-lookup"><span data-stu-id="19702-127">You can use a lexicon to specify custom pronunciations for specialized vocabulary in your application.</span></span>  
  
 <span data-ttu-id="19702-128">Произношения, определенных в файле внешних лексики имеют приоритет над произношение внутреннего лексикона или словаря синтезаторов речи.</span><span class="sxs-lookup"><span data-stu-id="19702-128">Pronunciations specified in an external lexicon file take precedence over the pronunciations of the speech synthesizer's internal lexicon or dictionary.</span></span> <span data-ttu-id="19702-129">Однако произношение указанное встроенный в запросах, созданных с помощью любой из <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, или <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> методы имеют приоритет над произношение, указанный в любой лексики.</span><span class="sxs-lookup"><span data-stu-id="19702-129">However, pronunciations specified inline in prompts created with any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods take precedence over pronunciations specified in any lexicon.</span></span> <span data-ttu-id="19702-130">Встроенная произношение применяются только к одним вхождением слова.</span><span class="sxs-lookup"><span data-stu-id="19702-130">Inline pronunciations apply only to a single occurrence of a word.</span></span> <span data-ttu-id="19702-131">В разделе [словари и алфавитах фонетического](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) для получения дополнительной информации.</span><span class="sxs-lookup"><span data-stu-id="19702-131">See [Lexicons and Phonetic Alphabets](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) for more information.</span></span>  
  
 <span data-ttu-id="19702-132">Можно добавить несколько словари для <xref:System.Speech.Synthesis.SpeechSynthesizer> объекта. Два значения в настоящее время поддерживаются `mediaType` параметр:</span><span class="sxs-lookup"><span data-stu-id="19702-132">You can add multiple lexicons to a <xref:System.Speech.Synthesis.SpeechSynthesizer> object.Two values are currently supported for the `mediaType` parameter:</span></span>  
  
-   <span data-ttu-id="19702-133">Значение `application/pls+xml` указывает, соответствует лексики [спецификации лексики произношение (PLS) версии 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</span><span class="sxs-lookup"><span data-stu-id="19702-133">The value `application/pls+xml` indicates that the lexicon conforms to the [Pronunciation Lexicon Specification (PLS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</span></span> <span data-ttu-id="19702-134">Это предпочтительный формат для использования.</span><span class="sxs-lookup"><span data-stu-id="19702-134">This is the preferred format to use.</span></span>  
  
-   <span data-ttu-id="19702-135">Значение `application/vdn.ms-sapi-lex` указывает, что формат лексики несжатые лексикона, формат защитой прав собственности корпорации Майкрософт.</span><span class="sxs-lookup"><span data-stu-id="19702-135">The value `application/vdn.ms-sapi-lex` indicates that the lexicon format is Uncompressed Lexicon, which is a Microsoft-proprietary format.</span></span> <span data-ttu-id="19702-136">Это устаревший формат, и мы рекомендуем использовать формат PLS, описанных выше.</span><span class="sxs-lookup"><span data-stu-id="19702-136">This is a legacy format and we recommend that you use the PLS format described above.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-137">В следующем примере показано влияние добавления и удаления лексики, который содержит пользовательские произношение для слова «blue».</span><span class="sxs-lookup"><span data-stu-id="19702-137">The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word "blue".</span></span> <span data-ttu-id="19702-138">Правила определяет произношение «blue», похожей на «bleep».</span><span class="sxs-lookup"><span data-stu-id="19702-138">The lexicon defines the pronunciation of "blue" to sound like "bleep".</span></span> <span data-ttu-id="19702-139">Во время загрузки лексики синтезаторов речи использует произношение, определенные в лексиконе.</span><span class="sxs-lookup"><span data-stu-id="19702-139">While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Add a lexicon that changes the pronunciation of "blue".  
        synth.AddLexicon(new Uri("C:\\test\\Blue.pls"), "application/pls+xml");  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Remove the lexicon.  
        synth.RemoveLexicon(new Uri("C:\\test\\Blue.pls"));  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="19702-140">Ниже приведено содержимое файла лексики Blue.pls:</span><span class="sxs-lookup"><span data-stu-id="19702-140">Following are the contents of the lexicon file Blue.pls:</span></span>  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
  
<lexicon version="1.0"   
      xmlns="http://www.w3.org/2005/01/pronunciation-lexicon"  
      alphabet="x-microsoft-ups" xml:lang="en-US">  
  
  <lexeme>  
    <grapheme> blue </grapheme>  
    <phoneme> B L I P </phoneme>  
  </lexeme>  
  
</lexicon>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of BookmarkReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::BookmarkReachedEventArgs ^&gt; ^ BookmarkReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19702-141">Возникает, когда <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> встречает закладку в запросе.</span><span class="sxs-lookup"><span data-stu-id="19702-141">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encounters a bookmark in a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-142"><xref:System.Speech.Synthesis.SpeechSynthesizer> Это событие вызывается при обработке любого из <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, или <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-142">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="19702-143">Сведения о данных, связанный с событием, в разделе <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="19702-143">For information about data associated with the event, see <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span></span>  
  
 <span data-ttu-id="19702-144">Можно добавлять закладки с помощью <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-144">You can add bookmarks using the <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-145">В следующем примере создается запрос, включающий два закладки и отправляет выходные данные для воспроизведения WAV-файла.</span><span class="sxs-lookup"><span data-stu-id="19702-145">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="19702-146">Обработчик <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> событий записывает имя закладки и его положения в звуковой поток при возникновении события на консоль.</span><span class="sxs-lookup"><span data-stu-id="19702-146">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19702-147">Удаляет объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> и освобождает ресурсы, используемые во время сеанса.</span><span class="sxs-lookup"><span data-stu-id="19702-147">Disposes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object and releases resources used during the session.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SpeechSynthesizer ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19702-148">Является резервным вариантом очистки ресурсов в событии на тот случай, если метод <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> не будет вызван.</span><span class="sxs-lookup"><span data-stu-id="19702-148">Acts as a safeguard to clean up resources in the event that the <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> method is not called.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentlySpokenPrompt">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentlySpokenPrompt () As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ GetCurrentlySpokenPrompt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19702-149">Получает запрос, который указывает <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="19702-149">Gets the prompt that the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> is speaking.</span></span></summary>
        <returns><span data-ttu-id="19702-150">Возвращает запроса объект, который в данный момент говорится.</span><span class="sxs-lookup"><span data-stu-id="19702-150">Returns the prompt object that is currently being spoken.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstalledVoices">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="19702-151">Возвращает коллекцию голосов синтеза речи (текст в голос), которые в настоящее время установлены в системе.</span><span class="sxs-lookup"><span data-stu-id="19702-151">Returns the collection of speech synthesis (text-to-speech) voices that are currently installed on the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-152">Если приложение вызывает <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, метод проверяет каждый голоса (модули для преобразования текста в речь) найденные в реестре удовлетворяет определенным условиям, минимальное.</span><span class="sxs-lookup"><span data-stu-id="19702-152">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices (engines for text-to-speech) it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="19702-153">Для любого голоса, не прошедшей проверку <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> задает его <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойства `False`.</span><span class="sxs-lookup"><span data-stu-id="19702-153">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="19702-154">Приложение не может выбрать голос которого <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство `False`.</span><span class="sxs-lookup"><span data-stu-id="19702-154">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="19702-155">Как правило, приложения не задано голосовых <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="19702-155">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices () As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19702-156">Возвращает все установленные голоса синтеза речи (текст в речь).</span><span class="sxs-lookup"><span data-stu-id="19702-156">Returns all of the installed speech synthesis (text-to-speech) voices.</span></span></summary>
        <returns><span data-ttu-id="19702-157">Возвращает доступную только для чтения коллекцию голосов в данный момент установленных в системе.</span><span class="sxs-lookup"><span data-stu-id="19702-157">Returns a read-only collection of the voices currently installed on the system.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-158">Голоса — это ядро для синтеза речи (преобразования текста в речь или TTS), установленного в системе.</span><span class="sxs-lookup"><span data-stu-id="19702-158">A voice is an engine for speech synthesis (text-to-speech or TTS) that is installed on the system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-159">Следующий пример является частью консольное приложение, которое инициализирует <xref:System.Speech.Synthesis.SpeechSynthesizer> объекта и выводит на консоль список установленных голосов (модули для синтеза речи) и показывает информацию, которая доступна для каждого голоса.</span><span class="sxs-lookup"><span data-stu-id="19702-159">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices (culture As CultureInfo) As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="19702-160">Языковой стандарт, который должен поддерживаться голосом.</span><span class="sxs-lookup"><span data-stu-id="19702-160">The locale that the voice must support.</span></span></param>
        <summary><span data-ttu-id="19702-161">Возвращает все установленные голоса синтеза речи (преобразования текста в речь), которые поддерживают указанный языковой стандарт.</span><span class="sxs-lookup"><span data-stu-id="19702-161">Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</span></span></summary>
        <returns><span data-ttu-id="19702-162">Возвращает доступную только для чтения коллекцию голосов в данный момент установленных в системе, которые поддерживают указанный языковой стандарт.</span><span class="sxs-lookup"><span data-stu-id="19702-162">Returns a read-only collection of the voices currently installed on the system that support the specified locale.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-163">Если ни один из установленных голосов поддержки указанного языкового стандарта, этот метод возвращает пустую коллекцию.</span><span class="sxs-lookup"><span data-stu-id="19702-163">If none of the installed voices support the specified locale, this method returns an empty collection.</span></span>  
  
 <span data-ttu-id="19702-164">Microsoft Windows и System.Speech API принять все допустимые коды страны языка.</span><span class="sxs-lookup"><span data-stu-id="19702-164">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="19702-165">Для выполнения преобразования текста в речь на языке, указанном в свойстве языка и региональных параметров, необходимо установить модуль синтеза речи, который поддерживает этот код страны языка.</span><span class="sxs-lookup"><span data-stu-id="19702-165">To perform text-to-speech using the language specified in the Culture property, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="19702-166">Синтеза речи, которые поставляются с Microsoft Windows 7 работать со следующими кодами языка страны:</span><span class="sxs-lookup"><span data-stu-id="19702-166">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="19702-167">en US.</span><span class="sxs-lookup"><span data-stu-id="19702-167">en-US.</span></span> <span data-ttu-id="19702-168">Английский (США)</span><span class="sxs-lookup"><span data-stu-id="19702-168">English (United States)</span></span>  
  
-   <span data-ttu-id="19702-169">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="19702-169">zh-CN.</span></span> <span data-ttu-id="19702-170">Китайский (КНР)</span><span class="sxs-lookup"><span data-stu-id="19702-170">Chinese (China)</span></span>  
  
-   <span data-ttu-id="19702-171">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="19702-171">zh-TW.</span></span> <span data-ttu-id="19702-172">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="19702-172">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="19702-173">Также допускаются кодов языка двух букв, например «en».</span><span class="sxs-lookup"><span data-stu-id="19702-173">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-174">Следующий пример является частью консольное приложение, которое инициализирует <xref:System.Speech.Synthesis.SpeechSynthesizer> объекта и выводит на консоль список установленных голосов, которые поддерживают языковой стандарт en US.</span><span class="sxs-lookup"><span data-stu-id="19702-174">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.</span></span>  
  
```csharp  
using System;  
using System.Globalization;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices that  
        // support the en-US locacale.   
        Console.WriteLine("Installed voices for the en-US locale:");  
        foreach (InstalledVoice voice in  
          synthesizer.GetInstalledVoices(new CultureInfo("en-US")))  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          OutputVoiceInfo(info);  
        }  
  
        // Output information about the current voice.  
        Console.WriteLine();  
        Console.WriteLine("Current voice:");  
        OutputVoiceInfo(synthesizer.Voice);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Display information about a synthesizer voice.  
    private static void OutputVoiceInfo(VoiceInfo info)  
    {  
      Console.WriteLine("  Name: {0}, culture: {1}, gender: {2}, age: {3}.",  
        info.Name, info.Culture, info.Gender, info.Age);  
      Console.WriteLine("    Description: {0}", info.Description);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19702-175">Приостанавливает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="19702-175">Pauses the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="PhonemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PhonemeReached As EventHandler(Of PhonemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::PhonemeReachedEventArgs ^&gt; ^ PhonemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19702-176">Вызывается по достижении фонемы.</span><span class="sxs-lookup"><span data-stu-id="19702-176">Raised when a phoneme is reached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-177">Фонемы является основным компонентом письменного языка, обычно буквы алфавита (или сочетания из двух букв), представляющий один или несколько отдельных звуков.</span><span class="sxs-lookup"><span data-stu-id="19702-177">A phoneme is a basic component of written language, typically a letter of an alphabet (or the combination of two letters) that represents one or more distinct sounds.</span></span> <span data-ttu-id="19702-178">Например буква «c» является фонему, который может показаться как символ «s» из «шлакобетона» или как «k» в «catch».</span><span class="sxs-lookup"><span data-stu-id="19702-178">For example, the letter "c" is a phoneme that may sound like "s" in "cinder", or like "k" in "catch".</span></span> <span data-ttu-id="19702-179">Запись слово является сборка фонемы.</span><span class="sxs-lookup"><span data-stu-id="19702-179">A written word is an assemblage of phonemes.</span></span> <span data-ttu-id="19702-180">Изменение фонемы в слове приведут к изменению его написании.</span><span class="sxs-lookup"><span data-stu-id="19702-180">Changing a phoneme in a word will alter its spelling.</span></span>  
  
 <span data-ttu-id="19702-181">Объект <xref:System.Speech.Synthesis.SpeechSynthesizer> создает экземпляр <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> событий для каждой части слово, которое составляет фонемы.</span><span class="sxs-lookup"><span data-stu-id="19702-181">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instance generates a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event for each portion of a word that constitutes a phoneme.</span></span> <span data-ttu-id="19702-182">Например, для слова «тема» создал бы три <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> события: один для «th» звук, один для звука «e» и по одному для звук «m» (me).</span><span class="sxs-lookup"><span data-stu-id="19702-182">For example, for the word "theme" would generate three <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> events; one for the "th" sound, one for the "e" sound, and one for the "m" sound (me).</span></span>  
  
 <span data-ttu-id="19702-183">Например и сведения о данных, связанный с событием, в разделе <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="19702-183">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rate { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19702-184">Получает или задает скорость произношения объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="19702-184">Gets or sets the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="19702-185">Возвращает скорость произношения объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, от -10 до 10.</span><span class="sxs-lookup"><span data-stu-id="19702-185">Returns the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object, from -10 through 10.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19702-186">Следующий пример говорит строка с скорость озвучивания, значение -2.</span><span class="sxs-lookup"><span data-stu-id="19702-186">The following example speaks a string with the speaking rate set to -2.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Set a value for the speaking rate.  
      synth.Rate = -2;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a text string synchronously.  
      synth.Speak("This example speaks a string with the speaking rate set to -2.");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }     
  }    
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.PromptStyle" />
        <altmember cref="T:System.Speech.Synthesis.PromptRate" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public void RemoveLexicon (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLexicon(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLexicon(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="19702-187">Расположения документа лексикона.</span><span class="sxs-lookup"><span data-stu-id="19702-187">The location of the lexicon document.</span></span></param>
        <summary><span data-ttu-id="19702-188">Удаляет лексикон из объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="19702-188">Removes a lexicon from the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-189">Пример см. в разделе <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="19702-189">See <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19702-190">Возобновляет объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> после того, как он был приостановлен.</span><span class="sxs-lookup"><span data-stu-id="19702-190">Resumes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object after it has been paused.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoice">
      <MemberSignature Language="C#" Value="public void SelectVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoice(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="19702-191">Имя голоса для выбора.</span><span class="sxs-lookup"><span data-stu-id="19702-191">The name of the voice to select.</span></span></param>
        <summary><span data-ttu-id="19702-192">Выберите конкретный голос по имени.</span><span class="sxs-lookup"><span data-stu-id="19702-192">Selects a specific voice by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-193">Используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод и <xref:System.Speech.Synthesis.VoiceInfo> класс, чтобы получить имена установлены голоса преобразования текста в речь (TTS), которые можно выбрать.</span><span class="sxs-lookup"><span data-stu-id="19702-193">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="19702-194">Для выбора голоса, передайте все содержимое <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> свойство в качестве аргумента для <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-194">To select a voice, pass the entire contents of the <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> property as the argument for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span> <span data-ttu-id="19702-195"><xref:System.Speech.Synthesis.SpeechSynthesizer> Выбирает первый установленный голоса, который содержит `name` голосом <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="19702-195">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that contains `name` in the voice's <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="19702-196"><xref:System.Speech.Synthesis.SpeechSynthesizer> Выполняет сравнение с учетом регистра, substring для определения соответствия голос `name`.</span><span class="sxs-lookup"><span data-stu-id="19702-196">The <xref:System.Speech.Synthesis.SpeechSynthesizer> performs a case-sensitive, substring comparison to determine if the voice matches the `name`.</span></span>  
  
 <span data-ttu-id="19702-197">Если приложение вызывает <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, метод проверяет, каждый из голоса, он находит в реестре заданным критериям минимальное.</span><span class="sxs-lookup"><span data-stu-id="19702-197">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="19702-198">Для любого голоса, не прошедшей проверку <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> задает его <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойства `False`.</span><span class="sxs-lookup"><span data-stu-id="19702-198">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="19702-199">Приложение не может выбрать голос которого <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство `False`.</span><span class="sxs-lookup"><span data-stu-id="19702-199">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="19702-200">Как правило, приложения не задано голосовых <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="19702-200">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="19702-201">Для выбора голоса, пол, возраст или языкового стандарта, используйте один из <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-201">To select a voice by gender, age, or locale, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectVoiceByHints">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="19702-202">Выбирает голос с определенными свойствами.</span><span class="sxs-lookup"><span data-stu-id="19702-202">Selects a voice with specific characteristics.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-203">Используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод и <xref:System.Speech.Synthesis.VoiceInfo> класс, чтобы получить имена установлены голоса преобразования текста в речь (TTS), которые можно выбрать.</span><span class="sxs-lookup"><span data-stu-id="19702-203">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="19702-204"><xref:System.Speech.Synthesis.SpeechSynthesizer> Выбирает первый установленный голоса, который совпадает с заданными характеристиками.</span><span class="sxs-lookup"><span data-stu-id="19702-204">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that matches the specified characteristics.</span></span>  
  
 <span data-ttu-id="19702-205">Если приложение вызывает <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, метод проверяет, каждый из голоса, он находит в реестре заданным критериям минимальное.</span><span class="sxs-lookup"><span data-stu-id="19702-205">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="19702-206">Для любого голоса, не прошедшей проверку <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> задает его <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойства `False`.</span><span class="sxs-lookup"><span data-stu-id="19702-206">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="19702-207">Приложение не может выбрать голос которого <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство `False`.</span><span class="sxs-lookup"><span data-stu-id="19702-207">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="19702-208">Как правило, приложения не задано голосовых <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="19702-208">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="19702-209">Для выбора голоса по имени, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> метод</span><span class="sxs-lookup"><span data-stu-id="19702-209">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="19702-210">Пол выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="19702-210">The gender of the voice to select.</span></span></param>
        <summary><span data-ttu-id="19702-211">Выбирает голос с определенным полом.</span><span class="sxs-lookup"><span data-stu-id="19702-211">Selects a voice with a specific gender.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-212">Используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод и <xref:System.Speech.Synthesis.VoiceInfo> класс, чтобы получить имена установлены голоса преобразования текста в речь (TTS), которые можно выбрать.</span><span class="sxs-lookup"><span data-stu-id="19702-212">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="19702-213"><xref:System.Speech.Synthesis.SpeechSynthesizer> Выбирает первый установленных голосовых которого <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> совпадений свойство `gender` параметр.</span><span class="sxs-lookup"><span data-stu-id="19702-213">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property matches the `gender` parameter.</span></span>  
  
 <span data-ttu-id="19702-214">Если приложение вызывает <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, метод проверяет, каждый из голоса, он находит в реестре заданным критериям минимальное.</span><span class="sxs-lookup"><span data-stu-id="19702-214">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="19702-215">Для любого голоса, не прошедшей проверку <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> задает его <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойства `False`.</span><span class="sxs-lookup"><span data-stu-id="19702-215">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="19702-216">Приложение не может выбрать голос которого <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство `False`.</span><span class="sxs-lookup"><span data-stu-id="19702-216">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="19702-217">Как правило, приложения не задано голосовых <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="19702-217">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="19702-218">Для выбора голоса, на основе других характеристик см. другой <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-218">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="19702-219">Для выбора голоса по имени, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-219">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="19702-220">Пол выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="19702-220">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="19702-221">Возраст выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="19702-221">The age of the voice to select.</span></span></param>
        <summary><span data-ttu-id="19702-222">Выбирает голос с конкретным полом и возрастом.</span><span class="sxs-lookup"><span data-stu-id="19702-222">Selects a voice with a specific gender and age.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-223">Используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод и <xref:System.Speech.Synthesis.VoiceInfo> класс, чтобы получить имена установлены голоса преобразования текста в речь (TTS), которые можно выбрать.</span><span class="sxs-lookup"><span data-stu-id="19702-223">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="19702-224"><xref:System.Speech.Synthesis.SpeechSynthesizer> Выбирает первый установленных голосовых которого <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> и <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> соответствия свойства `gender` и `age` параметров.</span><span class="sxs-lookup"><span data-stu-id="19702-224">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span>  
  
 <span data-ttu-id="19702-225">Если приложение вызывает <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, метод проверяет, каждый из голоса, он находит в реестре заданным критериям минимальное.</span><span class="sxs-lookup"><span data-stu-id="19702-225">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="19702-226">Для любого голоса, не прошедшей проверку <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> задает его <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойства `False`.</span><span class="sxs-lookup"><span data-stu-id="19702-226">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="19702-227">Приложение не может выбрать голос которого <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство `False`.</span><span class="sxs-lookup"><span data-stu-id="19702-227">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="19702-228">Как правило, приложения не задано голосовых <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="19702-228">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="19702-229">Для выбора голоса, на основе других характеристик см. другой <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-229">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="19702-230">Для выбора голоса по имени, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-230">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="19702-231">Пол выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="19702-231">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="19702-232">Возраст выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="19702-232">The age of the voice to select.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="19702-233">Позиция выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="19702-233">The position of the voice to select.</span></span></param>
        <summary><span data-ttu-id="19702-234">Выбирает голос с определенными полом и возрастом, в зависимости от позиции, в которой упорядочиваются голоса.</span><span class="sxs-lookup"><span data-stu-id="19702-234">Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-235">Используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод и <xref:System.Speech.Synthesis.VoiceInfo> класс, чтобы получить имена установлены голоса преобразования текста в речь (TTS), которые можно выбрать.</span><span class="sxs-lookup"><span data-stu-id="19702-235">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="19702-236"><xref:System.Speech.Synthesis.SpeechSynthesizer> Объекта, находит установлен voices которого <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> и <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> соответствия свойства `gender` и `age` параметров.</span><span class="sxs-lookup"><span data-stu-id="19702-236">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds installed voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span> <span data-ttu-id="19702-237"><xref:System.Speech.Synthesis.SpeechSynthesizer> Количество совпадений, он находит и возвращает голос, если счетчик равен `voiceAlternate` параметра.</span><span class="sxs-lookup"><span data-stu-id="19702-237">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="19702-238">Если приложение вызывает <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, метод проверяет, каждый из голоса, он находит в реестре заданным критериям минимальное.</span><span class="sxs-lookup"><span data-stu-id="19702-238">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="19702-239">Для любого голоса, не прошедшей проверку <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> задает его <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойства `False`.</span><span class="sxs-lookup"><span data-stu-id="19702-239">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="19702-240">Приложение не может выбрать голос которого <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство `False`.</span><span class="sxs-lookup"><span data-stu-id="19702-240">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="19702-241">Как правило, приложения не задано голосовых <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="19702-241">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="19702-242">Для выбора голоса, на основе других характеристик см. другой <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="19702-242">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="19702-243">Для выбора голоса по имени, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-243">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="19702-244">Пол выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="19702-244">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="19702-245">Возраст выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="19702-245">The age of the voice to select.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="19702-246">Позиция выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="19702-246">The position of the voice to select.</span></span></param>
        <param name="culture"><span data-ttu-id="19702-247">Языковой стандарт выбираемого голоса.</span><span class="sxs-lookup"><span data-stu-id="19702-247">The locale of the voice to select.</span></span></param>
        <summary><span data-ttu-id="19702-248">Выбирает голос с определенными полом, возрастом и Языковым стандартом, в зависимости от позиции, в которой упорядочиваются голоса.</span><span class="sxs-lookup"><span data-stu-id="19702-248">Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-249"><xref:System.Speech.Synthesis.SpeechSynthesizer> Объекта, находит voices которого <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, и <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> соответствия свойства `gender`, `age`, и `culture` параметров.</span><span class="sxs-lookup"><span data-stu-id="19702-249">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, and <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> properties match the `gender`, `age`, and `culture` parameters.</span></span> <span data-ttu-id="19702-250"><xref:System.Speech.Synthesis.SpeechSynthesizer> Количество совпадений, он находит и возвращает голос, если счетчик равен `voiceAlternate` параметра.</span><span class="sxs-lookup"><span data-stu-id="19702-250">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="19702-251">Microsoft Windows и System.Speech API принять все допустимые коды страны языка.</span><span class="sxs-lookup"><span data-stu-id="19702-251">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="19702-252">Для выполнения преобразования текста в речь, с помощью языка, заданного параметром `culture` параметр, синтеза речи, поддерживающий, что код страны языка должны быть установлены.</span><span class="sxs-lookup"><span data-stu-id="19702-252">To perform text-to-speech using the language specified in the `culture` parameter, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="19702-253">Синтеза речи, которые поставляются с Microsoft Windows 7 работать со следующими кодами языка страны:</span><span class="sxs-lookup"><span data-stu-id="19702-253">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="19702-254">en US.</span><span class="sxs-lookup"><span data-stu-id="19702-254">en-US.</span></span> <span data-ttu-id="19702-255">Английский (США)</span><span class="sxs-lookup"><span data-stu-id="19702-255">English (United States)</span></span>  
  
-   <span data-ttu-id="19702-256">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="19702-256">zh-CN.</span></span> <span data-ttu-id="19702-257">Китайский (КНР)</span><span class="sxs-lookup"><span data-stu-id="19702-257">Chinese (China)</span></span>  
  
-   <span data-ttu-id="19702-258">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="19702-258">zh-TW.</span></span> <span data-ttu-id="19702-259">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="19702-259">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="19702-260">Также допускаются кодов языка двух букв, например «en».</span><span class="sxs-lookup"><span data-stu-id="19702-260">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 <span data-ttu-id="19702-261">Если приложение вызывает <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, метод проверяет, каждый из голоса, он находит в реестре заданным критериям минимальное.</span><span class="sxs-lookup"><span data-stu-id="19702-261">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="19702-262">Для любого голоса, не прошедшей проверку <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> задает его <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойства `False`.</span><span class="sxs-lookup"><span data-stu-id="19702-262">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="19702-263">Приложение не может выбрать голос которого <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство `False`.</span><span class="sxs-lookup"><span data-stu-id="19702-263">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="19702-264">Как правило, приложения не задано голосовых <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="19702-264">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="19702-265">Для выбора голоса, на основе других характеристик см. другой <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="19702-265">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="19702-266">Для выбора голоса по имени, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-266">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToAudioStream">
      <MemberSignature Language="C#" Value="public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToAudioStream(class System.IO.Stream audioDestination, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToAudioStream (audioDestination As Stream, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToAudioStream(System::IO::Stream ^ audioDestination, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="audioDestination"><span data-ttu-id="19702-267">Поток, в который требуется добавить выходные данные синтеза.</span><span class="sxs-lookup"><span data-stu-id="19702-267">The stream to which to append synthesis output.</span></span></param>
        <param name="formatInfo"><span data-ttu-id="19702-268">Формат для использования с выходными данными синтеза.</span><span class="sxs-lookup"><span data-stu-id="19702-268">The format to use for the synthesis output.</span></span></param>
        <summary><span data-ttu-id="19702-269">Настраивает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> для добавления выходных данных в аудиопоток.</span><span class="sxs-lookup"><span data-stu-id="19702-269">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to an audio stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-270">Вызовите <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> для освобождения <xref:System.Speech.Synthesis.SpeechSynthesizer>ссылку на поток.</span><span class="sxs-lookup"><span data-stu-id="19702-270">Call <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the stream.</span></span>  
  
 <span data-ttu-id="19702-271">Другие выходные данные настройки в разделе <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, и <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-271">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToDefaultAudioDevice">
      <MemberSignature Language="C#" Value="public void SetOutputToDefaultAudioDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToDefaultAudioDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToDefaultAudioDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToDefaultAudioDevice();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19702-272">Настраивает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> для отправки выходных данных в аудиоустройство по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="19702-272">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to send output to the default audio device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-273">Можно использовать **звук** окна в Windows **панели управления** Настройка звуковое устройство по умолчанию для компьютера.</span><span class="sxs-lookup"><span data-stu-id="19702-273">You can use the  **Sound** window in the Windows **Control Panel** to configure the default audio device for the computer.</span></span>  
  
 <span data-ttu-id="19702-274">Другие выходные данные настройки в разделе <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, и <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-274">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-275">В следующем примере синтезатора речи фразы в аудио выход по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="19702-275">The following example uses the synthesizer to speak a phrase to the default audio output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the synthesizer to send output to the default audio device.  
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToNull">
      <MemberSignature Language="C#" Value="public void SetOutputToNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToNull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19702-276">Настраивает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, чтобы не отправлять выходные данные из операций синтеза в устройство, файл или поток.</span><span class="sxs-lookup"><span data-stu-id="19702-276">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to not send output from synthesis operations to a device, file, or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-277">Используйте этот метод для освобождения <xref:System.Speech.Synthesis.SpeechSynthesizer> ссылку на файл или поток.</span><span class="sxs-lookup"><span data-stu-id="19702-277">Use this method to release the <xref:System.Speech.Synthesis.SpeechSynthesizer> ‘s reference to a file or stream.</span></span> <span data-ttu-id="19702-278">Пример см. в разделе <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="19702-278">See <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> for an example.</span></span>  
  
 <span data-ttu-id="19702-279">Другие выходные данные настройки в разделе <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, и <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-279">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputToWaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="19702-280">Настраивает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> для добавления выходных данных в файла аудиоданных в формате WAV.</span><span class="sxs-lookup"><span data-stu-id="19702-280">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-281">Чтобы освободить <xref:System.Speech.Synthesis.SpeechSynthesizer>ссылки в файле, перенастройте <xref:System.Speech.Synthesis.SpeechSynthesizer>выходных данных, например, путем вызова <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="19702-281">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the file, reconfigure the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="19702-282">Другие выходные данные настройки в разделе <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, и <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-282">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="19702-283">Путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="19702-283">The path to the file.</span></span></param>
        <summary><span data-ttu-id="19702-284">Настраивает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> для добавления выходных данных в файл, содержащий данные в формате WAV.</span><span class="sxs-lookup"><span data-stu-id="19702-284">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a file that contains Waveform format audio.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-285">Чтобы настроить вывод и указать формат аудио, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-285">To configure the output and specify the audio format, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-286">В следующем примере используется экземпляр <xref:System.Media.SoundPlayer> воспроизведение приглашение, которое было выходные данные в формате WAV-файл.</span><span class="sxs-lookup"><span data-stu-id="19702-286">The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file.</span></span> <span data-ttu-id="19702-287">Поскольку <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> вызов выполняется асинхронно, <xref:System.Media.SoundPlayer> создается экземпляр (и <xref:System.Media.SoundPlayer.Play%2A> метод, вызываемый) в обработчике <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> событий.</span><span class="sxs-lookup"><span data-stu-id="19702-287">Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToWaveFile(@"C:\Test\Sample.wav");  
  
      // Register for the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Build a prompt.  
      PromptBuilder builder = new PromptBuilder();  
      builder.AppendText("This sample asynchronously speaks a prompt to a WAVE file.");  
  
      // Speak the string asynchronously.  
      synth.SpeakAsync(builder);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Handle the SpeakCompleted event.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
  
      // Create a SoundPlayer instance to play the output audio file.  
      System.Media.SoundPlayer m_SoundPlayer =  
        new System.Media.SoundPlayer(@"C:\Test\Sample.wav");  
  
      //  Play the output file.  
      m_SoundPlayer.Play();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="19702-288">Путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="19702-288">The path to the file.</span></span></param>
        <param name="formatInfo"><span data-ttu-id="19702-289">Сведения об аудиоформате.</span><span class="sxs-lookup"><span data-stu-id="19702-289">The audio format information.</span></span></param>
        <summary><span data-ttu-id="19702-290">Настраивает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> для добавления выходных данных в файл с аудиоданными определенного формата.</span><span class="sxs-lookup"><span data-stu-id="19702-290">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file in a specified format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19702-291">В следующем примере указывает формат вывода синтеза речи и отправляет его WAV-файла.</span><span class="sxs-lookup"><span data-stu-id="19702-291">The following example specifies the format of the output of speech synthesis and sends it to a WAV file.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveStream">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveStream (System.IO.Stream audioDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveStream(class System.IO.Stream audioDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveStream (audioDestination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveStream(System::IO::Stream ^ audioDestination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioDestination"><span data-ttu-id="19702-292">Поток, в который требуется добавить выходные данные синтеза.</span><span class="sxs-lookup"><span data-stu-id="19702-292">The stream to which to append synthesis output.</span></span></param>
        <summary><span data-ttu-id="19702-293">Настраивает объект <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> для добавления выходных данных в поток содержащий данные в формате WAV.</span><span class="sxs-lookup"><span data-stu-id="19702-293">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a stream that contains Waveform format audio.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-294">Чтобы освободить <xref:System.Speech.Synthesis.SpeechSynthesizer>ссылки для потока, reconfigure синтезатору выходных данных, например, путем вызова <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="19702-294">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s reference to the stream, reconfigure the synthesizer's output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="19702-295">Другие выходные данные настройки в разделе <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, и <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-295">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-296">В следующем примере выводится фразу поток WAV-файла.</span><span class="sxs-lookup"><span data-stu-id="19702-296">The following example outputs a phrase to a WAV stream.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      using (MemoryStream stream = new MemoryStream())  
      {  
  
        // Create a SoundPlayer instance to play the output audio file.  
        MemoryStream streamAudio = new MemoryStream();  
        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  
  
        // Configure the synthesizer to output to an audio stream.  
        synth.SetOutputToWaveStream(streamAudio);  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
        streamAudio.Position = 0;  
        m_SoundPlayer.Stream = streamAudio;  
        m_SoundPlayer.Play();  
  
        // Set the synthesizer output to null to release the stream.   
        synth.SetOutputToNull();  
  
        // Insert code to persist or process the stream contents here.  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Speak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="19702-297">Создает речевой вывод синхронно из строки, объекта <see cref="T:System.Speech.Synthesis.Prompt" /> или объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="19702-297">Generates speech output synchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-298"><xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> Методы создания речи синхронно.</span><span class="sxs-lookup"><span data-stu-id="19702-298">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods generate speech synchronously.</span></span> <span data-ttu-id="19702-299">Методы не возвращают до содержимое <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> полностью произносятся экземпляра.</span><span class="sxs-lookup"><span data-stu-id="19702-299">The methods do not return until the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance has been completely spoken.</span></span> <span data-ttu-id="19702-300">Это самый простой способ создания речи.</span><span class="sxs-lookup"><span data-stu-id="19702-300">This is the simplest way to generate speech.</span></span> <span data-ttu-id="19702-301">Тем не менее, если приложению требуется выполнять задачи, когда они говорят, например выделения текста, paint анимации, элементы управления или других задач, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> методы или <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> метод для создания речи асинхронно.</span><span class="sxs-lookup"><span data-stu-id="19702-301">However, if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method to generate speech asynchronously.</span></span>  
  
 <span data-ttu-id="19702-302">При вызове этого метода <xref:System.Speech.Synthesis.SpeechSynthesizer> может инициировать следующие события:</span><span class="sxs-lookup"><span data-stu-id="19702-302">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="19702-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="19702-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="19702-304">Вызывается, когда изменяется состояние синтезатора речи.</span><span class="sxs-lookup"><span data-stu-id="19702-304">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="19702-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="19702-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="19702-306">Вызывается, когда начинается синтезатора речи создания.</span><span class="sxs-lookup"><span data-stu-id="19702-306">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="19702-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="19702-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="19702-308">Возникает каждый раз, когда достигает синтезатору буквы или сочетание букв, которые составляют отдельные значения звука речи на языке.</span><span class="sxs-lookup"><span data-stu-id="19702-308">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="19702-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="19702-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="19702-310">Возникает каждый раз при синтезатору завершает произношения слова.</span><span class="sxs-lookup"><span data-stu-id="19702-310">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="19702-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="19702-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="19702-312">Возникает каждый раз, текст требует изменения положения лицу или мышцы лиц, используемую для создания речи.</span><span class="sxs-lookup"><span data-stu-id="19702-312">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="19702-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="19702-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="19702-314">Вызывается, когда синтезатору обнаруживает закладки в строке.</span><span class="sxs-lookup"><span data-stu-id="19702-314">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="19702-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="19702-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="19702-316">Возникает при изменении голоса для синтезатора.</span><span class="sxs-lookup"><span data-stu-id="19702-316">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="19702-317"><xref:System.Speech.Synthesis.SpeechSynthesizer> Не вызывает <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> событий во время обработки всех <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> методов.</span><span class="sxs-lookup"><span data-stu-id="19702-317">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="19702-318">Содержимое для озвучки.</span><span class="sxs-lookup"><span data-stu-id="19702-318">The content to speak.</span></span></param>
        <summary><span data-ttu-id="19702-319">Синхронно произносит содержимое объекта <see cref="T:System.Speech.Synthesis.Prompt" />.</span><span class="sxs-lookup"><span data-stu-id="19702-319">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-320">Чтобы асинхронно обратиться содержимое <xref:System.Speech.Synthesis.Prompt> , используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="19702-320">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-321">В следующем примере создается <xref:System.Speech.Synthesis.Prompt> объекта из строки и передает объект в качестве аргумента для <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-321">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="19702-322">Содержимое для озвучки.</span><span class="sxs-lookup"><span data-stu-id="19702-322">The content to speak.</span></span></param>
        <summary><span data-ttu-id="19702-323">Синхронно произносит содержимое объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="19702-323">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-324">Чтобы асинхронно обратиться содержимое <xref:System.Speech.Synthesis.PromptBuilder> , используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="19702-324">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-325">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объекта из строки и передает объект в качестве аргумента для <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-325">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder song = new PromptBuilder();  
        song.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(song);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="19702-326">Текст для озвучки.</span><span class="sxs-lookup"><span data-stu-id="19702-326">The text to speak.</span></span></param>
        <summary><span data-ttu-id="19702-327">Синхронно произносит содержимое строки.</span><span class="sxs-lookup"><span data-stu-id="19702-327">Synchronously speaks the contents of a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-328">Чтобы синхронно говорят строка, содержащая разметку SSML, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-328">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="19702-329">Чтобы асинхронно обратиться содержимого строки, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-329">To asynchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-330">Как показано в следующем примере <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> метод предоставляет простейший средства для создания синхронно вывода речи.</span><span class="sxs-lookup"><span data-stu-id="19702-330">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method provides the simplest means to generate speech output synchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a string synchronously.  
        synth.Speak("What is your favorite color?");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SpeakAsync">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="19702-331">Создает речевой вывод асинхронно из строки, объекта <see cref="T:System.Speech.Synthesis.Prompt" /> или объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="19702-331">Generates speech output asynchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-332"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> Методы создания речи асинхронно.</span><span class="sxs-lookup"><span data-stu-id="19702-332">The <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods generate speech asynchronously.</span></span> <span data-ttu-id="19702-333">Они возвращают немедленно без ожидания содержимое <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> завершения произношения.</span><span class="sxs-lookup"><span data-stu-id="19702-333">The methods return immediately without waiting for the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> object to finish speaking.</span></span> <span data-ttu-id="19702-334">Используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> Если приложению требуется выполнять задачи, когда они говорят, например выделение текста, рисования анимации, элементы управления или другие задачи.</span><span class="sxs-lookup"><span data-stu-id="19702-334">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks.</span></span>  
  
 <span data-ttu-id="19702-335">При вызове этого метода <xref:System.Speech.Synthesis.SpeechSynthesizer> может инициировать следующие события:</span><span class="sxs-lookup"><span data-stu-id="19702-335">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="19702-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="19702-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="19702-337">Вызывается, когда изменяется состояние синтезатора речи.</span><span class="sxs-lookup"><span data-stu-id="19702-337">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="19702-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="19702-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="19702-339">Вызывается, когда начинается синтезатора речи создания.</span><span class="sxs-lookup"><span data-stu-id="19702-339">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="19702-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="19702-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="19702-341">Возникает каждый раз, когда достигает синтезатору буквы или сочетание букв, которые составляют отдельные значения звука речи на языке.</span><span class="sxs-lookup"><span data-stu-id="19702-341">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="19702-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="19702-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="19702-343">Возникает каждый раз при синтезатору завершает произношения слова.</span><span class="sxs-lookup"><span data-stu-id="19702-343">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="19702-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="19702-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="19702-345">Возникает каждый раз, текст требует изменения положения лицу или мышцы лиц, используемую для создания речи.</span><span class="sxs-lookup"><span data-stu-id="19702-345">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="19702-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="19702-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="19702-347">Вызывается, когда синтезатору обнаруживает закладки в строке.</span><span class="sxs-lookup"><span data-stu-id="19702-347">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="19702-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="19702-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="19702-349">Возникает при изменении голоса для синтезатора.</span><span class="sxs-lookup"><span data-stu-id="19702-349">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="19702-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="19702-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="19702-351">Возникает при завершении синтезатору <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> операции.</span><span class="sxs-lookup"><span data-stu-id="19702-351">Raised when the synthesizer finishes a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="19702-352">Если приложения не требуется выполнять задачи, когда они говорят, можно использовать <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> методы или <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> метод для создания речи синхронно.</span><span class="sxs-lookup"><span data-stu-id="19702-352">If your application does not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsync(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsync(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="19702-353">Содержимое для озвучки.</span><span class="sxs-lookup"><span data-stu-id="19702-353">The content to speak.</span></span></param>
        <summary><span data-ttu-id="19702-354">Асинхронно указывает содержимое объекта <see cref="T:System.Speech.Synthesis.Prompt" />.</span><span class="sxs-lookup"><span data-stu-id="19702-354">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-355">Вы можете отменить асинхронную говоря о строке с <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> или <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-355">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
 <span data-ttu-id="19702-356">Синхронно оперировать содержимое <xref:System.Speech.Synthesis.Prompt> , используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="19702-356">To synchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-357">В следующем примере создается <xref:System.Speech.Synthesis.Prompt> объекта из строки и передает объект в качестве аргумента для <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-357">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a prompt from a string.  
      Prompt color = new Prompt("What is your favorite color?");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(color);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="19702-358">Содержимое для озвучки.</span><span class="sxs-lookup"><span data-stu-id="19702-358">The content to speak.</span></span></param>
        <summary><span data-ttu-id="19702-359">Асинхронно указывает содержимое объекта <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="19702-359">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="19702-360">Возвращает объект, в котором находится содержимое для произношения.</span><span class="sxs-lookup"><span data-stu-id="19702-360">Returns the object that contains the content to speak.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-361">Синхронно оперировать содержимое <xref:System.Speech.Synthesis.PromptBuilder> , используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="19702-361">To synchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-362">В следующем примере создается <xref:System.Speech.Synthesis.PromptBuilder> объекта из строки и передает объект в качестве аргумента для <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-362">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a PromptBuilder object and append a text string.  
      PromptBuilder song = new PromptBuilder();  
      song.AppendText("Say the name of the song you want to hear");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(song);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="19702-363">Текст для озвучки.</span><span class="sxs-lookup"><span data-stu-id="19702-363">The text to speak.</span></span></param>
        <summary><span data-ttu-id="19702-364">Асинхронно указывает содержимое строки.</span><span class="sxs-lookup"><span data-stu-id="19702-364">Asynchronously speaks the contents of a string.</span></span></summary>
        <returns><span data-ttu-id="19702-365">Возвращает объект, в котором находится содержимое для произношения.</span><span class="sxs-lookup"><span data-stu-id="19702-365">Returns the object that contains the content to speak.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-366">Чтобы асинхронно обратиться строка, содержащая разметку SSML, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-366">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="19702-367">Чтобы синхронно говорят содержимого строки, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-367">To synchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span> <span data-ttu-id="19702-368">Вы можете отменить асинхронную говоря о строке с <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> или <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-368">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-369">Как показано в следующем примере <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> метод обеспечивает простой средства для создания асинхронного вывода речи.</span><span class="sxs-lookup"><span data-stu-id="19702-369">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method provides the simplest means to generate speech output asynchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancel">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancel(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancel(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="19702-370">Содержимое, для которого нужно отменить операцию произношения.</span><span class="sxs-lookup"><span data-stu-id="19702-370">The content for which to cancel a speak operation.</span></span></param>
        <summary><span data-ttu-id="19702-371">Отменяет асинхронную операцию синтеза для запроса в очереди.</span><span class="sxs-lookup"><span data-stu-id="19702-371">Cancels the asynchronous synthesis operation for a queued prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-372">Этот метод также можно использовать для отмены асинхронного говорят на операцию для выполнения следующего:</span><span class="sxs-lookup"><span data-stu-id="19702-372">You can also use this method to cancel an asynchronous speak operation for the following:</span></span>  
  
-   <span data-ttu-id="19702-373">Содержимое <xref:System.String> заданные <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-373">The contents of a <xref:System.String> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="19702-374">Содержимое <xref:System.Speech.Synthesis.PromptBuilder> заданные <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-374">The contents of a <xref:System.Speech.Synthesis.PromptBuilder> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="19702-375">Содержимое <xref:System.String> содержащий SSML, определяемое <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-375">The contents of a <xref:System.String> containing SSML specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span>  
  
 <span data-ttu-id="19702-376">При вызове <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, или <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, создает System.Speech <xref:System.Speech.Synthesis.Prompt> и заполняет ее содержимое параметра метода и возвращает <xref:System.Speech.Synthesis.Prompt> объекта.</span><span class="sxs-lookup"><span data-stu-id="19702-376">When you call <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech creates a <xref:System.Speech.Synthesis.Prompt> object and populates it with the contents of the method's parameter, and returns the <xref:System.Speech.Synthesis.Prompt> object.</span></span> <span data-ttu-id="19702-377">Если вы сохраните копию возвращаемый <xref:System.Speech.Synthesis.Prompt>, можно передать его в <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> отменить озвучивания содержимого, заданного в <xref:System.String> или <xref:System.Speech.Synthesis.PromptBuilder> объекта.</span><span class="sxs-lookup"><span data-stu-id="19702-377">If you retain a copy of the returned <xref:System.Speech.Synthesis.Prompt>, you can pass it into <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> to cancel speaking content specified in a <xref:System.String> or a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancelAll">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancelAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancelAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancelAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19702-378">Отменяет все асинхронные операции синтеза речи, в очереди.</span><span class="sxs-lookup"><span data-stu-id="19702-378">Cancels all queued, asynchronous, speech synthesis operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19702-379">В следующем примере показано использование <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> для отмены асинхронного говоря в строке, чтобы можно произнести новую строку.</span><span class="sxs-lookup"><span data-stu-id="19702-379">The following example show a use of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken.</span></span> <span data-ttu-id="19702-380">Обратите внимание, что <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> событие возникает при <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> операция отменена.</span><span class="sxs-lookup"><span data-stu-id="19702-380">Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Threading;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the StateChanged event.  
      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
      // Subscribe to the SpeakProgress event.  
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Subscribe to the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Begin speaking a text string asynchronously.  
      synth.SpeakAsync("Speech is an effective and natural way for people to interact with applications, " +  
        "complementing or even replacing the use of mice, keyboards, controllers, and gestures.");  
  
      // Speak for four seconds.  
      Thread.Sleep(4000);  
  
      // Cancel the SpeakAsync operation and wait one second.  
      synth.SpeakAsyncCancelAll();  
      Thread.Sleep(1000);  
  
      // Speak a new text string.  
      synth.Speak("An urgent email message has arrived. Do you want to hear it?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write to the console when the SpeakAsync operation has been cancelled.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
      Console.WriteLine("\nThe SpeakAsync operation was cancelled!!");  
    }  
  
    // When it changes, write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("\nSynthesizer State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the text being spoken by the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }      
  }    
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakCompleted As EventHandler(Of SpeakCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakCompletedEventArgs ^&gt; ^ SpeakCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19702-381">Возникает, когда <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> завершает воспроизводить запрос.</span><span class="sxs-lookup"><span data-stu-id="19702-381">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completes the speaking of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-382"><xref:System.Speech.Synthesis.SpeechSynthesizer> Вызывает <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> событий по завершении любого <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> или <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-382">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event at the completion of any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> or  <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="19702-383"><xref:System.Speech.Synthesis.SpeakCompletedEventArgs> Класс не имеет параметров и не возвращает данные из <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> событий.</span><span class="sxs-lookup"><span data-stu-id="19702-383">The <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span> <span data-ttu-id="19702-384">Он предоставляется для обеспечения разработчикам приложений записи обработчиков событий для <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> события.</span><span class="sxs-lookup"><span data-stu-id="19702-384">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SpeakProgress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakProgress As EventHandler(Of SpeakProgressEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakProgressEventArgs ^&gt; ^ SpeakProgress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19702-385">Возникает после того, как <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> сообщает каждое отдельное слово запроса.</span><span class="sxs-lookup"><span data-stu-id="19702-385">Raised after the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> speaks each individual word of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-386"><xref:System.Speech.Synthesis.SpeechSynthesizer> Вызывает это событие для каждого нового слова, он говорит в командной строке, с помощью любого из <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, или <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-386">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="19702-387">Дополнительные сведения о данных, связанный с событием и пример см. <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="19702-387">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsml">
      <MemberSignature Language="C#" Value="public void SpeakSsml (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakSsml(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakSsml (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakSsml(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="19702-388">Строка SSML для озвучки.</span><span class="sxs-lookup"><span data-stu-id="19702-388">The SSML string to speak.</span></span></param>
        <summary><span data-ttu-id="19702-389">Синхронно произносит <see cref="T:System.String" />, содержащий разметку SSML.</span><span class="sxs-lookup"><span data-stu-id="19702-389">Synchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-390">Содержимое `textToSpeak` необходимо включить параметр `speak` элемент и должны соответствовать [язык разметки синтеза речи (SSML) версии 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="19702-390">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="19702-391">Дополнительные сведения см. в разделе [языка разметки синтеза речи](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="19702-391">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="19702-392">Чтобы асинхронно обратиться строка, содержащая разметку SSML, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-392">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="19702-393">Можно использовать <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> для инициирования синхронные говоря о строке, которая содержит разметку SSML.</span><span class="sxs-lookup"><span data-stu-id="19702-393">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> to initiate the synchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="19702-394">При вызове этого метода <xref:System.Speech.Synthesis.SpeechSynthesizer> может инициировать следующие события:</span><span class="sxs-lookup"><span data-stu-id="19702-394">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="19702-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="19702-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="19702-396">Вызывается, когда изменяется состояние синтезатора речи.</span><span class="sxs-lookup"><span data-stu-id="19702-396">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="19702-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="19702-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="19702-398">Вызывается, когда начинается синтезатора речи создания.</span><span class="sxs-lookup"><span data-stu-id="19702-398">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="19702-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="19702-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="19702-400">Возникает каждый раз, когда достигает синтезатору буквы или сочетание букв, которые составляют отдельные значения звука речи на языке.</span><span class="sxs-lookup"><span data-stu-id="19702-400">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="19702-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="19702-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="19702-402">Возникает каждый раз при синтезатору завершает произношения слова.</span><span class="sxs-lookup"><span data-stu-id="19702-402">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="19702-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="19702-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="19702-404">Возникает каждый раз, текст требует изменения положения лицу или мышцы лиц, используемую для создания речи.</span><span class="sxs-lookup"><span data-stu-id="19702-404">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="19702-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="19702-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="19702-406">Вызывается, когда синтезатору обнаруживает закладки в строке.</span><span class="sxs-lookup"><span data-stu-id="19702-406">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="19702-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="19702-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="19702-408">Возникает при изменении голоса для синтезатора.</span><span class="sxs-lookup"><span data-stu-id="19702-408">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="19702-409"><xref:System.Speech.Synthesis.SpeechSynthesizer> Не вызывает <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> событий при обработке <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-409">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-410">Следующий пример отображает дату 1/29/2009 как даты в месяц, день, год заказа.</span><span class="sxs-lookup"><span data-stu-id="19702-410">The following example renders the date 1/29/2009 as a date, in month, day, year order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsml(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakSsmlAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakSsmlAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="19702-411">Разметка SMML для разговора.</span><span class="sxs-lookup"><span data-stu-id="19702-411">The SMML markup to speak.</span></span></param>
        <summary><span data-ttu-id="19702-412">Асинхронно сообщает <see cref="T:System.String" />, содержащий разметку SSML.</span><span class="sxs-lookup"><span data-stu-id="19702-412">Asynchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-413">Содержимое `textToSpeak` необходимо включить параметр `speak` элемент и должны соответствовать [язык разметки синтеза речи (SSML) версии 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="19702-413">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="19702-414">Дополнительные сведения см. в разделе [языка разметки синтеза речи](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="19702-414">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="19702-415">Чтобы синхронно говорят строка, содержащая разметку SSML, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-415">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="19702-416">Можно использовать <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> для запуска асинхронной говоря о строке, которая содержит разметку SSML.</span><span class="sxs-lookup"><span data-stu-id="19702-416">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> to initiate the asynchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="19702-417">При вызове этого метода <xref:System.Speech.Synthesis.SpeechSynthesizer> может инициировать следующие события:</span><span class="sxs-lookup"><span data-stu-id="19702-417">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="19702-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="19702-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="19702-419">Вызывается, когда изменяется состояние синтезатора речи.</span><span class="sxs-lookup"><span data-stu-id="19702-419">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="19702-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="19702-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="19702-421">Вызывается, когда начинается синтезатора речи создания.</span><span class="sxs-lookup"><span data-stu-id="19702-421">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="19702-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="19702-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="19702-423">Возникает каждый раз, когда достигает синтезатору буквы или сочетание букв, которые составляют отдельные значения звука речи на языке.</span><span class="sxs-lookup"><span data-stu-id="19702-423">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="19702-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="19702-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="19702-425">Возникает каждый раз при синтезатору завершает произношения слова.</span><span class="sxs-lookup"><span data-stu-id="19702-425">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="19702-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="19702-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="19702-427">Возникает каждый раз, текст требует изменения положения лицу или мышцы лиц, используемую для создания речи.</span><span class="sxs-lookup"><span data-stu-id="19702-427">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="19702-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="19702-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="19702-429">Вызывается, когда синтезатору обнаруживает закладки в строке.</span><span class="sxs-lookup"><span data-stu-id="19702-429">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="19702-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="19702-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="19702-431">Возникает при изменении голоса для синтезатора.</span><span class="sxs-lookup"><span data-stu-id="19702-431">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="19702-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="19702-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="19702-433">Возникает, когда синтезатору завершает обработку <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> операции.</span><span class="sxs-lookup"><span data-stu-id="19702-433">Raised when the synthesizer finishes processing a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="19702-434">Если не требуется выполнять задачи при повторной dos вашего приложения, можно использовать <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> или <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> метод для создания речи синхронно.</span><span class="sxs-lookup"><span data-stu-id="19702-434">If your application dos not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
   
  
## Examples  
  
```  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsmlAsync(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakStarted As EventHandler(Of SpeakStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakStartedEventArgs ^&gt; ^ SpeakStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19702-435">Возникает, когда <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> начинает воспроизводить запрос.</span><span class="sxs-lookup"><span data-stu-id="19702-435">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> begins the speaking of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-436"><xref:System.Speech.Synthesis.SpeechSynthesizer> Вызывает это событие, если оно начинает обработку из строки с помощью любого из <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, или <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-436">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when it begins processing a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="19702-437"><xref:System.Speech.Synthesis.SpeakStartedEventArgs> Класс не имеет параметров и не возвращает данные из <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> событий.</span><span class="sxs-lookup"><span data-stu-id="19702-437">The <xref:System.Speech.Synthesis.SpeakStartedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span> <span data-ttu-id="19702-438">Он предоставляется для обеспечения разработчикам приложений записи обработчиков событий для <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> события.</span><span class="sxs-lookup"><span data-stu-id="19702-438">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19702-439">Получает текущее состояние произношения объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="19702-439">Gets the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="19702-440">Возвращает текущее состояние произношения объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="19702-440">Returns the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-441">Чтобы получить новое состояние <xref:System.Speech.Synthesis.SpeechSynthesizer> после изменения, используйте <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> свойство <xref:System.Speech.Synthesis.StateChangedEventArgs> класса.</span><span class="sxs-lookup"><span data-stu-id="19702-441">To get the new state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> after it changes, use the <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> property of the <xref:System.Speech.Synthesis.StateChangedEventArgs> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-442">В следующем примере показано состояние <xref:System.Speech.Synthesis.SpeechSynthesizer> до, во время и после озвучивания из строки.</span><span class="sxs-lookup"><span data-stu-id="19702-442">The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.</span></span>  
  
```csharp  
using System;  
using System.Threading;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer() ;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the SpeakProgress event.         
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Write the state of the SpeechSynthesizer to the console.  
      Console.WriteLine("Current Synthesizer state: " + synth.State + "\n");  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      // Write the state of the SpeechSynthesizer to the console while it is speaking.  
      Thread.Sleep(1000);  
      Console.WriteLine("\n - Current Synthesizer state: " + synth.State + " - \n");  
  
      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  
      Thread.Sleep(2000);  
      Console.WriteLine("\nCurrent Synthesizer state: " + synth.State);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::StateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19702-443">Возникает, когда меняется состояние <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="19702-443">Raised when the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-444"><xref:System.Speech.Synthesis.SpeechSynthesizer> Это событие вызывается при его говоря <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> изменения.</span><span class="sxs-lookup"><span data-stu-id="19702-444">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when its speaking <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> changes.</span></span> <span data-ttu-id="19702-445">Дополнительные сведения о данных, связанный с событием и пример см. <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="19702-445">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span></span>  
  
 <span data-ttu-id="19702-446">Чтобы приостанавливать и возобновлять синтеза речи, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> и <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-446">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="VisemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReached As EventHandler(Of VisemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VisemeReachedEventArgs ^&gt; ^ VisemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19702-447">Вызывается по достижении виземы.</span><span class="sxs-lookup"><span data-stu-id="19702-447">Raised when a viseme is reached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-448">Viseme — это основные положение рот и отдельных в произношении фонемы.</span><span class="sxs-lookup"><span data-stu-id="19702-448">A viseme is the basic position of the mouth and face when pronouncing a phoneme.</span></span> <span data-ttu-id="19702-449">Visemes являются визуальными представлениями фонемы.</span><span class="sxs-lookup"><span data-stu-id="19702-449">Visemes are visual representations of phonemes.</span></span>  
  
 <span data-ttu-id="19702-450">System.Speech поддерживает 21 visemes для английского языка, каждый из которых соответствует один или несколько фонемы.</span><span class="sxs-lookup"><span data-stu-id="19702-450">System.Speech supports 21 visemes for US English, each of which corresponds to one or more phonemes.</span></span>  <span data-ttu-id="19702-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> события возникает в случае нового фонемы достигнут различных соответствующий viseme чем предыдущих фонемы достигнут.</span><span class="sxs-lookup"><span data-stu-id="19702-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> events are raised when a new phoneme reached has a different corresponding viseme than the previous phoneme reached.</span></span> <span data-ttu-id="19702-452">Так как некоторые visemes представляют несколько фонемы <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> событие не создается, если достигнут следующую фонему соответствует же viseme как предыдущих фонемы.</span><span class="sxs-lookup"><span data-stu-id="19702-452">Since some visemes represent more than one phoneme, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not generated if the next phoneme reached corresponds to the same viseme as the previous phoneme.</span></span> <span data-ttu-id="19702-453">Например, для произносимых слов «это зону» <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> событие «s» в «this» и «z» в «zone».</span><span class="sxs-lookup"><span data-stu-id="19702-453">For example, for the spoken words "this zone", a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event is raised for the "s" in "this" and the "z" in "zone".</span></span> <span data-ttu-id="19702-454">Тем не менее <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> событие не вызывается для «z» в «zone», так как он соответствует viseme же, как «s» в «this».</span><span class="sxs-lookup"><span data-stu-id="19702-454">However, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not raised for the "z" in "zone" because it corresponds to the same viseme as the "s" in "this".</span></span>  
  
 <span data-ttu-id="19702-455">Ниже приведен список 21 фонемы SAPI и фонемы групп, соответствующих viseme в английский (США).</span><span class="sxs-lookup"><span data-stu-id="19702-455">The following is a list of the 21 SAPI phonemes and phoneme groups that correspond to a viseme in US English.</span></span>  
  
|<span data-ttu-id="19702-456">Viseme</span><span class="sxs-lookup"><span data-stu-id="19702-456">Viseme</span></span>|<span data-ttu-id="19702-457">Phoneme(s)</span><span class="sxs-lookup"><span data-stu-id="19702-457">Phoneme(s)</span></span>|  
|------------|------------------|  
|<span data-ttu-id="19702-458">0</span><span class="sxs-lookup"><span data-stu-id="19702-458">0</span></span>|<span data-ttu-id="19702-459">бездействия</span><span class="sxs-lookup"><span data-stu-id="19702-459">silence</span></span>|  
|<span data-ttu-id="19702-460">1</span><span class="sxs-lookup"><span data-stu-id="19702-460">1</span></span>|<span data-ttu-id="19702-461">AE, ax, ah</span><span class="sxs-lookup"><span data-stu-id="19702-461">ae, ax, ah</span></span>|  
|<span data-ttu-id="19702-462">2</span><span class="sxs-lookup"><span data-stu-id="19702-462">2</span></span>|<span data-ttu-id="19702-463">aa</span><span class="sxs-lookup"><span data-stu-id="19702-463">aa</span></span>|  
|<span data-ttu-id="19702-464">3</span><span class="sxs-lookup"><span data-stu-id="19702-464">3</span></span>|<span data-ttu-id="19702-465">AO</span><span class="sxs-lookup"><span data-stu-id="19702-465">ao</span></span>|  
|<span data-ttu-id="19702-466">4</span><span class="sxs-lookup"><span data-stu-id="19702-466">4</span></span>|<span data-ttu-id="19702-467">ли, eh, ой</span><span class="sxs-lookup"><span data-stu-id="19702-467">ey, eh, uh</span></span>|  
|<span data-ttu-id="19702-468">5</span><span class="sxs-lookup"><span data-stu-id="19702-468">5</span></span>|<span data-ttu-id="19702-469">ER</span><span class="sxs-lookup"><span data-stu-id="19702-469">er</span></span>|  
|<span data-ttu-id="19702-470">6</span><span class="sxs-lookup"><span data-stu-id="19702-470">6</span></span>|<span data-ttu-id="19702-471">y, iy, системы, ix</span><span class="sxs-lookup"><span data-stu-id="19702-471">y, iy, ih, ix</span></span>|  
|<span data-ttu-id="19702-472">7</span><span class="sxs-lookup"><span data-stu-id="19702-472">7</span></span>|<span data-ttu-id="19702-473">w, uw</span><span class="sxs-lookup"><span data-stu-id="19702-473">w, uw</span></span>|  
|<span data-ttu-id="19702-474">8</span><span class="sxs-lookup"><span data-stu-id="19702-474">8</span></span>|<span data-ttu-id="19702-475">Разрешить</span><span class="sxs-lookup"><span data-stu-id="19702-475">ow</span></span>|  
|<span data-ttu-id="19702-476">9</span><span class="sxs-lookup"><span data-stu-id="19702-476">9</span></span>|<span data-ttu-id="19702-477">выполненного</span><span class="sxs-lookup"><span data-stu-id="19702-477">aw</span></span>|  
|<span data-ttu-id="19702-478">10</span><span class="sxs-lookup"><span data-stu-id="19702-478">10</span></span>|<span data-ttu-id="19702-479">Oy</span><span class="sxs-lookup"><span data-stu-id="19702-479">oy</span></span>|  
|<span data-ttu-id="19702-480">11</span><span class="sxs-lookup"><span data-stu-id="19702-480">11</span></span>|<span data-ttu-id="19702-481">любое</span><span class="sxs-lookup"><span data-stu-id="19702-481">ay</span></span>|  
|<span data-ttu-id="19702-482">12</span><span class="sxs-lookup"><span data-stu-id="19702-482">12</span></span>|<span data-ttu-id="19702-483">h</span><span class="sxs-lookup"><span data-stu-id="19702-483">h</span></span>|  
|<span data-ttu-id="19702-484">13</span><span class="sxs-lookup"><span data-stu-id="19702-484">13</span></span>|<span data-ttu-id="19702-485">r</span><span class="sxs-lookup"><span data-stu-id="19702-485">r</span></span>|  
|<span data-ttu-id="19702-486">14</span><span class="sxs-lookup"><span data-stu-id="19702-486">14</span></span>|<span data-ttu-id="19702-487">l</span><span class="sxs-lookup"><span data-stu-id="19702-487">l</span></span>|  
|<span data-ttu-id="19702-488">15</span><span class="sxs-lookup"><span data-stu-id="19702-488">15</span></span>|<span data-ttu-id="19702-489">s, z</span><span class="sxs-lookup"><span data-stu-id="19702-489">s, z</span></span>|  
|<span data-ttu-id="19702-490">16</span><span class="sxs-lookup"><span data-stu-id="19702-490">16</span></span>|<span data-ttu-id="19702-491">sh ch, jh, zh</span><span class="sxs-lookup"><span data-stu-id="19702-491">sh, ch, jh, zh</span></span>|  
|<span data-ttu-id="19702-492">17</span><span class="sxs-lookup"><span data-stu-id="19702-492">17</span></span>|<span data-ttu-id="19702-493">th Диффи-Хелмана</span><span class="sxs-lookup"><span data-stu-id="19702-493">th, dh</span></span>|  
|<span data-ttu-id="19702-494">18</span><span class="sxs-lookup"><span data-stu-id="19702-494">18</span></span>|<span data-ttu-id="19702-495">f, v</span><span class="sxs-lookup"><span data-stu-id="19702-495">f, v</span></span>|  
|<span data-ttu-id="19702-496">19</span><span class="sxs-lookup"><span data-stu-id="19702-496">19</span></span>|<span data-ttu-id="19702-497">d, t, n</span><span class="sxs-lookup"><span data-stu-id="19702-497">d, t, n</span></span>|  
|<span data-ttu-id="19702-498">20</span><span class="sxs-lookup"><span data-stu-id="19702-498">20</span></span>|<span data-ttu-id="19702-499">k "," g "," ng</span><span class="sxs-lookup"><span data-stu-id="19702-499">k, g, ng</span></span>|  
|<span data-ttu-id="19702-500">21</span><span class="sxs-lookup"><span data-stu-id="19702-500">21</span></span>|<span data-ttu-id="19702-501">p "," b "," m</span><span class="sxs-lookup"><span data-stu-id="19702-501">p, b, m</span></span>|  
  
 <span data-ttu-id="19702-502">Дополнительные сведения о данных, связанных с `VisemeReached` событий, в разделе <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="19702-502">For information about data associated with the `VisemeReached` event, see <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Voice">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo Voice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo Voice" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Voice As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ Voice { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19702-503">Получает сведения о текущем голосе объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="19702-503">Gets information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="19702-504">Возвращает сведения о текущем голосе объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="19702-504">Returns information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-505">При инициализации нового <xref:System.Speech.Synthesis.SpeechSynthesizer>, он использует голос системы по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="19702-505">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer>, it uses the default system voice.</span></span> <span data-ttu-id="19702-506">Чтобы настроить <xref:System.Speech.Synthesis.SpeechSynthesizer> объект для использования одного из голоса синтеза речи, установленного, воспользуйтесь <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> или <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19702-506">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> object to use one of the installed speech synthesis voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="19702-507">Чтобы получить сведения о том, какие установлены голоса, используйте <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> метод и <xref:System.Speech.Synthesis.VoiceInfo> класса.</span><span class="sxs-lookup"><span data-stu-id="19702-507">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19702-508">Следующий пример Инициализирует новый экземпляр класса <xref:System.Speech.Synthesis.SpeechSynthesizer> и получает сведения о текущей голоса.</span><span class="sxs-lookup"><span data-stu-id="19702-508">The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer> and gets information about the current voice.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Get information about supported audio formats.  
        string AudioFormats = "";  
        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  
        {  
          AudioFormats += String.Format("{0}\n",  
          fmt.EncodingFormat.ToString());  
        }  
  
        // Write information about the voice to the console.  
        Console.WriteLine(" Name:          " + synth.Voice.Name);  
        Console.WriteLine(" Culture:       " + synth.Voice.Culture);  
        Console.WriteLine(" Age:           " + synth.Voice.Age);  
        Console.WriteLine(" Gender:        " + synth.Voice.Gender);  
        Console.WriteLine(" Description:   " + synth.Voice.Description);  
        Console.WriteLine(" ID:            " + synth.Voice.Id);  
        if (synth.Voice.SupportedAudioFormats.Count != 0)  
        {  
          Console.WriteLine(" Audio formats: " + AudioFormats);  
        }  
        else  
        {  
          Console.WriteLine(" No supported audio formats found");  
        }  
  
        // Get additional information about the voice.  
        string AdditionalInfo = "";  
        foreach (string key in synth.Voice.AdditionalInfo.Keys)  
        {  
          AdditionalInfo += String.Format("  {0}: {1}\n",  
            key, synth.Voice.AdditionalInfo[key]);  
        }  
  
        Console.WriteLine(" Additional Info - " + AdditionalInfo);  
        Console.WriteLine();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </Member>
    <Member MemberName="VoiceChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VoiceChange As EventHandler(Of VoiceChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VoiceChangeEventArgs ^&gt; ^ VoiceChange;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19702-509">Возникает, когда меняется голос <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="19702-509">Raised when the voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19702-510">Например и сведения о данных, связанный с событием, в разделе <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="19702-510">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span></span>  
  
 <span data-ttu-id="19702-511">Можно изменить голос, <xref:System.Speech.Synthesis.SpeechSynthesizer> используется с любым из <xref:System.Speech.Synthesis.PromptBuilder> <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> методы или <xref:System.Speech.Synthesis.SpeechSynthesizer> <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> или <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19702-511">You can change the voice that the <xref:System.Speech.Synthesis.SpeechSynthesizer> uses with any of the <xref:System.Speech.Synthesis.PromptBuilder>'s <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Volume { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19702-512">Получает или задает выходной объем объекта <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="19702-512">Get or sets the output volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="19702-513">Возвращает громкость <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> от 0 до 100.</span><span class="sxs-lookup"><span data-stu-id="19702-513">Returns the volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, from 0 through 100.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19702-514">В следующем примере задается объем <xref:System.Speech.Synthesis.SpeechSynthesizer>выходных аудио для синтезированную голоса и WAV-файла.</span><span class="sxs-lookup"><span data-stu-id="19702-514">The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Set the volume of the SpeechSynthesizer's ouput.  
        synth.Volume = 60;  
  
        // Build a prompt containing recorded audio and synthesized speech.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendAudio("C:\\Test\\WelcomeToContosoRadio.wav");  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>