<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Decoder.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5af988a5d852dff603b2e4e888be96288515f405e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af988a5d852dff603b2e4e888be96288515f405e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.Decoder">
          <source>Converts a sequence of encoded bytes into a set of characters.</source>
          <target state="translated">Конвертирует последовательность закодированных байтов в набор символов.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>To obtain an instance of an implementation of the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> class, the application should use the <ph id="ph2">&lt;xref:System.Text.Encoding.GetDecoder%2A&gt;</ph> method of an <ph id="ph3">&lt;xref:System.Text.Encoding&gt;</ph> implementation.</source>
          <target state="translated">Чтобы получить экземпляр реализации <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> класса, приложение должно использовать <ph id="ph2">&lt;xref:System.Text.Encoding.GetDecoder%2A&gt;</ph> метод <ph id="ph3">&lt;xref:System.Text.Encoding&gt;</ph> реализации.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph> method determines how many characters result in decoding a sequence of bytes, and the <ph id="ph2">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> method performs the actual decoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph> Метод определяет, сколько символов привести декодировании последовательности байтов и <ph id="ph2">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> метод выполняет фактическое декодирование.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>There are several versions of both of these methods available in the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> class.</source>
          <target state="translated">Существует несколько версий обоих методов, доступных в <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>A <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> object maintains state information between successive calls to <ph id="ph2">`GetChars`</ph> or <ph id="ph3">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> methods so it can correctly decode byte sequences that span blocks.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> сохраняет сведения о состоянии между последовательными вызовами <ph id="ph2">`GetChars`</ph> или <ph id="ph3">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> методы, что позволяет ему правильно декодировать последовательности байтов, охватывающие блоки.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> Также сохраняет замыкающие байты в конце блоков данных и использует конечные байты при следующей операции декодирования.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.Encoding.GetDecoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Encoding.GetEncoder%2A&gt;</ph> are useful for network transmission and file operations because those operations often deal with blocks of data instead of a complete data stream.</source>
          <target state="translated">Таким образом <ph id="ph1">&lt;xref:System.Text.Encoding.GetDecoder%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Text.Encoding.GetEncoder%2A&gt;</ph> полезны для сетевых операций передачи данных и файл, так как эти операции часто работают с блоками данных, а не полные данные потока.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>When the application is done with a stream of data, it should make sure that the state information is flushed by setting the <ph id="ph1">`flush`</ph> parameter to <ph id="ph2">`true`</ph> in the appropriate method call.</source>
          <target state="translated">Если приложение выполняется с потоком данных, следует убедиться в том, что сведения о состоянии очищены, задав <ph id="ph1">`flush`</ph> параметра <ph id="ph2">`true`</ph> при вызове соответствующего метода.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>If an exception occurs or if the application switches streams, it should call <ph id="ph1">&lt;xref:System.Text.Decoder.Reset%2A&gt;</ph> to clear the internal state of the <ph id="ph2">`Decoder`</ph> object.</source>
          <target state="translated">Если возникает исключение или приложение переключает потоки, он должен вызывать <ph id="ph1">&lt;xref:System.Text.Decoder.Reset%2A&gt;</ph> очистить внутреннее состояние <ph id="ph2">`Decoder`</ph> объекта.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>Version Considerations</source>
          <target state="translated">Описание версии</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>A <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> object can be serialized during a conversion operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> или <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> может быть сериализован во время операции преобразования.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>The state of the object is retained if it is deserialized in the same version of the .NET Framework, but lost if it is deserialized in another version.</source>
          <target state="translated">Состояние объекта сохраняется, если он десериализуется в той же версии платформы .NET Framework, но потеряно, если он десериализуется в другой версии.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>The following example demonstrates the use of a <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> to convert two different byte arrays into a character array.</source>
          <target state="translated">В следующем примере показано использование <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> для преобразования двух различных массивов байтов в массив символов.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>One of the character's bytes spans the arrays.</source>
          <target state="translated">Один из байтов символов соединяет массивы.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>This is similar to what a <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> object does internally when reading a stream.</source>
          <target state="translated">Это похоже на то, что <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> выполняет объект внутри при чтении потока.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.Decoder">
          <source>When your application inherits from this class, it must override all the members.</source>
          <target state="translated">Когда приложение наследует от этого класса, его необходимо переопределить все члены.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.Decoder" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Text.Decoder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.#ctor">
          <source>To obtain an instance of an implementation of this class, the application should use the <ph id="ph1">&lt;xref:System.Text.Encoding.GetDecoder%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph> implementation.</source>
          <target state="translated">Чтобы получить экземпляр реализации этого класса, приложение должно использовать <ph id="ph1">&lt;xref:System.Text.Encoding.GetDecoder%2A&gt;</ph> метод <ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph> реализации.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.#ctor">
          <source>The following example demonstrates two techniques for initializing a new <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> instance.</source>
          <target state="translated">В следующем примере показано два способа инициализации нового <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> экземпляра.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Text.Decoder">
          <source>Converts an encoded byte sequence to a string or array of characters.</source>
          <target state="translated">Преобразует закодированную последовательность байтов в строку или массив символов.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The address of a buffer that contains the byte sequences to convert.</source>
          <target state="translated">Адрес буфера, содержащего последовательности байтов для преобразования.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The number of bytes in <bpt id="p1">&lt;c&gt;</bpt>bytes<ept id="p1">&lt;/c&gt;</ept> to convert.</source>
          <target state="translated">Число байтов, указанное в параметре <bpt id="p1">&lt;c&gt;</bpt>bytes<ept id="p1">&lt;/c&gt;</ept>, которое требуется преобразовать.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The address of a buffer to store the converted characters.</source>
          <target state="translated">Адрес буфера для хранения преобразованных символов.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The maximum number of characters in <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> to use in the conversion.</source>
          <target state="translated">Максимальное число символов в <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> для использования при преобразовании.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate no further data is to be converted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> указывает, что дальнейшие данные для преобразования отсутствуют. В противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When this method returns, contains the number of bytes that were produced by the conversion.</source>
          <target state="translated">При возврате этот метод содержит число байтов, созданных при преобразовании.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Этот параметр передается неинициализированным.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When this method returns, contains the number of characters from <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> that were used in the conversion.</source>
          <target state="translated">При возврате этот метод содержит число символов из <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept>, которые использовались при преобразовании.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Этот параметр передается неинициализированным.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When this method returns, contains <ph id="ph1">&lt;see langword="true" /&gt;</ph> if all the characters specified by <bpt id="p1">&lt;c&gt;</bpt>byteCount<ept id="p1">&lt;/c&gt;</ept> were converted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">При возврате этот метод содержит значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если все символы, заданные с помощью параметра <bpt id="p1">&lt;c&gt;</bpt>byteCount<ept id="p1">&lt;/c&gt;</ept>, были преобразованы. В противном случае значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Этот параметр передается неинициализированным.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Converts a buffer of encoded bytes to UTF-16 encoded characters and stores the result in another buffer.</source>
          <target state="translated">Преобразует буфер закодированных байтов в символы в кодировке UTF-16 и сохраняет результат в другом буфере.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Remember that the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> object saves state between calls to <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph>.</source>
          <target state="translated">Следует помнить, что <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> объект сохраняет состояние между вызовами <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When the application is done with a stream of data, it should set the <ph id="ph1">`flush`</ph> parameter to <ph id="ph2">`true`</ph> to make sure that the state information is flushed.</source>
          <target state="translated">Если приложение выполняется с потоком данных, он должен устанавливать <ph id="ph1">`flush`</ph> параметр <ph id="ph2">`true`</ph> чтобы убедиться в том, что сведения о состоянии очищены.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</source>
          <target state="translated">Этот параметр декодер игнорирует недопустимые байты в конце блока данных и очищает внутренний буфер.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</source>
          <target state="translated">Любые оставшиеся обработанные данные, который является частью логического устройства, например старший символ суррогатной пары, преобразуется в соответствии с текущими параметрами резервирования.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The <ph id="ph1">`Convert`</ph> method is designed to be used in a loop to decode an arbitrary amount of input, such as data read from a file or stream.</source>
          <target state="translated"><ph id="ph1">`Convert`</ph> Метод предназначен для использования в цикле для декодирования произвольного количества входных данных, например чтение данных из файла или потока.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>It stores the output of the decoding operation in a fixed-size buffer.</source>
          <target state="translated">Результаты операции декодирования сохраняются в буфер фиксированного размера.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> will throw an exception if the output buffer isn't large enough, but <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> will fill as much space as possible and return the bytes read and chars written.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> будет вызывать исключение, если выходной буфер не имеет достаточного объема, но <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> будет столько же места можно заполнить и возвращения байтов, считанных и записанных символов.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Also see the <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph> topic for more comments.</source>
          <target state="translated">См. также <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph> раздел, описывающий дополнительные комментарии.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The <ph id="ph1">`completed`</ph> output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</source>
          <target state="translated"><ph id="ph1">`completed`</ph> Выходной параметр указывает, является ли все данные из входного буфера преобразованы и сохранены в выходном буфере.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is set to <ph id="ph1">`false`</ph> if the number of bytes specified by the <ph id="ph2">`byteCount`</ph> parameter cannot be converted without exceeding the number of characters specified by the <ph id="ph3">`charCount`</ph> parameter.</source>
          <target state="translated">Этот параметр имеет значение <ph id="ph1">`false`</ph> Если число байтов, заданные <ph id="ph2">`byteCount`</ph> нельзя преобразовать без превышения числа знаков, указанное в <ph id="ph3">`charCount`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the <ph id="ph1">`bytes`</ph> parameter by the number of bytes specified by the <ph id="ph2">`bytesUsed`</ph> parameter, then call the <ph id="ph3">`Convert`</ph> method again to process the remaining input.</source>
          <target state="translated">В этом случае приложение следует использовать содержимое выходного буфера или предоставить новый выходной буфер приращения <ph id="ph1">`bytes`</ph> параметра на число байтов, указанное в <ph id="ph2">`bytesUsed`</ph> параметра, затем вызовите <ph id="ph3">`Convert`</ph> метод снова процесс оставшихся входных данных.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The <ph id="ph1">`completed`</ph> parameter can also be set to <ph id="ph2">`false`</ph>, even though the <ph id="ph3">`bytesUsed`</ph> and <ph id="ph4">`byteCount`</ph> parameters are equal.</source>
          <target state="translated"><ph id="ph1">`completed`</ph> Параметр также может быть присвоено <ph id="ph2">`false`</ph>, даже если <ph id="ph3">`bytesUsed`</ph> и <ph id="ph4">`byteCount`</ph> параметры равны.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This situation occurs if there is still data in the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> object that has not been stored in the <ph id="ph2">`bytes`</ph> buffer.</source>
          <target state="translated">Такая ситуация возникает, если по-прежнему данные в <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> объекта, не были сохранены в <ph id="ph2">`bytes`</ph> буфера.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> or <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph> (<ph id="ph4">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> или <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph> (<ph id="ph4">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> или <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The output buffer is too small to contain any of the converted input.</source>
          <target state="translated">Выходной буфер слишком мал, чтобы содержать преобразованные входные данные.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The output buffer should be greater than or equal to the size indicated by the <ph id="ph1">&lt;see cref="Overload:System.Text.Decoder.GetCharCount" /&gt;</ph> method.</source>
          <target state="translated">Размер выходного буфера должен быть больше или равен размеру, указанному методом <ph id="ph1">&lt;see cref="Overload:System.Text.Decoder.GetCharCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">Произошла отработка отказа (см. полное объяснение в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">требуется полное доверие для непосредственно вызывающего метода.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Этот член не может использоваться частично доверенным или прозрачным кодом.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>A byte array to convert.</source>
          <target state="translated">Преобразуемый массив байтов.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The first element of <bpt id="p1">&lt;c&gt;</bpt>bytes<ept id="p1">&lt;/c&gt;</ept> to convert.</source>
          <target state="translated">Первый элемент преобразуемого массива <bpt id="p1">&lt;c&gt;</bpt>bytes<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The number of elements of <bpt id="p1">&lt;c&gt;</bpt>bytes<ept id="p1">&lt;/c&gt;</ept> to convert.</source>
          <target state="translated">Число преобразуемых элементов <bpt id="p1">&lt;c&gt;</bpt>bytes<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>An array to store the converted characters.</source>
          <target state="translated">Массив для сохранения преобразованных символов.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The first element of <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> in which data is stored.</source>
          <target state="translated">Первый элемент массива <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept>, в котором сохраняются данные.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The maximum number of elements of <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> to use in the conversion.</source>
          <target state="translated">Максимальное число элементов в <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> для использования при преобразовании.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that no further data is to be converted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> указывает, что дальнейшие данные для преобразования отсутствуют. В противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When this method returns, contains the number of bytes that were used in the conversion.</source>
          <target state="translated">При возврате этот метод содержит число байтов, которые использовались при преобразовании.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Этот параметр передается неинициализированным.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When this method returns, contains the number of characters from <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept> that were produced by the conversion.</source>
          <target state="translated">При возврате этот метод содержит число символов из <bpt id="p1">&lt;c&gt;</bpt>chars<ept id="p1">&lt;/c&gt;</ept>, которые были созданы при преобразовании.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Этот параметр передается неинициализированным.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When this method returns, contains <ph id="ph1">&lt;see langword="true" /&gt;</ph> if all the characters specified by <bpt id="p1">&lt;c&gt;</bpt>byteCount<ept id="p1">&lt;/c&gt;</ept> were converted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">При возврате этот метод содержит значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если все символы, заданные с помощью параметра <bpt id="p1">&lt;c&gt;</bpt>byteCount<ept id="p1">&lt;/c&gt;</ept>, были преобразованы. В противном случае значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Этот параметр передается неинициализированным.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Converts an array of encoded bytes to UTF-16 encoded characters and stores the result in a character array.</source>
          <target state="translated">Преобразует массив закодированных байтов в символы в кодировке UTF-16 и сохраняет результат в другом массиве символов.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Remember that the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> object saves state between calls to <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph>.</source>
          <target state="translated">Следует помнить, что <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> объект сохраняет состояние между вызовами <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>When the application is done with a stream of data, it should set the <ph id="ph1">`flush`</ph> parameter to <ph id="ph2">`true`</ph> to make sure that the state information is flushed.</source>
          <target state="translated">Если приложение выполняется с потоком данных, он должен устанавливать <ph id="ph1">`flush`</ph> параметр <ph id="ph2">`true`</ph> чтобы убедиться в том, что сведения о состоянии очищены.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</source>
          <target state="translated">Этот параметр декодер игнорирует недопустимые байты в конце блока данных и очищает внутренний буфер.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</source>
          <target state="translated">Любые оставшиеся обработанные данные, который является частью логического устройства, например старший символ суррогатной пары, преобразуется в соответствии с текущими параметрами резервирования.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The <ph id="ph1">`Convert`</ph> method is designed to be used in a loop to decode an arbitrary amount of input, such as data read from a file or stream.</source>
          <target state="translated"><ph id="ph1">`Convert`</ph> Метод предназначен для использования в цикле для декодирования произвольного количества входных данных, например чтение данных из файла или потока.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>It stores the output of the decoding operation in a fixed-size buffer.</source>
          <target state="translated">Результаты операции декодирования сохраняются в буфер фиксированного размера.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> will throw an exception if the output buffer isn't large enough, but <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> will fill as much space as possible and return the bytes read and chars written.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> будет вызывать исключение, если выходной буфер не имеет достаточного объема, но <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> будет столько же места можно заполнить и возвращения байтов, считанных и записанных символов.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>Also see the <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph> topic for more comments.</source>
          <target state="translated">См. также <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph> раздел, описывающий дополнительные комментарии.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The <ph id="ph1">`completed`</ph> output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</source>
          <target state="translated"><ph id="ph1">`completed`</ph> Выходной параметр указывает, является ли все данные из входного буфера преобразованы и сохранены в выходном буфере.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This parameter is set to <ph id="ph1">`false`</ph> if the number of bytes specified by the <ph id="ph2">`byteCount`</ph> parameter cannot be converted without exceeding the number of characters specified by the <ph id="ph3">`charCount`</ph> parameter.</source>
          <target state="translated">Этот параметр имеет значение <ph id="ph1">`false`</ph> Если число байтов, заданные <ph id="ph2">`byteCount`</ph> нельзя преобразовать без превышения числа знаков, указанное в <ph id="ph3">`charCount`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the <ph id="ph1">`bytes`</ph> parameter by the number of bytes specified by the <ph id="ph2">`bytesUsed`</ph> parameter, then call the <ph id="ph3">`Convert`</ph> method again to process the remaining input.</source>
          <target state="translated">В этом случае приложение следует использовать содержимое выходного буфера или предоставить новый выходной буфер приращения <ph id="ph1">`bytes`</ph> параметра на число байтов, указанное в <ph id="ph2">`bytesUsed`</ph> параметра, затем вызовите <ph id="ph3">`Convert`</ph> метод снова процесс оставшихся входных данных.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The <ph id="ph1">`completed`</ph> parameter can also be set to <ph id="ph2">`false`</ph>, even though the <ph id="ph3">`bytesUsed`</ph> and <ph id="ph4">`byteCount`</ph> parameters are equal.</source>
          <target state="translated"><ph id="ph1">`completed`</ph> Параметр также может быть присвоено <ph id="ph2">`false`</ph>, даже если <ph id="ph3">`bytesUsed`</ph> и <ph id="ph4">`byteCount`</ph> параметры равны.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>This situation occurs if there is still data in the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> object that has not been stored in the <ph id="ph2">`bytes`</ph> buffer.</source>
          <target state="translated">Такая ситуация возникает, если по-прежнему данные в <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> объекта, не были сохранены в <ph id="ph2">`bytes`</ph> буфера.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> method to convert a file of UTF-16 characters to UTF-8.</source>
          <target state="translated">Следующий пример кода использует <ph id="ph1">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> метод для преобразования файла символов UTF-16, UTF-8.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>It then uses the <ph id="ph1">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> method to convert the UTF-8 characters back to UTF-16 characters.</source>
          <target state="translated">Затем он использует <ph id="ph1">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> метода для преобразования символов UTF-8 обратно в символы UTF-16.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> or <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph> (<ph id="ph4">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> или <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph> (<ph id="ph4">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph>, <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph>, <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> или <ph id="ph4">&lt;paramref name="byteCount" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The length of <ph id="ph1">&lt;paramref name="chars" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph>.</source>
          <target state="translated">Длина массива <ph id="ph1">&lt;paramref name="chars" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> меньше <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The length of <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="byteCount" /&gt;</ph>.</source>
          <target state="translated">Длина массива <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> меньше <ph id="ph4">&lt;paramref name="byteCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The output buffer is too small to contain any of the converted input.</source>
          <target state="translated">Выходной буфер слишком мал, чтобы содержать преобразованные входные данные.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>The output buffer should be greater than or equal to the size indicated by the <ph id="ph1">&lt;see cref="Overload:System.Text.Decoder.GetCharCount" /&gt;</ph> method.</source>
          <target state="translated">Размер выходного буфера должен быть больше или равен размеру, указанному методом <ph id="ph1">&lt;see cref="Overload:System.Text.Decoder.GetCharCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">Произошла отработка отказа (см. полное объяснение в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Text.Decoder.Fallback">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallback" /&gt;</ph> object for the current <ph id="ph2">&lt;see cref="T:System.Text.Decoder" /&gt;</ph> object.</source>
          <target state="translated">Получает или задает объект <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallback" /&gt;</ph> для текущего объекта <ph id="ph2">&lt;see cref="T:System.Text.Decoder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.Decoder.Fallback">
          <source>A <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallback" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.Decoder.Fallback">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallback&gt;</ph> object represents an error handler that is invoked when an encoded byte sequence cannot be converted to a character.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.DecoderFallback&gt;</ph> Объект представляет обработчик ошибок, который вызывается, когда невозможно преобразовать в закодированную последовательность байтов в символ.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Text.Decoder.Fallback">
          <source>The value in a set operation is <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated">В операции задания значением является <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Text.Decoder.Fallback">
          <source>A new value cannot be assigned in a set operation because the current <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph> object contains data that has not been decoded yet.</source>
          <target state="translated">Невозможно задать новое значение, поскольку текущий объект <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph> содержит данные, которые еще не были декодированы.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Text.Decoder.FallbackBuffer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Text.Decoder" /&gt;</ph> object.</source>
          <target state="translated">Получает объект <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph>, связанный с текущим объектом <ph id="ph2">&lt;see cref="T:System.Text.Decoder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.Decoder.FallbackBuffer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.Decoder.FallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> object represents data used by the <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> Объект представляет данные, используемые <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.Decoder.FallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallback&gt;</ph> object represents an error handler that is invoked when an encoded byte sequence cannot be converted to a character.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.DecoderFallback&gt;</ph> Объект представляет обработчик ошибок, который вызывается, когда невозможно преобразовать в закодированную последовательность байтов в символ.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="T:System.Text.Decoder">
          <source>When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes.</source>
          <target state="translated">При переопределении в производном классе вычисляет количество символов, полученных при декодировании последовательности байтов.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source>A pointer to the first byte to decode.</source>
          <target state="translated">Указатель на первый декодируемый байт.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Число байтов для декодирования.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to simulate clearing the internal state of the encoder after the calculation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> для имитации очистки внутреннего состояния кодировщика после расчета; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source>When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</source>
          <target state="translated">При переопределении в производном классе вычисляет количество символов, полученных при декодировании последовательности байтов, начало которой задается указателем байтов.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source>A parameter indicates whether to clear the internal state of the decoder after the calculation.</source>
          <target state="translated">Параметр указывает, следует ли очистить внутреннее состояние декодера после вычисления.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source>The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</source>
          <target state="translated">Число символов, полученных при декодировании заданной последовательности байтов и байтов во внутреннем буфере.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source>This method does not affect the state of the decoder.</source>
          <target state="translated">Этот метод не влияет на состояние декодера.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source>To calculate the exact array size that <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> requires to store the resulting characters, the application should use <ph id="ph2">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">Для вычисления массиве точный размер, <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> требуется для хранения полученных символов, приложение должно использовать <ph id="ph2">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source>If <ph id="ph1">`GetChars`</ph> is called with <ph id="ph2">`flush`</ph> set to <ph id="ph3">`false`</ph>, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</source>
          <target state="translated">Если <ph id="ph1">`GetChars`</ph> вызывается с <ph id="ph2">`flush`</ph> значение <ph id="ph3">`false`</ph>, декодер сохраняет замыкающие байты в конце блока данных во внутреннем буфере и использует их при следующей операции декодирования.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source>The application should call <ph id="ph1">`GetCharCount`</ph> on a block of data immediately before calling <ph id="ph2">`GetChars`</ph> on the same block, so that any trailing bytes from the previous block are included in the calculation.</source>
          <target state="translated">Приложение должно вызывать <ph id="ph1">`GetCharCount`</ph> для блока данных непосредственно перед вызовом <ph id="ph2">`GetChars`</ph> на том же блоке так, что в вычисление включаются все конечные байты из предыдущего блока.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic .NET).</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> равно <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph> в Visual Basic .NET).</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="count" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">Произошла отработка отказа (см. полное объяснение в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">требуется полное доверие для непосредственно вызывающего метода.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Этот член не может использоваться частично доверенным или прозрачным кодом.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">Индекс первого декодируемого байта.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Число байтов для декодирования.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</source>
          <target state="translated">При переопределении в производном классе вычисляет количество символов, полученных при декодировании последовательности байтов из заданного массива байтов.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</source>
          <target state="translated">Число символов, полученных при декодировании заданной последовательности байтов и байтов во внутреннем буфере.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>This method does not affect the state of the decoder.</source>
          <target state="translated">Этот метод не влияет на состояние декодера.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>To calculate the exact array size that <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> requires to store the resulting characters, the application should use <ph id="ph2">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">Для вычисления массиве точный размер, <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> требуется для хранения полученных символов, приложение должно использовать <ph id="ph2">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>If <ph id="ph1">`GetChars`</ph> is called with <ph id="ph2">`flush`</ph> set to <ph id="ph3">`false`</ph>, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</source>
          <target state="translated">Если <ph id="ph1">`GetChars`</ph> вызывается с <ph id="ph2">`flush`</ph> значение <ph id="ph3">`false`</ph>, декодер сохраняет замыкающие байты в конце блока данных во внутреннем буфере и использует их при следующей операции декодирования.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The application should call <ph id="ph1">`GetCharCount`</ph> on a block of data immediately before calling <ph id="ph2">`GetChars`</ph> on the same block, so that any trailing bytes from the previous block are included in the calculation.</source>
          <target state="translated">Приложение должно вызывать <ph id="ph1">`GetCharCount`</ph> для блока данных непосредственно перед вызовом <ph id="ph2">`GetChars`</ph> на том же блоке так, что в вычисление включаются все конечные байты из предыдущего блока.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph> method to calculate the number of characters required to decode the specified range of bytes in the array.</source>
          <target state="translated">В следующем примере кода демонстрируется использование <ph id="ph1">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph> метод для вычисления числа символов, необходимых для декодировать указанный диапазон байтов в массиве.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">Параметры <ph id="ph1">&lt;paramref name="index" /&gt;</ph> и <ph id="ph2">&lt;paramref name="count" /&gt;</ph> не указывают допустимый диапазон в <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">Произошла отработка отказа (см. полное объяснение в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">Индекс первого декодируемого байта.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Число байтов для декодирования.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to simulate clearing the internal state of the encoder after the calculation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> для имитации очистки внутреннего состояния кодировщика после расчета; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</source>
          <target state="translated">При переопределении в производном классе вычисляет количество символов, полученных при декодировании последовательности байтов из заданного массива байтов.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>A parameter indicates whether to clear the internal state of the decoder after the calculation.</source>
          <target state="translated">Параметр указывает, следует ли очистить внутреннее состояние декодера после вычисления.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</source>
          <target state="translated">Число символов, полученных при декодировании заданной последовательности байтов и байтов во внутреннем буфере.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>This method does not affect the state of the decoder.</source>
          <target state="translated">Этот метод не влияет на состояние декодера.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>To calculate the exact array size that <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> requires to store the resulting characters, the application should use <ph id="ph2">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">Для вычисления массиве точный размер, <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> требуется для хранения полученных символов, приложение должно использовать <ph id="ph2">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>If <ph id="ph1">`GetChars`</ph> is called with <ph id="ph2">`flush`</ph> set to <ph id="ph3">`false`</ph>, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</source>
          <target state="translated">Если <ph id="ph1">`GetChars`</ph> вызывается с <ph id="ph2">`flush`</ph> значение <ph id="ph3">`false`</ph>, декодер сохраняет замыкающие байты в конце блока данных во внутреннем буфере и использует их при следующей операции декодирования.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>The application should call <ph id="ph1">`GetCharCount`</ph> on a block of data immediately before calling <ph id="ph2">`GetChars`</ph> on the same block, so that any trailing bytes from the previous block are included in the calculation.</source>
          <target state="translated">Приложение должно вызывать <ph id="ph1">`GetCharCount`</ph> для блока данных непосредственно перед вызовом <ph id="ph2">`GetChars`</ph> на том же блоке так, что в вычисление включаются все конечные байты из предыдущего блока.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">Параметры <ph id="ph1">&lt;paramref name="index" /&gt;</ph> и <ph id="ph2">&lt;paramref name="count" /&gt;</ph> не указывают допустимый диапазон в <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">Произошла отработка отказа (см. полное объяснение в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="T:System.Text.Decoder">
          <source>When overridden in a derived class, decodes a sequence of bytes into a set of characters.</source>
          <target state="translated">При переопределении в производном классе декодирует последовательность байтов в набор символов.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>A pointer to the first byte to decode.</source>
          <target state="translated">Указатель на первый декодируемый байт.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Число байтов для декодирования.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>A pointer to the location at which to start writing the resulting set of characters.</source>
          <target state="translated">Указатель на положение, с которого начинается запись результирующего набора символов.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">Наибольшее количество символов для записи.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to clear the internal state of the decoder after the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> соответствует очистке внутреннего состояния декодера после преобразования; в противоположном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer and any bytes in the internal buffer into a set of characters that are stored starting at the specified character pointer.</source>
          <target state="translated">При переопределении в производном классе декодирует последовательность байтов, начало которой задается указателем байтов, и все байты, расположенные во внутреннем буфере, в набор символов, которые сохраняются, начиная с заданного указателя символов.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>A parameter indicates whether to clear the internal state of the decoder after the conversion.</source>
          <target state="translated">Параметр указывает, следует ли очистить внутреннее состояние декодера после выполнения преобразования.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>The actual number of characters written at the location indicated by the <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> parameter.</source>
          <target state="translated">Фактическое число символов, записанных в местоположение, которое задано параметром <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>Remember that the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> object saves state between calls to <ph id="ph2">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph>.</source>
          <target state="translated">Следует помнить, что <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> объект сохраняет состояние между вызовами <ph id="ph2">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>When the application is done with a stream of data, it should set the <ph id="ph1">`flush`</ph> parameter to <ph id="ph2">`true`</ph> to make sure that the state information is flushed.</source>
          <target state="translated">Если приложение выполняется с потоком данных, он должен устанавливать <ph id="ph1">`flush`</ph> параметр <ph id="ph2">`true`</ph> чтобы убедиться в том, что сведения о состоянии очищены.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</source>
          <target state="translated">Этот параметр декодер игнорирует недопустимые байты в конце блока данных и очищает внутренний буфер.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>To calculate the exact buffer size that <ph id="ph1">`GetChars`</ph> requires to store the resulting characters, the application should use <ph id="ph2">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">Для вычисления буфера точный размер, <ph id="ph1">`GetChars`</ph> требуется для хранения полученных символов, приложение должно использовать <ph id="ph2">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>If <ph id="ph1">`GetChars`</ph> is called with <ph id="ph2">`flush`</ph> set to <ph id="ph3">`false`</ph>, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</source>
          <target state="translated">Если <ph id="ph1">`GetChars`</ph> вызывается с <ph id="ph2">`flush`</ph> значение <ph id="ph3">`false`</ph>, декодер сохраняет замыкающие байты в конце блока данных во внутреннем буфере и использует их при следующей операции декодирования.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>The application should call <ph id="ph1">`GetCharCount`</ph> on a block of data immediately before calling <ph id="ph2">`GetChars`</ph> on the same block, so that any trailing bytes from the previous block are included in the calculation.</source>
          <target state="translated">Приложение должно вызывать <ph id="ph1">`GetCharCount`</ph> для блока данных непосредственно перед вызовом <ph id="ph2">`GetChars`</ph> на том же блоке так, что в вычисление включаются все конечные байты из предыдущего блока.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>If your application is to convert many segments of an input stream, consider using the <ph id="ph1">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> method.</source>
          <target state="translated">Если приложение является преобразование много сегментов входного потока, рассмотрите возможность использования <ph id="ph1">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> will throw an exception if the output buffer isn't large enough, but <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> will fill as much space as possible and return the bytes read and chars written.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> будет вызывать исключение, если выходной буфер не имеет достаточного объема, но <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> будет столько же места можно заполнить и возвращения байтов, считанных и записанных символов.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>Also see the <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph> topic for more comments.</source>
          <target state="translated">См. также <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph> раздел, описывающий дополнительные комментарии.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> или <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than the resulting number of characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> меньше результирующего числа символов.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">Произошла отработка отказа (см. полное объяснение в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">требуется полное доверие для непосредственно вызывающего метода.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Этот член не может использоваться частично доверенным или прозрачным кодом.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">Индекс первого декодируемого байта.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Число байтов для декодирования.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The character array to contain the resulting set of characters.</source>
          <target state="translated">Массив символов, в который будет помещен результирующий набор символов.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The index at which to start writing the resulting set of characters.</source>
          <target state="translated">Индекс, с которого начинается запись результирующего набора символов.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</source>
          <target state="translated">При переопределении в производном классе декодирует последовательность байтов из заданного массива байтов и все байты, расположенные во внутреннем буфере, в указанный массив символов.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The actual number of characters written into <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated">Фактическое число символов, записанных в <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Remember that the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> object saves state between calls to <ph id="ph2">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph>.</source>
          <target state="translated">Следует помнить, что <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> объект сохраняет состояние между вызовами <ph id="ph2">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>When the application is done with a stream of data, it should set the <ph id="ph1">`flush`</ph> parameter to <ph id="ph2">`true`</ph> to make sure that the state information is flushed.</source>
          <target state="translated">Если приложение выполняется с потоком данных, он должен устанавливать <ph id="ph1">`flush`</ph> параметр <ph id="ph2">`true`</ph> чтобы убедиться в том, что сведения о состоянии очищены.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</source>
          <target state="translated">Этот параметр декодер игнорирует недопустимые байты в конце блока данных и очищает внутренний буфер.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>To calculate the exact array size that <ph id="ph1">`GetChars`</ph> requires to store the resulting characters, the application should use <ph id="ph2">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">Для вычисления массиве точный размер, <ph id="ph1">`GetChars`</ph> требуется для хранения полученных символов, приложение должно использовать <ph id="ph2">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>If <ph id="ph1">`GetChars`</ph> is called with <ph id="ph2">`flush`</ph> set to <ph id="ph3">`false`</ph>, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</source>
          <target state="translated">Если <ph id="ph1">`GetChars`</ph> вызывается с <ph id="ph2">`flush`</ph> значение <ph id="ph3">`false`</ph>, декодер сохраняет замыкающие байты в конце блока данных во внутреннем буфере и использует их при следующей операции декодирования.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The application should call <ph id="ph1">`GetCharCount`</ph> on a block of data immediately before calling <ph id="ph2">`GetChars`</ph> on the same block, so that any trailing bytes from the previous block are included in the calculation.</source>
          <target state="translated">Приложение должно вызывать <ph id="ph1">`GetCharCount`</ph> для блока данных непосредственно перед вызовом <ph id="ph2">`GetChars`</ph> на том же блоке так, что в вычисление включаются все конечные байты из предыдущего блока.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>If your application is to convert many segments of an input stream, consider using the <ph id="ph1">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> method.</source>
          <target state="translated">Если приложение является преобразование много сегментов входного потока, рассмотрите возможность использования <ph id="ph1">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> will throw an exception if the output buffer isn't large enough, but <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> will fill as much space as possible and return the bytes read and chars written.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> будет вызывать исключение, если выходной буфер не имеет достаточного объема, но <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> будет столько же места можно заполнить и возвращения байтов, считанных и записанных символов.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Also see the <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph> topic for more comments.</source>
          <target state="translated">См. также <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph> раздел, описывающий дополнительные комментарии.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The following example demonstrates how to decode a range of elements from a byte array and store them in a Unicode character array.</source>
          <target state="translated">В следующем примере показано, как декодировать диапазон элементов из массива байтов и сохранить их в массиве знаков Юникода.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph> method is used to calculate the number of characters needed to store the decoded elements in the array <ph id="ph2">`bytes`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph> Метод используется для вычисления числа символов, необходимых для сохранения декодированных элементов в массиве <ph id="ph2">`bytes`</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> method decodes the specified elements in the byte array and stores them in the new character array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> Метод декодирует указанные элементы в массиве байтов и сохраняет их в новый массив символов.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> или <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">Параметры <ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> и <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> не указывают допустимый диапазон в <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> не является допустимым индексом в <ph id="ph2">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> to the end of the array to accommodate the resulting characters.</source>
          <target state="translated">Недостаточно емкости <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> от <ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> до конца массива для размещения полученных символов.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">Произошла отработка отказа (см. полное объяснение в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">Индекс первого декодируемого байта.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Число байтов для декодирования.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>The character array to contain the resulting set of characters.</source>
          <target state="translated">Массив символов, в который будет помещен результирующий набор символов.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>The index at which to start writing the resulting set of characters.</source>
          <target state="translated">Индекс, с которого начинается запись результирующего набора символов.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to clear the internal state of the decoder after the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> соответствует очистке внутреннего состояния декодера после преобразования; в противоположном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</source>
          <target state="translated">При переопределении в производном классе декодирует последовательность байтов из заданного массива байтов и все байты, расположенные во внутреннем буфере, в указанный массив символов.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>A parameter indicates whether to clear the internal state of the decoder after the conversion.</source>
          <target state="translated">Параметр указывает, следует ли очистить внутреннее состояние декодера после выполнения преобразования.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>The actual number of characters written into the <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> parameter.</source>
          <target state="translated">Фактическое количество символов, записанных в параметр <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>Remember that the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> object saves state between calls to <ph id="ph2">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph>.</source>
          <target state="translated">Следует помнить, что <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> объект сохраняет состояние между вызовами <ph id="ph2">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>When the application is done with a stream of data, it should set the <ph id="ph1">`flush`</ph> parameter to <ph id="ph2">`true`</ph> to make sure that the state information is flushed.</source>
          <target state="translated">Если приложение выполняется с потоком данных, он должен устанавливать <ph id="ph1">`flush`</ph> параметр <ph id="ph2">`true`</ph> чтобы убедиться в том, что сведения о состоянии очищены.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</source>
          <target state="translated">Этот параметр декодер игнорирует недопустимые байты в конце блока данных и очищает внутренний буфер.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>To calculate the exact array size that <ph id="ph1">`GetChars`</ph> requires to store the resulting characters, the application should use <ph id="ph2">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">Для вычисления массиве точный размер, <ph id="ph1">`GetChars`</ph> требуется для хранения полученных символов, приложение должно использовать <ph id="ph2">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>If <ph id="ph1">`GetChars`</ph> is called with <ph id="ph2">`flush`</ph> set to <ph id="ph3">`false`</ph>, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</source>
          <target state="translated">Если <ph id="ph1">`GetChars`</ph> вызывается с <ph id="ph2">`flush`</ph> значение <ph id="ph3">`false`</ph>, декодер сохраняет замыкающие байты в конце блока данных во внутреннем буфере и использует их при следующей операции декодирования.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>The application should call <ph id="ph1">`GetCharCount`</ph> on a block of data immediately before calling <ph id="ph2">`GetChars`</ph> on the same block, so that any trailing bytes from the previous block are included in the calculation.</source>
          <target state="translated">Приложение должно вызывать <ph id="ph1">`GetCharCount`</ph> для блока данных непосредственно перед вызовом <ph id="ph2">`GetChars`</ph> на том же блоке так, что в вычисление включаются все конечные байты из предыдущего блока.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>If your application is to convert many segments of an input stream, consider using the <ph id="ph1">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> method.</source>
          <target state="translated">Если приложение является преобразование много сегментов входного потока, рассмотрите возможность использования <ph id="ph1">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> will throw an exception if the output buffer isn't large enough, but <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> will fill as much space as possible and return the bytes read and chars written.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> будет вызывать исключение, если выходной буфер не имеет достаточного объема, но <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> будет столько же места можно заполнить и возвращения байтов, считанных и записанных символов.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>Also see the <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph> topic for more comments.</source>
          <target state="translated">См. также <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph> раздел, описывающий дополнительные комментарии.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> или <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">Параметры <ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> и <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> не указывают допустимый диапазон в <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> не является допустимым индексом в <ph id="ph2">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> to the end of the array to accommodate the resulting characters.</source>
          <target state="translated">Недостаточно емкости <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> от <ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> до конца массива для размещения полученных символов.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for fuller explanation)</source>
          <target state="translated">Произошла отработка отказа (см. полное объяснение в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>)</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Decoder.Fallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Text.Decoder.Reset">
          <source>When overridden in a derived class, sets the decoder back to its initial state.</source>
          <target state="translated">При переопределении в производном классе возвращает декодер в исходное состояние.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Reset">
          <source>This method clears the internal state of the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> object.</source>
          <target state="translated">Этот метод очищает внутреннее состояние <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Reset">
          <source>The method clears any state information preserved from a previous call to <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph>, including trailing bytes at the end of the previous data block.</source>
          <target state="translated">Метод очищает все сведения о состоянии, сохраненные на предыдущий вызов <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph>, в том числе конечные байты в конце предыдущего блока данных.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.Decoder.Reset">
          <source>Your application should call the <ph id="ph1">&lt;xref:System.Text.Decoder.Reset%2A&gt;</ph> method if it wants to reuse the same decoder even after an exception is thrown by <ph id="ph2">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph>, or if the decoder switches streams and begins to decode another stream.</source>
          <target state="translated">Приложение должно вызывать <ph id="ph1">&lt;xref:System.Text.Decoder.Reset%2A&gt;</ph> метод, если необходимо повторно использовать же декодер, даже после исключения <ph id="ph2">&lt;xref:System.Text.Decoder.GetChars%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph>, или <ph id="ph4">&lt;xref:System.Text.Decoder.GetCharCount%2A&gt;</ph>, или если декодер переключает потоки и начинает декодировать другой поток.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>