<Type Name="EncoderFallback" FullName="System.Text.EncoderFallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb4d2ada5bb8d79753e89f43de48c6c0d364a8b2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36607132" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EncoderFallback extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallback" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallback abstract" />
  <TypeSignature Language="F#" Value="type EncoderFallback = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет механизм обработки ошибок, называемый резервным вариантом, для входного символа, который не может быть преобразован в выходную последовательность закодированных байтов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Кодирование сопоставляет символ Юникода в закодированную последовательность байтов. Определенный кодирование представляет тип, который является производным от <xref:System.Text.Encoding> класса. В частности, символ кодируется в последовательность байтов, вызвав тип кодировки <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> метод и последовательности байтов декодируется в массиве символов или строку путем вызова <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> или <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType> метод.  
  
 Возможен сбой операции кодирования, если входной символ не может быть представлен кодировку. Например <xref:System.Text.ASCIIEncoding> объекта не может закодировать символ, которого значение кодовой точки Юникода выходит за пределы U + 0000 до U + 007F.  
  
 Если не удается выполнить преобразование кодировки, .NET Framework предоставляет механизм обработки ошибок, называемый резервным вариантом. Приложение может использовать предопределенные резервные варианты кодировщика .NET Framework или его можно создать пользовательские резерва кодировщика, производный от <xref:System.Text.EncoderFallback> и <xref:System.Text.EncoderFallbackBuffer> классы.  
  
 <xref:System.Text.EncoderFallback> и <xref:System.Text.EncoderFallbackBuffer> базовые классы для всех кодирование резервной обработчиков в платформе .NET Framework. Они поддерживают следующие три типа возврата механизмов обработки:  
  
-   Стратегия наилучшего соответствия резерв сопоставляется допустимыми символами Юникода, которые не удается закодировать приблизительный эквивалент. Например, наилучшего резервному обработчику для <xref:System.Text.ASCIIEncoding> класс может сопоставить Æ (U + 00 C 6) AE (U + 0041 + U + 0045). Резервная стратегия наилучшего соответствия обработчик также можно назначить для transliterate одной буквы (например, кириллица) на другой (например, Латинская или латинского). .NET Framework предоставляет резервной реализации любых открытых резервную стратегию наилучшего соответствия.  
  
-   Стратегия, замены, который заменяет каждый символ, который не может быть закодирован с заранее определенной строки. .NET Framework предоставляет предопределенные замены резервному обработчику. <xref:System.Text.EncoderReplacementFallback> Заменяет класс каждой последовательности байтов, который не удается декодировать символ вопросительного знака («?», или U + 003F) или замещающий символ (U + FFFD). Строка замены можно настроить, указав замены в вызове <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> конструктор. После выдачи замещающую строку операция кодирования продолжает преобразование оставшейся части входных данных.  
  
-   Резервная стратегия исключения, который создает исключение, когда символ не может быть закодирован. .NET Framework предоставляет резервному обработчику предопределенных исключений. <xref:System.Text.EncoderExceptionFallback> Класса вызывает <xref:System.Text.EncoderFallbackException> при обнаружен недопустимый символ и завершает выполнение операции кодирования.  
  
 Если вы решили реализовать пользовательское решение, необходимо переопределить следующие члены абстрактного класса <xref:System.Text.EncoderFallback> класса:  
  
-   <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> Метод, который возвращает экземпляр класса, производного от <xref:System.Text.EncoderFallbackBuffer>. В зависимости от типа резервному обработчику, которую вы разрабатываете <xref:System.Text.EncoderFallbackBuffer> реализация отвечает, для выполнения сопоставления или замены, и для создания исключения.  
  
-   <xref:System.Text.EncoderFallback.MaxCharCount%2A> Свойство, которое возвращает максимальное число символов, которые может вернуть реализацию резервной стратегии. Для отката обработчика исключений его значение должно быть равно нулю.  
  
 Дополнительные сведения о кодировки, декодирование и резервной стратегии. в разделе [кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallbackBuffer" />
    <altmember cref="T:System.Text.EncoderReplacementFallback" />
    <altmember cref="T:System.Text.EncoderExceptionFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallback.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallback();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.EncoderFallback" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public abstract System.Text.EncoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.EncoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallback.CreateFallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateFallbackBuffer () As EncoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::EncoderFallbackBuffer ^ CreateFallbackBuffer();" />
      <MemberSignature Language="F#" Value="abstract member CreateFallbackBuffer : unit -&gt; System.Text.EncoderFallbackBuffer" Usage="encoderFallback.CreateFallbackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При переопределении в производном классе инициализирует новый экземпляр класса <see cref="T:System.Text.EncoderFallbackBuffer" />.</summary>
        <returns>Объект, предоставляющий резервный буфер для кодировщика.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает объект, производный от <xref:System.Text.EncoderFallbackBuffer> , несет ответственность за выполнение операции резервирования. Например, из предварительно определенных <xref:System.Text.EncoderFallback> реализации в .NET Framework, <xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> возвращает метод <xref:System.Text.EncoderReplacementFallbackBuffer> объекта и <xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> возвращает метод <xref:System.Text.EncoderExceptionFallbackBuffer> объекта.  
  
 <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> Метод вызывается кодировщиком, когда он встречает первый символ, который не удается закодировать. <xref:System.Text.EncoderFallbackBuffer> Объект, возвращаемый этим методом содержит реализацию резервной стратегии и возвращает массив байтов, который заменяет символ или символы, которые не удалось закодировать.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.DecoderFallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionFallback">
      <MemberSignature Language="C#" Value="public static System.Text.EncoderFallback ExceptionFallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncoderFallback ExceptionFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.ExceptionFallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExceptionFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncoderFallback ^ ExceptionFallback { System::Text::EncoderFallback ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionFallback : System.Text.EncoderFallback" Usage="System.Text.EncoderFallback.ExceptionFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект, который создает исключение, если входной символ не может быть закодирован.</summary>
        <value>Тип, производный от класса <see cref="T:System.Text.EncoderFallback" />. Значение объекта по умолчанию равно <see cref="T:System.Text.EncoderExceptionFallback" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public abstract int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.MaxCharCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MaxCharCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MaxCharCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharCount : int" Usage="System.Text.EncoderFallback.MaxCharCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении в производном классе возвращает максимальное число символов, которые могут быть возвращены текущим объектом <see cref="T:System.Text.EncoderFallback" />.</summary>
        <value>Максимальное число символов, которые может вернуть текущий объект <see cref="T:System.Text.EncoderFallback" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для отката обработчика исключений это свойство должно возвращать ноль.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacementFallback">
      <MemberSignature Language="C#" Value="public static System.Text.EncoderFallback ReplacementFallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncoderFallback ReplacementFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.ReplacementFallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ReplacementFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncoderFallback ^ ReplacementFallback { System::Text::EncoderFallback ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplacementFallback : System.Text.EncoderFallback" Usage="System.Text.EncoderFallback.ReplacementFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект, выводящий замещающую строку вместо входного символа, который не может быть закодирован.</summary>
        <value>Тип, производный от класса <see cref="T:System.Text.EncoderFallback" />. Значением по умолчанию является объект <see cref="T:System.Text.EncoderReplacementFallback" />, замещающий неизвестные входные символы символом ЗНАКА ВОПРОСА ("?", U+003F).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>