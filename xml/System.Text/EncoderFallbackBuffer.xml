<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="116c4743750d62c78bf7a85e6e5dff453828390b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529078" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4ea70-101">Предоставляет буфер, позволяющий резервному обработчику возвращать в кодировщик альтернативную строку, если он не может закодировать входной символ.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ea70-101">Provides a buffer that allows a fallback handler to return an alternate string to an encoder when it cannot encode an input character.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ea70-102">Кодирование определяет сопоставление между символом Юникода и закодированную последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="4ea70-102">An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</span></span> <span data-ttu-id="4ea70-103">Операции кодирования, преобразующее входной символ в выходную последовательность байтов, не выполняется, если сопоставление не определено для конкретного символа.</span><span class="sxs-lookup"><span data-stu-id="4ea70-103">An encoding operation, which converts an input character to an output byte sequence, fails if no mapping is defined for a particular character.</span></span>  
  
 <span data-ttu-id="4ea70-104">.NET Framework предоставляет механизм обработки ошибок, называемый резервным вариантом, если преобразование выполнить невозможно.</span><span class="sxs-lookup"><span data-stu-id="4ea70-104">The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</span></span> <span data-ttu-id="4ea70-105">Все обработчики резервной кодировщика необходимо реализовать следующие:</span><span class="sxs-lookup"><span data-stu-id="4ea70-105">All encoder fallback handlers must implement the following:</span></span>  
  
-   <span data-ttu-id="4ea70-106">Кодировщик отката, который представлен классом производным от <xref:System.Text.EncoderFallback> класса.</span><span class="sxs-lookup"><span data-stu-id="4ea70-106">An encoder fallback, which is represented by a class derived from the <xref:System.Text.EncoderFallback> class.</span></span>  
  
-   <span data-ttu-id="4ea70-107">Буфер резерва кодировщика, представленный объектом типа, производного от <xref:System.Text.EncoderFallbackBuffer> класс, который может возвращать строку в операцию преобразования.</span><span class="sxs-lookup"><span data-stu-id="4ea70-107">An encoder fallback buffer, which is represented by a type derived from the <xref:System.Text.EncoderFallbackBuffer> class that can return a string to the conversion operation.</span></span>  
  
 <span data-ttu-id="4ea70-108">В случае ошибки можно использовать три стратегии обработки ошибок преобразования:</span><span class="sxs-lookup"><span data-stu-id="4ea70-108">Fallbacks can use three strategies to handle conversion failures:</span></span>  
  
-   <span data-ttu-id="4ea70-109">Наилучшее сопоставление.</span><span class="sxs-lookup"><span data-stu-id="4ea70-109">Best-fit mapping.</span></span> <span data-ttu-id="4ea70-110">Буфер резерва кодировщика может возвращать строку, представляющую приближено входной символ.</span><span class="sxs-lookup"><span data-stu-id="4ea70-110">The encoder fallback buffer can return a string that represents a close approximation to the input character.</span></span> <span data-ttu-id="4ea70-111">Платформа .NET Framework не предоставляет открытый наилучшего <xref:System.Text.EncoderFallbackBuffer> реализации.</span><span class="sxs-lookup"><span data-stu-id="4ea70-111">The .NET Framework does not provide a public best-fit <xref:System.Text.EncoderFallbackBuffer> implementation.</span></span>  
  
-   <span data-ttu-id="4ea70-112">Замена.</span><span class="sxs-lookup"><span data-stu-id="4ea70-112">Replacement.</span></span> <span data-ttu-id="4ea70-113">Буфер резерва кодировщика можно вернуть строку, таких как знак вопроса ("?»), которое указывает, что символ не удается закодировать.</span><span class="sxs-lookup"><span data-stu-id="4ea70-113">The encoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a character could not be encoded.</span></span> <span data-ttu-id="4ea70-114">В платформе .NET Framework <xref:System.Text.EncoderReplacementFallback> и <xref:System.Text.EncoderReplacementFallbackBuffer> классы предоставляют реализацию резервный буфер открытый замены.</span><span class="sxs-lookup"><span data-stu-id="4ea70-114">In the .NET Framework, the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.EncoderReplacementFallbackBuffer> classes provide a public replacement fallback buffer implementation.</span></span> <span data-ttu-id="4ea70-115">Конструктор <xref:System.Text.EncoderReplacementFallback> позволяет определить строку замены.</span><span class="sxs-lookup"><span data-stu-id="4ea70-115">The constructor of the <xref:System.Text.EncoderReplacementFallback> class enables you to define the replacement string.</span></span>  
  
-   <span data-ttu-id="4ea70-116">Исключение.</span><span class="sxs-lookup"><span data-stu-id="4ea70-116">Exception.</span></span> <span data-ttu-id="4ea70-117"><xref:System.Text.EncoderFallbackBuffer> Реализация вызывает исключение, которое указывает, что символ не удается закодировать и завершает операции кодирования.</span><span class="sxs-lookup"><span data-stu-id="4ea70-117">The <xref:System.Text.EncoderFallbackBuffer> implementation throws an exception, which indicates that a character cannot be encoded, and terminates the encoding operation.</span></span> <span data-ttu-id="4ea70-118">В этом случае необходимо предоставить резервному обработчику <xref:System.Text.EncoderFallbackBuffer> реализацию, несмотря на то, что он не возвращает строки в кодировщик.</span><span class="sxs-lookup"><span data-stu-id="4ea70-118">In this case, the fallback handler must provide an <xref:System.Text.EncoderFallbackBuffer> implementation, although it does not return a string to the encoder.</span></span> <span data-ttu-id="4ea70-119">В платформе .NET Framework <xref:System.Text.EncoderExceptionFallback> и <xref:System.Text.EncoderExceptionFallbackBuffer> классы предоставляют реализацию резервной стратегии исключения открытый, которой создается <xref:System.Text.EncoderFallbackException> когда символ не может быть закодирован.</span><span class="sxs-lookup"><span data-stu-id="4ea70-119">In the .NET Framework, the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderExceptionFallbackBuffer> classes provide a public exception fallback implementation that throws an <xref:System.Text.EncoderFallbackException> when a character cannot be encoded.</span></span>  
  
 <span data-ttu-id="4ea70-120">Буфер, в <xref:System.Text.EncoderFallbackBuffer> реализации представляет всю строку, возвращаемых в ответ на кодировщик кодировщик резервной.</span><span class="sxs-lookup"><span data-stu-id="4ea70-120">The buffer in an <xref:System.Text.EncoderFallbackBuffer> implementation represents the entire string to be returned to the encoder in response to an encoder fallback.</span></span> <span data-ttu-id="4ea70-121">Как правило реализации также включают сведения о состоянии, например индекса следующего символа, вернуться к кодировщик и количество оставшихся символов, должны быть возвращены.</span><span class="sxs-lookup"><span data-stu-id="4ea70-121">Generally, implementations also include state information, such as the index of the next character to return to the encoder and the number of remaining characters to be returned.</span></span> <span data-ttu-id="4ea70-122">Поскольку <xref:System.Text.EncoderFallbackBuffer> — это абстрактный класс, требуется производным классам реализовывать по крайней мере следующие члены:</span><span class="sxs-lookup"><span data-stu-id="4ea70-122">Because <xref:System.Text.EncoderFallbackBuffer> is an abstract class, it requires derived classes to implement the following members at a minimum:</span></span>  
  
-   <span data-ttu-id="4ea70-123">Перегруженный <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> метод, который вызывается кодировщиком, когда он не может закодировать символ.</span><span class="sxs-lookup"><span data-stu-id="4ea70-123">The overloaded <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method, which is called by the encoder when it cannot encode a character.</span></span> <span data-ttu-id="4ea70-124">Кодировщик передает два блока данных в резервном буфере реализацию: символа или суррогатной пары, который не удалось закодировать и индекс символа во входных данных.</span><span class="sxs-lookup"><span data-stu-id="4ea70-124">The encoder passes two pieces of information to the fallback buffer implementation: the character or surrogate pair that could not be encoded and the index of the character in the input.</span></span> <span data-ttu-id="4ea70-125">В обработчике отката исключений кодировщика исключение в этом методе.</span><span class="sxs-lookup"><span data-stu-id="4ea70-125">In an encoder fallback exception handler, the exception is thrown in this method.</span></span> <span data-ttu-id="4ea70-126">В противном случае метод возвращает `true` если оно предоставляет переход на резервный ресурс или `false` Если это не так.</span><span class="sxs-lookup"><span data-stu-id="4ea70-126">Otherwise, the method returns `true` if it provides a fallback, or `false` if it does not.</span></span>  
  
-   <span data-ttu-id="4ea70-127"><xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> Метод, который повторно вызывается кодировщиком, если <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="4ea70-127">The <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method, which is called repeatedly by the encoder if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`.</span></span> <span data-ttu-id="4ea70-128">При последующих вызовах обработчик должен возвращать каждый символ в буфере.</span><span class="sxs-lookup"><span data-stu-id="4ea70-128">In successive calls, the handler should return each character in its buffer.</span></span> <span data-ttu-id="4ea70-129">Вернув все символы, он должен возвращать U + 0000.</span><span class="sxs-lookup"><span data-stu-id="4ea70-129">When it has returned all characters, it should return U+0000.</span></span> <span data-ttu-id="4ea70-130">Обработчик исключений всегда возвращает U + 0000.</span><span class="sxs-lookup"><span data-stu-id="4ea70-130">An exception handler always returns U+0000.</span></span>  
  
-   <span data-ttu-id="4ea70-131"><xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> Метод, который пытается переместить указатель в предыдущее расположение в буфере и указывает, успешно ли выполнено перемещение.</span><span class="sxs-lookup"><span data-stu-id="4ea70-131">The <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</span></span> <span data-ttu-id="4ea70-132">Всегда возвращает обработчик исключений `false`.</span><span class="sxs-lookup"><span data-stu-id="4ea70-132">An exception handler always returns `false`.</span></span>  
  
-   <span data-ttu-id="4ea70-133"><xref:System.Text.EncoderFallbackBuffer.Remaining%2A> Свойство, которое указывает количество оставшихся символов, возвращаемых в кодировщик.</span><span class="sxs-lookup"><span data-stu-id="4ea70-133">The <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> property, which indicates the number of remaining characters to be returned to the encoder.</span></span> <span data-ttu-id="4ea70-134">Обработчик исключений резервной всегда возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="4ea70-134">An exception fallback handler always returns zero.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ea70-135">Инициализирует новый экземпляр класса <see cref="T:System.Text.EncoderFallbackBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-135">Initializes a new instance of the <see cref="T:System.Text.EncoderFallbackBuffer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4ea70-136">Указывает, что замещающая строка доступна, если исходная входная последовательность не может быть закодирована или если исходная входная последовательность должна быть проигнорирована.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-136">Indicates whether a substitute string is available when the original input cannot be encoded, or whether the original input should be ignored.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">
          <span data-ttu-id="4ea70-137">Входной символ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-137">An input character.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4ea70-138">Позиция индекса символа во входном буфере.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-138">The index position of the character in the input buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ea70-139">При переопределении в производном классе готовит резервный буфер для обработки указанного входного символа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-139">When overridden in a derived class, prepares the fallback buffer to handle the specified input character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ea70-140">
            <see langword="true" />, если резервный буфер может обработать <paramref name="charUnknown" />; <see langword="false" />, если резервный буфер игнорирует <paramref name="charUnknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-140">
              <see langword="true" /> if the fallback buffer can process <paramref name="charUnknown" />; <see langword="false" /> if the fallback buffer ignores <paramref name="charUnknown" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ea70-141"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> И <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вызов методов <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> при обнаружении неизвестного входного символа, который не может быть закодирован.</span><span class="sxs-lookup"><span data-stu-id="4ea70-141">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> if they encounter an unknown input character that cannot be encoded.</span></span> <span data-ttu-id="4ea70-142">Возвращаемое значение `true` указывает, что резервный буфер может обрабатывать входного символа, вследствие чего вызывающий метод, вызываемый <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> метод для получения каждого символа из резервного буфера.</span><span class="sxs-lookup"><span data-stu-id="4ea70-142">A return value of `true` indicates that the fallback buffer can process the input character, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span> <span data-ttu-id="4ea70-143">Так как он не обрабатывает отдельных символов <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> метод в резервный обработчик исключений вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="4ea70-143">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">
          <span data-ttu-id="4ea70-144">Старший символ-заместитель входной пары.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-144">The high surrogate of the input pair.</span>
          </span>
        </param>
        <param name="charUnknownLow">
          <span data-ttu-id="4ea70-145">Младший символ-заместитель входной пары.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-145">The low surrogate of the input pair.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4ea70-146">Позиция индекса суррогатной пары во входном буфере.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-146">The index position of the surrogate pair in the input buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ea70-147">При переопределении в производном классе готовит резервный буфер для обработки указанной суррогатной пары.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-147">When overridden in a derived class, prepares the fallback buffer to handle the specified surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ea70-148">
            <see langword="true" />, если резервный буфер может обработать <paramref name="charUnknownHigh" /> и <paramref name="charUnknownLow" />, <see langword="false" />, если резервный буфер игнорирует суррогатную пару.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-148">
              <see langword="true" /> if the fallback buffer can process <paramref name="charUnknownHigh" /> and <paramref name="charUnknownLow" />; <see langword="false" /> if the fallback buffer ignores the surrogate pair.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ea70-149"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> И <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вызов методов <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> при обнаружении суррогатной пары во входные данные.</span><span class="sxs-lookup"><span data-stu-id="4ea70-149">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> if they encounter a surrogate pair in their input.</span></span> <span data-ttu-id="4ea70-150">Возвращаемое значение `true` указывает, что резервный буфер может обрабатывать суррогатной пары, что приведет к тому вызывающий метод, вызываемый <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> метод для получения каждого символа из резервного буфера.</span><span class="sxs-lookup"><span data-stu-id="4ea70-150">A return value of `true` indicates that the fallback buffer can process the surrogate pair, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span>  <span data-ttu-id="4ea70-151">Так как он не обрабатывает отдельных символов <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> метод в резервный обработчик исключений вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="4ea70-151">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ea70-152">При переопределении в производном классе извлекает следующий символ в резервном буфере.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-152">When overridden in a derived class, retrieves the next character in the fallback buffer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ea70-153">Следующий символ в резервном буфере.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-153">The next character in the fallback buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ea70-154">Вызывает операции кодирования <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> метод, если операция обнаруживает неизвестный символ или суррогатную пару во входных данных.</span><span class="sxs-lookup"><span data-stu-id="4ea70-154">An encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method if the operation encounters an unknown character or surrogate pair in the input.</span></span> <span data-ttu-id="4ea70-155">Например, в случае замены задания резервной стратегии, если <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> возвращает метод `true`, замещающая строка существует, можно закодировать вместо неизвестных входных данных.</span><span class="sxs-lookup"><span data-stu-id="4ea70-155">For example, in the case of a replacement fallback, if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`, a substitute string exists that can be encoded instead of the unknown input.</span></span> <span data-ttu-id="4ea70-156">Вызов операции кодирования <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> метода несколько раз и получает один символ замены строки одновременно.</span><span class="sxs-lookup"><span data-stu-id="4ea70-156">The encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method repeatedly and obtains the substitute string one character at a time.</span></span> <span data-ttu-id="4ea70-157">Если все знаки в резервном буфере были возвращены в кодировщик <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> метод должен возвращать U + 0000.</span><span class="sxs-lookup"><span data-stu-id="4ea70-157">When all characters in the fallback buffer have been returned to the encoder, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 <span data-ttu-id="4ea70-158">Для обработчика исключений резервной <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> метод должен возвращать U + 0000.</span><span class="sxs-lookup"><span data-stu-id="4ea70-158">For an exception fallback handler, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ea70-159">При переопределении в производный класс становится причиной того, что в следующем вызове метод <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> получает доступ к позиции символа в буфере данных, предшествующей текущей позиции символа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-159">When overridden in a derived class, causes the next call to the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method to access the data buffer character position that is prior to the current character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ea70-160">Значение <see langword="true" />, если операция <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> выполнена успешно; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-160">
              <see langword="true" /> if the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> operation was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ea70-161">Резервный обработчик исключений должен возвращать `false`.</span><span class="sxs-lookup"><span data-stu-id="4ea70-161">An exception fallback handler should return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ea70-162">При переопределении в производном классе возвращает максимальное число символов в текущем объекте <see cref="T:System.Text.EncoderFallbackBuffer" />, которые остаются для обработки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-162">When overridden in a derived class, gets the number of characters in the current <see cref="T:System.Text.EncoderFallbackBuffer" /> object that remain to be processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ea70-163">Количество символов в текущем резервном буфере, которые еще не были обработаны.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-163">The number of characters in the current fallback buffer that have not yet been processed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ea70-164"><xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Возвращает `true` Если <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> имеет ненулевое значение.</span><span class="sxs-lookup"><span data-stu-id="4ea70-164">The <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true` if <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> is a nonzero value.</span></span>  
  
 <span data-ttu-id="4ea70-165">Для обработчика исключений резервной <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> метод должен возвращать нуль.</span><span class="sxs-lookup"><span data-stu-id="4ea70-165">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> method should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ea70-166">Инициализирует все данные и сведения о состоянии, относящиеся к этому резервному буферу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ea70-166">Initializes all data and state information pertaining to this fallback buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4ea70-167">После вызова метода <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> метода <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> свойство должно возвращать 0, <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> метод должен возвращать U + 0000 и <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> метод должен возвращать <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4ea70-167">After calling the <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> method, the <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> property should return 0, the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method should return U+0000, and the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> method should return <see langword="false" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>