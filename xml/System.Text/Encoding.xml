<Type Name="Encoding" FullName="System.Text.Encoding">
  <TypeSignature Language="C#" Value="public abstract class Encoding : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Encoding extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Encoding" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Encoding&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Encoding abstract : ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2d2f5-101">Представляет кодировку символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-101">Represents a character encoding.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-102">Кодирование - это процесс преобразования набора символов Юникода в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="2d2f5-103">В отличие от этого декодирование — это процесс преобразования последовательности закодированных байтов в набор символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-103">In contrast, decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span> <span data-ttu-id="2d2f5-104">Сведения о Юникоде преобразование форматов (форматах UTF) и другие кодировки, поддерживаемые <xref:System.Text.Encoding>, в разделе [кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-104">For information about the Unicode Transformation Formats (UTFs) and other encodings supported by <xref:System.Text.Encoding>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="2d2f5-105">Обратите внимание, что <xref:System.Text.Encoding> предназначен для работы с символами Юникода вместо произвольных двоичных данных, таких как массивы байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-105">Note that <xref:System.Text.Encoding> is intended to operate on Unicode characters instead of arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="2d2f5-106">Если необходимо закодировать произвольные двоичные данные в текст, следует использовать такой протокол, как uuencode, который реализуется методами, такими как <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-106">If you must encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2d2f5-107">Платформа .NET Framework предоставляет следующие реализации <xref:System.Text.Encoding> класс для поддержки текущих кодировок Юникода и других кодировок:</span><span class="sxs-lookup"><span data-stu-id="2d2f5-107">The .NET Framework provides the following implementations of the <xref:System.Text.Encoding> class to support current Unicode encodings and other encodings:</span></span>  
  
-   <span data-ttu-id="2d2f5-108"><xref:System.Text.ASCIIEncoding> Кодирует символы Юникода как один 7-разрядных символов ASCII.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-108"><xref:System.Text.ASCIIEncoding> encodes Unicode characters as single 7-bit ASCII characters.</span></span> <span data-ttu-id="2d2f5-109">Данная кодировка поддерживает только значения символов от U + 0000 и U + 007F.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-109">This encoding only supports character values between U+0000 and U+007F.</span></span> <span data-ttu-id="2d2f5-110">Кодовая страница 20127.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-110">Code page 20127.</span></span> <span data-ttu-id="2d2f5-111">Также доступно в <xref:System.Text.Encoding.ASCII%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-111">Also available through the <xref:System.Text.Encoding.ASCII%2A> property.</span></span>  
  
-   <span data-ttu-id="2d2f5-112"><xref:System.Text.UTF7Encoding> Кодирует символы Юникода в кодировке UTF-7.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-112"><xref:System.Text.UTF7Encoding> encodes Unicode characters using the UTF-7 encoding.</span></span> <span data-ttu-id="2d2f5-113">Эта кодировка поддерживает все символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-113">This encoding supports all Unicode character values.</span></span> <span data-ttu-id="2d2f5-114">Кодовая страница 65000.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-114">Code page 65000.</span></span> <span data-ttu-id="2d2f5-115">Также доступно в <xref:System.Text.Encoding.UTF7%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-115">Also available through the <xref:System.Text.Encoding.UTF7%2A> property.</span></span>  
  
-   <span data-ttu-id="2d2f5-116"><xref:System.Text.UTF8Encoding> Кодирует символы Юникода с использованием кодировки UTF-8.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-116"><xref:System.Text.UTF8Encoding> encodes Unicode characters using the UTF-8 encoding.</span></span> <span data-ttu-id="2d2f5-117">Эта кодировка поддерживает все символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-117">This encoding supports all Unicode character values.</span></span> <span data-ttu-id="2d2f5-118">Кодовая страница 65001.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-118">Code page 65001.</span></span> <span data-ttu-id="2d2f5-119">Также доступно в <xref:System.Text.Encoding.UTF8%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-119">Also available through the <xref:System.Text.Encoding.UTF8%2A> property.</span></span>  
  
-   <span data-ttu-id="2d2f5-120"><xref:System.Text.UnicodeEncoding> Кодирует символы Юникода в кодировке UTF-16.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-120"><xref:System.Text.UnicodeEncoding> encodes Unicode characters using the UTF-16 encoding.</span></span> <span data-ttu-id="2d2f5-121">Поддерживаются оба порядка прямым порядком следования байтов и больших порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-121">Both little endian and big endian byte orders are supported.</span></span> <span data-ttu-id="2d2f5-122">Также доступно в <xref:System.Text.Encoding.Unicode%2A> свойство и <xref:System.Text.Encoding.BigEndianUnicode%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-122">Also available through the <xref:System.Text.Encoding.Unicode%2A> property and the <xref:System.Text.Encoding.BigEndianUnicode%2A> property.</span></span>  
  
-   <span data-ttu-id="2d2f5-123"><xref:System.Text.UTF32Encoding> Кодирует символы Юникода в кодировке UTF-32.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-123"><xref:System.Text.UTF32Encoding> encodes Unicode characters using the UTF-32 encoding.</span></span> <span data-ttu-id="2d2f5-124">Прямой порядок байтов (кодовая страница 12000) поддерживаются как и байтов с обратным порядком байтов (кодовая страница 12001) заказов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-124">Both little endian (code page 12000) and big endian (code page 12001) byte orders are supported.</span></span> <span data-ttu-id="2d2f5-125">Также доступно в <xref:System.Text.Encoding.UTF32%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-125">Also available through the <xref:System.Text.Encoding.UTF32%2A> property.</span></span>  
  
 <span data-ttu-id="2d2f5-126"><xref:System.Text.Encoding> Класс в основном предназначен для преобразования между разными кодировками и Юникодом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-126">The <xref:System.Text.Encoding> class is primarily intended to convert between different encodings and Unicode.</span></span> <span data-ttu-id="2d2f5-127">Часто один из производных классов Юникода является правильным выбором для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-127">Often one of the derived Unicode classes is the correct choice for your app.</span></span>  
  
 <span data-ttu-id="2d2f5-128">Используйте <xref:System.Text.Encoding.GetEncoding%2A> метод для получения других кодировок и вызвать <xref:System.Text.Encoding.GetEncodings%2A> метод для получения списка всех кодировок.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-128">Use the <xref:System.Text.Encoding.GetEncoding%2A> method to obtain other encodings, and call the <xref:System.Text.Encoding.GetEncodings%2A> method to get a list of all encodings.</span></span>  
  
 <span data-ttu-id="2d2f5-129">В следующей таблице перечислены кодировок, поддерживаемых платформой .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-129">The following table lists the encodings supported by the .NET Framework.</span></span> <span data-ttu-id="2d2f5-130">Перечисляются каждой кодировки номер кодовой страницы и значения кодировки <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> и <xref:System.Text.EncodingInfo.DisplayName%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-130">It lists each encoding's code page number and the values of the encoding's <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> and <xref:System.Text.EncodingInfo.DisplayName%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="2d2f5-131">Звездочка в последнем столбце указывает, что кодовая страница встроена в .NET Framework, независимо от базовой платформы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-131">An asterisk in the last column indicates that the code page is natively supported by the .NET Framework, regardless of the underlying platform.</span></span> <span data-ttu-id="2d2f5-132">Обратите внимание, что кодовые страницы, <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> свойство соответствует международному стандарту не обязательно соответствуют полностью с этого стандарта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-132">Note that code pages whose <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> property corresponds to an international standard do not necessarily comply in full with that standard.</span></span>  
  
|<span data-ttu-id="2d2f5-133">Кодовая страница</span><span class="sxs-lookup"><span data-stu-id="2d2f5-133">Code page</span></span>|<span data-ttu-id="2d2f5-134">name</span><span class="sxs-lookup"><span data-stu-id="2d2f5-134">Name</span></span>|<span data-ttu-id="2d2f5-135">Отображаемое имя</span><span class="sxs-lookup"><span data-stu-id="2d2f5-135">Display name</span></span>|<span data-ttu-id="2d2f5-136">Поддержка .NET framework</span><span class="sxs-lookup"><span data-stu-id="2d2f5-136">.NET Framework support</span></span>|  
|---------------|----------|------------------|----------------------------|  
|<span data-ttu-id="2d2f5-137">37</span><span class="sxs-lookup"><span data-stu-id="2d2f5-137">37</span></span>|<span data-ttu-id="2d2f5-138">IBM037</span><span class="sxs-lookup"><span data-stu-id="2d2f5-138">IBM037</span></span>|<span data-ttu-id="2d2f5-139">IBM EBCDIC (США Канада)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-139">IBM EBCDIC (US-Canada)</span></span>||  
|<span data-ttu-id="2d2f5-140">437</span><span class="sxs-lookup"><span data-stu-id="2d2f5-140">437</span></span>|<span data-ttu-id="2d2f5-141">IBM437</span><span class="sxs-lookup"><span data-stu-id="2d2f5-141">IBM437</span></span>|<span data-ttu-id="2d2f5-142">OEM США</span><span class="sxs-lookup"><span data-stu-id="2d2f5-142">OEM United States</span></span>||  
|<span data-ttu-id="2d2f5-143">500</span><span class="sxs-lookup"><span data-stu-id="2d2f5-143">500</span></span>|<span data-ttu-id="2d2f5-144">IBM500</span><span class="sxs-lookup"><span data-stu-id="2d2f5-144">IBM500</span></span>|<span data-ttu-id="2d2f5-145">IBM EBCDIC (международный)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-145">IBM EBCDIC (International)</span></span>||  
|<span data-ttu-id="2d2f5-146">708</span><span class="sxs-lookup"><span data-stu-id="2d2f5-146">708</span></span>|<span data-ttu-id="2d2f5-147">ASMO-708</span><span class="sxs-lookup"><span data-stu-id="2d2f5-147">ASMO-708</span></span>|<span data-ttu-id="2d2f5-148">Арабский (ASMO 708)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-148">Arabic (ASMO 708)</span></span>||  
|<span data-ttu-id="2d2f5-149">720</span><span class="sxs-lookup"><span data-stu-id="2d2f5-149">720</span></span>|<span data-ttu-id="2d2f5-150">DOS-720</span><span class="sxs-lookup"><span data-stu-id="2d2f5-150">DOS-720</span></span>|<span data-ttu-id="2d2f5-151">Арабский (DOS)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-151">Arabic (DOS)</span></span>||  
|<span data-ttu-id="2d2f5-152">737</span><span class="sxs-lookup"><span data-stu-id="2d2f5-152">737</span></span>|<span data-ttu-id="2d2f5-153">ibm737</span><span class="sxs-lookup"><span data-stu-id="2d2f5-153">ibm737</span></span>|<span data-ttu-id="2d2f5-154">Греческий (DOS)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-154">Greek (DOS)</span></span>||  
|<span data-ttu-id="2d2f5-155">775</span><span class="sxs-lookup"><span data-stu-id="2d2f5-155">775</span></span>|<span data-ttu-id="2d2f5-156">ibm775</span><span class="sxs-lookup"><span data-stu-id="2d2f5-156">ibm775</span></span>|<span data-ttu-id="2d2f5-157">Балтийская (DOS)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-157">Baltic (DOS)</span></span>||  
|<span data-ttu-id="2d2f5-158">850</span><span class="sxs-lookup"><span data-stu-id="2d2f5-158">850</span></span>|<span data-ttu-id="2d2f5-159">ibm850</span><span class="sxs-lookup"><span data-stu-id="2d2f5-159">ibm850</span></span>|<span data-ttu-id="2d2f5-160">Западноевропейская (DOS)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-160">Western European (DOS)</span></span>||  
|<span data-ttu-id="2d2f5-161">852</span><span class="sxs-lookup"><span data-stu-id="2d2f5-161">852</span></span>|<span data-ttu-id="2d2f5-162">ibm852</span><span class="sxs-lookup"><span data-stu-id="2d2f5-162">ibm852</span></span>|<span data-ttu-id="2d2f5-163">Центральная Европа (DOS)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-163">Central European (DOS)</span></span>||  
|<span data-ttu-id="2d2f5-164">855</span><span class="sxs-lookup"><span data-stu-id="2d2f5-164">855</span></span>|<span data-ttu-id="2d2f5-165">IBM855</span><span class="sxs-lookup"><span data-stu-id="2d2f5-165">IBM855</span></span>|<span data-ttu-id="2d2f5-166">OEM-кириллица</span><span class="sxs-lookup"><span data-stu-id="2d2f5-166">OEM Cyrillic</span></span>||  
|<span data-ttu-id="2d2f5-167">857</span><span class="sxs-lookup"><span data-stu-id="2d2f5-167">857</span></span>|<span data-ttu-id="2d2f5-168">ibm857</span><span class="sxs-lookup"><span data-stu-id="2d2f5-168">ibm857</span></span>|<span data-ttu-id="2d2f5-169">Турецкий (DOS)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-169">Turkish (DOS)</span></span>||  
|<span data-ttu-id="2d2f5-170">858</span><span class="sxs-lookup"><span data-stu-id="2d2f5-170">858</span></span>|<span data-ttu-id="2d2f5-171">IBM00858</span><span class="sxs-lookup"><span data-stu-id="2d2f5-171">IBM00858</span></span>|<span data-ttu-id="2d2f5-172">OEM многоязычная латиница I</span><span class="sxs-lookup"><span data-stu-id="2d2f5-172">OEM Multilingual Latin I</span></span>||  
|<span data-ttu-id="2d2f5-173">860</span><span class="sxs-lookup"><span data-stu-id="2d2f5-173">860</span></span>|<span data-ttu-id="2d2f5-174">IBM860</span><span class="sxs-lookup"><span data-stu-id="2d2f5-174">IBM860</span></span>|<span data-ttu-id="2d2f5-175">Португальский (DOS)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-175">Portuguese (DOS)</span></span>||  
|<span data-ttu-id="2d2f5-176">861</span><span class="sxs-lookup"><span data-stu-id="2d2f5-176">861</span></span>|<span data-ttu-id="2d2f5-177">ibm861</span><span class="sxs-lookup"><span data-stu-id="2d2f5-177">ibm861</span></span>|<span data-ttu-id="2d2f5-178">Исландский (DOS)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-178">Icelandic (DOS)</span></span>||  
|<span data-ttu-id="2d2f5-179">862</span><span class="sxs-lookup"><span data-stu-id="2d2f5-179">862</span></span>|<span data-ttu-id="2d2f5-180">DOS-862</span><span class="sxs-lookup"><span data-stu-id="2d2f5-180">DOS-862</span></span>|<span data-ttu-id="2d2f5-181">Иврит (DOS)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-181">Hebrew (DOS)</span></span>||  
|<span data-ttu-id="2d2f5-182">863</span><span class="sxs-lookup"><span data-stu-id="2d2f5-182">863</span></span>|<span data-ttu-id="2d2f5-183">IBM863</span><span class="sxs-lookup"><span data-stu-id="2d2f5-183">IBM863</span></span>|<span data-ttu-id="2d2f5-184">Французский (Канада) (DOS)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-184">French Canadian (DOS)</span></span>||  
|<span data-ttu-id="2d2f5-185">864</span><span class="sxs-lookup"><span data-stu-id="2d2f5-185">864</span></span>|<span data-ttu-id="2d2f5-186">IBM864</span><span class="sxs-lookup"><span data-stu-id="2d2f5-186">IBM864</span></span>|<span data-ttu-id="2d2f5-187">Арабский (864)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-187">Arabic (864)</span></span>||  
|<span data-ttu-id="2d2f5-188">865</span><span class="sxs-lookup"><span data-stu-id="2d2f5-188">865</span></span>|<span data-ttu-id="2d2f5-189">IBM865</span><span class="sxs-lookup"><span data-stu-id="2d2f5-189">IBM865</span></span>|<span data-ttu-id="2d2f5-190">Северная Европа (DOS)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-190">Nordic (DOS)</span></span>||  
|<span data-ttu-id="2d2f5-191">866</span><span class="sxs-lookup"><span data-stu-id="2d2f5-191">866</span></span>|<span data-ttu-id="2d2f5-192">cp866</span><span class="sxs-lookup"><span data-stu-id="2d2f5-192">cp866</span></span>|<span data-ttu-id="2d2f5-193">Кириллица (DOS)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-193">Cyrillic (DOS)</span></span>||  
|<span data-ttu-id="2d2f5-194">869</span><span class="sxs-lookup"><span data-stu-id="2d2f5-194">869</span></span>|<span data-ttu-id="2d2f5-195">ibm869</span><span class="sxs-lookup"><span data-stu-id="2d2f5-195">ibm869</span></span>|<span data-ttu-id="2d2f5-196">Греческая современная (DOS)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-196">Greek, Modern (DOS)</span></span>||  
|<span data-ttu-id="2d2f5-197">870</span><span class="sxs-lookup"><span data-stu-id="2d2f5-197">870</span></span>|<span data-ttu-id="2d2f5-198">IBM870</span><span class="sxs-lookup"><span data-stu-id="2d2f5-198">IBM870</span></span>|<span data-ttu-id="2d2f5-199">IBM EBCDIC (многоязыковой латиница-2)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-199">IBM EBCDIC (Multilingual Latin-2)</span></span>||  
|<span data-ttu-id="2d2f5-200">874</span><span class="sxs-lookup"><span data-stu-id="2d2f5-200">874</span></span>|<span data-ttu-id="2d2f5-201">Windows 874</span><span class="sxs-lookup"><span data-stu-id="2d2f5-201">windows-874</span></span>|<span data-ttu-id="2d2f5-202">Тайский (Windows)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-202">Thai (Windows)</span></span>||  
|<span data-ttu-id="2d2f5-203">875</span><span class="sxs-lookup"><span data-stu-id="2d2f5-203">875</span></span>|<span data-ttu-id="2d2f5-204">cp875</span><span class="sxs-lookup"><span data-stu-id="2d2f5-204">cp875</span></span>|<span data-ttu-id="2d2f5-205">IBM EBCDIC (греческая современная)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-205">IBM EBCDIC (Greek Modern)</span></span>||  
|<span data-ttu-id="2d2f5-206">932</span><span class="sxs-lookup"><span data-stu-id="2d2f5-206">932</span></span>|<span data-ttu-id="2d2f5-207">shift_jis</span><span class="sxs-lookup"><span data-stu-id="2d2f5-207">shift_jis</span></span>|<span data-ttu-id="2d2f5-208">Японская (Shift-JIS)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-208">Japanese (Shift-JIS)</span></span>||  
|<span data-ttu-id="2d2f5-209">936</span><span class="sxs-lookup"><span data-stu-id="2d2f5-209">936</span></span>|<span data-ttu-id="2d2f5-210">GB2312</span><span class="sxs-lookup"><span data-stu-id="2d2f5-210">gb2312</span></span>|<span data-ttu-id="2d2f5-211">Китайский, упрощенное письмо (GB2312)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-211">Chinese Simplified (GB2312)</span></span>|<span data-ttu-id="2d2f5-212">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-212">✓</span></span>|  
|<span data-ttu-id="2d2f5-213">949</span><span class="sxs-lookup"><span data-stu-id="2d2f5-213">949</span></span>|<span data-ttu-id="2d2f5-214">ks_c_5601-1987</span><span class="sxs-lookup"><span data-stu-id="2d2f5-214">ks_c_5601-1987</span></span>|<span data-ttu-id="2d2f5-215">Корейский</span><span class="sxs-lookup"><span data-stu-id="2d2f5-215">Korean</span></span>||  
|<span data-ttu-id="2d2f5-216">950</span><span class="sxs-lookup"><span data-stu-id="2d2f5-216">950</span></span>|<span data-ttu-id="2d2f5-217">Big5</span><span class="sxs-lookup"><span data-stu-id="2d2f5-217">big5</span></span>|<span data-ttu-id="2d2f5-218">Китайская традиционная (Big5)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-218">Chinese Traditional (Big5)</span></span>||  
|<span data-ttu-id="2d2f5-219">1026</span><span class="sxs-lookup"><span data-stu-id="2d2f5-219">1026</span></span>|<span data-ttu-id="2d2f5-220">IBM1026</span><span class="sxs-lookup"><span data-stu-id="2d2f5-220">IBM1026</span></span>|<span data-ttu-id="2d2f5-221">IBM EBCDIC (турецкий латиница-5)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-221">IBM EBCDIC (Turkish Latin-5)</span></span>||  
|<span data-ttu-id="2d2f5-222">1047</span><span class="sxs-lookup"><span data-stu-id="2d2f5-222">1047</span></span>|<span data-ttu-id="2d2f5-223">IBM01047</span><span class="sxs-lookup"><span data-stu-id="2d2f5-223">IBM01047</span></span>|<span data-ttu-id="2d2f5-224">IBM Latin-1</span><span class="sxs-lookup"><span data-stu-id="2d2f5-224">IBM Latin-1</span></span>||  
|<span data-ttu-id="2d2f5-225">1140</span><span class="sxs-lookup"><span data-stu-id="2d2f5-225">1140</span></span>|<span data-ttu-id="2d2f5-226">IBM01140</span><span class="sxs-lookup"><span data-stu-id="2d2f5-226">IBM01140</span></span>|<span data-ttu-id="2d2f5-227">IBM EBCDIC (США Канада евро)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-227">IBM EBCDIC (US-Canada-Euro)</span></span>||  
|<span data-ttu-id="2d2f5-228">1141</span><span class="sxs-lookup"><span data-stu-id="2d2f5-228">1141</span></span>|<span data-ttu-id="2d2f5-229">IBM01141</span><span class="sxs-lookup"><span data-stu-id="2d2f5-229">IBM01141</span></span>|<span data-ttu-id="2d2f5-230">IBM EBCDIC (Германия евро)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-230">IBM EBCDIC (Germany-Euro)</span></span>||  
|<span data-ttu-id="2d2f5-231">1142</span><span class="sxs-lookup"><span data-stu-id="2d2f5-231">1142</span></span>|<span data-ttu-id="2d2f5-232">IBM01142</span><span class="sxs-lookup"><span data-stu-id="2d2f5-232">IBM01142</span></span>|<span data-ttu-id="2d2f5-233">IBM EBCDIC (Дания Норвегия евро)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-233">IBM EBCDIC (Denmark-Norway-Euro)</span></span>||  
|<span data-ttu-id="2d2f5-234">1143</span><span class="sxs-lookup"><span data-stu-id="2d2f5-234">1143</span></span>|<span data-ttu-id="2d2f5-235">IBM01143</span><span class="sxs-lookup"><span data-stu-id="2d2f5-235">IBM01143</span></span>|<span data-ttu-id="2d2f5-236">IBM EBCDIC (евро Финляндия Швеция)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-236">IBM EBCDIC (Finland-Sweden-Euro)</span></span>||  
|<span data-ttu-id="2d2f5-237">1144</span><span class="sxs-lookup"><span data-stu-id="2d2f5-237">1144</span></span>|<span data-ttu-id="2d2f5-238">IBM01144</span><span class="sxs-lookup"><span data-stu-id="2d2f5-238">IBM01144</span></span>|<span data-ttu-id="2d2f5-239">IBM EBCDIC (Италия евро)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-239">IBM EBCDIC (Italy-Euro)</span></span>||  
|<span data-ttu-id="2d2f5-240">1145</span><span class="sxs-lookup"><span data-stu-id="2d2f5-240">1145</span></span>|<span data-ttu-id="2d2f5-241">IBM01145</span><span class="sxs-lookup"><span data-stu-id="2d2f5-241">IBM01145</span></span>|<span data-ttu-id="2d2f5-242">IBM EBCDIC (Испания евро)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-242">IBM EBCDIC (Spain-Euro)</span></span>||  
|<span data-ttu-id="2d2f5-243">1146</span><span class="sxs-lookup"><span data-stu-id="2d2f5-243">1146</span></span>|<span data-ttu-id="2d2f5-244">IBM01146</span><span class="sxs-lookup"><span data-stu-id="2d2f5-244">IBM01146</span></span>|<span data-ttu-id="2d2f5-245">IBM EBCDIC (UK евро)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-245">IBM EBCDIC (UK-Euro)</span></span>||  
|<span data-ttu-id="2d2f5-246">1147</span><span class="sxs-lookup"><span data-stu-id="2d2f5-246">1147</span></span>|<span data-ttu-id="2d2f5-247">IBM01147</span><span class="sxs-lookup"><span data-stu-id="2d2f5-247">IBM01147</span></span>|<span data-ttu-id="2d2f5-248">IBM EBCDIC (Франция евро)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-248">IBM EBCDIC (France-Euro)</span></span>||  
|<span data-ttu-id="2d2f5-249">1148</span><span class="sxs-lookup"><span data-stu-id="2d2f5-249">1148</span></span>|<span data-ttu-id="2d2f5-250">IBM01148</span><span class="sxs-lookup"><span data-stu-id="2d2f5-250">IBM01148</span></span>|<span data-ttu-id="2d2f5-251">IBM EBCDIC (международная евро)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-251">IBM EBCDIC (International-Euro)</span></span>||  
|<span data-ttu-id="2d2f5-252">1149</span><span class="sxs-lookup"><span data-stu-id="2d2f5-252">1149</span></span>|<span data-ttu-id="2d2f5-253">IBM01149</span><span class="sxs-lookup"><span data-stu-id="2d2f5-253">IBM01149</span></span>|<span data-ttu-id="2d2f5-254">IBM EBCDIC (Исландский евро)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-254">IBM EBCDIC (Icelandic-Euro)</span></span>||  
|<span data-ttu-id="2d2f5-255">1200</span><span class="sxs-lookup"><span data-stu-id="2d2f5-255">1200</span></span>|<span data-ttu-id="2d2f5-256">UTF-16</span><span class="sxs-lookup"><span data-stu-id="2d2f5-256">utf-16</span></span>|<span data-ttu-id="2d2f5-257">Юникод</span><span class="sxs-lookup"><span data-stu-id="2d2f5-257">Unicode</span></span>|<span data-ttu-id="2d2f5-258">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-258">✓</span></span>|  
|<span data-ttu-id="2d2f5-259">1201</span><span class="sxs-lookup"><span data-stu-id="2d2f5-259">1201</span></span>|<span data-ttu-id="2d2f5-260">unicodeFFFE</span><span class="sxs-lookup"><span data-stu-id="2d2f5-260">unicodeFFFE</span></span>|<span data-ttu-id="2d2f5-261">Юникод (обратный порядок байтов)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-261">Unicode (Big endian)</span></span>|<span data-ttu-id="2d2f5-262">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-262">✓</span></span>|  
|<span data-ttu-id="2d2f5-263">1250</span><span class="sxs-lookup"><span data-stu-id="2d2f5-263">1250</span></span>|<span data-ttu-id="2d2f5-264">Windows-1250</span><span class="sxs-lookup"><span data-stu-id="2d2f5-264">windows-1250</span></span>|<span data-ttu-id="2d2f5-265">Центральная Европа (Windows)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-265">Central European (Windows)</span></span>||  
|<span data-ttu-id="2d2f5-266">1251</span><span class="sxs-lookup"><span data-stu-id="2d2f5-266">1251</span></span>|<span data-ttu-id="2d2f5-267">Windows 1251</span><span class="sxs-lookup"><span data-stu-id="2d2f5-267">windows-1251</span></span>|<span data-ttu-id="2d2f5-268">Кириллица (Windows)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-268">Cyrillic (Windows)</span></span>||  
|<span data-ttu-id="2d2f5-269">1252</span><span class="sxs-lookup"><span data-stu-id="2d2f5-269">1252</span></span>|<span data-ttu-id="2d2f5-270">Windows-1252</span><span class="sxs-lookup"><span data-stu-id="2d2f5-270">Windows-1252</span></span>|<span data-ttu-id="2d2f5-271">Западноевропейская (Windows)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-271">Western European (Windows)</span></span>|<span data-ttu-id="2d2f5-272">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-272">✓</span></span>|  
|<span data-ttu-id="2d2f5-273">1253</span><span class="sxs-lookup"><span data-stu-id="2d2f5-273">1253</span></span>|<span data-ttu-id="2d2f5-274">Windows 1253</span><span class="sxs-lookup"><span data-stu-id="2d2f5-274">windows-1253</span></span>|<span data-ttu-id="2d2f5-275">Греческий (Windows)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-275">Greek (Windows)</span></span>||  
|<span data-ttu-id="2d2f5-276">1254</span><span class="sxs-lookup"><span data-stu-id="2d2f5-276">1254</span></span>|<span data-ttu-id="2d2f5-277">Windows 1254</span><span class="sxs-lookup"><span data-stu-id="2d2f5-277">windows-1254</span></span>|<span data-ttu-id="2d2f5-278">Турецкий (Windows)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-278">Turkish (Windows)</span></span>||  
|<span data-ttu-id="2d2f5-279">1255</span><span class="sxs-lookup"><span data-stu-id="2d2f5-279">1255</span></span>|<span data-ttu-id="2d2f5-280">Windows 1255</span><span class="sxs-lookup"><span data-stu-id="2d2f5-280">windows-1255</span></span>|<span data-ttu-id="2d2f5-281">Иврит (Windows)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-281">Hebrew (Windows)</span></span>||  
|<span data-ttu-id="2d2f5-282">1256</span><span class="sxs-lookup"><span data-stu-id="2d2f5-282">1256</span></span>|<span data-ttu-id="2d2f5-283">Windows 1256</span><span class="sxs-lookup"><span data-stu-id="2d2f5-283">windows-1256</span></span>|<span data-ttu-id="2d2f5-284">Арабский (Windows)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-284">Arabic (Windows)</span></span>||  
|<span data-ttu-id="2d2f5-285">1257</span><span class="sxs-lookup"><span data-stu-id="2d2f5-285">1257</span></span>|<span data-ttu-id="2d2f5-286">Windows 1257</span><span class="sxs-lookup"><span data-stu-id="2d2f5-286">windows-1257</span></span>|<span data-ttu-id="2d2f5-287">Балтийская (Windows)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-287">Baltic (Windows)</span></span>||  
|<span data-ttu-id="2d2f5-288">1258</span><span class="sxs-lookup"><span data-stu-id="2d2f5-288">1258</span></span>|<span data-ttu-id="2d2f5-289">Windows 1258</span><span class="sxs-lookup"><span data-stu-id="2d2f5-289">windows-1258</span></span>|<span data-ttu-id="2d2f5-290">Вьетнамский (Windows)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-290">Vietnamese (Windows)</span></span>||  
|<span data-ttu-id="2d2f5-291">1361</span><span class="sxs-lookup"><span data-stu-id="2d2f5-291">1361</span></span>|<span data-ttu-id="2d2f5-292">Джохаб</span><span class="sxs-lookup"><span data-stu-id="2d2f5-292">Johab</span></span>|<span data-ttu-id="2d2f5-293">Корейская (джохаб)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-293">Korean (Johab)</span></span>||  
|<span data-ttu-id="2d2f5-294">10000</span><span class="sxs-lookup"><span data-stu-id="2d2f5-294">10000</span></span>|<span data-ttu-id="2d2f5-295">Macintosh</span><span class="sxs-lookup"><span data-stu-id="2d2f5-295">macintosh</span></span>|<span data-ttu-id="2d2f5-296">Западноевропейская (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-296">Western European (Mac)</span></span>||  
|<span data-ttu-id="2d2f5-297">10001</span><span class="sxs-lookup"><span data-stu-id="2d2f5-297">10001</span></span>|<span data-ttu-id="2d2f5-298">x mac японского языка.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-298">x-mac-japanese</span></span>|<span data-ttu-id="2d2f5-299">Японский (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-299">Japanese (Mac)</span></span>||  
|<span data-ttu-id="2d2f5-300">10002</span><span class="sxs-lookup"><span data-stu-id="2d2f5-300">10002</span></span>|<span data-ttu-id="2d2f5-301">x-mac-chinesetrad</span><span class="sxs-lookup"><span data-stu-id="2d2f5-301">x-mac-chinesetrad</span></span>|<span data-ttu-id="2d2f5-302">Китайский (традиционный) (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-302">Chinese Traditional (Mac)</span></span>||  
|<span data-ttu-id="2d2f5-303">10003</span><span class="sxs-lookup"><span data-stu-id="2d2f5-303">10003</span></span>|<span data-ttu-id="2d2f5-304">x mac корейского языка.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-304">x-mac-korean</span></span>|<span data-ttu-id="2d2f5-305">Корейская (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-305">Korean (Mac)</span></span>|<span data-ttu-id="2d2f5-306">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-306">✓</span></span>|  
|<span data-ttu-id="2d2f5-307">10004</span><span class="sxs-lookup"><span data-stu-id="2d2f5-307">10004</span></span>|<span data-ttu-id="2d2f5-308">x mac арабского языка.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-308">x-mac-arabic</span></span>|<span data-ttu-id="2d2f5-309">Арабский (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-309">Arabic (Mac)</span></span>||  
|<span data-ttu-id="2d2f5-310">10005</span><span class="sxs-lookup"><span data-stu-id="2d2f5-310">10005</span></span>|<span data-ttu-id="2d2f5-311">x-mac иврит</span><span class="sxs-lookup"><span data-stu-id="2d2f5-311">x-mac-hebrew</span></span>|<span data-ttu-id="2d2f5-312">Иврит (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-312">Hebrew (Mac)</span></span>||  
|<span data-ttu-id="2d2f5-313">10006</span><span class="sxs-lookup"><span data-stu-id="2d2f5-313">10006</span></span>|<span data-ttu-id="2d2f5-314">x mac греческого языков.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-314">x-mac-greek</span></span>|<span data-ttu-id="2d2f5-315">Греческий (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-315">Greek (Mac)</span></span>||  
|<span data-ttu-id="2d2f5-316">10007</span><span class="sxs-lookup"><span data-stu-id="2d2f5-316">10007</span></span>|<span data-ttu-id="2d2f5-317">x mac кириллица</span><span class="sxs-lookup"><span data-stu-id="2d2f5-317">x-mac-cyrillic</span></span>|<span data-ttu-id="2d2f5-318">Кириллица (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-318">Cyrillic (Mac)</span></span>||  
|<span data-ttu-id="2d2f5-319">10008</span><span class="sxs-lookup"><span data-stu-id="2d2f5-319">10008</span></span>|<span data-ttu-id="2d2f5-320">x-mac-chinesesimp</span><span class="sxs-lookup"><span data-stu-id="2d2f5-320">x-mac-chinesesimp</span></span>|<span data-ttu-id="2d2f5-321">Китайский, упрощенное письмо (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-321">Chinese Simplified (Mac)</span></span>|<span data-ttu-id="2d2f5-322">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-322">✓</span></span>|  
|<span data-ttu-id="2d2f5-323">10010</span><span class="sxs-lookup"><span data-stu-id="2d2f5-323">10010</span></span>|<span data-ttu-id="2d2f5-324">x-mac румынский</span><span class="sxs-lookup"><span data-stu-id="2d2f5-324">x-mac-romanian</span></span>|<span data-ttu-id="2d2f5-325">Румынский (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-325">Romanian (Mac)</span></span>||  
|<span data-ttu-id="2d2f5-326">10017</span><span class="sxs-lookup"><span data-stu-id="2d2f5-326">10017</span></span>|<span data-ttu-id="2d2f5-327">x-mac украинский</span><span class="sxs-lookup"><span data-stu-id="2d2f5-327">x-mac-ukrainian</span></span>|<span data-ttu-id="2d2f5-328">Украинский (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-328">Ukrainian (Mac)</span></span>||  
|<span data-ttu-id="2d2f5-329">10021</span><span class="sxs-lookup"><span data-stu-id="2d2f5-329">10021</span></span>|<span data-ttu-id="2d2f5-330">x mac тайского языка</span><span class="sxs-lookup"><span data-stu-id="2d2f5-330">x-mac-thai</span></span>|<span data-ttu-id="2d2f5-331">Тайский (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-331">Thai (Mac)</span></span>||  
|<span data-ttu-id="2d2f5-332">10029</span><span class="sxs-lookup"><span data-stu-id="2d2f5-332">10029</span></span>|<span data-ttu-id="2d2f5-333">x-mac-ce</span><span class="sxs-lookup"><span data-stu-id="2d2f5-333">x-mac-ce</span></span>|<span data-ttu-id="2d2f5-334">Центральная Европа (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-334">Central European (Mac)</span></span>||  
|<span data-ttu-id="2d2f5-335">10079</span><span class="sxs-lookup"><span data-stu-id="2d2f5-335">10079</span></span>|<span data-ttu-id="2d2f5-336">x-mac исландская</span><span class="sxs-lookup"><span data-stu-id="2d2f5-336">x-mac-icelandic</span></span>|<span data-ttu-id="2d2f5-337">Исландский (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-337">Icelandic (Mac)</span></span>||  
|<span data-ttu-id="2d2f5-338">10081</span><span class="sxs-lookup"><span data-stu-id="2d2f5-338">10081</span></span>|<span data-ttu-id="2d2f5-339">x mac турецкого языка</span><span class="sxs-lookup"><span data-stu-id="2d2f5-339">x-mac-turkish</span></span>|<span data-ttu-id="2d2f5-340">Турецкий (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-340">Turkish (Mac)</span></span>||  
|<span data-ttu-id="2d2f5-341">10082</span><span class="sxs-lookup"><span data-stu-id="2d2f5-341">10082</span></span>|<span data-ttu-id="2d2f5-342">x — mac Хорватский</span><span class="sxs-lookup"><span data-stu-id="2d2f5-342">x-mac-croatian</span></span>|<span data-ttu-id="2d2f5-343">Хорватский (Mac)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-343">Croatian (Mac)</span></span>||  
|<span data-ttu-id="2d2f5-344">12000</span><span class="sxs-lookup"><span data-stu-id="2d2f5-344">12000</span></span>|<span data-ttu-id="2d2f5-345">UTF-32</span><span class="sxs-lookup"><span data-stu-id="2d2f5-345">utf-32</span></span>|<span data-ttu-id="2d2f5-346">Юникод (UTF-32)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-346">Unicode (UTF-32)</span></span>|<span data-ttu-id="2d2f5-347">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-347">✓</span></span>|  
|<span data-ttu-id="2d2f5-348">12001</span><span class="sxs-lookup"><span data-stu-id="2d2f5-348">12001</span></span>|<span data-ttu-id="2d2f5-349">utf-32BE</span><span class="sxs-lookup"><span data-stu-id="2d2f5-349">utf-32BE</span></span>|<span data-ttu-id="2d2f5-350">Юникод (UTF-32 с прямым порядком байтов)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-350">Unicode (UTF-32 Big endian)</span></span>|<span data-ttu-id="2d2f5-351">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-351">✓</span></span>|  
|<span data-ttu-id="2d2f5-352">20000</span><span class="sxs-lookup"><span data-stu-id="2d2f5-352">20000</span></span>|<span data-ttu-id="2d2f5-353">x китайский общих ИМЕН.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-353">x-Chinese-CNS</span></span>|<span data-ttu-id="2d2f5-354">Китайский традиционный (имена Сертификатов)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-354">Chinese Traditional (CNS)</span></span>||  
|<span data-ttu-id="2d2f5-355">20001</span><span class="sxs-lookup"><span data-stu-id="2d2f5-355">20001</span></span>|<span data-ttu-id="2d2f5-356">x cp20001</span><span class="sxs-lookup"><span data-stu-id="2d2f5-356">x-cp20001</span></span>|<span data-ttu-id="2d2f5-357">TCA-тайваньская</span><span class="sxs-lookup"><span data-stu-id="2d2f5-357">TCA Taiwan</span></span>||  
|<span data-ttu-id="2d2f5-358">20002</span><span class="sxs-lookup"><span data-stu-id="2d2f5-358">20002</span></span>|<span data-ttu-id="2d2f5-359">x китайский Eten</span><span class="sxs-lookup"><span data-stu-id="2d2f5-359">x-Chinese-Eten</span></span>|<span data-ttu-id="2d2f5-360">Китайский традиционный (Eten)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-360">Chinese Traditional (Eten)</span></span>||  
|<span data-ttu-id="2d2f5-361">20003</span><span class="sxs-lookup"><span data-stu-id="2d2f5-361">20003</span></span>|<span data-ttu-id="2d2f5-362">x cp20003</span><span class="sxs-lookup"><span data-stu-id="2d2f5-362">x-cp20003</span></span>|<span data-ttu-id="2d2f5-363">IBM5550-тайваньская</span><span class="sxs-lookup"><span data-stu-id="2d2f5-363">IBM5550 Taiwan</span></span>||  
|<span data-ttu-id="2d2f5-364">20004</span><span class="sxs-lookup"><span data-stu-id="2d2f5-364">20004</span></span>|<span data-ttu-id="2d2f5-365">x cp20004</span><span class="sxs-lookup"><span data-stu-id="2d2f5-365">x-cp20004</span></span>|<span data-ttu-id="2d2f5-366">Тайваньский телетекста</span><span class="sxs-lookup"><span data-stu-id="2d2f5-366">TeleText Taiwan</span></span>||  
|<span data-ttu-id="2d2f5-367">20005</span><span class="sxs-lookup"><span data-stu-id="2d2f5-367">20005</span></span>|<span data-ttu-id="2d2f5-368">x cp20005</span><span class="sxs-lookup"><span data-stu-id="2d2f5-368">x-cp20005</span></span>|<span data-ttu-id="2d2f5-369">Тайваньский Wang</span><span class="sxs-lookup"><span data-stu-id="2d2f5-369">Wang Taiwan</span></span>||  
|<span data-ttu-id="2d2f5-370">20105</span><span class="sxs-lookup"><span data-stu-id="2d2f5-370">20105</span></span>|<span data-ttu-id="2d2f5-371">x IA5</span><span class="sxs-lookup"><span data-stu-id="2d2f5-371">x-IA5</span></span>|<span data-ttu-id="2d2f5-372">Западноевропейская (IA5)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-372">Western European (IA5)</span></span>||  
|<span data-ttu-id="2d2f5-373">20106</span><span class="sxs-lookup"><span data-stu-id="2d2f5-373">20106</span></span>|<span data-ttu-id="2d2f5-374">x IA5 немецкого языка.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-374">x-IA5-German</span></span>|<span data-ttu-id="2d2f5-375">Немецкий (IA5)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-375">German (IA5)</span></span>||  
|<span data-ttu-id="2d2f5-376">20107</span><span class="sxs-lookup"><span data-stu-id="2d2f5-376">20107</span></span>|<span data-ttu-id="2d2f5-377">x-IA5 — шведский</span><span class="sxs-lookup"><span data-stu-id="2d2f5-377">x-IA5-Swedish</span></span>|<span data-ttu-id="2d2f5-378">Шведский (IA5)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-378">Swedish (IA5)</span></span>||  
|<span data-ttu-id="2d2f5-379">20108</span><span class="sxs-lookup"><span data-stu-id="2d2f5-379">20108</span></span>|<span data-ttu-id="2d2f5-380">x-IA5-норвежский</span><span class="sxs-lookup"><span data-stu-id="2d2f5-380">x-IA5-Norwegian</span></span>|<span data-ttu-id="2d2f5-381">Норвежский (IA5)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-381">Norwegian (IA5)</span></span>||  
|<span data-ttu-id="2d2f5-382">20127</span><span class="sxs-lookup"><span data-stu-id="2d2f5-382">20127</span></span>|<span data-ttu-id="2d2f5-383">US-ascii</span><span class="sxs-lookup"><span data-stu-id="2d2f5-383">us-ascii</span></span>|<span data-ttu-id="2d2f5-384">US-ASCII</span><span class="sxs-lookup"><span data-stu-id="2d2f5-384">US-ASCII</span></span>|<span data-ttu-id="2d2f5-385">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-385">✓</span></span>|  
|<span data-ttu-id="2d2f5-386">20261</span><span class="sxs-lookup"><span data-stu-id="2d2f5-386">20261</span></span>|<span data-ttu-id="2d2f5-387">x cp20261</span><span class="sxs-lookup"><span data-stu-id="2d2f5-387">x-cp20261</span></span>|<span data-ttu-id="2d2f5-388">T.61</span><span class="sxs-lookup"><span data-stu-id="2d2f5-388">T.61</span></span>||  
|<span data-ttu-id="2d2f5-389">20269</span><span class="sxs-lookup"><span data-stu-id="2d2f5-389">20269</span></span>|<span data-ttu-id="2d2f5-390">x cp20269</span><span class="sxs-lookup"><span data-stu-id="2d2f5-390">x-cp20269</span></span>|<span data-ttu-id="2d2f5-391">ISO-6937</span><span class="sxs-lookup"><span data-stu-id="2d2f5-391">ISO-6937</span></span>||  
|<span data-ttu-id="2d2f5-392">20273</span><span class="sxs-lookup"><span data-stu-id="2d2f5-392">20273</span></span>|<span data-ttu-id="2d2f5-393">IBM273</span><span class="sxs-lookup"><span data-stu-id="2d2f5-393">IBM273</span></span>|<span data-ttu-id="2d2f5-394">IBM EBCDIC (Германия)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-394">IBM EBCDIC (Germany)</span></span>||  
|<span data-ttu-id="2d2f5-395">20277</span><span class="sxs-lookup"><span data-stu-id="2d2f5-395">20277</span></span>|<span data-ttu-id="2d2f5-396">IBM277</span><span class="sxs-lookup"><span data-stu-id="2d2f5-396">IBM277</span></span>|<span data-ttu-id="2d2f5-397">IBM EBCDIC (Дания Норвегия)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-397">IBM EBCDIC (Denmark-Norway)</span></span>||  
|<span data-ttu-id="2d2f5-398">20278</span><span class="sxs-lookup"><span data-stu-id="2d2f5-398">20278</span></span>|<span data-ttu-id="2d2f5-399">IBM278</span><span class="sxs-lookup"><span data-stu-id="2d2f5-399">IBM278</span></span>|<span data-ttu-id="2d2f5-400">IBM EBCDIC (Финляндия и Швеция)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-400">IBM EBCDIC (Finland-Sweden)</span></span>||  
|<span data-ttu-id="2d2f5-401">20280</span><span class="sxs-lookup"><span data-stu-id="2d2f5-401">20280</span></span>|<span data-ttu-id="2d2f5-402">IBM280</span><span class="sxs-lookup"><span data-stu-id="2d2f5-402">IBM280</span></span>|<span data-ttu-id="2d2f5-403">IBM EBCDIC (Италия)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-403">IBM EBCDIC (Italy)</span></span>||  
|<span data-ttu-id="2d2f5-404">20284</span><span class="sxs-lookup"><span data-stu-id="2d2f5-404">20284</span></span>|<span data-ttu-id="2d2f5-405">IBM284</span><span class="sxs-lookup"><span data-stu-id="2d2f5-405">IBM284</span></span>|<span data-ttu-id="2d2f5-406">IBM EBCDIC (Испания)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-406">IBM EBCDIC (Spain)</span></span>||  
|<span data-ttu-id="2d2f5-407">20285</span><span class="sxs-lookup"><span data-stu-id="2d2f5-407">20285</span></span>|<span data-ttu-id="2d2f5-408">IBM285</span><span class="sxs-lookup"><span data-stu-id="2d2f5-408">IBM285</span></span>|<span data-ttu-id="2d2f5-409">IBM EBCDIC (ВЕЛИКОБРИТАНИЯ)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-409">IBM EBCDIC (UK)</span></span>||  
|<span data-ttu-id="2d2f5-410">20290</span><span class="sxs-lookup"><span data-stu-id="2d2f5-410">20290</span></span>|<span data-ttu-id="2d2f5-411">IBM290</span><span class="sxs-lookup"><span data-stu-id="2d2f5-411">IBM290</span></span>|<span data-ttu-id="2d2f5-412">IBM EBCDIC (японская катакана)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-412">IBM EBCDIC (Japanese katakana)</span></span>||  
|<span data-ttu-id="2d2f5-413">20297</span><span class="sxs-lookup"><span data-stu-id="2d2f5-413">20297</span></span>|<span data-ttu-id="2d2f5-414">IBM297</span><span class="sxs-lookup"><span data-stu-id="2d2f5-414">IBM297</span></span>|<span data-ttu-id="2d2f5-415">IBM EBCDIC (Франция)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-415">IBM EBCDIC (France)</span></span>||  
|<span data-ttu-id="2d2f5-416">20420</span><span class="sxs-lookup"><span data-stu-id="2d2f5-416">20420</span></span>|<span data-ttu-id="2d2f5-417">IBM420</span><span class="sxs-lookup"><span data-stu-id="2d2f5-417">IBM420</span></span>|<span data-ttu-id="2d2f5-418">IBM EBCDIC (арабский)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-418">IBM EBCDIC (Arabic)</span></span>||  
|<span data-ttu-id="2d2f5-419">20423</span><span class="sxs-lookup"><span data-stu-id="2d2f5-419">20423</span></span>|<span data-ttu-id="2d2f5-420">IBM423</span><span class="sxs-lookup"><span data-stu-id="2d2f5-420">IBM423</span></span>|<span data-ttu-id="2d2f5-421">IBM EBCDIC (русский)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-421">IBM EBCDIC (Greek)</span></span>||  
|<span data-ttu-id="2d2f5-422">20424</span><span class="sxs-lookup"><span data-stu-id="2d2f5-422">20424</span></span>|<span data-ttu-id="2d2f5-423">IBM424</span><span class="sxs-lookup"><span data-stu-id="2d2f5-423">IBM424</span></span>|<span data-ttu-id="2d2f5-424">IBM EBCDIC (иврит)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-424">IBM EBCDIC (Hebrew)</span></span>||  
|<span data-ttu-id="2d2f5-425">20833</span><span class="sxs-lookup"><span data-stu-id="2d2f5-425">20833</span></span>|<span data-ttu-id="2d2f5-426">x-EBCDIC-KoreanExtended</span><span class="sxs-lookup"><span data-stu-id="2d2f5-426">x-EBCDIC-KoreanExtended</span></span>|<span data-ttu-id="2d2f5-427">IBM EBCDIC (Корейская расширенная)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-427">IBM EBCDIC (Korean Extended)</span></span>||  
|<span data-ttu-id="2d2f5-428">20838</span><span class="sxs-lookup"><span data-stu-id="2d2f5-428">20838</span></span>|<span data-ttu-id="2d2f5-429">Тайский IBM</span><span class="sxs-lookup"><span data-stu-id="2d2f5-429">IBM-Thai</span></span>|<span data-ttu-id="2d2f5-430">IBM EBCDIC (тайский)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-430">IBM EBCDIC (Thai)</span></span>||  
|<span data-ttu-id="2d2f5-431">20866</span><span class="sxs-lookup"><span data-stu-id="2d2f5-431">20866</span></span>|<span data-ttu-id="2d2f5-432">КОИ8 r</span><span class="sxs-lookup"><span data-stu-id="2d2f5-432">koi8-r</span></span>|<span data-ttu-id="2d2f5-433">Кириллица (КОИ8 R)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-433">Cyrillic (KOI8-R)</span></span>||  
|<span data-ttu-id="2d2f5-434">20871</span><span class="sxs-lookup"><span data-stu-id="2d2f5-434">20871</span></span>|<span data-ttu-id="2d2f5-435">IBM871</span><span class="sxs-lookup"><span data-stu-id="2d2f5-435">IBM871</span></span>|<span data-ttu-id="2d2f5-436">IBM EBCDIC (исландская)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-436">IBM EBCDIC (Icelandic)</span></span>||  
|<span data-ttu-id="2d2f5-437">20880</span><span class="sxs-lookup"><span data-stu-id="2d2f5-437">20880</span></span>|<span data-ttu-id="2d2f5-438">IBM880</span><span class="sxs-lookup"><span data-stu-id="2d2f5-438">IBM880</span></span>|<span data-ttu-id="2d2f5-439">IBM EBCDIC (кириллица русский)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-439">IBM EBCDIC (Cyrillic Russian)</span></span>||  
|<span data-ttu-id="2d2f5-440">20905</span><span class="sxs-lookup"><span data-stu-id="2d2f5-440">20905</span></span>|<span data-ttu-id="2d2f5-441">IBM905</span><span class="sxs-lookup"><span data-stu-id="2d2f5-441">IBM905</span></span>|<span data-ttu-id="2d2f5-442">IBM EBCDIC (турецкий)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-442">IBM EBCDIC (Turkish)</span></span>||  
|<span data-ttu-id="2d2f5-443">20924</span><span class="sxs-lookup"><span data-stu-id="2d2f5-443">20924</span></span>|<span data-ttu-id="2d2f5-444">IBM00924</span><span class="sxs-lookup"><span data-stu-id="2d2f5-444">IBM00924</span></span>|<span data-ttu-id="2d2f5-445">IBM Latin-1</span><span class="sxs-lookup"><span data-stu-id="2d2f5-445">IBM Latin-1</span></span>||  
|<span data-ttu-id="2d2f5-446">20932</span><span class="sxs-lookup"><span data-stu-id="2d2f5-446">20932</span></span>|<span data-ttu-id="2d2f5-447">EUC-JP</span><span class="sxs-lookup"><span data-stu-id="2d2f5-447">EUC-JP</span></span>|<span data-ttu-id="2d2f5-448">Японская (JIS 0208-1990 и 0212-1990)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-448">Japanese (JIS 0208-1990 and 0212-1990)</span></span>||  
|<span data-ttu-id="2d2f5-449">20936</span><span class="sxs-lookup"><span data-stu-id="2d2f5-449">20936</span></span>|<span data-ttu-id="2d2f5-450">x cp20936</span><span class="sxs-lookup"><span data-stu-id="2d2f5-450">x-cp20936</span></span>|<span data-ttu-id="2d2f5-451">Китайский, упрощенное письмо (GB2312-80)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-451">Chinese Simplified (GB2312-80)</span></span>|<span data-ttu-id="2d2f5-452">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-452">✓</span></span>|  
|<span data-ttu-id="2d2f5-453">20949</span><span class="sxs-lookup"><span data-stu-id="2d2f5-453">20949</span></span>|<span data-ttu-id="2d2f5-454">x cp20949</span><span class="sxs-lookup"><span data-stu-id="2d2f5-454">x-cp20949</span></span>|<span data-ttu-id="2d2f5-455">Корейский Wansung</span><span class="sxs-lookup"><span data-stu-id="2d2f5-455">Korean Wansung</span></span>|<span data-ttu-id="2d2f5-456">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-456">✓</span></span>|  
|<span data-ttu-id="2d2f5-457">21025</span><span class="sxs-lookup"><span data-stu-id="2d2f5-457">21025</span></span>|<span data-ttu-id="2d2f5-458">cp1025</span><span class="sxs-lookup"><span data-stu-id="2d2f5-458">cp1025</span></span>|<span data-ttu-id="2d2f5-459">IBM EBCDIC (кириллица болгарский Сербский)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-459">IBM EBCDIC (Cyrillic Serbian-Bulgarian)</span></span>||  
|<span data-ttu-id="2d2f5-460">21866</span><span class="sxs-lookup"><span data-stu-id="2d2f5-460">21866</span></span>|<span data-ttu-id="2d2f5-461">КОИ8 u</span><span class="sxs-lookup"><span data-stu-id="2d2f5-461">koi8-u</span></span>|<span data-ttu-id="2d2f5-462">Кириллица (КОИ8 U)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-462">Cyrillic (KOI8-U)</span></span>||  
|<span data-ttu-id="2d2f5-463">28591</span><span class="sxs-lookup"><span data-stu-id="2d2f5-463">28591</span></span>|<span data-ttu-id="2d2f5-464">ISO-8859-1</span><span class="sxs-lookup"><span data-stu-id="2d2f5-464">iso-8859-1</span></span>|<span data-ttu-id="2d2f5-465">Западноевропейская (ISO)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-465">Western European (ISO)</span></span>|<span data-ttu-id="2d2f5-466">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-466">✓</span></span>|  
|<span data-ttu-id="2d2f5-467">28592</span><span class="sxs-lookup"><span data-stu-id="2d2f5-467">28592</span></span>|<span data-ttu-id="2d2f5-468">ISO-8859-2</span><span class="sxs-lookup"><span data-stu-id="2d2f5-468">iso-8859-2</span></span>|<span data-ttu-id="2d2f5-469">Центральная Европа (ISO)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-469">Central European (ISO)</span></span>||  
|<span data-ttu-id="2d2f5-470">28593</span><span class="sxs-lookup"><span data-stu-id="2d2f5-470">28593</span></span>|<span data-ttu-id="2d2f5-471">ISO-8859-3</span><span class="sxs-lookup"><span data-stu-id="2d2f5-471">iso-8859-3</span></span>|<span data-ttu-id="2d2f5-472">Латиница 3 (ISO)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-472">Latin 3 (ISO)</span></span>||  
|<span data-ttu-id="2d2f5-473">28594</span><span class="sxs-lookup"><span data-stu-id="2d2f5-473">28594</span></span>|<span data-ttu-id="2d2f5-474">ISO-8859-4</span><span class="sxs-lookup"><span data-stu-id="2d2f5-474">iso-8859-4</span></span>|<span data-ttu-id="2d2f5-475">Балтийская (ISO)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-475">Baltic (ISO)</span></span>||  
|<span data-ttu-id="2d2f5-476">28595</span><span class="sxs-lookup"><span data-stu-id="2d2f5-476">28595</span></span>|<span data-ttu-id="2d2f5-477">ISO-8859-5</span><span class="sxs-lookup"><span data-stu-id="2d2f5-477">iso-8859-5</span></span>|<span data-ttu-id="2d2f5-478">Кириллица (ISO)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-478">Cyrillic (ISO)</span></span>||  
|<span data-ttu-id="2d2f5-479">28596</span><span class="sxs-lookup"><span data-stu-id="2d2f5-479">28596</span></span>|<span data-ttu-id="2d2f5-480">ISO-8859-6</span><span class="sxs-lookup"><span data-stu-id="2d2f5-480">iso-8859-6</span></span>|<span data-ttu-id="2d2f5-481">Арабский (ISO)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-481">Arabic (ISO)</span></span>||  
|<span data-ttu-id="2d2f5-482">28597</span><span class="sxs-lookup"><span data-stu-id="2d2f5-482">28597</span></span>|<span data-ttu-id="2d2f5-483">ISO-8859-7</span><span class="sxs-lookup"><span data-stu-id="2d2f5-483">iso-8859-7</span></span>|<span data-ttu-id="2d2f5-484">Греческий (ISO)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-484">Greek (ISO)</span></span>||  
|<span data-ttu-id="2d2f5-485">28598</span><span class="sxs-lookup"><span data-stu-id="2d2f5-485">28598</span></span>|<span data-ttu-id="2d2f5-486">ISO-8859-8</span><span class="sxs-lookup"><span data-stu-id="2d2f5-486">iso-8859-8</span></span>|<span data-ttu-id="2d2f5-487">Иврит (ISO-Visual)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-487">Hebrew (ISO-Visual)</span></span>|<span data-ttu-id="2d2f5-488">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-488">✓</span></span>|  
|<span data-ttu-id="2d2f5-489">28599</span><span class="sxs-lookup"><span data-stu-id="2d2f5-489">28599</span></span>|<span data-ttu-id="2d2f5-490">ISO-8859-9</span><span class="sxs-lookup"><span data-stu-id="2d2f5-490">iso-8859-9</span></span>|<span data-ttu-id="2d2f5-491">Турецкий (ISO)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-491">Turkish (ISO)</span></span>||  
|<span data-ttu-id="2d2f5-492">28603</span><span class="sxs-lookup"><span data-stu-id="2d2f5-492">28603</span></span>|<span data-ttu-id="2d2f5-493">ISO-8859-13</span><span class="sxs-lookup"><span data-stu-id="2d2f5-493">iso-8859-13</span></span>|<span data-ttu-id="2d2f5-494">Эстонский (ISO)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-494">Estonian (ISO)</span></span>||  
|<span data-ttu-id="2d2f5-495">28605</span><span class="sxs-lookup"><span data-stu-id="2d2f5-495">28605</span></span>|<span data-ttu-id="2d2f5-496">ISO-8859-15</span><span class="sxs-lookup"><span data-stu-id="2d2f5-496">iso-8859-15</span></span>|<span data-ttu-id="2d2f5-497">Латиница 9 (ISO)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-497">Latin 9 (ISO)</span></span>||  
|<span data-ttu-id="2d2f5-498">29001</span><span class="sxs-lookup"><span data-stu-id="2d2f5-498">29001</span></span>|<span data-ttu-id="2d2f5-499">x Europa</span><span class="sxs-lookup"><span data-stu-id="2d2f5-499">x-Europa</span></span>|<span data-ttu-id="2d2f5-500">Europa</span><span class="sxs-lookup"><span data-stu-id="2d2f5-500">Europa</span></span>||  
|<span data-ttu-id="2d2f5-501">38598</span><span class="sxs-lookup"><span data-stu-id="2d2f5-501">38598</span></span>|<span data-ttu-id="2d2f5-502">ISO-8859-8-i</span><span class="sxs-lookup"><span data-stu-id="2d2f5-502">iso-8859-8-i</span></span>|<span data-ttu-id="2d2f5-503">Иврит (ISO логический)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-503">Hebrew (ISO-Logical)</span></span>|<span data-ttu-id="2d2f5-504">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-504">✓</span></span>|  
|<span data-ttu-id="2d2f5-505">50220</span><span class="sxs-lookup"><span data-stu-id="2d2f5-505">50220</span></span>|<span data-ttu-id="2d2f5-506">ISO-2022-jp</span><span class="sxs-lookup"><span data-stu-id="2d2f5-506">iso-2022-jp</span></span>|<span data-ttu-id="2d2f5-507">Японская (JIS)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-507">Japanese (JIS)</span></span>|<span data-ttu-id="2d2f5-508">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-508">✓</span></span>|  
|<span data-ttu-id="2d2f5-509">50221</span><span class="sxs-lookup"><span data-stu-id="2d2f5-509">50221</span></span>|<span data-ttu-id="2d2f5-510">csISO2022JP</span><span class="sxs-lookup"><span data-stu-id="2d2f5-510">csISO2022JP</span></span>|<span data-ttu-id="2d2f5-511">Японская (JIS однобайтная кана)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-511">Japanese (JIS-Allow 1 byte Kana)</span></span>|<span data-ttu-id="2d2f5-512">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-512">✓</span></span>|  
|<span data-ttu-id="2d2f5-513">50222</span><span class="sxs-lookup"><span data-stu-id="2d2f5-513">50222</span></span>|<span data-ttu-id="2d2f5-514">ISO-2022-jp</span><span class="sxs-lookup"><span data-stu-id="2d2f5-514">iso-2022-jp</span></span>|<span data-ttu-id="2d2f5-515">Японская (JIS однобайтная кана с JIS - т / SI)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-515">Japanese (JIS-Allow 1 byte Kana - SO/SI)</span></span>|<span data-ttu-id="2d2f5-516">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-516">✓</span></span>|  
|<span data-ttu-id="2d2f5-517">50225</span><span class="sxs-lookup"><span data-stu-id="2d2f5-517">50225</span></span>|<span data-ttu-id="2d2f5-518">ISO-2022-kr</span><span class="sxs-lookup"><span data-stu-id="2d2f5-518">iso-2022-kr</span></span>|<span data-ttu-id="2d2f5-519">Корейская (ISO)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-519">Korean (ISO)</span></span>|<span data-ttu-id="2d2f5-520">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-520">✓</span></span>|  
|<span data-ttu-id="2d2f5-521">50227</span><span class="sxs-lookup"><span data-stu-id="2d2f5-521">50227</span></span>|<span data-ttu-id="2d2f5-522">x-cp50227</span><span class="sxs-lookup"><span data-stu-id="2d2f5-522">x-cp50227</span></span>|<span data-ttu-id="2d2f5-523">Китайский, упрощенное письмо (ISO-2022)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-523">Chinese Simplified (ISO-2022)</span></span>|<span data-ttu-id="2d2f5-524">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-524">✓</span></span>|  
|<span data-ttu-id="2d2f5-525">51932</span><span class="sxs-lookup"><span data-stu-id="2d2f5-525">51932</span></span>|<span data-ttu-id="2d2f5-526">EUC-jp</span><span class="sxs-lookup"><span data-stu-id="2d2f5-526">euc-jp</span></span>|<span data-ttu-id="2d2f5-527">Японский (EUC)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-527">Japanese (EUC)</span></span>|<span data-ttu-id="2d2f5-528">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-528">✓</span></span>|  
|<span data-ttu-id="2d2f5-529">51936</span><span class="sxs-lookup"><span data-stu-id="2d2f5-529">51936</span></span>|<span data-ttu-id="2d2f5-530">EUC CN</span><span class="sxs-lookup"><span data-stu-id="2d2f5-530">EUC-CN</span></span>|<span data-ttu-id="2d2f5-531">Китайский, упрощенное письмо (EUC)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-531">Chinese Simplified (EUC)</span></span>|<span data-ttu-id="2d2f5-532">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-532">✓</span></span>|  
|<span data-ttu-id="2d2f5-533">51949</span><span class="sxs-lookup"><span data-stu-id="2d2f5-533">51949</span></span>|<span data-ttu-id="2d2f5-534">EUC kr</span><span class="sxs-lookup"><span data-stu-id="2d2f5-534">euc-kr</span></span>|<span data-ttu-id="2d2f5-535">Корейский (EUC)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-535">Korean (EUC)</span></span>|<span data-ttu-id="2d2f5-536">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-536">✓</span></span>|  
|<span data-ttu-id="2d2f5-537">52936</span><span class="sxs-lookup"><span data-stu-id="2d2f5-537">52936</span></span>|<span data-ttu-id="2d2f5-538">Гц gb-2312</span><span class="sxs-lookup"><span data-stu-id="2d2f5-538">hz-gb-2312</span></span>|<span data-ttu-id="2d2f5-539">Китайский, упрощенное письмо (ГЦ)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-539">Chinese Simplified (HZ)</span></span>|<span data-ttu-id="2d2f5-540">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-540">✓</span></span>|  
|<span data-ttu-id="2d2f5-541">54936</span><span class="sxs-lookup"><span data-stu-id="2d2f5-541">54936</span></span>|<span data-ttu-id="2d2f5-542">GB18030</span><span class="sxs-lookup"><span data-stu-id="2d2f5-542">GB18030</span></span>|<span data-ttu-id="2d2f5-543">Китайская упрощенная (GB18030)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-543">Chinese Simplified (GB18030)</span></span>|<span data-ttu-id="2d2f5-544">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-544">✓</span></span>|  
|<span data-ttu-id="2d2f5-545">57002</span><span class="sxs-lookup"><span data-stu-id="2d2f5-545">57002</span></span>|<span data-ttu-id="2d2f5-546">x-iscii-de.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-546">x-iscii-de</span></span>|<span data-ttu-id="2d2f5-547">ISCII деванагари</span><span class="sxs-lookup"><span data-stu-id="2d2f5-547">ISCII Devanagari</span></span>|<span data-ttu-id="2d2f5-548">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-548">✓</span></span>|  
|<span data-ttu-id="2d2f5-549">57003</span><span class="sxs-lookup"><span data-stu-id="2d2f5-549">57003</span></span>|<span data-ttu-id="2d2f5-550">x iscii быть</span><span class="sxs-lookup"><span data-stu-id="2d2f5-550">x-iscii-be</span></span>|<span data-ttu-id="2d2f5-551">Бенгальский ISCII</span><span class="sxs-lookup"><span data-stu-id="2d2f5-551">ISCII Bengali</span></span>|<span data-ttu-id="2d2f5-552">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-552">✓</span></span>|  
|<span data-ttu-id="2d2f5-553">57004</span><span class="sxs-lookup"><span data-stu-id="2d2f5-553">57004</span></span>|<span data-ttu-id="2d2f5-554">x-iscii-ta</span><span class="sxs-lookup"><span data-stu-id="2d2f5-554">x-iscii-ta</span></span>|<span data-ttu-id="2d2f5-555">Тамильский ISCII</span><span class="sxs-lookup"><span data-stu-id="2d2f5-555">ISCII Tamil</span></span>|<span data-ttu-id="2d2f5-556">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-556">✓</span></span>|  
|<span data-ttu-id="2d2f5-557">57005</span><span class="sxs-lookup"><span data-stu-id="2d2f5-557">57005</span></span>|<span data-ttu-id="2d2f5-558">x-iscii-te</span><span class="sxs-lookup"><span data-stu-id="2d2f5-558">x-iscii-te</span></span>|<span data-ttu-id="2d2f5-559">Телугу ISCII</span><span class="sxs-lookup"><span data-stu-id="2d2f5-559">ISCII Telugu</span></span>|<span data-ttu-id="2d2f5-560">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-560">✓</span></span>|  
|<span data-ttu-id="2d2f5-561">57006</span><span class="sxs-lookup"><span data-stu-id="2d2f5-561">57006</span></span>|<span data-ttu-id="2d2f5-562">x iscii как</span><span class="sxs-lookup"><span data-stu-id="2d2f5-562">x-iscii-as</span></span>|<span data-ttu-id="2d2f5-563">Ассамский ISCII</span><span class="sxs-lookup"><span data-stu-id="2d2f5-563">ISCII Assamese</span></span>|<span data-ttu-id="2d2f5-564">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-564">✓</span></span>|  
|<span data-ttu-id="2d2f5-565">57007</span><span class="sxs-lookup"><span data-stu-id="2d2f5-565">57007</span></span>|<span data-ttu-id="2d2f5-566">или x iscii</span><span class="sxs-lookup"><span data-stu-id="2d2f5-566">x-iscii-or</span></span>|<span data-ttu-id="2d2f5-567">Ория ISCII</span><span class="sxs-lookup"><span data-stu-id="2d2f5-567">ISCII Oriya</span></span>|<span data-ttu-id="2d2f5-568">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-568">✓</span></span>|  
|<span data-ttu-id="2d2f5-569">57008</span><span class="sxs-lookup"><span data-stu-id="2d2f5-569">57008</span></span>|<span data-ttu-id="2d2f5-570">x-iscii ка</span><span class="sxs-lookup"><span data-stu-id="2d2f5-570">x-iscii-ka</span></span>|<span data-ttu-id="2d2f5-571">Каннада ISCII</span><span class="sxs-lookup"><span data-stu-id="2d2f5-571">ISCII Kannada</span></span>|<span data-ttu-id="2d2f5-572">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-572">✓</span></span>|  
|<span data-ttu-id="2d2f5-573">57009</span><span class="sxs-lookup"><span data-stu-id="2d2f5-573">57009</span></span>|<span data-ttu-id="2d2f5-574">x iscii скользящее среднее</span><span class="sxs-lookup"><span data-stu-id="2d2f5-574">x-iscii-ma</span></span>|<span data-ttu-id="2d2f5-575">Малайялам ISCII</span><span class="sxs-lookup"><span data-stu-id="2d2f5-575">ISCII Malayalam</span></span>|<span data-ttu-id="2d2f5-576">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-576">✓</span></span>|  
|<span data-ttu-id="2d2f5-577">57010</span><span class="sxs-lookup"><span data-stu-id="2d2f5-577">57010</span></span>|<span data-ttu-id="2d2f5-578">x iscii графического интерфейс</span><span class="sxs-lookup"><span data-stu-id="2d2f5-578">x-iscii-gu</span></span>|<span data-ttu-id="2d2f5-579">Гуджарати ISCII</span><span class="sxs-lookup"><span data-stu-id="2d2f5-579">ISCII Gujarati</span></span>|<span data-ttu-id="2d2f5-580">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-580">✓</span></span>|  
|<span data-ttu-id="2d2f5-581">57011</span><span class="sxs-lookup"><span data-stu-id="2d2f5-581">57011</span></span>|<span data-ttu-id="2d2f5-582">x-iscii-pa</span><span class="sxs-lookup"><span data-stu-id="2d2f5-582">x-iscii-pa</span></span>|<span data-ttu-id="2d2f5-583">Панджаби ISCII</span><span class="sxs-lookup"><span data-stu-id="2d2f5-583">ISCII Punjabi</span></span>|<span data-ttu-id="2d2f5-584">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-584">✓</span></span>|  
|<span data-ttu-id="2d2f5-585">65000</span><span class="sxs-lookup"><span data-stu-id="2d2f5-585">65000</span></span>|<span data-ttu-id="2d2f5-586">UTF-7</span><span class="sxs-lookup"><span data-stu-id="2d2f5-586">utf-7</span></span>|<span data-ttu-id="2d2f5-587">Юникод (UTF-7)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-587">Unicode (UTF-7)</span></span>|<span data-ttu-id="2d2f5-588">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-588">✓</span></span>|  
|<span data-ttu-id="2d2f5-589">65001</span><span class="sxs-lookup"><span data-stu-id="2d2f5-589">65001</span></span>|<span data-ttu-id="2d2f5-590">UTF-8</span><span class="sxs-lookup"><span data-stu-id="2d2f5-590">utf-8</span></span>|<span data-ttu-id="2d2f5-591">Юникод (UTF-8)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-591">Unicode (UTF-8)</span></span>|<span data-ttu-id="2d2f5-592">✓</span><span class="sxs-lookup"><span data-stu-id="2d2f5-592">✓</span></span>|  
  
 <span data-ttu-id="2d2f5-593">В следующем примере вызывается <xref:System.Text.Encoding.GetEncoding%28System.Int32%29> и <xref:System.Text.Encoding.GetEncoding%28System.String%29> методы получения греческий (Windows) код страницы кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-593">The following example calls the <xref:System.Text.Encoding.GetEncoding%28System.Int32%29> and <xref:System.Text.Encoding.GetEncoding%28System.String%29> methods to get the Greek (Windows) code page encoding.</span></span> <span data-ttu-id="2d2f5-594">Он сравнивает <xref:System.Text.Encoding> объектов, возвращенных вызовы методов, чтобы показать, что они равны, и затем отображает maps кодовая точка Юникода и соответствующие значение кодовой страницы для каждого символа в Греческий алфавит.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-594">It compares the <xref:System.Text.Encoding> objects returned by the method calls to show that they are equal, and then maps displays the Unicode code point and the corresponding code page value for each character in the Greek alphabet.</span></span>  
  
 [!code-csharp[System.Text.Encoding#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding/cs/getencoding1.cs#1)]
 [!code-vb[System.Text.Encoding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding/vb/getencoding1.vb#1)]  
  
 <span data-ttu-id="2d2f5-595">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> , предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-595">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="2d2f5-596">UTF-16 и UTF-32 кодировщики можно использовать обратный порядок байтов (самый старший байт первый) или в прямом порядке байтов (младший байт первый).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-596">The UTF-16 and the UTF-32 encoders can use the big endian byte order (most significant byte first) or the little endian byte order (least significant byte first).</span></span> <span data-ttu-id="2d2f5-597">Например прописная латинская буква (U + 0041) сериализуется как выглядит следующим образом (в шестнадцатеричном формате).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-597">For example, the Latin Capital Letter A (U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="2d2f5-598">Обратный порядок следования байтов UTF-16: 00 41</span><span class="sxs-lookup"><span data-stu-id="2d2f5-598">UTF-16 big endian byte order: 00 41</span></span>  
  
-   <span data-ttu-id="2d2f5-599">UTF-16 прямом порядке байтов: 41 00</span><span class="sxs-lookup"><span data-stu-id="2d2f5-599">UTF-16 little endian byte order: 41 00</span></span>  
  
-   <span data-ttu-id="2d2f5-600">UTF-32 обратный порядок байтов: 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="2d2f5-600">UTF-32 big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="2d2f5-601">UTF-32 прямом порядке байтов: 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="2d2f5-601">UTF-32 little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="2d2f5-602">Может оказаться более эффективным, для хранения символов Юникода с использованием собственного порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-602">It is generally more efficient to store Unicode characters using the native byte order.</span></span> <span data-ttu-id="2d2f5-603">Например лучше использовать прямом порядке байтов на платформах с прямым порядком, таких как компьютеры Intel.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-603">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span>  
  
 <span data-ttu-id="2d2f5-604"><xref:System.Text.Encoding.GetPreamble%2A> Извлекает массив байтов, который включает отметку порядка байтов (BOM).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-604">The <xref:System.Text.Encoding.GetPreamble%2A> method retrieves an array of bytes that includes the byte order mark (BOM).</span></span> <span data-ttu-id="2d2f5-605">Если указан как префикс этот массив байтов в поток в кодировке, декодер определить используемый формат кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-605">If this byte array is prefixed to an encoded stream, it helps the decoder to identify the encoding format used.</span></span>  
  
 <span data-ttu-id="2d2f5-606">Дополнительные сведения о порядке байтов и метка порядка байтов в разделе Юникод [домашней странице Юникода](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-606">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
 <span data-ttu-id="2d2f5-607">Обратите внимание, что классы кодировок позволяют ошибки:</span><span class="sxs-lookup"><span data-stu-id="2d2f5-607">Note that the encoding classes allow errors to:</span></span>  
  
-   <span data-ttu-id="2d2f5-608">Без предупреждения изменять для «?» символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-608">Silently change to a "?" character.</span></span>  
  
-   <span data-ttu-id="2d2f5-609">Используйте символ «оптимальных параметров».</span><span class="sxs-lookup"><span data-stu-id="2d2f5-609">Use a "best fit" character.</span></span>  
  
-   <span data-ttu-id="2d2f5-610">Изменить на поведение конкретного приложения с использованием <xref:System.Text.EncoderFallback> и <xref:System.Text.DecoderFallback> классы с замещающий символ U + FFFD Юникода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-610">Change to an application-specific behavior through use of the <xref:System.Text.EncoderFallback> and <xref:System.Text.DecoderFallback> classes with the U+FFFD Unicode replacement character.</span></span>  
  
 <span data-ttu-id="2d2f5-611">Для ошибок потока данных должно создавать исключения.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-611">You should throw an exception on any data stream error.</span></span> <span data-ttu-id="2d2f5-612">Приложение использует флаг «throwonerror», если применимо, или использует <xref:System.Text.EncoderExceptionFallback> и <xref:System.Text.DecoderExceptionFallback> классы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-612">An app either uses a "throwonerror" flag when applicable or uses the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallback> classes.</span></span> <span data-ttu-id="2d2f5-613">Наиболее подходящая fallback часто не рекомендуется, так как он может привести к потере данных или путаницы и медленнее, чем обычная замена символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-613">Best fit fallback is often not recommended because it can cause data loss or confusion and is slower than simple character replacements.</span></span> <span data-ttu-id="2d2f5-614">Для кодировки ANSI рекомендуется применять эту стратегию значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-614">For ANSI encodings, the best fit behavior is the default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-615">В следующем примере строка преобразуется из одной кодировки в другую.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-615">The following example converts a string from one encoding to another.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d2f5-616">Массив byte [] является единственным типом в данном примере, который содержит закодированные данные.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-616">The byte[] array is the only type in this example that contains the encoded data.</span></span> <span data-ttu-id="2d2f5-617">.NET Char и строковые типы являются сами по себе Юникод, поэтому <xref:System.Text.Encoding.GetChars%2A> вызов декодирует данные в формат Юникод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-617">The .NET Char and String types are themselves Unicode, so the <xref:System.Text.Encoding.GetChars%2A> call decodes the data back to Unicode.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d2f5-618">Инициализирует новый экземпляр класса <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-618">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d2f5-619">Инициализирует новый экземпляр класса <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-619">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-620">Производные классы переопределяют этот конструктор.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-620">Derived classes override this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding (int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (codePage As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding(int codePage);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePage"><span data-ttu-id="2d2f5-621">Идентификатор кодовой страницы предпочтительной кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-621">The code page identifier of the preferred encoding.</span></span>  
  
 <span data-ttu-id="2d2f5-622">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-622">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-623">0, если требуется использовать кодировку по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-623">0, to use the default encoding.</span></span></param>
        <summary><span data-ttu-id="2d2f5-624">Инициализирует новый экземпляр класса <see cref="T:System.Text.Encoding" />, соответствующий заданной кодовой странице.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-624">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class that corresponds to the specified code page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-625">Производные классы переопределяют этот конструктор.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-625">Derived classes override this constructor.</span></span>  
  
 <span data-ttu-id="2d2f5-626">Создание вызовов этот конструктор производного класса <xref:System.Text.Encoding> объект, который использует резервную стратегию наилучшего соответствия для кодирования и декодирования операций.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-626">Calls to this constructor from a derived class create an <xref:System.Text.Encoding> object that uses best-fit fallback for both encoding and decoding operations.</span></span> <span data-ttu-id="2d2f5-627">Как <xref:System.Text.Encoding.DecoderFallback%2A> и <xref:System.Text.Encoding.EncoderFallback%2A> свойства доступны только для чтения и не может быть изменено.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-627">Both the <xref:System.Text.Encoding.DecoderFallback%2A> and <xref:System.Text.Encoding.EncoderFallback%2A> properties are read-only and cannot be modified.</span></span> <span data-ttu-id="2d2f5-628">Для управления резервной стратегии для класса, производного от <xref:System.Text.Encoding>, вызовите <xref:System.Text.Encoding.%23ctor%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-628">To control the fallback strategy for a class derived from <xref:System.Text.Encoding>, call the <xref:System.Text.Encoding.%23ctor%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-629">Значение параметра <paramref name="codePage" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-629"><paramref name="codePage" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding (int codePage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 codePage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding(int codePage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codePage"><span data-ttu-id="2d2f5-630">Идентификатор кодовой страницы кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-630">The encoding code page identifier.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="2d2f5-631">Объект, предоставляющий процедуру обработки ошибок, когда символ не может быть закодирован с использованием текущей кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-631">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="2d2f5-632">Объект, предоставляющий процедуру обработки ошибок, когда последовательность байтов не может быть декодирована с использованием текущей кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-632">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="2d2f5-633">Инициализирует новый экземпляр класса <see cref="T:System.Text.Encoding" />, соответствующий заданной кодовой странице, с использованием указанных стратегий резервирования кодировщика и декодера.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-633">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class that corresponds to the specified code page with the specified encoder and decoder fallback strategies.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-634">Этот конструктор является `protected`; производные классы переопределить его.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-634">This constructor is `protected`; derived classes override it.</span></span>  
  
 <span data-ttu-id="2d2f5-635">Вызов этого конструктора производного класса для управления этот резервный механизм кодирования и декодирования стратегии.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-635">You call this constructor from a derived class to control the fallback encoding and decoding strategies.</span></span> <span data-ttu-id="2d2f5-636"><xref:System.Text.Encoding> Конструкторы класса создать только для чтения кодирования объектами, которые не допускают кодировщика или декодера отката для установки, после создания объекта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-636">The <xref:System.Text.Encoding> class constructors create read-only encoding objects that don't allow encoder or decoder fallback to be set after the object is created.</span></span>  
  
 <span data-ttu-id="2d2f5-637">Если параметр `encoderFallback` или `decoderFallback` имеет значение null, используется стратегия наилучшего соответствия в качестве соответствующей резервной стратегии.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-637">If either `encoderFallback` or `decoderFallback` is null, best-fit fallback is used as the corresponding fallback strategy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-638">Значение параметра <paramref name="codePage" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-638"><paramref name="codePage" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ASCII">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding ASCII { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding ASCII" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.ASCII" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ASCII As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ ASCII { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-639">Получает кодировку для набора символов ASCII (7-разрядных).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-639">Gets an encoding for the ASCII (7-bit) character set.</span></span></summary>
        <value><span data-ttu-id="2d2f5-640">Кодировка набора символов ASCII (7-разрядных).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-640">An  encoding for the ASCII (7-bit) character set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-641">Символы ASCII ограничены нижними 128 символами Юникода, от U + 0000 до U + 007F.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-641">ASCII characters are limited to the lowest 128 Unicode characters, from U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="2d2f5-642">При выборе кодировки ASCII для вашего приложения, учитывайте следующее:</span><span class="sxs-lookup"><span data-stu-id="2d2f5-642">When selecting the ASCII encoding for your app, consider the following:</span></span>  
  
-   <span data-ttu-id="2d2f5-643">Кодировка ASCII обычно подходит для протоколов, требующих ASCII.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-643">The ASCII encoding is usually appropriate for protocols that require ASCII.</span></span>  
  
-   <span data-ttu-id="2d2f5-644">Если вам требуется 8-разрядная кодировка (которое иногда ошибочно называют «ASCII»), кодировка UTF-8 предпочтительнее ASCII кодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-644">If you requires 8-bit encoding (which is sometimes incorrectly referred to as "ASCII"), the UTF-8 encoding is recommended over the ASCII encoding.</span></span> <span data-ttu-id="2d2f5-645">Для символов 0-7F результаты одинаковы, но использование UTF-8 позволяет избежать потери данных благодаря возможности представления всех символов Юникода, которые можно представить.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-645">For the characters 0-7F, the results are identical, but use of UTF-8 avoids data loss by allowing representation of all Unicode characters that are representable.</span></span> <span data-ttu-id="2d2f5-646">Обратите внимание, что в кодировке ASCII 8-го бит неоднозначности, допускающая злонамеренное использование, но кодировку UTF-8 устраняет эту неопределенность 8-й бит.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-646">Note that the ASCII encoding has an 8th bit ambiguity that can allow malicious use, but the UTF-8 encoding removes ambiguity about the 8th bit.</span></span>  
  
-   <span data-ttu-id="2d2f5-647">До .NET Framework версии 2.0 .NET Framework разрешен спуфинг, игнорируя 8-й бит.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-647">Prior to the .NET Framework version 2.0, the .NET Framework allowed spoofing by ignoring the 8th bit.</span></span> <span data-ttu-id="2d2f5-648">Начиная с .NET Framework 2.0, не относящихся к ASCII кодовые точки откат во время декодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-648">Beginning with the .NET Framework 2.0, non-ASCII code points fall back during decoding.</span></span>  
  
 <span data-ttu-id="2d2f5-649"><xref:System.Text.ASCIIEncoding> Объект, возвращаемый этим свойством не может иметь необходимого поведения для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-649">The <xref:System.Text.ASCIIEncoding> object that is returned by this property might not have the appropriate behavior for your app.</span></span> <span data-ttu-id="2d2f5-650">Он использует резервную стратегию замены для замены каждой строки, он не может закодировать и каждый байт, он не может декодировать, вопросительным знаком ("?») символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-650">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="2d2f5-651">Вместо этого можно вызвать метод <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> метод для создания <xref:System.Text.ASCIIEncoding> объект которого является либо <xref:System.Text.EncoderFallbackException> или <xref:System.Text.DecoderFallbackException>, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-651">Instead, you can call the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> method to instantiate an <xref:System.Text.ASCIIEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.ASCII#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.ascii/cs/encoding.ascii2.cs#1)]
 [!code-vb[System.Text.Encoding.ASCII#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.ascii/vb/encoding.ascii2.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-652">В следующем примере показано влияние кодировки ASCII на символы, которые находятся за пределами диапазона ASCII.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-652">The following example demonstrates the effect of the ASCII encoding on characters that are outside the ASCII range.</span></span>  
  
 [!code-cpp[System.Text.Encoding.ASCII Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/CPP/ascii.cpp#1)]
 [!code-csharp[System.Text.Encoding.ASCII Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/CS/ascii.cs#1)]
 [!code-vb[System.Text.Encoding.ASCII Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/VB/ascii.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.ASCIIEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
      </Docs>
    </Member>
    <Member MemberName="BigEndianUnicode">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding BigEndianUnicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding BigEndianUnicode" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.BigEndianUnicode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BigEndianUnicode As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ BigEndianUnicode { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-653">Получает кодировку для формата UTF-16 с обратным порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-653">Gets an encoding for the UTF-16 format that uses the big endian byte order.</span></span></summary>
        <value><span data-ttu-id="2d2f5-654">Объект кодировки для формата UTF-16 с обратным порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-654">An encoding object for the UTF-16 format that uses the big endian byte order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-655"><xref:System.Text.UnicodeEncoding> Объект, возвращаемый этим свойством не может иметь необходимого поведения для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-655">The <xref:System.Text.UnicodeEncoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="2d2f5-656">Он использует резервную стратегию замены для замены каждой строки, он не может закодировать и каждый байт, он не может декодировать, вопросительным знаком ("?») символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-656">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="2d2f5-657">Вместо этого можно вызвать метод <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> конструктор для создания экземпляра с обратным порядком байтов <xref:System.Text.UnicodeEncoding> объект которого является либо <xref:System.Text.EncoderFallbackException> или <xref:System.Text.DecoderFallbackException>, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-657">Instead, you can call the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a big endian <xref:System.Text.UnicodeEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.BigEndianUnicode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CS/bigendianunicode1.cs#2)]
 [!code-vb[System.Text.Encoding.BigEndianUnicode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/VB/bigendianunicode1.vb#2)]  
  
 <span data-ttu-id="2d2f5-658">Возвращенный <xref:System.Text.UnicodeEncoding> объект имеет <xref:System.Text.Encoding.BodyName%2A>, <xref:System.Text.Encoding.HeaderName%2A>, и <xref:System.Text.Encoding.WebName%2A> свойства, позволяющие найти имя «unicodeFFFE».</span><span class="sxs-lookup"><span data-stu-id="2d2f5-658">The returned <xref:System.Text.UnicodeEncoding> object has <xref:System.Text.Encoding.BodyName%2A>, <xref:System.Text.Encoding.HeaderName%2A>, and <xref:System.Text.Encoding.WebName%2A> properties, which yield the name "unicodeFFFE".</span></span> <span data-ttu-id="2d2f5-659">Несмотря на то, что метка порядка обратным порядком байтов UTF-16 — шестнадцатеричное число FEFF, имя «unicodeFFFE» была выбрана, так как метка порядка байтов отображается как шестнадцатеричное число FFFE на компьютерах с прямым порядком байтов Windows.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-659">Although the UTF-16 big endian byte order mark is hexadecimal FEFF, the name "unicodeFFFE" was chosen because the byte order mark appears as hexadecimal FFFE on little endian Windows computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-660">В следующем примере считывается в текстовый файл с кодировкой UTF-16, используя обратный порядок байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-660">The following example reads a text file with a UTF-16 encoding using the big endian byte order.</span></span>  
  
 [!code-cpp[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CPP/bigendianunicode.cpp#1)]
 [!code-csharp[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CS/bigendianunicode.cs#1)]
 [!code-vb[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/VB/bigendianunicode.vb#1)]  
  
 <span data-ttu-id="2d2f5-661">Приведенный ниже определяет число байтов, необходимых для кодирования массива символов, выполняется кодирование символов и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-661">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UnicodeEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
      </Docs>
    </Member>
    <Member MemberName="BodyName">
      <MemberSignature Language="C#" Value="public virtual string BodyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BodyName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.BodyName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BodyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BodyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-662">При переопределении в производном классе получает имя текущей кодировки, которое может использоваться с тегами текста сообщения почтового агента.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-662">When overridden in a derived class, gets a name for the current encoding that can be used with mail agent body tags.</span></span></summary>
        <value><span data-ttu-id="2d2f5-663">Имя текущего объекта <see cref="T:System.Text.Encoding" />, которое может использоваться с тегами текста сообщения почтового агента.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-663">A name for the current <see cref="T:System.Text.Encoding" /> that can be used with mail agent body tags.</span></span>  
  
 <span data-ttu-id="2d2f5-664">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-664">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-665">Пустая строка (""), если текущий объект <see cref="T:System.Text.Encoding" /> не может использоваться.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-665">An empty string (""), if the current <see cref="T:System.Text.Encoding" /> cannot be used.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-666">При необходимости кодировку для имя тела, необходимо вызвать <xref:System.Text.Encoding.GetEncoding%2A> с <xref:System.Text.Encoding.BodyName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-666">If you need an encoding for a body name, you should call <xref:System.Text.Encoding.GetEncoding%2A> with the <xref:System.Text.Encoding.BodyName%2A> property.</span></span> <span data-ttu-id="2d2f5-667">Этот метод часто извлекает другую кодировку из тестовой кодировки, для которой он вызывается.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-667">Often the method retrieves a different encoding from the test encoding furnished in the call.</span></span> <span data-ttu-id="2d2f5-668">Обычно только почтовые приложения необходимо получить такое кодирование; Большинство других приложений, чтобы описать кодировку следует использовать его <xref:System.Text.Encoding.WebName%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-668">Generally only email applications need to retrieve such an encoding; most other applications that need to describe an encoding should use its <xref:System.Text.Encoding.WebName%2A>.</span></span>  
  
 <span data-ttu-id="2d2f5-669">В некоторых случаях значение <xref:System.Text.Encoding.BodyName%2A> свойство соответствует свойству международный стандарт, который определяет эту кодировку.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-669">In some cases, the value of the <xref:System.Text.Encoding.BodyName%2A> property corresponds to the international standard that defines that encoding.</span></span> <span data-ttu-id="2d2f5-670">Это не означает соответствия реализация полностью с этого стандарта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-670">This doesn't mean that the implementation complies in full with that standard.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-671">В следующем примере извлекаются разные имена для каждой кодировки и отображаются кодировки, имеющие одно или несколько имен, которые отличаются от <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-671">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2d2f5-672">Он отображает <xref:System.Text.Encoding.EncodingName%2A> , но сравниваются по нему.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-672">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d2f5-673">При переопределении в производном классе создается неполная копия текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-673">When overridden in a derived class, creates a shallow copy of the current <see cref="T:System.Text.Encoding" /> object.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-674">Копия текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-674">A copy of the current <see cref="T:System.Text.Encoding" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-675">Копия класса доступна для записи даже в том случае, если исходный <xref:System.Text.Encoding> объект доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-675">The clone is writable even if the original <xref:System.Text.Encoding> object is read-only.</span></span> <span data-ttu-id="2d2f5-676">Таким образом можно изменить свойства копии.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-676">Therefore, the properties of the clone can be modified.</span></span>  
  
 <span data-ttu-id="2d2f5-677">Неполная копия объекта является копией только данного объекта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-677">A shallow copy of an object is a copy of the object only.</span></span> <span data-ttu-id="2d2f5-678">Если в объекте содержатся ссылки на другие объекты, создаются в неполной копии не объектов, который ссылается.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-678">If the object contains references to other objects, the shallow copy does not create copies of the referred objects.</span></span> <span data-ttu-id="2d2f5-679">Он ссылается на исходные объекты вместо него.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-679">It refers to the original objects instead.</span></span> <span data-ttu-id="2d2f5-680">Напротив глубокую копию объекта создает копию объекта и копию всего содержимого, прямо или косвенно ссылается этот объект.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-680">In contrast, a deep copy of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public virtual int CodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CodePage { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-681">При переопределении в производном классе получает идентификатор кодовой страницы текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-681">When overridden in a derived class, gets the code page identifier of the current <see cref="T:System.Text.Encoding" />.</span></span></summary>
        <value><span data-ttu-id="2d2f5-682">Идентификатор кодовой страницы текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-682">The code page identifier of the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2d2f5-683">В следующем примере извлекаются разные имена для каждой кодировки и отображаются кодировки, имеющие одно или несколько имен, которые отличаются от <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-683">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2d2f5-684">Он отображает <xref:System.Text.Encoding.EncodingName%2A> , но сравниваются по нему.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-684">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.CodePage" />
        <altmember cref="P:System.Text.Encoding.WindowsCodePage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d2f5-685">Преобразует массив байтов из одной кодировки в другую.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-685">Converts a byte array from one encoding to another.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static byte[] Convert (System.Text.Encoding srcEncoding, System.Text.Encoding dstEncoding, byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Convert(class System.Text.Encoding srcEncoding, class System.Text.Encoding dstEncoding, unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Convert (srcEncoding As Encoding, dstEncoding As Encoding, bytes As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Convert(System::Text::Encoding ^ srcEncoding, System::Text::Encoding ^ dstEncoding, cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcEncoding" Type="System.Text.Encoding" />
        <Parameter Name="dstEncoding" Type="System.Text.Encoding" />
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="srcEncoding"><span data-ttu-id="2d2f5-686">Формат кодировки параметра <c>bytes</c>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-686">The encoding format of <c>bytes</c>.</span></span></param>
        <param name="dstEncoding"><span data-ttu-id="2d2f5-687">Целевой формат кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-687">The target encoding format.</span></span></param>
        <param name="bytes"><span data-ttu-id="2d2f5-688">Преобразуемые байты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-688">The bytes to convert.</span></span></param>
        <summary><span data-ttu-id="2d2f5-689">Преобразует весь массив байтов из одной кодировки в другую.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-689">Converts an entire byte array from one encoding to another.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-690">Массив типа <see cref="T:System.Byte" />, содержащий результаты преобразования <paramref name="bytes" /> из <paramref name="srcEncoding" /> в <paramref name="dstEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-690">An array of type <see cref="T:System.Byte" /> containing the results of converting <paramref name="bytes" /> from <paramref name="srcEncoding" /> to <paramref name="dstEncoding" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2d2f5-691">Следующий пример преобразует строку в кодировке Юникод в строки в кодировке ASCII.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-691">The following example converts a Unicode-encoded string to an ASCII-encoded string.</span></span> <span data-ttu-id="2d2f5-692">Поскольку возвращенный объект кодировки ASCII <xref:System.Text.Encoding.ASCII%2A> свойство использует резервную стратегию замены и Pi символ не является частью набора символов ASCII, знак Pi заменяется вопросительным знаком, как показано в примере выходных данных.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-692">Because the ASCII encoding object returned by the <xref:System.Text.Encoding.ASCII%2A> property uses replacement fallback and the Pi character is not part of the ASCII character set, the Pi character is replaced with a question mark, as the output from the example shows.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-693">Свойство <paramref name="srcEncoding" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-693"><paramref name="srcEncoding" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="2d2f5-694">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-694">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-695">Свойство <paramref name="dstEncoding" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-695"><paramref name="dstEncoding" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="2d2f5-696">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-696">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-697">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-697"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="2d2f5-698">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-698">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-699">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-699">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-700">**srcEncoding.**</span><span class="sxs-lookup"><span data-stu-id="2d2f5-700">**srcEncoding.**</span></span> <span data-ttu-id="2d2f5-701">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-701"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="2d2f5-702">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-702">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-703">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-703">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-704">**dstEncoding.**</span><span class="sxs-lookup"><span data-stu-id="2d2f5-704">**dstEncoding.**</span></span> <span data-ttu-id="2d2f5-705">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-705"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static byte[] Convert (System.Text.Encoding srcEncoding, System.Text.Encoding dstEncoding, byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Convert(class System.Text.Encoding srcEncoding, class System.Text.Encoding dstEncoding, unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Convert (srcEncoding As Encoding, dstEncoding As Encoding, bytes As Byte(), index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Convert(System::Text::Encoding ^ srcEncoding, System::Text::Encoding ^ dstEncoding, cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcEncoding" Type="System.Text.Encoding" />
        <Parameter Name="dstEncoding" Type="System.Text.Encoding" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="srcEncoding"><span data-ttu-id="2d2f5-706">Кодировка исходного массива, <c>bytes</c>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-706">The encoding of the source array, <c>bytes</c>.</span></span></param>
        <param name="dstEncoding"><span data-ttu-id="2d2f5-707">Кодировка выходного массива.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-707">The encoding of the output array.</span></span></param>
        <param name="bytes"><span data-ttu-id="2d2f5-708">Преобразуемый массив байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-708">The array of bytes to convert.</span></span></param>
        <param name="index"><span data-ttu-id="2d2f5-709">Индекс первого элемента преобразуемого массива <c>bytes</c>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-709">The index of the first element of <c>bytes</c> to convert.</span></span></param>
        <param name="count"><span data-ttu-id="2d2f5-710">Число байтов, которые требуется преобразовать.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-710">The number of bytes to convert.</span></span></param>
        <summary><span data-ttu-id="2d2f5-711">Преобразует диапазон байтов в массиве байтов из одной кодировки в другую.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-711">Converts a range of bytes in a byte array from one encoding to another.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-712">Массив типа <see cref="T:System.Byte" />, содержащий результат преобразования диапазона байтов из массива <paramref name="bytes" /> из <paramref name="srcEncoding" /> в <paramref name="dstEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-712">An array of type <see cref="T:System.Byte" /> containing the result of converting a range of bytes in <paramref name="bytes" /> from <paramref name="srcEncoding" /> to <paramref name="dstEncoding" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-713">Свойство <paramref name="srcEncoding" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-713"><paramref name="srcEncoding" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="2d2f5-714">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-714">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-715">Свойство <paramref name="dstEncoding" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-715"><paramref name="dstEncoding" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="2d2f5-716">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-716">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-717">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-717"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-718"><paramref name="index" /> и <paramref name="count" /> не определяют допустимый диапазон в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-718"><paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the byte array.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="2d2f5-719">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-719">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-720">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-720">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-721">**srcEncoding.**</span><span class="sxs-lookup"><span data-stu-id="2d2f5-721">**srcEncoding.**</span></span> <span data-ttu-id="2d2f5-722">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-722"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="2d2f5-723">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-723">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-724">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-724">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-725">**dstEncoding.**</span><span class="sxs-lookup"><span data-stu-id="2d2f5-725">**dstEncoding.**</span></span> <span data-ttu-id="2d2f5-726">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-726"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecoderFallback">
      <MemberSignature Language="C#" Value="public System.Text.DecoderFallback DecoderFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.DecoderFallback DecoderFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.DecoderFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property DecoderFallback As DecoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::DecoderFallback ^ DecoderFallback { System::Text::DecoderFallback ^ get(); void set(System::Text::DecoderFallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-727">Возвращает или задает объект <see cref="T:System.Text.DecoderFallback" /> для текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-727">Gets or sets the <see cref="T:System.Text.DecoderFallback" /> object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></summary>
        <value><span data-ttu-id="2d2f5-728">Резервный объект декодера для текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-728">The decoder fallback object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-729"><xref:System.Text.DecoderFallback> Объект представляет обработчик ошибок, который вызывается, когда не удается декодировать в закодированную последовательность байтов в символ.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-729">The <xref:System.Text.DecoderFallback> object represents an error handler that is invoked when an encoded byte sequence cannot be decoded into a character.</span></span> <span data-ttu-id="2d2f5-730">Один из следующих типов обработчика поддерживается:</span><span class="sxs-lookup"><span data-stu-id="2d2f5-730">Any one of the following handler types is supported:</span></span>  
  
-   <span data-ttu-id="2d2f5-731">Стратегия наилучшего соответствия резервному обработчику, который заменяет байтов, которые не удается декодировать символ некоторые подходящие замены.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-731">A best-fit fallback handler, which replaces bytes that cannot be decoded with some suitable replacement character.</span></span>  
  
-   <span data-ttu-id="2d2f5-732">Замена резервному обработчику, который заменяет некоторые произвольный замещающий символ байтов, которые не удается декодировать.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-732">A replacement fallback handler, which replaces bytes that cannot be decoded with some arbitrary replacement character.</span></span> <span data-ttu-id="2d2f5-733">Платформа .NET Framework включает один резервному обработчику замены <xref:System.Text.DecoderFallback>, по умолчанию заменяет байтов, которые не удается декодировать, вопросительным знаком ("?») символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-733">The .NET Framework includes one replacement fallback handler, <xref:System.Text.DecoderFallback>, which by default replaces bytes that cannot be decoded with a question mark ("?") character.</span></span>  
  
-   <span data-ttu-id="2d2f5-734">Резервный обработчика исключений, который создает исключение, если байт не может быть декодирована.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-734">An exception fallback handler, which throws an exception when bytes cannot be decoded.</span></span> <span data-ttu-id="2d2f5-735">Платформа .NET Framework включает один резервный обработчик исключений <xref:System.Text.DecoderExceptionFallback>, какие вызывает <xref:System.Text.DecoderFallbackException> когда не удается декодировать байты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-735">The .NET Framework includes one exception fallback handler, <xref:System.Text.DecoderExceptionFallback>, which throws a <xref:System.Text.DecoderFallbackException> when bytes cannot be decoded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d2f5-736">Для данного свойства задано значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-736">The value in a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d2f5-737">Невозможно задать значение, поскольку текущий объект <see cref="T:System.Text.Encoding" /> предназначен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-737">A value cannot be assigned in a set operation because the current <see cref="T:System.Text.Encoding" /> object is read-only.</span></span></exception>
        <altmember cref="T:System.Text.DecoderFallback" />
        <altmember cref="T:System.Text.DecoderFallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding Default" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ Default { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-738">Возвращает кодировку по умолчанию для данной реализации .NET.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-738">Gets the default encoding for this .NET implementation.</span></span></summary>
        <value><span data-ttu-id="2d2f5-739">Кодировка по умолчанию для данной реализации .NET.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-739">The default encoding for this .NET implementation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="2d2f5-740">Разные компьютеры могут использовать различные кодировки по умолчанию и кодировку по умолчанию можно изменить на одном компьютере.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-740">Different computers can use different encodings as the default, and the default encoding can change on a single computer.</span></span> <span data-ttu-id="2d2f5-741">Если вы используете <xref:System.Text.Encoding.Default%2A> кодировка для кодирования и декодирования данных потоковой передачи между компьютерами или извлечь в разное время на одном компьютере может преобразовать эти данные неправильно.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-741">If you use the <xref:System.Text.Encoding.Default%2A> encoding to encode and decode data streamed between computers or retrieved at different times on the same computer, it may translate that data incorrectly.</span></span> <span data-ttu-id="2d2f5-742">Кроме того, кодировка возвращенных <xref:System.Text.Encoding.Default%2A> свойство использует резервную стратегию наилучшего соответствия для сопоставления символы, поддерживаемые в кодовой странице неподдерживаемые символы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-742">In addition, the encoding returned by the <xref:System.Text.Encoding.Default%2A> property uses best-fit fallback to map unsupported characters to characters supported by the code page.</span></span> <span data-ttu-id="2d2f5-743">По этим причинам с использованием кодировки по умолчанию не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-743">For these reasons, using the default encoding is not recommended.</span></span> <span data-ttu-id="2d2f5-744">Чтобы обеспечить правильное декодирование закодированных байтов, следует использовать кодировку Юникод, таких как <xref:System.Text.UTF8Encoding> или <xref:System.Text.UnicodeEncoding>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-744">To ensure that encoded bytes are decoded properly, you should use a Unicode encoding, such as <xref:System.Text.UTF8Encoding> or <xref:System.Text.UnicodeEncoding>.</span></span> <span data-ttu-id="2d2f5-745">Также можно использовать протокол более высокого уровня, чтобы убедиться, что тот же формат используется для кодирования и декодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-745">You could also use a higher-level protocol to ensure that the same format is used for encoding and decoding.</span></span>  

### <a name="the-default-property-in-the-net-framework"></a><span data-ttu-id="2d2f5-746">Свойство по умолчанию в платформе .NET Framework</span><span class="sxs-lookup"><span data-stu-id="2d2f5-746">The Default property in the .NET Framework</span></span>

<span data-ttu-id="2d2f5-747">В платформе .NET Framework, на рабочем столе Windows <xref:System.Text.Encoding.Default%2A> свойство всегда возвращает active кодовой страницы системы и создает <xref:System.Text.Encoding> объекта, который соответствует к нему.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-747">In the .NET Framework on the Windows desktop, the <xref:System.Text.Encoding.Default%2A> property always gets the system's active code page and creates a <xref:System.Text.Encoding> object that corresponds to it.</span></span> <span data-ttu-id="2d2f5-748">Текущая кодовая страница может быть кодовой страницей ANSI, которая включает кодировки ASCII и дополнительные символы, которые различаются по кодовой странице.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-748">The active code page may be an ANSI code page, which includes the ASCII character set along with additional characters that vary by code page.</span></span> <span data-ttu-id="2d2f5-749">Так как все <xref:System.Text.Encoding.Default%2A> кодировки, кодовые страницы ANSI потерять данные, рассмотрите возможность использования <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> вместо кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-749">Because all <xref:System.Text.Encoding.Default%2A> encodings based on ANSI code pages lose data, consider using the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> encoding instead.</span></span> <span data-ttu-id="2d2f5-750">UTF-8 идентична часто в U + 00 диапазона U + 7F, но позволяет кодировать символы за пределами диапазона ASCII без потери.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-750">UTF-8 is often identical in the U+00 to U+7F range, but can encode characters outside the ASCII range without loss.</span></span>

## <a name="the-default-property-on-net-core"></a><span data-ttu-id="2d2f5-751">Свойство по умолчанию на основе .NET Core</span><span class="sxs-lookup"><span data-stu-id="2d2f5-751">The Default property on .NET Core</span></span>

<span data-ttu-id="2d2f5-752">На основе .NET Core <xref:System.Text.Encoding.Default%2A> свойство всегда возвращает <xref:System.Text.UTF8Encoding>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-752">On .NET Core, the <xref:System.Text.Encoding.Default%2A> property always returns the <xref:System.Text.UTF8Encoding>.</span></span> <span data-ttu-id="2d2f5-753">UTF-8 поддерживается на всех операционных систем (Windows, Linux и Max OS X) на котором выполняются приложения .NET Core.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-753">UTF-8 is supported on all the operating systems (Windows, Linux, and Max OS X) on which .NET Core applications run.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncoderFallback">
      <MemberSignature Language="C#" Value="public System.Text.EncoderFallback EncoderFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.EncoderFallback EncoderFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.EncoderFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property EncoderFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::EncoderFallback ^ EncoderFallback { System::Text::EncoderFallback ^ get(); void set(System::Text::EncoderFallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-754">Возвращает или задает объект <see cref="T:System.Text.EncoderFallback" /> для текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-754">Gets or sets the <see cref="T:System.Text.EncoderFallback" /> object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></summary>
        <value><span data-ttu-id="2d2f5-755">Резервный объект кодировщика для текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-755">The encoder fallback object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-756"><xref:System.Text.EncoderFallback> Объект представляет обработчик ошибок, который вызывается, когда символ не может преобразован в закодированную последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-756">The <xref:System.Text.EncoderFallback> object represents an error handler that is invoked when a character cannot be converted into an encoded byte sequence.</span></span> <span data-ttu-id="2d2f5-757">Один из следующих типов обработчика поддерживается:</span><span class="sxs-lookup"><span data-stu-id="2d2f5-757">Any one of the following handler types is supported:</span></span>  
  
-   <span data-ttu-id="2d2f5-758">Стратегия наилучшего соответствия резервному обработчику, который заменяет символы, которые не удается закодировать определенным символом подходящие замены.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-758">A best-fit fallback handler, which replaces characters that cannot be encoded with some suitable replacement character.</span></span>  
  
-   <span data-ttu-id="2d2f5-759">Замена резервному обработчику, который заменяет символы, которые не удается закодировать некоторых произвольных замещающий символ.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-759">A replacement fallback handler, which replaces characters that cannot be encoded with some arbitrary replacement character.</span></span> <span data-ttu-id="2d2f5-760">Платформа .NET Framework включает один обработчик резервной замены, <xref:System.Text.EncoderFallback>, по умолчанию заменяет символы, которые не удается закодировать с вопросительным знаком ("?») символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-760">The .NET Framework includes one replacement fallback handler, <xref:System.Text.EncoderFallback>, which by default replaces characters that cannot be encoded with a question mark ("?") character.</span></span>  
  
-   <span data-ttu-id="2d2f5-761">Резервный обработчика исключений, который создает исключение, если символы не может быть закодирован.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-761">An exception fallback handler, which throws an exception when characters cannot be encoded.</span></span> <span data-ttu-id="2d2f5-762">Платформа .NET Framework включает один резервный обработчик исключений <xref:System.Text.EncoderExceptionFallback>, какие вызывает <xref:System.Text.EncoderFallbackException> когда не удается декодировать символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-762">The .NET Framework includes one exception fallback handler, <xref:System.Text.EncoderExceptionFallback>, which throws an <xref:System.Text.EncoderFallbackException> when characters cannot be decoded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d2f5-763">Для данного свойства задано значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-763">The value in a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d2f5-764">Невозможно задать значение, поскольку текущий объект <see cref="T:System.Text.Encoding" /> предназначен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-764">A value cannot be assigned in a set operation because the current <see cref="T:System.Text.Encoding" /> object is read-only.</span></span></exception>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="EncodingName">
      <MemberSignature Language="C#" Value="public virtual string EncodingName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodingName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.EncodingName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncodingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EncodingName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-765">При переопределении в производном классе получает описание текущей кодировки, которое может быть прочитано пользователем.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-765">When overridden in a derived class, gets the human-readable description of the current encoding.</span></span></summary>
        <value><span data-ttu-id="2d2f5-766">Описание текущего объекта <see cref="T:System.Text.Encoding" />, которое может быть прочитано пользователем.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-766">The human-readable description of the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-767"><xref:System.Text.Encoding.EncodingName%2A> Свойство предназначено для отображения.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-767">The <xref:System.Text.Encoding.EncodingName%2A> property is intended for display.</span></span> <span data-ttu-id="2d2f5-768">Чтобы найти имя, которое может быть передан <xref:System.Text.Encoding.GetEncoding%2A> используйте <xref:System.Text.Encoding.WebName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-768">To find a name that can be passed to the <xref:System.Text.Encoding.GetEncoding%2A> method, use the <xref:System.Text.Encoding.WebName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-769">В следующем примере извлекаются разные имена для каждой кодировки и отображаются кодировки, имеющие одно или несколько имен, которые отличаются от <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-769">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2d2f5-770">Он отображает <xref:System.Text.Encoding.EncodingName%2A> , но сравниваются по нему.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-770">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.DisplayName" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2d2f5-771"><see cref="T:System.Object" /> для сравнения с текущим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-771">The <see cref="T:System.Object" /> to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="2d2f5-772">Определяет, равен ли указанный объект <see cref="T:System.Object" /> текущему экземпляру.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-772">Determines whether the specified <see cref="T:System.Object" /> is equal to the current instance.</span></span></summary>
        <returns>
          <span data-ttu-id="2d2f5-773">Значение <see langword="true" />, если <paramref name="value" /> является экземпляром <see cref="T:System.Text.Encoding" />, равным текущему экземпляру; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-773"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.Encoding" /> and is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-774">Два экземпляра <xref:System.Text.Encoding> считаются равными, если они соответствуют ту же кодовую страницу и их `EncoderFallback` и `DecoderFallback` объекты равны.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-774">Two instances of <xref:System.Text.Encoding> are considered equal if they correspond to the same code page and their `EncoderFallback` and `DecoderFallback` objects are equal.</span></span> <span data-ttu-id="2d2f5-775">В частности, все производные кодовые страницы имеют кодовую страницу 0 и их резервные варианты обычно `null` (`Nothing` в Visual Basic .NET).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-775">In particular, derived code pages all have a code page of 0 and their fallbacks are normally `null` (`Nothing` in Visual Basic .NET).</span></span> <span data-ttu-id="2d2f5-776">Таким образом они считаются равными.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-776">Thus they are all considered equal to one another.</span></span> <span data-ttu-id="2d2f5-777">Одно из них является то, что при <xref:System.Text.Encoding.Equals%2A> используется для заполнения хэш-таблицу, все производные кодировки считаются равными и попадают в один и тот же слот таблицы хэша.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-777">One consequence is that when <xref:System.Text.Encoding.Equals%2A> is used to populate a hash table, all derived encodings compare equal and fall into the same hash table slot.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-778">Следующий пример возвращает два экземпляра одной кодировки (один по кодовой странице), а другой — по имени и проверки их равенства.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-778">The following example gets two instances of the same encoding (one by codepage and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Text.Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d2f5-779">При переопределении в производном классе вычисляет количество байтов, полученных при кодировании набора символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-779">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (chars As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(cli::array &lt;char&gt; ^ chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="2d2f5-780">Массив символов, содержащий символы, которые требуется закодировать.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-780">The character array containing the characters to encode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-781">При переопределении в производном классе вычисляет количество байтов, полученных при кодировании всех символов из заданного массива символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-781">When overridden in a derived class, calculates the number of bytes produced by encoding all the characters in the specified character array.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-782">Количество байтов, полученных при кодировании всех символов из указанного массива символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-782">The number of bytes produced by encoding all the characters in the specified character array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-783">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.Encoding.GetBytes%2A> для сохранения полученные байты, вызвать <xref:System.Text.Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-783">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-784">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-784">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-785"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно обеспечивает выделения меньше памяти, пока <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-785">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2d2f5-786"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байт привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактической кодировкой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-786">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="2d2f5-787"><xref:System.Text.Encoding.GetBytes%2A> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-787">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-788">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-788">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="2d2f5-789">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-789">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-790">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обрабатывать эти символы, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-790">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="2d2f5-791">В этом случае, возможно, необходимо сохранять состояние между вызовами с учетом состояния, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-791">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="2d2f5-792">Если приложение обрабатывает входные строки, следует использовать строку версии <xref:System.Text.Encoding.GetBytes%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-792">If your app handles string inputs, you should use the string versions of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="2d2f5-793">Версия буфер символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно в несколько вызовов с помощью <xref:System.Text.Encoder> объекта или вставка в существующие буферы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-793">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="2d2f5-794">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-794">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-795">Если приложение необходимо преобразовать большой объем данных, следует использовать выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-795">If your app must convert a large amount of data, you should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-796">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивов байтов является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-796">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-797">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-797">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="2d2f5-798">Метод преобразования преобразует возможный объем данных, а вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-798">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-799">Для непрерывного кодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-799">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-800">Приведенный ниже определяет число байтов, необходимых для кодирования массива символов, выполняется кодирование символов и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-800">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-801">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-801"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="2d2f5-802">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-802">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-803">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-803">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-804">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-804"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(valuetype System.ReadOnlySpan`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (chars As ReadOnlySpan(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(ReadOnlySpan&lt;char&gt; chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2d2f5-805">Строка, содержащая набор символов для кодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-805">The string containing the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-806">При переопределении в производном классе вычисляет число байтов, полученных при кодировании символов в заданной строке.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-806">When overridden in a derived class, calculates the number of bytes produced by encoding the characters in the specified string.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-807">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-807">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-808">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.Encoding.GetBytes%2A> для сохранения полученные байты, вызвать <xref:System.Text.Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-808">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-809">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-809">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-810"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно обеспечивает выделения меньше памяти, пока <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-810">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2d2f5-811"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байт привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактической кодировкой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-811">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="2d2f5-812"><xref:System.Text.Encoding.GetBytes%2A> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-812">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-813">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-813">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="2d2f5-814">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-814">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-815">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обрабатывать эти символы, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-815">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="2d2f5-816">В этом случае, возможно, необходимо сохранять состояние между вызовами с учетом состояния, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-816">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="2d2f5-817">Если приложение обрабатывает входные строки, строковую версию <xref:System.Text.Encoding.GetBytes%2A> рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-817">If your app handles string inputs, the string version of <xref:System.Text.Encoding.GetBytes%2A> is recommended.</span></span>  
  
-   <span data-ttu-id="2d2f5-818">Версия буфер символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно в несколько вызовов с помощью <xref:System.Text.Encoder> объекта или вставка в существующие буферы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-818">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="2d2f5-819">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-819">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-820">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-820">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-821">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивов байтов является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-821">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-822">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-822">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="2d2f5-823">Метод преобразования преобразует возможный объем данных, а вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-823">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-824">Для непрерывного кодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-824">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-825">Следующий пример определяет число байтов, необходимых для кодирования строки или диапазона в строке, выполняется кодирование символов и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-825">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-826">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-826"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="2d2f5-827">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-827">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-828">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-828">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-829">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-829"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(char* chars, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="2d2f5-830">Указатель на первый кодируемый символ.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-830">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="2d2f5-831">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-831">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-832">При переопределении в производном классе вычисляет количество байтов, полученных при кодировании набора символов, начиная с заданного указателя символа.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-832">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-833">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-833">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-834">Для вычисления массиве точный размер, <xref:System.Text.Encoding.GetBytes%2A> требуется для хранения байтов, необходимо вызвать <xref:System.Text.Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-834">To calculate the exact array size that <xref:System.Text.Encoding.GetBytes%2A> requires to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-835">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-835">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-836"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно обеспечивает выделения меньше памяти, пока <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-836">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2d2f5-837"><xref:System.Text.Encoding.GetByteCount%28System.Char%2A%2CSystem.Int32%29> Метод определяет, сколько байт привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> метод выполняет фактической кодировкой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-837">The <xref:System.Text.Encoding.GetByteCount%28System.Char%2A%2CSystem.Int32%29> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> method performs the actual encoding.</span></span> <span data-ttu-id="2d2f5-838"><xref:System.Text.Encoding.GetBytes%2A> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-838">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-839">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-839">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="2d2f5-840">Ниже приведены некоторые рекомендации по использованию этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-840">The following are some considerations for using these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-841">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обрабатывать эти символы, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-841">Your app may need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="2d2f5-842">В этом случае, возможно, необходимо сохранять состояние между вызовами с учетом состояния, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-842">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="2d2f5-843">Если приложение обрабатывает входные строки, следует использовать строковую версию <xref:System.Text.Encoding.GetBytes%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-843">If your app handles string inputs, you should use the string version of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="2d2f5-844">Версия буфер символов Юникода <xref:System.Text.Encoding.GetBytes%2A> позволяет использовать некоторые быстрые способы, особенно в несколько вызовов с помощью <xref:System.Text.Encoder> объекта или вставка в существующие буферы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-844">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%2A> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="2d2f5-845">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-845">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-846">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-846">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-847">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивов байтов является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-847">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-848">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-848">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="2d2f5-849">Метод преобразования преобразует возможный объем данных, а вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-849">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-850">Для непрерывного кодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-850">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-851">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-851"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-852">Значение параметра <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-852"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="2d2f5-853">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-853">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-854">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-854">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-855">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-855"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="2d2f5-856">требуется полное доверие для непосредственно вызывающего метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-856">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="2d2f5-857">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-857">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public abstract int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="2d2f5-858">Массив символов, содержащий набор кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-858">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="2d2f5-859">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-859">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="2d2f5-860">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-860">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-861">При переопределении в производном классе вычисляет количество байтов, полученных при кодировании набора символов из указанного массива символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-861">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-862">Число байтов, полученных при кодировании заданных символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-862">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-863">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.Encoding.GetBytes%2A> для сохранения полученные байты, вызвать <xref:System.Text.Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-863">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-864">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-864">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-865"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно обеспечивает выделения меньше памяти, пока <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-865">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2d2f5-866"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байт привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактической кодировкой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-866">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="2d2f5-867"><xref:System.Text.Encoding.GetBytes%2A> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-867">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-868">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-868">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="2d2f5-869">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-869">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-870">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обрабатывать эти символы, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-870">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="2d2f5-871">В этом случае, возможно, необходимо сохранять состояние между вызовами с учетом состояния, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-871">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="2d2f5-872">Если приложение обрабатывает входные строки, строковую версию <xref:System.Text.Encoding.GetBytes%2A> рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-872">If your app handles string inputs, the string version of <xref:System.Text.Encoding.GetBytes%2A> is recommended.</span></span>  
  
-   <span data-ttu-id="2d2f5-873">Версия буфер символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно в несколько вызовов с помощью <xref:System.Text.Encoder> объекта или вставка в существующие буферы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-873">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="2d2f5-874">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-874">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-875">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-875">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-876">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивов байтов является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-876">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-877">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-877">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="2d2f5-878">Метод преобразования преобразует возможный объем данных, а вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-878">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-879">Для непрерывного кодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-879">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-880">Приведенный ниже определяет число байтов, необходимое для кодирования трех символов из массива символов, выполняется кодирование символов и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-880">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-881">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-881"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-882">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-882"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="2d2f5-883">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-883">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-884">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-884"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="2d2f5-885">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-885">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-886">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-886">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-887">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-887"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public int GetByteCount (string s, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetByteCount(string s, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteCount (s As String, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetByteCount(System::String ^ s, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="index">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d2f5-888">При переопределении в производном классе кодирует набор символов в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-888">When overridden in a derived class, encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As Char()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(cli::array &lt;char&gt; ^ chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="2d2f5-889">Массив символов, содержащий символы, которые требуется закодировать.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-889">The character array containing the characters to encode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-890">При переопределении в производном классе кодирует все символы из указанного массива символов в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-890">When overridden in a derived class, encodes all the characters in the specified character array into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-891">Массив байтов, содержащий результаты кодирования указанного набора символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-891">A byte array containing the results of encoding the specified set of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-892">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> , предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-892">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="2d2f5-893"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байт привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактической кодировкой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-893">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="2d2f5-894"><xref:System.Text.Encoding.GetBytes%2A> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-894">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-895">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-895">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="2d2f5-896">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-896">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-897">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обрабатывать эти символы, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-897">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="2d2f5-898">В этом случае, возможно, необходимо сохранять состояние между вызовами с учетом состояния, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-898">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="2d2f5-899">(Например, последовательность символов, которая содержит пары символов-заместителей может заканчиваться старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-899">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="2d2f5-900"><xref:System.Text.Encoder> Запомнит старший символ-заместитель, чтобы ее можно использовать совместно с младшим символом-заместителем в начале следующего вызова.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-900">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="2d2f5-901"><xref:System.Text.Encoding> Невозможно использовать для сохранения состояния, поэтому символ будет отправляться <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-901"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="2d2f5-902">Если приложение обрабатывает входные строки, следует вызывать строковую версию <xref:System.Text.Encoding.GetBytes%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-902">If your app handles string inputs, you should call the string version of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="2d2f5-903">Версия буфер символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно в несколько вызовов с помощью <xref:System.Text.Encoder> объекта или вставка в существующие буферы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-903">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="2d2f5-904">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-904">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-905">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-905">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-906">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивов байтов является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-906">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-907">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-907">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="2d2f5-908">Метод преобразования преобразует возможный объем данных, а вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-908">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-909">Для непрерывного кодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-909">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-910">Приведенный ниже определяет число байтов, необходимых для кодирования массива символов, выполняется кодирование символов и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-910">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-911">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-911"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="2d2f5-912">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-912">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-913">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-913">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-914">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-914"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2d2f5-915">Строка, содержащая символы, которые требуется закодировать.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-915">The string containing the characters to encode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-916">При переопределении в производном классе кодирует все символы заданной строки в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-916">When overridden in a derived class, encodes all the characters in the specified string into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-917">Массив байтов, содержащий результаты кодирования указанного набора символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-917">A byte array containing the results of encoding the specified set of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-918">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> , предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-918">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="2d2f5-919"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байт привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактической кодировкой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-919">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="2d2f5-920"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-920">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-921">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-921">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="2d2f5-922">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-922">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-923">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обрабатывать эти символы, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-923">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="2d2f5-924">В этом случае, возможно, необходимо сохранять состояние между вызовами с учетом состояния, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-924">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="2d2f5-925">(Например, последовательность символов, которая содержит пары символов-заместителей может заканчиваться старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-925">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="2d2f5-926"><xref:System.Text.Encoder> Запомнит старший символ-заместитель, чтобы ее можно использовать совместно с младшим символом-заместителем в начале следующего вызова.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-926">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="2d2f5-927"><xref:System.Text.Encoding> Невозможно использовать для сохранения состояния, поэтому символ будет отправляться <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-927"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="2d2f5-928">Если приложение обрабатывает входные строки, следует использовать строковую версию <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-928">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="2d2f5-929">Версия буфер символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно в несколько вызовов с помощью <xref:System.Text.Encoder> объекта или вставка в существующие буферы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-929">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="2d2f5-930">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-930">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-931">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-931">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-932">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивов байтов является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-932">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-933">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-933">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="2d2f5-934">Метод преобразования преобразует возможный объем данных, а вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-934">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-935">Для непрерывного кодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-935">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-936">Следующий пример определяет число байтов, необходимых для кодирования строки или диапазона в строке, выполняется кодирование символов и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-936">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-937">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-937"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="2d2f5-938">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-938">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-939">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-939">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-940">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-940"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As Char(), index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="2d2f5-941">Массив символов, содержащий набор кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-941">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="2d2f5-942">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-942">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="2d2f5-943">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-943">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-944">При переопределении в производном классе кодирует набор символов из указанного массива символов в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-944">When overridden in a derived class, encodes a set of characters from the specified character array into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-945">Массив байтов, содержащий результаты кодирования указанного набора символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-945">A byte array containing the results of encoding the specified set of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-946">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> , предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-946">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="2d2f5-947"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байт привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактической кодировкой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-947">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="2d2f5-948"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-948">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-949">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-949">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="2d2f5-950">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-950">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-951">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обрабатывать эти символы, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-951">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="2d2f5-952">В этом случае, возможно, необходимо сохранять состояние между вызовами с учетом состояния, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-952">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="2d2f5-953">(Например, последовательность символов, которая содержит пары символов-заместителей может заканчиваться старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-953">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="2d2f5-954"><xref:System.Text.Encoder> Запомнит старший символ-заместитель, чтобы ее можно использовать совместно с младшим символом-заместителем в начале следующего вызова.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-954">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="2d2f5-955"><xref:System.Text.Encoding> Невозможно использовать для сохранения состояния, поэтому символ будет отправляться <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-955"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="2d2f5-956">Если приложение обрабатывает входные строки, следует использовать строковую версию <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-956">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="2d2f5-957">Версия буфер символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно в несколько вызовов с помощью <xref:System.Text.Encoder> объекта или вставка в существующие буферы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-957">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="2d2f5-958">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-958">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-959">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-959">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-960">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивов байтов является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-960">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-961">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-961">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="2d2f5-962">Метод преобразования преобразует возможный объем данных, а вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-962">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-963">Для непрерывного кодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-963">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-964">Приведенный ниже определяет число байтов, необходимое для кодирования трех символов из массива символов, выполняется кодирование символов и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-964">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-965">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-965"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-966">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-966"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="2d2f5-967">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-967">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-968">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-968"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="2d2f5-969">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-969">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-970">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-970">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-971">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-971"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public byte[] GetBytes (string s, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetBytes(string s, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBytes (s As String, index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="index">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="2d2f5-972">Указатель на первый кодируемый символ.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-972">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="2d2f5-973">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-973">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="2d2f5-974">Указатель на положение, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-974">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="2d2f5-975">Максимальное число байтов для записи.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-975">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="2d2f5-976">При переопределении в производном классе кодирует набор символов, начало которого задается указателем символа, в последовательность байтов, которые сохраняются, начиная с заданного указателя байта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-976">When overridden in a derived class, encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-977">Фактическое число байтов, записанных в местоположение, которое задано параметром <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-977">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-978">Для вычисления массиве точный размер, <xref:System.Text.Encoding.GetBytes%2A> требует, чтобы сохранить полученные байты, вызовите <xref:System.Text.Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-978">To calculate the exact array size that <xref:System.Text.Encoding.GetBytes%2A> requires to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-979">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-979">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-980"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно обеспечивает выделения меньше памяти, пока <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-980">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2d2f5-981">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> объект, предоставляемый <xref:System.Text.Encoding.GetDecoder%2A>настроек или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-981">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.Encoding.GetDecoder%2A> or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="2d2f5-982"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байт привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактической кодировкой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-982">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="2d2f5-983"><xref:System.Text.Encoding.GetBytes%2A> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-983">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-984">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-984">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="2d2f5-985">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-985">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-986">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обрабатывать эти символы, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-986">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="2d2f5-987">В этом случае, возможно, необходимо сохранять состояние между вызовами с учетом состояния, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-987">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="2d2f5-988">(Например, последовательность символов, которая содержит пары символов-заместителей может заканчиваться старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-988">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="2d2f5-989"><xref:System.Text.Encoder> Запомнит старший символ-заместитель, чтобы ее можно использовать совместно с младшим символом-заместителем в начале следующего вызова.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-989">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="2d2f5-990"><xref:System.Text.Encoding> Невозможно использовать для сохранения состояния, поэтому символ будет отправляться <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-990"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="2d2f5-991">Если приложение обрабатывает входные строки, следует использовать строковую версию <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-991">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="2d2f5-992">Версия буфер символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно в несколько вызовов с помощью <xref:System.Text.Encoder> объекта или вставка в существующие буферы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-992">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="2d2f5-993">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-993">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-994">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-994">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-995">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивов байтов является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-995">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-996">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-996">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="2d2f5-997">Метод преобразования преобразует возможный объем данных, а вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-997">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-998">Для непрерывного кодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-998">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-999">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-999"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="2d2f5-1000">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1000">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1001">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1001"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-1002">Значение параметра <paramref name="charCount" /> или <paramref name="byteCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1002"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d2f5-1003"><paramref name="byteCount" /> меньше результирующего числа байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1003"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="2d2f5-1004">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1004">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-1005">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1005">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-1006">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1006"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="2d2f5-1007">требуется полное доверие для непосредственно вызывающего метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1007">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="2d2f5-1008">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1008">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="2d2f5-1009">Массив символов, содержащий набор кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1009">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="2d2f5-1010">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1010">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="2d2f5-1011">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1011">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="2d2f5-1012">Массив байтов, в который будет помещена результирующая последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1012">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="2d2f5-1013">Индекс, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1013">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1014">При переопределении в производном классе кодирует набор символов из указанного массива символов в указанный массив байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1014">When overridden in a derived class, encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1015">Фактическое число байтов, записанных в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1015">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1016">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.Encoding.GetBytes%2A> для хранения байтов, необходимо вызвать <xref:System.Text.Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1016">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1017">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1017">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1018"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно обеспечивает выделения меньше памяти, пока <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1018">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2d2f5-1019">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> , предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1019">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="2d2f5-1020"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байт привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактической кодировкой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1020">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="2d2f5-1021"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1021">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-1022">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1022">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="2d2f5-1023">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1023">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-1024">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обрабатывать эти символы, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1024">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="2d2f5-1025">В этом случае, возможно, необходимо сохранять состояние между вызовами с учетом состояния, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1025">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="2d2f5-1026">(Например, последовательность символов, которая содержит пары символов-заместителей может заканчиваться старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1026">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="2d2f5-1027"><xref:System.Text.Encoder> Запомнит старший символ-заместитель, чтобы ее можно использовать совместно с младшим символом-заместителем в начале следующего вызова.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1027">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="2d2f5-1028"><xref:System.Text.Encoding> Невозможно использовать для сохранения состояния, поэтому символ будет отправляться <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1028"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="2d2f5-1029">Если приложение обрабатывает входные строки, следует использовать строковую версию <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1029">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="2d2f5-1030">Версия буфер символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно в несколько вызовов с помощью <xref:System.Text.Encoder> объекта или вставка в существующие буферы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1030">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="2d2f5-1031">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1031">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-1032">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1032">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-1033">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивов байтов является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1033">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-1034">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1034">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="2d2f5-1035">Метод преобразования преобразует возможный объем данных, а вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1035">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-1036">Для непрерывного кодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1036">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1037">Приведенный ниже определяет число байтов, необходимое для кодирования трех символов из массива символов, выполняется кодирование символов и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1037">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-1038">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1038"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="2d2f5-1039">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1039">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1040">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1040"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-1041">Значение параметра <paramref name="charIndex" />, <paramref name="charCount" /> или <paramref name="byteIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1041"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="2d2f5-1042">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1042">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1043">Параметры <paramref name="charIndex" /> и <paramref name="charCount" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1043"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="2d2f5-1044">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1044">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1045">Значение параметра <paramref name="byteIndex" /> не является допустимым индексом в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1045"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d2f5-1046">Недостаточно емкости <paramref name="bytes" /> от <paramref name="byteIndex" /> до конца массива для размещения полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1046"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="2d2f5-1047">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1047">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-1048">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1048">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-1049">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1049"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2d2f5-1050">Строка, содержащая набор символов для кодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1050">The string containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="2d2f5-1051">Индекс первого кодируемого символа.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1051">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="2d2f5-1052">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1052">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="2d2f5-1053">Массив байтов, в который будет помещена результирующая последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1053">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="2d2f5-1054">Индекс, с которого начинается запись результирующей последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1054">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1055">При переопределении в производном классе кодирует набор символов из заданной строки в заданный массив байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1055">When overridden in a derived class, encodes a set of characters from the specified string into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1056">Фактическое число байтов, записанных в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1056">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1057">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.Encoding.GetBytes%2A> для хранения байтов, необходимо вызвать <xref:System.Text.Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1057">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1058">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1058">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1059"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно обеспечивает выделения меньше памяти, пока <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1059">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2d2f5-1060">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> , предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1060">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="2d2f5-1061"><xref:System.Text.Encoding.GetByteCount%2A> Метод определяет, сколько байт привести кодировании набора символов Юникода и <xref:System.Text.Encoding.GetBytes%2A> метод выполняет фактической кодировкой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1061">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="2d2f5-1062"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> метод, который обрабатывает несколько преобразований на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1062">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-1063">Несколько версий <xref:System.Text.Encoding.GetByteCount%2A> и <xref:System.Text.Encoding.GetBytes%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1063">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="2d2f5-1064">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1064">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-1065">Приложение может потребоваться закодировать множество входных символов в кодовую страницу и обрабатывать эти символы, с помощью нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1065">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="2d2f5-1066">В этом случае, возможно, необходимо сохранять состояние между вызовами с учетом состояния, которое сохраняется <xref:System.Text.Encoder> объект используется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1066">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="2d2f5-1067">(Например, последовательность символов, которая содержит пары символов-заместителей может заканчиваться старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1067">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="2d2f5-1068"><xref:System.Text.Encoder> Запомнит старший символ-заместитель, чтобы ее можно использовать совместно с младшим символом-заместителем в начале следующего вызова.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1068">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="2d2f5-1069"><xref:System.Text.Encoding> Невозможно использовать для сохранения состояния, поэтому символ будет отправляться <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1069"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="2d2f5-1070">Если приложение обрабатывает входные строки, следует использовать строковую версию <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1070">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="2d2f5-1071">Версия буфер символов Юникода <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно в несколько вызовов с помощью <xref:System.Text.Encoder> объекта или вставка в существующие буферы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1071">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="2d2f5-1072">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1072">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-1073">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1073">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-1074">В этом случае <xref:System.Text.Encoding.GetBytes%2A> версию, которая поддерживает массивов байтов является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1074">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-1075">Рассмотрите возможность использования <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1075">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="2d2f5-1076">Метод преобразования преобразует возможный объем данных, а вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1076">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-1077">Для непрерывного кодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1077">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1078">Следующий пример определяет число байтов, необходимых для кодирования строки или диапазона в строке, выполняется кодирование символов и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1078">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-1079">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1079"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="2d2f5-1080">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1080">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1081">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1081"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-1082">Значение параметра <paramref name="charIndex" />, <paramref name="charCount" /> или <paramref name="byteIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1082"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="2d2f5-1083">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1083">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1084">Параметры <paramref name="charIndex" /> и <paramref name="charCount" /> не указывают допустимый диапазон в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1084"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="2d2f5-1085">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1085">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1086">Значение параметра <paramref name="byteIndex" /> не является допустимым индексом в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1086"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d2f5-1087">Недостаточно емкости <paramref name="bytes" /> от <paramref name="byteIndex" /> до конца массива для размещения полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1087"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="2d2f5-1088">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1088">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-1089">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1089">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-1090">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1090"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1091">При переопределении в производном классе вычисляет количество символов, полученных при декодировании последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1091">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="2d2f5-1092">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1092">The byte array containing the sequence of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1093">При переопределении в производном классе вычисляет количество символов, полученных при декодировании всех байтов из заданного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1093">When overridden in a derived class, calculates the number of characters produced by decoding all the bytes in the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1094">Число символов, полученных при декодировании заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1094">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1095">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> для хранения полученных символов, следует использовать <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1095">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method.</span></span> <span data-ttu-id="2d2f5-1096">Чтобы вычислить максимальный размер массива, необходимо использовать <xref:System.Text.Encoding.GetMaxCharCount%28System.Int32%29> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1096">To calculate the maximum array size, you should use the <xref:System.Text.Encoding.GetMaxCharCount%28System.Int32%29> method.</span></span> <span data-ttu-id="2d2f5-1097"><xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> Метод обычно обеспечивает выделения меньше памяти, пока <xref:System.Text.Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1097">The <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2d2f5-1098"><xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> Метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> метод выполняет фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1098">The <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method determines how many characters result in decoding a sequence of bytes, and the  <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> method performs the actual decoding.</span></span> <span data-ttu-id="2d2f5-1099"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> метод, который обрабатывает несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1099">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-1100">Несколько версий <xref:System.Text.Encoding.GetCharCount%2A> и <xref:System.Text.Encoding.GetChars%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1100">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="2d2f5-1101">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1101">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-1102">Приложение может потребоваться декодировать множество входных байтов из кодовой страницы и обработать эти байты с использованием нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1102">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="2d2f5-1103">В этом случае, возможно, необходимо сохранять состояние между вызовами.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1103">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="2d2f5-1104">Если приложение обрабатывает строки, следует использовать <xref:System.Text.Encoding.GetString%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1104">If your app handles string outputs, you should use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="2d2f5-1105">Поскольку этот метод должен проверить длину строки и выделить буфер, она будет немного медленнее, но результирующий <xref:System.String> типа является предпочтительным.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1105">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="2d2f5-1106">Байтовая версия <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно с несколькими вызовами в больших буферов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1106">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="2d2f5-1107">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1107">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-1108">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1108">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-1109">В этом случае [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > версии, что поддержка выходных символов лучшим вариантом является буферов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1109">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-1110">Рассмотрите возможность использования <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1110">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="2d2f5-1111">Метод преобразования преобразует возможный объем данных и вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1111">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-1112">Для непрерывного декодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1112">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1113">В следующем примере кодирует строку в массив байтов и затем декодирует байты в массив символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1113">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-1114">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1114"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="2d2f5-1115">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1115">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-1116">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1116">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-1117">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1117"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(System::Byte* bytes, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="2d2f5-1118">Указатель на первый декодируемый байт.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1118">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="2d2f5-1119">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1119">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1120">При переопределении в производном классе вычисляет количество символов, полученных при декодировании последовательности байтов, начало которой задается указателем байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1120">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1121">Число символов, полученных при декодировании заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1121">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1122">Для вычисления массиве точный размер, <xref:System.Text.Encoding.GetChars%2A> требуется для хранения полученных символов, следует использовать <xref:System.Text.Encoding.GetCharCount%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1122">To calculate the exact array size that <xref:System.Text.Encoding.GetChars%2A> requires to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1123">Чтобы вычислить максимальный размер массива, используйте <xref:System.Text.Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1123">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1124"><xref:System.Text.Encoding.GetCharCount%2A> Метод обычно обеспечивает выделения меньше памяти, пока <xref:System.Text.Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1124">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2d2f5-1125"><xref:System.Text.Encoding.GetCharCount%2A> Метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.Encoding.GetChars%2A> метод выполняет фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1125">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="2d2f5-1126"><xref:System.Text.Encoding.GetChars%2A> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> метод, который обрабатывает несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1126">The <xref:System.Text.Encoding.GetChars%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-1127">Несколько версий <xref:System.Text.Encoding.GetCharCount%2A> и <xref:System.Text.Encoding.GetChars%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1127">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="2d2f5-1128">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1128">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-1129">Приложение может потребоваться декодировать множество входных байтов из кодовой страницы и обработать эти байты с использованием нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1129">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="2d2f5-1130">В этом случае, возможно, необходимо сохранять состояние между вызовами.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1130">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="2d2f5-1131">Если приложение обрабатывает строки выходных данных, рекомендуется использовать <xref:System.Text.Encoding.GetString%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1131">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="2d2f5-1132">Поскольку этот метод должен проверить длину строки и выделить буфер, она будет немного медленнее, но результирующий <xref:System.String> типа является предпочтительным.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1132">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="2d2f5-1133">Байтовая версия <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно с несколькими вызовами в больших буферов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1133">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="2d2f5-1134">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1134">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-1135">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1135">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-1136">В этом случае [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > версии, что поддержка выходных символов лучшим вариантом является буферов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1136">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-1137">Рассмотрите возможность использования <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1137">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="2d2f5-1138">Метод преобразования преобразует возможный объем данных и вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1138">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-1139">Для непрерывного декодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1139">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-1140">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1140"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-1141">Значение параметра <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1141"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="2d2f5-1142">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1142">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-1143">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1143">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-1144">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1144"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="2d2f5-1145">требуется полное доверие для непосредственно вызывающего метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1145">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="2d2f5-1146">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1146">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="2d2f5-1147">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1147">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="2d2f5-1148">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1148">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="2d2f5-1149">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1149">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1150">При переопределении в производном классе вычисляет количество символов, полученных при декодировании последовательности байтов из заданного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1150">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1151">Число символов, полученных при декодировании заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1151">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1152">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.Encoding.GetChars%2A> для хранения полученных символов, следует использовать <xref:System.Text.Encoding.GetCharCount%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1152">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1153">Чтобы вычислить максимальный размер массива, используйте <xref:System.Text.Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1153">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1154"><xref:System.Text.Encoding.GetCharCount%2A> Метод обычно обеспечивает выделения меньше памяти, пока <xref:System.Text.Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1154">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2d2f5-1155"><xref:System.Text.Encoding.GetCharCount%2A> Метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.Encoding.GetChars%2A> метод выполняет фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1155">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="2d2f5-1156"><xref:System.Text.Encoding.GetChars%2A> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> метод, который обрабатывает несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1156">The <xref:System.Text.Encoding.GetChars%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-1157">Несколько версий <xref:System.Text.Encoding.GetCharCount%2A> и <xref:System.Text.Encoding.GetChars%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1157">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="2d2f5-1158">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1158">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-1159">Приложение может потребоваться декодировать множество входных байтов из кодовой страницы и обработать эти байты с использованием нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1159">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="2d2f5-1160">В этом случае, возможно, необходимо сохранять состояние между вызовами.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1160">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="2d2f5-1161">Если приложение обрабатывает строки выходных данных, рекомендуется использовать <xref:System.Text.Encoding.GetString%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1161">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="2d2f5-1162">Поскольку этот метод должен проверить длину строки и выделить буфер, она будет немного медленнее, но результирующий <xref:System.String> типа является предпочтительным.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1162">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="2d2f5-1163">Байтовая версия <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно с несколькими вызовами в больших буферов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1163">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="2d2f5-1164">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1164">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-1165">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1165">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-1166">В этом случае [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > версии, что поддержка выходных символов лучшим вариантом является буферов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1166">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-1167">Рассмотрите возможность использования <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1167">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="2d2f5-1168">Метод преобразования преобразует возможный объем данных и вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1168">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-1169">Для непрерывного декодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1169">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1170">В следующем примере строка преобразуется из одной кодировки в другую.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1170">The following example converts a string from one encoding to another.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 <span data-ttu-id="2d2f5-1171">В следующем примере кодирует строку в массив байтов и затем Декодирует диапазон байтов в массив символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1171">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-1172">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1172"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-1173">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1173"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="2d2f5-1174">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1174">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1175">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1175"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="2d2f5-1176">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1176">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-1177">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1177">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-1178">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1178"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1179">При переопределении в производном классе декодирует последовательность байтов в набор символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1179">When overridden in a derived class, decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual char[] GetChars (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] GetChars(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte()) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;char&gt; ^ GetChars(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="2d2f5-1180">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1180">The byte array containing the sequence of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1181">При переопределении в производном классе декодирует все байты из указанного массива байтов в набор символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1181">When overridden in a derived class, decodes all the bytes in the specified byte array into a set of characters.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1182">Массив символов, содержащий результаты декодирования указанной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1182">A character array containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1183"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Получает символы из входной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1183"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="2d2f5-1184"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> из-за <xref:System.Text.Encoding> ожидает дискретных преобразования во время <xref:System.Text.Decoder> предназначена для нескольких проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1184"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-1185">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> , предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1185">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="2d2f5-1186">**Примечание** этот метод предназначен для работы с символами Юникода, а не на произвольный двоичных данных, таких как массивы байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1186">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="2d2f5-1187">Если вам нужно закодировать произвольные двоичные данные в текст, следует использовать такой протокол, как uuencode, который реализуется методами, такими как <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1187">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2d2f5-1188"><xref:System.Text.Encoding.GetCharCount%2A> Метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.Encoding.GetChars%2A> метод выполняет фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1188">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="2d2f5-1189"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> метод, который обрабатывает несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1189">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-1190">Несколько версий <xref:System.Text.Encoding.GetCharCount%2A> и <xref:System.Text.Encoding.GetChars%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1190">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="2d2f5-1191">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1191">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-1192">Приложение может потребоваться декодировать множество входных байтов из кодовой страницы и обработать эти байты с использованием нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1192">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="2d2f5-1193">В этом случае, возможно, необходимо сохранять состояние между вызовами, так как последовательности байтов могут быть прерваны, при обработке в пакетах.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1193">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="2d2f5-1194">(Например, часть последовательности shift ISO-2022 могут в конечном итоге один <xref:System.Text.Encoding.GetChars%2A> вызова и продолжения в начале следующего <xref:System.Text.Encoding.GetChars%2A> вызова.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1194">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="2d2f5-1195"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> вызывает этот резервный механизм для этих неполных последовательностей, но <xref:System.Text.Decoder> запоминает те последовательности для следующего вызова.)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1195"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="2d2f5-1196">Если приложение обрабатывает строки выходных данных, рекомендуется использовать <xref:System.Text.Encoding.GetString%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1196">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="2d2f5-1197">Поскольку этот метод должен проверить длину строки и выделить буфер, она будет немного медленнее, но результирующий <xref:System.String> типа является предпочтительным.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1197">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="2d2f5-1198">Байтовая версия <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно с несколькими вызовами в больших буферов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1198">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="2d2f5-1199">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1199">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-1200">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1200">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-1201">В этом случае [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > версии, что поддержка выходных символов лучшим вариантом является буферов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1201">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-1202">Рассмотрите возможность использования <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1202">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="2d2f5-1203">Метод преобразования преобразует возможный объем данных и вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1203">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-1204">Для непрерывного декодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1204">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1205">В следующем примере кодирует строку в массив байтов и затем декодирует байты в массив символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1205">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-1206">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1206"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="2d2f5-1207">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1207">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-1208">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1208">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-1209">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1209"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual char[] GetChars (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] GetChars(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte(), index As Integer, count As Integer) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;char&gt; ^ GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="2d2f5-1210">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1210">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="2d2f5-1211">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1211">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="2d2f5-1212">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1212">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1213">При переопределении в производном классе декодирует последовательность байтов из указанного массива байтов в набор символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1213">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a set of characters.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1214">Массив символов, содержащий результаты декодирования указанной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1214">A character array containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1215"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Получает символы из входной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1215"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="2d2f5-1216"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> из-за <xref:System.Text.Encoding> ожидает дискретных преобразования во время <xref:System.Text.Decoder> предназначена для нескольких проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1216"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-1217">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> , предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1217">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="2d2f5-1218">**Примечание** этот метод предназначен для работы с символами Юникода, а не на произвольный двоичных данных, таких как массивы байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1218">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="2d2f5-1219">Если вам нужно закодировать произвольные двоичные данные в текст, следует использовать такой протокол, как uuencode, который реализуется методами, такими как <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1219">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2d2f5-1220"><xref:System.Text.Encoding.GetCharCount%2A> Метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.Encoding.GetChars%2A> метод выполняет фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1220">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="2d2f5-1221"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> метод, который обрабатывает несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1221">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-1222">Несколько версий <xref:System.Text.Encoding.GetCharCount%2A> и <xref:System.Text.Encoding.GetChars%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1222">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="2d2f5-1223">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1223">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-1224">Приложение может потребоваться декодировать множество входных байтов из кодовой страницы и обработать эти байты с использованием нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1224">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="2d2f5-1225">В этом случае, возможно, необходимо сохранять состояние между вызовами, так как последовательности байтов могут быть прерваны, при обработке в пакетах.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1225">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="2d2f5-1226">(Например, часть последовательности shift ISO-2022 могут в конечном итоге один <xref:System.Text.Encoding.GetChars%2A> вызова и продолжения в начале следующего <xref:System.Text.Encoding.GetChars%2A> вызова.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1226">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="2d2f5-1227"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> вызывает этот резервный механизм для этих неполных последовательностей, но <xref:System.Text.Decoder> запоминает те последовательности для следующего вызова.)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1227"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="2d2f5-1228">Если приложение обрабатывает строки выходных данных, рекомендуется использовать <xref:System.Text.Encoding.GetString%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1228">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="2d2f5-1229">Поскольку этот метод должен проверить длину строки и выделить буфер, она будет немного медленнее, но результирующий <xref:System.String> типа является предпочтительным.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1229">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="2d2f5-1230">Байтовая версия <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно с несколькими вызовами в больших буферов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1230">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="2d2f5-1231">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1231">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-1232">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1232">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-1233">В этом случае [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > версии, что поддержка выходных символов лучшим вариантом является буферов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1233">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-1234">Рассмотрите возможность использования <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1234">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="2d2f5-1235">Метод преобразования преобразует возможный объем данных и вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1235">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-1236">Для непрерывного декодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1236">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1237">В следующем примере кодирует строку в массив байтов и затем Декодирует диапазон байтов в массив символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1237">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-1238">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1238"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-1239">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1239"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="2d2f5-1240">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1240">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1241">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1241"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="2d2f5-1242">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1242">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-1243">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1243">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-1244">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1244"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="2d2f5-1245">Указатель на первый декодируемый байт.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1245">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="2d2f5-1246">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1246">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="2d2f5-1247">Указатель на положение, с которого начинается запись результирующего набора символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1247">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="2d2f5-1248">Наибольшее количество символов для записи.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1248">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1249">При переопределении в производном классе декодирует последовательность байтов, которая начинается с заданного указателя байта, в набор символов, которые сохраняются, начиная с заданного указателя символа.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1249">When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1250">Фактическое число символов, записанных в местоположение, которое задано параметром <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1250">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1251">Для вычисления массиве точный размер, <xref:System.Text.Encoding.GetChars%2A> требуется для хранения полученных символов, следует использовать <xref:System.Text.Encoding.GetCharCount%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1251">To calculate the exact array size that <xref:System.Text.Encoding.GetChars%2A> requires to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1252">Чтобы вычислить максимальный размер массива, используйте <xref:System.Text.Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1252">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1253"><xref:System.Text.Encoding.GetCharCount%2A> Метод обычно обеспечивает выделения меньше памяти, пока <xref:System.Text.Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1253">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2d2f5-1254"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Получает символы из входной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1254"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="2d2f5-1255"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> из-за <xref:System.Text.Encoding> ожидает дискретных преобразования во время <xref:System.Text.Decoder> предназначена для нескольких проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1255"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-1256">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> объект, предоставляемый <xref:System.Text.Encoding.GetDecoder%2A>настроек или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1256">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.Encoding.GetDecoder%2A> or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="2d2f5-1257">**Примечание** этот метод предназначен для работы с символами Юникода, а не на произвольный двоичных данных, таких как массивы байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1257">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="2d2f5-1258">Если вам нужно закодировать произвольные двоичные данные в текст, следует использовать такой протокол, как uuencode, который реализуется методами, такими как <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1258">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2d2f5-1259"><xref:System.Text.Encoding.GetCharCount%2A> Метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.Encoding.GetChars%2A> метод выполняет фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1259">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="2d2f5-1260"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> метод, который обрабатывает несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1260">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-1261">Несколько версий <xref:System.Text.Encoding.GetCharCount%2A> и <xref:System.Text.Encoding.GetChars%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1261">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="2d2f5-1262">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1262">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-1263">Приложение может потребоваться декодировать множество входных байтов из кодовой страницы и обработать эти байты с использованием нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1263">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="2d2f5-1264">В этом случае, возможно, необходимо сохранять состояние между вызовами, так как последовательности байтов могут быть прерваны, при обработке в пакетах.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1264">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="2d2f5-1265">(Например, часть последовательности shift ISO-2022 могут в конечном итоге один <xref:System.Text.Encoding.GetChars%2A> вызова и продолжения в начале следующего <xref:System.Text.Encoding.GetChars%2A> вызова.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1265">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="2d2f5-1266"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> вызывает этот резервный механизм для этих неполных последовательностей, но <xref:System.Text.Decoder> запоминает те последовательности для следующего вызова.)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1266"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="2d2f5-1267">Если приложение обрабатывает строку выходов, <xref:System.Text.Encoding.GetString%2A> рекомендуется использовать метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1267">If your app handles string outputs, the <xref:System.Text.Encoding.GetString%2A> method is recommended.</span></span> <span data-ttu-id="2d2f5-1268">Поскольку этот метод должен проверить длину строки и выделить буфер, она будет немного медленнее, но результирующий <xref:System.String> типа является предпочтительным.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1268">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="2d2f5-1269">Байтовая версия <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно с несколькими вызовами в больших буферов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1269">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="2d2f5-1270">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1270">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-1271">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1271">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-1272">В этом случае [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > версии, что поддержка выходных символов лучшим вариантом является буферов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1272">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-1273">Рассмотрите возможность использования <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1273">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="2d2f5-1274">Метод преобразования преобразует возможный объем данных и вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1274">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-1275">Для непрерывного декодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1275">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-1276">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1276"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="2d2f5-1277">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1277">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1278">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1278"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-1279">Значение параметра <paramref name="byteCount" /> или <paramref name="charCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1279"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d2f5-1280"><paramref name="charCount" /> меньше результирующего числа символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1280"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="2d2f5-1281">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1281">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-1282">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1282">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-1283">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1283"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="2d2f5-1284">требуется полное доверие для непосредственно вызывающего метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1284">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="2d2f5-1285">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1285">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public abstract int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="2d2f5-1286">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1286">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="2d2f5-1287">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1287">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="2d2f5-1288">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1288">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="2d2f5-1289">Массив символов, в который будет помещен результирующий набор символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1289">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="2d2f5-1290">Индекс, с которого начинается запись результирующего набора символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1290">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1291">При переопределении в производном классе декодирует последовательность байтов из указанного массива байтов в указанный массив символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1291">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1292">Фактическое число символов, записанных в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1292">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1293">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.Encoding.GetChars%2A> для хранения полученных символов, следует использовать <xref:System.Text.Encoding.GetCharCount%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1293">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1294">Чтобы вычислить максимальный размер массива, используйте <xref:System.Text.Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1294">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1295"><xref:System.Text.Encoding.GetCharCount%2A> Метод обычно обеспечивает выделения меньше памяти, пока <xref:System.Text.Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1295">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2d2f5-1296">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > возвращает символы из входной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1296">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="2d2f5-1297">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> из-за <xref:System.Text.Encoding> ожидает дискретных преобразования во время <xref:System.Text.Decoder> предназначен для несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1297">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-1298">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> , предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1298">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="2d2f5-1299">**Примечание** этот метод предназначен для работы с символами Юникода, а не на произвольный двоичных данных, таких как массивы байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1299">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="2d2f5-1300">Если вам нужно закодировать произвольные двоичные данные в текст, следует использовать такой протокол, как uuencode, который реализуется методами, такими как <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1300">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2d2f5-1301"><xref:System.Text.Encoding.GetCharCount%2A> Метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.Encoding.GetChars%2A> метод выполняет фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1301">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="2d2f5-1302"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Метод ожидает дискретных преобразования отличается от <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> метод, который обрабатывает несколько проходов на один входящий поток.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1302">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="2d2f5-1303">Несколько версий <xref:System.Text.Encoding.GetCharCount%2A> и <xref:System.Text.Encoding.GetChars%2A> поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1303">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="2d2f5-1304">Ниже приведены некоторые вопросы программирования для использования этих методов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1304">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="2d2f5-1305">Приложение может потребоваться декодировать множество входных байтов из кодовой страницы и обработать эти байты с использованием нескольких вызовов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1305">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="2d2f5-1306">В этом случае, возможно, необходимо сохранять состояние между вызовами, так как последовательности байтов могут быть прерваны, при обработке в пакетах.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1306">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="2d2f5-1307">(Например, часть последовательности shift ISO-2022 могут в конечном итоге один [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A > вызова и продолжения в начале следующего [\], Int32, Int32, Char\<перекрестные ссылки на модель : System.Text.Encoding.GetChars%2A > вызова.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1307">(For example, part of an ISO-2022 shift sequence may end one [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="2d2f5-1308">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > вызовет этот резервный механизм для этих неполных последовательности, но <xref:System.Text.Decoder> запоминает те последовательности для следующего вызова.)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1308">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="2d2f5-1309">Если приложение обрабатывает строку выходов, <xref:System.Text.Encoding.GetString%2A> рекомендуется использовать метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1309">If your app handles string outputs, the <xref:System.Text.Encoding.GetString%2A> method is recommended.</span></span> <span data-ttu-id="2d2f5-1310">Поскольку этот метод должен проверить длину строки и выделить буфер, она будет немного медленнее, но результирующий <xref:System.String> типа является предпочтительным.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1310">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="2d2f5-1311">Байтовая версия <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> позволяет использовать некоторые быстрые способы, особенно с несколькими вызовами в больших буферов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1311">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="2d2f5-1312">Иметь в виду, что эта версия метода небезопасна, поскольку требуется указатели.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1312">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="2d2f5-1313">Если приложение необходимо преобразовать большой объем данных, его следует использовать в выходной буфер.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1313">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="2d2f5-1314">В этом случае [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > версии, что поддержка выходных символов лучшим вариантом является буферов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1314">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="2d2f5-1315">Рассмотрите возможность использования <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> вместо метода <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1315">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="2d2f5-1316">Метод преобразования преобразует возможный объем данных и вызывает исключение, если выходной буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1316">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="2d2f5-1317">Для непрерывного декодирования потока, этот метод часто является лучшим вариантом.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1317">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1318">В следующем примере строка преобразуется из одной кодировки в другую.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1318">The following example converts a string from one encoding to another.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 <span data-ttu-id="2d2f5-1319">В следующем примере кодирует строку в массив байтов и затем Декодирует диапазон байтов в массив символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1319">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-1320">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1320"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="2d2f5-1321">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1321">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1322">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1322"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-1323">Значение параметра <paramref name="byteIndex" />, <paramref name="byteCount" /> или <paramref name="charIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1323"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="2d2f5-1324">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1324">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1325">Параметры <paramref name="byteindex" /> и <paramref name="byteCount" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1325"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
 <span data-ttu-id="2d2f5-1326">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1326">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1327">Значение параметра <paramref name="charIndex" /> не является допустимым индексом в <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1327"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d2f5-1328">Недостаточно емкости <paramref name="chars" /> от <paramref name="charIndex" /> до конца массива для размещения полученных символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1328"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="2d2f5-1329">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1329">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-1330">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1330">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-1331">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1331"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public virtual System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Decoder ^ GetDecoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d2f5-1332">При переопределении в производном классе получает декодер, который преобразует последовательность байтов в последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1332">When overridden in a derived class, obtains a decoder that converts an encoded sequence of bytes into a sequence of characters.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1333">Объект <see cref="T:System.Text.Decoder" />, преобразующий закодированную последовательность байтов в последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1333">A <see cref="T:System.Text.Decoder" /> that converts an encoded sequence of bytes into a sequence of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1334"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> Метод преобразует последовательные блоки байтов в последовательные блоки символов в так же, как <xref:System.Text.Encoding.GetChars%2A> метода этого класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1334">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="2d2f5-1335">Однако <xref:System.Text.Decoder> хранит сведения о состоянии между вызовами, что позволяет правильно декодировать последовательности байтов, охватывающие блоки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1335">However, a <xref:System.Text.Decoder> maintains state information between calls so it correctly decodes byte sequences that span blocks.</span></span> <span data-ttu-id="2d2f5-1336"><xref:System.Text.Decoder> Также сохраняет замыкающие байты в конце блоков данных и использует конечные байты при следующей операции декодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1336">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="2d2f5-1337">Таким образом <xref:System.Text.Encoding.GetDecoder%2A> и <xref:System.Text.Encoding.GetEncoder%2A> полезны для передачи по сети и операции с файлами, так как эти операции часто работают с блоками данных, а не полные данные потока.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1337">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2d2f5-1338">Реализация по умолчанию возвращает <see cref="T:System.Text.Decoder" /> , который вызывает <see cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" /> и <see cref="M:System.Text.Encoding.GetChars(System.Byte[])" /> методы текущего <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1338">The default implementation returns a <see cref="T:System.Text.Decoder" /> that calls the <see cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" /> and <see cref="M:System.Text.Encoding.GetChars(System.Byte[])" /> methods of the current <see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="2d2f5-1339">Необходимо переопределить этот метод для возврата <see cref="T:System.Text.Decoder" /> , сохраняет свое состояние между вызовами.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1339">You must override this method to return a <see cref="T:System.Text.Decoder" /> that maintains its state between calls.</span></span></para>
        </block>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoder ^ GetEncoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d2f5-1340">При переопределении в производном классе получает кодировщик, который преобразует последовательность символов Юникода в закодированную последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1340">When overridden in a derived class, obtains an encoder that converts a sequence of Unicode characters into an encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1341">Объект <see cref="T:System.Text.Encoder" />, преобразующий последовательность символов Юникода в закодированную последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1341">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into an encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1342"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> Метод преобразует последовательные блоки символов в последовательные блоки байтов таким способом, аналогичным <xref:System.Text.Encoding.GetBytes%2A> метода этого класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1342">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.Encoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="2d2f5-1343">Однако <xref:System.Text.Encoder> хранит сведения о состоянии между вызовами, что позволяет правильно кодировать последовательности символов, охватывающие блоки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1343">However, a <xref:System.Text.Encoder> maintains state information between calls so it correctly encodes character sequences that span blocks.</span></span> <span data-ttu-id="2d2f5-1344"><xref:System.Text.Encoder> Также сохраняет замыкающие символы в конце блоков данных и использует замыкающие символы при выполнении следующей операции кодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1344">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="2d2f5-1345">Например может оказаться, что блок данных с несоответствиями старшим символом-заместителем и сопоставления младший символ-заместитель может находиться в следующем блоке данных.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1345">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="2d2f5-1346">Таким образом <xref:System.Text.Encoding.GetDecoder%2A> и <xref:System.Text.Encoding.GetEncoder%2A> полезны для передачи по сети и операции с файлами, так как эти операции часто работают с блоками данных, а не полные данные потока.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1346">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2d2f5-1347">Реализация по умолчанию возвращает <see cref="T:System.Text.Encoder" /> , который вызывает <see cref="M:System.Text.Encoding.GetByteCount(System.Char[])" /> и <see cref="M:System.Text.Encoding.GetBytes(System.Char[])" /> методы текущего <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1347">The default implementation returns a <see cref="T:System.Text.Encoder" /> that calls the <see cref="M:System.Text.Encoding.GetByteCount(System.Char[])" /> and <see cref="M:System.Text.Encoding.GetBytes(System.Char[])" /> methods of the current <see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="2d2f5-1348">Необходимо переопределить этот метод для возврата <see cref="T:System.Text.Encoder" /> , сохраняет свое состояние между вызовами.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1348">You must override this method to return a <see cref="T:System.Text.Encoder" /> that maintains its state between calls.</span></span></para>
        </block>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1349">Возвращает кодировку для указанной кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1349">Returns an encoding for the specified code page.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="2d2f5-1350">Идентификатор кодовой страницы предпочтительной кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1350">The code page identifier of the preferred encoding.</span></span> <span data-ttu-id="2d2f5-1351">Возможные значения перечислены в столбце кодовой страницы таблицы, которая отображается в теме класса <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1351">Possible values are listed in the Code Page column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span>  
  
 <span data-ttu-id="2d2f5-1352">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1352">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1353">0 (ноль), если требуется использовать кодировку по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1353">0 (zero), to use the default encoding.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1354">Возвращает кодировку, связанную с указанным идентификатором кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1354">Returns the encoding associated with the specified code page identifier.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1355">Кодирование, связанное с заданной страницей кода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1355">The encoding that is associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1356">Резервному обработчику зависит тип кодировки `codepage`.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1356">The fallback handler depends on the encoding type of `codepage`.</span></span> <span data-ttu-id="2d2f5-1357">Если `codepage` код страницы или двухбайтовый символ кодировка (DBCS), используется стратегия наилучшего соответствия резервному обработчику.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1357">If `codepage` is a code page or double-byte character set (DBCS) encoding, a best-fit fallback handler is used.</span></span> <span data-ttu-id="2d2f5-1358">В противном случае используется резервному обработчику замены.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1358">Otherwise, a replacement fallback handler is used.</span></span> <span data-ttu-id="2d2f5-1359">Эти обработчики резервной может не подойти для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1359">These fallback handlers may not be appropriate for your app.</span></span> <span data-ttu-id="2d2f5-1360">Чтобы указать резервному обработчику, используется кодировка, заданная `codepage`, можно вызвать <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1360">To specify the fallback handler used by the encoding specified by `codepage`, you can call the <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> overload.</span></span>  
  
 <span data-ttu-id="2d2f5-1361"><xref:System.Text.Encoding.GetEncoding%2A> Метод зависит от базовой платформы для поддержки большинства кодовых страниц.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1361">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="2d2f5-1362">Тем не менее платформа .NET Framework поддерживает изначально некоторых кодировок.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1362">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="2d2f5-1363">Список кодовых страниц см. в разделе <xref:System.Text.Encoding> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1363">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="2d2f5-1364">Кроме того, можно вызвать метод <xref:System.Text.Encoding.GetEncodings%2A> метод, чтобы получить массив <xref:System.Text.EncodingInfo> объектов, содержащих сведения о все кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1364">Alternatively, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all encodings.</span></span>  
  
 <span data-ttu-id="2d2f5-1365">Помимо кодировки, которые поддерживаются на определенной платформе версии платформы .NET Framework по своей природе <xref:System.Text.Encoding.GetEncoding%2A> метод возвращает все дополнительные кодировки, которые становятся доступными, зарегистрировав <xref:System.Text.EncodingProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1365">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="2d2f5-1366">Если же кодировку был зарегистрирован с помощью нескольких <xref:System.Text.EncodingProvider> объектов, этот метод возвращает последнее из них зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1366">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  

<span data-ttu-id="2d2f5-1367">Можно также указать значение 0 для `codepage` аргумент.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1367">You can also supply a value of 0 for the `codepage` argument.</span></span> <span data-ttu-id="2d2f5-1368">Точное поведение зависит от ли кодировкам сделаны доступными посредством регистрации <xref:System.Text.EncodingProvider> объекта:</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1368">Its precise behavior depends on whether any encodings have been made available by registering an <xref:System.Text.EncodingProvider> object:</span></span>

- <span data-ttu-id="2d2f5-1369">Если один или несколько поставщиков кодировки зарегистрировано, возвращает кодировку последнего зарегистрированного поставщика, который выбрал вернуть кодировку, когда <xref:System.Text.Encoding.GetEncoding%2A> методу передается `codepage` аргументом 0.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1369">If one or more encoding providers have been registered, it returns the encoding of the last registered provider that has chosen to return a encoding when the <xref:System.Text.Encoding.GetEncoding%2A> method is passed a `codepage` argument of 0.</span></span>     

- <span data-ttu-id="2d2f5-1370">На платформе .NET Framework, если кодировка не поставщик был зарегистрирован, если <xref:System.Text.CodePagesEncodingProvider> зарегистрированный поставщик кодировки, или если отсутствует зарегистрированный поставщик кодировки обрабатывает `codepage` значение 0, возвращается текущая кодовая страница операционной системы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1370">On the .NET Framework, if no encoding provider has been registered, if the <xref:System.Text.CodePagesEncodingProvider> is the registered encoding provider, or if no registered encoding provider handles a `codepage` value of 0, it returns the operating system's active code page.</span></span> <span data-ttu-id="2d2f5-1371">Чтобы определить активную кодовую страницу в системах Windows, вызовите Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) функции из платформы .NET Framework, на рабочем столе Windows.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1371">To determine the active code page on Windows systems, call the Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) function from the .NET Framework on the Windows desktop.</span></span>

- <span data-ttu-id="2d2f5-1372">На основе .NET Core, если не был зарегистрирован поставщик кодировки, или если отсутствует зарегистрированный поставщик кодировки обрабатывает `codepage` значение 0, возвращается <xref:System.Text.UTF8Encoding>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1372">On .NET Core, if no encoding provider has been registered or if no registered encoding provider handles a `codepage` value of 0, it returns the <xref:System.Text.UTF8Encoding>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="2d2f5-1373">Некоторые неподдерживаемые кодовые страницы Причина <xref:System.ArgumentException> исключение, в то время как другие вызвать <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1373">Some unsupported code pages cause an <xref:System.ArgumentException> to be thrown, whereas others cause a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="2d2f5-1374">Таким образом, код должен перехватывать все исключения, приведенные в раздел "исключения".</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1374">Therefore, your code must catch all exceptions indicated in the Exceptions section.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d2f5-1375">Кодовые страницы ANSI могут быть разными на разных компьютерах и можно изменить на одном компьютере, что приведет к повреждению данных.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1375">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="2d2f5-1376">По этой причине, если текущая кодовая страница является кодовой страницей ANSI, кодирования и декодирования данных, используя кодовую страницу по умолчанию, возвращаемый методом `Encoding.GetEncoding(0)` не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1376">For this reason, if the active code page is an ANSI code page, encoding and decoding data using the default code page returned by `Encoding.GetEncoding(0)` is not recommended.</span></span> <span data-ttu-id="2d2f5-1377">Для получения согласованных результатов следует использовать кодировку Юникод, например UTF-8 (кодовая страница 65001) или UTF-16, вместо конкретной кодовой странице.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1377">For the most consistent results, you should use a Unicode encoding, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
  
 <span data-ttu-id="2d2f5-1378"><xref:System.Text.Encoding.GetEncoding%2A> Возвращает кэшированный экземпляр с параметрами по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1378"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="2d2f5-1379">Для получения экземпляра с различными параметрами следует использовать конструкторы производных классов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1379">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="2d2f5-1380">Например <xref:System.Text.UTF32Encoding> класс предоставляет конструктор, который дает возможность включить обнаружение ошибок.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1380">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  

   
  
## Examples  
 <span data-ttu-id="2d2f5-1381">Следующий пример возвращает два экземпляра одной кодировки (один по кодовой странице), а другой — по имени и проверки их равенства.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1381">The following example gets two instances of the same encoding (one by code page and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-1382">Параметр <paramref name="codepage" /> меньше нуля или больше 65 535.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1382"><paramref name="codepage" /> is less than zero or greater than 65535.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d2f5-1383"><paramref name="codepage" /> не поддерживается используемой платформой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1383"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d2f5-1384"><paramref name="codepage" /> не поддерживается используемой платформой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1384"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2d2f5-1385">Имя кодовой страницы предпочтительной кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1385">The code page name of the preferred encoding.</span></span> <span data-ttu-id="2d2f5-1386">Любое значение, возвращаемое свойством <see cref="P:System.Text.Encoding.WebName" />, является допустимым.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1386">Any value returned by the <see cref="P:System.Text.Encoding.WebName" /> property is valid.</span></span> <span data-ttu-id="2d2f5-1387">Возможные значения перечислены в столбце "Имя" таблицы, отображаемой в разделе класса <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1387">Possible values are listed in the Name column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1388">Возвращает кодировку, связанную с указанным именем кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1388">Returns the encoding associated with the specified code page name.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1389">Кодировка, связанная с указанной кодовой страницей.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1389">The encoding  associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1390">Резервному обработчику зависит тип кодировки `name`.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1390">The fallback handler depends on the encoding type of `name`.</span></span> <span data-ttu-id="2d2f5-1391">Если `name` код страницы или двухбайтовый символ кодировка (DBCS), используется стратегия наилучшего соответствия резервному обработчику.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1391">If `name` is a code page or double-byte character set (DBCS) encoding, a best-fit fallback handler is used.</span></span> <span data-ttu-id="2d2f5-1392">В противном случае используется резервному обработчику замены.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1392">Otherwise, a replacement fallback handler is used.</span></span> <span data-ttu-id="2d2f5-1393">Эти обработчики резервной может не подойти для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1393">These fallback handlers may not be appropriate for your app.</span></span> <span data-ttu-id="2d2f5-1394">Чтобы указать резервному обработчику, используется кодировка, заданная `name`, можно вызвать <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1394">To specify the fallback handler used by the encoding specified by `name`, you can call the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> overload.</span></span>  
  
 <span data-ttu-id="2d2f5-1395"><xref:System.Text.Encoding.GetEncoding%2A> Метод зависит от базовой платформы для поддержки большинства кодовых страниц.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1395">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="2d2f5-1396">Тем не менее платформа .NET Framework поддерживает изначально некоторых кодировок.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1396">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="2d2f5-1397">Список кодовых страниц см. в разделе <xref:System.Text.Encoding> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1397">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="2d2f5-1398">Кроме того, можно вызвать метод <xref:System.Text.Encoding.GetEncodings%2A> метод, чтобы получить массив <xref:System.Text.EncodingInfo> объектов, содержащих сведения о все кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1398">Alternatively, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all encodings.</span></span> 
  
 <span data-ttu-id="2d2f5-1399">Помимо кодировки, которые поддерживаются на определенной платформе версии платформы .NET Framework по своей природе <xref:System.Text.Encoding.GetEncoding%2A> метод возвращает все дополнительные кодировки, которые становятся доступными, зарегистрировав <xref:System.Text.EncodingProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1399">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="2d2f5-1400">Если же кодировку был зарегистрирован с помощью нескольких <xref:System.Text.EncodingProvider> объектов, этот метод возвращает последнее из них зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1400">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  
   
> [!NOTE]
>  <span data-ttu-id="2d2f5-1401">Кодовые страницы ANSI могут быть разными на разных компьютерах, или могут быть изменены для одного компьютера, что приведет к повреждению данных.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1401">The ANSI code pages can be different on different computers, or can be changed for a single computer, leading to data corruption.</span></span> <span data-ttu-id="2d2f5-1402">Для получения согласованных результатов следует использовать Юникод, например UTF-8 (кодовая страница 65001) или UTF-16, вместо конкретной кодовой странице.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1402">For the most consistent results, you should use Unicode, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
 
  
 <span data-ttu-id="2d2f5-1403"><xref:System.Text.Encoding.GetEncoding%2A> Возвращает кэшированный экземпляр с параметрами по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1403"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="2d2f5-1404">Для получения экземпляра с различными параметрами следует использовать конструкторы производных классов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1404">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="2d2f5-1405">Например <xref:System.Text.UTF32Encoding> класс предоставляет конструктор, который дает возможность включить обнаружение ошибок.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1405">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
## Examples  
 <span data-ttu-id="2d2f5-1406">Следующий пример возвращает два экземпляра одной кодировки (один по кодовой странице), а другой — по имени и проверки их равенства.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1406">The following example gets two instances of the same encoding (one by code page and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d2f5-1407"><paramref name="name" /> не является допустимым именем кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1407"><paramref name="name" /> is not a valid code page name.</span></span>  
  
 <span data-ttu-id="2d2f5-1408">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1408">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1409">Кодовая страница, указанная с помощью параметра <paramref name="name" />, не поддерживается используемой платформой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1409">The code page indicated by <paramref name="name" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(int codepage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="2d2f5-1410">Идентификатор кодовой страницы предпочтительной кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1410">The code page identifier of the preferred encoding.</span></span> <span data-ttu-id="2d2f5-1411">Возможные значения перечислены в столбце кодовой страницы таблицы, которая отображается в теме класса <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1411">Possible values are listed in the Code Page column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span>  
  
 <span data-ttu-id="2d2f5-1412">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1412">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1413">0 (ноль), если требуется использовать кодировку по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1413">0 (zero), to use the default encoding.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="2d2f5-1414">Объект, предоставляющий процедуру обработки ошибок, когда символ не может быть закодирован с использованием текущей кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1414">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="2d2f5-1415">Объект, предоставляющий процедуру обработки ошибок, когда последовательность байтов не может быть декодирована с использованием текущей кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1415">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1416">Возвращает кодировку, связанную с указанным идентификатором кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1416">Returns the encoding associated with the specified code page identifier.</span></span> <span data-ttu-id="2d2f5-1417">С помощью параметров задается обработчик ошибок для символов, которые не удается закодировать, и последовательностей байтов, которые не удается декодировать.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1417">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1418">Кодирование, связанное с заданной страницей кода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1418">The encoding that is associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2d2f5-1419">Некоторые страницы неподдерживаемого кода вызвать исключение <xref:System.ArgumentException> исключение, в то время как другие вызвать <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1419">Some unsupported code pages cause the exception <xref:System.ArgumentException> to be thrown, whereas others cause <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="2d2f5-1420">Таким образом, код должен перехватывать все исключения, приведенные в раздел "исключения".</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1420">Therefore, your code must catch all exceptions indicated in the Exceptions section.</span></span>  
  
 <span data-ttu-id="2d2f5-1421"><xref:System.Text.Encoding.GetEncoding%2A> Метод зависит от базовой платформы для поддержки большинства кодовых страниц.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1421">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="2d2f5-1422">Тем не менее платформа .NET Framework поддерживает изначально некоторых кодировок.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1422">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="2d2f5-1423">Список кодовых страниц см. в разделе <xref:System.Text.Encoding> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1423">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="2d2f5-1424">Можно вызвать <xref:System.Text.Encoding.GetEncodings%2A> метод в полной версии .NET Framework, на рабочем столе Windows, чтобы получить список всех кодировок.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1424">You can call the <xref:System.Text.Encoding.GetEncodings%2A> method in the full .NET Framework on the Windows desktop to get a list of all encodings.</span></span>   
  
 <span data-ttu-id="2d2f5-1425">Помимо кодировки, которые поддерживаются на определенной платформе версии платформы .NET Framework по своей природе <xref:System.Text.Encoding.GetEncoding%2A> метод возвращает все дополнительные кодировки, которые становятся доступными, зарегистрировав <xref:System.Text.EncodingProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1425">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span>  <span data-ttu-id="2d2f5-1426">Если же кодировку был зарегистрирован с помощью нескольких <xref:System.Text.EncodingProvider> объектов, этот метод возвращает последнее из них зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1426">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  

<span data-ttu-id="2d2f5-1427">Можно также указать значение 0 для `codepage` аргумент.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1427">You can also supply a value of 0 for the `codepage` argument.</span></span> <span data-ttu-id="2d2f5-1428">Точное поведение зависит от ли кодировкам сделаны доступными посредством регистрации <xref:System.Text.EncodingProvider> объекта:</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1428">Its precise behavior depends on whether any encodings have been made available by registering an <xref:System.Text.EncodingProvider> object:</span></span>

- <span data-ttu-id="2d2f5-1429">Если один или несколько поставщиков кодировки зарегистрировано, возвращает кодировку последнего зарегистрированного поставщика, который выбрал вернуть кодировку, когда <xref:System.Text.Encoding.GetEncoding%2A> методу передается `codepage` аргументом 0.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1429">If one or more encoding providers have been registered, it returns the encoding of the last registered provider that has chosen to return a encoding when the <xref:System.Text.Encoding.GetEncoding%2A> method is passed a `codepage` argument of 0.</span></span>     

- <span data-ttu-id="2d2f5-1430">На платформе .NET Framework, если кодировка не поставщик был зарегистрирован, если <xref:System.Text.CodePagesEncodingProvider> зарегистрированный поставщик кодировки, или если отсутствует зарегистрированный поставщик кодировки обрабатывает `codepage` значение 0, возвращается текущая кодовая страница.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1430">On the .NET Framework, if no encoding provider has been registered, if the <xref:System.Text.CodePagesEncodingProvider> is the registered encoding provider, or if no registered encoding provider handles a `codepage` value of 0, it returns the active code page.</span></span>

- <span data-ttu-id="2d2f5-1431">На основе .NET Core, если не был зарегистрирован поставщик кодировки, или если отсутствует зарегистрированный поставщик кодировки обрабатывает `codepage` значение 0, возвращает <xref:System.Text.UTF8Encoding> кодировку.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1431">On .NET Core, if no encoding provider has been registered or if no registered encoding provider handles a `codepage` value of 0, it returns the <xref:System.Text.UTF8Encoding> encoding.</span></span>

> [!NOTE]
>  <span data-ttu-id="2d2f5-1432">Кодовые страницы ANSI могут быть разными на разных компьютерах и можно изменить на одном компьютере, что приведет к повреждению данных.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1432">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="2d2f5-1433">По этой причине, если текущая кодовая страница является кодовой страницей ANSI, кодирования и декодирования данных, используя кодовую страницу по умолчанию, возвращаемый методом `Encoding.GetEncoding(0)` не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1433">For this reason, if the active code page is an ANSI code page, encoding and decoding data using the default code page returned by `Encoding.GetEncoding(0)` is not recommended.</span></span> <span data-ttu-id="2d2f5-1434">Для получения согласованных результатов следует использовать Юникод, например UTF-8 (кодовая страница 65001) или UTF-16, вместо конкретной кодовой странице.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1434">For the most consistent results, you should use Unicode, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span> 
  
 <span data-ttu-id="2d2f5-1435">Чтобы получить кодировку, связанную с текущая кодовая страница, можно указать значение 0 для `codepage` аргумент или, если код выполняется в полной версии .NET Framework на рабочем столе Windows, извлечь значение <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1435">To get the encoding associated with the active code page, you can either supply a value of 0 for the `codepage` argument or, if your code is running on the full .NET Framework on the Windows desktop, retrieve the value of the <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2d2f5-1436">Чтобы определить текущий текущая кодовая страница, вызовите Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) функции из платформы .NET Framework, на рабочем столе Windows.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1436">To determine the current active code page, call the Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) function from the .NET Framework on the Windows desktop.</span></span>  
  
 <span data-ttu-id="2d2f5-1437"><xref:System.Text.Encoding.GetEncoding%2A> Возвращает кэшированный экземпляр с параметрами по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1437"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="2d2f5-1438">Для получения экземпляра с различными параметрами следует использовать конструкторы производных классов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1438">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="2d2f5-1439">Например <xref:System.Text.UTF32Encoding> класс предоставляет конструктор, который дает возможность включить обнаружение ошибок.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1439">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1440">В следующем примере демонстрируется <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1440">The following example demonstrates the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncRpl#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cpp/fallEncRpl.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncRpl#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cs/fallEncRpl.cs#1)]
 [!code-vb[sys.txt.fallbackEncRpl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncRpl/vb/fallEncRpl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-1441">Параметр <paramref name="codepage" /> меньше нуля или больше 65 535.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1441"><paramref name="codepage" /> is less than zero or greater than 65535.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d2f5-1442"><paramref name="codepage" /> не поддерживается используемой платформой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1442"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2d2f5-1443"><paramref name="codepage" /> не поддерживается используемой платформой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1443"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(System::String ^ name, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2d2f5-1444">Имя кодовой страницы предпочтительной кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1444">The code page name of the preferred encoding.</span></span> <span data-ttu-id="2d2f5-1445">Любое значение, возвращаемое свойством <see cref="P:System.Text.Encoding.WebName" />, является допустимым.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1445">Any value returned by the <see cref="P:System.Text.Encoding.WebName" /> property is valid.</span></span> <span data-ttu-id="2d2f5-1446">Возможные значения перечислены в столбце "Имя" таблицы, отображаемой в разделе класса <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1446">Possible values are listed in the Name column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="2d2f5-1447">Объект, предоставляющий процедуру обработки ошибок, когда символ не может быть закодирован с использованием текущей кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1447">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="2d2f5-1448">Объект, предоставляющий процедуру обработки ошибок, когда последовательность байтов не может быть декодирована с использованием текущей кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1448">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1449">Возвращает кодировку, связанную с указанным именем кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1449">Returns the encoding associated with the specified code page name.</span></span> <span data-ttu-id="2d2f5-1450">С помощью параметров задается обработчик ошибок для символов, которые не удается закодировать, и последовательностей байтов, которые не удается декодировать.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1450">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1451">Кодирование, связанное с заданной страницей кода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1451">The encoding that is associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1452"><xref:System.Text.Encoding.GetEncoding%2A> Метод зависит от базовой платформы для поддержки большинства кодовых страниц.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1452">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="2d2f5-1453">Тем не менее платформа .NET Framework поддерживает изначально некоторых кодировок.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1453">However, the .NET Framework natively supports some encodings.</span></span>  
  
 <span data-ttu-id="2d2f5-1454">Помимо кодировки, которые поддерживаются на определенной платформе версии платформы .NET Framework по своей природе <xref:System.Text.Encoding.GetEncoding%2A> метод возвращает все дополнительные кодировки, которые становятся доступными, зарегистрировав <xref:System.Text.EncodingProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1454">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="2d2f5-1455">Если же кодировку был зарегистрирован с помощью нескольких <xref:System.Text.EncodingProvider> объектов, этот метод возвращает последнее из них зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1455">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span> 
  
> [!NOTE]
>  <span data-ttu-id="2d2f5-1456">Кодовые страницы ANSI могут быть разными на разных компьютерах и можно изменить на одном компьютере, что приведет к повреждению данных.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1456">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="2d2f5-1457">Для получения согласованных результатов следует использовать кодировку Юникод, например UTF-8 (кодовая страница 65001) или UTF-16, вместо конкретной кодовой странице.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1457">For the most consistent results, you should use a Unicode encoding, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
  
 <span data-ttu-id="2d2f5-1458">Список кодовых страниц см. в разделе <xref:System.Text.Encoding> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1458">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="2d2f5-1459">Можно вызвать <xref:System.Text.Encoding.GetEncodings%2A> метод в полной версии .NET Framework, на рабочем столе Windows, чтобы получить список всех кодировок.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1459">You can call the <xref:System.Text.Encoding.GetEncodings%2A> method on the full .NET Framework on the Windows desktop to get a list of all encodings.</span></span>  
  
 <span data-ttu-id="2d2f5-1460"><xref:System.Text.Encoding.GetEncoding%2A> Возвращает кэшированный экземпляр с параметрами по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1460"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="2d2f5-1461">Для получения экземпляра с различными параметрами следует использовать конструкторы производных классов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1461">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="2d2f5-1462">Например <xref:System.Text.UTF32Encoding> класс предоставляет конструктор, который дает возможность включить обнаружение ошибок.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1462">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1463">В следующем примере демонстрируется <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1463">The following example demonstrates the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncRpl#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cpp/fallEncRpl.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncRpl#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cs/fallEncRpl.cs#1)]
 [!code-vb[sys.txt.fallbackEncRpl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncRpl/vb/fallEncRpl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d2f5-1464"><paramref name="name" /> не является допустимым именем кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1464"><paramref name="name" /> is not a valid code page name.</span></span>  
  
 <span data-ttu-id="2d2f5-1465">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1465">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1466">Кодовая страница, указанная с помощью параметра <paramref name="name" />, не поддерживается используемой платформой.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1466">The code page indicated by <paramref name="name" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncodings">
      <MemberSignature Language="C#" Value="public static System.Text.EncodingInfo[] GetEncodings ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.EncodingInfo[] GetEncodings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncodings" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncodings () As EncodingInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Text::EncodingInfo ^&gt; ^ GetEncodings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncodingInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d2f5-1467">Возвращает массив, содержащий все кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1467">Returns an array that contains all encodings.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1468">Массив, содержащий все кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1468">An array that contains all encodings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1469">Этот метод возвращает список поддерживаемых кодировок, которые однозначно определяются по кодовой странице.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1469">This method returns a list of supported encodings, uniquely distinguished by code page.</span></span> <span data-ttu-id="2d2f5-1470">Таблица со списком поддерживаемых кодировок, в разделе <xref:System.Text.Encoding> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1470">For a table that lists the supported encodings, see the <xref:System.Text.Encoding> class topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d2f5-1471">Список поддерживаемых кодировок, возвращаемых <xref:System.Text.Encoding.GetEncodings%2A> метода не включает все дополнительные кодировки, доступная по любому <xref:System.Text.EncodingProvider> реализации, которые были зарегистрированы путем вызова метода <xref:System.Text.Encoding.RegisterProvider%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1471">The list of supported encodings returned by the <xref:System.Text.Encoding.GetEncodings%2A> method does not include any additional encodings made available by any <xref:System.Text.EncodingProvider> implementations that were registered by calls to the <xref:System.Text.Encoding.RegisterProvider%2A> method.</span></span>  
  
 <span data-ttu-id="2d2f5-1472">Кодировки 50220 и 50222 будут связаны с именем «iso-2022-jp», но они не совпадают.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1472">Encodings 50220 and 50222 are both associated with the name "iso-2022-jp", but they are not identical.</span></span> <span data-ttu-id="2d2f5-1473">Кодировка 50220 преобразует полуширинные символы катакана символам катакана полной ширины, тогда как кодировка 50222 использует последовательность shift-/ shift out для кодирования символов катакана половинной ширины.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1473">Encoding 50220 converts half-width Katakana characters to full-width Katakana characters, whereas encoding 50222 uses a shift-in/shift-out sequence to encode half-width Katakana characters.</span></span> <span data-ttu-id="2d2f5-1474">Отображаемое имя кодировки 50222 — «японский (JIS разрешить 1 байт кана с JIS - так / SI)» позволяет отличать его от кодировки 50220, имеющая отображаемое имя «Японская (JIS)».</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1474">The display name for encoding 50222 is "Japanese (JIS-Allow 1 byte Kana - SO/SI)" to distinguish it from encoding 50220, which has the display name "Japanese (JIS)".</span></span>  
  
 <span data-ttu-id="2d2f5-1475">Если запрашивается кодирования имя «iso-2022-jp», .NET Framework возвращает кодировку 50220.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1475">If you request the encoding name "iso-2022-jp", the .NET Framework returns encoding 50220.</span></span> <span data-ttu-id="2d2f5-1476">Тем не менее кодировку, которая подходит для вашего приложения зависит от предпочтительного способа обработки полуширинные символы катакана.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1476">However, the encoding that is appropriate for your app depends on the preferred treatment of the half-width Katakana characters.</span></span>  
  
 <span data-ttu-id="2d2f5-1477">Чтобы получить в определенной кодировке, следует использовать <xref:System.Text.Encoding.GetEncoding%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1477">To get a specific encoding, you should use the <xref:System.Text.Encoding.GetEncoding%2A> method.</span></span>  
  
 <span data-ttu-id="2d2f5-1478"><xref:System.Text.Encoding.GetEncodings%2A> Иногда используется, чтобы предоставить пользователю список кодировок в файле **сохранение** диалоговое окно.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1478"><xref:System.Text.Encoding.GetEncodings%2A> is sometimes used to present the user with a list of encodings in a File **Save as** dialog box.</span></span> <span data-ttu-id="2d2f5-1479">Однако многие кодировки Юникод, либо неполными и преобразовать много символов для «?», или имеют незначительно отличающиеся поведение на разных платформах.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1479">However, many non-Unicode encodings are either incomplete and translate many characters to "?", or have subtly different behavior on different platforms.</span></span> <span data-ttu-id="2d2f5-1480">Рекомендуется использовать значение по умолчанию UTF-8 или UTF-16.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1480">Consider using UTF-8 or UTF-16 as the default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1481">В следующем примере проверяется значения логических свойств каждой кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1481">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d2f5-1482">Возвращает хэш-код текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1482">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1483">Хэш-код для текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1483">The hash code for the current instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public abstract int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMaxByteCount(int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="2d2f5-1484">Число кодируемых символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1484">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1485">При переопределении в производном классе вычисляет максимальное количество байтов, полученных при кодировании заданного количества символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1485">When overridden in a derived class, calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1486">Максимальное количество байтов, полученных при кодировании заданного количества символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1486">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1487">`charCount` Фактически указывает количество <xref:System.Char> объекты, представляющие символы Юникода для кодирования, так как платформа .NET Framework внутренним образом использует UTF-16 для представления символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1487">The `charCount` parameter actually specifies the number of <xref:System.Char> objects that represent the Unicode characters to encode, because the .NET Framework internally uses UTF-16 to represent Unicode characters.</span></span> <span data-ttu-id="2d2f5-1488">Таким образом, большинство символов Юникода могут быть представлены одним <xref:System.Char> объекта, а символ Юникода, представленного суррогатной пары, например, требуются две <xref:System.Char> объектов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1488">Consequently, most Unicode characters can be represented by one <xref:System.Char> object, but a Unicode character represented by a surrogate pair, for example, requires two <xref:System.Char> objects.</span></span>  
  
 <span data-ttu-id="2d2f5-1489">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.Encoding.GetBytes%2A> для хранения байтов, следует использовать <xref:System.Text.Encoding.GetByteCount%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1489">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should use the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1490">Чтобы вычислить максимальный размер массива, используйте <xref:System.Text.Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1490">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1491"><xref:System.Text.Encoding.GetByteCount%2A> Метод обычно обеспечивает выделения меньше памяти, пока <xref:System.Text.Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1491">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2d2f5-1492"><xref:System.Text.Encoding.GetMaxByteCount%2A> Извлекает худший номер, включая Наихудший случай для выбранного в данный момент <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1492"><xref:System.Text.Encoding.GetMaxByteCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="2d2f5-1493">Если выбран резервный вариант с потенциально длинной строкой <xref:System.Text.Encoding.GetMaxByteCount%2A> извлекает большие значения, особенно в случаях, где Наихудший случай для кодировки связан с переключением режимов для каждого символа.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1493">If a fallback is chosen with a potentially large string, <xref:System.Text.Encoding.GetMaxByteCount%2A> retrieves large values, particularly in cases where the worst case for the encoding involves switching modes for every character.</span></span> <span data-ttu-id="2d2f5-1494">Например это может произойти по ISO-2022-JP.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1494">For example, this can happen for ISO-2022-JP.</span></span> <span data-ttu-id="2d2f5-1495">Дополнительные сведения см. в записи блога «[в Encoding.GetMaxByteCount() и Encoding.GetMaxCharCount()?](http://go.microsoft.com/fwlink/?LinkId=153702)»</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1495">For more information, see the blog entry "[What's with Encoding.GetMaxByteCount() and Encoding.GetMaxCharCount()?](http://go.microsoft.com/fwlink/?LinkId=153702)"</span></span> <span data-ttu-id="2d2f5-1496">(http://blogs.msdn.com/shawnste/archive/2005/03/02/383903.aspx).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1496">(http://blogs.msdn.com/shawnste/archive/2005/03/02/383903.aspx).</span></span>  
  
 <span data-ttu-id="2d2f5-1497">В большинстве случаев этот метод извлекает адекватные значения для коротких строк.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1497">In most cases, this method retrieves reasonable values for small strings.</span></span> <span data-ttu-id="2d2f5-1498">Для больших строк необходимо выбирать между использованием очень больших буферов и перехват ошибок в тех редких случаях, когда более рационального буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1498">For large strings, you might have to choose between using very large buffers and catching errors in the rare case when a more reasonable buffer is too small.</span></span> <span data-ttu-id="2d2f5-1499">Может потребоваться использовать другой подход с использованием <xref:System.Text.Encoding.GetByteCount%2A> или <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1499">You might also want to consider a different approach using <xref:System.Text.Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2d2f5-1500">При использовании <xref:System.Text.Encoding.GetMaxByteCount%2A>, необходимо выделить в выходной буфер, в зависимости от максимальный размер входного буфера.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1500">When using <xref:System.Text.Encoding.GetMaxByteCount%2A>, you should allocate the output buffer based on the maximum size of the input buffer.</span></span> <span data-ttu-id="2d2f5-1501">Если размер выходного буфера ограничен, можно использовать <xref:System.Text.Encoding.Convert%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1501">If the output buffer is constrained in size, you might use the <xref:System.Text.Encoding.Convert%2A> method.</span></span>  
  
 <span data-ttu-id="2d2f5-1502">Обратите внимание, что <xref:System.Text.Encoding.GetMaxByteCount%2A> учитывает потенциальные оставшиеся суррогаты из предыдущей операции декодера.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1502">Note that <xref:System.Text.Encoding.GetMaxByteCount%2A> considers potential leftover surrogates from a previous decoder operation.</span></span> <span data-ttu-id="2d2f5-1503">Из-за декодер передав значение 1 в метод извлекает 2 для однобайтовой кодировки, например ASCII.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1503">Because of the decoder, passing a value of 1 to the method retrieves 2 for a single-byte encoding, such as ASCII.</span></span> <span data-ttu-id="2d2f5-1504">Следует использовать <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> свойства, если эта информация не требуется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1504">You should use the <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> property if this information is necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d2f5-1505">`GetMaxByteCount(N)` не обязательно совпадает со значением `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1505">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1506">Приведенный ниже определяет число байтов, необходимых для кодирования массива символов, выполняется кодирование символов и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1506">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-1507">Значение параметра <paramref name="charCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1507"><paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="2d2f5-1508">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1508">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-1509">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1509">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-1510">Параметру <see cref="P:System.Text.Encoding.EncoderFallback" /> задается значение <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1510"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2d2f5-1511">Все <see cref="T:System.Text.Encoding" /> реализации должны гарантировать отсутствие исключений переполнения буфера, если размер буфера выбран в соответствии с результатами вычисления этого метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1511">All <see cref="T:System.Text.Encoding" /> implementations must guarantee that no buffer overflow exceptions occur if buffers are sized according to the results of this method's calculations.</span></span></para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMaxCharCount(int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="2d2f5-1512">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1512">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1513">При переопределении в производном классе вычисляет максимальное количество символов, полученных при декодировании заданного количества байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1513">When overridden in a derived class, calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1514">Максимальное количество символов, полученных при декодировании заданного количества байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1514">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1515">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.Encoding.GetChars%2A> для хранения полученных символов, следует использовать <xref:System.Text.Encoding.GetCharCount%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1515">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1516">Чтобы вычислить максимальный размер массива, используйте <xref:System.Text.Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1516">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="2d2f5-1517"><xref:System.Text.Encoding.GetCharCount%2A> Метод обычно обеспечивает выделения меньше памяти, пока <xref:System.Text.Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1517">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2d2f5-1518"><xref:System.Text.Encoding.GetMaxCharCount%2A> Извлекает худший номер, включая Наихудший случай для выбранного в данный момент <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1518"><xref:System.Text.Encoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="2d2f5-1519">Если выбран резервный вариант с потенциально длинной строкой <xref:System.Text.Encoding.GetMaxCharCount%2A> извлекает большие значения.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1519">If a fallback is chosen with a potentially large string, <xref:System.Text.Encoding.GetMaxCharCount%2A> retrieves large values.</span></span>  
  
 <span data-ttu-id="2d2f5-1520">В большинстве случаев этот метод извлекает адекватные числа для коротких строк.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1520">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="2d2f5-1521">Для больших строк необходимо выбирать между использованием очень больших буферов и отслеживанием ошибок в редких случаях, более рационального буфер слишком мал.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1521">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is too small.</span></span> <span data-ttu-id="2d2f5-1522">Может потребоваться использовать другой подход с использованием <xref:System.Text.Encoding.GetCharCount%2A> или <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1522">You might also want to consider a different approach using <xref:System.Text.Encoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2d2f5-1523"><xref:System.Text.Encoding.GetMaxCharCount%2A> не связан с <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1523"><xref:System.Text.Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="2d2f5-1524">Если требуется подобная функция, для использования с <xref:System.Text.Encoding.GetBytes%2A>, следует использовать <xref:System.Text.Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1524">If you needs a similar function to use with <xref:System.Text.Encoding.GetBytes%2A>, you should use <xref:System.Text.Encoding.GetMaxByteCount%2A>.</span></span>  
  
 <span data-ttu-id="2d2f5-1525">При использовании <xref:System.Text.Encoding.GetMaxCharCount%2A>, необходимо выделить в выходной буфер, в зависимости от максимальный размер входного буфера.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1525">When using <xref:System.Text.Encoding.GetMaxCharCount%2A>, you should allocate the output buffer based on the maximum size of the input buffer.</span></span> <span data-ttu-id="2d2f5-1526">Если размер выходного буфера ограничен, можно использовать <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1526">If the output buffer is constrained in size, you might use the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2d2f5-1527">Обратите внимание, что <xref:System.Text.Encoding.GetMaxCharCount%2A> рассматривает наихудшее остался байтов из предыдущей операции кодировщика.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1527">Note that <xref:System.Text.Encoding.GetMaxCharCount%2A> considers the worst case for leftover bytes from a previous encoder operation.</span></span> <span data-ttu-id="2d2f5-1528">Для большинства кодовых страниц при передаче значения 0 этот метод извлекает значения больше или равно 1.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1528">For most code pages, passing a value of 0 to this method retrieves values greater than or equal to 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d2f5-1529">`GetMaxCharCount(N)` не обязательно совпадает со значением `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1529">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1530">В следующем примере кодирует строку в массив байтов и затем декодирует байты в массив символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1530">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-1531">Значение параметра <paramref name="byteCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1531"><paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="2d2f5-1532">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1532">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-1533">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1533">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-1534">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1534"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="2d2f5-1535">Все <see cref="T:System.Text.Encoding" /> реализации должны гарантировать отсутствие исключений переполнения буфера, если размер буфера выбран в соответствии с результатами вычисления этого метода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1535">All <see cref="T:System.Text.Encoding" /> implementations must guarantee that no buffer overflow exceptions occur if buffers are sized according to the results of this method's calculations.</span></span></para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public virtual byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d2f5-1536">При переопределении в производном классе возвращает последовательность байтов, задающую используемую кодировку.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1536">When overridden in a derived class, returns a sequence of bytes that specifies the encoding used.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1537">Массив байтов, в котором содержится последовательность байтов, задающая используемую кодировку.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1537">A byte array containing a sequence of bytes that specifies the encoding used.</span></span>  
  
 <span data-ttu-id="2d2f5-1538">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1538">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1539">Массив байтов нулевой длины, если преамбула не требуется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1539">A byte array of length zero, if a preamble is not required.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1540">При необходимости <xref:System.Text.Encoding> объект предоставляет преамбулу — массив байтов, которые может иметь префикс в последовательность байтов, полученных в результате кодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1540">Optionally, the <xref:System.Text.Encoding> object provides a preamble that is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="2d2f5-1541">Если преамбула содержит метку порядка следования байтов (в Юникоде, кодовая точка U + FEFF), декодер получает возможность определить порядок следования байтов и формат преобразования или UTF.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1541">If the preamble contains a byte order mark (in Unicode, code point U+FEFF), it helps the decoder determine the byte order and the transformation format or UTF.</span></span>  
  
 <span data-ttu-id="2d2f5-1542">Метка порядка байтов (BOM) Юникода сериализуется следующим образом (в шестнадцатеричном формате):</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1542">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="2d2f5-1543">UTF-8: EF BB BF</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1543">UTF-8: EF BB BF</span></span>  
  
-   <span data-ttu-id="2d2f5-1544">UTF-16 обратный порядок байтов: FE FF</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1544">UTF-16 big endian byte order: FE FF</span></span>  
  
-   <span data-ttu-id="2d2f5-1545">UTF-16 прямом порядке байтов: FF FE</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1545">UTF-16 little endian byte order: FF FE</span></span>  
  
-   <span data-ttu-id="2d2f5-1546">UTF-32 обратный порядок байтов: 00 00 FE FF</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1546">UTF-32 big endian byte order: 00 00 FE FF</span></span>  
  
-   <span data-ttu-id="2d2f5-1547">UTF-32 прямом порядке байтов: FF FE 00 00</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1547">UTF-32 little endian byte order: FF FE 00 00</span></span>  
  
 <span data-ttu-id="2d2f5-1548">Спецификации, следует использовать, поскольку она обеспечивает почти точную идентификацию кодировки для файлов, в противном случае теряют ссылку на <xref:System.Text.Encoding> объекта, например, без тега или неправильно отмечен веб-данных или случайное текстовые файлы, сохраненные, когда организация не иметь расставленными или других данных.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1548">You should use the BOM, because it provides nearly certain identification of an encoding for files that otherwise have lost reference to the <xref:System.Text.Encoding> object, for example, untagged or improperly tagged web data or random text files stored when a business did not have international concerns or other data.</span></span> <span data-ttu-id="2d2f5-1549">Часто возникающих пользователя избавить согласованных и правильных тегов в данных, желательно в кодировке UTF-8 или UTF-16.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1549">Often user problems might be avoided if data is consistently and properly tagged, preferably in UTF-8 or UTF-16.</span></span>  
  
 <span data-ttu-id="2d2f5-1550">Для стандартов, предоставляющих тип кодировки метка BOM отчасти избыточный.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1550">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="2d2f5-1551">Тем не менее он может использоваться, чтобы помочь серверу отправлять правильный заголовок кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1551">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="2d2f5-1552">Кроме того он может использоваться как переход на резервный ресурс в случае, если кодировка, в противном случае не потеряны.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1552">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="2d2f5-1553">Есть некоторые недостатки использования метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1553">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="2d2f5-1554">Например сложно выбрать способы ограничения полей базы данных, используйте метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1554">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="2d2f5-1555">Объединение файлов может вызвать проблемы также, например, когда файлы сливаются таким образом, что необязательный символ может оказаться в центре данных.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1555">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="2d2f5-1556">Несмотря на некоторые недостатки Однако использование спецификации настоятельно рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1556">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="2d2f5-1557">Дополнительные сведения о порядке байтов и метка порядка байтов в разделе Юникод [домашней странице Юникода](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1557">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2d2f5-1558">Чтобы обеспечить правильное декодирование закодированных байтов, необходимо использовать перед закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1558">To ensure that the encoded bytes are decoded properly, you should prefix encoded bytes with a preamble.</span></span> <span data-ttu-id="2d2f5-1559">Однако большинство кодировок преамбула не предоставляется.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1559">However, most encodings do not provide a preamble.</span></span> <span data-ttu-id="2d2f5-1560">Чтобы обеспечить правильное декодирование закодированных байтов, следует использовать кодировку Юникод, то есть <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, или <xref:System.Text.UTF32Encoding>, с начальной части.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1560">To ensure that the encoded bytes are decoded properly, you should use a Unicode encoding, that is, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding>, with a preamble.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1561">В следующем примере определяется порядок байтов кодировки на основе преамбулы.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1561">The following example determines the byte order of the encoding based on the preamble.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/CPP/preamble.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/CS/preamble.cs#1)]
 [!code-vb[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/VB/preamble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1562">При переопределении в производном классе декодирует последовательность байтов в строку.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1562">When overridden in a derived class, decodes a sequence of bytes into a string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (bytes As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="2d2f5-1563">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1563">The byte array containing the sequence of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1564">При переопределении в производном классе декодирует все байты из указанного массива байтов в строку.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1564">When overridden in a derived class, decodes all the bytes in the specified byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1565">Строка, содержащая результаты декодирования заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1565">A string that contains the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1566">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> объект, возвращаемый <xref:System.Text.Encoding.GetDecoder%2A> метод deri Разрешить класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1566">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> object returned by the <xref:System.Text.Encoding.GetDecoder%2A> method of a derived class.</span></span>  
  
 <span data-ttu-id="2d2f5-1567">В разделе «Примечания» <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> справочном разделе для обсуждения декодирования методики и рекомендации.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1567">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
 <span data-ttu-id="2d2f5-1568">Обратите внимание, что точное поведение <xref:System.Text.Encoding.GetString%2A> метод для какого-либо <xref:System.Text.Encoding> реализация зависит от резервную стратегию, определенным для этого <xref:System.Text.Encoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1568">Note that the precise behavior of the <xref:System.Text.Encoding.GetString%2A> method for a particular <xref:System.Text.Encoding> implementation depends on the fallback strategy defined for that <xref:System.Text.Encoding> object.</span></span> <span data-ttu-id="2d2f5-1569">Дополнительные сведения см. раздел «Выбор резервной стратегии» [кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md) раздела.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1569">For more information, see the "Choosing a Fallback Strategy" section of the [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1570">В следующем примере считывается строка в кодировке UTF-8 из двоичного файла, представленного <xref:System.IO.FileStream> объекта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1570">The following example reads a UTF-8 encoded string from a binary file represented by a <xref:System.IO.FileStream> object.</span></span> <span data-ttu-id="2d2f5-1571">Для файлов, которые меньше 2048 байтов, он считывает содержимое этого файла в массив байтов и вызывает метод <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%29> метод, чтобы выполнить декодирование.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1571">For files that are smaller than 2,048 bytes, it reads the contents of the entire file into a byte array and calls the <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%29> method to perform the decoding.</span></span> <span data-ttu-id="2d2f5-1572">Для обработки больших файлов он 2048 байтов за раз считывает в массив байтов, вызовы <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод, чтобы определить количество символов, содержащихся в массиве, а затем набирает <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> метод, чтобы выполнить декодирование.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1572">For larger files, it reads 2,048 bytes at a time into a byte array, calls the <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to determine how many characters are contained in the array, and then calls the <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method to perform the decoding.</span></span>  
  
 [!code-csharp[System.Text.Encoding.GetString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetString/CS/getstring1.cs#2)]
 [!code-vb[System.Text.Encoding.GetString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetString/VB/getstring1.vb#2)]  
  
 <span data-ttu-id="2d2f5-1573">В примере используется следующий текст, который должен быть сохранен файл в кодировке UTF-8, с именем Utf8Example.txt.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1573">The example uses the following text, which should be saved to a UTF-8 encoded file named Utf8Example.txt.</span></span>  
  
```  
  
This is a UTF-8-encoded file that contains primarily Latin text, although it   
does list the first twelve letters of the Russian (Cyrillic) alphabet:  
  
А б в г д е ё ж з и й к  
  
The goal is to save this file, then open and decode it as a binary stream.  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d2f5-1574">Массив байтов содержит недопустимые точки кода Юникод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1574">The byte array contains invalid Unicode code points.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-1575">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1575"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="2d2f5-1576">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1576">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-1577">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1577">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-1578">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1578"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString (bytes As ReadOnlySpan(Of Byte)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(System::Byte* bytes, int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="2d2f5-1579">Указатель на массив байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1579">A pointer to a byte array.</span></span></param>
        <param name="byteCount"><span data-ttu-id="2d2f5-1580">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1580">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1581">При переопределении в производном классе декодирует указанное количество байтов начиная с указанного адреса в строку.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1581">When overridden in a derived class, decodes a specified number of bytes starting at a specified address into a string.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1582">Строка, содержащая результаты декодирования заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1582">A string that contains the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1583"><xref:System.Text.Encoding.GetString%2A> Метод предназначен для оптимизации производительности, когда у вас есть собственный указатель на массив байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1583">The <xref:System.Text.Encoding.GetString%2A> method is designed to optimize performance when you have a native pointer to a byte array.</span></span> <span data-ttu-id="2d2f5-1584">Вместо создания управляемого массива байтов и затем декодирования этот метод можно вызывать вместо без создания промежуточных объектов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1584">Instead of creating a managed byte array and then decoding it, you can instead call this method without having to create any intermediate objects.</span></span>  
  
 <span data-ttu-id="2d2f5-1585">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> объект, возвращаемый <xref:System.Text.Encoding.GetDecoder%2A> метод deri Разрешить класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1585">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> object returned by the <xref:System.Text.Encoding.GetDecoder%2A> method of a derived class.</span></span>  
  
 <span data-ttu-id="2d2f5-1586">В разделе «Примечания» <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> справочном разделе для обсуждения декодирования методики и рекомендации.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1586">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
 <span data-ttu-id="2d2f5-1587">Обратите внимание, что точное поведение <xref:System.Text.Encoding.GetString%2A> метод для какого-либо <xref:System.Text.Encoding> реализация зависит от резервную стратегию, определенным для этого <xref:System.Text.Encoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1587">Note that the precise behavior of the <xref:System.Text.Encoding.GetString%2A> method for a particular <xref:System.Text.Encoding> implementation depends on the fallback strategy defined for that <xref:System.Text.Encoding> object.</span></span> <span data-ttu-id="2d2f5-1588">Дополнительные сведения см. раздел «Выбор резервной стратегии» [кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md) раздела.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1588">For more information, see the "Choosing a Fallback Strategy" section of the [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-1589"><paramref name="bytes" /> является пустым указателем</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1589"><paramref name="bytes" /> is a null pointer.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-1590">Значение параметра <paramref name="byteCount" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1590"><paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="2d2f5-1591">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1591">A   fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-1592">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1592">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-1593">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1593"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="2d2f5-1594">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1594">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="2d2f5-1595">Индекс первого декодируемого байта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1595">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="2d2f5-1596">Число байтов для декодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1596">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1597">При переопределении в производном классе декодирует последовательность байтов из указанного массива байтов в строку.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1597">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="2d2f5-1598">Строка, содержащая результаты декодирования заданной последовательности байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1598">A string that contains the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1599">Если преобразование данных доступен только в последовательных блоках (например, данные, считанные из потока) или если объем данных настолько велик, что ему следует разделить на более мелкие блоки, следует использовать <xref:System.Text.Decoder> или <xref:System.Text.Encoder> , предоставляемые <xref:System.Text.Encoding.GetDecoder%2A> метод или <xref:System.Text.Encoding.GetEncoder%2A> метода, соответственно, производного класса.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1599">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="2d2f5-1600">В разделе «Примечания» <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> справочном разделе для обсуждения декодирования методики и рекомендации.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1600">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1601">В следующем примере считывается строка в кодировке UTF-8 из двоичного файла, представленного <xref:System.IO.FileStream> объекта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1601">The following example reads a UTF-8 encoded string from a binary file that is represented by a <xref:System.IO.FileStream> object.</span></span> <span data-ttu-id="2d2f5-1602">Для файлов, которые меньше 2048 байтов, он считывает содержимое этого файла в массив байтов и вызывает метод <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> метод, чтобы выполнить декодирование.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1602">For files that are smaller than 2,048 bytes, it reads the contents of the entire file into a byte array and calls the <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to perform the decoding.</span></span> <span data-ttu-id="2d2f5-1603">Для обработки больших файлов он 2048 байтов за раз считывает в массив байтов, вызовы <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод, чтобы определить количество символов, содержащихся в массиве, а затем набирает <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> метод, чтобы выполнить декодирование.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1603">For larger files, it reads 2,048 bytes at a time into a byte array, calls the <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to determine how many characters are contained in the array, and then calls the <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method to perform the decoding.</span></span>  
  
 [!code-csharp[System.Text.Encoding.GetString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetString/CS/getstring2.cs#3)]
 [!code-vb[System.Text.Encoding.GetString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetString/VB/getstring2.vb#3)]  
  
 <span data-ttu-id="2d2f5-1604">В примере используется следующий текст, который должен быть сохранен файл в кодировке UTF-8, с именем Utf8Example.txt.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1604">The example uses the following text, which should be saved to a UTF-8 encoded file named Utf8Example.txt.</span></span>  
  
```  
  
This is a UTF-8-encoded file that contains primarily Latin text, although it   
does list the first twelve letters of the Russian (Cyrillic) alphabet:  
  
А б в г д е ё ж з и й к  
  
The goal is to save this file, then open and decode it as a binary stream.  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d2f5-1605">Массив байтов содержит недопустимые точки кода Юникод.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1605">The byte array contains invalid Unicode code points.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-1606">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1606"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d2f5-1607">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1607"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="2d2f5-1608">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1608">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1609">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1609"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="2d2f5-1610">Произошел откат (полное объяснение см. в статье [Кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md)).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1610">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="2d2f5-1611">- и -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1611">-and-</span></span>  
  
 <span data-ttu-id="2d2f5-1612">Параметру <see cref="P:System.Text.Encoding.DecoderFallback" /> задается значение <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1612"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HeaderName">
      <MemberSignature Language="C#" Value="public virtual string HeaderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.HeaderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1613">При переопределении в производном классе получает имя текущей кодировки, которое может использоваться с тегами заголовка сообщения почтового агента.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1613">When overridden in a derived class, gets a name for the current encoding that can be used with mail agent header tags.</span></span></summary>
        <value><span data-ttu-id="2d2f5-1614">Имя текущего объекта <see cref="T:System.Text.Encoding" />, которое может использоваться с тегами заголовка сообщения почтового агента.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1614">A name for the current <see cref="T:System.Text.Encoding" /> to use with mail agent header tags.</span></span>  
  
 <span data-ttu-id="2d2f5-1615">- или -</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1615">-or-</span></span>  
  
 <span data-ttu-id="2d2f5-1616">Пустая строка (""), если текущий объект <see cref="T:System.Text.Encoding" /> не может использоваться.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1616">An empty string (""), if the current <see cref="T:System.Text.Encoding" /> cannot be used.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1617">Если требуется кодировку для имени заголовка, необходимо вызвать <xref:System.Text.Encoding.GetEncoding%2A> метод с <xref:System.Text.Encoding.HeaderName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1617">If you need an encoding for a header name, you should call the <xref:System.Text.Encoding.GetEncoding%2A> method with the <xref:System.Text.Encoding.HeaderName%2A> property.</span></span> <span data-ttu-id="2d2f5-1618">Этот метод часто извлекает другую кодировку из тестовой кодировки, для которой он вызывается.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1618">Often the method retrieves a different encoding from the test encoding furnished in the call.</span></span> <span data-ttu-id="2d2f5-1619">Обычно требуется только приложения электронной почты для получения такой кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1619">Generally only email applications need to retrieve such an encoding.</span></span>  
  
 <span data-ttu-id="2d2f5-1620">В некоторых случаях значение <xref:System.Text.Encoding.BodyName%2A> свойство соответствует свойству международный стандарт, который определяет эту кодировку.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1620">In some cases, the value of the <xref:System.Text.Encoding.BodyName%2A> property corresponds to the international standard that defines that encoding.</span></span> <span data-ttu-id="2d2f5-1621">Это не означает соответствия реализация полностью с этого стандарта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1621">This doesn't mean that the implementation complies in full with that standard.</span></span>  
  
 <span data-ttu-id="2d2f5-1622">Обратите внимание, что <xref:System.Text.Encoding.WebName%2A> возвращает имя, используемое для описания кодировку.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1622">Note that <xref:System.Text.Encoding.WebName%2A> returns the name to use to describe an encoding.</span></span> <span data-ttu-id="2d2f5-1623"><xref:System.Text.Encoding.HeaderName%2A> Свойство определяет другую кодировку, которая может лучше подходит для приложения электронной почты, например.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1623">The <xref:System.Text.Encoding.HeaderName%2A> property defines a different encoding that might work better for an email application, for example.</span></span> <span data-ttu-id="2d2f5-1624">Однако не рекомендуется использовать свойство для задания кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1624">However, use of the property to define the encoding is not recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1625">В следующем примере извлекаются разные имена для каждой кодировки и отображаются кодировки, имеющие одно или несколько имен, которые отличаются от <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1625">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2d2f5-1626">Он отображает <xref:System.Text.Encoding.EncodingName%2A> , но сравниваются по нему.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1626">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAlwaysNormalized">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1627">Получает значение, которое указывает, является ли текущая кодировка всегда нормированной.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1627">Gets a value indicating whether the current encoding is always normalized.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAlwaysNormalized">
      <MemberSignature Language="C#" Value="public bool IsAlwaysNormalized ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAlwaysNormalized() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.IsAlwaysNormalized" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAlwaysNormalized () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAlwaysNormalized();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d2f5-1628">Получает значение, которое указывает, является ли текущая кодировка всегда нормализованной с использованием формы нормализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1628">Gets a value indicating whether the current encoding is always normalized, using the default normalization form.</span></span></summary>
        <returns>
          <span data-ttu-id="2d2f5-1629"><see langword="true" />, если текущий объект <see cref="T:System.Text.Encoding" /> всегда нормирован; в противоположном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1629"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> is always normalized; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2d2f5-1630">Значение по умолчанию: <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1630">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1631">Формы нормализации по умолчанию является <xref:System.Text.NormalizationForm.FormC>, с использованием полной канонической декомпозиции, следуют замена последовательностей их первичными составляющими, если это возможно.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1631">The default normalization form is <xref:System.Text.NormalizationForm.FormC>, which uses full canonical decomposition, followed by the replacement of sequences with their primary composites, if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.NormalizationForm" />
      </Docs>
    </Member>
    <Member MemberName="IsAlwaysNormalized">
      <MemberSignature Language="C#" Value="public virtual bool IsAlwaysNormalized (System.Text.NormalizationForm form);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAlwaysNormalized(valuetype System.Text.NormalizationForm form) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAlwaysNormalized (form As NormalizationForm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAlwaysNormalized(System::Text::NormalizationForm form);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.Text.NormalizationForm" />
      </Parameters>
      <Docs>
        <param name="form"><span data-ttu-id="2d2f5-1632">Одно из значений перечисления <see cref="T:System.Text.NormalizationForm" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1632">One of the <see cref="T:System.Text.NormalizationForm" /> values.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1633">При переопределении в производном классе получает значение, которое указывает, является ли текущая кодировка всегда нормализованной с использованием заданной по умолчанию формы нормализации.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1633">When overridden in a derived class, gets a value indicating whether the current encoding is always normalized, using the specified normalization form.</span></span></summary>
        <returns>
          <span data-ttu-id="2d2f5-1634"><see langword="true" />, если текущий объект <see cref="T:System.Text.Encoding" /> всегда нормализуется с использованием заданного значения <see cref="T:System.Text.NormalizationForm" />; в противоположном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1634"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> object is always normalized using the specified <see cref="T:System.Text.NormalizationForm" /> value; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2d2f5-1635">Значение по умолчанию: <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1635">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1636">Формы нормализации по умолчанию является <xref:System.Text.NormalizationForm.FormC>, с использованием полной канонической декомпозиции, следуют замена последовательностей их первичными составляющими, если это возможно.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1636">The default normalization form is <xref:System.Text.NormalizationForm.FormC>, which uses full canonical decomposition, followed by the replacement of sequences with their primary composites, if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.NormalizationForm" />
      </Docs>
    </Member>
    <Member MemberName="IsBrowserDisplay">
      <MemberSignature Language="C#" Value="public virtual bool IsBrowserDisplay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowserDisplay" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsBrowserDisplay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBrowserDisplay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowserDisplay { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1637">При переопределении в производном классе получает значение, указывающее, может ли текущая кодировка использоваться клиентами браузера для отображения содержимого.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1637">When overridden in a derived class, gets a value indicating whether the current encoding can be used by browser clients for displaying content.</span></span></summary>
        <value>
          <span data-ttu-id="2d2f5-1638"><see langword="true" />, если текущий объект <see cref="T:System.Text.Encoding" /> может использоваться клиентами браузера для отображения содержимого; в противоположном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1638"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by browser clients for displaying content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2d2f5-1639">В следующем примере проверяется значения логических свойств каждой кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1639">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsBrowserSave" />
      </Docs>
    </Member>
    <Member MemberName="IsBrowserSave">
      <MemberSignature Language="C#" Value="public virtual bool IsBrowserSave { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowserSave" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsBrowserSave" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBrowserSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowserSave { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1640">При переопределении в производном классе получает значение, указывающее, может ли текущая кодировка использоваться клиентами браузера для сохранения содержимого.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1640">When overridden in a derived class, gets a value indicating whether the current encoding can be used by browser clients for saving content.</span></span></summary>
        <value>
          <span data-ttu-id="2d2f5-1641"><see langword="true" />, если текущий объект <see cref="T:System.Text.Encoding" /> может использоваться клиентами браузера для сохранения содержимого; в противоположном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1641"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by browser clients for saving content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2d2f5-1642">В следующем примере проверяется значения логических свойств каждой кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1642">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsBrowserDisplay" />
      </Docs>
    </Member>
    <Member MemberName="IsMailNewsDisplay">
      <MemberSignature Language="C#" Value="public virtual bool IsMailNewsDisplay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMailNewsDisplay" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsMailNewsDisplay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMailNewsDisplay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMailNewsDisplay { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1643">При переопределении в производном классе получает значение, указывающее, может ли текущая кодировка использоваться клиентами электронной почты и новостей для отображения содержимого.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1643">When overridden in a derived class, gets a value indicating whether the current encoding can be used by mail and news clients for displaying content.</span></span></summary>
        <value>
          <span data-ttu-id="2d2f5-1644"><see langword="true" />, если текущий объект <see cref="T:System.Text.Encoding" /> может использоваться клиентами электронной почты и новостей для отображения содержимого; в противоположном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1644"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by mail and news clients for displaying content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2d2f5-1645">В следующем примере проверяется значения логических свойств каждой кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1645">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsMailNewsDisplay" />
      </Docs>
    </Member>
    <Member MemberName="IsMailNewsSave">
      <MemberSignature Language="C#" Value="public virtual bool IsMailNewsSave { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMailNewsSave" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsMailNewsSave" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMailNewsSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMailNewsSave { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1646">При переопределении в производном классе получает значение, указывающее, может ли текущая кодировка использоваться клиентами электронной почты и новостей для сохранения содержимого.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1646">When overridden in a derived class, gets a value indicating whether the current encoding can be used by mail and news clients for saving content.</span></span></summary>
        <value>
          <span data-ttu-id="2d2f5-1647"><see langword="true" />, если текущий объект <see cref="T:System.Text.Encoding" /> может использоваться клиентами почты и новостей для сохранения содержимого; в противоположном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1647"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by mail and news clients for saving content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2d2f5-1648">В следующем примере проверяется значения логических свойств каждой кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1648">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsMailNewsSave" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1649">При переопределении в производном классе получает значение, указывающее, является ли текущая кодировка доступной только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1649">When overridden in a derived class, gets a value indicating whether the current encoding is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="2d2f5-1650">Значение <see langword="true" />, если текущий объект <see cref="T:System.Text.Encoding" /> доступен только для чтения, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1650"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2d2f5-1651">Значение по умолчанию: <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1651">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingleByte">
      <MemberSignature Language="C#" Value="public virtual bool IsSingleByte { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleByte" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsSingleByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSingleByte As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSingleByte { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1652">При переопределении в производном классе получает значение, указывающее, используются ли в текущей кодировке однобайтовые кодовые точки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1652">When overridden in a derived class, gets a value indicating whether the current encoding uses single-byte code points.</span></span></summary>
        <value>
          <span data-ttu-id="2d2f5-1653"><see langword="true" />, если в текущем объекте <see cref="T:System.Text.Encoding" /> используются однобайтовые кодовые точки; в противоположном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1653"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> uses single-byte code points; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1654">В однобайтовой кодировки, например, <xref:System.Text.ASCIIEncoding>, это свойство получает `true`.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1654">For a single-byte encoding, for example, <xref:System.Text.ASCIIEncoding>, this property retrieves `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2d2f5-1655">Следует соблюдать осторожность, приложение работает со значением для <xref:System.Text.Encoding.IsSingleByte%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1655">You should be careful in what your application does with the value for <xref:System.Text.Encoding.IsSingleByte%2A>.</span></span> <span data-ttu-id="2d2f5-1656">Предположение способ обработки "кодировки" может быть неправильно.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1656">An assumption of how an Encoding will proceed may still be wrong.</span></span> <span data-ttu-id="2d2f5-1657">Например, Windows-1252 имеет значение `true` для <xref:System.Text.Encoding.IsSingleByte%2A?displayProperty=nameWithType>, но Encoding.GetMaxByteCount(1) возвращает 2.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1657">For example, Windows-1252 has a value of `true` for <xref:System.Text.Encoding.IsSingleByte%2A?displayProperty=nameWithType>, but Encoding.GetMaxByteCount(1) returns 2.</span></span> <span data-ttu-id="2d2f5-1658">Это потому, что метод учитывает потенциальные оставшиеся суррогаты из предыдущей операции декодера.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1658">This is because the method considers potential leftover surrogates from a previous decoder operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1659">В следующем примере проверяется значения логических свойств каждой кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1659">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Preamble">
      <MemberSignature Language="C#" Value="public virtual ReadOnlySpan&lt;byte&gt; Preamble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; Preamble" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Preamble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Preamble As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property ReadOnlySpan&lt;System::Byte&gt; Preamble { ReadOnlySpan&lt;System::Byte&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterProvider">
      <MemberSignature Language="C#" Value="public static void RegisterProvider (System.Text.EncodingProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterProvider(class System.Text.EncodingProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterProvider (provider As EncodingProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterProvider(System::Text::EncodingProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Text.EncodingProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2d2f5-1660">Подкласс класса <see cref="T:System.Text.EncodingProvider" />, который предоставляет доступ к дополнительным кодировкам символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1660">A subclass of <see cref="T:System.Text.EncodingProvider" /> that provides access to additional character encodings.</span></span></param>
        <summary><span data-ttu-id="2d2f5-1661">Регистрирует поставщик кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1661">Registers an encoding provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1662"><xref:System.Text.Encoding.RegisterProvider%2A> Метод позволяет зарегистрировать класс, производный от <xref:System.Text.EncodingProvider> , делает кодировки доступен на платформе, в противном случае их не поддерживает.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1662">The <xref:System.Text.Encoding.RegisterProvider%2A> method allows you to register a class derived from <xref:System.Text.EncodingProvider> that makes character encodings available on a platform that does not otherwise support them.</span></span> <span data-ttu-id="2d2f5-1663">После регистрации кодировки поставщика кодировки, которые он поддерживает можно получить путем вызова любой <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1663">Once the encoding provider is registered, the encodings that it supports can be retrieved by calling any <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="2d2f5-1664">При наличии нескольких поставщиков кодирования, <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> метод пытается получить с заданной кодировкой от каждого поставщика, начиная с самой последней зарегистрированный.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1664">If there are multiple encoding providers, the <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method attempts to retrieve a specified encoding from each provider starting with the one most recently registered.</span></span>

<span data-ttu-id="2d2f5-1665">Регистрация поставщика кодировки с помощью <xref:System.Text.Encoding.RegisterProvider%2A> метод также изменяет поведение [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) и [EncodingProvider.GetEncoding (Int32, EncoderFallback, DecoderFallback )](xref:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)) методы при передаче аргумента `0`:</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1665">Registering an encoding provider by using the <xref:System.Text.Encoding.RegisterProvider%2A> method also modifies the behavior of the [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) and [EncodingProvider.GetEncoding(Int32, EncoderFallback, DecoderFallback)](xref:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)) methods when passed an argument of `0`:</span></span>

- <span data-ttu-id="2d2f5-1666">Если зарегистрированный поставщик <xref:System.Text.CodePagesEncodingProvider>, метод возвращает кодировку, которая соответствует active кодовой страницы системы, если в операционной системе Windows.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1666">If the registered provider is the <xref:System.Text.CodePagesEncodingProvider>, the method returns the encoding that matches the system active code page when running on the Windows operating system.</span></span>

- <span data-ttu-id="2d2f5-1667">Настраиваемый поставщик кодировки можно выбрать, какую кодировку, возвращаемое, если любой из этих <xref:System.Text.Encoding.GetEncoding%2A> перегруженных версий метода передается аргумент `0`.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1667">A custom encoding provider can choose which encoding to return when either of these <xref:System.Text.Encoding.GetEncoding%2A> method overloads is passed an argument of `0`.</span></span> <span data-ttu-id="2d2f5-1668">Возвращает кодировку, что поставщик можно также выбрать <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> возвращении метода `null`.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1668">The provider can also choose to not return an encoding by having the <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> method return `null`.</span></span> 
  
 [!INCLUDE[net_v46](~/includes/net-v46-md.md)]<span data-ttu-id="2d2f5-1669"> включает один поставщик кодировки, <xref:System.Text.CodePagesEncodingProvider>, который делает доступными кодировки, которые имеются в полной версии платформы .NET Framework, но не доступны в [!INCLUDE[net_v46](~/includes/net-v46-md.md)].</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1669"> includes one encoding provider, <xref:System.Text.CodePagesEncodingProvider>, that makes the encodings available that are present in the full .NET Framework but are not available in [!INCLUDE[net_v46](~/includes/net-v46-md.md)].</span></span> <span data-ttu-id="2d2f5-1670">По умолчанию [!INCLUDE[net_v46](~/includes/net-v46-md.md)] поддерживает только кодировки Юникод, ASCII и кодовой страницы 28591.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1670">By default, [!INCLUDE[net_v46](~/includes/net-v46-md.md)] only supports the Unicode encodings, ASCII, and code page 28591.</span></span>  
  
 <span data-ttu-id="2d2f5-1671">Если тот же поставщик кодировки используется в нескольких вызовах <xref:System.Text.Encoding.RegisterProvider%2A> метод только первый вызов метода регистрирует поставщик.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1671">If the same encoding provider is used in multiple calls to the <xref:System.Text.Encoding.RegisterProvider%2A> method, only the first method call registers the provider.</span></span> <span data-ttu-id="2d2f5-1672">Последующие вызовы учитываются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1672">Subsequent calls are ignored.</span></span>  
  
 <span data-ttu-id="2d2f5-1673">Если <xref:System.Text.Encoding.RegisterProvider%2A> метод вызывается для регистрации нескольких поставщиков, которые обрабатывают ту же кодировку, последний зарегистрированный поставщик используется для всех операциях кодирования и декодирования.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1673">If the <xref:System.Text.Encoding.RegisterProvider%2A> method is called to register multiple providers that handle the same encoding, the last registered provider is the used for all encoding and decoding operations.</span></span> <span data-ttu-id="2d2f5-1674">Все ранее зарегистрированных поставщиков учитываются.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1674">Any previously registered providers are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d2f5-1675">Свойство <paramref name="provider" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1675"><paramref name="provider" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Text.CodePagesEncodingProvider" />
        <altmember cref="T:System.Text.EncodingProvider" />
      </Docs>
    </Member>
    <Member MemberName="Unicode">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding Unicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding Unicode" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Unicode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Unicode As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ Unicode { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1676">Получает кодировку для формата UTF-16 с прямым порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1676">Gets an encoding for the UTF-16 format using the little endian byte order.</span></span></summary>
        <value><span data-ttu-id="2d2f5-1677">Кодировка для формата UTF-16 с прямым порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1677">An encoding for the UTF-16 format using the little endian byte order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1678">Сведения о кодировках, поддерживаемых .NET Framework и обсуждение какие Юникод, кодировка, используемая в разделе [кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1678">For information about the encodings supported by the .NET Framework and a discussion of which Unicode encoding to use, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="2d2f5-1679"><xref:System.Text.UnicodeEncoding> Объект, возвращаемый этим свойством не может иметь необходимого поведения для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1679">The <xref:System.Text.UnicodeEncoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="2d2f5-1680">Он использует резервную стратегию замены для замены каждой строки, он не может закодировать и каждый байт, он не может декодировать, вопросительным знаком ("?») символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1680">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="2d2f5-1681">Вместо этого можно вызвать метод <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> конструктор для создания экземпляра с прямым порядком байтов <xref:System.Text.UnicodeEncoding> объект которого является либо <xref:System.Text.EncoderFallbackException> или <xref:System.Text.DecoderFallbackException>, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1681">Instead, you can call the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a little endian <xref:System.Text.UnicodeEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.Unicode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.unicode/cs/unicode1.cs#2)]
 [!code-vb[System.Text.Encoding.Unicode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.unicode/vb/unicode1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1682">Приведенный ниже определяет число байтов, необходимых для кодирования массива символов, выполняется кодирование символов и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1682">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UnicodeEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.BigEndianUnicode" />
      </Docs>
    </Member>
    <Member MemberName="UTF32">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF32" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF32" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF32 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF32 { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1683">Получает кодировку для формата UTF-32 с прямым порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1683">Gets an encoding for the UTF-32 format using the little endian byte order.</span></span></summary>
        <value><span data-ttu-id="2d2f5-1684">Объект кодировки для формата UTF-32 с прямым порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1684">An  encoding object for the UTF-32 format using the little endian byte order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1685"><xref:System.Text.UTF32Encoding> Объект, возвращаемый этим свойством не может иметь необходимого поведения для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1685">The <xref:System.Text.UTF32Encoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="2d2f5-1686">Она использует резервную стратегию замены для каждой строки, он не может закодировать и каждый байт, он не может декодировать заменить замещающий символ Юникода (U + FFFE).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1686">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with the Unicode REPLACEMENT CHARACTER (U+FFFE).</span></span> <span data-ttu-id="2d2f5-1687">Вместо этого можно вызвать метод <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> конструктора для создания <xref:System.Text.UTF32Encoding> объект которого является либо <xref:System.Text.EncoderFallbackException> или <xref:System.Text.DecoderFallbackException>, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1687">Instead, you can call the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a <xref:System.Text.UTF32Encoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.UTF32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf32/cs/encoding.utf32.1.cs#1)]
 [!code-vb[System.Text.Encoding.UTF32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf32/vb/encoding.utf32.1.vb#1)]  
  
 <span data-ttu-id="2d2f5-1688">Сведения о прямом порядке байтов см. в разделе <xref:System.Text.Encoding> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1688">For a discussion of little endian byte order, see the <xref:System.Text.Encoding> class topic.</span></span>  
  
 <span data-ttu-id="2d2f5-1689">Сведения о кодировках, поддерживаемых .NET Framework и обсуждение какие Юникод, кодировка, используемая в разделе [кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1689">For information about the encodings supported by the .NET Framework and a discussion of which Unicode encoding to use, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1690">Приведенный ниже определяет число байтов, необходимых для кодирования массива символов, выполняется кодирование символов и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1690">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF32Encoding" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
        <altmember cref="P:System.Text.Encoding.BigEndianUnicode" />
      </Docs>
    </Member>
    <Member MemberName="UTF7">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF7" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF7" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF7 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF7 { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1691">Получает кодировку для формата UTF-7.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1691">Gets an encoding for the UTF-7 format.</span></span></summary>
        <value><span data-ttu-id="2d2f5-1692">Кодировка для формата UTF-7.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1692">An encoding for the UTF-7 format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1693">В основном в средах, которые традиционно ограниченные 7 бит, например NNTP и некоторые приложения электронной почты используется кодировка UTF-7.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1693">UTF-7 encoding is used primarily in environments that historically have been restricted to 7 bits, such as NNTP and some email applications.</span></span> <span data-ttu-id="2d2f5-1694">Из-за проблем с надежности и безопасности не следует использовать UTF7 кодирование в 8-разрядных сред где кодировку UTF-8 можно использовать вместо него.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1694">Because of issues with robustness and security, you should not use UTF7 encoding in 8-bit environments where UTF-8 encoding can be used instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1695">Приведенный ниже определяет число байтов, необходимых для кодирования массива символов, выполняется кодирование символов и отображаются полученные байты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1695">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF7Encoding" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
      </Docs>
    </Member>
    <Member MemberName="UTF8">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF8 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF8" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF8" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF8 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF8 { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1696">Получает кодировку для формата UTF-8.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1696">Gets an encoding for the UTF-8 format.</span></span></summary>
        <value><span data-ttu-id="2d2f5-1697">Кодировка для формата UTF-8.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1697">An encoding for the UTF-8 format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1698">Это свойство возвращает <xref:System.Text.UTF8Encoding> объекта, кодирует (кодировки UTF-16) символов Юникода в последовательность от одной до четырех байтов на один знак, и который декодирует массива байтов в кодировке UTF-8 (кодировки UTF-16) символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1698">This property returns a <xref:System.Text.UTF8Encoding> object that encodes Unicode (UTF-16-encoded) characters into a sequence of one to four bytes per character, and that decodes a UTF-8-encoded byte array to Unicode (UTF-16-encoded) characters.</span></span> <span data-ttu-id="2d2f5-1699">Сведения о кодировке, поддерживаемые .NET Framework и обсуждение какие Юникод, кодировка, используемая в разделе [кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1699">For information about the character encodings supported by the .NET Framework and a discussion of which Unicode encoding to use, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="2d2f5-1700"><xref:System.Text.UTF8Encoding> Объект, возвращаемый этим свойством не может иметь необходимого поведения для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1700">The <xref:System.Text.UTF8Encoding> object that is returned by this property might not have the appropriate behavior for your app.</span></span>  
  
-   <span data-ttu-id="2d2f5-1701">Он возвращает <xref:System.Text.UTF8Encoding> объект, предоставляющий метка порядка байтов (BOM) Юникода.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1701">It returns a <xref:System.Text.UTF8Encoding> object that provides a Unicode byte order mark (BOM).</span></span> <span data-ttu-id="2d2f5-1702">Для создания экземпляра кодировкой UTF-8, не предоставляет Спецификации, вызвать любой перегрузки <xref:System.Text.UTF8Encoding.%23ctor%2A> конструктор.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1702">To instantiate a UTF8 encoding that doesn't provide a BOM, call any overload of the <xref:System.Text.UTF8Encoding.%23ctor%2A> constructor.</span></span>  
  
-   <span data-ttu-id="2d2f5-1703">Он возвращает <xref:System.Text.UTF8Encoding> объект, который использует резервную стратегию замены для замены каждой строки, он не может закодировать и каждый байт, он не может декодировать, вопросительным знаком ("?») символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1703">It returns a <xref:System.Text.UTF8Encoding> object that uses replacement fallback to replace each string that it can't encode and each byte that it can't decode with a question mark ("?") character.</span></span> <span data-ttu-id="2d2f5-1704">Вместо этого можно вызвать метод <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> конструктора для создания <xref:System.Text.UTF8Encoding> объект которого является либо <xref:System.Text.EncoderFallbackException> или <xref:System.Text.DecoderFallbackException>, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1704">Instead, you can call the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a <xref:System.Text.UTF8Encoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
     [!code-csharp[System.Text.Encoding.UTF8#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf8/cs/encoding.utf8.1.cs#1)]
     [!code-vb[System.Text.Encoding.UTF8#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf8/vb/encoding.utf8.1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1705">В следующем примере определяется массив, состоящий из следующих символов:</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1705">The following example defines an array that consists of the following characters:</span></span>  
  
-   <span data-ttu-id="2d2f5-1706">ЛАТИНСКАЯ СТРОЧНАЯ БУКВА Z (U + 007A)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1706">LATIN SMALL LETTER Z (U+007A)</span></span>  
  
-   <span data-ttu-id="2d2f5-1707">ЛАТИНИЦА МАЛЫЙ ПИСЬМА (U + 0061)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1707">LATIN SMALL LETTER A (U+0061)</span></span>  
  
-   <span data-ttu-id="2d2f5-1708">ОБЪЕДИНЕНИЕ БРЕВЕ; (U + 0306)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1708">COMBINING BREVE (U+0306)</span></span>  
  
-   <span data-ttu-id="2d2f5-1709">ЛАТИНСКАЯ СТРОЧНАЯ БУКВА AE С АКУТОМ (U + 01FD)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1709">LATIN SMALL LETTER AE WITH ACUTE (U+01FD)</span></span>  
  
-   <span data-ttu-id="2d2f5-1710">ГРЕЧЕСКИЙ СТРОЧНАЯ БУКВА БЕТА-ВЕРСИИ (U + 03B2)</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1710">GREEK SMALL LETTER BETA (U+03B2)</span></span>  
  
-   <span data-ttu-id="2d2f5-1711">Суррогатная пара (U + D800 U + DD54), являющийся ГРЕЧЕСКОЙ ACROPHONIC ATTIC один ТЫСЯЧ STATERS (U + 10154).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1711">A surrogate pair (U+D800 U+DD54) that forms GREEK ACROPHONIC ATTIC ONE THOUSAND STATERS (U+10154).</span></span>  
  
 <span data-ttu-id="2d2f5-1712">Он отображает блоков кода UTF-16 для каждого символа, а также определяет число байтов, необходимых с помощью кодировщика UTF-8 для кодирования массива символов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1712">It displays the UTF-16 code units of each character and determines the number of bytes required by a UTF-8 encoder to encode the character array.</span></span> <span data-ttu-id="2d2f5-1713">Затем выполняется кодирование символов и отображаются полученные байты кодировки UTF-8.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1713">It then encodes the characters and displays the resulting UTF-8-encoded bytes.</span></span>  
  
 [!code-csharp[System.Text.Encoding.UTF8#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf8/cs/example1.cs#2)]
 [!code-vb[System.Text.Encoding.UTF8#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf8/vb/example1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF8Encoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WebName">
      <MemberSignature Language="C#" Value="public virtual string WebName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.WebName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ WebName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1714">При переопределении в производном классе получает для текущей кодировки имя, зарегистрированное в IANA (Internet Assigned Numbers Authority).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1714">When overridden in a derived class, gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.</span></span></summary>
        <value><span data-ttu-id="2d2f5-1715">Имя IANA для текущего объекта <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1715">The IANA name for the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1716"><xref:System.Text.Encoding.WebName%2A> Свойства совпадает со значением <xref:System.Text.EncodingInfo.Name%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1716">The <xref:System.Text.Encoding.WebName%2A> property is the same as the <xref:System.Text.EncodingInfo.Name%2A> property.</span></span>  
  
 <span data-ttu-id="2d2f5-1717">Обратите внимание, что <xref:System.Text.Encoding.WebName%2A> возвращает IANA зарегистрировано имя кодировки.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1717">Note that <xref:System.Text.Encoding.WebName%2A> returns an IANA-registered name for the encoding.</span></span> <span data-ttu-id="2d2f5-1718">Если его значение является именем стандарта, реализация кодировки может не соответствовать в полном объеме для этого стандарта.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1718">When its value is the name of a standard, the implementation of the encoding might not conform in full to that standard.</span></span> <span data-ttu-id="2d2f5-1719"><xref:System.Text.Encoding.HeaderName%2A> Свойство определяет другую кодировку, которая может заголовки электронной почты.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1719">The <xref:System.Text.Encoding.HeaderName%2A> property defines a different encoding that might work better for email headers.</span></span> <span data-ttu-id="2d2f5-1720">Однако большинство приложений следует использовать <xref:System.Text.Encoding.WebName%2A> вместо него.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1720">However, most apps should use <xref:System.Text.Encoding.WebName%2A> instead.</span></span>  
  
 <span data-ttu-id="2d2f5-1721">Дополнительные сведения об IANA [www.iana.org](https://www.iana.org/).</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1721">For more information on the IANA, go to [www.iana.org](https://www.iana.org/).</span></span>  
  
 <span data-ttu-id="2d2f5-1722"><xref:System.Text.Encoding.WebName%2A?displayProperty=nameWithType> Совпадает со значением <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> возвращенных <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1722">The <xref:System.Text.Encoding.WebName%2A?displayProperty=nameWithType> is the same as the <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> returned by <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2d2f5-1723">Некоторые веб-имена являются дубликатами; см. в разделе примечаний для <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> для получения дополнительной информации.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1723">Some of the web names are duplicates; see the remarks for <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1724">Следующий пример включает <xref:System.Text.Encoding.WebName%2A> в заголовок HTML.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1724">The following example includes the <xref:System.Text.Encoding.WebName%2A> in an HTML header.</span></span>  
  
 [!code-cpp[System.Text.Encoding.WebName#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.WebName/CPP/webname.cpp#1)]
 [!code-csharp[System.Text.Encoding.WebName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.WebName/CS/webname.cs#1)]
 [!code-vb[System.Text.Encoding.WebName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.WebName/VB/webname.vb#1)]  
  
 <span data-ttu-id="2d2f5-1725">В следующем примере извлекаются разные имена для каждой кодировки и отображаются кодировки, имеющие одно или несколько имен, которые отличаются от <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1725">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2d2f5-1726">Он отображает <xref:System.Text.Encoding.EncodingName%2A> , но сравниваются по нему.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1726">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
      </Docs>
    </Member>
    <Member MemberName="WindowsCodePage">
      <MemberSignature Language="C#" Value="public virtual int WindowsCodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowsCodePage" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.WindowsCodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WindowsCodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WindowsCodePage { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2f5-1727">При переопределении в производном классе получает кодовую страницу операционной системы Windows, наиболее точно соответствующую текущей кодировке.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1727">When overridden in a derived class, gets the Windows operating system code page that most closely corresponds to the current encoding.</span></span></summary>
        <value><span data-ttu-id="2d2f5-1728">Кодовая страница операционной системы Windows, наиболее точно соответствующая текущему объекту <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1728">The Windows operating system code page that most closely corresponds to the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2f5-1729">Это свойство предоставляется для обеспечения совместимости с многоязыковой поддержки Windows (MLang) API, например, при определении семейств шрифтов.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1729">This property is provided for compatibility with the Windows MultiLanguage (MLang) APIs, for example, in determining font families.</span></span> <span data-ttu-id="2d2f5-1730">Для глобализации одну из кодировок Юникода рекомендуется использовать вместо него.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1730">For globalization, using one of the Unicode encodings is recommended instead.</span></span> <span data-ttu-id="2d2f5-1731">Также рекомендуется использовать <xref:System.Text.Encoding.WebName%2A> вместо <xref:System.Text.Encoding.WindowsCodePage%2A> для идентификации кодовую страницу.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1731">It is also recommended to use <xref:System.Text.Encoding.WebName%2A> instead of <xref:System.Text.Encoding.WindowsCodePage%2A> to identify the code page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2f5-1732">В следующем примере определяется кодовая страница Windows, наиболее точно соответствующая каждой кодировке.</span><span class="sxs-lookup"><span data-stu-id="2d2f5-1732">The following example determines the Windows code page that most closely corresponds to each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.CodePage#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/CPP/codepage.cpp#1)]
 [!code-csharp[System.Text.Encoding.CodePage#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/CS/codepage.cs#1)]
 [!code-vb[System.Text.Encoding.CodePage#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/VB/codepage.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.EncodingInfo.CodePage" />
      </Docs>
    </Member>
  </Members>
</Type>