<Type Name="EncodingProvider" FullName="System.Text.EncodingProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="213b813ec5e5a38a3816aedc55e2d6e2e5a7636c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30530298" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncodingProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncodingProvider abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет базовый класс для поставщика кодировки, обеспечивающего кодировки, недоступные в определенной платформе.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поставщик кодировки предоставляет кодировки, которые иначе недоступны на определенной платформе.  
  
 Платформа .NET Framework, на рабочем столе Windows поддерживает большое количество символов кодировки и кодовые страницы. Полный список доступных в .NET Framework кодировках можно получить на рабочем столе Windows, вызвав <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> метод. .NET core с другой стороны, по умолчанию поддерживает только следующие кодировки:  
  
-   ASCII (кодовая страница 20127), который возвращается методом <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> свойство.  
  
-   ISO-8859-1 (кодовой страницы 28591).  
  
-   UTF-7 (кодовая страница 65000), который возвращается методом <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> свойство.  
  
-   UTF-8 (кодовая страница 65001), который возвращается методом <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> свойство.  
  
-   UTF-16 и UTF-16LE (кодовая страница 1200), который возвращается методом <xref:System.Text.Encoding.Unicode%2A> свойство.  
  
-   UTF-16BE (кодовая страница 1201), который создается путем вызова <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> или <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> конструктор с `bigEndian` значение `true`.  
  
-   UTF-32 и UTF-32LE (кодовая страница 12000), который возвращается методом <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> свойство.  
  
-   UTF-32BE (кодовая страница 12001), который создается путем вызова <xref:System.Text.UTF32Encoding> конструктор, который имеет `bigEndian` параметр и возвращает значение из `true` в вызове метода.  
  
 Начиная с .NET Framework 4.6 <xref:System.Text.EncodingProvider> является базовым классом, который делает недоступной кодировок, доступных в .NET Framework. Это включает следующие шаги:  
  
1.  Определить подкласс <xref:System.Text.EncodingProvider> , переопределяющий два абстрактного <xref:System.Text.EncodingProvider.GetEncoding%2A> перегрузок, <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> и <xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>. Эти перегрузки возвращают в противном случае значение не поддерживается кодировка идентификатор кодовой страницы, а по имени. Обратите внимание, что можно также вернуть значение по умолчанию кодирования, если <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> метод вызывается с аргументом 0.  
  
2.  При необходимости можно переопределить виртуальный <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> и <xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> методы. В большинстве случаев это не требуется, так как базовый класс предоставляет реализацию по умолчанию.  
  
3.  Передайте <xref:System.Text.EncodingProvider> экземпляр <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> метод для приготовления кодировок, предоставляемые <xref:System.Text.EncodingProvider> объект, доступный в среде CLR.  
  
4.  Вызовите <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> перегрузку, чтобы получить кодировку. <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> Вызывает соответствующий метод <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> для определения ли оно может предоставлять запрошенной кодировки.  
  
 Библиотеки классов .NET Framework предоставляет один статическое свойство <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>, возвращающий <xref:System.Text.EncodingProvider> объект, который создает полный набор кодировок на системная библиотека классов .NET Framework для [!INCLUDE[net_core](~/includes/net-core-md.md)] приложений. Кроме того, можно создавать производные <xref:System.Text.EncodingProvider> класса для предоставления собственных кодировки.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncodingProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncodingProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.EncodingProvider" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает кодировку.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage">Идентификатор кодовой страницы запрошенной кодировки.</param>
        <summary>Возвращает кодировку, связанную с указанным идентификатором кодовой страницы.</summary>
        <returns>Кодировка, связанная с указанной кодовой страницей, или <see langword="null" />, если этот поставщик <see cref="T:System.Text.EncodingProvider" /> не может вернуть допустимую кодировку, соответствующую <paramref name="codepage" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks

### <a name="notes-to-inheritors"></a>Примечания для наследующих объектов

Переопределите [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) метод для возврата кодировку или кодировках, поддерживаемых вашей <xref:System.Text.EncodingProvider> подкласс. Когда пользовательский код пытается извлечь кодирования, вызвав [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) метод, метод передает `codepage` идентификатор для каждого зарегистрированного поставщика кодировки, пока один возвращает допустимую кодировку. Если ни одна не возвращает допустимую кодировку, [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) метод пытается получить кэшированных кодировка которого идентификатор кодовой страницы — `codepage`. По этой причине при `codepage` не является идентификатор кодовой страницы кодировки, которые поддерживаются, метод должен вернуть `null`; он никогда не должно создавать исключения.
        
Обратите внимание, что можно также вернуть кодовую страницу по умолчанию, если значение `codepage` аргумент равен 0.

## <a name="notes-to-callers"></a>Примечания к вызывающим объектам
        
Этот метод вызывается методом [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) метод. Его не следует вызывать непосредственно из кода пользователя.

        ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Переопределите <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> метод для возврата кодировку или кодировках, поддерживаемых вашей <see cref="T:System.Text.EncodingProvider" /> подкласс. Когда пользовательский код пытается извлечь кодирования, вызвав <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> метод, метод передает <paramref name="codepage" /> идентификатор для каждого зарегистрированного поставщика кодировки, пока один возвращает допустимую кодировку. Если ни одна не возвращает допустимую кодировку, <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> метод пытается получить кэшированных кодировка которого идентификатор кодовой страницы — <paramref name="codepage" />. По этой причине при <paramref name="codepage" /> не является идентификатор кодовой страницы кодировки, которые поддерживаются, метод должен вернуть <see langword="null" />; он никогда не должно создавать исключения.</para>
        </block>
        <block subset="none" type="usage">
          <para>Этот метод вызывается методом <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> метод. Его не следует вызывать непосредственно из кода пользователя.</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя запрошенной кодировки.</param>
        <summary>Возвращает кодировку с указанным именем.</summary>
        <returns>Кодировка, связанная с указанным именем, или <see langword="null" />, если этот поставщик <see cref="T:System.Text.EncodingProvider" /> не может вернуть допустимую кодировку, соответствующую <paramref name="name" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 
      
## <a name="notes-to-inheritors"></a>Примечания для наследующих объектов 
                  
Переопределите [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) метод для возврата кодировку или кодировках, поддерживаемых вашей <xref:System.Text.EncodingProvider> подкласс. Когда пользовательский код пытается извлечь кодирования, вызвав [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) метод, метод передает `name` аргумент для каждого зарегистрированного поставщика кодировки, пока один возвращает допустимую кодировку. Если ни одна не возвращает допустимую кодировку, [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) метод пытается получить кэшированных кодировка, имя которого `name`. По этой причине при `name` не является именем кодировки, которые поддерживаются, метод должен вернуть `null`. Единственный случай, в котором метод должен создать исключение — если `name` — `null`.

## <a name="notes-to-callers"></a>Примечания к вызывающим объектам

Этот метод вызывается методом [Encoding.GetEncoding(String)](<xref:System.Text.Encoding.GetEncoding(System.String)>) метод. Его не следует вызывать непосредственно из кода пользователя.
        ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Переопределите <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> метод для возврата кодировку или кодировках, поддерживаемых вашей <see cref="T:System.Text.EncodingProvider" /> подкласс. Когда пользовательский код пытается извлечь кодирования, вызвав <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> метод, метод передает <paramref name="name" /> аргумент для каждого зарегистрированного поставщика кодировки, пока один возвращает допустимую кодировку. Если ни одна не возвращает допустимую кодировку, <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> метод пытается получить кэшированных кодировка, имя которого <paramref name="name" />. По этой причине при <paramref name="name" /> не является именем кодировки, которые поддерживаются, метод должен вернуть <see langword="null" />. Единственный случай, в котором метод должен создать исключение — если <paramref name="name" /> — <see langword="null" />.</para>
        </block>
        <block subset="none" type="usage">
          <para>Этот метод вызывается методом <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> метод. Его не следует вызывать непосредственно из кода пользователя.</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(int codepage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage">Идентификатор кодовой страницы запрошенной кодировки.</param>
        <param name="encoderFallback">Объект, предоставляющий процедуру обработки ошибок, когда символ не может быть закодирован с использованием этой кодировки.</param>
        <param name="decoderFallback">Объект, предоставляющий процедуру обработки ошибок, когда последовательность байтов не может быть декодирована с использованием этой кодировки.</param>
        <summary>Возвращает кодировку, связанную с указанным идентификатором кодовой страницы. С помощью параметров задается обработчик ошибок для символов, которые не удается закодировать, и последовательностей байтов, которые не удается декодировать.</summary>
        <returns>Кодировка, связанная с указанной кодовой страницей, или <see langword="null" />, если этот поставщик <see cref="T:System.Text.EncodingProvider" /> не может вернуть допустимую кодировку, соответствующую <paramref name="codepage" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `encoderFallback` И `decoderFallback` параметры являются объектами, которые определяют резервную стратегию, используемую в случае, если кодировщик не удается преобразовать символ в последовательность байтов или декодер не может преобразовать последовательность байтов в символ. .NET Framework предоставляет следующие резервные механизмы.  
  
-   Резервная стратегия исключения. Если `encoderFallback` аргумент является экземпляром класса <xref:System.Text.EncoderExceptionFallback>, или `decoderExceptionFallback` аргумент является экземпляром класса <xref:System.Text.DecoderExceptionFallback>, метод шифрования вызывает исключение, если символы не удается закодировать, и декодирования метод вызывает исключение, если байт не удается декодировать последовательность.  
  
-   Стратегия замены. Если `encoderFallback` аргумент является экземпляром класса <xref:System.Text.EncoderReplacementFallback>, или `decoderExceptionFallback` аргумент является экземпляром класса <xref:System.Text.DecoderReplacementFallback>, методы кодирования и декодирования заменить строку замены для символов, которые не удается закодировать, и последовательностей байтов не может быть декодировать. Если резервный объект замены создан путем вызова конструктора по умолчанию, — замещающий символ «?». При вызове метода <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> или <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> конструктор, можно указать строку замены.  
  
-   Резервная стратегия наилучшего соответствия. Можно наследовать от <xref:System.Text.EncoderFallback> или <xref:System.Text.DecoderFallback> класса для реализации механизма наилучшего замены.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Так как вызов этого метода использует вашу реализацию <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> метод, не нужно переопределить его. Когда пользовательский код пытается извлечь кодирования, вызвав <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> метод, метод передает <paramref name="codepage" /> идентификатор для каждого зарегистрированного поставщика кодировки, пока один возвращает допустимую кодировку. Если ни одна не возвращает допустимую кодировку, <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> метод пытается получить кэшированных кодировка которого идентификатор кодовой страницы — <paramref name="codepage" />. По этой причине при выборе для переопределения <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> метод, переопределенный должен возвращать <see langword="null" /> Если <paramref name="codepage" /> не идентификатор кодовой страницы кодировки, поддерживаемые; он никогда не должно создавать исключения.</para>
        </block>
        <block subset="none" type="usage">
          <para>Этот метод вызывается методом <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> метод. Его не следует вызывать непосредственно из кода пользователя.</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(System::String ^ name, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name">Имя предпочтительной кодировки.</param>
        <param name="encoderFallback">Объект, предоставляющий процедуру обработки ошибок, когда символ не может быть закодирован с использованием этой кодировки.</param>
        <param name="decoderFallback">Объект, предоставляющий процедуру обработки ошибок, когда последовательность байтов не может быть декодирована с использованием текущей кодировки.</param>
        <summary>Возвращает кодировку, связанную с заданным именем. С помощью параметров задается обработчик ошибок для символов, которые не удается закодировать, и последовательностей байтов, которые не удается декодировать.</summary>
        <returns>Кодировка, связанная с указанным именем, или <see langword="null" />, если этот поставщик <see cref="T:System.Text.EncodingProvider" /> не может вернуть допустимую кодировку, соответствующую <paramref name="name" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `encoderFallback` И `decoderFallback` параметры являются объектами, которые определяют резервную стратегию, используемую в случае, если кодировщик не удается преобразовать символ в последовательность байтов или декодер не может преобразовать последовательность байтов в символ. .NET Framework предоставляет следующие резервные механизмы.  
  
-   Резервная стратегия исключения. Если `encoderFallback` аргумент является экземпляром класса <xref:System.Text.EncoderExceptionFallback>, или `decoderExceptionFallback` аргумент является экземпляром класса <xref:System.Text.DecoderExceptionFallback>, метод шифрования вызывает исключение, если символы не удается закодировать, и декодирования метод вызывает исключение, если байт не удается декодировать последовательность.  
  
-   Стратегия замены. Если `encoderFallback` аргумент является экземпляром класса <xref:System.Text.EncoderReplacementFallback>, или `decoderExceptionFallback` аргумент является экземпляром класса <xref:System.Text.DecoderReplacementFallback>, методы кодирования и декодирования заменить строку замены для символов, которые не удается закодировать, и последовательностей байтов не может быть декодировать. Если резервный объект замены создан путем вызова конструктора по умолчанию, — замещающий символ «?». При вызове метода <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> или <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> конструктор, можно указать строку замены.  
  
-   Резервная стратегия наилучшего соответствия. Можно наследовать от <xref:System.Text.EncoderFallback> или <xref:System.Text.DecoderFallback> класса для реализации механизма наилучшего замены.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Так как вызов этого метода использует вашу реализацию <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> метод, не нужно переопределить его. Когда пользовательский код пытается извлечь кодирования, вызвав <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> метод, метод передает <paramref name="codepage" /> идентификатор для каждого зарегистрированного поставщика кодировки, пока один возвращает допустимую кодировку. Если ни одна не возвращает допустимую кодировку, <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> метод пытается получить кэшированных кодировка которого идентификатор кодовой страницы — <paramref name="codepage" />. По этой причине при выборе для переопределения <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> метод, переопределенный должен возвращать <see langword="null" /> Если <paramref name="codepage" /> не идентификатор кодовой страницы кодировки, поддерживаемые; он никогда не должно создавать исключения.</para>
        </block>
        <block subset="none" type="usage">
          <para>Этот метод вызывается методом <see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> метод. Его не следует вызывать непосредственно из кода пользователя.</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
  </Members>
</Type>