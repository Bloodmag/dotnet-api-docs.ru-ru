<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UTF32Encoding.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b5c8f619a477fdc9f8a9bc17d4405164f258102c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b5c8f619a477fdc9f8a9bc17d4405164f258102c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.UTF32Encoding">
          <source>Represents a UTF-32 encoding of Unicode characters.</source>
          <target state="translated">Представляет кодировку символов Юникода в формате UTF-32.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</source>
          <target state="translated">Кодирование - это процесс преобразования набора символов Юникода в последовательность байтов.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</source>
          <target state="translated">Декодирование представляет собой процесс преобразования последовательности закодированных байтов в набор символов Юникода.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>The <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> assigns a code point (a number) to each character in every supported script.</source>
          <target state="translated"><bpt id="p1">[</bpt>Стандарт Юникод<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> назначает каждому символу в каждом поддерживаемом символьном кодовая точка (номер).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>A Unicode Transformation Format (UTF) is a way to encode that code point.</source>
          <target state="translated">Формат преобразования Юникода (UTF) способ кодирования кодовой точки.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>The <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> uses the following UTFs:</source>
          <target state="translated"><bpt id="p1">[</bpt>Стандарт Юникод<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> использует следующие форматы UTF:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>UTF-8, which represents each code point as a sequence of one to four bytes.</source>
          <target state="translated">UTF-8, который представляет каждую кодовую точку в виде последовательности от одного до четырех байтов.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>UTF-16, which represents each code point as a sequence of one to two 16-bit integers.</source>
          <target state="translated">UTF-16, который представляет каждую кодовую точку в виде последовательности из одной или двух 16-битовых целых чисел.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>UTF-32, which represents each code point as a 32-bit integer.</source>
          <target state="translated">UTF-32, который представляет каждую кодовую точку как 32-разрядное целое число.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>For more information about the UTFs and other encodings supported by <ph id="ph1">&lt;xref:System.Text&gt;</ph>, see .</source>
          <target state="translated">Дополнительные сведения о UTF и других кодировках, поддерживаемых <ph id="ph1">&lt;xref:System.Text&gt;</ph>, см.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> class represents a UTF-32 encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> Класс представляет кодировку UTF-32.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>The encoder can use the big endian byte order (most significant byte first) or the little endian byte order (least significant byte first).</source>
          <target state="translated">Кодировщик может использовать обратный порядок байтов (самый старший байт первый) или в прямом порядке байтов (младший байт первый).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>For example, the Latin Capital Letter A (code point U+0041) is serialized as follows (in hexadecimal):</source>
          <target state="translated">Например прописная латинская буква (кодовая точка U + 0041) сериализуется как выглядит следующим образом (в шестнадцатеричном формате).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Big endian byte order: 00 00 00 41</source>
          <target state="translated">Обратный порядок байтов: 00 00 00 41</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Little endian byte order: 41 00 00 00</source>
          <target state="translated">Прямом порядке байтов: 41 00 00 00</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>It is generally more efficient to store Unicode characters using the native byte order.</source>
          <target state="translated">Может оказаться более эффективным, для хранения символов Юникода с использованием собственного порядка байтов.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</source>
          <target state="translated">Например лучше использовать прямом порядке байтов на платформах с прямым порядком, таких как компьютеры Intel.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source><ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> corresponds to the Windows code pages 12000 (little endian byte order) and 12001 (big endian byte order).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> соответствует кодовых страниц Windows 12000 (прямом порядке байтов) и 12001 (обратный порядок байтов).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>You can determine the "endianness" of a particular architecture by calling the <ph id="ph1">&lt;xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">«Порядок байтов» конкретной архитектуры можно определить, вызвав <ph id="ph1">&lt;xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Optionally, the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</source>
          <target state="translated">При необходимости <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> объект предоставляет метку порядка байтов (BOM), который является массивом байтов, которые может иметь префикс в последовательность байтов, полученных в результате кодирования.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>If the preamble contains a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF of a byte array.</source>
          <target state="translated">Если преамбула содержит метку порядка байтов (BOM), декодер получает возможность определить порядок следования байтов и формат преобразования или UTF массива байтов.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>If the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> instance is configured to provide a BOM, you can retrieve it by calling the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetPreamble%2A&gt;</ph> method; otherwise, the method returns an empty array.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> экземпляр настроен для поддержки Спецификации, его можно получить, вызвав <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetPreamble%2A&gt;</ph> метода; в противном случае метод возвращает пустой массив.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Note that, even if a <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding&gt;</ph> class do not do this automatically.</source>
          <target state="translated">Обратите внимание, что даже если <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> настроен для поддержки Спецификации объект, необходимо включить BOM в начале потока закодированных байтов в виде соответствующих; методы кодирования <ph id="ph2">&lt;xref:System.Text.UTF32Encoding&gt;</ph> класса не делать это автоматически.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>To enable error detection and to make the class instance more secure, you should instantiate a <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph> constructor and setting its <ph id="ph3">`throwOnInvalidBytes`</ph> argument to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Чтобы включить обнаружение ошибок и защищенности экземпляра класса, следует создать экземпляр <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> путем вызова метода <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph> конструктор и параметр его <ph id="ph3">`throwOnInvalidBytes`</ph> аргумент <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>With error detection, a method that detects an invalid sequence of characters or bytes throws an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">Обнаружения ошибок, вызывает метод, который обнаруживает недопустимую последовательность символов или байтов, <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> исключение.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</source>
          <target state="translated">Без обнаружение ошибок исключение не создается и Недопустимая последовательность обычно игнорируется.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM), whether you want big-endian or little-endian encoding, and whether you want to enable error detection.</source>
          <target state="translated">Можно создать экземпляр <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> объекта несколькими способами, в зависимости от того, требуется ли он для предоставления метку порядка байтов (BOM), нужно ли кодировку с прямым или обратным порядком байтов и того, требуется ли включить функцию обнаружения ошибок.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>The following table lists the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> constructors and the <ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph> properties that return a <ph id="ph3">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> object.</source>
          <target state="translated">В следующей таблице перечислены <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> конструкторы и <ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph> свойства, которые возвращают <ph id="ph3">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Member</source>
          <target state="translated">Член</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Endianness</source>
          <target state="translated">Порядок байтов</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>BOM</source>
          <target state="translated">СПЕЦИФИКАЦИИ</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Error detection</source>
          <target state="translated">Обнаружение ошибок</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Little-endian</source>
          <target state="translated">Обратный порядок байтов</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Yes</source>
          <target state="translated">Да</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>No (Replacement fallback)</source>
          <target state="translated">Нет (стратегия замены)</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Little-endian</source>
          <target state="translated">Обратный порядок байтов</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Yes</source>
          <target state="translated">Да</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>No (Replacement fallback)</source>
          <target state="translated">Нет (стратегия замены)</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Configurable</source>
          <target state="translated">Возможность настройки</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Configurable</source>
          <target state="translated">Возможность настройки</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>No (Replacement fallback)</source>
          <target state="translated">Нет (стратегия замены)</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Configurable</source>
          <target state="translated">Возможность настройки</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Configurable</source>
          <target state="translated">Возможность настройки</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Configurable</source>
          <target state="translated">Возможность настройки</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method determines how many bytes result in encoding a set of Unicode characters, and the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> method performs the actual encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> Метод определяет, сколько байт привести кодировании набора символов Юникода и <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> метод выполняет фактической кодировкой.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> method determines how many characters result in decoding a sequence of bytes, and the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.GetString%2A&gt;</ph> methods perform the actual decoding.</source>
          <target state="translated">Аналогичным образом <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> метод определяет, сколько символов привести декодировании последовательности байтов и <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph> и <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.GetString%2A&gt;</ph> методы выполняют фактическое декодирование.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> properties, respectively.</source>
          <target state="translated">Для кодировщика или декодера, который может сохранить сведения о состоянии при кодирования или декодирования данных, занимающих несколько блоков (например, строка 1 миллиона символов, закодированные в сегменты 100 000 символов), используйте <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> свойства, соответственно.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>The following example demonstrates the behavior of <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> objects with and without error detection enabled.</source>
          <target state="translated">В следующем примере показано поведение <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> объекты с и без обнаружение ошибок включено.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>It creates a byte array whose last four bytes represent an invalid surrogate pair; the high surrogate U+D8FF is followed by an U+01FF, which is outside the range of low surrogates (0xDC00 through 0xDFFF).</source>
          <target state="translated">Создает массив байтов, в которых последние четыре байта представляют недействительной суррогатной пары; старший заместитель U + D8FF следуют U + 01FF, который находится вне диапазона суррогаты низкий (0xDC00 до 0xDFFF).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>Without error detection, the UTF32 decoder uses replacement fallback to replace the invalid surrogate pair with REPLACEMENT CHARACTER (U+FFFD).</source>
          <target state="translated">Без обнаружения ошибки декодер UTF32 использует резервную стратегию замены для замены недействительной суррогатной пары замещающим символом (U + FFFD).</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>The following example encodes a string of Unicode characters into a byte array by using a <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> object.</source>
          <target state="translated">В следующем примере кодируется строка символов Юникода в массив байтов с помощью <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>The byte array is then decoded into a string to demonstrate that there is no loss of data.</source>
          <target state="translated">Массив байтов, затем декодируется в строку, чтобы показать, что без потери данных.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>The following example uses the same string as the previous one, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</source>
          <target state="translated">В следующем примере та же строка на предыдущий, за исключением того, он записывает закодированных байтов в файл и добавляет в поток байтов с отметкой порядка байтов (BOM).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>It then reads the file in two different ways: as a text file by using a <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> object; and as a binary file.</source>
          <target state="translated">Затем он считывает из файла двумя различными способами: как текстовый файл с помощью <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> объекту и как двоичный файл.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.UTF32Encoding">
          <source>As you would expect, in neither case is the BOM included in the newly read string.</source>
          <target state="translated">Как и следовало ожидать в случае ни Спецификации включается в вновь чтения строки.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="T:System.Text.UTF32Encoding">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.#ctor">
          <source>This constructor creates an instance that uses the little endian byte order, provides a Unicode byte order mark, and does not throw an exception when an invalid encoding is detected.</source>
          <target state="translated">Этот конструктор создает экземпляр, который используется в прямом порядке байтов, предоставляет метку порядка байтов Юникода и не выдает исключение при обнаружении недопустимой кодировки.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.#ctor">
          <source>For security reasons, you should enable error detection by calling the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph> constructor and setting its <ph id="ph2">`throwOnInvalidCharacters`</ph> argument to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">По соображениям безопасности следует включить обнаружение ошибок путем вызова <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph> конструктор и присвоения его <ph id="ph2">`throwOnInvalidCharacters`</ph> аргумент <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.#ctor">
          <source>The following example retrieves and displays the byte order mark for different <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> instances.</source>
          <target state="translated">Следующий пример извлекает и отображает порядок байтов пометить для разных <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> экземпляров.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use the big endian byte order (most significant byte first), or <ph id="ph2">&lt;see langword="false" /&gt;</ph> to use the little endian byte order (least significant byte first).</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> соответствует использованию обратного порядка байтов (самый старший байт располагается на первом месте); значение <ph id="ph2">&lt;see langword="false" /&gt;</ph> соответствует использованию прямого порядка байтов (на первом месте находится самый младший байт).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that a Unicode byte order mark is provided; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> указывает, что предоставляется метка порядка байтов Юникода; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>Parameters specify whether to use the big endian byte order and whether the <ph id="ph1">&lt;see cref="M:System.Text.UTF32Encoding.GetPreamble" /&gt;</ph> method returns a Unicode Unicode byte order mark.</source>
          <target state="translated">Параметры указывают, следует ли использовать обратный порядок байтов и возвращает ли метод <ph id="ph1">&lt;see cref="M:System.Text.UTF32Encoding.GetPreamble" /&gt;</ph> метку порядка байтов Юникода.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</source>
          <target state="translated">Этот конструктор создает экземпляр, который не выдает исключение при обнаружении недопустимой кодировки.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>For security reasons, you should enable error detection by calling the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph> constructor and setting its <ph id="ph2">`throwOnInvalidCharacters`</ph> argument to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">По соображениям безопасности следует включить обнаружение ошибок путем вызова <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph> конструктор и присвоения его <ph id="ph2">`throwOnInvalidCharacters`</ph> аргумент <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)">
          <source>The following example retrieves and displays the byte order mark for different <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> instances.</source>
          <target state="translated">Следующий пример извлекает и отображает порядок байтов пометить для разных <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> экземпляров.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use the big endian byte order (most significant byte first), or <ph id="ph2">&lt;see langword="false" /&gt;</ph> to use the little endian byte order (least significant byte first).</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> соответствует использованию обратного порядка байтов (самый старший байт располагается на первом месте); значение <ph id="ph2">&lt;see langword="false" /&gt;</ph> соответствует использованию прямого порядка байтов (на первом месте находится самый младший байт).</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that a Unicode byte order mark is provided; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> указывает, что предоставляется метка порядка байтов Юникода; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, чтобы указать, что следует выдавать исключение при обнаружении недопустимой кодировки; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</source>
          <target state="translated">Параметры указывают, следует ли использовать обратный порядок байтов, должна ли предоставляться метка порядка байтов Юникода и следует ли создавать исключение при обнаружении недопустимой кодировки.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>If <ph id="ph1">`throwOnInvalidCharacters`</ph> is <ph id="ph2">`true`</ph>, a method that detects an invalid byte sequence throws <ph id="ph3">&lt;xref:System.ArgumentException?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Если <ph id="ph1">`throwOnInvalidCharacters`</ph> — <ph id="ph2">`true`</ph>, вызывает метод, обнаруживающий недопустимые последовательности байтов <ph id="ph3">&lt;xref:System.ArgumentException?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</source>
          <target state="translated">В противном случае этот метод создает исключение, и Недопустимая последовательность игнорируется.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>For security reasons, you should enable error detection by calling the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph> constructor and setting its <ph id="ph2">`throwOnInvalidCharacters`</ph> argument to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">По соображениям безопасности следует включить обнаружение ошибок путем вызова <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph> конструктор и присвоения его <ph id="ph2">`throwOnInvalidCharacters`</ph> аргумент <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>The following example demonstrates the behavior of <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph>, both with error detection enabled and without.</source>
          <target state="translated">В следующем примере показано поведение <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph>, как с обнаружение ошибок включено, так и без.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with the current object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, который требуется сравнить с текущим объектом.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.Equals(System.Object)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> is equal to the current <ph id="ph2">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> object.</source>
          <target state="translated">Определяет, равен ли заданный объект <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> текущему объекту <ph id="ph2">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is an instance of <ph id="ph3">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> and is equal to the current object; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если <ph id="ph2">&lt;paramref name="value" /&gt;</ph> является экземпляром класса <ph id="ph3">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> и равен текущему объекту; в противном случае — значение <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.Equals(System.Object)">
          <source>Two <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> objects are considered equal if all of the following conditions are true:</source>
          <target state="translated">Два <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> объекты считаются равными, если выполняются все следующие условия:</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.Equals(System.Object)">
          <source>Both objects use the same byte order.</source>
          <target state="translated">Оба объекта используют одинаковый порядок следования байтов.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.Equals(System.Object)">
          <source>Both objects provide the byte order mark, or both do not.</source>
          <target state="translated">Оба объекта предоставляться метка порядка байтов или оба — нет.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.Equals(System.Object)">
          <source>Both objects use the same encoder fallback.</source>
          <target state="translated">Оба объекта используют одинаковые резерва кодировщика.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.Equals(System.Object)">
          <source>Both objects use the same decoder fallback.</source>
          <target state="translated">Оба объекта используют же резервный декодера.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.Equals(System.Object)">
          <source>The following example creates <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> objects using different parameter values and then checks them for equality.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> объекты с помощью различных параметров, значений и затем выполняется их проверка на равенство.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="T:System.Text.UTF32Encoding">
          <source>Calculates the number of bytes produced by encoding a set of characters.</source>
          <target state="translated">Подсчитывает количество байтов, полученных при кодировании набора символов.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the set of characters to encode.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, содержащий кодируемый набор символов.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>Calculates the number of bytes produced by encoding the characters in the specified <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Вычисляет количество байтов, полученных при кодировании символов в заданном объекте <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">Число байтов, полученных при кодировании заданных символов.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, you call the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить размер точное массива, необходимого <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> для хранения полученные байты, вызов <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить максимальный размер массива, вызовите <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> Метод обычно выделяет меньше памяти, пока <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> обычно выполняется быстрее.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>With error detection, an invalid sequence causes this method to throw a <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</source>
          <target state="translated">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно задать префикс закодированных байтов преамбулу в виде потока.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Вставка преамбулу в начале потока байтов (например, в начале последовательности байтов для записи в файл) ответственность разработчика и число байтов в преамбула не отражаются в значение, возвращаемое <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29&gt;</ph> methods to calculate the maximum and actual number of bytes required to encode a string.</source>
          <target state="translated">В следующем примере вызывается <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29&gt;</ph> методы для вычисления фактического и максимального числа байтов, необходимых для кодирования строки.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>It also displays the actual number of bytes required to store a byte stream with a byte order mark.</source>
          <target state="translated">Он также отображает фактическое число байтов, необходимое для хранения потока данных с отметкой порядка байтов.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="s" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="s" /&gt;</ph> contains an invalid sequence of characters.</source>
          <target state="translated">Обнаружение ошибок включено, и <ph id="ph1">&lt;paramref name="s" /&gt;</ph> содержит недопустимую последовательность символов.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Произошел откат (полное объяснение см. в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>).</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>A pointer to the first character to encode.</source>
          <target state="translated">Указатель на первый кодируемый символ.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">Число кодируемых символов.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</source>
          <target state="translated">Вычисляет число байтов, полученных при кодировании набора символов начиная с заданного указателя символа.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">Число байтов, полученных при кодировании заданных символов.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, you call the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить размер точное массива, необходимого <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> для хранения полученные байты, вызов <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">Чтобы вычислить максимальный размер массива, вызовите <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> Метод обычно выделяет меньше памяти, пока <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> обычно выполняется быстрее.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</source>
          <target state="translated">Чтобы обеспечить правильное декодирование закодированных байтов если они сохраняются как файл или поток, можно задать префикс закодированных байтов преамбулу в виде потока.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Вставка преамбулу в начале потока байтов (например, в начале последовательности байтов для записи в файл) ответственность разработчика и число байтов в преамбула не отражаются в значение, возвращаемое <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="count" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> contains an invalid sequence of characters.</source>
          <target state="translated">Обнаружение ошибок включено, и <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> содержит недопустимую последовательность символов.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Произошел откат (полное объяснение см. в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>).</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">требуется полное доверие для непосредственно вызывающего метода.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Этот член не может использоваться частично доверенным или прозрачным кодом.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The character array containing the set of characters to encode.</source>
          <target state="translated">Массив символов, содержащий набор кодируемых символов.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">Индекс первого кодируемого символа.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">Число кодируемых символов.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>Calculates the number of bytes produced by encoding a set of characters from the specified character array.</source>
          <target state="translated">Вычисляет число байтов, полученных при кодировании набора символов из указанного массива символов.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">Число байтов, полученных при кодировании заданных символов.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, you call the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить размер точное массива, необходимого <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> для хранения полученные байты, вызов <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить максимальный размер массива, вызовите <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> Метод обычно выделяет меньше памяти, пока <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> обычно выполняется быстрее.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw a <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</source>
          <target state="translated">Чтобы обеспечить правильное декодирование закодированных байтов если они сохраняются как файл или поток, можно задать префикс закодированных байтов преамбулу в виде потока.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Вставка преамбулу в начале потока байтов (например, в начале последовательности байтов для записи в файл) ответственность разработчика и число байтов в преамбула не отражаются в значение, возвращаемое <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The following example populates an array with a Latin uppercase and lowercase characters and calls the <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method to determine the number of bytes needed to encode the Latin lowercase characters.</source>
          <target state="translated">В следующем примере заполняется массив с латиница прописные и строчные буквы и вызовы <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> метод для определения числа байтов, необходимое для кодирования латинские символы нижнего регистра.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>It then displays this information along with the total number of bytes needed if a byte order mark is added.</source>
          <target state="translated">Затем отображается эти сведения, а также общее число байтов, которые требуются при добавлении метку порядка следования байтов.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>It compares this number with the value returned by the <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A&gt;</ph> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</source>
          <target state="translated">Он сравнивает это значение со значения, возвращенного <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A&gt;</ph> метода, который указывает максимальное число байтов, необходимых для кодирования латинские символы нижнего регистра.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The following example populates an array with a combination of Greek and Cyrillic characters and calls the <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method to determine the number of bytes needed to encode the Cyrillic characters.</source>
          <target state="translated">В следующем примере заполняется массив с сочетания символов греческий и кириллица и вызывает <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> метод для определения числа байтов, необходимое для кодирования символов кириллицы.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>It then displays this information along with the total number of bytes needed if a byte order mark is added.</source>
          <target state="translated">Затем отображается эти сведения, а также общее число байтов, которые требуются при добавлении метку порядка следования байтов.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>It compares this number with the value returned by the <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A&gt;</ph> method, which indicates maximum number of bytes needed to encode the Cyrillic characters.</source>
          <target state="translated">Он сравнивает это значение со значения, возвращенного <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A&gt;</ph> метода, который указывает максимальное число байтов, необходимых для кодирования символов кириллицы.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated">Параметры <ph id="ph1">&lt;paramref name="index" /&gt;</ph> и <ph id="ph2">&lt;paramref name="count" /&gt;</ph> не указывают допустимый диапазон в <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> contains an invalid sequence of characters.</source>
          <target state="translated">Обнаружение ошибок включено, и <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> содержит недопустимую последовательность символов.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Произошел откат (полное объяснение см. в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>).</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="T:System.Text.UTF32Encoding">
          <source>Encodes a set of characters into a sequence of bytes.</source>
          <target state="translated">Кодирует набор символов в последовательность байтов.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A pointer to the first character to encode.</source>
          <target state="translated">Указатель на первый кодируемый символ.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">Число кодируемых символов.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A pointer to the location at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">Указатель на положение, с которого начинается запись результирующей последовательности байтов.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">Максимальное число байтов для записи.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</source>
          <target state="translated">Кодирует набор символов, начало которого задается указателем символа, в последовательность байтов, которые сохраняются начиная с заданного указателя байта.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The actual number of bytes written at the location indicated by the <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> parameter.</source>
          <target state="translated">Фактическое число байтов, записанных в местоположение, которое задано параметром <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, you call the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить размер точное массива, необходимого <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> для хранения полученные байты, вызов <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить максимальный размер массива, вызовите <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> Метод обычно выделяет меньше памяти, пока <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> обычно выполняется быстрее.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw a <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">Данные для преобразования, например чтение данных из потока, могут быть доступны только в виде последовательных блоков.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">В этом случае или если объем данных слишком велико, что необходимо разделить на более мелкие блоки, приложение использует <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> или <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> , предоставляемые <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> метода или <ph id="ph4">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> метода, соответственно.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</source>
          <target state="translated">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно задать префикс закодированных байтов преамбулу в виде потока.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</source>
          <target state="translated">Вставка преамбулу в начале байтового потока (например, в начале последовательности байтов для записи в файл) ответственность разработчика.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> Метод не добавить заголовок в начало последовательность закодированных байтов.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> или <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> contains an invalid sequence of characters.</source>
          <target state="translated">Обнаружение ошибок включено, и <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> содержит недопустимую последовательность символов.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> is less than the resulting number of bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> меньше результирующего числа байтов.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Произошел откат (полное объяснение см. в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>).</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">требуется полное доверие для непосредственно вызывающего метода.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Этот член не может использоваться частично доверенным или прозрачным кодом.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The character array containing the set of characters to encode.</source>
          <target state="translated">Массив символов, содержащий набор кодируемых символов.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">Индекс первого кодируемого символа.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">Число кодируемых символов.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The byte array to contain the resulting sequence of bytes.</source>
          <target state="translated">Массив байтов, в который будет помещена результирующая последовательность байтов.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">Индекс, с которого начинается запись результирующей последовательности байтов.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Encodes a set of characters from the specified character array into the specified byte array.</source>
          <target state="translated">Кодирует набор символов из заданного массива символов в указанный массив байтов.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The actual number of bytes written into <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">Фактическое число байтов, записанных в <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, you call the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить размер точное массива, необходимого <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> для хранения полученные байты, вызов <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить максимальный размер массива, вызовите <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> Метод обычно выделяет меньше памяти, пока <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> обычно выполняется быстрее.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw a <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">Данные для преобразования, например чтение данных из потока, могут быть доступны только в виде последовательных блоков.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">В этом случае или если объем данных слишком велико, что необходимо разделить на более мелкие блоки, приложение использует <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> или <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> , предоставляемые <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> метода или <ph id="ph4">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> метода, соответственно.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</source>
          <target state="translated">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно задать префикс закодированных байтов преамбулу в виде потока.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</source>
          <target state="translated">Вставка преамбулу в начале байтового потока (например, в начале последовательности байтов для записи в файл) ответственность разработчика.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> Метод не добавить заголовок в начало последовательность закодированных байтов.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following example determines the number of bytes required to encode three characters from a character array, then encodes the characters and displays the resulting bytes.</source>
          <target state="translated">В следующем примере определяет число байтов, необходимое для кодирования трех символов из массива символов, затем выполняется кодирование символов и отображаются полученные байты.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> или <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated">Параметры <ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> и <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> не указывают допустимый диапазон в <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> не является допустимым индексом в <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> contains an invalid sequence of characters.</source>
          <target state="translated">Обнаружение ошибок включено, и <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> содержит недопустимую последовательность символов.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> to the end of the array to accommodate the resulting bytes.</source>
          <target state="translated">Недостаточно емкости <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> от <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> до конца массива для размещения полученных байтов.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Произошел откат (полное объяснение см. в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>).</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the set of characters to encode.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, содержащий кодируемый набор символов.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">Индекс первого кодируемого символа.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">Число кодируемых символов.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The byte array to contain the resulting sequence of bytes.</source>
          <target state="translated">Массив байтов, в который будет помещена результирующая последовательность байтов.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">Индекс, с которого начинается запись результирующей последовательности байтов.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Encodes a set of characters from the specified <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> into the specified byte array.</source>
          <target state="translated">Кодирует набор символов из заданного объекта <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> в указанный массив байтов.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The actual number of bytes written into <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">Фактическое число байтов, записанных в <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, you call the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить размер точное массива, необходимого <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> для хранения полученные байты, вызов <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить максимальный размер массива, вызовите <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> Метод обычно выделяет меньше памяти, пока <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> обычно выполняется быстрее.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw a <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">Данные для преобразования, например чтение данных из потока, могут быть доступны только в виде последовательных блоков.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">В этом случае или если объем данных слишком велико, что необходимо разделить на более мелкие блоки, приложение использует <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> или <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> , предоставляемые <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> метода или <ph id="ph4">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> метода, соответственно.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</source>
          <target state="translated">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно задать префикс закодированных байтов преамбулу в виде потока.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</source>
          <target state="translated">Вставка преамбулу в начале байтового потока (например, в начале последовательности байтов для записи в файл) ответственность разработчика.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> Метод не добавить заголовок в начало последовательность закодированных байтов.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</source>
          <target state="translated">В следующем примере определяет число байтов, необходимых для кодирования строки, а затем кодирует строку и выводит полученные байты.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="s" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> или <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated">Параметры <ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> и <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> не указывают допустимый диапазон в <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> не является допустимым индексом в <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="s" /&gt;</ph> contains an invalid sequence of characters.</source>
          <target state="translated">Обнаружение ошибок включено, и <ph id="ph1">&lt;paramref name="s" /&gt;</ph> содержит недопустимую последовательность символов.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> to the end of the array to accommodate the resulting bytes.</source>
          <target state="translated">Недостаточно емкости <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> от <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> до конца массива для размещения полученных байтов.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Произошел откат (полное объяснение см. в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>).</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="T:System.Text.UTF32Encoding">
          <source>Calculates the number of characters produced by decoding a sequence of bytes.</source>
          <target state="translated">Вычисляет количество символов, полученных при декодировании последовательности байтов.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>A pointer to the first byte to decode.</source>
          <target state="translated">Указатель на первый декодируемый байт.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Число байтов для декодирования.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</source>
          <target state="translated">Вычисляет количество символов, полученных при декодировании последовательности байтов начиная с заданного указателя байта.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The number of characters produced by decoding the specified sequence of bytes.</source>
          <target state="translated">Число символов, полученных при декодировании заданной последовательности байтов.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> calculates the exact array size required by the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph> method to store the resulting characters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> вычисляет размер точное массива, необходимого <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph> для сохранения полученных символов.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>To calculate the maximum array size, call the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить максимальный размер массива, вызовите <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> Метод обычно выделяет меньше памяти, пока <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> обычно выполняется быстрее.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw a <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="count" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> contains an invalid sequence of bytes.</source>
          <target state="translated">Обнаружение ошибок включено, и параметр <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> содержит недопустимую последовательность байтов.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Произошел откат (полное объяснение см. в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>).</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">требуется полное доверие для непосредственно вызывающего метода.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Этот член не может использоваться частично доверенным или прозрачным кодом.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">Индекс первого декодируемого байта.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Число байтов для декодирования.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</source>
          <target state="translated">Вычисляет количество символов, полученных при декодировании последовательности байтов из заданного массива байтов.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The number of characters produced by decoding the specified sequence of bytes.</source>
          <target state="translated">Число символов, полученных при декодировании заданной последовательности байтов.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> method calculates the exact array size required by the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph> method to store the resulting characters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> Метод вычисляет размер точное массива, необходимого <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph> для сохранения полученных символов.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>To calculate the maximum array size, call the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить максимальный размер массива, вызовите <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> Метод обычно выделяет меньше памяти, пока <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> обычно выполняется быстрее.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw a <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</source>
          <target state="translated">В следующем примере кодирует строку в массив байтов и затем декодирует байты в массив символов.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">Параметры <ph id="ph1">&lt;paramref name="index" /&gt;</ph> и <ph id="ph2">&lt;paramref name="count" /&gt;</ph> не указывают допустимый диапазон в <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> contains an invalid sequence of bytes.</source>
          <target state="translated">Обнаружение ошибок включено, и параметр <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> содержит недопустимую последовательность байтов.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Произошел откат (полное объяснение см. в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>).</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="T:System.Text.UTF32Encoding">
          <source>Decodes a sequence of bytes into a set of characters.</source>
          <target state="translated">Декодирует последовательность байтов в набор символов.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A pointer to the first byte to decode.</source>
          <target state="translated">Указатель на первый декодируемый байт.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Число байтов для декодирования.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A pointer to the location at which to start writing the resulting set of characters.</source>
          <target state="translated">Указатель на положение, с которого начинается запись результирующего набора символов.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">Наибольшее количество символов для записи.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</source>
          <target state="translated">Декодирует последовательность байтов, начало которой задается указателем байта, в набор символов, которые сохраняются начиная с заданного указателя символа.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The actual number of characters written at the location indicated by <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated">Фактическое число символов, записанных в местоположение, указанное с помощью параметра <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph> to store the resulting characters, call the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить размер точное массива, необходимого <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph> для хранения полученных символов, вызовите <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>To calculate the maximum array size, call the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить максимальный размер массива, вызовите <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> Метод обычно выделяет меньше памяти, пока <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> обычно выполняется быстрее.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw a <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</source>
          <target state="translated">Если массив байтов был возвращен методом виду не Спецификации типа диапазона байтов для декодирования включает отметку порядка байтов (BOM), символ U + FFFE включается в массив символов, возвращаемый этим методом.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>You can remove it by calling the <ph id="ph1">&lt;xref:System.String.TrimStart%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Его можно удалить путем вызова <ph id="ph1">&lt;xref:System.String.TrimStart%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">Данные для преобразования, например чтение данных из потока, могут быть доступны только в виде последовательных блоков.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">В этом случае или если объем данных слишком велико, что необходимо разделить на более мелкие блоки, приложение использует <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> или <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> , предоставляемые <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> метода или <ph id="ph4">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> метода, соответственно.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> или <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> contains an invalid sequence of bytes.</source>
          <target state="translated">Обнаружение ошибок включено, и параметр <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> содержит недопустимую последовательность байтов.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than the resulting number of characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> меньше результирующего числа символов.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Произошел откат (полное объяснение см. в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>).</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">требуется полное доверие для непосредственно вызывающего метода.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Этот член не может использоваться частично доверенным или прозрачным кодом.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">Индекс первого декодируемого байта.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Число байтов для декодирования.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The character array to contain the resulting set of characters.</source>
          <target state="translated">Массив символов, в который будет помещен результирующий набор символов.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The index at which to start writing the resulting set of characters.</source>
          <target state="translated">Индекс, с которого начинается запись результирующего набора символов.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Decodes a sequence of bytes from the specified byte array into the specified character array.</source>
          <target state="translated">Декодирует последовательность байтов из заданного массива байтов в указанный массив символов.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The actual number of characters written into <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated">Фактическое число символов, записанных в <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph> to store the resulting characters, call the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить размер точное массива, необходимого <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph> для хранения полученных символов, вызовите <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>To calculate the maximum array size, call the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить максимальный размер массива, вызовите <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> Метод обычно выделяет меньше памяти, пока <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> обычно выполняется быстрее.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw a <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</source>
          <target state="translated">Если массив байтов был возвращен методом виду не Спецификации типа диапазона байтов для декодирования включает отметку порядка байтов (BOM), символ U + FFFE включается в массив символов, возвращаемый этим методом.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>You can remove it by calling the <ph id="ph1">&lt;xref:System.String.TrimStart%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Его можно удалить путем вызова <ph id="ph1">&lt;xref:System.String.TrimStart%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">Данные для преобразования, например чтение данных из потока, могут быть доступны только в виде последовательных блоков.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">В этом случае или если объем данных слишком велико, что необходимо разделить на более мелкие блоки, приложение использует <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> или <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> , предоставляемые <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> метода или <ph id="ph4">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> метода, соответственно.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</source>
          <target state="translated">В следующем примере кодирует строку в массив байтов и затем декодирует байты в массив символов.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> или <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">Параметры <ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> и <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> не указывают допустимый диапазон в <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> не является допустимым индексом в <ph id="ph2">&lt;paramref name="chars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> contains an invalid sequence of bytes.</source>
          <target state="translated">Обнаружение ошибок включено, и параметр <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> содержит недопустимую последовательность байтов.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> to the end of the array to accommodate the resulting characters.</source>
          <target state="translated">Недостаточно емкости <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> от <ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> до конца массива для размещения полученных символов.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Произошел откат (полное объяснение см. в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>).</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetDecoder">
          <source>Obtains a decoder that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</source>
          <target state="translated">Получает средство декодирования, преобразующее последовательность байтов в кодировке UTF-32 в последовательность символов Юникода.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetDecoder">
          <source>A <ph id="ph1">&lt;see cref="T:System.Text.Decoder" /&gt;</ph> that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Text.Decoder" /&gt;</ph>, преобразующий последовательность байтов в кодировке UTF-32 в последовательность символов Юникода.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetDecoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType&gt;</ph> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType&gt;</ph> Метод преобразует последовательные блоки байтов в последовательные блоки символов в так же, как <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetDecoder">
          <source>However, a <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> maintains state information between calls so it can correctly decode byte sequences that span blocks.</source>
          <target state="translated">Однако <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> хранит сведения о состоянии между вызовами, что позволяет ему правильно декодировать последовательности байтов, охватывающие блоки.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetDecoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> Также сохраняет замыкающие байты в конце блоков данных и использует конечные байты при следующей операции декодирования.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetDecoder">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</source>
          <target state="translated">Таким образом <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> полезны для передачи по сети и операции с файлами, так как эти операции часто работают с блоками данных, а не полные данные потока.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetDecoder">
          <source>If error detection is enabled, that is, the <ph id="ph1">`throwOnInvalidCharacters`</ph> parameter of the constructor was set to <ph id="ph2">`true`</ph>, error detection is also enabled in the <ph id="ph3">&lt;xref:System.Text.Decoder&gt;</ph> returned by this method.</source>
          <target state="translated">Если обнаружение ошибок включено, то есть <ph id="ph1">`throwOnInvalidCharacters`</ph> было присвоено значение параметра конструктора <ph id="ph2">`true`</ph>, также включена функция обнаружения ошибок в <ph id="ph3">&lt;xref:System.Text.Decoder&gt;</ph> возвращаемый этим методом.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetDecoder">
          <source>If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</source>
          <target state="translated">Если включена функция обнаружения ошибок и обнаружена недопустимая последовательность, состояние декодера является неопределенным и обработка должна быть остановлена.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetDecoder">
          <source>The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</source>
          <target state="translated">В следующем примере кодировщик и декодер для кодирования строки в массив байтов и затем декодирования байтов в массив символов.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetEncoder">
          <source>Obtains an encoder that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</source>
          <target state="translated">Получает средство кодирования, преобразующее последовательность символов Юникода в последовательность байтов в кодировке UTF-32.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetEncoder">
          <source>A <ph id="ph1">&lt;see cref="T:System.Text.Encoder" /&gt;</ph> that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Text.Encoder" /&gt;</ph>, преобразующий последовательность символов Юникода в последовательность байтов в кодировке UTF-32.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetEncoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType&gt;</ph> Метод преобразует последовательные блоки символов в последовательные блоки байтов таким способом, аналогичным <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetEncoder">
          <source>However, a <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> maintains state information between calls so it can correctly encode character sequences that span blocks.</source>
          <target state="translated">Однако <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> хранит сведения о состоянии между вызовами, что позволяет правильно кодировать последовательности символов, охватывающие блоки.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetEncoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> Также сохраняет замыкающие символы в конце блоков данных и использует замыкающие символы при выполнении следующей операции кодирования.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetEncoder">
          <source>For example, a data block might end with an unmatched high-surrogate, and the matching low-surrogate might be in the next data block.</source>
          <target state="translated">Например может оказаться, что блок данных с несоответствиями старший символ-заместитель и сопоставления младшим символом-заместителем может находиться в следующем блоке данных.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetEncoder">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</source>
          <target state="translated">Таким образом <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> полезны для передачи по сети и операции с файлами, так как эти операции часто работают с блоками данных, а не полные данные потока.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetEncoder">
          <source>If error detection is enabled, that is, the <ph id="ph1">`throwOnInvalidCharacters`</ph> parameter of the constructor was set to <ph id="ph2">`true`</ph>, error detection is also enabled in the <ph id="ph3">&lt;xref:System.Text.Encoder&gt;</ph> returned by this method.</source>
          <target state="translated">Если обнаружение ошибок включено, то есть <ph id="ph1">`throwOnInvalidCharacters`</ph> было присвоено значение параметра конструктора <ph id="ph2">`true`</ph>, также включена функция обнаружения ошибок в <ph id="ph3">&lt;xref:System.Text.Encoder&gt;</ph> возвращаемый этим методом.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetEncoder">
          <source>If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</source>
          <target state="translated">Если включена функция обнаружения ошибок и обнаружена недопустимая последовательность, состояние кодировщика является неопределенным и обработка должна быть остановлена.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetEncoder">
          <source>The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</source>
          <target state="translated">В следующем примере кодировщик и декодер для кодирования строки в массив байтов и затем декодирования байтов в массив символов.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetHashCode">
          <source>Returns the hash code for the current instance.</source>
          <target state="translated">Возвращает хэш-код текущего экземпляра.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetHashCode">
          <source>The hash code for the current <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> object.</source>
          <target state="translated">Хэш-код для текущего объекта <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">Число кодируемых символов.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>Calculates the maximum number of bytes produced by encoding the specified number of characters.</source>
          <target state="translated">Вычисляет максимальное количество байтов, полученных при кодировании заданного числа символов.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>The maximum number of bytes produced by encoding the specified number of characters.</source>
          <target state="translated">Максимальное количество байтов, полученных при кодировании заданного количества символов.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> to store the resulting bytes, you call the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить размер точное массива, необходимого <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> для хранения полученные байты, вызов <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить максимальный размер массива, вызовите <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> Метод обычно выделяет меньше памяти, пока <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> обычно выполняется быстрее.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> is a worst-case number, including the worst case for the currently selected <ph id="ph2">&lt;xref:System.Text.EncoderFallback&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> — Это худший число, включая Наихудший случай для выбранного в данный момент <ph id="ph2">&lt;xref:System.Text.EncoderFallback&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>If a fallback is chosen with a potentially large string,  <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> can return large values.</source>
          <target state="translated">Если выбран резервный вариант с потенциально длинной строкой <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> может возвращать большие значения.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>In most cases, this method returns reasonable numbers for small strings.</source>
          <target state="translated">В большинстве случаев этот метод возвращает адекватные числа для коротких строк.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</source>
          <target state="translated">Для больших строк необходимо выбирать между использованием очень больших буферов и отслеживанием ошибок в тех редких случаях, более рационального буфера превышено.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>You might also want to consider a different approach and use <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Можно также использовать другой подход и использовать <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> has no relationship to <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph> не имеет отношения к <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>If you need a similar function to use with <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph>, use <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">Если требуется подобная функция, для использования с <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph>, используйте <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">`GetMaxByteCount(N)`</ph> is not necessarily the same value as <ph id="ph2">`N* GetMaxByteCount(1)`</ph>.</source>
          <target state="translated"><ph id="ph1">`GetMaxByteCount(N)`</ph> не обязательно совпадает со значением <ph id="ph2">`N* GetMaxByteCount(1)`</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</source>
          <target state="translated">В следующем примере определяет число байтов, необходимых для кодирования строки, а затем кодирует строку и выводит полученные байты.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Произошел откат (полное объяснение см. в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>).</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Число байтов для декодирования.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>Calculates the maximum number of characters produced by decoding the specified number of bytes.</source>
          <target state="translated">Вычисляет максимальное количество символов, полученных при декодировании заданного числа байтов.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>The maximum number of characters produced by decoding the specified number of bytes.</source>
          <target state="translated">Максимальное количество символов, полученных при декодировании заданного количества байтов.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph> to store the resulting characters, you call the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить размер точное массива, необходимого <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetChars%2A&gt;</ph> для хранения полученных символов, вызовите <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>To calculate the maximum array size, you call the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы вычислить максимальный размер массива, вызовите <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> Метод обычно выделяет меньше памяти, пока <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> обычно выполняется быстрее.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> is a worst-case number, including the worst case for the currently selected <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> — Это худший число, включая Наихудший случай для выбранного в данный момент <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>If a fallback is chosen with a potentially large string, <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> can return large values.</source>
          <target state="translated">Если выбран резервный вариант с потенциально длинной строкой <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> может возвращать большие значения.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>In most cases, this method returns reasonable numbers for small strings.</source>
          <target state="translated">В большинстве случаев этот метод возвращает адекватные числа для коротких строк.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</source>
          <target state="translated">Для больших строк необходимо выбирать между использованием очень больших буферов и отслеживанием ошибок в тех редких случаях, более рационального буфера превышено.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>You might also want to consider a different approach and use <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph>.</source>
          <target state="translated">Можно также использовать другой подход и использовать <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetCharCount%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> has no relationship to <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetMaxCharCount%2A&gt;</ph> не имеет отношения к <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>If you need a similar function to use with <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph>, use <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">Если требуется подобная функция, для использования с <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph>, используйте <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetMaxByteCount%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">`GetMaxCharCount(N)`</ph> is not necessarily the same value as <ph id="ph2">`N* GetMaxCharCount(1)`</ph>.</source>
          <target state="translated"><ph id="ph1">`GetMaxCharCount(N)`</ph> не обязательно совпадает со значением <ph id="ph2">`N* GetMaxCharCount(1)`</ph>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</source>
          <target state="translated">В следующем примере кодирует строку в массив байтов и затем декодирует байты в массив символов.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">Результирующее число байтов больше максимального количества, которое можно вернуть как целочисленное значение.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">Произошел откат (полное объяснение см. в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>).</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>Returns a Unicode byte order mark encoded in UTF-32 format, if the <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> object is configured to supply one.</source>
          <target state="translated">Возвращает метку порядка байтов Юникода в кодировке UTF-32, если объект <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> настроен для ее предоставления.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>A byte array containing the Unicode byte order mark, if the <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> object is configured to supply one.</source>
          <target state="translated">Массив байтов, содержащий метку порядка байтов Юникода, если объект <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> настроен для его предоставления.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>Otherwise, this method returns a zero-length byte array.</source>
          <target state="translated">В противном случае этот метод возвращает массив байтов нулевой длины.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>The <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> object can provide a preamble, which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> Объект может предоставлять преамбулу, который является массивом байтов, которые может иметь префикс в последовательность байтов, полученных в результате кодирования.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>Prefacing a sequence of encoded bytes with a byte order mark (code points U+0000 U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</source>
          <target state="translated">Предшествующим последовательность закодированных байтов с отметкой порядка байтов (U + 0000 U + FEFF кодовые точки) декодер может определить порядок байтов и формат преобразования или UTF.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</source>
          <target state="translated">Метка порядка байтов (BOM) Юникода сериализуется следующим образом (в шестнадцатеричном формате):</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>Big endian byte order: 00 00 FE FF</source>
          <target state="translated">Обратный порядок байтов: 00 00 FE FF</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>Little endian byte order: FF FE 00 00</source>
          <target state="translated">Прямом порядке байтов: FF FE 00 00</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> object whose <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetPreamble%2A&gt;</ph> method returns a valid BOM in the following ways:</source>
          <target state="translated">Можно создать экземпляр <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> которого <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetPreamble%2A&gt;</ph> метод возвращает допустимый Спецификации одним из следующих способов:</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Путем получения <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> объект, возвращаемый <ph id="ph2">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>By calling the parameterless <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.%23ctor&gt;</ph> constructor to instantiate a <ph id="ph2">&lt;xref:System.Text.UTF32Encoding&gt;</ph> object.</source>
          <target state="translated">Путем вызова без параметров <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.%23ctor&gt;</ph> конструктора для создания <ph id="ph2">&lt;xref:System.Text.UTF32Encoding&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>By supplying <ph id="ph1">`true`</ph> as the value of the <ph id="ph2">`byteOrderMark`</ph> argument to the <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.%23ctor%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Text.UTF32Encoding.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">Указав <ph id="ph1">`true`</ph> в качестве значения <ph id="ph2">`byteOrderMark`</ph> аргумент <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.%23ctor%2A&gt;</ph> и <ph id="ph4">&lt;xref:System.Text.UTF32Encoding.%23ctor%2A&gt;</ph> конструкторы.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>We recommend that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost reference to the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> object, for example, untagged or improperly tagged web data, or random text files stored when a business did not have international concerns or other data.</source>
          <target state="translated">Мы рекомендуем использовать Спецификации, поскольку она обеспечивает почти точную идентификацию кодировки для файлов, в противном случае теряют ссылку на <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> объекта, например, без тега или неправильно отмечен веб-данных или хранятся файлы произвольного текста, когда организация не имела расставленными или других данных.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>Often, user problems might be avoided if data is consistently and properly tagged.</source>
          <target state="translated">Часто возникающих пользователя избавить согласованных и правильных тегов в данных.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>For standards that provide an encoding type, a BOM is somewhat redundant.</source>
          <target state="translated">Для стандартов, предоставляющих тип кодировки метка BOM отчасти избыточный.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>However, it can be used to help a server send the correct encoding header.</source>
          <target state="translated">Тем не менее он может использоваться, чтобы помочь серверу отправлять правильный заголовок кодировки.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</source>
          <target state="translated">Кроме того он может использоваться как переход на резервный ресурс в случае, если кодировка, в противном случае не потеряны.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>There are some disadvantages to using a BOM.</source>
          <target state="translated">Есть некоторые недостатки использования метки порядка БАЙТОВ.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>For example, knowing how to limit the database fields that use a BOM can be difficult.</source>
          <target state="translated">Например сложно выбрать способы ограничения полей базы данных, используйте метки порядка БАЙТОВ.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</source>
          <target state="translated">Объединение файлов может вызвать проблемы также, например, когда файлы сливаются таким образом, что необязательный символ может оказаться в центре данных.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>In spite of the few disadvantages, however, the use of a BOM is highly recommended.</source>
          <target state="translated">Несмотря на некоторые недостатки Однако использование спецификации настоятельно рекомендуется.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>For more information on byte order and the byte order mark, see The Unicode Standard at the <bpt id="p1">[</bpt>Unicode home page<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37123)</ept>.</source>
          <target state="translated">Дополнительные сведения о порядке байтов и метка порядка байтов в разделе Юникод <bpt id="p1">[</bpt>домашней странице Юникода<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37123)</ept>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>To ensure that the encoded bytes are decoded properly, you should prefix encoded bytes with a preamble.</source>
          <target state="translated">Чтобы обеспечить правильное декодирование закодированных байтов, необходимо использовать перед закодированных байтов с начальной части.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>Note that the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</source>
          <target state="translated">Обратите внимание, что <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> метод не добавить метки порядка БАЙТОВ в последовательность закодированных байтов; BOM в начале соответствующие байтового потока является разработчик.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>The following code example retrieves and displays the byte order mark for different <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> instances.</source>
          <target state="translated">Следующие код пример извлекает и отображает порядок байтов пометить для разных <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> экземпляров.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>The following example instantiates two <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> objects, the first of which does not provide a BOM and the second of which does.</source>
          <target state="translated">В следующем примере создается два <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> объектов, в первом из которых не поддерживает Спецификации, а второй — какие не.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetPreamble%2A&gt;</ph> method to write the BOM to a file before writing a UTF-32-encoded string.</source>
          <target state="translated">Затем он вызывает <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetPreamble%2A&gt;</ph> метод для записи BOM в файл перед записью строка в кодировке UTF-32.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>As the output from the example shows, the file that saves the bytes from the second encoder has four more bytes that the first.</source>
          <target state="translated">Как показывают выходные данные примера, файла, содержащего байты из второй кодировщика имеет четыре большее число байтов, первый.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>You can also compare the files by using the <ph id="ph1">`fc`</ph> command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</source>
          <target state="translated">Вы также можете сравнить файлы с помощью <ph id="ph1">`fc`</ph> команду в окне консоли, или можно проверить файлы в текстовом редакторе, который включает режим шестнадцатеричное представление.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetPreamble">
          <source>Note that when the file is opened in an editor that supports UTF-32, the BOM is not displayed.</source>
          <target state="translated">Обратите внимание, что когда файл открыт в редакторе, который поддерживает UTF-32, Спецификации не отображается.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">Массив байтов, содержащий последовательность байтов, которую требуется декодировать.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">Индекс первого декодируемого байта.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">Число байтов для декодирования.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Decodes a range of bytes from a byte array into a string.</source>
          <target state="translated">Декодирует диапазон байтов из массива байтов в строку.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>A string that contains the results of decoding the specified sequence of bytes.</source>
          <target state="translated">Строка, содержащая результаты декодирования заданной последовательности байтов.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>With error detection, an invalid sequence causes this method to throw a <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Without error detection, invalid sequences are ignored, and no exception is thrown.</source>
          <target state="translated">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>If the range of bytes to be decoded includes the byte order mark (BOM), and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</source>
          <target state="translated">Если диапазон байтов для декодирования включает отметку порядка байтов (BOM), а массив байтов был возвращен методом виду не Спецификации типа, символ U + FFFE включается в массиве символов, возвращаемый этим методом.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>You can remove it by calling the <ph id="ph1">&lt;xref:System.String.TrimStart%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Его можно удалить путем вызова <ph id="ph1">&lt;xref:System.String.TrimStart%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Data to be converted, such as data read from a stream, might be available only in sequential blocks.</source>
          <target state="translated">Данные для преобразования, например чтение данных из потока, могут быть доступны только в виде последовательных блоков.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">В этом случае или если объем данных слишком велико, что необходимо разделить на более мелкие блоки, приложение должно использовать <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> или <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> , предоставляемые <ph id="ph3">&lt;xref:System.Text.UTF32Encoding.GetDecoder%2A&gt;</ph> метода или <ph id="ph4">&lt;xref:System.Text.UTF32Encoding.GetEncoder%2A&gt;</ph> метода, соответственно.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The following example encodes a string into two arrays arrays of bytes, one in little-endian order and the other in big-endian order.</source>
          <target state="translated">Следующий пример кодирует строку в два массива массивов байтов, в прямом порядке и в обратном порядке байтов.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>It then decodes the bytes back into a string.</source>
          <target state="translated">Затем он декодирует байты обратно в строку.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The following example initializes an array by calling the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</source>
          <target state="translated">В следующем примере массив инициализируется путем вызова <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetByteCount%2A&gt;</ph> метод, чтобы определить точно количество байтов перед зашифрованную строку, а затем добавив размер отметку порядка байтов (BOM).</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetPreamble%2A&gt;</ph> method to store the BOM to the array before calling the <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> method to store the encoded bytes to the array.</source>
          <target state="translated">Затем в примере вызывается <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetPreamble%2A&gt;</ph> для сохранения Спецификации массив до вызова метода <ph id="ph2">&lt;xref:System.Text.UTF32Encoding.GetBytes%2A&gt;</ph> метод для хранения закодированных байтов в массив.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetString%2A&gt;</ph> method to decode the string.</source>
          <target state="translated">Затем в примере вызывается <ph id="ph1">&lt;xref:System.Text.UTF32Encoding.GetString%2A&gt;</ph> метод Декодируемая строка.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Note that in this case the decoded string differs from the original string, since it begins with a 32-bit byte order mark U+FFFE U+0000.</source>
          <target state="translated">Обратите внимание, что в этом случае декодированную строку отличается от исходной строки, так как он начинается с метки порядка байтов 32-разрядных U + FFFE U + 0000.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</source>
          <target state="translated">Это означает, что две строки будут неравны и, если строка является выходные данные, Спецификации отображается как замещающий символ «?».</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">Параметры <ph id="ph1">&lt;paramref name="index" /&gt;</ph> и <ph id="ph2">&lt;paramref name="count" /&gt;</ph> не указывают допустимый диапазон в <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Error detection is enabled, and <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> contains an invalid sequence of bytes.</source>
          <target state="translated">Обнаружение ошибок включено, и параметр <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> содержит недопустимую последовательность байтов.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for a complete explanation)</source>
          <target state="translated">Произошел откат (полное объяснение см. в статье <bpt id="p1">[</bpt>Кодировка символов в .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>).</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">- и -</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> задается значение <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>