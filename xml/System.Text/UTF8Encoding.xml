<Type Name="UTF8Encoding" FullName="System.Text.UTF8Encoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c200a67bc75e1bfe3c6bbe71ec68fec34b1455fc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UTF8Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UTF8Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF8Encoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UTF8Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF8Encoding : System::Text::Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2dfb4-101">Represents a UTF-8 encoding of Unicode characters.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2dfb4-101">Represents a UTF-8 encoding of Unicode characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-102">Кодирование - это процесс преобразования набора символов Юникода в последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="2dfb4-103">Декодирование представляет собой процесс преобразования последовательности закодированных байтов в набор символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="2dfb4-104">Том UTF-8, Юникод, представляет каждую кодовую точку в виде последовательности от одного до четырех байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-104">UTF-8 is a Unicode encoding that represents each code point as a sequence of one to four bytes.</span></span> <span data-ttu-id="2dfb4-105">В отличие от кодировки UTF-16 и UTF-32 кодировка UTF-8 не требуется «порядок байтов»; схема кодирования одинаково независимо от того, обработчик с прямым или обратным порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-105">Unlike the UTF-16 and UTF-32 encodings, the UTF-8 encoding does not require "endianness"; the encoding scheme is the same regardless of whether the processor is big-endian or little-endian.</span></span> <span data-ttu-id="2dfb4-106"><xref:System.Text.UTF8Encoding> соответствует кодовая страница 65001 Windows.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-106"><xref:System.Text.UTF8Encoding> corresponds to the Windows code page 65001.</span></span> <span data-ttu-id="2dfb4-107">Дополнительные сведения о UTF и других кодировках, поддерживаемых <xref:System.Text>, в разделе [кодировка символов в .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="2dfb4-107">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="2dfb4-108">Можно создать экземпляр <xref:System.Text.UTF8Encoding> объекта несколькими способами, в зависимости от того, требуется ли он для предоставления метку порядка байтов (BOM) и следует ли включить функцию обнаружения ошибок.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-108">You can instantiate a <xref:System.Text.UTF8Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM) and whether you want to enable error detection.</span></span> <span data-ttu-id="2dfb4-109">В следующей таблице перечислены конструкторы и <xref:System.Text.Encoding> свойство, которое возвращает <xref:System.Text.UTF8Encoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-109">The following table lists the constructors and the <xref:System.Text.Encoding> property that return a <xref:System.Text.UTF8Encoding> object.</span></span>  
  
|<span data-ttu-id="2dfb4-110">Член</span><span class="sxs-lookup"><span data-stu-id="2dfb4-110">Member</span></span>|<span data-ttu-id="2dfb4-111">СПЕЦИФИКАЦИИ</span><span class="sxs-lookup"><span data-stu-id="2dfb4-111">BOM</span></span>|<span data-ttu-id="2dfb4-112">Обнаружение ошибок</span><span class="sxs-lookup"><span data-stu-id="2dfb4-112">Error detection</span></span>|  
|------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>|<span data-ttu-id="2dfb4-113">Да</span><span class="sxs-lookup"><span data-stu-id="2dfb4-113">Yes</span></span>|<span data-ttu-id="2dfb4-114">Нет (стратегия замены)</span><span class="sxs-lookup"><span data-stu-id="2dfb4-114">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="2dfb4-115">Нет</span><span class="sxs-lookup"><span data-stu-id="2dfb4-115">No</span></span>|<span data-ttu-id="2dfb4-116">Нет (стратегия замены)</span><span class="sxs-lookup"><span data-stu-id="2dfb4-116">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="2dfb4-117">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="2dfb4-117">Configurable</span></span>|<span data-ttu-id="2dfb4-118">Нет (стратегия замены)</span><span class="sxs-lookup"><span data-stu-id="2dfb4-118">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="2dfb4-119">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="2dfb4-119">Configurable</span></span>|<span data-ttu-id="2dfb4-120">Возможность настройки</span><span class="sxs-lookup"><span data-stu-id="2dfb4-120">Configurable</span></span>|  
  
 <span data-ttu-id="2dfb4-121"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод определяет, сколько байт привести кодировании набора символов Юникода и <xref:System.Text.UTF8Encoding.GetBytes%2A> метод выполняет фактической кодировкой.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-121">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF8Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="2dfb4-122">Аналогичным образом <xref:System.Text.UTF8Encoding.GetCharCount%2A> метод определяет, сколько символов привести декодировании последовательности байтов и <xref:System.Text.UTF8Encoding.GetChars%2A> и <xref:System.Text.UTF8Encoding.GetString%2A> методы выполняют фактическое декодирование.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-122">Likewise, the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF8Encoding.GetChars%2A> and <xref:System.Text.UTF8Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="2dfb4-123">Для кодировщика или декодера, который может сохранить сведения о состоянии при кодирования или декодирования данных, занимающих несколько блоков (например, строка 1 миллиона символов, закодированные в сегменты 100 000 символов), используйте <xref:System.Text.UTF8Encoding.GetEncoder%2A> и <xref:System.Text.UTF8Encoding.GetDecoder%2A> свойства, соответственно.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-123">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF8Encoding.GetEncoder%2A> and <xref:System.Text.UTF8Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="2dfb4-124">При необходимости <xref:System.Text.UTF8Encoding> объект предоставляет метку порядка байтов (BOM), который является массивом байтов, которые может иметь префикс в начало потока, полученного в результате кодирования.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-124">Optionally, the <xref:System.Text.UTF8Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the beginning of the byte stream that results from the encoding process.</span></span> <span data-ttu-id="2dfb4-125">Если потока байтов в кодировке UTF-8, используемое метку порядка байтов (BOM), декодер получает возможность определить порядок следования байтов и формат преобразования или UTF.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-125">If a UTF-8 encoded byte stream is prefaced with a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="2dfb4-126">Обратите внимание, что стандарт Юникод не требуется, а также Корпорация Майкрософт рекомендует метки порядка БАЙТОВ в кодировке UTF-8 в кодировке потоки.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-126">Note, however, that the Unicode Standard neither requires nor recommends a BOM in UTF-8 encoded streams.</span></span> <span data-ttu-id="2dfb4-127">Дополнительные сведения о порядке байтов и метка порядка байтов в разделе Юникод [домашней странице Юникода](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="2dfb4-127">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
 <span data-ttu-id="2dfb4-128">Если кодировщик настроен для поддержки Спецификации, его можно получить, вызвав <xref:System.Text.UTF8Encoding.GetPreamble%2A> метода; в противном случае метод возвращает пустой массив.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-128">If the encoder is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="2dfb4-129">Обратите внимание, что даже если <xref:System.Text.UTF8Encoding> настроен для поддержки Спецификации объект, необходимо включить BOM в начале потока закодированных байтов в виде соответствующих; методы кодирования <xref:System.Text.UTF8Encoding> класса не делать это автоматически.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-129">Note that, even if a <xref:System.Text.UTF8Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF8Encoding> class do not do this automatically.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2dfb4-130">Чтобы включить обнаружение ошибок и защищенности экземпляра класса, необходимо вызвать <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> конструктор и задайте `throwOnInvalidBytes` параметр `true`.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-130">To enable error detection and to make the class instance more secure, you should call the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> constructor and set the `throwOnInvalidBytes` parameter to `true`.</span></span> <span data-ttu-id="2dfb4-131">С обнаружение ошибок включено, вызывает метод, который обнаруживает недопустимую последовательность символов или байтов, <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-131">With error detection enabled, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="2dfb4-132">Без обнаружение ошибок исключение не создается и Недопустимая последовательность обычно игнорируется.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-132">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2dfb4-133">Состояние объекта в кодировке UTF-8 не сохраняются, если объект сериализации и десериализации с помощью разных версий платформы .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-133">The state of a UTF-8 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-134">В следующем примере используется <xref:System.Text.UTF8Encoding> объекта для кодирования строки символов Юникода и сохранения их в массив байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-134">The following example uses a <xref:System.Text.UTF8Encoding> object to encode a string of Unicode characters and store them in a byte array.</span></span> <span data-ttu-id="2dfb4-135">Строка Юникода включает два символа, Pi (U + 03A0) и сигма (U + 03A3), которые находятся за пределами диапазона символов ASCII.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-135">The Unicode string includes two characters, Pi (U+03A0) and Sigma (U+03A3), that are outside the ASCII character range.</span></span> <span data-ttu-id="2dfb4-136">Когда закодированный массив байтов декодируется обратно в строку, все еще присутствуют символы Pi и «сигма».</span><span class="sxs-lookup"><span data-stu-id="2dfb4-136">When the encoded byte array is decoded back to a string, the Pi and Sigma characters are still present.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UTF8Encoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="2dfb4-137">В следующем примере та же строка в предыдущем примере, за исключением того, он записывает закодированных байтов в файл и добавляет в поток байтов с отметкой порядка байтов (BOM).</span><span class="sxs-lookup"><span data-stu-id="2dfb4-137">The following example uses the same string as the previous example, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="2dfb4-138">Затем он считывает из файла двумя различными способами: как текстовый файл с помощью <xref:System.IO.StreamReader> объекту и как двоичный файл.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-138">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="2dfb4-139">Как и следовало ожидать в случае ни Спецификации включается в вновь чтения строки.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-139">As you would expect, in neither case is the BOM included in the newly read string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UTF8Encoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoder" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2dfb4-140">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-140">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2dfb4-141">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-141">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-142">Этот конструктор создает экземпляр, который не содержит метку порядка байтов Юникода и не выдает исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-142">This constructor creates an instance that does not provide a Unicode byte order mark and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2dfb4-143">По соображениям безопасности рекомендуется включить функцию обнаружения ошибок путем вызова конструктора с `throwOnInvalidBytes` параметр и присвоить ему значение `true`.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-143">For security reasons, we recommend that you enable error detection by calling a constructor with a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-144">В следующем примере создается новый <xref:System.Text.UTF8Encoding> экземпляра и отображает его имя.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-144">The following example creates a new <xref:System.Text.UTF8Encoding> instance and displays its name.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier">
          <span data-ttu-id="2dfb4-145">
            <see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-145">
              <see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-146">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-146">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
          <span data-ttu-id="2dfb4-147">A parameter specifies whether to provide a Unicode byte order mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-147">A parameter specifies whether to provide a Unicode byte order mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-148">Этот конструктор создает экземпляр, который не выдает исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-148">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2dfb4-149">По соображениям безопасности следует включить обнаружение ошибок путем вызова конструктора, который включает `throwOnInvalidBytes` параметр и присвоить ему значение `true`.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-149">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
 <span data-ttu-id="2dfb4-150">`encoderShouldEmitUTF8Identifier` Параметр управляет работой <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-150">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="2dfb4-151">Если `true`, метод возвращает массив байтов, содержащий отметки порядка байтов (BOM) Юникода в формате UTF-8.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-151">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="2dfb4-152">Если `false`, он возвращает массив байтов нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-152">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="2dfb4-153">Однако задание `encoderShouldEmitUTF8Identifier` для `true` не приводит к <xref:System.Text.UTF8Encoding.GetBytes%2A> метод в качестве префикса BOM в начале массива байтов, ни его причиной <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод, чтобы включить число байтов в Спецификации в счетчик байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-153">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-154">В следующем примере создается новый <xref:System.Text.UTF8Encoding> экземпляр и указывает, что префикс метки порядка байтов Юникода должен быть задействован <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-154">The following example creates a new <xref:System.Text.UTF8Encoding> instance and specifies that a Unicode byte order mark prefix should be emitted by the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="2dfb4-155"><xref:System.Text.UTF8Encoding.GetPreamble%2A> Возвращает префикс метки порядка байтов Юникода.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-155">The <xref:System.Text.UTF8Encoding.GetPreamble%2A> method then returns the Unicode byte order mark prefix.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CPP/ctor-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CS/ctor-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/VB/ctor-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier">
          <span data-ttu-id="2dfb4-156">
            <see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method should return a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-156">
              <see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method should return a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="throwOnInvalidBytes">
          <span data-ttu-id="2dfb4-157">
            <see langword="true" /> to throw an exception when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-157">
              <see langword="true" /> to throw an exception when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-158">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-158">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
          <span data-ttu-id="2dfb4-159">Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-159">Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-160">`encoderShouldEmitUTF8Identifier` Параметр управляет работой <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-160">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="2dfb4-161">Если `true`, метод возвращает массив байтов, содержащий отметки порядка байтов (BOM) Юникода в формате UTF-8.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-161">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="2dfb4-162">Если `false`, он возвращает массив байтов нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-162">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="2dfb4-163">Однако задание `encoderShouldEmitUTF8Identifier` для `true` не приводит к <xref:System.Text.UTF8Encoding.GetBytes%2A> метод в качестве префикса BOM в начале массива байтов, ни его причиной <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод, чтобы включить число байтов в Спецификации в счетчик байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-163">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="2dfb4-164">Если `throwOnInvalidBytes` — `true`, вызывает метод, обнаруживающий недопустимые последовательности байтов <xref:System.ArgumentException?displayProperty=nameWithType> исключение.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-164">If `throwOnInvalidBytes` is `true`, a method that detects an invalid byte sequence throws an <xref:System.ArgumentException?displayProperty=nameWithType> exception.</span></span> <span data-ttu-id="2dfb4-165">В противном случае этот метод создает исключение, и Недопустимая последовательность игнорируется.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-165">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2dfb4-166">По соображениям безопасности следует включить обнаружение ошибок путем вызова конструктора, который включает `throwOnInvalidBytes` параметр и присвоить этому параметру `true`.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-166">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting that parameter to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-167">В следующем примере создается новый <xref:System.Text.UTF8Encoding> экземпляра, определяющая, что <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод не должен выдавать префикса метки порядка байтов Юникода и должно быть исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-167">The following example creates a new <xref:System.Text.UTF8Encoding> instance, specifying that the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method should not emit a Unicode byte order mark prefix, and an exception should be thrown when an invalid encoding is detected.</span></span> <span data-ttu-id="2dfb4-168">Поведение данного конструктора можно сравнить значения по умолчанию <xref:System.Text.UTF8Encoding.%23ctor> конструктор, который не выдает исключение при обнаружении недопустимой кодировки.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-168">The behavior of this constructor is compared to the default <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not throw an exception when an invalid encoding is detected.</span></span> <span data-ttu-id="2dfb4-169">Два <xref:System.Text.UTF8Encoding> экземпляров кодирования массив символов, содержит два суррогаты высокого уровня (U + D801 и U + D802) в строке, которая имеет недопустимую последовательность символов; старшим символом-заместителем всегда должны идти младшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-169">The two <xref:System.Text.UTF8Encoding> instances encode a character array that contains two high surrogates (U+D801 and U+D802) in a row, which is an invalid character sequence; a high surrogate should always be followed by a low surrogate.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2dfb4-170">The object to compare with the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-170">The object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-171">Determines whether the specified object is equal to the current <see cref="T:System.Text.UTF8Encoding" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-171">Determines whether the specified object is equal to the current <see cref="T:System.Text.UTF8Encoding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-172">
            <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF8Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-172">
              <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF8Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-173">Два <xref:System.Text.UTF8Encoding> объекты считаются равными, если выполняются все следующие условия:</span><span class="sxs-lookup"><span data-stu-id="2dfb4-173">Two <xref:System.Text.UTF8Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="2dfb4-174">Оба объекта предоставляться метка порядка байтов или оба — нет.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-174">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="2dfb4-175">Оба объекта используют одинаковые резерва кодировщика.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-175">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="2dfb4-176">Оба объекта используют же резервный декодера.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-176">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-177">В следующем примере используется <xref:System.Text.UTF8Encoding.Equals%2A> тестируемого метода ли текущий <xref:System.Text.UTF8Encoding> объект равен другой <xref:System.Text.UTF8Encoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-177">The following example uses the <xref:System.Text.UTF8Encoding.Equals%2A> method to test whether the current <xref:System.Text.UTF8Encoding> object is equal to a different <xref:System.Text.UTF8Encoding> object.</span></span> <span data-ttu-id="2dfb4-178">Четыре <xref:System.Text.UTF8Encoding> объекты создаются и сравнивать и отображаются результаты сравнения.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-178">Four <xref:System.Text.UTF8Encoding> objects are created and compared and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CPP/equals-object.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CS/equals-object.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/VB/equals-object.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2dfb4-179">Calculates the number of bytes produced by encoding a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-179">Calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="2dfb4-180">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-180">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-181">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-181">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-182">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-182">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-183">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.UTF8Encoding.GetBytes%2A> для хранения полученные байты, вызов <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-183">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2dfb4-184">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-184">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2dfb4-185"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод обычно выделяет меньше памяти, пока <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-185">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2dfb4-186">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-186">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="2dfb4-187">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-187">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2dfb4-188">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно задать префикс закодированных байтов преамбулу в виде потока.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-188">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="2dfb4-189">Вставка преамбулу в начале потока байтов (например, в начале последовательности байтов для записи в файл) ответственность разработчика и число байтов в преамбула не отражаются в значение, возвращаемое <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-189">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-190">В следующем примере вызывается <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> и <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> методы для вычисления фактического и максимального числа байтов, необходимых для кодирования строки.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-190">The following example calls the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> and <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="2dfb4-191">Он также отображает фактическое число байтов, необходимое для хранения потока данных с отметкой порядка байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-191">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dfb4-192">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-192">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2dfb4-193">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-193">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dfb4-194">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-194">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2dfb4-195">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-195">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="2dfb4-196">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-196">-and-</span>
          </span>
          <span data-ttu-id="2dfb4-197">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-197">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="2dfb4-198">A pointer to the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-198">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2dfb4-199">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-199">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-200">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-200">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-201">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-201">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-202">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.UTF8Encoding.GetBytes%2A> для сохранения полученные байты вызове <xref:System.Text.UTF8Encoding.GetByteCount%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-202">To calculate the exact array size required by the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2dfb4-203">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-203">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2dfb4-204"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод обычно выделяет меньше памяти, пока <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-204">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2dfb4-205">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-205">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="2dfb4-206">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-206">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2dfb4-207">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно задать префикс закодированных байтов преамбулу в виде потока.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-207">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="2dfb4-208">Вставка преамбулу в начале потока байтов (например, в начале последовательности байтов для записи в файл) ответственность разработчика и число байтов в преамбула не отражаются в значение, возвращаемое <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-208">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dfb4-209">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-209">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2dfb4-210">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-210">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2dfb4-211">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-211">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-212">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-212">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dfb4-213">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-213">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2dfb4-214">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-214">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span>
          </span>
          <span data-ttu-id="2dfb4-215">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-215">-and-</span>
          </span>
          <span data-ttu-id="2dfb4-216">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-216">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2dfb4-217">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-217">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2dfb4-218">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-218">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="2dfb4-219">The character array containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-219">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2dfb4-220">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-220">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2dfb4-221">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-221">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-222">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-222">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-223">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-223">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-224">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.UTF8Encoding.GetBytes%2A> для хранения полученные байты, вызов использует <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-224">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the uses <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2dfb4-225">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-225">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2dfb4-226"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод обычно выделяет меньше памяти, пока <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-226">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2dfb4-227">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-227">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="2dfb4-228">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-228">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2dfb4-229">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно задать префикс закодированных байтов преамбулу в виде потока.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-229">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="2dfb4-230">Вставка преамбулу в начале потока байтов (например, в начале последовательности байтов для записи в файл) ответственность разработчика и число байтов в преамбула не отражаются в значение, возвращаемое <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-230">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-231">В следующем примере заполняется массив с латиница прописные и строчные буквы и вызовы <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> метод для определения числа байтов, необходимое для кодирования латинские символы нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-231">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="2dfb4-232">Затем отображается эти сведения, а также общее число байтов, которые требуются при добавлении метку порядка следования байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-232">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="2dfb4-233">Он сравнивает это значение со значения, возвращенного <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метода, который указывает максимальное число байтов, необходимых для кодирования латинские символы нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-233">It compares this number with the value returned by the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dfb4-234">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-234">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2dfb4-235">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-235">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2dfb4-236">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-236">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-237">
            <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-237">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="2dfb4-238">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-238">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-239">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-239">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dfb4-240">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-240">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2dfb4-241">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-241">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="2dfb4-242">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-242">-and-</span>
          </span>
          <span data-ttu-id="2dfb4-243">The <see cref="P:System.Text.Encoding.EncoderFallback" /> property is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-243">The <see cref="P:System.Text.Encoding.EncoderFallback" /> property is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2dfb4-244">Encodes a set of characters into a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-244">Encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="2dfb4-245">A pointer to the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-245">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="2dfb4-246">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-246">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="2dfb4-247">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-247">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="2dfb4-248">The maximum number of bytes to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-248">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-249">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-249">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-250">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-250">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-251">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.UTF8Encoding.GetBytes%2A> для хранения полученные байты, вызов <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-251">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2dfb4-252">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-252">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2dfb4-253"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод обычно выделяет меньше памяти, пока <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-253">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2dfb4-254">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-254">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="2dfb4-255">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-255">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2dfb4-256">Данные для преобразования, например чтение данных из потока, могут быть доступны только в виде последовательных блоков.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-256">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="2dfb4-257">В этом случае или если объем данных слишком велико, что необходимо разделить на более мелкие блоки, используйте <xref:System.Text.Decoder> или <xref:System.Text.Encoder> возвращенных <xref:System.Text.UTF8Encoding.GetDecoder%2A> метода или <xref:System.Text.UTF8Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-257">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> returned by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="2dfb4-258">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно задать префикс закодированных байтов преамбулу в виде потока.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-258">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="2dfb4-259">Вставка преамбулу в начале байтового потока (например, в начале последовательности байтов для записи в файл) ответственность разработчика.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-259">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="2dfb4-260"><xref:System.Text.UTF8Encoding.GetBytes%2A> Метод не добавить заголовок в начало последовательность закодированных байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-260">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dfb4-261">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-261">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2dfb4-262">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-262">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-263">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-263">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2dfb4-264">
            <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-264">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dfb4-265">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-265">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="2dfb4-266">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-266">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-267">
            <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-267">
              <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2dfb4-268">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-268">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="2dfb4-269">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-269">-and-</span>
          </span>
          <span data-ttu-id="2dfb4-270">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-270">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2dfb4-271">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-271">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2dfb4-272">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-272">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="2dfb4-273">The character array containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-273">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="2dfb4-274">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-274">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="2dfb4-275">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-275">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="2dfb4-276">The byte array to contain the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-276">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="2dfb4-277">The index at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-277">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-278">Encodes a set of characters from the specified character array into the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-278">Encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-279">The actual number of bytes written into <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-279">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-280">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.UTF8Encoding.GetBytes%2A> для хранения полученные байты, вызов <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-280">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2dfb4-281">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-281">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2dfb4-282"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод обычно выделяет меньше памяти, пока <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-282">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2dfb4-283">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-283">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="2dfb4-284">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-284">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2dfb4-285">Данные для преобразования, например чтение данных из потока, могут быть доступны только в виде последовательных блоков.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-285">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="2dfb4-286">В этом случае или если объем данных слишком велико, что необходимо разделить на более мелкие блоки, используйте <xref:System.Text.Decoder> или <xref:System.Text.Encoder> , предоставляемые <xref:System.Text.UTF8Encoding.GetDecoder%2A> метода или <xref:System.Text.UTF8Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-286">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="2dfb4-287">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно задать префикс закодированных байтов преамбулу в виде потока.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-287">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="2dfb4-288">Вставка преамбулу в начале байтового потока (например, в начале последовательности байтов для записи в файл) ответственность разработчика.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-288">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="2dfb4-289"><xref:System.Text.UTF8Encoding.GetBytes%2A> Метод не добавить заголовок в начало последовательность закодированных байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-289">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-290">В следующем примере используется <xref:System.Text.UTF8Encoding.GetBytes%2A> метод для кодирования диапазона символов из строки и сохраняет закодированных байтов в диапазоне элементов в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-290">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of characters from a string and stores the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dfb4-291">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-291">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2dfb4-292">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-292">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-293">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-293">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2dfb4-294">
            <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-294">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2dfb4-295">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-295">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-296">
            <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-296">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="2dfb4-297">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-297">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-298">
            <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-298">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dfb4-299">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-299">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="2dfb4-300">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-300">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-301">
            <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-301">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2dfb4-302">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-302">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="2dfb4-303">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-303">-and-</span>
          </span>
          <span data-ttu-id="2dfb4-304">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-304">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2dfb4-305">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-305">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="2dfb4-306">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-306">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="2dfb4-307">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-307">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="2dfb4-308">The byte array to contain the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-308">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="2dfb4-309">The index at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-309">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-310">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-310">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-311">The actual number of bytes written into <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-311">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-312">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.UTF8Encoding.GetBytes%2A> для хранения полученные байты, вызов <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-312">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2dfb4-313">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-313">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2dfb4-314"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод обычно выделяет меньше памяти, пока <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-314">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2dfb4-315">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-315">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="2dfb4-316">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-316">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2dfb4-317">Данные для преобразования, например чтение данных из потока, могут быть доступны только в виде последовательных блоков.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-317">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="2dfb4-318">В этом случае или если объем данных слишком велико, что необходимо разделить на более мелкие блоки, используйте <xref:System.Text.Decoder> или <xref:System.Text.Encoder> , предоставляемые <xref:System.Text.UTF8Encoding.GetDecoder%2A> метода или <xref:System.Text.UTF8Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-318">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="2dfb4-319">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно задать префикс закодированных байтов преамбулу в виде потока.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-319">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="2dfb4-320">Вставка преамбулу в начале байтового потока (например, в начале последовательности байтов для записи в файл) ответственность разработчика.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-320">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="2dfb4-321"><xref:System.Text.UTF8Encoding.GetBytes%2A> Метод не добавить заголовок в начало последовательность закодированных байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-321">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-322">В следующем примере используется <xref:System.Text.UTF8Encoding.GetBytes%2A> способ кодирования диапазон элементов из массива знаков Юникода и сохранение закодированных байтов в диапазоне элементов в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-322">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dfb4-323">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-323">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2dfb4-324">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-324">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-325">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-325">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2dfb4-326">
            <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-326">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2dfb4-327">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-327">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-328">
            <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-328">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="2dfb4-329">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-329">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-330">
            <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-330">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dfb4-331">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-331">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="2dfb4-332">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-332">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-333">
            <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-333">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2dfb4-334">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-334">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="2dfb4-335">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-335">-and-</span>
          </span>
          <span data-ttu-id="2dfb4-336">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-336">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2dfb4-337">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-337">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="2dfb4-338">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-338">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2dfb4-339">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-339">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-340">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-340">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-341">The number of characters produced by decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-341">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-342">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.UTF8Encoding.GetChars%2A> для хранения полученных символов, вызовите <xref:System.Text.UTF8Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-342">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="2dfb4-343">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-343">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="2dfb4-344"><xref:System.Text.UTF8Encoding.GetCharCount%2A> Метод обычно выделяет меньше памяти, пока <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-344">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2dfb4-345">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-345">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="2dfb4-346">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-346">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dfb4-347">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-347">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2dfb4-348">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-348">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2dfb4-349">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-349">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-350">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-350">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dfb4-351">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-351">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="2dfb4-352">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-352">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="2dfb4-353">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-353">-and-</span>
          </span>
          <span data-ttu-id="2dfb4-354">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-354">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2dfb4-355">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-355">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2dfb4-356">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-356">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="2dfb4-357">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-357">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2dfb4-358">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-358">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2dfb4-359">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-359">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-360">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-360">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-361">The number of characters produced by decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-361">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-362">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.UTF8Encoding.GetChars%2A> для хранения полученных символов, вызовите <xref:System.Text.UTF8Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-362">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="2dfb4-363">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-363">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="2dfb4-364"><xref:System.Text.UTF8Encoding.GetCharCount%2A> Метод обычно выделяет меньше памяти, пока <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-364">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2dfb4-365">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-365">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="2dfb4-366">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-366">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-367">В следующем примере используется <xref:System.Text.UTF8Encoding.GetCharCount%2A> метод для возврата числа символов, полученных при декодировании диапазона элементов в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-367">The following example uses the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dfb4-368">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-368">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2dfb4-369">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-369">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2dfb4-370">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-370">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-371">
            <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-371">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="2dfb4-372">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-372">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-373">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-373">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dfb4-374">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-374">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="2dfb4-375">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-375">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="2dfb4-376">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-376">-and-</span>
          </span>
          <span data-ttu-id="2dfb4-377">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-377">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2dfb4-378">Decodes a sequence of bytes into a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-378">Decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="2dfb4-379">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-379">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="2dfb4-380">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-380">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="2dfb4-381">A pointer to the location at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-381">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="2dfb4-382">The maximum number of characters to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-382">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-383">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-383">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-384">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-384">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-385">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.UTF8Encoding.GetChars%2A> для хранения полученных символов, вызовите <xref:System.Text.UTF8Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-385">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="2dfb4-386">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-386">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="2dfb4-387"><xref:System.Text.UTF8Encoding.GetCharCount%2A> Метод обычно выделяет меньше памяти, пока <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-387">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2dfb4-388">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-388">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="2dfb4-389">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-389">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2dfb4-390">Если массив байтов был возвращен методом виду не Спецификации типа диапазона байтов для декодирования включает отметку порядка байтов (BOM), символ U + FFFE включается в массив символов, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-390">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="2dfb4-391">Его можно удалить путем вызова <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-391">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2dfb4-392">Данные для преобразования, например чтение данных из потока, могут быть доступны только в виде последовательных блоков.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-392">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="2dfb4-393">В этом случае или если объем данных слишком велико, что необходимо разделить на более мелкие блоки, используйте <xref:System.Text.Decoder> или <xref:System.Text.Encoder> объект, предоставляемый <xref:System.Text.UTF8Encoding.GetDecoder%2A> метода или <xref:System.Text.UTF8Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-393">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dfb4-394">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-394">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2dfb4-395">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-395">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-396">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-396">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2dfb4-397">
            <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-397">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dfb4-398">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-398">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="2dfb4-399">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-399">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-400">
            <paramref name="charCount" /> is less than the resulting number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-400">
              <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="2dfb4-401">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-401">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="2dfb4-402">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-402">-and-</span>
          </span>
          <span data-ttu-id="2dfb4-403">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-403">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2dfb4-404">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-404">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2dfb4-405">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-405">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="2dfb4-406">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-406">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="2dfb4-407">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-407">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="2dfb4-408">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-408">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="2dfb4-409">The character array to contain the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-409">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="2dfb4-410">The index at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-410">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-411">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-411">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-412">The actual number of characters written into <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-412">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-413">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.UTF8Encoding.GetChars%2A> для хранения полученных символов, вызовите <xref:System.Text.UTF8Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-413">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="2dfb4-414">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-414">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="2dfb4-415"><xref:System.Text.UTF8Encoding.GetCharCount%2A> Метод обычно выделяет меньше памяти, пока <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-415">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2dfb4-416">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-416">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="2dfb4-417">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-417">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2dfb4-418">Если массив байтов был возвращен методом виду не Спецификации типа диапазона байтов для декодирования включает отметку порядка байтов (BOM), символ U + FFFE включается в массив символов, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-418">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="2dfb4-419">Его можно удалить путем вызова <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-419">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2dfb4-420">Данные для преобразования, например чтение данных из потока, могут быть доступны только в виде последовательных блоков.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-420">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="2dfb4-421">В этом случае или если объем данных слишком велико, что необходимо разделить на более мелкие блоки, используйте <xref:System.Text.Decoder> или <xref:System.Text.Encoder> , предоставляемые <xref:System.Text.UTF8Encoding.GetDecoder%2A> метода или <xref:System.Text.UTF8Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-421">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-422">В следующем примере используется <xref:System.Text.UTF8Encoding.GetChars%2A> метод декодировать диапазон элементов в массиве байтов и сохраняет результат в массив символов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-422">The following example uses the <xref:System.Text.UTF8Encoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dfb4-423">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-423">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2dfb4-424">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-424">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-425">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-425">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2dfb4-426">
            <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-426">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2dfb4-427">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-427">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-428">
            <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-428">
              <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="2dfb4-429">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-429">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-430">
            <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-430">
              <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dfb4-431">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-431">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="2dfb4-432">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-432">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-433">
            <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-433">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="2dfb4-434">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-434">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="2dfb4-435">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-435">-and-</span>
          </span>
          <span data-ttu-id="2dfb4-436">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-436">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2dfb4-437">Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-437">Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-438">A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-438">A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-439"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> Метод преобразует последовательные блоки байтов в последовательные блоки символов в так же, как <xref:System.Text.UTF8Encoding.GetChars%2A> метода этого класса.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-439">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF8Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="2dfb4-440">Однако <xref:System.Text.Decoder> хранит сведения о состоянии между вызовами, что позволяет ему правильно декодировать последовательности байтов, охватывающие блоки.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-440">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="2dfb4-441"><xref:System.Text.Decoder> Также сохраняет замыкающие байты в конце блоков данных и использует конечные байты при следующей операции декодирования.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-441">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="2dfb4-442">Таким образом <xref:System.Text.UTF8Encoding.GetDecoder%2A> и <xref:System.Text.UTF8Encoding.GetEncoder%2A> полезны для передачи по сети и операции с файлами, так как эти операции часто работают с блоками данных, а не полные данные потока.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-442">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="2dfb4-443">Если обнаружение ошибок включено, то есть `throwOnInvalidCharacters` имеет значение параметра конструктора `true`, также включена функция обнаружения ошибок в <xref:System.Text.Decoder> возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-443">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="2dfb4-444">Если включена функция обнаружения ошибок и обнаружена недопустимая последовательность, состояние декодера является неопределенным и обработка должна быть остановлена.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-444">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-445">В следующем примере используется <xref:System.Text.UTF8Encoding.GetDecoder%2A> метод для получения декодера UTF-8.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-445">The following example uses the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method to obtain a UTF-8 decoder.</span></span> <span data-ttu-id="2dfb4-446">Декодер преобразует последовательность байтов в последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-446">The decoder converts a sequence of bytes into a sequence of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CPP/getdecoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CS/getdecoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/VB/getdecoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2dfb4-447">Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-447">Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-448">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-448">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-449"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> Метод преобразует последовательные блоки символов в последовательные блоки байтов таким способом, аналогичным <xref:System.Text.UTF8Encoding.GetBytes%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-449">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF8Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="2dfb4-450">Однако <xref:System.Text.Encoder> хранит сведения о состоянии между вызовами, что позволяет правильно кодировать последовательности символов, охватывающие блоки.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-450">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="2dfb4-451"><xref:System.Text.Encoder> Также сохраняет замыкающие символы в конце блоков данных и использует замыкающие символы при выполнении следующей операции кодирования.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-451">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="2dfb4-452">Например может оказаться, что блок данных с несоответствиями старшим символом-заместителем и сопоставления младший символ-заместитель может находиться в следующем блоке данных.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-452">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="2dfb4-453">Таким образом <xref:System.Text.UTF8Encoding.GetDecoder%2A> и <xref:System.Text.UTF8Encoding.GetEncoder%2A> полезны для передачи по сети и операции с файлами, так как эти операции часто работают с блоками данных, а не полные данные потока.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-453">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="2dfb4-454">Если обнаружение ошибок включено, то есть `throwOnInvalidCharacters` имеет значение параметра конструктора `true`, также включена функция обнаружения ошибок в <xref:System.Text.Encoder> возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-454">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="2dfb4-455">Если включена функция обнаружения ошибок и обнаружена недопустимая последовательность, состояние кодировщика является неопределенным и обработка должна быть остановлена.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-455">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-456">В следующем примере используется <xref:System.Text.UTF8Encoding.GetEncoder%2A> метод, чтобы получить кодировщик для преобразования последовательности символов в кодировке UTF-8 закодированную последовательность байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-456">The following example uses the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method to obtain an encoder to convert a sequence of characters into a UTF-8 encoded sequence of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CPP/getencoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CS/getencoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/VB/getencoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2dfb4-457">Returns the hash code for the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-457">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-458">The hash code for the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-458">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2dfb4-459">В следующем примере используется <xref:System.Text.UTF8Encoding.GetHashCode%2A> метод для возврата хэш-код для <xref:System.Text.UTF8Encoding> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-459">The following example uses the <xref:System.Text.UTF8Encoding.GetHashCode%2A> method to return a hash code for <xref:System.Text.UTF8Encoding> instances.</span></span> <span data-ttu-id="2dfb4-460">Обратите внимание, что хэш-код, возвращаемый этим методом зависит от конструктора, используемого для создания <xref:System.Text.UTF8Encoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-460">Notice that the hash code returned by this method depends on the constructor used to create the <xref:System.Text.UTF8Encoding> object.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CPP/gethashcode-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CS/gethashcode-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/VB/gethashcode-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="2dfb4-461">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-461">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-462">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-462">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-463">The maximum number of bytes produced by encoding the specified number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-463">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-464">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.UTF8Encoding.GetBytes%2A> для хранения полученные байты, вызов <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-464">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="2dfb4-465">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-465">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="2dfb4-466"><xref:System.Text.UTF8Encoding.GetByteCount%2A> Метод обычно выделяет меньше памяти, пока <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-466">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2dfb4-467"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> — Это худший число, включая Наихудший случай для выбранного в данный момент <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-467"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="2dfb4-468">Если выбран резервный вариант с потенциально длинной строкой <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> может возвращать большие значения.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-468">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="2dfb4-469">В большинстве случаев этот метод возвращает адекватные числа для коротких строк.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-469">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="2dfb4-470">Для больших строк необходимо выбирать между использованием очень больших буферов и отслеживанием ошибок в тех редких случаях, более рационального буфера превышено.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-470">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="2dfb4-471">Может потребоваться использовать другой подход с использованием <xref:System.Text.UTF8Encoding.GetByteCount%2A> или <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-471">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2dfb4-472">Например, текст на английском и многих других языков, часто требуется только один байт UTF-8 для представления знаков, а возвращаемое значение <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> возможность того, что строка для преобразования будет состоять только из символов, каждая из которых имеет требуется четыре байта.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-472">For example, text in English and many other languages often needs only one UTF-8 byte to represent a character, but the number returned by <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has to allow for the possibility that the string to be converted will consist entirely of characters that each require four bytes.</span></span>  
  
 <span data-ttu-id="2dfb4-473"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> не связан с <xref:System.Text.UTF8Encoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-473"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetChars%2A>.</span></span> <span data-ttu-id="2dfb4-474">Если приложению требуется подобная функция, для использования с <xref:System.Text.UTF8Encoding.GetChars%2A>, следует использовать <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-474">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetChars%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2dfb4-475">`GetMaxByteCount(N)` не обязательно совпадает со значением `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-475">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-476">В следующем примере используется <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> метод для возврата максимальное число байтов, необходимых для кодирования указанное количество символов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-476">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2dfb4-477">
            <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-477">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2dfb4-478">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-478">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-479">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-479">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2dfb4-480">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-480">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="2dfb4-481">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-481">-and-</span>
          </span>
          <span data-ttu-id="2dfb4-482">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-482">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="2dfb4-483">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-483">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-484">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-484">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-485">The maximum number of characters produced by decoding the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-485">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-486">Чтобы вычислить размер точное массива, необходимого <xref:System.Text.UTF8Encoding.GetChars%2A> для хранения полученных символов, вызовите <xref:System.Text.UTF8Encoding.GetCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-486">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="2dfb4-487">Чтобы вычислить максимальный размер массива, вызовите <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-487">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="2dfb4-488"><xref:System.Text.UTF8Encoding.GetCharCount%2A> Метод обычно выделяет меньше памяти, пока <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> обычно выполняется быстрее.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-488">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="2dfb4-489"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> — Это худший число, включая Наихудший случай для выбранного в данный момент <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-489"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="2dfb4-490">Если выбран резервный вариант с потенциально длинной строкой <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> может возвращать большие значения.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-490">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="2dfb4-491">В большинстве случаев этот метод возвращает адекватные числа для коротких строк.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-491">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="2dfb4-492">Для больших строк необходимо выбирать между использованием очень больших буферов и отслеживанием ошибок в тех редких случаях, более рационального буфера превышено.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-492">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span>  <span data-ttu-id="2dfb4-493">Может потребоваться использовать другой подход с использованием <xref:System.Text.UTF8Encoding.GetCharCount%2A> или <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-493">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetCharCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2dfb4-494"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> не связан с <xref:System.Text.UTF8Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-494"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="2dfb4-495">Если приложению требуется подобная функция, для использования с <xref:System.Text.UTF8Encoding.GetBytes%2A>, следует использовать <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-495">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetBytes%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2dfb4-496">`GetMaxCharCount(N)` не обязательно совпадает со значением `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-496">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-497">В следующем примере используется <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> метод для возврата максимальное количество символов, полученных при декодировании заданного числа байтов.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-497">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2dfb4-498">
            <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-498">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2dfb4-499">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-499">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-500">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-500">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="2dfb4-501">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-501">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="2dfb4-502">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-502">-and-</span>
          </span>
          <span data-ttu-id="2dfb4-503">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-503">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2dfb4-504">Returns a Unicode byte order mark encoded in UTF-8 format, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-504">Returns a Unicode byte order mark encoded in UTF-8 format, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-505">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-505">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span>
          </span>
          <span data-ttu-id="2dfb4-506">Otherwise, this method returns a zero-length byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-506">Otherwise, this method returns a zero-length byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-507"><xref:System.Text.UTF8Encoding> Объект может предоставлять преамбулу, представляющую собой массив байтов, который может иметь префикс в последовательность байтов, полученных в результате кодирования.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-507">The <xref:System.Text.UTF8Encoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes that result from the encoding process.</span></span> <span data-ttu-id="2dfb4-508">Предшествующим последовательность закодированных байтов с отметкой порядка байтов (кодовая точка U + FEFF) декодер может определить порядок байтов и формат преобразования или UTF.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-508">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="2dfb4-509">Метка порядка байтов (BOM) Юникода сериализуется как 0xEF 0xBB 0xBF.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-509">The Unicode byte order mark (BOM) is serialized as 0xEF 0xBB 0xBF.</span></span> <span data-ttu-id="2dfb4-510">Обратите внимание, что в стандарте Юникода, не требуется ни для рекомендует использовать метки порядка байтов UTF-8 кодирование потоков.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-510">Note that the Unicode Standard neither requires nor recommends the use of a BOM for UTF-8 encoded streams.</span></span>  
  
 <span data-ttu-id="2dfb4-511">Можно создать экземпляр <xref:System.Text.UTF8Encoding> которого <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод возвращает допустимый Спецификации одним из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="2dfb4-511">You can instantiate a <xref:System.Text.UTF8Encoding> object whose <xref:System.Text.UTF8Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="2dfb4-512">Путем получения <xref:System.Text.UTF8Encoding> объект, возвращаемый <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-512">By retrieving the <xref:System.Text.UTF8Encoding> object returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="2dfb4-513">Путем вызова <xref:System.Text.UTF8Encoding> конструктор с `encoderShouldEmitUTF8Identifier` параметр и присвоить ему значение, равным `true`.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-513">By calling a <xref:System.Text.UTF8Encoding> constructor with a `encoderShouldEmitUTF8Identifier` parameter and setting its value set to `true`.</span></span>  
  
 <span data-ttu-id="2dfb4-514">Все остальные <xref:System.Text.UTF8Encoding> объекты настраиваются для возврата пустой массив, а не допустимым Спецификации.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-514">All other <xref:System.Text.UTF8Encoding> objects are configured to return an empty array rather than a valid BOM.</span></span>  
  
 <span data-ttu-id="2dfb4-515">Спецификации предоставляют почти точную идентификацию кодировки для файлов, которые в противном случае теряют ссылку на их кодировки, например без тегов или неправильно пометить веб-данных или случайное текстовые файлы, сохраненные, когда организация не имели расставленными.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-515">The BOM provide nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="2dfb4-516">Часто возникающих пользователя избавить согласованных и правильных тегов в данных.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-516">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="2dfb4-517">Для стандартов, предоставляющих тип кодировки метка BOM отчасти избыточный.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-517">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="2dfb4-518">Тем не менее он может использоваться, чтобы помочь серверу отправлять правильный заголовок кодировки.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-518">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="2dfb4-519">Кроме того он может использоваться как переход на резервный ресурс в случае, если кодировка, в противном случае не потеряны.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-519">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="2dfb4-520">Есть некоторые недостатки использования метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-520">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="2dfb4-521">Например сложно выбрать способы ограничения полей базы данных, используйте метки порядка БАЙТОВ.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-521">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="2dfb4-522">Объединение файлов может вызвать проблемы также, например, когда файлы сливаются таким образом, что необязательный символ может оказаться в центре данных.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-522">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="2dfb4-523">Несмотря на некоторые недостатки Однако использование спецификации настоятельно рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-523">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="2dfb4-524">Дополнительные сведения о порядке байтов и метка порядка байтов в разделе Юникод [домашней странице Юникода](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="2dfb4-524">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2dfb4-525">Чтобы обеспечить правильное декодирование закодированных байтов когда они сохраняются в виде файла или потока, можно задать префикс начале потока закодированных байтов с начальной части.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-525">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="2dfb4-526">Обратите внимание, что <xref:System.Text.UTF8Encoding.GetBytes%2A> метод не добавить метки порядка БАЙТОВ в последовательность закодированных байтов; BOM в начале соответствующие байтового потока является разработчик.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-526">Note that the <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-527">В следующем примере используется <xref:System.Text.UTF8Encoding.GetPreamble%2A> метка порядка метод для возврата байтов Юникода в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-527">The following example uses the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to return the Unicode byte order mark encoded in UTF-8 format.</span></span> <span data-ttu-id="2dfb4-528">Обратите внимание, что конструктор по умолчанию для <xref:System.Text.UTF8Encoding> преамбула не предоставляется.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-528">Notice that the default constructor for <xref:System.Text.UTF8Encoding> does not provide a preamble.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="2dfb4-529">В следующем примере создается два <xref:System.Text.UTF8Encoding> объектов, первый путем вызова без параметров <xref:System.Text.UTF8Encoding.%23ctor> конструктор, который предоставляет Спецификацию, а вторая путем вызова <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> конструктор с его `encoderShouldEmitUTF8Identifier` аргумента, `true`.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-529">The following example instantiates two <xref:System.Text.UTF8Encoding> objects, the first by calling the parameterless <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not provide a BOM, and the second by calling the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> constructor with its `encoderShouldEmitUTF8Identifier` argument set to `true`.</span></span> <span data-ttu-id="2dfb4-530">Затем он вызывает <xref:System.Text.UTF8Encoding.GetPreamble%2A> метод для записи BOM в файл перед записью UF8-кодированную строку.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-530">It then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UF8-encoded string.</span></span> <span data-ttu-id="2dfb4-531">Как показывают выходные данные из примера консоли, файла, содержащего байты из второй кодировщика имеет три большее число байтов, чем первый.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-531">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/cs/getpreamble1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/vb/getpreamble1.vb#1)]  
  
 <span data-ttu-id="2dfb4-532">Вы также можете сравнить файлы с помощью `fc` команду в окне консоли, или можно проверить файлы в текстовом редакторе, который включает режим шестнадцатеричное представление.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-532">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="2dfb4-533">Обратите внимание, что когда файл открыт в редакторе, который поддерживает UTF-8, Спецификации не отображается.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-533">Note that when the file is opened in an editor that supports UTF-8, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="2dfb4-534">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-534">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2dfb4-535">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-535">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2dfb4-536">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-536">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dfb4-537">Decodes a range of bytes from a byte array into a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-537">Decodes a range of bytes from a byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dfb4-538">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-538">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dfb4-539">Обнаружение ошибок, этот метод выдает исключение приводит недопустимую последовательность <xref:System.ArgumentException> исключение.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-539">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="2dfb4-540">Без обнаружения ошибки недопустимые последовательности игнорируются, и исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-540">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="2dfb4-541">Если массив байтов был возвращен методом виду не Спецификации типа диапазона байтов для декодирования включает отметку порядка байтов (BOM), символ U + FFFE включается в массив символов, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-541">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="2dfb4-542">Его можно удалить путем вызова <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-542">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2dfb4-543">Данные для преобразования, например чтение данных из потока, могут быть доступны только в виде последовательных блоков.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-543">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="2dfb4-544">В этом случае или если объем данных слишком велико, что необходимо разделить на более мелкие блоки, используйте <xref:System.Text.Decoder> или <xref:System.Text.Encoder> , предоставляемые <xref:System.Text.UTF8Encoding.GetDecoder%2A> метода или <xref:System.Text.UTF8Encoding.GetEncoder%2A> метода, соответственно.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-544">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dfb4-545">В следующем примере массив инициализируется путем вызова <xref:System.Text.UTF8Encoding.GetByteCount%2A> метод, чтобы определить точно количество байтов перед зашифрованную строку, а затем добавив размер отметку порядка байтов (BOM).</span><span class="sxs-lookup"><span data-stu-id="2dfb4-545">The following example initializes an array by calling the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="2dfb4-546">Затем в примере вызывается <xref:System.Text.UTF8Encoding.GetPreamble%2A> для сохранения Спецификации массив до вызова метода <xref:System.Text.UTF8Encoding.GetBytes%2A> метод для хранения закодированных байтов в массив.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-546">The example then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="2dfb4-547">Затем в примере вызывается <xref:System.Text.UTF8Encoding.GetString%2A> метод Декодируемая строка.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-547">The example then calls the <xref:System.Text.UTF8Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="2dfb4-548">Обратите внимание, что в этом случае декодированную строку отличается от исходной строки, так как он начинается с метки порядка байтов 16-разрядное U + FFFD.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-548">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="2dfb4-549">Это означает, что две строки будут неравны и, если строка является выходные данные, Спецификации отображается как замещающий символ «?».</span><span class="sxs-lookup"><span data-stu-id="2dfb4-549">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="2dfb4-550">Чтобы удалить BOM в начале строки, можно вызвать <xref:System.String.TrimStart%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2dfb4-550">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dfb4-551">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-551">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2dfb4-552">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-552">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2dfb4-553">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-553">-or-</span>
          </span>
          <span data-ttu-id="2dfb4-554">
            <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-554">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dfb4-555">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-555">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="2dfb4-556">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-556">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="2dfb4-557">-and-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-557">-and-</span>
          </span>
          <span data-ttu-id="2dfb4-558">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dfb4-558">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>