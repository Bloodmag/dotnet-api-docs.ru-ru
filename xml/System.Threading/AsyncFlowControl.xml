<Type Name="AsyncFlowControl" FullName="System.Threading.AsyncFlowControl">
  <TypeSignature Language="C#" Value="public struct AsyncFlowControl : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AsyncFlowControl extends System.ValueType implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.AsyncFlowControl" />
  <TypeSignature Language="VB.NET" Value="Public Structure AsyncFlowControl&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public value class AsyncFlowControl : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5546e-101">Обеспечивает функциональность для восстановления миграции или перемещения контекста выполнения между потоками.</span><span class="sxs-lookup"><span data-stu-id="5546e-101">Provides the functionality to restore the migration, or flow, of the execution context between threads.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5546e-102">Контекст выполнения содержит все данные, касающиеся выполнения логических потоков.</span><span class="sxs-lookup"><span data-stu-id="5546e-102">An execution context contains all execution-related information for a logical thread.</span></span> <span data-ttu-id="5546e-103">Поток контекста выполнения в другие потоки, можно предотвратить с помощью <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> метод, возвращающий <xref:System.Threading.AsyncFlowControl> структуры.</span><span class="sxs-lookup"><span data-stu-id="5546e-103">The flow of the execution context to other threads can be prevented by using the <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> method, which returns an <xref:System.Threading.AsyncFlowControl> structure.</span></span> <span data-ttu-id="5546e-104"><xref:System.Threading.AsyncFlowControl.Undo%2A> Метод возвращаемого <xref:System.Threading.AsyncFlowControl> структуру может использоваться для отмены подавления потока.</span><span class="sxs-lookup"><span data-stu-id="5546e-104">The <xref:System.Threading.AsyncFlowControl.Undo%2A> method of the returned <xref:System.Threading.AsyncFlowControl> structure can be used to undo the flow suppression.</span></span> <span data-ttu-id="5546e-105"><xref:System.Threading.AsyncFlowControl> Структуры должны использоваться в том же потоке, в котором он был создан.</span><span class="sxs-lookup"><span data-stu-id="5546e-105">The <xref:System.Threading.AsyncFlowControl> structure must be used on the same thread on which it was created.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5546e-106">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Threading.AsyncFlowControl" />.</span><span class="sxs-lookup"><span data-stu-id="5546e-106">Releases all resources used by the current instance of the <see cref="T:System.Threading.AsyncFlowControl" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5546e-107">Вызовите метод `Dispose` по окончании использования класса <xref:System.Threading.AsyncFlowControl>.</span><span class="sxs-lookup"><span data-stu-id="5546e-107">Call `Dispose` when you are finished using the <xref:System.Threading.AsyncFlowControl>.</span></span> <span data-ttu-id="5546e-108">Метод `Dispose` оставляет класс <xref:System.Threading.AsyncFlowControl> в непригодном для использования состоянии.</span><span class="sxs-lookup"><span data-stu-id="5546e-108">The `Dispose` method leaves the <xref:System.Threading.AsyncFlowControl> in an unusable state.</span></span> <span data-ttu-id="5546e-109">После вызова метода `Dispose`, необходимо освободить все ссылки на <xref:System.Threading.AsyncFlowControl> , сборщик мусора мог освободить память, <xref:System.Threading.AsyncFlowControl> занимаемую.</span><span class="sxs-lookup"><span data-stu-id="5546e-109">After calling `Dispose`, you must release all references to the <xref:System.Threading.AsyncFlowControl> so the garbage collector can reclaim the memory that the <xref:System.Threading.AsyncFlowControl> was occupying.</span></span>  
  
 <span data-ttu-id="5546e-110">Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [метода](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="5546e-110">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5546e-111">Всегда вызывайте метод `Dispose` перед освобождением последней ссылки на класс <xref:System.Threading.AsyncFlowControl>.</span><span class="sxs-lookup"><span data-stu-id="5546e-111">Always call `Dispose` before you release your last reference to the <xref:System.Threading.AsyncFlowControl>.</span></span> <span data-ttu-id="5546e-112">В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Threading.AsyncFlowControl> метод `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="5546e-112">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.AsyncFlowControl> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5546e-113">Структура <see cref="T:System.Threading.AsyncFlowControl" /> не используется в потоке, в котором она была создана.</span><span class="sxs-lookup"><span data-stu-id="5546e-113">The <see cref="T:System.Threading.AsyncFlowControl" /> structure is not used on the thread where it was created.</span></span>  
  
 <span data-ttu-id="5546e-114">- или -</span><span class="sxs-lookup"><span data-stu-id="5546e-114">-or-</span></span>  
  
 <span data-ttu-id="5546e-115">Структура <see cref="T:System.Threading.AsyncFlowControl" /> уже использовалась для вызова <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> или <see cref="M:System.Threading.AsyncFlowControl.Undo" />.</span><span class="sxs-lookup"><span data-stu-id="5546e-115">The <see cref="T:System.Threading.AsyncFlowControl" /> structure has already been used to call <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> or <see cref="M:System.Threading.AsyncFlowControl.Undo" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5546e-116">Определяет, равны ли два экземпляра.</span><span class="sxs-lookup"><span data-stu-id="5546e-116">Determines whether two instances are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="5546e-117">Объект для сравнения с текущей структурой.</span><span class="sxs-lookup"><span data-stu-id="5546e-117">An object to compare with the current structure.</span></span></param>
        <summary><span data-ttu-id="5546e-118">Определяет, эквивалентен ли указанный объект текущей структуре <see cref="T:System.Threading.AsyncFlowControl" />.</span><span class="sxs-lookup"><span data-stu-id="5546e-118">Determines whether the specified object is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></summary>
        <returns>
          <span data-ttu-id="5546e-119">Значение <see langword="true" />, если <paramref name="obj" /> является структурой <see cref="T:System.Threading.AsyncFlowControl" /> и эквивалентен текущей структуре <see cref="T:System.Threading.AsyncFlowControl" /> в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5546e-119"><see langword="true" /> if <paramref name="obj" /> is an <see cref="T:System.Threading.AsyncFlowControl" /> structure and is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.AsyncFlowControl obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Threading.AsyncFlowControl obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Equals(System.Threading.AsyncFlowControl)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As AsyncFlowControl) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Threading::AsyncFlowControl obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Threading.AsyncFlowControl" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="5546e-120">Структура <see cref="T:System.Threading.AsyncFlowControl" /> для сравнения с текущей структурой.</span><span class="sxs-lookup"><span data-stu-id="5546e-120">An <see cref="T:System.Threading.AsyncFlowControl" /> structure to compare with the current structure.</span></span></param>
        <summary><span data-ttu-id="5546e-121">Определяет, равна ли указанная структура <see cref="T:System.Threading.AsyncFlowControl" /> текущей структуре <see cref="T:System.Threading.AsyncFlowControl" />.</span><span class="sxs-lookup"><span data-stu-id="5546e-121">Determines whether the specified <see cref="T:System.Threading.AsyncFlowControl" /> structure is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></summary>
        <returns>
          <span data-ttu-id="5546e-122">Значение <see langword="true" />, если объект <paramref name="obj" /> равен текущей структуре <see cref="T:System.Threading.AsyncFlowControl" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5546e-122"><see langword="true" /> if <paramref name="obj" /> is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5546e-123">Получает хэш-код текущей структуры <see cref="T:System.Threading.AsyncFlowControl" />.</span><span class="sxs-lookup"><span data-stu-id="5546e-123">Gets a hash code for the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></summary>
        <returns><span data-ttu-id="5546e-124">Хэш-код для текущей структуры <see cref="T:System.Threading.AsyncFlowControl" />.</span><span class="sxs-lookup"><span data-stu-id="5546e-124">A hash code for the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.AsyncFlowControl a, System.Threading.AsyncFlowControl b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.AsyncFlowControl a, valuetype System.Threading.AsyncFlowControl b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.op_Equality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As AsyncFlowControl, b As AsyncFlowControl) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::AsyncFlowControl a, System::Threading::AsyncFlowControl b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Threading.AsyncFlowControl" />
        <Parameter Name="b" Type="System.Threading.AsyncFlowControl" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="5546e-125">Структура <see cref="T:System.Threading.AsyncFlowControl" />.</span><span class="sxs-lookup"><span data-stu-id="5546e-125">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></param>
        <param name="b"><span data-ttu-id="5546e-126">Структура <see cref="T:System.Threading.AsyncFlowControl" />.</span><span class="sxs-lookup"><span data-stu-id="5546e-126">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></param>
        <summary><span data-ttu-id="5546e-127">Сравнивает две структуры <see cref="T:System.Threading.AsyncFlowControl" />, чтобы определить, совпадают ли они.</span><span class="sxs-lookup"><span data-stu-id="5546e-127">Compares two <see cref="T:System.Threading.AsyncFlowControl" /> structures to determine whether they are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="5546e-128">Значение <see langword="true" />, если обе структуры эквивалентны, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5546e-128"><see langword="true" /> if the two structures are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="5546e-129">Эквивалентный метод для этого оператора является <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5546e-129">The equivalent method for this operator is <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.AsyncFlowControl a, System.Threading.AsyncFlowControl b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.AsyncFlowControl a, valuetype System.Threading.AsyncFlowControl b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.op_Inequality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As AsyncFlowControl, b As AsyncFlowControl) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::AsyncFlowControl a, System::Threading::AsyncFlowControl b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Threading.AsyncFlowControl" />
        <Parameter Name="b" Type="System.Threading.AsyncFlowControl" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="5546e-130">Структура <see cref="T:System.Threading.AsyncFlowControl" />.</span><span class="sxs-lookup"><span data-stu-id="5546e-130">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></param>
        <param name="b"><span data-ttu-id="5546e-131">Структура <see cref="T:System.Threading.AsyncFlowControl" />.</span><span class="sxs-lookup"><span data-stu-id="5546e-131">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></param>
        <summary><span data-ttu-id="5546e-132">Сравнивает две структуры <see cref="T:System.Threading.AsyncFlowControl" /> на неравенство.</span><span class="sxs-lookup"><span data-stu-id="5546e-132">Compares two <see cref="T:System.Threading.AsyncFlowControl" /> structures to determine whether they are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="5546e-133">Значение <see langword="true" />, если структуры не равны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5546e-133"><see langword="true" /> if the structures are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="5546e-134">Эквивалентный метод для этого оператора является <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5546e-134">The equivalent method for this operator is <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5546e-135">Восстанавливает перемещение контекста выполнения между потоками.</span><span class="sxs-lookup"><span data-stu-id="5546e-135">Restores the flow of the execution context between threads.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5546e-136"><xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> Возвращает <xref:System.Threading.AsyncFlowControl> структура, используемая для восстановления потока.</span><span class="sxs-lookup"><span data-stu-id="5546e-136">The <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> method returns an <xref:System.Threading.AsyncFlowControl> structure that is used to restore the flow.</span></span>  
  
 <span data-ttu-id="5546e-137"><xref:System.Threading.AsyncFlowControl.Undo%2A> Метод должен вызываться только для <xref:System.Threading.AsyncFlowControl> структуры, возвращенный связанный с ним <xref:System.Threading.ExecutionContext.SuppressFlow%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5546e-137">The <xref:System.Threading.AsyncFlowControl.Undo%2A> method must be called only on the <xref:System.Threading.AsyncFlowControl> structure returned by its associated <xref:System.Threading.ExecutionContext.SuppressFlow%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5546e-138">Структура <see cref="T:System.Threading.AsyncFlowControl" /> не используется в потоке, в котором она была создана.</span><span class="sxs-lookup"><span data-stu-id="5546e-138">The <see cref="T:System.Threading.AsyncFlowControl" /> structure is not used on the thread where it was created.</span></span>  
  
 <span data-ttu-id="5546e-139">- или -</span><span class="sxs-lookup"><span data-stu-id="5546e-139">-or-</span></span>  
  
 <span data-ttu-id="5546e-140">Структура <see cref="T:System.Threading.AsyncFlowControl" /> уже использовалась для вызова <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> или <see cref="M:System.Threading.AsyncFlowControl.Undo" />.</span><span class="sxs-lookup"><span data-stu-id="5546e-140">The <see cref="T:System.Threading.AsyncFlowControl" /> structure has already been used to call <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> or <see cref="M:System.Threading.AsyncFlowControl.Undo" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>