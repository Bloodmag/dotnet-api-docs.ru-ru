<Type Name="HostExecutionContext" FullName="System.Threading.HostExecutionContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15bd9a208ce6284ae0b21aae57054b72dae38a36" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36406860" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HostExecutionContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HostExecutionContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.HostExecutionContext" />
  <TypeSignature Language="VB.NET" Value="Public Class HostExecutionContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostExecutionContext : IDisposable" />
  <TypeSignature Language="F#" Value="type HostExecutionContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="24c46-101">Инкапсулирует и распространяет контекст выполнения хоста по потокам.</span>
      <span class="sxs-lookup">
        <span data-stu-id="24c46-101">Encapsulates and propagates the host execution context across threads.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c46-102"><xref:System.Threading.HostExecutionContext> Является частью большего <xref:System.Threading.ExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="24c46-102">The <xref:System.Threading.HostExecutionContext> is part of a larger <xref:System.Threading.ExecutionContext>.</span></span> <span data-ttu-id="24c46-103">Контекст узла переносит или потоки с контекстом выполнения.</span><span class="sxs-lookup"><span data-stu-id="24c46-103">The host context migrates, or flows, with the execution context.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24c46-104">Инициализирует новый экземпляр класса <see cref="T:System.Threading.HostExecutionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c46-104">Initializes a new instance of the <see cref="T:System.Threading.HostExecutionContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostExecutionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostExecutionContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24c46-105">Инициализирует новый экземпляр класса <see cref="T:System.Threading.HostExecutionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c46-105">Initializes a new instance of the <see cref="T:System.Threading.HostExecutionContext" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c46-106">Конструктор по умолчанию создает контекста выполнения хоста которого <xref:System.Threading.HostExecutionContext.State%2A> значение свойства `null`.</span><span class="sxs-lookup"><span data-stu-id="24c46-106">The default constructor creates a host execution context whose <xref:System.Threading.HostExecutionContext.State%2A> property value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostExecutionContext (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContext.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostExecutionContext(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Threading.HostExecutionContext : obj -&gt; System.Threading.HostExecutionContext" Usage="new System.Threading.HostExecutionContext state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="24c46-107">Объект, представляющий состояние контекста выполнения хоста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c46-107">An object representing the host execution context state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24c46-108">Инициализирует новый экземпляр класса <see cref="T:System.Threading.HostExecutionContext" />, используя определенное состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c46-108">Initializes a new instance of the <see cref="T:System.Threading.HostExecutionContext" /> class using the specified state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c46-109"><xref:System.Threading.HostExecutionContext> Входит в состав <xref:System.Threading.ExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="24c46-109">The <xref:System.Threading.HostExecutionContext> is included with the <xref:System.Threading.ExecutionContext>.</span></span> <span data-ttu-id="24c46-110">`state` Представляет значение, содержащее безопасный дескриптор `IUnknown` указатель для узла.</span><span class="sxs-lookup"><span data-stu-id="24c46-110">The `state` represents a safe handle containing the `IUnknown` pointer for the host.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.HostExecutionContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCopy () As HostExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::HostExecutionContext ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="abstract member CreateCopy : unit -&gt; System.Threading.HostExecutionContext&#xA;override this.CreateCopy : unit -&gt; System.Threading.HostExecutionContext" Usage="hostExecutionContext.CreateCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24c46-111">Создает копию текущего контекста выполнения хоста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c46-111">Creates a copy of the current host execution context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24c46-112">Объект <see cref="T:System.Threading.HostExecutionContext" />, представляющий контекст хоста для текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c46-112">A <see cref="T:System.Threading.HostExecutionContext" /> object representing the host context for the current thread.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c46-113">Копию можно использовать в качестве параметра <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A?displayProperty=nameWithType> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="24c46-113">The copy can be used as the parameter to a <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A?displayProperty=nameWithType> method call.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24c46-114">Освобождает ресурсы, используемые текущим экземпляром класса <see cref="T:System.Threading.HostExecutionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c46-114">Releases resources used by the current instance of the <see cref="T:System.Threading.HostExecutionContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="hostExecutionContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24c46-115">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Threading.HostExecutionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c46-115">Releases all resources used by the current instance of the <see cref="T:System.Threading.HostExecutionContext" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c46-116">Вызовите метод `Dispose` по окончании использования класса <xref:System.Threading.HostExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="24c46-116">Call `Dispose` when you are finished using the <xref:System.Threading.HostExecutionContext>.</span></span> <span data-ttu-id="24c46-117">Метод `Dispose` оставляет класс <xref:System.Threading.HostExecutionContext> в непригодном для использования состоянии.</span><span class="sxs-lookup"><span data-stu-id="24c46-117">The `Dispose` method leaves the <xref:System.Threading.HostExecutionContext> in an unusable state.</span></span> <span data-ttu-id="24c46-118">После вызова метода `Dispose`, необходимо освободить все ссылки на <xref:System.Threading.HostExecutionContext> , сборщик мусора мог освободить память, <xref:System.Threading.HostExecutionContext> занимаемую.</span><span class="sxs-lookup"><span data-stu-id="24c46-118">After calling `Dispose`, you must release all references to the <xref:System.Threading.HostExecutionContext> so the garbage collector can reclaim the memory that the <xref:System.Threading.HostExecutionContext> was occupying.</span></span>  
  
 <span data-ttu-id="24c46-119">Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [метода](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="24c46-119">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24c46-120">Всегда вызывайте метод `Dispose` перед освобождением последней ссылки на класс <xref:System.Threading.HostExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="24c46-120">Always call `Dispose` before you release your last reference to the <xref:System.Threading.HostExecutionContext>.</span></span> <span data-ttu-id="24c46-121">В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Threading.HostExecutionContext> метод `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="24c46-121">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.HostExecutionContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="hostExecutionContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="24c46-122">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c46-122">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24c46-123">При переопределении в производном классе освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Threading.WaitHandle" />, и при необходимости освобождает управляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c46-123">When overridden in a derived class, releases the unmanaged resources used by the <see cref="T:System.Threading.WaitHandle" />, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c46-124">Этот метод вызывается методом <xref:System.Threading.HostExecutionContext.Dispose> перегрузка метода и метод завершения.</span><span class="sxs-lookup"><span data-stu-id="24c46-124">This method is called by the <xref:System.Threading.HostExecutionContext.Dispose> method overload and the finalizer.</span></span> <span data-ttu-id="24c46-125"><xref:System.Threading.HostExecutionContext.Dispose> вызывает этот метод, защищенный с помощью `disposing` равным `true`.</span><span class="sxs-lookup"><span data-stu-id="24c46-125"><xref:System.Threading.HostExecutionContext.Dispose> invokes this protected method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="24c46-126">Метод завершения вызывает этот метод с `disposing` значение `false`.</span><span class="sxs-lookup"><span data-stu-id="24c46-126">The finalizer invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="24c46-127">Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.Threading.HostExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="24c46-127">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Threading.HostExecutionContext> references.</span></span> <span data-ttu-id="24c46-128">Этот метод вызывает метод `Dispose` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="24c46-128">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 <span data-ttu-id="24c46-129">Этот метод может вызываться несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="24c46-129">This method can be called multiple times by other objects.</span></span> <span data-ttu-id="24c46-130">При переопределении этого метода нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода.</span><span class="sxs-lookup"><span data-stu-id="24c46-130">When overriding this method, be careful not to reference objects that have been previously disposed in an earlier call.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="protected internal object State { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object State" />
      <MemberSignature Language="DocId" Value="P:System.Threading.HostExecutionContext.State" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property State As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Object ^ State { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.State : obj with get, set" Usage="System.Threading.HostExecutionContext.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24c46-131">Получает или задает состояние контекста выполнения хоста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c46-131">Gets or sets the state of the host execution context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24c46-132">Объект, представляющий состояние контекста выполнения хоста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24c46-132">An object representing the host execution context state.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24c46-133"><xref:System.Threading.HostExecutionContext.State%2A> Представляет значение свойства типа, содержащее безопасный дескриптор `IUnknown` указатель для узла.</span><span class="sxs-lookup"><span data-stu-id="24c46-133">The <xref:System.Threading.HostExecutionContext.State%2A> property value represents a safe handle containing the `IUnknown` pointer for the host.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>