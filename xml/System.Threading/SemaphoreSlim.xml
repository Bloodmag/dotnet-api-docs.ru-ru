<Type Name="SemaphoreSlim" FullName="System.Threading.SemaphoreSlim">
  <TypeSignature Language="C#" Value="public class SemaphoreSlim : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemaphoreSlim extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.SemaphoreSlim" />
  <TypeSignature Language="VB.NET" Value="Public Class SemaphoreSlim&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemaphoreSlim : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Current Count = {m_currentCount}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="477c9-101">Представляет упрощенную альтернативу семафору <see cref="T:System.Threading.Semaphore" />, ограничивающему количество потоков, которые могут параллельно обращаться к ресурсу или пулу ресурсов.</span><span class="sxs-lookup"><span data-stu-id="477c9-101">Represents a lightweight alternative to <see cref="T:System.Threading.Semaphore" /> that limits the number of threads that can access a resource or pool of resources concurrently.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477c9-102">Семафоры бывают двух типов: локальные семафоры и именованного системного семафора.</span><span class="sxs-lookup"><span data-stu-id="477c9-102">Semaphores are of two types: local semaphores and named system semaphores.</span></span> <span data-ttu-id="477c9-103">Первый из них является локальным для приложения.</span><span class="sxs-lookup"><span data-stu-id="477c9-103">The former is local to an app.</span></span> <span data-ttu-id="477c9-104">Последний становится видимой во всей операционной системы и подходит для синхронизации между процессами.</span><span class="sxs-lookup"><span data-stu-id="477c9-104">The latter is visible throughout the operating system and is suitable for inter-process synchronization.</span></span> <span data-ttu-id="477c9-105"><xref:System.Threading.SemaphoreSlim> Является упрощенной альтернативой <xref:System.Threading.Semaphore> класс, который не использует Семафоры ядра Windows.</span><span class="sxs-lookup"><span data-stu-id="477c9-105">The <xref:System.Threading.SemaphoreSlim> is a lightweight alternative to the <xref:System.Threading.Semaphore> class that doesn't use Windows kernel semaphores.</span></span> <span data-ttu-id="477c9-106">В отличие от <xref:System.Threading.Semaphore> класса <xref:System.Threading.SemaphoreSlim> класс не поддерживает именованного системного семафора.</span><span class="sxs-lookup"><span data-stu-id="477c9-106">Unlike the <xref:System.Threading.Semaphore> class, the <xref:System.Threading.SemaphoreSlim> class doesn't support named system semaphores.</span></span> <span data-ttu-id="477c9-107">Можно использовать локальный семафор.</span><span class="sxs-lookup"><span data-stu-id="477c9-107">You can use it as a local semaphore only.</span></span> <span data-ttu-id="477c9-108"><xref:System.Threading.SemaphoreSlim> Класс — рекомендуемый семафор для синхронизации в одном приложении.</span><span class="sxs-lookup"><span data-stu-id="477c9-108">The <xref:System.Threading.SemaphoreSlim> class is the recommended semaphore for synchronization within a single app.</span></span>  
  
 <span data-ttu-id="477c9-109">Это упрощенный семафор управляет доступом к пулу ресурсов, который является локальным для приложения.</span><span class="sxs-lookup"><span data-stu-id="477c9-109">A lightweight semaphore controls access to a pool of resources that is local to your application.</span></span> <span data-ttu-id="477c9-110">При создании экземпляра семафор, можно указать максимальное число потоков, одновременно может войти в семафор.</span><span class="sxs-lookup"><span data-stu-id="477c9-110">When you instantiate a semaphore, you can specify the maximum number of threads that can enter the semaphore concurrently.</span></span> <span data-ttu-id="477c9-111">Можно также указать начальное количество потоков, одновременно может войти в семафор.</span><span class="sxs-lookup"><span data-stu-id="477c9-111">You also specify the initial number of threads that can enter the semaphore concurrently.</span></span> <span data-ttu-id="477c9-112">Этот параметр определяет счетчика семафора.</span><span class="sxs-lookup"><span data-stu-id="477c9-112">This defines the semaphore's count.</span></span>  
  
 <span data-ttu-id="477c9-113">Значение счетчика уменьшается на единицу каждый раз, поток входит в семафор, и увеличивается на единицу каждый раз поток выходит из семафора.</span><span class="sxs-lookup"><span data-stu-id="477c9-113">The count is decremented each time a thread enters the semaphore, and incremented each time a thread releases the semaphore.</span></span> <span data-ttu-id="477c9-114">Чтобы войти в семафор, поток вызывает один из <xref:System.Threading.SemaphoreSlim.Wait%2A> или <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="477c9-114">To enter the semaphore, a thread calls one of the <xref:System.Threading.SemaphoreSlim.Wait%2A> or <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> overloads.</span></span> <span data-ttu-id="477c9-115">Чтобы освободить семафор, он вызывает один из <xref:System.Threading.SemaphoreSlim.Release%2A> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="477c9-115">To release the semaphore, it calls one of the <xref:System.Threading.SemaphoreSlim.Release%2A> overloads.</span></span> <span data-ttu-id="477c9-116">Если значение счетчика достигает нуля, последующие вызовы к одному из `Wait` методы блокируются, пока другие потоки освобождают семафор.</span><span class="sxs-lookup"><span data-stu-id="477c9-116">When the count reaches zero, subsequent calls to one of the `Wait` methods block until other threads release the semaphore.</span></span> <span data-ttu-id="477c9-117">Несколько потоков блокируются, существует ли нет гарантированного порядка, например FIFO или LIFO, который управляет при потоков в семафор.</span><span class="sxs-lookup"><span data-stu-id="477c9-117">If multiple threads are blocked, there is no guaranteed order, such as FIFO or LIFO, that controls when threads enter the semaphore.</span></span>  
  
 <span data-ttu-id="477c9-118">Базовая структура для кода, использующего семафор для защиты ресурсов является:</span><span class="sxs-lookup"><span data-stu-id="477c9-118">The basic structure for code that uses a semaphore to protect resources is:</span></span>  
  
```vb  
  
' Enter semaphore by calling one of the Wait or WaitAsync methods.  
SemaphoreSlim.Wait()  
'   
' Execute code protected by the semaphore.   
'  
SemaphoreSlim.Release()  
  
```  
  
 <span data-ttu-id="477c9-119">Если семафор освобожден всеми потоками, счетчик равен максимальному значению указывается при создании семафора.</span><span class="sxs-lookup"><span data-stu-id="477c9-119">When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created.</span></span> <span data-ttu-id="477c9-120">Счетчик семафора доступна из <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="477c9-120">The semaphore's count is available from the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="477c9-121"><xref:System.Threading.SemaphoreSlim> Класса не ограничивает поток или задачу удостоверения на вызовы <xref:System.Threading.SemaphoreSlim.Wait%2A>, <xref:System.Threading.SemaphoreSlim.WaitAsync%2A>, и <xref:System.Threading.SemaphoreSlim.Release%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="477c9-121">The <xref:System.Threading.SemaphoreSlim> class doesn't enforce thread or task identity on calls to the <xref:System.Threading.SemaphoreSlim.Wait%2A>, <xref:System.Threading.SemaphoreSlim.WaitAsync%2A>, and <xref:System.Threading.SemaphoreSlim.Release%2A> methods.</span></span> <span data-ttu-id="477c9-122">Кроме того Если <xref:System.Threading.SemaphoreSlim.%23ctor%28System.Int32%29> конструктор используется для создания экземпляра <xref:System.Threading.SemaphoreSlim> объекта, <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> свойства можно увеличить значение, заданное конструктором.</span><span class="sxs-lookup"><span data-stu-id="477c9-122">In addition, if the <xref:System.Threading.SemaphoreSlim.%23ctor%28System.Int32%29> constructor is used to instantiate the <xref:System.Threading.SemaphoreSlim> object, the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property can increase beyond the value set by the constructor.</span></span> <span data-ttu-id="477c9-123">Это программист должен убедиться, что вызовы <xref:System.Threading.SemaphoreSlim.Wait%2A> или <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> методы соответствующим образом сопоставляются с вызовами <xref:System.Threading.SemaphoreSlim.Release%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="477c9-123">It is the programmer's responsibility to ensure that calls to <xref:System.Threading.SemaphoreSlim.Wait%2A> or <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> methods are appropriately paired with calls to <xref:System.Threading.SemaphoreSlim.Release%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="477c9-124">В следующем примере создается семафор с максимальное число три потока и начальное число потоков.</span><span class="sxs-lookup"><span data-stu-id="477c9-124">The following example creates a semaphore with a maximum count of three threads and an initial count of zero threads.</span></span> <span data-ttu-id="477c9-125">В примере запускается пять задач, которые блокируют ожидание семафора.</span><span class="sxs-lookup"><span data-stu-id="477c9-125">The example starts five tasks, all of which block waiting for the semaphore.</span></span> <span data-ttu-id="477c9-126">Основной поток вызывает метод <xref:System.Threading.SemaphoreSlim.Release%28System.Int32%29> перегрузку, чтобы увеличить значение счетчика семафора для своего максимального значения, что позволяет войти в семафор три задачи.</span><span class="sxs-lookup"><span data-stu-id="477c9-126">The main thread calls the <xref:System.Threading.SemaphoreSlim.Release%28System.Int32%29> overload to increase the semaphore count to its maximum, which allows three tasks to enter the semaphore.</span></span> <span data-ttu-id="477c9-127">Каждый раз, когда освобождения семафора отображается предыдущее значение счетчика семафора.</span><span class="sxs-lookup"><span data-stu-id="477c9-127">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="477c9-128">Консоль сообщения позволяют отслеживать использование семафора.</span><span class="sxs-lookup"><span data-stu-id="477c9-128">Console messages track semaphore use.</span></span> <span data-ttu-id="477c9-129">Интервал имитирующей работу немного увеличивается для каждого потока облегчить чтение выходных данных.</span><span class="sxs-lookup"><span data-stu-id="477c9-129">The simulated work interval is increased slightly for each thread to make the output easier to read.</span></span>  
  
 [!code-csharp[System.Threading.SemaphoreSlim#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.semaphoreslim/cs/example.cs#1)]
 [!code-vb[System.Threading.SemaphoreSlim#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.semaphoreslim/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="477c9-130">Все открытые и защищенные члены <see cref="T:System.Threading.SemaphoreSlim" /> являются потокобезопасными и могут быть использованы одновременно из нескольких потоков, за исключением элемента <see cref="M:System.Threading.SemaphoreSlim.Dispose" />, которое следует использовать только если все операции в <see cref="T:System.Threading.SemaphoreSlim" /> завершена.</span><span class="sxs-lookup"><span data-stu-id="477c9-130">All public and protected members of <see cref="T:System.Threading.SemaphoreSlim" /> are thread-safe and may be used concurrently from multiple threads, with the exception of <see cref="M:System.Threading.SemaphoreSlim.Dispose" />, which must be used only when all other operations on the <see cref="T:System.Threading.SemaphoreSlim" /> have completed.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="477c9-131">Инициализирует новый экземпляр класса <see cref="T:System.Threading.SemaphoreSlim" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-131">Initializes a new instance of the <see cref="T:System.Threading.SemaphoreSlim" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreSlim (int initialCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreSlim(int initialCount);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCount"><span data-ttu-id="477c9-132">Начальное количество запросов для семафора, которое может быть обеспечено одновременно.</span><span class="sxs-lookup"><span data-stu-id="477c9-132">The initial number of requests for the semaphore that can be granted concurrently.</span></span></param>
        <summary><span data-ttu-id="477c9-133">Инициализирует новый экземпляр класса <see cref="T:System.Threading.SemaphoreSlim" />, указывая первоначальное число запросов, которые могут выполняться одновременно.</span><span class="sxs-lookup"><span data-stu-id="477c9-133">Initializes a new instance of the <see cref="T:System.Threading.SemaphoreSlim" /> class, specifying the initial number of requests that can be granted concurrently.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477c9-134">`initialCount` Параметр определяет число одновременных запросов в семафор, которое может быть предоставлено.</span><span class="sxs-lookup"><span data-stu-id="477c9-134">The `initialCount` parameter defines the number of concurrent requests to enter the semaphore that can be granted.</span></span> <span data-ttu-id="477c9-135">Однако он не определяет максимальное число запросов, которые могут выполняться одновременно.</span><span class="sxs-lookup"><span data-stu-id="477c9-135">However, it doesn't define the maximum number of requests that can be granted concurrently.</span></span> <span data-ttu-id="477c9-136">Объект <xref:System.Threading.SemaphoreSlim> объект, созданный путем вызова этого конструктора не вызывать <xref:System.Threading.SemaphoreFullException> исключение, если вызов <xref:System.Threading.SemaphoreSlim.Release%2A> метод увеличивает значение <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> свойство за пределами `initialCount`.</span><span class="sxs-lookup"><span data-stu-id="477c9-136">A   <xref:System.Threading.SemaphoreSlim> object instantiated by calling this constructor doesn't throw a <xref:System.Threading.SemaphoreFullException> exception if a call to the <xref:System.Threading.SemaphoreSlim.Release%2A> method increases the value of the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property beyond `initialCount`.</span></span> <span data-ttu-id="477c9-137">Это происходит, если существуют дополнительные вызовы <xref:System.Threading.SemaphoreSlim.Release%2A> , методы чем <xref:System.Threading.SemaphoreSlim.Wait%2A> или <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="477c9-137">This occurs if there are more calls to <xref:System.Threading.SemaphoreSlim.Release%2A> methods than there are to <xref:System.Threading.SemaphoreSlim.Wait%2A> or <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> methods.</span></span> <span data-ttu-id="477c9-138">Чтобы задать максимальное число одновременных запросов в семафор, которое может быть предоставлено, вызовите <xref:System.Threading.SemaphoreSlim.%23ctor%28System.Int32%2CSystem.Int32%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="477c9-138">To set the maximum number of concurrent requests to enter the semaphore that can be granted, call the <xref:System.Threading.SemaphoreSlim.%23ctor%28System.Int32%2CSystem.Int32%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="477c9-139">Значение параметра <paramref name="initialCount" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="477c9-139"><paramref name="initialCount" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreSlim (int initialCount, int maxCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maxCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maxCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreSlim(int initialCount, int maxCount);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maxCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCount"><span data-ttu-id="477c9-140">Начальное количество запросов для семафора, которое может быть обеспечено одновременно.</span><span class="sxs-lookup"><span data-stu-id="477c9-140">The initial number of requests for the semaphore that can be granted concurrently.</span></span></param>
        <param name="maxCount"><span data-ttu-id="477c9-141">Максимальное количество запросов семафора, которое может быть обеспеченно одновременно.</span><span class="sxs-lookup"><span data-stu-id="477c9-141">The maximum number of requests for the semaphore that can be granted concurrently.</span></span></param>
        <summary><span data-ttu-id="477c9-142">Инициализирует новый экземпляр класса <see cref="T:System.Threading.SemaphoreSlim" />, указывая изначальное и максимальное число запросов, которые могут выполняться одновременно.</span><span class="sxs-lookup"><span data-stu-id="477c9-142">Initializes a new instance of the <see cref="T:System.Threading.SemaphoreSlim" /> class, specifying the initial and maximum number of requests that can be granted concurrently.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="477c9-143"><paramref name="initialCount" /> меньше 0 или <paramref name="initialCount" /> больше, чем <paramref name="maxCount" />, или <paramref name="maxCount" /> меньше или равен 0.</span><span class="sxs-lookup"><span data-stu-id="477c9-143"><paramref name="initialCount" /> is less than 0, or <paramref name="initialCount" /> is greater than <paramref name="maxCount" />, or <paramref name="maxCount" /> is equal to or less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AvailableWaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle AvailableWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AvailableWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.SemaphoreSlim.AvailableWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ AvailableWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="477c9-144">Возвращает дескриптор <see cref="T:System.Threading.WaitHandle" />, который можно использовать для ожидания семафора.</span><span class="sxs-lookup"><span data-stu-id="477c9-144">Returns a <see cref="T:System.Threading.WaitHandle" /> that can be used to wait on the semaphore.</span></span></summary>
        <value><span data-ttu-id="477c9-145">Дескриптор <see cref="T:System.Threading.WaitHandle" />, который можно использовать для ожидания семафора.</span><span class="sxs-lookup"><span data-stu-id="477c9-145">A <see cref="T:System.Threading.WaitHandle" /> that can be used to wait on the semaphore.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477c9-146">Это свойство используется только в том случае, если необходимо подождать на SemaphoreSlim вместе с другими объектами на базе ядра синхронизации с одним и тем же дескриптором ожидания.</span><span class="sxs-lookup"><span data-stu-id="477c9-146">Use this property only when you must wait on a SemaphoreSlim together with other kernel-based synchronization objects with the same wait handle.</span></span> <span data-ttu-id="477c9-147">Успешное ожидание <xref:System.Threading.SemaphoreSlim.AvailableWaitHandle%2A> не означает успешное ожидания на <xref:System.Threading.SemaphoreSlim> , ни уменьшения счетчика семафора.</span><span class="sxs-lookup"><span data-stu-id="477c9-147">A successful wait on the <xref:System.Threading.SemaphoreSlim.AvailableWaitHandle%2A> does not imply a successful wait on the <xref:System.Threading.SemaphoreSlim> itself, nor does it decrement the semaphore's count.</span></span> <span data-ttu-id="477c9-148">После получает сигнал дескриптору ожидания доступны, нужно подождать <xref:System.Threading.SemaphoreSlim> специально.</span><span class="sxs-lookup"><span data-stu-id="477c9-148">After the available wait handle is signaled, you should wait on the <xref:System.Threading.SemaphoreSlim> specifically.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="477c9-149">Объект <see cref="T:System.Threading.SemaphoreSlim" /> удален.</span><span class="sxs-lookup"><span data-stu-id="477c9-149">The <see cref="T:System.Threading.SemaphoreSlim" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentCount">
      <MemberSignature Language="C#" Value="public int CurrentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.SemaphoreSlim.CurrentCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="477c9-150">Возвращает количество оставшихся потоков, которым разрешено входить в объект <see cref="T:System.Threading.SemaphoreSlim" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-150">Gets the number of remaining threads that can enter the <see cref="T:System.Threading.SemaphoreSlim" /> object.</span></span></summary>
        <value><span data-ttu-id="477c9-151">Количество оставшихся потоков, которым разрешено входить в семафор.</span><span class="sxs-lookup"><span data-stu-id="477c9-151">The number of remaining threads that can enter the semaphore.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477c9-152">Начальное значение <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> свойству вызовом <xref:System.Threading.SemaphoreSlim.%23ctor%2A> конструктора класса.</span><span class="sxs-lookup"><span data-stu-id="477c9-152">The initial value of the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property is set by the call to the <xref:System.Threading.SemaphoreSlim.%23ctor%2A> class constructor.</span></span> <span data-ttu-id="477c9-153">Он уменьшается на единицу при каждом вызове <xref:System.Threading.SemaphoreSlim.Wait%2A> или <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> метода и увеличивается при каждом вызове <xref:System.Threading.SemaphoreSlim.Release%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="477c9-153">It is decremented by each call to the <xref:System.Threading.SemaphoreSlim.Wait%2A> or <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> method, and incremented by each call to the <xref:System.Threading.SemaphoreSlim.Release%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="477c9-154">Освобождает ресурсы, используемые текущим экземпляром класса <see cref="T:System.Threading.SemaphoreSlim" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-154">Releases resources used by the current instance of the <see cref="T:System.Threading.SemaphoreSlim" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="477c9-155">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Threading.SemaphoreSlim" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-155">Releases all resources used by the current instance of the <see cref="T:System.Threading.SemaphoreSlim" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477c9-156">Вызовите метод `Dispose` по окончании использования класса <xref:System.Threading.SemaphoreSlim>.</span><span class="sxs-lookup"><span data-stu-id="477c9-156">Call `Dispose` when you are finished using the <xref:System.Threading.SemaphoreSlim>.</span></span> <span data-ttu-id="477c9-157">Метод `Dispose` оставляет класс <xref:System.Threading.SemaphoreSlim> в непригодном для использования состоянии.</span><span class="sxs-lookup"><span data-stu-id="477c9-157">The `Dispose` method leaves the <xref:System.Threading.SemaphoreSlim> in an unusable state.</span></span> <span data-ttu-id="477c9-158">После вызова метода `Dispose`, необходимо освободить все ссылки на <xref:System.Threading.SemaphoreSlim> , сборщик мусора мог освободить память, <xref:System.Threading.SemaphoreSlim> занимаемую.</span><span class="sxs-lookup"><span data-stu-id="477c9-158">After calling `Dispose`, you must release all references to the <xref:System.Threading.SemaphoreSlim> so the garbage collector can reclaim the memory that the <xref:System.Threading.SemaphoreSlim> was occupying.</span></span>  
  
 <span data-ttu-id="477c9-159">Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [метода](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="477c9-159">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="477c9-160">Всегда вызывайте метод `Dispose` перед освобождением последней ссылки на класс <xref:System.Threading.SemaphoreSlim>.</span><span class="sxs-lookup"><span data-stu-id="477c9-160">Always call `Dispose` before you release your last reference to the <xref:System.Threading.SemaphoreSlim>.</span></span> <span data-ttu-id="477c9-161">В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Threading.SemaphoreSlim> метод `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="477c9-161">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.SemaphoreSlim> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="477c9-162">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="477c9-162"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="477c9-163">Освобождает неуправляемые ресурсы, используемые журналом <see cref="T:System.Threading.SemaphoreSlim" />, и при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="477c9-163">Releases the unmanaged resources used by the <see cref="T:System.Threading.SemaphoreSlim" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477c9-164">В отличие от большинства элементов <xref:System.Threading.SemaphoreSlim>, <xref:System.Threading.SemaphoreSlim.Dispose%2A> не потокобезопасна и не может использоваться параллельно с другими членами данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="477c9-164">Unlike most of the members of <xref:System.Threading.SemaphoreSlim>, <xref:System.Threading.SemaphoreSlim.Dispose%2A> is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Release">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="477c9-165">Освобождает объект <see cref="T:System.Threading.SemaphoreSlim" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-165">Releases the <see cref="T:System.Threading.SemaphoreSlim" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public int Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Release" />
      <MemberSignature Language="VB.NET" Value="Public Function Release () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Release();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="477c9-166">Освобождает объект <see cref="T:System.Threading.SemaphoreSlim" /> один раз.</span><span class="sxs-lookup"><span data-stu-id="477c9-166">Releases the <see cref="T:System.Threading.SemaphoreSlim" /> object once.</span></span></summary>
        <returns><span data-ttu-id="477c9-167">Предыдущее количество в семафоре <see cref="T:System.Threading.SemaphoreSlim" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-167">The previous count of the <see cref="T:System.Threading.SemaphoreSlim" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477c9-168">Вызов <xref:System.Threading.SemaphoreSlim.Release> метода увеличивает <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> свойство на единицу.</span><span class="sxs-lookup"><span data-stu-id="477c9-168">A call to the <xref:System.Threading.SemaphoreSlim.Release> method increments the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by one.</span></span> <span data-ttu-id="477c9-169">Если значение <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> свойство имеет значение 0 перед вызовом этого метода, метод допускает один поток или задачу, заблокирован с помощью вызова <xref:System.Threading.SemaphoreSlim.Wait%2A> или <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> метод в семафор.</span><span class="sxs-lookup"><span data-stu-id="477c9-169">If the value of the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property is zero before this method is called, the method also allows one thread or task blocked by a call to the <xref:System.Threading.SemaphoreSlim.Wait%2A> or <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> method to enter the semaphore.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="477c9-170">Текущий экземпляр уже удален.</span><span class="sxs-lookup"><span data-stu-id="477c9-170">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.Threading.SemaphoreFullException"><span data-ttu-id="477c9-171"><see cref="T:System.Threading.SemaphoreSlim" /> уже достиг максимального размера.</span><span class="sxs-lookup"><span data-stu-id="477c9-171">The <see cref="T:System.Threading.SemaphoreSlim" /> has already reached its maximum size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public int Release (int releaseCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Release(int32 releaseCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Release(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Release (releaseCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Release(int releaseCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="releaseCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="releaseCount"><span data-ttu-id="477c9-172">Количество требуемых выходов из семафора.</span><span class="sxs-lookup"><span data-stu-id="477c9-172">The number of times to exit the semaphore.</span></span></param>
        <summary><span data-ttu-id="477c9-173">Освобождает объект <see cref="T:System.Threading.SemaphoreSlim" /> указанное число раз.</span><span class="sxs-lookup"><span data-stu-id="477c9-173">Releases the <see cref="T:System.Threading.SemaphoreSlim" /> object a specified number of times.</span></span></summary>
        <returns><span data-ttu-id="477c9-174">Предыдущее количество в семафоре <see cref="T:System.Threading.SemaphoreSlim" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-174">The previous count of the <see cref="T:System.Threading.SemaphoreSlim" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477c9-175">Вызов <xref:System.Threading.SemaphoreSlim.Release%28System.Int32%29> метода увеличивает <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> свойства `releaseCount`.</span><span class="sxs-lookup"><span data-stu-id="477c9-175">A call to the <xref:System.Threading.SemaphoreSlim.Release%28System.Int32%29> method increments the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by `releaseCount`.</span></span> <span data-ttu-id="477c9-176">Если значение <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> свойство имеет значение 0 перед вызовом этого метода, метод также допускает `releaseCount` потоков или задач, заблокирован с помощью вызова <xref:System.Threading.SemaphoreSlim.Wait%2A> или <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> метод в семафор.</span><span class="sxs-lookup"><span data-stu-id="477c9-176">If the value of the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property is zero before this method is called, the method also allows `releaseCount` threads or tasks blocked by a call to the <xref:System.Threading.SemaphoreSlim.Wait%2A> or <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> method to enter the semaphore.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="477c9-177">Текущий экземпляр уже удален.</span><span class="sxs-lookup"><span data-stu-id="477c9-177">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="477c9-178">Значение параметра <paramref name="releaseCount" /> меньше 1.</span><span class="sxs-lookup"><span data-stu-id="477c9-178"><paramref name="releaseCount" /> is less than 1.</span></span></exception>
        <exception cref="T:System.Threading.SemaphoreFullException"><span data-ttu-id="477c9-179"><see cref="T:System.Threading.SemaphoreSlim" /> уже достиг максимального размера.</span><span class="sxs-lookup"><span data-stu-id="477c9-179">The <see cref="T:System.Threading.SemaphoreSlim" /> has already reached its maximum size.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Wait">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="477c9-180">Блокирует текущий поток, пока он не сможет войти в <see cref="T:System.Threading.SemaphoreSlim" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-180">Blocks the current thread until it can enter the <see cref="T:System.Threading.SemaphoreSlim" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Wait" />
      <MemberSignature Language="VB.NET" Value="Public Sub Wait ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="477c9-181">Блокирует текущий поток, пока он не сможет войти в <see cref="T:System.Threading.SemaphoreSlim" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-181">Blocks the current thread until it can enter the <see cref="T:System.Threading.SemaphoreSlim" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477c9-182">Если сможет войти в семафор, поток или задачу, он уменьшает <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> свойство на единицу.</span><span class="sxs-lookup"><span data-stu-id="477c9-182">If a thread or task is able to enter the semaphore, it decrements the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="477c9-183">Текущий экземпляр уже удален.</span><span class="sxs-lookup"><span data-stu-id="477c9-183">The current instance has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Wait(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="477c9-184">Количество миллисекунд ожидания, <see cref="F:System.Threading.Timeout.Infinite" />(–1) для неограниченного времени ожидания, или нуль, чтобы проверить состояние дескриптора ожидания и выполнить немедленный возврат.</span><span class="sxs-lookup"><span data-stu-id="477c9-184">The number of milliseconds to wait, <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely, or zero to test the state of the wait handle and return immediately.</span></span></param>
        <summary><span data-ttu-id="477c9-185">Блокирует текущий поток до тех пор, пока он не сможет войти в <see cref="T:System.Threading.SemaphoreSlim" />, используя 32-разрядное целое число со знаком, которое определяет время ожидания.</span><span class="sxs-lookup"><span data-stu-id="477c9-185">Blocks the current thread until it can enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a 32-bit signed integer that specifies the timeout.</span></span></summary>
        <returns>
          <span data-ttu-id="477c9-186">Значение <see langword="true" />, если текущий поток успешно передан в объект <see cref="T:System.Threading.SemaphoreSlim" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-186"><see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks 
<span data-ttu-id="477c9-187">Если время ожидания равно-1 миллисекунды, метод ожидает в течение неограниченного времени.</span><span class="sxs-lookup"><span data-stu-id="477c9-187">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>
 
<span data-ttu-id="477c9-188">Если время ожидания равно нулю миллисекунд, метод не блокирует.</span><span class="sxs-lookup"><span data-stu-id="477c9-188">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="477c9-189">Он проверяет состояние дескриптора ожидания и возвращается немедленно.</span><span class="sxs-lookup"><span data-stu-id="477c9-189">It tests the state of the wait handle and returns immediately.</span></span>

<span data-ttu-id="477c9-190">Если сможет войти в семафор, поток или задачу, он уменьшает <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> свойство на единицу.</span><span class="sxs-lookup"><span data-stu-id="477c9-190">If a thread or task is able to enter the semaphore, it decrements the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by one.</span></span>  
  
<span data-ttu-id="477c9-191">Если поток или задачу, будет заблокирован при вызове <xref:System.Threading.SemaphoreSlim.Wait%28System.Int32%29> и интервала времени ожидания, указанного параметром `millisecondsTimeout` истечения срока действия:</span><span class="sxs-lookup"><span data-stu-id="477c9-191">If a thread or task is blocked when calling <xref:System.Threading.SemaphoreSlim.Wait%28System.Int32%29> and the timeout interval specified by `millisecondsTimeout` expires:</span></span>

- <span data-ttu-id="477c9-192">Поток или задачу, не входили в семафор.</span><span class="sxs-lookup"><span data-stu-id="477c9-192">The thread or task doesn't enter the semaphore.</span></span>
- <span data-ttu-id="477c9-193"><xref:System.Threading.SemaphoreSlim.CurrentCount%2A> Свойства не уменьшается на единицу.</span><span class="sxs-lookup"><span data-stu-id="477c9-193">The <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property isn't decremented.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="477c9-194"><paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от значения –1, которое представляет неограниченное время ожидания, либо время ожидания превышает <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-194"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Wait(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="477c9-195">Токен <see cref="T:System.Threading.CancellationToken" />, который следует контролировать.</span><span class="sxs-lookup"><span data-stu-id="477c9-195">The <see cref="T:System.Threading.CancellationToken" /> token to observe.</span></span></param>
        <summary><span data-ttu-id="477c9-196">Блокирует текущий поток до тех пор, пока он не сможет войти в <see cref="T:System.Threading.SemaphoreSlim" />, и контролирует токен <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-196">Blocks the current thread until it can enter the <see cref="T:System.Threading.SemaphoreSlim" />, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477c9-197">Если сможет войти в семафор, поток или задачу, он уменьшает <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> свойство на единицу.</span><span class="sxs-lookup"><span data-stu-id="477c9-197">If a thread or task is able to enter the semaphore, it decrements the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by one.</span></span>  
  
 <span data-ttu-id="477c9-198">Если `cancellationToken` будет отменена, поток или задачу, не входят в семафор и <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> свойства не уменьшается на единицу.</span><span class="sxs-lookup"><span data-stu-id="477c9-198">If `cancellationToken` is cancelled, the thread or task doesn't enter the semaphore, and the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property isn't decremented.</span></span> <span data-ttu-id="477c9-199">Вместо этого метод выдает <xref:System.OperationCanceledException> исключение.</span><span class="sxs-lookup"><span data-stu-id="477c9-199">Instead, the method throws an <xref:System.OperationCanceledException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="477c9-200"><paramref name="cancellationToken" /> был отменен.</span><span class="sxs-lookup"><span data-stu-id="477c9-200"><paramref name="cancellationToken" /> was canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="477c9-201">Текущий экземпляр уже удален.</span><span class="sxs-lookup"><span data-stu-id="477c9-201">The current instance has already been disposed.</span></span>  
  
 <span data-ttu-id="477c9-202">- или -</span><span class="sxs-lookup"><span data-stu-id="477c9-202">-or-</span></span>  
  
 <span data-ttu-id="477c9-203">Класс <see cref="T:System.Threading.CancellationTokenSource" />, создавший <paramref name="cancellationToken" />, уже удален.</span><span class="sxs-lookup"><span data-stu-id="477c9-203">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Wait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="477c9-204"><see cref="T:System.TimeSpan" />, представляющий количество миллисекунд для ожидания, <see cref="T:System.TimeSpan" />, представляющий –1 миллисекунду для неопределенного ожидания, или <see cref="T:System.TimeSpan" />, представляющий 0 миллисекунд, чтобы протестировать дескриптор ожидания и выполнить немедленный возврат.</span><span class="sxs-lookup"><span data-stu-id="477c9-204">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely, or a <see cref="T:System.TimeSpan" /> that represents 0 milliseconds to test the wait handle and return immediately.</span></span></param>
        <summary><span data-ttu-id="477c9-205">Блокирует текущий поток до тех пор, пока он не сможет войти в <see cref="T:System.Threading.SemaphoreSlim" />, используя значение <see cref="T:System.TimeSpan" /> для определения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="477c9-205">Blocks the current thread until it can enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a <see cref="T:System.TimeSpan" /> to specify the timeout.</span></span></summary>
        <returns>
          <span data-ttu-id="477c9-206">Значение <see langword="true" />, если текущий поток успешно передан в объект <see cref="T:System.Threading.SemaphoreSlim" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-206"><see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="477c9-207">Если время ожидания равно-1 миллисекунды, метод ожидает в течение неограниченного времени.</span><span class="sxs-lookup"><span data-stu-id="477c9-207">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>
 
<span data-ttu-id="477c9-208">Если время ожидания равно нулю миллисекунд, метод не блокирует.</span><span class="sxs-lookup"><span data-stu-id="477c9-208">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="477c9-209">Он проверяет состояние дескриптора ожидания и возвращается немедленно.</span><span class="sxs-lookup"><span data-stu-id="477c9-209">It tests the state of the wait handle and returns immediately.</span></span> 
 
<span data-ttu-id="477c9-210">Если сможет войти в семафор, поток или задачу, он уменьшает <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> свойство на единицу.</span><span class="sxs-lookup"><span data-stu-id="477c9-210">If a thread or task is able to enter the semaphore, it decrements the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by one.</span></span>  
  
<span data-ttu-id="477c9-211">Если поток или задачу, будет заблокирован при вызове <xref:System.Threading.SemaphoreSlim.Wait%28System.TimeSpan%29> и интервала времени ожидания, указанного параметром `millisecondsTimeout` истечения срока действия:</span><span class="sxs-lookup"><span data-stu-id="477c9-211">If a thread or task is blocked when calling <xref:System.Threading.SemaphoreSlim.Wait%28System.TimeSpan%29> and the timeout interval specified by `millisecondsTimeout` expires:</span></span>

- <span data-ttu-id="477c9-212">Поток или задачу, не входили в семафор.</span><span class="sxs-lookup"><span data-stu-id="477c9-212">The thread or task doesn't enter the semaphore.</span></span>
- <span data-ttu-id="477c9-213"><xref:System.Threading.SemaphoreSlim.CurrentCount%2A> Свойства не уменьшается на единицу.</span><span class="sxs-lookup"><span data-stu-id="477c9-213">The <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property isn't decremented.</span></span>   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="477c9-214"><paramref name="timeout" /> является отрицательным числом, отличным от значения –1, которое представляет неограниченное время ожидания, либо время ожидания превышает <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-214"><paramref name="timeout" /> is a negative number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="477c9-215">Экземпляр semaphoreSlim был уничтожен <paramref name="." /></span><span class="sxs-lookup"><span data-stu-id="477c9-215">The semaphoreSlim instance has been disposed <paramref name="." /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Wait(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="477c9-216">Количество миллисекунд ожидания, <see cref="F:System.Threading.Timeout.Infinite" />(–1) для неограниченного времени ожидания, или нуль, чтобы проверить состояние дескриптора ожидания и выполнить немедленный возврат.</span><span class="sxs-lookup"><span data-stu-id="477c9-216">The number of milliseconds to wait, <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely, or zero to test the state of the wait handle and return immediately.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="477c9-217">Токен отмены <see cref="T:System.Threading.CancellationToken" />, который следует контролировать.</span><span class="sxs-lookup"><span data-stu-id="477c9-217">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="477c9-218">Блокирует текущий поток до тех пор, пока он не сможет войти в <see cref="T:System.Threading.SemaphoreSlim" />, используя 32-разрядное целое число со знаком, которое определяет время ожидания, и контролирует токен <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-218">Blocks the current thread until it can enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a 32-bit signed integer that specifies the timeout, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns>
          <span data-ttu-id="477c9-219">Значение <see langword="true" />, если текущий поток успешно передан в объект <see cref="T:System.Threading.SemaphoreSlim" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-219"><see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="477c9-220">Если время ожидания равно-1 миллисекунды, метод ожидает в течение неограниченного времени.</span><span class="sxs-lookup"><span data-stu-id="477c9-220">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>
 
<span data-ttu-id="477c9-221">Если время ожидания равно нулю миллисекунд, метод не блокирует.</span><span class="sxs-lookup"><span data-stu-id="477c9-221">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="477c9-222">Он проверяет состояние дескриптора ожидания и возвращается немедленно.</span><span class="sxs-lookup"><span data-stu-id="477c9-222">It tests the state of the wait handle and returns immediately.</span></span>

<span data-ttu-id="477c9-223">Если сможет войти в семафор, поток или задачу, он уменьшает <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> свойство на единицу.</span><span class="sxs-lookup"><span data-stu-id="477c9-223">If a thread or task is able to enter the semaphore, it decrements the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by one.</span></span>  
  
<span data-ttu-id="477c9-224">Если `cancellationToken` отменена, или если поток или задачу, будет заблокирован при вызове <xref:System.Threading.SemaphoreSlim.Wait%28System.Int32%2CSystem.Threading.CancellationToken%29> и интервала времени ожидания, указанного параметром `millisecondsTimeout` истечения срока действия:</span><span class="sxs-lookup"><span data-stu-id="477c9-224">If `cancellationToken` is cancelled, or if a thread or task is blocked when calling <xref:System.Threading.SemaphoreSlim.Wait%28System.Int32%2CSystem.Threading.CancellationToken%29> and the timeout interval specified by `millisecondsTimeout` expires:</span></span>

- <span data-ttu-id="477c9-225">Поток или задачу, не входили в семафор.</span><span class="sxs-lookup"><span data-stu-id="477c9-225">The thread or task doesn't enter the semaphore.</span></span>
- <span data-ttu-id="477c9-226"><xref:System.Threading.SemaphoreSlim.CurrentCount%2A> Свойства не уменьшается на единицу.</span><span class="sxs-lookup"><span data-stu-id="477c9-226">The <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property isn't decremented.</span></span>  
 
<span data-ttu-id="477c9-227">Если `cancellationToken` будет отменена, метод создает <xref:System.OperationCanceledException> исключение.</span><span class="sxs-lookup"><span data-stu-id="477c9-227">If `cancellationToken` is cancelled, the method throws an   <xref:System.OperationCanceledException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="477c9-228"><paramref name="cancellationToken" /> был отменен.</span><span class="sxs-lookup"><span data-stu-id="477c9-228"><paramref name="cancellationToken" /> was canceled.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="477c9-229"><paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от значения –1, которое представляет неограниченное время ожидания, либо время ожидания превышает <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-229"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="477c9-230">Экземпляр <see cref="T:System.Threading.SemaphoreSlim" /> был удален, или объект <see cref="T:System.Threading.CancellationTokenSource" />, создавший<paramref name="cancellationToken" />, был удален.</span><span class="sxs-lookup"><span data-stu-id="477c9-230">The <see cref="T:System.Threading.SemaphoreSlim" /> instance has been disposed, or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="477c9-231"><see cref="T:System.TimeSpan" />, представляющий количество миллисекунд для ожидания, <see cref="T:System.TimeSpan" />, представляющий –1 миллисекунду для неопределенного ожидания, или <see cref="T:System.TimeSpan" />, представляющий 0 миллисекунд, чтобы протестировать дескриптор ожидания и выполнить немедленный возврат.</span><span class="sxs-lookup"><span data-stu-id="477c9-231">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely, or a <see cref="T:System.TimeSpan" /> that represents 0 milliseconds to test the wait handle and return immediately.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="477c9-232">Токен отмены <see cref="T:System.Threading.CancellationToken" />, который следует контролировать.</span><span class="sxs-lookup"><span data-stu-id="477c9-232">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="477c9-233">Блокирует текущий поток до тех пор, пока он не сможет войти в <see cref="T:System.Threading.SemaphoreSlim" />, используя значение <see cref="T:System.TimeSpan" />, которое определяет время ожидания, и контролирует токен <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-233">Blocks the current thread until it can enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a <see cref="T:System.TimeSpan" /> that specifies the timeout, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns>
          <span data-ttu-id="477c9-234">Значение <see langword="true" />, если текущий поток успешно передан в объект <see cref="T:System.Threading.SemaphoreSlim" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-234"><see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="477c9-235">Если время ожидания равно-1 миллисекунды, метод ожидает в течение неограниченного времени.</span><span class="sxs-lookup"><span data-stu-id="477c9-235">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>
 
<span data-ttu-id="477c9-236">Если время ожидания равно нулю миллисекунд, метод не блокирует.</span><span class="sxs-lookup"><span data-stu-id="477c9-236">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="477c9-237">Он проверяет состояние дескриптора ожидания и возвращается немедленно.</span><span class="sxs-lookup"><span data-stu-id="477c9-237">It tests the state of the wait handle and returns immediately.</span></span> 

<span data-ttu-id="477c9-238">Если сможет войти в семафор, поток или задачу, он уменьшает <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> свойство на единицу.</span><span class="sxs-lookup"><span data-stu-id="477c9-238">If a thread or task is able to enter the semaphore, it decrements the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by one.</span></span>  
  
<span data-ttu-id="477c9-239">Если `cancellationToken` отменена, или если поток или задачу, будет заблокирован при вызове <xref:System.Threading.SemaphoreSlim.Wait%28System.TimeSpan%2CSystem.Threading.CancellationToken%29> и интервала времени ожидания, указанного параметром `millisecondsTimeout` истечения срока действия:</span><span class="sxs-lookup"><span data-stu-id="477c9-239">If `cancellationToken` is cancelled, or if a thread or task is blocked when calling <xref:System.Threading.SemaphoreSlim.Wait%28System.TimeSpan%2CSystem.Threading.CancellationToken%29> and the timeout interval specified by `millisecondsTimeout` expires:</span></span>

- <span data-ttu-id="477c9-240">Поток или задачу, не входили в семафор.</span><span class="sxs-lookup"><span data-stu-id="477c9-240">The thread or task doesn't enter the semaphore.</span></span>
- <span data-ttu-id="477c9-241"><xref:System.Threading.SemaphoreSlim.CurrentCount%2A> Свойства не уменьшается на единицу.</span><span class="sxs-lookup"><span data-stu-id="477c9-241">The <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property isn't decremented.</span></span>  

<span data-ttu-id="477c9-242">Если `cancellationToken` будет отменена, метод создает <xref:System.OperationCanceledException> исключение.</span><span class="sxs-lookup"><span data-stu-id="477c9-242">If `cancellationToken` is cancelled, the method throws an <xref:System.OperationCanceledException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="477c9-243"><paramref name="cancellationToken" /> был отменен.</span><span class="sxs-lookup"><span data-stu-id="477c9-243"><paramref name="cancellationToken" /> was canceled.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="477c9-244"><paramref name="timeout" /> является отрицательным числом, отличным от значения –1, которое представляет неограниченное время ожидания, либо время ожидания превышает <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-244"><paramref name="timeout" /> is a negative number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="477c9-245">Экземпляр semaphoreSlim был уничтожен <paramref name="." /><paramref name="-or-" /></span><span class="sxs-lookup"><span data-stu-id="477c9-245">The semaphoreSlim instance has been disposed <paramref name="." /><paramref name="-or-" /></span></span>  
  
 <span data-ttu-id="477c9-246">Класс <see cref="T:System.Threading.CancellationTokenSource" />, создавший <paramref name="cancellationToken" />, уже удален.</span><span class="sxs-lookup"><span data-stu-id="477c9-246">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitAsync">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="477c9-247">Асинхронно ожидает входа в <see cref="T:System.Threading.SemaphoreSlim" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-247">Asynchronously waits to enter the <see cref="T:System.Threading.SemaphoreSlim" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WaitAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WaitAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.WaitAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WaitAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="477c9-248">Асинхронно ожидает входа в <see cref="T:System.Threading.SemaphoreSlim" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-248">Asynchronously waits to enter the <see cref="T:System.Threading.SemaphoreSlim" />.</span></span></summary>
        <returns><span data-ttu-id="477c9-249">Задача, которая завершается при входе в семафор.</span><span class="sxs-lookup"><span data-stu-id="477c9-249">A task that will complete when the semaphore has been entered.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; WaitAsync (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; WaitAsync(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.WaitAsync(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitAsync (millisecondsTimeout As Integer) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ WaitAsync(int millisecondsTimeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="477c9-250">Количество миллисекунд ожидания, <see cref="F:System.Threading.Timeout.Infinite" /> (–1) для неограниченного времени ожидания, или нуль, чтобы проверить состояние дескриптора ожидания и выполнить немедленный возврат.</span><span class="sxs-lookup"><span data-stu-id="477c9-250">The number of milliseconds to wait, <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely, or zero to test the state of the wait handle and return immediately.</span></span></param>
        <summary><span data-ttu-id="477c9-251">Асинхронно ожидает входа в <see cref="T:System.Threading.SemaphoreSlim" />, используя 32-разрядное целое число со знаком для измерения интервала времени.</span><span class="sxs-lookup"><span data-stu-id="477c9-251">Asynchronously waits to enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a 32-bit signed integer to measure the time interval.</span></span></summary>
        <returns><span data-ttu-id="477c9-252">Задача, которая будет завершаться с результатом <see langword="true" />, если текущий поток успешно вошел в <see cref="T:System.Threading.SemaphoreSlim" />, и с результатом <see langword="false" /> в противном случае.</span><span class="sxs-lookup"><span data-stu-id="477c9-252">A task that will complete with a result of <see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />, otherwise with a result of <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477c9-253">Если время ожидания равно-1 миллисекунды, метод ожидает в течение неограниченного времени.</span><span class="sxs-lookup"><span data-stu-id="477c9-253">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>
 
 <span data-ttu-id="477c9-254">Если время ожидания равно нулю миллисекунд, метод не блокирует.</span><span class="sxs-lookup"><span data-stu-id="477c9-254">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="477c9-255">Он проверяет состояние дескриптора ожидания и возвращается немедленно.</span><span class="sxs-lookup"><span data-stu-id="477c9-255">It tests the state of the wait handle and returns immediately.</span></span> 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="477c9-256">Текущий экземпляр уже удален.</span><span class="sxs-lookup"><span data-stu-id="477c9-256">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="477c9-257"><paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от значения –1, которое представляет неограниченное время ожидания, либо время ожидания превышает <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-257"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WaitAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WaitAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.WaitAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WaitAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="477c9-258">Токен <see cref="T:System.Threading.CancellationToken" />, который следует контролировать.</span><span class="sxs-lookup"><span data-stu-id="477c9-258">The <see cref="T:System.Threading.CancellationToken" /> token to observe.</span></span></param>
        <summary><span data-ttu-id="477c9-259">Асинхронно ожидает входа в <see cref="T:System.Threading.SemaphoreSlim" />, контролируя <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-259">Asynchronously waits to enter the <see cref="T:System.Threading.SemaphoreSlim" />, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns><span data-ttu-id="477c9-260">Задача, которая завершается при входе в семафор.</span><span class="sxs-lookup"><span data-stu-id="477c9-260">A task that will complete when the semaphore has been entered.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="477c9-261">Текущий экземпляр уже удален.</span><span class="sxs-lookup"><span data-stu-id="477c9-261">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="477c9-262"><paramref name="cancellationToken" /> был отменен.</span><span class="sxs-lookup"><span data-stu-id="477c9-262"><paramref name="cancellationToken" /> was canceled.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; WaitAsync (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; WaitAsync(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitAsync (timeout As TimeSpan) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ WaitAsync(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="477c9-263"><see cref="T:System.TimeSpan" />, представляющий количество миллисекунд для ожидания, <see cref="T:System.TimeSpan" />, представляющий –1 миллисекунду для неопределенного ожидания, или <see cref="T:System.TimeSpan" />, представляющий 0 миллисекунд, чтобы протестировать дескриптор ожидания и выполнить немедленный возврат.</span><span class="sxs-lookup"><span data-stu-id="477c9-263">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely, or a <see cref="T:System.TimeSpan" /> that represents 0 milliseconds to test the wait handle and return immediately.</span></span></param>
        <summary><span data-ttu-id="477c9-264">Асинхронно ожидает входа в <see cref="T:System.Threading.SemaphoreSlim" />, используя <see cref="T:System.TimeSpan" /> для измерения интервала времени.</span><span class="sxs-lookup"><span data-stu-id="477c9-264">Asynchronously waits to enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a <see cref="T:System.TimeSpan" /> to measure the time interval.</span></span></summary>
        <returns><span data-ttu-id="477c9-265">Задача, которая будет завершаться с результатом <see langword="true" />, если текущий поток успешно вошел в <see cref="T:System.Threading.SemaphoreSlim" />, и с результатом <see langword="false" /> в противном случае.</span><span class="sxs-lookup"><span data-stu-id="477c9-265">A task that will complete with a result of <see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />, otherwise with a result of <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477c9-266">Если время ожидания равно-1 миллисекунды, метод ожидает в течение неограниченного времени.</span><span class="sxs-lookup"><span data-stu-id="477c9-266">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>
 
 <span data-ttu-id="477c9-267">Если время ожидания равно нулю миллисекунд, метод не блокирует.</span><span class="sxs-lookup"><span data-stu-id="477c9-267">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="477c9-268">Он проверяет состояние дескриптора ожидания и возвращается немедленно.</span><span class="sxs-lookup"><span data-stu-id="477c9-268">It tests the state of the wait handle and returns immediately.</span></span> 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="477c9-269">Текущий экземпляр уже удален.</span><span class="sxs-lookup"><span data-stu-id="477c9-269">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="477c9-270"><paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от значения –1, которое представляет неограниченное время ожидания, либо время ожидания превышает <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-270"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; WaitAsync (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; WaitAsync(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.WaitAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ WaitAsync(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="477c9-271">Количество миллисекунд ожидания, <see cref="F:System.Threading.Timeout.Infinite" /> (–1) для неограниченного времени ожидания, или нуль, чтобы проверить состояние дескриптора ожидания и выполнить немедленный возврат.</span><span class="sxs-lookup"><span data-stu-id="477c9-271">The number of milliseconds to wait, <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely, or zero to test the state of the wait handle and return immediately.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="477c9-272">Токен отмены <see cref="T:System.Threading.CancellationToken" />, который следует контролировать.</span><span class="sxs-lookup"><span data-stu-id="477c9-272">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="477c9-273">Асинхронно ожидает входа в <see cref="T:System.Threading.SemaphoreSlim" />, используя 32-разрядное целое число со знаком для измерения интервала времени, контролируя <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-273">Asynchronously waits to enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a 32-bit signed integer to measure the time interval, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns><span data-ttu-id="477c9-274">Задача, которая будет завершаться с результатом <see langword="true" />, если текущий поток успешно вошел в <see cref="T:System.Threading.SemaphoreSlim" />, и с результатом <see langword="false" /> в противном случае.</span><span class="sxs-lookup"><span data-stu-id="477c9-274">A task that will complete with a result of <see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />, otherwise with a result of <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477c9-275">Если время ожидания равно-1 миллисекунды, метод ожидает в течение неограниченного времени.</span><span class="sxs-lookup"><span data-stu-id="477c9-275">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>
 
 <span data-ttu-id="477c9-276">Если время ожидания равно нулю миллисекунд, метод не блокирует.</span><span class="sxs-lookup"><span data-stu-id="477c9-276">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="477c9-277">Он проверяет состояние дескриптора ожидания и возвращается немедленно.</span><span class="sxs-lookup"><span data-stu-id="477c9-277">It tests the state of the wait handle and returns immediately.</span></span> 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="477c9-278"><paramref name="millisecondsTimeout" /> является числом, отличным от значения –1, которое представляет неограниченное время ожидания, либо время ожидания превышает <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-278"><paramref name="millisecondsTimeout" /> is a number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="477c9-279">Текущий экземпляр уже удален.</span><span class="sxs-lookup"><span data-stu-id="477c9-279">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="477c9-280"><paramref name="cancellationToken" /> был отменен.</span><span class="sxs-lookup"><span data-stu-id="477c9-280"><paramref name="cancellationToken" /> was canceled.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; WaitAsync (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; WaitAsync(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ WaitAsync(TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="477c9-281"><see cref="T:System.TimeSpan" />, представляющий количество миллисекунд для ожидания, <see cref="T:System.TimeSpan" />, представляющий –1 миллисекунду для неопределенного ожидания, или <see cref="T:System.TimeSpan" />, представляющий 0 миллисекунд, чтобы протестировать дескриптор ожидания и выполнить немедленный возврат.</span><span class="sxs-lookup"><span data-stu-id="477c9-281">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely, or a <see cref="T:System.TimeSpan" /> that represents 0 milliseconds to test the wait handle and return immediately.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="477c9-282">Токен <see cref="T:System.Threading.CancellationToken" />, который следует контролировать.</span><span class="sxs-lookup"><span data-stu-id="477c9-282">The <see cref="T:System.Threading.CancellationToken" /> token to observe.</span></span></param>
        <summary><span data-ttu-id="477c9-283">Асинхронно ожидает входа в <see cref="T:System.Threading.SemaphoreSlim" />, используя <see cref="T:System.TimeSpan" /> для измерения интервала времени и контролируя <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-283">Asynchronously waits to enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a <see cref="T:System.TimeSpan" /> to measure the time interval, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns><span data-ttu-id="477c9-284">Задача, которая будет завершаться с результатом <see langword="true" />, если текущий поток успешно вошел в <see cref="T:System.Threading.SemaphoreSlim" />, и с результатом <see langword="false" /> в противном случае.</span><span class="sxs-lookup"><span data-stu-id="477c9-284">A task that will complete with a result of <see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />, otherwise with a result of <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477c9-285">Если время ожидания равно-1 миллисекунды, метод ожидает в течение неограниченного времени.</span><span class="sxs-lookup"><span data-stu-id="477c9-285">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>

 <span data-ttu-id="477c9-286">Если время ожидания равно нулю миллисекунд, метод не блокирует.</span><span class="sxs-lookup"><span data-stu-id="477c9-286">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="477c9-287">Он проверяет состояние дескриптора ожидания и возвращается немедленно.</span><span class="sxs-lookup"><span data-stu-id="477c9-287">It tests the state of the wait handle and returns immediately.</span></span> 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="477c9-288"><paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от значения –1, которое представляет неограниченное время ожидания, либо время ожидания превышает <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="477c9-288"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="477c9-289"><paramref name="cancellationToken" /> был отменен.</span><span class="sxs-lookup"><span data-stu-id="477c9-289"><paramref name="cancellationToken" /> was canceled.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>