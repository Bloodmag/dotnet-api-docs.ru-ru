<Type Name="SpinWait" FullName="System.Threading.SpinWait">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6c385202d641d465586dc3206f02b247b2d6170" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36605803" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct SpinWait" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SpinWait extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Threading.SpinWait" />
  <TypeSignature Language="VB.NET" Value="Public Structure SpinWait" />
  <TypeSignature Language="C++ CLI" Value="public value class SpinWait" />
  <TypeSignature Language="F#" Value="type SpinWait = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="71b58-101">Предоставляет поддержку ожидания на основе прокруток.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71b58-101">Provides support for spin-based waiting.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b58-102"><xref:System.Threading.SpinWait> Инкапсулирует общую логику цикличную работу в режиме.</span><span class="sxs-lookup"><span data-stu-id="71b58-102"><xref:System.Threading.SpinWait> encapsulates common spinning logic.</span></span> <span data-ttu-id="71b58-103">На компьютерах переход всегда используется вместо ожидания и на компьютерах с процессорами Intel, использующей технологию Hyper-Threading, он помогает предотвратить нехватка потоков оборудования.</span><span class="sxs-lookup"><span data-stu-id="71b58-103">On single-processor machines, yields are always used instead of busy waits, and on computers with Intel processors employing Hyper-Threading technology, it helps to prevent hardware thread starvation.</span></span> <span data-ttu-id="71b58-104">SpinWait инкапсулирует хорошее сочетание вращающийся и переключения.</span><span class="sxs-lookup"><span data-stu-id="71b58-104">SpinWait encapsulates a good mixture of spinning and true yielding.</span></span>  
  
 <span data-ttu-id="71b58-105"><xref:System.Threading.SpinWait> является типом значения, это означает, что код нижнего уровня, может использовать SpinWait не опасаясь ненужные распределения накладных расходов.</span><span class="sxs-lookup"><span data-stu-id="71b58-105"><xref:System.Threading.SpinWait> is a value type, which means that low-level code can utilize SpinWait without fear of unnecessary allocation overheads.</span></span> <span data-ttu-id="71b58-106">SpinWait обычно не имеет смысла для обычных приложений.</span><span class="sxs-lookup"><span data-stu-id="71b58-106">SpinWait is not generally useful for ordinary applications.</span></span> <span data-ttu-id="71b58-107">В большинстве случаев следует использовать классы синхронизации, предоставляемые платформой .NET Framework, такие как <xref:System.Threading.Monitor>.</span><span class="sxs-lookup"><span data-stu-id="71b58-107">In most cases, you should use the synchronization classes provided by the .NET Framework, such as <xref:System.Threading.Monitor>.</span></span> <span data-ttu-id="71b58-108">В большинстве случаев, где счетчик ожидания является обязательным, однако <xref:System.Threading.SpinWait> тип должен быть предпочтительнее, чем <xref:System.Threading.Thread.SpinWait%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="71b58-108">For most purposes where spin waiting is required, however, the <xref:System.Threading.SpinWait> type should be preferred over the <xref:System.Threading.Thread.SpinWait%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71b58-109">В следующем примере показано, как использовать <xref:System.Threading.SpinWait>:</span><span class="sxs-lookup"><span data-stu-id="71b58-109">The following example shows how to use a <xref:System.Threading.SpinWait>:</span></span>  
  
 [!code-csharp[System.Threading.SpinWait#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.spinwait/cs/spinwait.cs#01)]
 [!code-vb[System.Threading.SpinWait#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.spinwait/vb/spinwait.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="71b58-110">Хотя <see cref="T:System.Threading.SpinWait" /> — предназначены для использования в параллельных приложений, он не предназначен для использования несколькими потоками одновременно.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71b58-110">While <see cref="T:System.Threading.SpinWait" /> is designed to be used in concurrent applications, it is not designed to be used from multiple threads concurrently.</span>
      </span>
      <span data-ttu-id="71b58-111">
        <see cref="T:System.Threading.SpinWait" /> члены не являются потокобезопасными.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71b58-111">
          <see cref="T:System.Threading.SpinWait" /> members are not thread-safe.</span>
      </span>
      <span data-ttu-id="71b58-112">Если несколько потоков должны ожидать, каждый следует использовать свой собственный экземпляр <see cref="T:System.Threading.SpinWait" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71b58-112">If multiple threads must spin, each should use its own instance of <see cref="T:System.Threading.SpinWait" />.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Threading.SpinWait.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Threading.SpinWait.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71b58-113">Получает число раз, которое <see cref="M:System.Threading.SpinWait.SpinOnce" /> был вызван для этого экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-113">Gets the number of times <see cref="M:System.Threading.SpinWait.SpinOnce" /> has been called on this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71b58-114">Возвращает целое число, представляющее количество вызовов метода <see cref="M:System.Threading.SpinWait.SpinOnce" /> для данного экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-114">Returns an integer that represents the number of times <see cref="M:System.Threading.SpinWait.SpinOnce" /> has been called on this instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSpinWillYield">
      <MemberSignature Language="C#" Value="public bool NextSpinWillYield { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NextSpinWillYield" />
      <MemberSignature Language="DocId" Value="P:System.Threading.SpinWait.NextSpinWillYield" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSpinWillYield As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NextSpinWillYield { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSpinWillYield : bool" Usage="System.Threading.SpinWait.NextSpinWillYield" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71b58-115">Получает значение, показывающее, даст ли следующий вызов к <see cref="M:System.Threading.SpinWait.SpinOnce" /> доступ к процессору, запуская обязательное переключение контекста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-115">Gets whether the next call to <see cref="M:System.Threading.SpinWait.SpinOnce" /> will yield the processor, triggering a forced context switch.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71b58-116">Даст ли следующий вызов к <see cref="M:System.Threading.SpinWait.SpinOnce" /> доступ к процессору, запуская обязательное переключение контекста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-116">Whether the next call to <see cref="M:System.Threading.SpinWait.SpinOnce" /> will yield the processor, triggering a forced context switch.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b58-117">На компьютере один ЦП <xref:System.Threading.SpinWait.SpinOnce%2A> всегда является процессор.</span><span class="sxs-lookup"><span data-stu-id="71b58-117">On a single-CPU machine, <xref:System.Threading.SpinWait.SpinOnce%2A> always yields the processor.</span></span> <span data-ttu-id="71b58-118">На компьютерах с несколькими процессорами <xref:System.Threading.SpinWait.SpinOnce%2A> может привести к после неопределенное число вызовов.</span><span class="sxs-lookup"><span data-stu-id="71b58-118">On machines with multiple CPUs, <xref:System.Threading.SpinWait.SpinOnce%2A> may yield after an unspecified number of calls.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="spinWait.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71b58-119">Сбрасывает подсчет прокруток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-119">Resets the spin counter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b58-120">Это делает <xref:System.Threading.SpinWait.SpinOnce%2A> и <xref:System.Threading.SpinWait.NextSpinWillYield%2A> ведут себя так, будто никакие вызовы <xref:System.Threading.SpinWait.SpinOnce%2A> выданных в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="71b58-120">This makes <xref:System.Threading.SpinWait.SpinOnce%2A> and <xref:System.Threading.SpinWait.NextSpinWillYield%2A> behave as though no calls to <xref:System.Threading.SpinWait.SpinOnce%2A> had been issued on this instance.</span></span> <span data-ttu-id="71b58-121">Если <xref:System.Threading.SpinWait> экземпляр используется многократно, она может быть полезно сбросить его, чтобы избежать слишком раннего.</span><span class="sxs-lookup"><span data-stu-id="71b58-121">If a <xref:System.Threading.SpinWait> instance is reused many times, it may be useful to reset it to avoid yielding too soon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71b58-122">Ниже приведен пример использования SpinWait в реализации простой стека без блокировки.</span><span class="sxs-lookup"><span data-stu-id="71b58-122">The following is an example of using SpinWait in a simple lock-free stack implementation.</span></span> <span data-ttu-id="71b58-123">(Это лишь пример.</span><span class="sxs-lookup"><span data-stu-id="71b58-123">(This is just an example.</span></span> <span data-ttu-id="71b58-124">Если требуется эффективный поточно ориентированного стек, рассмотрите возможность использования ConcurrentStack.)</span><span class="sxs-lookup"><span data-stu-id="71b58-124">If an efficient, thread-safe stack is needed, consider using ConcurrentStack.)</span></span>  
  
 `// C#`  
  
 `public class LockFreeStack<T>`  
  
 `{`  
  
 `private volatile Node m_head;`  
  
 `private class Node { public Node Next; public T Value; }`  
  
 `public void Push(T item)`  
  
 `{`  
  
 `var spin = new SpinWait();`  
  
 `Node node = new Node { Value = item }, head;`  
  
 `while (true)`  
  
 `{`  
  
 `head = m_head;`  
  
 `node.Next = head;`  
  
 `if (Interlocked.CompareExchange(ref m_head, node, head) == head) break;`  
  
 `spin.SpinOnce();`  
  
 `}`  
  
 `}`  
  
 `public bool TryPop(out T result)`  
  
 `{`  
  
 `result = default(T);`  
  
 `var spin = new SpinWait();`  
  
 `Node head;`  
  
 `while (true)`  
  
 `{`  
  
 `head = m_head;`  
  
 `if (head == null) return false;`  
  
 `if (Interlocked.CompareExchange(ref m_head, head.Next, head) == head)`  
  
 `{`  
  
 `result = head.Value;`  
  
 `return true;`  
  
 `}`  
  
 `spin.SpinOnce();`  
  
 `}`  
  
 `}`  
  
 `}`  
  
 `' Visual Basic`  
  
 `Public Class LockFreeStack(Of T)`  
  
 `Private m_head As Node`  
  
 `Private Class Node`  
  
 `Public [Next] As Node`  
  
 `Public Value As T`  
  
 `End Class`  
  
 `Public Sub Push(ByVal item As T)`  
  
 `Dim spin As New SpinWait()`  
  
 `Dim head As Node, node As New Node With {.Value = item}`  
  
 `While True`  
  
 `Thread.MemoryBarrier()`  
  
 `head = m_head`  
  
 `node.Next = head`  
  
 `If Interlocked.CompareExchange(m_head, node, head) Is head Then Exit While`  
  
 `spin.SpinOnce()`  
  
 `End While`  
  
 `End Sub`  
  
 `Public Function TryPop(ByRef result As T) As Boolean`  
  
 `result = CType(Nothing, T)`  
  
 `Dim spin As New SpinWait()`  
  
 `Dim head As Node`  
  
 `While True`  
  
 `Thread.MemoryBarrier()`  
  
 `head = m_head`  
  
 `If head Is Nothing Then Return False`  
  
 `If Interlocked.CompareExchange(m_head, head.Next, head) Is head Then`  
  
 `result = head.Value`  
  
 `Return True`  
  
 `End If`  
  
 `spin.SpinOnce()`  
  
 `End While`  
  
 `End Function`  
  
 `End Class`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpinOnce">
      <MemberSignature Language="C#" Value="public void SpinOnce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpinOnce() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinOnce" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpinOnce ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpinOnce();" />
      <MemberSignature Language="F#" Value="member this.SpinOnce : unit -&gt; unit" Usage="spinWait.SpinOnce " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71b58-125">Выполняет одну прокрутку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-125">Performs a single spin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b58-126">Это обычно вызывается в цикле и может меняться в зависимости от числа раз поведении <xref:System.Threading.SpinWait.SpinOnce%2A> сих был вызван для данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="71b58-126">This is typically called in a loop, and may change in behavior based on the number of times a <xref:System.Threading.SpinWait.SpinOnce%2A> has been called thus far on this instance.</span></span> <span data-ttu-id="71b58-127">В результате каждый счетчик <xref:System.Threading.Thread.SpinWait%2A> вызываемого метода.</span><span class="sxs-lookup"><span data-stu-id="71b58-127">Each spin results in the <xref:System.Threading.Thread.SpinWait%2A> method being called.</span></span> <span data-ttu-id="71b58-128">Значение счетчика остается числа раз <xref:System.Threading.SpinWait.SpinOnce%2A> вызывается, и по достижении порогового значения счетчика <xref:System.Threading.Thread.Yield%2A> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="71b58-128">A count is kept of the number of times <xref:System.Threading.SpinWait.SpinOnce%2A> is called, and after a threshold count is reached, the <xref:System.Threading.Thread.Yield%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SpinUntil">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71b58-129">Выполняет прокрутки до удовлетворения заданного условия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-129">Spins until the specified condition is satisfied.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SpinUntil">
      <MemberSignature Language="C#" Value="public static void SpinUntil (Func&lt;bool&gt; condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SpinUntil(class System.Func`1&lt;bool&gt; condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SpinUntil (condition As Func(Of Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SpinUntil(Func&lt;bool&gt; ^ condition);" />
      <MemberSignature Language="F#" Value="static member SpinUntil : Func&lt;bool&gt; -&gt; unit" Usage="System.Threading.SpinWait.SpinUntil condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Func&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="71b58-130">Делегат для циклического выполнения до возврата этим делегатом значения true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-130">A delegate to be executed over and over until it returns true.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71b58-131">Выполняет прокрутки до удовлетворения заданного условия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-131">Spins until the specified condition is satisfied.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71b58-132">Аргумент <paramref name="condition" /> имеет значение NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-132">The <paramref name="condition" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SpinUntil">
      <MemberSignature Language="C#" Value="public static bool SpinUntil (Func&lt;bool&gt; condition, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SpinUntil(class System.Func`1&lt;bool&gt; condition, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SpinUntil (condition As Func(Of Boolean), millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SpinUntil(Func&lt;bool&gt; ^ condition, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member SpinUntil : Func&lt;bool&gt; * int -&gt; bool" Usage="System.Threading.SpinWait.SpinUntil (condition, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Func&lt;System.Boolean&gt;" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="71b58-133">Делегат для циклического выполнения до возврата этим делегатом значения true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-133">A delegate to be executed over and over until it returns true.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="71b58-134">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-134">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71b58-135">Выполняет прокрутки до удовлетворения заданного условия или истечения заданного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-135">Spins until the specified condition is satisfied or until the specified timeout is expired.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71b58-136">Значение true, если условие удовлетворено до истечения времени ожидания; в противном случае — значение false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-136">True if the condition is satisfied within the timeout; otherwise, false</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71b58-137">Аргумент <paramref name="condition" /> имеет значение NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-137">The <paramref name="condition" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71b58-138">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от –1, что означает бесконечное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-138">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SpinUntil">
      <MemberSignature Language="C#" Value="public static bool SpinUntil (Func&lt;bool&gt; condition, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SpinUntil(class System.Func`1&lt;bool&gt; condition, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SpinUntil (condition As Func(Of Boolean), timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SpinUntil(Func&lt;bool&gt; ^ condition, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member SpinUntil : Func&lt;bool&gt; * TimeSpan -&gt; bool" Usage="System.Threading.SpinWait.SpinUntil (condition, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Func&lt;System.Boolean&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="71b58-139">Делегат для циклического выполнения до возврата этим делегатом значения true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-139">A delegate to be executed over and over until it returns true.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="71b58-140">Объект <see cref="T:System.TimeSpan" />, указывающий время ожидания в миллисекундах, или TimeSpan, представляющий значение -1 миллисекунда, в случае неограниченного ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-140">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71b58-141">Выполняет прокрутки до удовлетворения заданного условия или истечения заданного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-141">Spins until the specified condition is satisfied or until the specified timeout is expired.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71b58-142">Значение true, если условие удовлетворено до истечения времени ожидания; в противном случае — значение false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-142">True if the condition is satisfied within the timeout; otherwise, false</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71b58-143">Аргумент <paramref name="condition" /> имеет значение NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-143">The <paramref name="condition" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71b58-144">
            <paramref name="timeout" /> является отрицательным числом, отличным от значения -1 миллисекунда, которое представляет неограниченное время ожидания, либо время ожидания превышает <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71b58-144">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>