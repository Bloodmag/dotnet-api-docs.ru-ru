<Type Name="ThreadAbortException" FullName="System.Threading.ThreadAbortException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1b2a2f2697e92949b7f739964f5f510bbcbe3e0a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ThreadAbortException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ThreadAbortException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadAbortException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ThreadAbortException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadAbortException sealed : SystemException" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f5185-101">Исключение, выдаваемое при вызове метода <see cref="M:System.Threading.Thread.Abort(System.Object)" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f5185-101">The exception that is thrown when a call is made to the <see cref="M:System.Threading.Thread.Abort(System.Object)" /> method.</span>
      </span>
      <span data-ttu-id="f5185-102">Этот класс не наследуется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f5185-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5185-103">Когда выполняется вызов для <xref:System.Threading.Thread.Abort%2A> метод для уничтожения потока, общеязыковая среда выполнения вызывает <xref:System.Threading.ThreadAbortException>.</span><span class="sxs-lookup"><span data-stu-id="f5185-103">When a call is made to the <xref:System.Threading.Thread.Abort%2A> method to destroy a thread, the common language runtime throws a <xref:System.Threading.ThreadAbortException>.</span></span> <span data-ttu-id="f5185-104"><xref:System.Threading.ThreadAbortException> — специальное исключение, которое может быть перехвачено, но он будет вызвано снова в конце `catch` блока.</span><span class="sxs-lookup"><span data-stu-id="f5185-104"><xref:System.Threading.ThreadAbortException> is a special exception that can be caught, but it will automatically be raised again at the end of the `catch` block.</span></span> <span data-ttu-id="f5185-105">Когда вызывается это исключение, среда выполнения выполняет все `finally` блоки до завершения потока.</span><span class="sxs-lookup"><span data-stu-id="f5185-105">When this exception is raised, the runtime executes all the `finally` blocks before ending the thread.</span></span> <span data-ttu-id="f5185-106">Так как поток может выполнять код `finally` блоков или вызов <xref:System.Threading.Thread.ResetAbort%2A?displayProperty=nameWithType> для отмены инструкции abort, нет никакой гарантии, поток никогда не будет завершено.</span><span class="sxs-lookup"><span data-stu-id="f5185-106">Because the thread can do an unbounded computation in the `finally` blocks or call <xref:System.Threading.Thread.ResetAbort%2A?displayProperty=nameWithType> to cancel the abort, there is no guarantee that the thread will ever end.</span></span> <span data-ttu-id="f5185-107">Если необходимо дождаться завершения прерванный поток, можно вызвать <xref:System.Threading.Thread.Join%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="f5185-107">If you want to wait until the aborted thread has ended, you can call the <xref:System.Threading.Thread.Join%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f5185-108"><xref:System.Threading.Thread.Join%2A> является блокирующий вызов, который не возвращает до действительного окончания выполнения потока.</span><span class="sxs-lookup"><span data-stu-id="f5185-108"><xref:System.Threading.Thread.Join%2A> is a blocking call that does not return until the thread actually stops executing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5185-109">При остановке threadsafter фона сделал все потоки переднего плана в управляемом исполняемом файле общеязыковой среды выполнения (CLR) не использует <xref:System.Threading.Thread.Abort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f5185-109">When the common language runtime (CLR) stops background threadsafter all foreground threads in a managed executable have ended, it does not use <xref:System.Threading.Thread.Abort%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f5185-110">Следовательно, нельзя использовать <xref:System.Threading.ThreadAbortException> определить, когда завершаются фоновые потоки в в среде CLR.</span><span class="sxs-lookup"><span data-stu-id="f5185-110">Therefore, you cannot use <xref:System.Threading.ThreadAbortException> to detect when background threads are being terminated by the CLR.</span></span>  
  
 <span data-ttu-id="f5185-111"><xref:System.Threading.ThreadAbortException> использует COR_E_THREADABORTED HRESULT, который имеет значение 0x80131530.</span><span class="sxs-lookup"><span data-stu-id="f5185-111"><xref:System.Threading.ThreadAbortException> uses the HRESULT COR_E_THREADABORTED, which has the value 0x80131530.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5185-112">Значение наследуемого <xref:System.Exception.Data%2A> свойство всегда имеет `null`.</span><span class="sxs-lookup"><span data-stu-id="f5185-112">The value of the inherited <xref:System.Exception.Data%2A> property is always `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5185-113">В следующем примере показано прерывание потока.</span><span class="sxs-lookup"><span data-stu-id="f5185-113">The following example demonstrates aborting a thread.</span></span> <span data-ttu-id="f5185-114">Поток, получающий `ThreadAbortException` использует <xref:System.Threading.Thread.ResetAbort%2A> метод, чтобы отменить запрос на прерывание и продолжить выполнение.</span><span class="sxs-lookup"><span data-stu-id="f5185-114">The thread that receives the `ThreadAbortException` uses the <xref:System.Threading.Thread.ResetAbort%2A> method to cancel the abort request and continue executing.</span></span>  
  
 [!code-cpp[ThreadAbEx#1](~/samples/snippets/cpp/VS_Snippets_CLR/ThreadAbEx/CPP/threadabex.cpp#1)]
 [!code-csharp[ThreadAbEx#1](~/samples/snippets/csharp/VS_Snippets_CLR/ThreadAbEx/CS/threadabex.cs#1)]
 [!code-vb[ThreadAbEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ThreadAbEx/VB/threadabex.vb#1)]  
  
 <span data-ttu-id="f5185-115">Этот код выводит следующие результаты:</span><span class="sxs-lookup"><span data-stu-id="f5185-115">This code produces the following output:</span></span>  
  
```  
Thread - working.  
Main - aborting my thread.  
Thread - caught ThreadAbortException - resetting.  
Exception message: Thread was being aborted.  
Thread - still alive and working.  
Thread - finished working.  
Main ending.  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="M:System.Threading.Thread.Abort(System.Object)" />
  </Docs>
  <Members>
    <Member MemberName="ExceptionState">
      <MemberSignature Language="C#" Value="public object ExceptionState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ExceptionState" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadAbortException.ExceptionState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ExceptionState { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5185-116">Возвращает объект, содержащий зависящую от приложения информацию, относящуюся к аварийному завершению работы процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5185-116">Gets an object that contains application-specific information related to the thread abort.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5185-117">Объект, содержащий зависящую от приложения информацию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5185-117">An object containing application-specific information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5185-118">Объект, возвращаемый этим свойством, указывается с помощью `stateInfo` параметр <xref:System.Threading.Thread.Abort%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="f5185-118">The object returned by this property is specified through the `stateInfo` parameter of the <xref:System.Threading.Thread.Abort%2A> method.</span></span> <span data-ttu-id="f5185-119">Точное содержимое и использование этого объекта является определяются приложением; обычно используется для передачи информации, имеющее смысл аварийно завершающимся потоком.</span><span class="sxs-lookup"><span data-stu-id="f5185-119">The exact content and usage of this object is application defined; it is typically used to convey information that is meaningful to the thread being aborted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5185-120">В следующем примере кода показано, как для передачи данных в поток, который прерывается.</span><span class="sxs-lookup"><span data-stu-id="f5185-120">The following code example shows how to pass information to a thread that is being aborted.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Abort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Abort2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Abort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Abort2/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Abort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Abort2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentThread" />
        <altmember cref="M:System.Threading.Thread.Abort(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>