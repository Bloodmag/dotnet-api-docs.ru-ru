<Type Name="ThreadPoolBoundHandle" FullName="System.Threading.ThreadPoolBoundHandle">
  <TypeSignature Language="C#" Value="public sealed class ThreadPoolBoundHandle : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ThreadPoolBoundHandle extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadPoolBoundHandle" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ThreadPoolBoundHandle&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadPoolBoundHandle sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Overlapped</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4a839-101">Представляет дескриптор ввода-вывода, который привязан к системному пулу потоков и позволяет низкоуровневым компонентам получать уведомления для асинхронных операций ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="4a839-101">Represents an I/O handle that is bound to the system thread pool and enables low-level components to receive notifications for asynchronous I/O operations.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AllocateNativeOverlapped">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a839-102">Возвращает неуправляемый указатель на структуру <see cref="T:System.Threading.NativeOverlapped" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-102">Returns an unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AllocateNativeOverlapped">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* AllocateNativeOverlapped (System.Threading.PreAllocatedOverlapped preAllocated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* AllocateNativeOverlapped(class System.Threading.PreAllocatedOverlapped preAllocated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* AllocateNativeOverlapped(System::Threading::PreAllocatedOverlapped ^ preAllocated);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preAllocated" Type="System.Threading.PreAllocatedOverlapped" />
      </Parameters>
      <Docs>
        <param name="preAllocated"><span data-ttu-id="4a839-103">Объект, из которого создается указатель <see cref="T:System.Threading.NativeOverlapped" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-103">An object from which to create the <see cref="T:System.Threading.NativeOverlapped" /> pointer.</span></span></param>
        <summary><span data-ttu-id="4a839-104">Возвращает неуправляемый указатель на структуру <see cref="T:System.Threading.NativeOverlapped" /> с помощью состояния обратного вызова и буферов, связанных с указанным объектом <see cref="T:System.Threading.PreAllocatedOverlapped" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-104">Returns an unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure using the callback state and buffers associated with the specified <see cref="T:System.Threading.PreAllocatedOverlapped" /> object.</span></span></summary>
        <returns><span data-ttu-id="4a839-105">Неуправляемый указатель на структуру <see cref="T:System.Threading.NativeOverlapped" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-105">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a839-106">Неуправляемый указатель, возвращаемый этим методом может передаваться в операционную систему в перекрывающихся операций ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="4a839-106">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="4a839-107"><xref:System.Threading.NativeOverlapped> В физической памяти, пока не имеет фиксированную структуру <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="4a839-107">The  <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a839-108">Свойство <paramref name="preAllocated" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-108"><paramref name="preAllocated" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a839-109"><paramref name="preAllocated" /> сейчас используется для другой операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="4a839-109"><paramref name="preAllocated" /> is currently in use for another I/O operation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4a839-110">Этот метод был вызван после удаления <see cref="T:System.Threading.ThreadPoolBoundHandle" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-110">This method was called after the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> was disposed.</span></span>  
  
 <span data-ttu-id="4a839-111">- или -</span><span class="sxs-lookup"><span data-stu-id="4a839-111">-or-</span></span>  
  
 <span data-ttu-id="4a839-112">Этот метод был вызван после удаления <paramref name="preAllocated" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-112">This method was called after <paramref name="preAllocated" /> was disposed.</span></span></exception>
        <altmember cref="T:System.Threading.PreAllocatedOverlapped" />
      </Docs>
    </Member>
    <Member MemberName="AllocateNativeOverlapped">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* AllocateNativeOverlapped (System.Threading.IOCompletionCallback callback, object state, object pinData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* AllocateNativeOverlapped(class System.Threading.IOCompletionCallback callback, object state, object pinData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* AllocateNativeOverlapped(System::Threading::IOCompletionCallback ^ callback, System::Object ^ state, System::Object ^ pinData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.IOCompletionCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="pinData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="4a839-113">Делегат, который представляет метод обратного вызова, вызываемый после завершения асинхронной операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="4a839-113">A delegate that represents the callback method to invoke when the asynchronous I/O operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="4a839-114">Предоставляемый пользователем объект, отличающий этот экземпляр <see cref="T:System.Threading.NativeOverlapped" /> от других экземпляров <see cref="T:System.Threading.NativeOverlapped" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-114">A user-provided object that distinguishes this <see cref="T:System.Threading.NativeOverlapped" /> instance from other <see cref="T:System.Threading.NativeOverlapped" /> instances.</span></span></param>
        <param name="pinData"><span data-ttu-id="4a839-115">Объект или массив объектов, представляющих входной или выходной буфер для операции, или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-115">An object or array of objects that represent the input or output buffer for the operation, or <see langword="null" />.</span></span> <span data-ttu-id="4a839-116">Каждый объект представляет буфер, такой массив байтов.</span><span class="sxs-lookup"><span data-stu-id="4a839-116">Each object represents a buffer, such an array of bytes.</span></span></param>
        <summary><span data-ttu-id="4a839-117">Возвращает неуправляемый указатель на структуру <see cref="T:System.Threading.NativeOverlapped" />, обозначая делегат, вызываемый после завершения асинхронной операции ввода-вывода, предоставляемый пользователем объект, предоставляющий контекст, и управляемые объекты, которые служат в качестве буфера.</span><span class="sxs-lookup"><span data-stu-id="4a839-117">Returns an unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete, a user-provided object that supplies context, and managed objects that serve as buffers.</span></span></summary>
        <returns><span data-ttu-id="4a839-118">Неуправляемый указатель на структуру <see cref="T:System.Threading.NativeOverlapped" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-118">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a839-119">Свойство <paramref name="callback" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-119"><paramref name="callback" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4a839-120">Этот метод был вызван после удаления объекта <see cref="T:System.Threading.ThreadPoolBoundHandle" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-120">This method was called after the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> object was disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindHandle">
      <MemberSignature Language="C#" Value="public static System.Threading.ThreadPoolBoundHandle BindHandle (System.Runtime.InteropServices.SafeHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.ThreadPoolBoundHandle BindHandle(class System.Runtime.InteropServices.SafeHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BindHandle (handle As SafeHandle) As ThreadPoolBoundHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::ThreadPoolBoundHandle ^ BindHandle(System::Runtime::InteropServices::SafeHandle ^ handle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadPoolBoundHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="4a839-121">Объект, содержащий дескриптор операционной системы.</span><span class="sxs-lookup"><span data-stu-id="4a839-121">An object that holds the operating system handle.</span></span> <span data-ttu-id="4a839-122">Дескриптор должен быть открыт для перекрывающегося ввода-вывода в неуправляемом коде.</span><span class="sxs-lookup"><span data-stu-id="4a839-122">The handle must have been opened for overlapped I/O in unmanaged code.</span></span></param>
        <summary><span data-ttu-id="4a839-123">Возвращает <see cref="T:System.Threading.ThreadPoolBoundHandle" /> для указанного дескриптора, который привязан к системному пулу потоков.</span><span class="sxs-lookup"><span data-stu-id="4a839-123">Returns a <see cref="T:System.Threading.ThreadPoolBoundHandle" /> for the specified handle, which is bound to the system thread pool.</span></span></summary>
        <returns><span data-ttu-id="4a839-124">Объект <see cref="T:System.Threading.ThreadPoolBoundHandle" /> для <paramref name="handle" />, который привязан к системному пулу.</span><span class="sxs-lookup"><span data-stu-id="4a839-124">A <see cref="T:System.Threading.ThreadPoolBoundHandle" /> for <paramref name="handle" />, which is bound to the system thread pool.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a839-125">Этот метод должен вызываться один раз на дескриптор.</span><span class="sxs-lookup"><span data-stu-id="4a839-125">This method should be called once per handle.</span></span>  
  
 <span data-ttu-id="4a839-126"><xref:System.Threading.ThreadPoolBoundHandle> Объекта не распоряжаться `handle`; он остается обязанность вызывающего объекта для вызова <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a839-126">The <xref:System.Threading.ThreadPoolBoundHandle> object does not take ownership of `handle`; it remains the responsibility of the caller to call <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a839-127">Свойство <paramref name="handle" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-127"><paramref name="handle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a839-128">Объект <paramref name="handle" /> был удален.</span><span class="sxs-lookup"><span data-stu-id="4a839-128"><paramref name="handle" /> has been disposed.</span></span>  
  
 <span data-ttu-id="4a839-129">- или -</span><span class="sxs-lookup"><span data-stu-id="4a839-129">-or-</span></span>  
  
 <span data-ttu-id="4a839-130"><paramref name="handle" /> не ссылается на допустимый дескриптор ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="4a839-130"><paramref name="handle" /> does not refer to a valid I/O handle.</span></span>  
  
 <span data-ttu-id="4a839-131">- или -</span><span class="sxs-lookup"><span data-stu-id="4a839-131">-or-</span></span>  
  
 <span data-ttu-id="4a839-132"><paramref name="handle" /> ссылается на дескриптор, который не был открыт для перекрывающегося ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="4a839-132"><paramref name="handle" /> refers to a handle that has not been opened for overlapped I/O.</span></span>  
  
 <span data-ttu-id="4a839-133">- или -</span><span class="sxs-lookup"><span data-stu-id="4a839-133">-or-</span></span>  
  
 <span data-ttu-id="4a839-134"><paramref name="handle" /> ссылается на дескриптор, который уже привязан.</span><span class="sxs-lookup"><span data-stu-id="4a839-134"><paramref name="handle" /> refers to a handle that has already been bound.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a839-135">Высвобождает все неуправляемые ресурсы, используемые экземпляром <see cref="T:System.Threading.ThreadPoolBoundHandle" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-135">Releases all unmanaged resources used by the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeNativeOverlapped">
      <MemberSignature Language="C#" Value="public void FreeNativeOverlapped (System.Threading.NativeOverlapped* overlapped);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FreeNativeOverlapped(valuetype System.Threading.NativeOverlapped* overlapped) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FreeNativeOverlapped(System::Threading::NativeOverlapped* overlapped);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overlapped" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="overlapped"><span data-ttu-id="4a839-136">Неуправляемый указатель на освобождаемую структуру <see cref="T:System.Threading.NativeOverlapped" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-136">An unmanaged pointer to the <see cref="T:System.Threading.NativeOverlapped" /> structure structure to be freed.</span></span></param>
        <summary><span data-ttu-id="4a839-137">Освобождает память, связанную со структурой <see cref="T:System.Threading.NativeOverlapped" />, выделенной с помощью метода <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-137">Frees the memory associated with a <see cref="T:System.Threading.NativeOverlapped" /> structure allocated by the <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="4a839-138">Необходимо вызвать <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> метод только один раз на каждый <xref:System.Threading.NativeOverlapped> неуправляемый указатель, выделенной с помощью <xref:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4a839-138">You must call the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method exactly once on every <xref:System.Threading.NativeOverlapped> unmanaged pointer allocated by using the <xref:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped%2A> method.</span></span> <span data-ttu-id="4a839-139">Если вы не вызываете <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> метода, произойдет утечка памяти.</span><span class="sxs-lookup"><span data-stu-id="4a839-139">If you do not call the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method, you will leak memory.</span></span> <span data-ttu-id="4a839-140">При вызове метода <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> более одного раза на том же метод <xref:System.Threading.NativeOverlapped> неуправляемый указатель памяти будут повреждены.</span><span class="sxs-lookup"><span data-stu-id="4a839-140">If you call the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method method more than once on the same <xref:System.Threading.NativeOverlapped> unmanaged pointer, memory will be corrupted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a839-141">Свойство <paramref name="overlapped" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-141"><paramref name="overlapped" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4a839-142">Этот метод был вызван после удаления объекта <see cref="T:System.Threading.ThreadPoolBoundHandle" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-142">This method was called after the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> object was disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNativeOverlappedState">
      <MemberSignature Language="C#" Value="public static object GetNativeOverlappedState (System.Threading.NativeOverlapped* overlapped);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetNativeOverlappedState(valuetype System.Threading.NativeOverlapped* overlapped) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetNativeOverlappedState(System::Threading::NativeOverlapped* overlapped);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overlapped" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="overlapped"><span data-ttu-id="4a839-143">Неуправляемый указатель на структуру <see cref="T:System.Threading.NativeOverlapped" />, из которой следует получить связанный предоставляемый пользователем объект.</span><span class="sxs-lookup"><span data-stu-id="4a839-143">An unmanaged pointer to the <see cref="T:System.Threading.NativeOverlapped" /> structure from which to return the associated user-provided object.</span></span></param>
        <summary><span data-ttu-id="4a839-144">Возвращает предоставляемый пользователем объект, который был указан при выделении экземпляра <see cref="T:System.Threading.NativeOverlapped" /> путем вызова метода <see cref="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-144">Returns the user-provided object that was specified when the <see cref="T:System.Threading.NativeOverlapped" /> instance was allocated by calling the <see cref="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="4a839-145">Предоставляемый пользователем объект, отличающий этот экземпляр <see cref="T:System.Threading.NativeOverlapped" /> от других экземпляров <see cref="T:System.Threading.NativeOverlapped" />, или <see langword="null" />, если объект не был указан при выделении экземпляра путем вызова метода <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-145">A user-provided object that distinguishes this <see cref="T:System.Threading.NativeOverlapped" /> instance from other <see cref="T:System.Threading.NativeOverlapped" /> instances, or <see langword="null" /> if one was not specified when the intstance was allocated by calling the <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a839-146">Свойство <paramref name="overlapped" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a839-146"><paramref name="overlapped" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.SafeHandle Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.InteropServices.SafeHandle Handle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadPoolBoundHandle.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As SafeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::SafeHandle ^ Handle { System::Runtime::InteropServices::SafeHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.SafeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a839-147">Получает связанный дескриптор операционной системы.</span><span class="sxs-lookup"><span data-stu-id="4a839-147">Gets the bound operating system handle.</span></span></summary>
        <value><span data-ttu-id="4a839-148">Объект, содержащий связанный дескриптор операционной системы.</span><span class="sxs-lookup"><span data-stu-id="4a839-148">An object that holds the bound operating system handle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>