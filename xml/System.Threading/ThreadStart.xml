<Type Name="ThreadStart" FullName="System.Threading.ThreadStart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1ca673d0079e2d61ed596ffc41116b10e31787b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37608894" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadStart" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ThreadStart()" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="F#" Value="type ThreadStart = delegate of unit -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary>Представляет метод, который выполняется в отношении <see cref="T:System.Threading.Thread" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании управляемого потока, представленного метод, который выполняется в потоке <xref:System.Threading.ThreadStart> делегировать или <xref:System.Threading.ParameterizedThreadStart> делегат, который передается <xref:System.Threading.Thread.%23ctor%2A> конструктор. Поток не запускается до <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> вызывается метод. Начинается выполнение на первой строке метода, представленного <xref:System.Threading.ThreadStart> или <xref:System.Threading.ParameterizedThreadStart> делегировать.  
  
> [!NOTE]
>  Пользователи Visual Basic и C# можно опустить <xref:System.Threading.ThreadStart> или <xref:System.Threading.ParameterizedThreadStart> конструктора делегата при создании потока. В Visual Basic, использовать `AddressOf` оператор при передаче метод <xref:System.Threading.Thread.%23ctor%2A> конструктор, например `Dim t As New Thread(AddressOf ThreadProc)`. В C# просто укажите имя процедуры потока. Компилятор выбирает соответствующий конструктор делегата.  
  
 [C++]  
  
> [!NOTE]
>  В версии 2.0 платформы .NET Framework создание <xref:System.Threading.ThreadStart> делегат для статического метода в C++ требуется только один параметр: адрес метода обратного вызова, дополненное имя класса. В более ранних версиях требовалось два параметра при создании делегата для статического метода: 0 (ноль) и адрес метода. Для метода экземпляра, все версии требуются два параметра: переменная экземпляра и адрес метода.  
  
   
  
## Examples  
 В следующем примере кода показан синтаксис для создания и использования <xref:System.Threading.ThreadStart> делегировать с методом экземпляра, так и со статическим методом.  
  
 Другой простой пример, демонстрирующий создание <xref:System.Threading.ThreadStart> делегат, см. в разделе <xref:System.Threading.Thread.Start?displayProperty=nameWithType> перегрузки метода. Дополнительные сведения о создании потоков см. в разделе [создание потоков и передача данных во время запуска](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).  
  
 [!code-cpp[System.Threading.ThreadStart2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadStart2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadStart2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadStart2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ParameterizedThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
  </Docs>
</Type>