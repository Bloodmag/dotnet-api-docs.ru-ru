<Type Name="TimerCallback" FullName="System.Threading.TimerCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="31c57b4c21d22a9059f7d87ff25810a151ee38b6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36605832" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void TimerCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.TimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub TimerCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void TimerCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type TimerCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">
      <span data-ttu-id="1d5ba-101">Объект, содержащий информацию о конкретном приложении, существенные для метода, вызванного этим делегатом, или значение <see langword="null" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1d5ba-101">An object containing application-specific information relevant to the method invoked by this delegate, or <see langword="null" />.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="1d5ba-102">Представляет метод, обрабатывающий вызовы от события <see cref="T:System.Threading.Timer" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1d5ba-102">Represents the method that handles calls from a <see cref="T:System.Threading.Timer" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d5ba-103">Используйте `TimerCallback` делегат для указания метода, который вызывается <xref:System.Threading.Timer>.</span><span class="sxs-lookup"><span data-stu-id="1d5ba-103">Use a `TimerCallback` delegate to specify the method that is called by a <xref:System.Threading.Timer>.</span></span> <span data-ttu-id="1d5ba-104">Этот метод не выполняется в потоке, создавшем таймер; выполняется в отдельном потоке пула потоков, предоставляемые системой.</span><span class="sxs-lookup"><span data-stu-id="1d5ba-104">This method does not execute in the thread that created the timer; it executes in a separate thread pool thread that is provided by the system.</span></span> <span data-ttu-id="1d5ba-105">`TimerCallback` Делегат вызывает метод один раз после истечения времени начала и продолжает вызывать один раз за интервал таймера до <xref:System.Threading.Timer.Dispose%2A> вызывается метод, или пока не <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> метод вызывается со значением интервала <xref:System.Threading.Timeout.Infinite>.</span><span class="sxs-lookup"><span data-stu-id="1d5ba-105">The `TimerCallback` delegate invokes the method once after the start time elapses, and continues to invoke it once per timer interval until the <xref:System.Threading.Timer.Dispose%2A> method is called, or until the <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> method is called with the interval value <xref:System.Threading.Timeout.Infinite>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d5ba-106">Обратные вызовы могут произойти после <xref:System.Threading.Timer.Dispose> перегруженный метод был вызван, так как таймер очереди обратные вызовы для выполнения в потоках из пула потоков.</span><span class="sxs-lookup"><span data-stu-id="1d5ba-106">Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="1d5ba-107">Можно использовать <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> перегрузка метода, Ожидание, пока не будут завершены все обратные вызовы.</span><span class="sxs-lookup"><span data-stu-id="1d5ba-107">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
 <span data-ttu-id="1d5ba-108">Делегат таймера задается при таймера создается, не может быть изменено.</span><span class="sxs-lookup"><span data-stu-id="1d5ba-108">The timer delegate is specified when the timer is constructed, and cannot be changed.</span></span> <span data-ttu-id="1d5ba-109">Время начала для `Timer` передается в `dueTime` параметр `Timer` конструкторы, а период передается в `period` параметра.</span><span class="sxs-lookup"><span data-stu-id="1d5ba-109">The start time for a `Timer` is passed in the `dueTime` parameter of the `Timer` constructors, and the period is passed in the `period` parameter.</span></span> <span data-ttu-id="1d5ba-110">Пример, демонстрирующий создание и использование `TimerCallback` делегировать см. в разделе <xref:System.Threading.Timer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1d5ba-110">For an example that demonstrates creating and using a `TimerCallback` delegate, see <xref:System.Threading.Timer?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d5ba-111">В следующем примере кода показано, как создать делегат, используемый с `Timer` класса.</span><span class="sxs-lookup"><span data-stu-id="1d5ba-111">The following code example shows how to create the delegate used with the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Timer" />
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>