<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a38353245326738dcba09700a654648f37402fa4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">
      <span data-ttu-id="e2cdc-101">Объект, содержащий информацию, используемую методом обратного вызова.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2cdc-101">An object containing information to be used by the callback method.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="e2cdc-102">Представляет метод обратного вызова, выполняющегося потоком из пула потоков.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2cdc-102">Represents a callback method to be executed by a thread pool thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2cdc-103"><xref:System.Threading.WaitCallback> Представляет метод обратного вызова, который должен выполняться <xref:System.Threading.ThreadPool> потока.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-103"><xref:System.Threading.WaitCallback> represents a callback method that you want to execute on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="e2cdc-104">Этот делегат можно создать путем передачи в метод обратного вызова <xref:System.Threading.WaitCallback> конструктор.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-104">Create the delegate by passing your callback method to the <xref:System.Threading.WaitCallback> constructor.</span></span> <span data-ttu-id="e2cdc-105">Метод должен иметь сигнатуру, показано ниже.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-105">Your method must have the signature shown here.</span></span>  
  
 <span data-ttu-id="e2cdc-106">Очередь задачу на выполнение путем передачи <xref:System.Threading.WaitCallback> делегировать <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-106">Queue your task for execution by passing the <xref:System.Threading.WaitCallback> delegate to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e2cdc-107">Метод обратного вызова выполняется, когда становится доступен поток из пула.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-107">Your callback method executes when a thread pool thread becomes available.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2cdc-108">Пользователи Visual Basic могут опускать <xref:System.Threading.WaitCallback> конструктор и просто использовать `AddressOf` оператор при передаче в метод обратного вызова, <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-108">Visual Basic users can omit the <xref:System.Threading.WaitCallback> constructor, and simply use the `AddressOf` operator when passing the callback method to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span></span> <span data-ttu-id="e2cdc-109">Visual Basic автоматически вызывает соответствующий конструктор делегата.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-109">Visual Basic automatically calls the correct delegate constructor.</span></span>  
  
 <span data-ttu-id="e2cdc-110">Если требуется передать информацию в метод обратного вызова, создайте объект, который содержит необходимые сведения и передать его в <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> при постановке в очередь задачу на выполнение.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-110">If you want to pass information to your callback method, create an object that contains the necessary information and pass it to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> when you queue your task for execution.</span></span> <span data-ttu-id="e2cdc-111">Каждый раз, метод обратного вызова выполняется, `state` параметр содержит этот объект.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-111">Each time your callback method executes, the `state` parameter contains this object.</span></span>  
  
 <span data-ttu-id="e2cdc-112">Дополнительные сведения об использовании обратных вызовов для синхронизации потоков пула см. в разделе [пул управляемых потоков](~/docs/standard/threading/the-managed-thread-pool.md).</span><span class="sxs-lookup"><span data-stu-id="e2cdc-112">For more information about using callbacks to synchronize thread pool threads, see [The Managed Thread Pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2cdc-113">Этот раздел содержит два примера.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-113">This section contains two examples.</span></span> <span data-ttu-id="e2cdc-114">В первом примере показано, как можно поместить в очередь простая задача для выполнения пулом потоков.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-114">The first example demonstrates how you can queue a simple task for execution by the thread pool.</span></span>  
  
 <span data-ttu-id="e2cdc-115">Во втором примере показано, как задачи в очередь и передать ему сведения.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-115">The second example demonstrates how you can queue a task and pass information to it.</span></span>  
  
 <span data-ttu-id="e2cdc-116">**Пример 1.**</span><span class="sxs-lookup"><span data-stu-id="e2cdc-116">**Example 1**</span></span>  
  
 <span data-ttu-id="e2cdc-117">В этом примере показано, как использовать <xref:System.Threading.WaitCallback> делегат задачи в очередь на выполнение пулом потоков.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-117">This example shows how to use the <xref:System.Threading.WaitCallback> delegate to queue a task for execution by the thread pool.</span></span> <span data-ttu-id="e2cdc-118">В примере кода используется <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType> перегрузка метода в очередь помещается задача, представленная <xref:System.Threading.WaitCallback> -оболочки `ThreadProc` метод для выполнения, когда поток становится доступной.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-118">The code example uses the <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType> method overload to queue a task, which is represented by a <xref:System.Threading.WaitCallback> that wraps the `ThreadProc` method, to execute when a thread becomes available.</span></span> <span data-ttu-id="e2cdc-119">Сведения о задачах предоставляется с помощью этой перегрузки.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-119">No task information is supplied with this overload.</span></span> <span data-ttu-id="e2cdc-120">Таким образом, сведения, позволяющие `ThreadProc` метод ограничена объект принадлежит метод.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-120">Therefore, the information that is available to the `ThreadProc` method is limited to the object the method belongs to.</span></span>  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/VB/source.vb#1)]  
  
 <span data-ttu-id="e2cdc-121">**Пример 2**</span><span class="sxs-lookup"><span data-stu-id="e2cdc-121">**Example 2**</span></span>  
  
 <span data-ttu-id="e2cdc-122">В этом примере показано, как создать объект, содержащий сведения о задаче.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-122">This example shows how to create an object that contains task information.</span></span> <span data-ttu-id="e2cdc-123">Также демонстрируется передача этого объекта задачу, которая стоит в очереди на выполнение в пуле потоков.</span><span class="sxs-lookup"><span data-stu-id="e2cdc-123">It also demonstrates how to pass that object to a task that is queued for execution by the thread pool.</span></span>  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>