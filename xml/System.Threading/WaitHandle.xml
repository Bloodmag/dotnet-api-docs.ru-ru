<Type Name="WaitHandle" FullName="System.Threading.WaitHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12fe7b4aeb7e4229c3b0b19f8900c53c137c3e29" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39873562" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WaitHandle : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract beforefieldinit WaitHandle extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitHandle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WaitHandle&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WaitHandle abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type WaitHandle = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3d6bf-101">Инкапсулирует связанные с операционной системой объекты, ожидающие монопольного доступа к общим ресурсам.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d6bf-101">Encapsulates operating system–specific objects that wait for exclusive access to shared resources.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-102"><xref:System.Threading.WaitHandle> Класс инкапсулирует дескрипторы синхронизации Win32 и используется для представления всех объектов синхронизации в среде выполнения, выполнять несколько операций ожидания.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-102">The <xref:System.Threading.WaitHandle> class encapsulates Win32 synchronization handles, and is used to represent all synchronization objects in the runtime that allow multiple wait operations.</span></span> <span data-ttu-id="3d6bf-103">Сравнение дескрипторов ожидания с другими объектами синхронизации, см. в разделе [Обзор примитивов синхронизации](~/docs/standard/threading/overview-of-synchronization-primitives.md).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-103">For a comparison of wait handles with other synchronization objects, see [Overview of Synchronization Primitives](~/docs/standard/threading/overview-of-synchronization-primitives.md).</span></span>  
  
 <span data-ttu-id="3d6bf-104"><xref:System.Threading.WaitHandle> Сам класс является абстрактным.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-104">The <xref:System.Threading.WaitHandle> class itself is abstract.</span></span> <span data-ttu-id="3d6bf-105">Классы, производные от <xref:System.Threading.WaitHandle> определяют механизм сигнализации о предоставлении или освобождение доступ к общему ресурсу, но они используют наследуемого <xref:System.Threading.WaitHandle> методы на время ожидания для доступа к общим ресурсам.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-105">Classes derived from <xref:System.Threading.WaitHandle> define a signaling mechanism to indicate taking or releasing access to a shared resource, but they use the inherited <xref:System.Threading.WaitHandle> methods to block while waiting for access to shared resources.</span></span> <span data-ttu-id="3d6bf-106">Классы, унаследованные от <xref:System.Threading.WaitHandle> включают:</span><span class="sxs-lookup"><span data-stu-id="3d6bf-106">The classes derived from <xref:System.Threading.WaitHandle> include:</span></span>  
  
-   <span data-ttu-id="3d6bf-107">Класс <xref:System.Threading.Mutex>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-107">The <xref:System.Threading.Mutex> class.</span></span> <span data-ttu-id="3d6bf-108">См. в разделе [мьютексы](~/docs/standard/threading/mutexes.md).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-108">See [Mutexes](~/docs/standard/threading/mutexes.md).</span></span>  
  
-   <span data-ttu-id="3d6bf-109"><xref:System.Threading.EventWaitHandle> Класс и его производные классы <xref:System.Threading.AutoResetEvent> и <xref:System.Threading.ManualResetEvent>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-109">The <xref:System.Threading.EventWaitHandle> class and its derived classes, <xref:System.Threading.AutoResetEvent> and <xref:System.Threading.ManualResetEvent>.</span></span> <span data-ttu-id="3d6bf-110">См. дополнительные сведения об [EventWaitHandle, AutoResetEvent, CountdownEvent, ManualResetEvent](~/docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-110">See [EventWaitHandle, AutoResetEvent, CountdownEvent, ManualResetEvent](~/docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md).</span></span>  
  
-   <span data-ttu-id="3d6bf-111">Класс <xref:System.Threading.Semaphore>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-111">The <xref:System.Threading.Semaphore> class.</span></span> <span data-ttu-id="3d6bf-112">См. в разделе [Semaphore и SemaphoreSlim](~/docs/standard/threading/semaphore-and-semaphoreslim.md).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-112">See [Semaphore and SemaphoreSlim](~/docs/standard/threading/semaphore-and-semaphoreslim.md).</span></span>  
  
 <span data-ttu-id="3d6bf-113">Потоки могут блокироваться по отдельному дескриптору ожидания путем вызова метода экземпляра <xref:System.Threading.WaitHandle.WaitOne%2A>, которая наследуется производными классами <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-113">Threads can block on an individual wait handle by calling the instance method <xref:System.Threading.WaitHandle.WaitOne%2A>, which is inherited by classes derived from <xref:System.Threading.WaitHandle>.</span></span>  
  
 <span data-ttu-id="3d6bf-114">Классов, производных от <xref:System.Threading.WaitHandle> их сходство потоков по-разному.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-114">The derived classes of <xref:System.Threading.WaitHandle> differ in their thread affinity.</span></span> <span data-ttu-id="3d6bf-115">Дескрипторы ожидания событий (<xref:System.Threading.EventWaitHandle>, <xref:System.Threading.AutoResetEvent>, и <xref:System.Threading.ManualResetEvent>) и семафоры не поддерживают сходство потоков; любой поток может подать сигнал дескриптор ожидания событий или семафора.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-115">Event wait handles (<xref:System.Threading.EventWaitHandle>, <xref:System.Threading.AutoResetEvent>, and <xref:System.Threading.ManualResetEvent>) and semaphores do not have thread affinity; any thread can signal an event wait handle or semaphore.</span></span> <span data-ttu-id="3d6bf-116">Мьютексы, с другой стороны, поддерживают сходство потоков; поток, который является владельцем мьютекса необходимо освободить его, и исключение возникает в том случае, если поток вызывает <xref:System.Threading.Mutex.ReleaseMutex%2A> метод, который не является владельцем мьютекса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-116">Mutexes, on the other hand, do have thread affinity; the thread that owns a mutex must release it, and an exception is thrown if a thread calls the <xref:System.Threading.Mutex.ReleaseMutex%2A> method on a mutex that it does not own.</span></span>  
  
 <span data-ttu-id="3d6bf-117">Так как <xref:System.Threading.WaitHandle> класс является производным от <xref:System.MarshalByRefObject>, эти классы можно использовать для синхронизации действий потоков за границами домена приложения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-117">Because the <xref:System.Threading.WaitHandle> class derives from <xref:System.MarshalByRefObject>, these classes can be used to synchronize the activities of threads across application domain boundaries.</span></span>  
  
 <span data-ttu-id="3d6bf-118">В дополнение к его производные классы <xref:System.Threading.WaitHandle> класс содержит несколько статических методов, которые блокируют поток, пока один или несколько объектов синхронизации получения сигнала...</span><span class="sxs-lookup"><span data-stu-id="3d6bf-118">In addition to its derived classes, the <xref:System.Threading.WaitHandle> class has a number of static methods that block a thread until one or more synchronization objects receive a signal..</span></span> <span data-ttu-id="3d6bf-119">Сюда входит следующее.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-119">These include:</span></span>  
  
-   <span data-ttu-id="3d6bf-120"><xref:System.Threading.WaitHandle.SignalAndWait%2A>, что позволяет потоку сигнал одному дескриптору ожидания и немедленно ожидать на другом.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-120"><xref:System.Threading.WaitHandle.SignalAndWait%2A>, which allows a thread to signal one wait handle and immediately wait on another.</span></span>  
  
-   <span data-ttu-id="3d6bf-121"><xref:System.Threading.WaitHandle.WaitAll%2A>, что позволяет потоку ожидать все дескрипторы ожидания в массиве получения сигнала.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-121"><xref:System.Threading.WaitHandle.WaitAll%2A>, which allows a thread to wait until all the wait handles in an array receive a signal.</span></span>  
  
-   <span data-ttu-id="3d6bf-122"><xref:System.Threading.WaitHandle.WaitAny%2A>, который позволяет потоку ожидать, пока не будет выдан сигнал любого из указанного набора дескрипторов ожидания.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-122"><xref:System.Threading.WaitHandle.WaitAny%2A>, which allows a thread to wait until any one of a specified set of wait handles has been signaled .</span></span>  
  
 <span data-ttu-id="3d6bf-123">Перегрузки этих методов предоставляют интервалы времени ожидания для прерывания ожидания, а также возможность выхода из контекста синхронизации до начала ожидания, что позволяет другим потокам использовать контекст синхронизации.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-123">The overloads of these methods provide timeout intervals for abandoning the wait, and the opportunity to exit a synchronization context before entering the wait, allowing other threads to use the synchronization context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3d6bf-124">Этот тип реализует <xref:System.IDisposable> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-124">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="3d6bf-125">Когда вы закончите, используя тип или тип, производный от него, следует освободить его прямо или косвенно.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-125">When you have finished using the type or a type derived from it, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="3d6bf-126">Чтобы удалить тип напрямую, вызовите его <xref:System.Threading.WaitHandle.Close%2A> метод в `try` / `catch` блока.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-126">To dispose of the type directly, call its <xref:System.Threading.WaitHandle.Close%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="3d6bf-127">Чтобы избавиться от его косвенно, используйте языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-127">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="3d6bf-128">Дополнительные сведения см. в разделе «С помощью объекта, реализует IDisposable» <xref:System.IDisposable> разделу интерфейса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-128">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="3d6bf-129"><xref:System.Threading.WaitHandle> реализует <xref:System.IDisposable.Dispose%2A> шаблон.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-129"><xref:System.Threading.WaitHandle> implements the <xref:System.IDisposable.Dispose%2A> pattern.</span></span> <span data-ttu-id="3d6bf-130">См. в разделе [шаблон удаления](~/docs/standard/design-guidelines/dispose-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-130">See [Dispose Pattern](~/docs/standard/design-guidelines/dispose-pattern.md).</span></span> <span data-ttu-id="3d6bf-131">При наследовании от <xref:System.Threading.WaitHandle>, используйте <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> свойство, чтобы сохранять маркер собственный дескриптор операционной системы.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-131">When you derive from <xref:System.Threading.WaitHandle>, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property to store your native handle operating system handle.</span></span> <span data-ttu-id="3d6bf-132">Необходимо переопределить защищенный <xref:System.Threading.WaitHandle.Dispose%2A> метод только при использовании дополнительных неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-132">You do not need to override the protected <xref:System.Threading.WaitHandle.Dispose%2A> method unless you use additional unmanaged resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d6bf-133">В следующем примере кода показано как два потока могут сделать фоновых задач при основной поток ожидает завершения с помощью статического задач <xref:System.Threading.WaitHandle.WaitAny%2A> и <xref:System.Threading.WaitHandle.WaitAll%2A> методы <xref:System.Threading.WaitHandle> класса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-133">The following code example shows how two threads can do background tasks while the Main thread waits for the tasks to complete using the static <xref:System.Threading.WaitHandle.WaitAny%2A> and <xref:System.Threading.WaitHandle.WaitAll%2A> methods of the <xref:System.Threading.WaitHandle> class.</span></span>  
  
 [!code-cpp[WaitHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/WaitHandle/cpp/WaitHandle.cpp#1)]
 [!code-csharp[WaitHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/WaitHandle/CS/WaitHandle.cs#1)]
 [!code-vb[WaitHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WaitHandle/VB/WaitHandle.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="3d6bf-134">Данный тип потокобезопасен.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d6bf-134">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WaitHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d6bf-135">Инициализирует новый экземпляр класса <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-135">Initializes a new instance of the <see cref="T:System.Threading.WaitHandle" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="waitHandle.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d6bf-136">Освобождает все ресурсы, удерживаемые текущим объектом <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-136">Releases all resources held by the current <see cref="T:System.Threading.WaitHandle" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-137">Этот метод является открытую реализацию <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> метод <xref:System.Threading.WaitHandle> класса и его производных классов.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-137">This method is the public implementation of the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method for the <xref:System.Threading.WaitHandle> class and its derived classes.</span></span> <span data-ttu-id="3d6bf-138">Он предоставляет стандартную реализацию, которая вызывает `Dispose(Boolean)` перегрузка с `true` аргумент, а затем вызывает <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-138">It provides a standard implementation that calls the `Dispose(Boolean)` overload with a `true` argument and then calls the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3d6bf-139">Вызовите этот метод, чтобы освободить все ресурсы, удерживаемые экземпляром `WaitHandle` или производного класса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-139">Call this method to release all resources held by an instance of `WaitHandle` or a derived class.</span></span>  
  
 <span data-ttu-id="3d6bf-140">Когда этот метод вызывается, ссылки на текущий экземпляр привести к неопределенному поведению.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-140">Once this method is called, references to the current instance cause undefined behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d6bf-141">Всегда вызывайте метод <xref:System.Threading.WaitHandle.Close%2A> или <xref:System.Threading.WaitHandle.Dispose> перед освобождением последней ссылки на <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-141">Always call <xref:System.Threading.WaitHandle.Close%2A> or <xref:System.Threading.WaitHandle.Dispose> before you release your last reference to the <xref:System.Threading.WaitHandle>.</span></span> <span data-ttu-id="3d6bf-142">В противном случае им ресурсы не будут освобождены.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-142">Otherwise, the resources it is using will not be freed.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3d6bf-143">
            <para>Необходимо переопределить <see langword="Dispose(Boolean)" /> метод для освобождения ресурсов, выделенных в производных классах.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-143">
              <para>You should override the <see langword="Dispose(Boolean)" /> method to release resources allocated in derived classes.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d6bf-144">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Threading.WaitHandle" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-144">Releases all resources used by the current instance of the <see cref="T:System.Threading.WaitHandle" /> class</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="waitHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d6bf-145">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-145">Releases all resources used by the current instance of the <see cref="T:System.Threading.WaitHandle" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-146">Этот метод эквивалентен <xref:System.Threading.WaitHandle.Close%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-146">This method is equivalent to the <xref:System.Threading.WaitHandle.Close%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d6bf-147">Всегда вызывайте метод <xref:System.Threading.WaitHandle.Close%2A> или <xref:System.Threading.WaitHandle.Dispose> перед освобождением последней ссылки на <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-147">Always call <xref:System.Threading.WaitHandle.Close%2A> or <xref:System.Threading.WaitHandle.Dispose> before you release your last reference to the <xref:System.Threading.WaitHandle>.</span></span> <span data-ttu-id="3d6bf-148">В противном случае им ресурсы не будут освобождены.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-148">Otherwise, the resources it is using will not be freed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool explicitDisposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool explicitDisposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (explicitDisposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool explicitDisposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="waitHandle.Dispose explicitDisposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="explicitDisposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="explicitDisposing">
          <span data-ttu-id="3d6bf-149">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-149">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-150">При переопределении в производном классе освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Threading.WaitHandle" />, и (необязательно) освобождает управляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-150">When overridden in a derived class, releases the unmanaged resources used by the <see cref="T:System.Threading.WaitHandle" />, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-151">Этот метод вызывается <xref:System.Threading.WaitHandle.Close%2A> и <xref:System.Threading.WaitHandle.Dispose> методы с `explicitDisposing` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-151">This method is called by the <xref:System.Threading.WaitHandle.Close%2A> and the <xref:System.Threading.WaitHandle.Dispose> methods with the `explicitDisposing` parameter set to `true`.</span></span>  <span data-ttu-id="3d6bf-152">Когда `explicitDisposing` параметр `true`, этот метод освобождает все ресурсы, занятые любыми управляемыми объектами, <xref:System.Threading.WaitHandle> ссылки на объекты.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-152">When the `explicitDisposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Threading.WaitHandle> object references.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3d6bf-153">
            <para>Необходимо переопределить <see cref="M:System.Threading.WaitHandle.Dispose(System.Boolean)" /> метод для освобождения ресурсов, выделенных в производных классах.  <see cref="M:System.Threading.WaitHandle.Close" /> Или <see cref="M:System.Threading.WaitHandle.Dispose" /> метод может вызываться несколько раз другими объектами. При переопределении этого метода нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами <see langword="Dispose" /> или <see langword="Close" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-153">
              <para>You should override the <see cref="M:System.Threading.WaitHandle.Dispose(System.Boolean)" /> method to release resources allocated in derived classes.  The <see cref="M:System.Threading.WaitHandle.Close" /> or <see cref="M:System.Threading.WaitHandle.Dispose" /> method can be called multiple times by other objects. When overriding this method, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" /> or <see langword="Close" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WaitHandle ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="waitHandle.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public virtual IntPtr Handle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.WaitHandle.Handle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Handle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint with get, set" Usage="System.Threading.WaitHandle.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use the SafeWaitHandle property instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d6bf-154">Возвращает или задает собственный дескриптор операционной системы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-154">Gets or sets the native operating system handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d6bf-155">Объект <see langword="IntPtr" />, представляющий собственный дескриптор операционной системы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-155">An <see langword="IntPtr" /> representing the native operating system handle.</span>
          </span>
          <span data-ttu-id="3d6bf-156">Значением по умолчанию является значение поля <see cref="F:System.Threading.WaitHandle.InvalidHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-156">The default is the value of the <see cref="F:System.Threading.WaitHandle.InvalidHandle" /> field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-157">Назначение нового значения для <xref:System.Threading.WaitHandle.Handle%2A> свойства не закрывает дескриптор предыдущего.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-157">Assigning a new value to the <xref:System.Threading.WaitHandle.Handle%2A> property does not close the previous handle.</span></span> <span data-ttu-id="3d6bf-158">Это может привести утечка дескриптора.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-158">This can result in a leaked handle.</span></span>  
  
 <span data-ttu-id="3d6bf-159">Не используйте это свойство в .NET Framework версии 2.0 или более поздней версии; Используйте <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> свойство вместо этого.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-159">Do not use this property in the .NET Framework version 2.0 or later; use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property instead.</span></span> <span data-ttu-id="3d6bf-160">Этому свойству присвоить допустимый дескриптор также наборы <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> свойство, но задание значения <xref:System.Threading.WaitHandle.InvalidHandle> может привести к утечка дескриптора.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-160">Setting this property to a valid handle also sets the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property, but setting it to <xref:System.Threading.WaitHandle.InvalidHandle> can result in a leaked handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="3d6bf-161">Требует полного доверия для непосредственного вызывающего объекта задать значение свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-161">Requires full trust for the immediate caller to set the property value.</span>
          </span>
          <span data-ttu-id="3d6bf-162">Этот член не может задать частично доверенном или прозрачном коде.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-162">This member cannot be set by partially trusted or transparent code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="3d6bf-163">Производные типы должны иметь <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> для задания значения свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-163">Derived types must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> to set the property value.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InvalidHandle">
      <MemberSignature Language="C#" Value="protected static readonly IntPtr InvalidHandle;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly native int InvalidHandle" />
      <MemberSignature Language="DocId" Value="F:System.Threading.WaitHandle.InvalidHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly InvalidHandle As IntPtr " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly IntPtr InvalidHandle;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvalidHandle : nativeint" Usage="System.Threading.WaitHandle.InvalidHandle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d6bf-164">Представляет недопустимый собственный дескриптор операционной системы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-164">Represents an invalid native operating system handle.</span>
          </span>
          <span data-ttu-id="3d6bf-165">Это поле доступно только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-165">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-166">Используется внутренним образом для инициализации <xref:System.Threading.WaitHandle.Handle%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-166">Used internally to initialize the <xref:System.Threading.WaitHandle.Handle%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3d6bf-167">
            <para>Это значение можно использовать, чтобы определить, является ли <see cref="P:System.Threading.WaitHandle.Handle" /> свойство содержит допустимый собственный дескриптор операционной системы.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-167">
              <para>You can use this value to determine whether the <see cref="P:System.Threading.WaitHandle.Handle" /> property contains a valid native operating system handle.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SafeWaitHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeWaitHandle SafeWaitHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeWaitHandle SafeWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.WaitHandle.SafeWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property SafeWaitHandle As SafeWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeWaitHandle ^ SafeWaitHandle { Microsoft::Win32::SafeHandles::SafeWaitHandle ^ get(); void set(Microsoft::Win32::SafeHandles::SafeWaitHandle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SafeWaitHandle : Microsoft.Win32.SafeHandles.SafeWaitHandle with get, set" Usage="System.Threading.WaitHandle.SafeWaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeWaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d6bf-168">Возвращает или задает собственный дескриптор операционной системы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-168">Gets or sets the native operating system handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d6bf-169">Объект <see cref="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" />, представляющий собственный дескриптор операционной системы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-169">A <see cref="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" /> representing the native operating system handle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-170">При назначении нового значения для <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> свойство, предыдущих дескриптор закрывается при предыдущем <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> объект собран.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-170">When you assign a new value to the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property, the previous handle will be closed when the previous <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> object is collected.</span></span> <span data-ttu-id="3d6bf-171">Не следует вручную закрывать дескриптор, так как это приводит к <xref:System.ObjectDisposedException> при <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> предпринимается попытка закрыть дескриптор.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-171">Do not manually close the handle, because this results in an <xref:System.ObjectDisposedException> when the <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> attempts to close the handle.</span></span>  
  
 <span data-ttu-id="3d6bf-172"><xref:System.Threading.WaitHandle> реализует <xref:System.IDisposable.Dispose%2A> шаблон.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-172"><xref:System.Threading.WaitHandle> implements the <xref:System.IDisposable.Dispose%2A> pattern.</span></span> <span data-ttu-id="3d6bf-173">См. в разделе [шаблон удаления](~/docs/standard/design-guidelines/dispose-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-173">See [Dispose Pattern](~/docs/standard/design-guidelines/dispose-pattern.md).</span></span> <span data-ttu-id="3d6bf-174">При наследовании от <xref:System.Threading.WaitHandle>, используйте <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> свойство, чтобы сохранять маркер собственный дескриптор операционной системы.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-174">When you derive from <xref:System.Threading.WaitHandle>, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property to store your native handle operating system handle.</span></span> <span data-ttu-id="3d6bf-175">Необходимо переопределить защищенный <xref:System.Threading.WaitHandle.Dispose%2A> метод только при использовании дополнительных неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-175">You do not need to override the protected <xref:System.Threading.WaitHandle.Dispose%2A> method unless you use additional unmanaged resources.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="3d6bf-176">Требует полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-176">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3d6bf-177">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-177">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="3d6bf-178">Производные типы должны иметь <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> для вызова этого члена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-178">Derived types must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> to call this member.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignalAndWait">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d6bf-179">Сигнализирует одному объекту <see cref="T:System.Threading.WaitHandle" /> и ожидает другого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-179">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="toSignal">
          <span data-ttu-id="3d6bf-180">Объект <see cref="T:System.Threading.WaitHandle" />, который получает сигнал.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-180">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span>
          </span>
        </param>
        <param name="toWaitOn">
          <span data-ttu-id="3d6bf-181">Объект <see cref="T:System.Threading.WaitHandle" />, сигнализация которого ожидается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-181">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-182">Сигнализирует одному объекту <see cref="T:System.Threading.WaitHandle" /> и ожидает другого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-182">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-183">
            <see langword="true" /> если и сигнал и ожидание завершаются удачно, если операция ожидания не завершается, то метод не возвращает значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-183">
              <see langword="true" /> if both the signal and the wait complete successfully; if the wait does not complete, the method does not return.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-184">Эта операция не обязательно быть атомарными.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-184">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="3d6bf-185">После текущего потока сигналы `toSignal` , но до его ожидает `toWaitOn`, поток, на котором выполняется на другом процессоре может сигнализировать `toWaitOn` или ждать ее завершения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-185">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d6bf-186">В следующем примере кода используется <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> перегруженный метод, чтобы разрешить основному потоку сигнала заблокированный поток и затем подождите, пока поток завершает задачу.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-186">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="3d6bf-187">Пример начинается пять потоков, позволяет им блокировать на <xref:System.Threading.EventWaitHandle> созданные с помощью <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> флага, а затем времени одним потоком выпусков, пользователь нажимает клавишу ВВОД.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-187">The example starts five threads, allows them to block on an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag, and then releases one thread each time the user presses the ENTER key.</span></span> <span data-ttu-id="3d6bf-188">Затем ставит в очередь другой пять потоков и освобождает их все с помощью <xref:System.Threading.EventWaitHandle> созданные с помощью <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-188">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d6bf-189">
            <paramref name="toSignal" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-189">
              <paramref name="toSignal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-190">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-190">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-191">
            <paramref name="toWaitOn" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-191">
              <paramref name="toWaitOn" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d6bf-192">Метод был вызван в потоке с атрибутом <see cref="T:System.STAThreadAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-192">The method was called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="3d6bf-193">Этот метод не поддерживается в Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-193">This method is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-194">Параметр <paramref name="toSignal" /> является семафором и его счетчик уже достиг максимального значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-194">
              <paramref name="toSignal" /> is a semaphore, and it already has a full count.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-195">Ожидание завершено, поскольку поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-195">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-196">Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-196">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle, millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle * int * bool -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="toSignal">
          <span data-ttu-id="3d6bf-197">Объект <see cref="T:System.Threading.WaitHandle" />, который получает сигнал.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-197">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span>
          </span>
        </param>
        <param name="toWaitOn">
          <span data-ttu-id="3d6bf-198">Объект <see cref="T:System.Threading.WaitHandle" />, сигнализация которого ожидается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-198">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="3d6bf-199">Целое число, представляющее интервал ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-199">An integer that represents the interval to wait.</span>
          </span>
          <span data-ttu-id="3d6bf-200">Если значение равно <see cref="F:System.Threading.Timeout.Infinite" />, то есть -1, то ожидание выполняется неограниченное время.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-200">If the value is <see cref="F:System.Threading.Timeout.Infinite" />, that is, -1, the wait is infinite.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="3d6bf-201">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-201">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-202">Передает сигнал одному объекту <see cref="T:System.Threading.WaitHandle" /> и ожидает сигнализации другого, задавая время ожидания 32-разрядным целым числом со знаком и указывая, нужно ли выходить из домена синхронизации контекста перед началом ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-202">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another, specifying a time-out interval as a 32-bit signed integer and specifying whether to exit the synchronization domain for the context before entering the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-203">Значение <see langword="true" />, если и передача сигнала, и ожидание завершились успешно; <see langword="false" />, если передача сигнала была выполнена, но время ожидания истекло.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-203">
              <see langword="true" /> if both the signal and the wait completed successfully, or <see langword="false" /> if the signal completed but the wait timed out.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-204">Эта операция не обязательно быть атомарными.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-204">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="3d6bf-205">После текущего потока сигналы `toSignal` , но до его ожидает `toWaitOn`, поток, на котором выполняется на другом процессоре может сигнализировать `toWaitOn` или ждать ее завершения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-205">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
 <span data-ttu-id="3d6bf-206">Если `millisecondsTimeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-206">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="3d6bf-207">Он проверяет состояние `toWaitOn` и сразу же.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-207">It tests the state of the `toWaitOn` and returns immediately.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="3d6bf-208">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="3d6bf-208">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="3d6bf-209">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.SignalAndWait%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-209">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="3d6bf-210">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-210">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="3d6bf-211">Даже если в настоящее время выполняется метод в классе, который является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-211">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="3d6bf-212">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.SignalAndWait%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-212">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method.</span></span> <span data-ttu-id="3d6bf-213">Поток возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.SignalAndWait%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-213">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method completes.</span></span>  
  
 <span data-ttu-id="3d6bf-214">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-214">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="3d6bf-215">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-215">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="3d6bf-216">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.SignalAndWait%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-216">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="3d6bf-217">Когда <xref:System.Threading.WaitHandle.SignalAndWait%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-217">When the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d6bf-218">
            <paramref name="toSignal" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-218">
              <paramref name="toSignal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-219">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-219">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-220">
            <paramref name="toWaitOn" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-220">
              <paramref name="toWaitOn" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d6bf-221">Метод вызывается в потоке с атрибутом <see cref="T:System.STAThreadAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-221">The method is called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="3d6bf-222">Этот метод не поддерживается в Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-222">This method is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-223">Невозможно передать сигнал объекту <see cref="T:System.Threading.WaitHandle" />, поскольку его счетчик превысит максимальное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-223">The <see cref="T:System.Threading.WaitHandle" /> cannot be signaled because it would exceed its maximum count.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d6bf-224">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-224">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-225">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-225">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-226">Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-226">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle, timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle * TimeSpan * bool -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="toSignal">
          <span data-ttu-id="3d6bf-227">Объект <see cref="T:System.Threading.WaitHandle" />, который получает сигнал.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-227">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span>
          </span>
        </param>
        <param name="toWaitOn">
          <span data-ttu-id="3d6bf-228">Объект <see cref="T:System.Threading.WaitHandle" />, сигнализация которого ожидается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-228">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="3d6bf-229">Структура <see cref="T:System.TimeSpan" />, представляющая период ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-229">A <see cref="T:System.TimeSpan" /> that represents the interval to wait.</span>
          </span>
          <span data-ttu-id="3d6bf-230">Если значение равно -1, то ожидание выполняется неограниченное время.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-230">If the value is -1, the wait is infinite.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="3d6bf-231">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-231">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-232">Передает сигнал одному объекту <see cref="T:System.Threading.WaitHandle" /> и ожидает сигнализации другого, задавая время ожидания в виде <see cref="T:System.TimeSpan" /> и указывая, нужно ли выходить из домена синхронизации контекста перед началом ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-232">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another, specifying the time-out interval as a <see cref="T:System.TimeSpan" /> and specifying whether to exit the synchronization domain for the context before entering the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-233">Значение <see langword="true" />, если и передача сигнала, и ожидание завершились успешно; <see langword="false" />, если передача сигнала была выполнена, но время ожидания истекло.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-233">
              <see langword="true" /> if both the signal and the wait completed successfully, or <see langword="false" /> if the signal completed but the wait timed out.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-234">Эта операция не обязательно быть атомарными.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-234">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="3d6bf-235">После текущего потока сигналы `toSignal` , но до его ожидает `toWaitOn`, поток, на котором выполняется на другом процессоре может сигнализировать `toWaitOn` или ждать ее завершения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-235">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
 <span data-ttu-id="3d6bf-236">Максимальное значение для `timeout` является <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-236">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d6bf-237">Если `timeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-237">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="3d6bf-238">Он проверяет состояние `toWaitOn` и сразу же.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-238">It tests the state of the `toWaitOn` and returns immediately.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="3d6bf-239">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="3d6bf-239">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="3d6bf-240">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.SignalAndWait%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-240">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="3d6bf-241">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-241">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="3d6bf-242">Даже если в настоящее время выполняется метод в классе, который является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-242">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="3d6bf-243">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.SignalAndWait%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-243">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method.</span></span> <span data-ttu-id="3d6bf-244">Поток возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.SignalAndWait%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-244">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method completes.</span></span>  
  
 <span data-ttu-id="3d6bf-245">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-245">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="3d6bf-246">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-246">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="3d6bf-247">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.SignalAndWait%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-247">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="3d6bf-248">Когда <xref:System.Threading.WaitHandle.SignalAndWait%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-248">When the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d6bf-249">
            <paramref name="toSignal" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-249">
              <paramref name="toSignal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-250">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-250">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-251">
            <paramref name="toWaitOn" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-251">
              <paramref name="toWaitOn" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d6bf-252">Метод был вызван в потоке с атрибутом <see cref="T:System.STAThreadAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-252">The method was called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="3d6bf-253">Этот метод не поддерживается в Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-253">This method is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-254">Параметр <paramref name="toSignal" /> является семафором и его счетчик уже достиг максимального значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-254">
              <paramref name="toSignal" /> is a semaphore, and it already has a full count.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d6bf-255">Значение параметра <paramref name="timeout" /> соответствует отрицательному числу, отличному от -1 миллисекунды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-255">
              <paramref name="timeout" /> evaluates to a negative number of milliseconds other than -1.</span>
          </span>
          <span data-ttu-id="3d6bf-256">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-256">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-257">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-257">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-258">Ожидание завершено, поскольку поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-258">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-259">Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-259">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitAll">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d6bf-260">Ожидает получения сигнала всеми элементами заданного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-260">Waits for all the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll waitHandles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="3d6bf-261">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-261">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="3d6bf-262">Этот массив не может содержать несколько ссылок на один и тот же объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-262">This array cannot contain multiple references to the same object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-263">Ожидает получения сигнала всеми элементами заданного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-263">Waits for all the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-264">
            <see langword="true" />, когда каждый элемент <paramref name="waitHandles" /> получил сигнал. Иначе возвращение значения методом не выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-264">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise the method never returns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-265"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-265"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="3d6bf-266">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitAll%2A> возвращает метод `true` когда прерывается мьютекс.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-266">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="3d6bf-267">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-267">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="3d6bf-268">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-268">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="3d6bf-269">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-269">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="3d6bf-270"><xref:System.Threading.WaitHandle.WaitAll%2A> Метод возвращает при получении сигнала всех дескрипторов.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-270">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when all the handles are signaled.</span></span> <span data-ttu-id="3d6bf-271">В некоторых реализациях, если передано более 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-271">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="3d6bf-272">Если массив содержит дубликаты, вызов завершится сбоем с <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-272">If the array contains duplicates, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d6bf-273"><xref:System.Threading.WaitHandle.WaitAll%2A> Метод не поддерживается в потоках, которые имеют <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-273">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="3d6bf-274">Вызов перегрузки этого метода эквивалентен вызову <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> перегрузку метода и указав значение -1 (или <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) для `millisecondsTimeout` и `true` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-274">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> method overload and specifying -1 (or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) for `millisecondsTimeout` and `true` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d6bf-275">В следующем примере кода показано, как использовать пул потоков для асинхронного создания и записи для группы файлов.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-275">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="3d6bf-276">Каждой операции записи помещается в очередь рабочий элемент и сигналов, при его завершении.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-276">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="3d6bf-277">Основной поток ожидает сигнала все элементы, а затем завершается.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-277">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/CPP/source1.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/CS/source1.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/VB/source1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d6bf-278">Значение параметра <paramref name="waitHandles" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-278">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-279">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-279">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-280">Один или несколько объектов массива <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-280">One or more of the objects in the <paramref name="waitHandles" /> array are <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-281">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-281">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-282">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 2.0 или выше.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-282">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="3d6bf-283">
            <block subset="none" type="note">
              <para> В [.NET для приложений Магазина Windows](http://go.microsoft.com/fwlink/?LinkID=247912) или в [переносимой библиотеке классов](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) перехватите исключение базового класса <see cref="T:System.ArgumentException" />. </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-283">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.ArgumentException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="3d6bf-284">Массив <paramref name="waitHandles" /> содержит элементы, являющиеся дубликатами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-284">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d6bf-285">Массив <paramref name="waitHandles" /> содержит больше объектов, чем разрешено системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-285">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="3d6bf-286">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-286">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-287">Атрибут <see cref="T:System.STAThreadAttribute" /> применен к потоковой процедуре для текущего потока, а массив <paramref name="waitHandles" /> содержит больше одного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-287">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="3d6bf-288">Массив <paramref name="waitHandles" /> не содержит элементов, и используется платформа .NET Framework версии 1.0 или 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-288">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-289">Ожидание прервано, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-289">The wait terminated because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-290">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-290">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-291">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-291">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * int -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="3d6bf-292">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-292">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="3d6bf-293">Данный массив не может содержать несколько ссылок на один и тот же объект (дубликатов).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-293">This array cannot contain multiple references to the same object (duplicates).</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="3d6bf-294">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-294">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-295">Ожидает получения сигнала всеми элементами заданного массива, используя значение <see cref="T:System.Int32" /> для указания интервала времени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-295">Waits for all the elements in the specified array to receive a signal, using an <see cref="T:System.Int32" /> value to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-296">Значение <see langword="true" />, если каждый элемент массива <paramref name="waitHandles" /> получил сигнал; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-296">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-297">Если `millisecondsTimeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-297">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="3d6bf-298">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-298">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="3d6bf-299"><xref:System.Threading.WaitHandle.WaitAll%2A> Возвращает метод, если ожидание завершается, что означает либо при получении сигнала всех дескрипторов ожидания.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-299">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either when all the handles are signaled or when time-out occurs.</span></span> <span data-ttu-id="3d6bf-300">В некоторых реализациях, если передано более 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-300">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="3d6bf-301">Если есть повторяющиеся значения в массиве, вызов завершится сбоем с <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-301">If there are duplicates in the array, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d6bf-302"><xref:System.Threading.WaitHandle.WaitAll%2A> Метод не поддерживается в потоках, которые имеют <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-302">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="3d6bf-303">Вызов перегрузки этого метода равносилен вызову метода является <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> перегрузки и указав `false` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-303">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d6bf-304">Значение параметра <paramref name="waitHandles" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-304">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-305">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-305">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-306">Один или несколько объектов массива <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-306">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-307">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-307">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-308">Параметр <paramref name="waitHandles" /> представляет собой массив без элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-308">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="3d6bf-309">
            <block subset="none" type="note">
              <para> В [.NET для приложений Магазина Windows](http://go.microsoft.com/fwlink/?LinkID=247912) или в [переносимой библиотеке классов](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) перехватите исключение базового класса <see cref="T:System.ArgumentException" />. </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-309">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.ArgumentException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="3d6bf-310">Массив <paramref name="waitHandles" /> содержит элементы, являющиеся дубликатами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-310">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d6bf-311">Массив <paramref name="waitHandles" /> содержит больше объектов, чем разрешено системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-311">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="3d6bf-312">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-312">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-313">Атрибут <see cref="T:System.STAThreadAttribute" /> применяется к процедуре потока для текущего потока, а массив <paramref name="waitHandles" /> содержит более одного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-313">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d6bf-314">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-314">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-315">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-315">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-316">Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-316">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-317">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-317">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * TimeSpan -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="3d6bf-318">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-318">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="3d6bf-319">Этот массив не может содержать несколько ссылок на один и тот же объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-319">This array cannot contain multiple references to the same object.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="3d6bf-320">Структура <see cref="T:System.TimeSpan" />, указывающее время ожидания в миллисекундах, или структура <see cref="T:System.TimeSpan" />, отвечающая значению -1 миллисекунда, для неограниченного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-320">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds, to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-321">Ожидает получения сигнала всеми элементами заданного массива, используя значение <see cref="T:System.TimeSpan" /> для указания интервала времени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-321">Waits for all the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> value to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-322">Значение <see langword="true" />, если каждый элемент массива <paramref name="waitHandles" /> получил сигнал; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-322">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-323">Если `timeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-323">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="3d6bf-324">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-324">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="3d6bf-325"><xref:System.Threading.WaitHandle.WaitAll%2A> Возвращает метод, если ожидание завершается, что означает, что или все дескрипторы получили сигнал или истечения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-325">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either all the handles are signaled or a time-out occurs.</span></span> <span data-ttu-id="3d6bf-326">В некоторых реализациях, если передано более 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-326">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="3d6bf-327">Если массив содержит дубликаты, вызов завершится ошибкой.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-327">If the array contains duplicates, the call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d6bf-328"><xref:System.Threading.WaitHandle.WaitAll%2A> Метод не поддерживается в потоках, которые имеют <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-328">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="3d6bf-329">Максимальное значение для `timeout` является <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-329">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d6bf-330">Вызов перегрузки этого метода равносилен вызову метода является <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> перегрузки и указав `false` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-330">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d6bf-331">Значение параметра <paramref name="waitHandles" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-331">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-332">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-332">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-333">Один или несколько объектов массива <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-333">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-334">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-334">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-335">Параметр <paramref name="waitHandles" /> представляет собой массив без элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-335">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="3d6bf-336">
            <block subset="none" type="note">
              <para> В [.NET для приложений Магазина Windows](http://go.microsoft.com/fwlink/?LinkID=247912) или в [переносимой библиотеке классов](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) перехватите исключение базового класса <see cref="T:System.ArgumentException" />. </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-336">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.ArgumentException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="3d6bf-337">Массив <paramref name="waitHandles" /> содержит элементы, являющиеся дубликатами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-337">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d6bf-338">Массив <paramref name="waitHandles" /> содержит больше объектов, чем разрешено системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-338">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="3d6bf-339">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-339">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-340">Атрибут <see cref="T:System.STAThreadAttribute" /> применен к потоковой процедуре для текущего потока, а массив <paramref name="waitHandles" /> содержит больше одного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-340">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d6bf-341">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-341">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="3d6bf-342">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-342">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-343">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-343">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-344">Ожидание прервано, поскольку поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-344">The wait terminated because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-345">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-345">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-346">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-346">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * int * bool -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="3d6bf-347">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-347">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="3d6bf-348">Данный массив не может содержать несколько ссылок на один и тот же объект (дубликатов).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-348">This array cannot contain multiple references to the same object (duplicates).</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="3d6bf-349">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-349">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="3d6bf-350">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-350">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-351">Ожидает получения сигнала всеми элементами заданного массива, используя значение типа <see cref="T:System.Int32" /> для определения интервала времени и указания, следует ли выйти из домена синхронизации до начала ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-351">Waits for all the elements in the specified array to receive a signal, using an <see cref="T:System.Int32" /> value to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-352">Значение <see langword="true" />, если каждый элемент массива <paramref name="waitHandles" /> получил сигнал; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-352">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-353">Если `millisecondsTimeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-353">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="3d6bf-354">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-354">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="3d6bf-355"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-355"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="3d6bf-356">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitAll%2A> возвращает метод `true` когда прерывается мьютекс.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-356">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="3d6bf-357">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-357">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="3d6bf-358">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-358">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="3d6bf-359">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-359">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="3d6bf-360"><xref:System.Threading.WaitHandle.WaitAll%2A> Возвращает метод, если ожидание завершается, что означает либо при получении сигнала всех дескрипторов ожидания.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-360">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either when all the handles are signaled or when time-out occurs.</span></span> <span data-ttu-id="3d6bf-361">В некоторых реализациях, если передано более 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-361">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="3d6bf-362">Если есть повторяющиеся значения в массиве, вызов завершится сбоем с <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-362">If there are duplicates in the array, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d6bf-363"><xref:System.Threading.WaitHandle.WaitAll%2A> Метод не поддерживается в потоках, которые имеют <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-363">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="3d6bf-364">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="3d6bf-364">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="3d6bf-365">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.WaitAll%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-365">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAll%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="3d6bf-366">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-366">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="3d6bf-367">Даже если в настоящее время выполняется метод в классе, который не является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-367">Even if you are currently executing a method on a class that is not derived from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="3d6bf-368">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.WaitAll%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-368">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAll%2A> method.</span></span> <span data-ttu-id="3d6bf-369">Поток возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.WaitAll%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-369">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAll%2A> method completes.</span></span>  
  
 <span data-ttu-id="3d6bf-370">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute> атрибута.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-370">This can be useful when the context-bound class has the <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute> attribute.</span></span> <span data-ttu-id="3d6bf-371">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-371">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="3d6bf-372">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.WaitAll%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-372">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAll%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="3d6bf-373">Когда <xref:System.Threading.WaitHandle.WaitAll%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-373">When the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d6bf-374">В следующем примере кода показано, как использовать пул потоков для асинхронного создания и записи для группы файлов.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-374">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="3d6bf-375">Каждой операции записи помещается в очередь рабочий элемент и сигналов, при его завершении.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-375">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="3d6bf-376">Основной поток ожидает сигнала все элементы, а затем завершается.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-376">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d6bf-377">Значение параметра <paramref name="waitHandles" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-377">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-378">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-378">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-379">Один или несколько объектов массива <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-379">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-380">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-380">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-381">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 2.0 или выше.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-381">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="3d6bf-382">Массив <paramref name="waitHandles" /> содержит элементы, являющиеся дубликатами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-382">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d6bf-383">Массив <paramref name="waitHandles" /> содержит больше объектов, чем разрешено системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-383">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="3d6bf-384">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-384">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-385">Атрибут <see cref="T:System.STAThreadAttribute" /> применен к потоковой процедуре для текущего потока, а массив <paramref name="waitHandles" /> содержит больше одного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-385">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="3d6bf-386">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 1.0 или 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-386">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d6bf-387">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-387">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-388">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-388">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-389">Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-389">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-390">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-390">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * TimeSpan * bool -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="3d6bf-391">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-391">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="3d6bf-392">Этот массив не может содержать несколько ссылок на один и тот же объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-392">This array cannot contain multiple references to the same object.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="3d6bf-393">Структура <see cref="T:System.TimeSpan" />, указывающее время ожидания в миллисекундах, или структура <see cref="T:System.TimeSpan" />, отвечающая значению -1 миллисекунда, для неограниченного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-393">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds, to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="3d6bf-394">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-394">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-395">Ожидает получения сигнала всеми элементами указанного массива, используя значение <see cref="T:System.TimeSpan" /> для задания интервала времени и определения того, нужно ли осуществить выход из домена синхронизации до окончания ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-395">Waits for all the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> value to specify the time interval, and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-396">Значение <see langword="true" />, когда каждый элемент массива <paramref name="waitHandles" /> получил сигнал; иначе — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-396">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-397">Если `timeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-397">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="3d6bf-398">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-398">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="3d6bf-399"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-399"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="3d6bf-400">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitAll%2A> возвращает метод `true` когда прерывается мьютекс.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-400">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="3d6bf-401">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-401">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="3d6bf-402">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-402">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="3d6bf-403">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-403">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="3d6bf-404"><xref:System.Threading.WaitHandle.WaitAll%2A> Возвращает метод, если ожидание завершается, что означает, что или все дескрипторы получили сигнал или истечения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-404">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either all the handles are signaled or a time-out occurs.</span></span> <span data-ttu-id="3d6bf-405">В некоторых реализациях, если передано более 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-405">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="3d6bf-406">Если массив содержит дубликаты, вызов завершится ошибкой.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-406">If the array contains duplicates, the call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d6bf-407"><xref:System.Threading.WaitHandle.WaitAll%2A> Метод не поддерживается в потоках, которые имеют <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-407">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="3d6bf-408">Максимальное значение для `timeout` является <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-408">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="3d6bf-409">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="3d6bf-409">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="3d6bf-410">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.WaitAll%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-410">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAll%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="3d6bf-411">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-411">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="3d6bf-412">Даже если в настоящее время выполняется метод в классе, который не является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-412">Even if you are currently executing a method on a class that is not derived from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="3d6bf-413">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.WaitAll%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-413">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAll%2A> method.</span></span> <span data-ttu-id="3d6bf-414">Возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.WaitAll%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-414">It returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAll%2A> method completes.</span></span>  
  
 <span data-ttu-id="3d6bf-415">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-415">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="3d6bf-416">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-416">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="3d6bf-417">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.WaitAll%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-417">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAll%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="3d6bf-418">Когда <xref:System.Threading.WaitHandle.WaitAll%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-418">When the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d6bf-419">В следующем примере кода показано, как использовать пул потоков для асинхронного создания и записи для группы файлов.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-419">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="3d6bf-420">Каждой операции записи помещается в очередь рабочий элемент и сигналов, при его завершении.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-420">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="3d6bf-421">Основной поток ожидает сигнала все элементы, а затем завершается.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-421">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d6bf-422">Значение параметра <paramref name="waitHandles" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-422">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-423">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-423">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-424">Один или несколько объектов массива <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-424">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-425">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-425">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-426">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 2.0 или выше.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-426">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="3d6bf-427">Массив <paramref name="waitHandles" /> содержит элементы, являющиеся дубликатами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-427">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d6bf-428">Массив <paramref name="waitHandles" /> содержит больше объектов, чем разрешено системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-428">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="3d6bf-429">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-429">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-430">Атрибут <see cref="T:System.STAThreadAttribute" /> применен к потоковой процедуре для текущего потока, а массив <paramref name="waitHandles" /> содержит больше одного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-430">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="3d6bf-431">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 1.0 или 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-431">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d6bf-432">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-432">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="3d6bf-433">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-433">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-434">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-434">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-435">Ожидание прервано, поскольку поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-435">The wait terminated because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-436">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-436">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-437">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-437">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitAny">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d6bf-438">Ожидает получения сигнала какими-либо элементами заданного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-438">Waits for any of the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] -&gt; int" Usage="System.Threading.WaitHandle.WaitAny waitHandles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="3d6bf-439">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-439">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-440">Ожидает получения сигнала какими-либо элементами заданного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-440">Waits for any of the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-441">Индекс объекта, удовлетворившего операцию ожидания, в массиве.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-441">The array index of the object that satisfied the wait.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-442"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-442"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="3d6bf-443">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitAny%2A> возвращает метод `true` Если ожидание завершается, так как мьютекс завершается.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-443">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="3d6bf-444">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-444">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="3d6bf-445">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-445">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="3d6bf-446">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-446">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="3d6bf-447"><xref:System.Threading.WaitHandle.WaitAny%2A> Вызывает метод <xref:System.Threading.AbandonedMutexException> только тогда, когда ожидание завершается из-за брошенного мьютекса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-447">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="3d6bf-448">Если `waitHandles` содержит выпущенные мьютекс с меньшим количеством индекса, чем Брошенный мьютекс, <xref:System.Threading.WaitHandle.WaitAny%2A> метод завершается нормально, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-448">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d6bf-449">В версиях .NET Framework до версии 2.0, если поток завершает работу или прерывает без явно освобождая <xref:System.Threading.Mutex>и что `Mutex` имеет индекс 0 (ноль) в `WaitAny` массива в другом потоке, индекс, возвращенный `WaitAny` — 128 вместо 0.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-449">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="3d6bf-450">Этот метод возвращает при любой дескриптор получает сигнал.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-450">This method returns when any handle is signaled.</span></span> <span data-ttu-id="3d6bf-451">Если во время вызова оповещенным более одного объекта, возвращается индекс массива объект получил сигнал с наименьшим значением индекса сигнальное объектов.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-451">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="3d6bf-452">В некоторых реализациях, если сведения, которые передаются 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-452">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="3d6bf-453">Вызов перегрузки этого метода эквивалентен вызову <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> перегрузку метода и указав значение -1 (или <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) для `millisecondsTimeout` и `true` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-453">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> method overload and specifying -1 (or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) for `millisecondsTimeout` and `true` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d6bf-454">В следующем примере кода показан вызов <xref:System.Threading.WaitHandle.WaitAny%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-454">The following code example demonstrates calling the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span>  
  
 [!code-cpp[WaitHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/WaitHandle/cpp/WaitHandle.cpp#1)]
 [!code-csharp[WaitHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/WaitHandle/CS/WaitHandle.cs#1)]
 [!code-vb[WaitHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WaitHandle/VB/WaitHandle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d6bf-455">Значение параметра <paramref name="waitHandles" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-455">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-456">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-456">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-457">Один или несколько объектов в массиве <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-457">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d6bf-458">Количество объектов в массиве <paramref name="waitHandles" /> больше допустимого системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-458">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="3d6bf-459">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 1.0 или 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-459">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-460">Ожидание завершено, поскольку поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-460">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-461">Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-461">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d6bf-462">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 2.0 или выше.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-462">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-463">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-463">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * int -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="3d6bf-464">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-464">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="3d6bf-465">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-465">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-466">Ожидает получения сигнала любыми элементами указанного массива, используя 32-битовое целое число со знаком для задания интервала времени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-466">Waits for any of the elements in the specified array to receive a signal, using a 32-bit signed integer to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-467">Индекс объекта в массиве, удовлетворившего операцию ожидания, или значение <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, если ни один из объектов не удовлетворил операцию ожидания, и истек интервал времени, равный <paramref name="millisecondsTimeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-467">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="millisecondsTimeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-468">Если `millisecondsTimeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-468">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="3d6bf-469">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-469">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="3d6bf-470"><xref:System.Threading.WaitHandle.WaitAny%2A> Вызывает метод <xref:System.Threading.AbandonedMutexException> только тогда, когда ожидание завершается из-за брошенного мьютекса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-470">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="3d6bf-471">Если `waitHandles` содержит выпущенные мьютекс с меньшим количеством индекса, чем Брошенный мьютекс, <xref:System.Threading.WaitHandle.WaitAny%2A> метод завершается нормально, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-471">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
 <span data-ttu-id="3d6bf-472">Этот метод возвращает, если ожидание завершается, когда все дескрипторы получили сигнал или истечении времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-472">This method returns when the wait terminates, either when any of the handles are signaled or when a timeout occurs.</span></span> <span data-ttu-id="3d6bf-473">Если во время вызова оповещенным более одного объекта, возвращается индекс массива объект получил сигнал с наименьшим значением индекса сигнальное объектов.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-473">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="3d6bf-474">В некоторых реализациях, если сведения, которые передаются 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-474">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="3d6bf-475">Вызов перегрузки этого метода равносилен вызову метода является <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> перегрузки и указав `false` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-475">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d6bf-476">Значение параметра <paramref name="waitHandles" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-476">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-477">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-477">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-478">Один или несколько объектов в массиве <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-478">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d6bf-479">Количество объектов в массиве <paramref name="waitHandles" /> больше допустимого системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-479">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d6bf-480">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-480">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-481">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-481">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-482">Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-482">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d6bf-483">Параметр <paramref name="waitHandles" /> представляет собой массив без элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-483">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-484">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-484">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), timeout As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * TimeSpan -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="3d6bf-485">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-485">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="3d6bf-486">Объект <see cref="T:System.TimeSpan" />, представляющий время ожидания в миллисекундах, или объект <see cref="T:System.TimeSpan" />, представляющий -1 миллисекунду для неограниченного ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-486">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-487">Ожидает получения сигнала любыми элементами заданного массива, используя значение типа <see cref="T:System.TimeSpan" /> для указания интервала времени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-487">Waits for any of the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-488">Индекс объекта в массиве, удовлетворившего операцию ожидания, или значение <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, если ни один из объектов не удовлетворил операцию ожидания, и истек интервал времени, равный <paramref name="timeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-488">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="timeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-489">Если `timeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-489">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="3d6bf-490">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-490">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="3d6bf-491"><xref:System.Threading.WaitHandle.WaitAny%2A> Вызывает метод <xref:System.Threading.AbandonedMutexException> только тогда, когда ожидание завершается из-за брошенного мьютекса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-491">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="3d6bf-492">Если `waitHandles` содержит выпущенные мьютекс с меньшим количеством индекса, чем Брошенный мьютекс, <xref:System.Threading.WaitHandle.WaitAny%2A> метод завершается нормально, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-492">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
 <span data-ttu-id="3d6bf-493">Этот метод возвращает, если ожидание завершается, когда все дескрипторы получили сигнал или при возникновении тайм-аута.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-493">This method returns when the wait terminates, either when any of the handles are signaled or when a time-out occurs.</span></span> <span data-ttu-id="3d6bf-494">Если во время вызова оповещенным более одного объекта, возвращается индекс массива объект получил сигнал с наименьшим значением индекса сигнальное объектов.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-494">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="3d6bf-495">В некоторых реализациях, если сведения, которые передаются 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-495">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="3d6bf-496">Максимальное значение для `timeout` является <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-496">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d6bf-497">Вызов перегрузки этого метода равносилен вызову метода является <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> перегрузки и указав `false` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-497">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d6bf-498">Значение параметра <paramref name="waitHandles" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-498">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-499">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-499">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-500">Один или несколько объектов в массиве <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-500">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d6bf-501">Количество объектов в массиве <paramref name="waitHandles" /> больше допустимого системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-501">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d6bf-502">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-502">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="3d6bf-503">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-503">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-504">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-504">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-505">Ожидание завершено, поскольку поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-505">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-506">Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-506">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d6bf-507">Параметр <paramref name="waitHandles" /> представляет собой массив без элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-507">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-508">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-508">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), millisecondsTimeout As Integer, exitContext As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * int * bool -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="3d6bf-509">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-509">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="3d6bf-510">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-510">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="3d6bf-511">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-511">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-512">Ожидает, пока какой-либо из элементов заданного массива не получит сигнал, используя 32-разрядное целое число со знаком для задания интервала времени и определения, нужно ли осуществить выход из домена синхронизации до окончания ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-512">Waits for any of the elements in the specified array to receive a signal, using a 32-bit signed integer to specify the time interval, and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-513">Индекс объекта в массиве, удовлетворившего операцию ожидания, или значение <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, если ни один из объектов не удовлетворил операцию ожидания, и истек интервал времени, равный <paramref name="millisecondsTimeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-513">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="millisecondsTimeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-514">Если `millisecondsTimeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-514">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="3d6bf-515">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-515">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="3d6bf-516"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-516"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="3d6bf-517">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitAny%2A> возвращает метод `true` Если ожидание завершается, так как мьютекс завершается.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-517">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="3d6bf-518">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-518">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="3d6bf-519">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-519">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="3d6bf-520">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-520">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="3d6bf-521"><xref:System.Threading.WaitHandle.WaitAny%2A> Вызывает метод <xref:System.Threading.AbandonedMutexException> только тогда, когда ожидание завершается из-за брошенного мьютекса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-521">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="3d6bf-522">Если `waitHandles` содержит выпущенные мьютекс с меньшим количеством индекса, чем Брошенный мьютекс, <xref:System.Threading.WaitHandle.WaitAny%2A> метод завершается нормально, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-522">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d6bf-523">В версиях .NET Framework до версии 2.0, если поток завершает работу или прерывает без явно освобождая <xref:System.Threading.Mutex>и что `Mutex` имеет индекс 0 (ноль) в `WaitAny` массива в другом потоке, индекс, возвращенный `WaitAny` — 128 вместо 0.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-523">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="3d6bf-524">Этот метод возвращает, если ожидание завершается, когда все дескрипторы получили сигнал или истечении времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-524">This method returns when the wait terminates, either when any of the handles are signaled or when a timeout occurs.</span></span> <span data-ttu-id="3d6bf-525">Если во время вызова оповещенным более одного объекта, возвращается индекс массива объект получил сигнал с наименьшим значением индекса сигнальное объектов.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-525">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="3d6bf-526">В некоторых реализациях, если сведения, которые передаются 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-526">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="3d6bf-527">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="3d6bf-527">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="3d6bf-528">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.WaitAny%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-528">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAny%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="3d6bf-529">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-529">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="3d6bf-530">Даже если в настоящее время выполняется метод в классе, который является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-530">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="3d6bf-531">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.WaitAny%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-531">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span> <span data-ttu-id="3d6bf-532">Поток возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.WaitAny%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-532">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes.</span></span>  
  
 <span data-ttu-id="3d6bf-533">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-533">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="3d6bf-534">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-534">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="3d6bf-535">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.WaitAny%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-535">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAny%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="3d6bf-536">Когда <xref:System.Threading.WaitHandle.WaitAny%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-536">When the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d6bf-537">В следующем примере кода показано, как использовать пул потоков для поиска файла на несколько дисков одновременно.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-537">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="3d6bf-538">Для краткости выполнялся поиск только в корневом каталоге каждого диска.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-538">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d6bf-539">Значение параметра <paramref name="waitHandles" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-539">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-540">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-540">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-541">Один или несколько объектов в массиве <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-541">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d6bf-542">Количество объектов в массиве <paramref name="waitHandles" /> больше допустимого системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-542">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="3d6bf-543">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 1.0 или 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-543">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d6bf-544">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-544">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-545">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-545">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-546">Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-546">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d6bf-547">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 2.0 или выше.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-547">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-548">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-548">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), timeout As TimeSpan, exitContext As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * TimeSpan * bool -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="3d6bf-549">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-549">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="3d6bf-550">Объект <see cref="T:System.TimeSpan" />, представляющий время ожидания в миллисекундах, или объект <see cref="T:System.TimeSpan" />, представляющий -1 миллисекунду для неограниченного ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-550">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="3d6bf-551">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-551">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-552">Ожидает получения сигнала какими-либо элементами заданного массива, используя структуру <see cref="T:System.TimeSpan" /> для задания интервала времени и указания, нужно ли выходить из домена синхронизации до окончания ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-552">Waits for any of the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-553">Индекс объекта в массиве, удовлетворившего операцию ожидания, или значение <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, если ни один из объектов не удовлетворил операцию ожидания, и истек интервал времени, равный <paramref name="timeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-553">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="timeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-554">Если `timeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-554">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="3d6bf-555">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-555">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="3d6bf-556"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-556"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="3d6bf-557">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitAny%2A> возвращает метод `true` Если ожидание завершается, так как мьютекс завершается.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-557">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="3d6bf-558">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-558">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="3d6bf-559">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-559">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="3d6bf-560">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-560">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="3d6bf-561"><xref:System.Threading.WaitHandle.WaitAny%2A> Вызывает метод <xref:System.Threading.AbandonedMutexException> только тогда, когда ожидание завершается из-за брошенного мьютекса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-561">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="3d6bf-562">Если `waitHandles` содержит выпущенные мьютекс с меньшим количеством индекса, чем Брошенный мьютекс, <xref:System.Threading.WaitHandle.WaitAny%2A> метод завершается нормально, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-562">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d6bf-563">В версиях .NET Framework до версии 2.0, если поток завершает работу или прерывает без явно освобождая <xref:System.Threading.Mutex>и что `Mutex` имеет индекс 0 (ноль) в `WaitAny` массива в другом потоке, индекс, возвращенный `WaitAny` — 128 вместо 0.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-563">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="3d6bf-564">Этот метод возвращает, если ожидание завершается, когда все дескрипторы получили сигнал или при возникновении тайм-аута.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-564">This method returns when the wait terminates, either when any of the handles are signaled or when a time-out occurs.</span></span> <span data-ttu-id="3d6bf-565">Если во время вызова оповещенным более одного объекта, возвращается индекс массива объект получил сигнал с наименьшим значением индекса сигнальное объектов.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-565">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="3d6bf-566">В некоторых реализациях, если сведения, которые передаются 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-566">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="3d6bf-567">Максимальное значение для `timeout` является <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-567">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="3d6bf-568">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="3d6bf-568">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="3d6bf-569">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.WaitAny%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-569">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAny%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="3d6bf-570">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-570">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="3d6bf-571">Даже если в настоящее время выполняется метод в классе, который является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-571">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="3d6bf-572">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.WaitAny%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-572">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span> <span data-ttu-id="3d6bf-573">Поток возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.WaitAny%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-573">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes.</span></span>  
  
 <span data-ttu-id="3d6bf-574">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-574">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="3d6bf-575">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-575">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="3d6bf-576">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.WaitAny%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-576">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAny%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="3d6bf-577">Когда <xref:System.Threading.WaitHandle.WaitAny%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-577">When the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d6bf-578">В следующем примере кода показано, как использовать пул потоков для поиска файла на несколько дисков одновременно.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-578">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="3d6bf-579">Для краткости выполнялся поиск только в корневом каталоге каждого диска.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-579">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d6bf-580">Значение параметра <paramref name="waitHandles" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-580">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d6bf-581">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-581">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-582">Один или несколько объектов в массиве <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-582">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d6bf-583">Количество объектов в массиве <paramref name="waitHandles" /> больше допустимого системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-583">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="3d6bf-584">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 1.0 или 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-584">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d6bf-585">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-585">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="3d6bf-586">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-586">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-587">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-587">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-588">Ожидание завершено, поскольку поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-588">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-589">Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-589">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d6bf-590">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 2.0 или выше.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-590">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-591">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-591">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitOne">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d6bf-592">Блокирует текущий поток до получения сигнала объектом <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-592">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne();" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : unit -&gt; bool&#xA;override this.WaitOne : unit -&gt; bool" Usage="waitHandle.WaitOne " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d6bf-593">Блокирует текущий поток до получения сигнала объектом <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-593">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-594">Значение <see langword="true" />, если текущий экземпляр получает сигнал.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-594">
              <see langword="true" /> if the current instance receives a signal.</span>
          </span>
          <span data-ttu-id="3d6bf-595">Если текущий экземпляр не сигнализируется, метод <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> не возвращает никакое значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-595">If the current instance is never signaled, <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> never returns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-596"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-596"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="3d6bf-597">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitOne%2A> возвращает метод `true` когда прерывается мьютекс.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-597">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="3d6bf-598">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-598">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="3d6bf-599">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-599">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="3d6bf-600">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-600">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="3d6bf-601">Объект, вызывающий этот метод блокируется неограниченное время до получения сигнала текущим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-601">The caller of this method blocks indefinitely until the current instance receives a signal.</span></span> <span data-ttu-id="3d6bf-602">Этот метод используется для блокирования до <xref:System.Threading.WaitHandle> получения сигнала от другого потока, такие как формируется при завершении асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-602">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="3d6bf-603">Дополнительные сведения см. в разделе <xref:System.IAsyncResult> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-603">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="3d6bf-604">Вызов перегрузки этого метода эквивалентен вызову <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> перегрузку метода и указав значение -1 или <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> для первого параметра и `false` для второго параметра.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-604">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> method overload and specifying -1 or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> for the first parameter and `false` for the second parameter.</span></span>  
  
 <span data-ttu-id="3d6bf-605">Переопределите этот метод для настройки поведения из производных классов.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-605">Override this method to customize the behavior of derived classes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d6bf-606">В следующем примере кода показано, как использовать дескриптор ожидания, чтобы сохранить процесса завершения работы при ожидании фоновый поток для завершения выполнения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-606">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/CPP/source1.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/CS/source1.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/VB/source1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3d6bf-607">Текущий экземпляр уже был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-607">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-608">Ожидание завершено, поскольку поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-608">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-609">Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-609">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-610">Текущий экземпляр является прозрачным прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-610">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : int -&gt; bool&#xA;override this.WaitOne : int -&gt; bool" Usage="waitHandle.WaitOne millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="3d6bf-611">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-611">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-612">Блокирует текущий поток до получения текущим дескриптором <see cref="T:System.Threading.WaitHandle" /> сигнала, используя 32-разрядное целое число со знаком для указания интервала времени в миллисекундах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-612">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal, using a 32-bit signed integer to specify the time interval in milliseconds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-613">Значение <see langword="true" /> при получении сигнала текущим экземпляром; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-613">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-614">Если `millisecondsTimeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-614">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="3d6bf-615">Он проверяет состояние дескриптора ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-615">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="3d6bf-616">Объект, вызывающий этот метод блокируется до получения текущим экземпляром сигнала или время ожидания имеет место.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-616">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="3d6bf-617">Этот метод используется для блокирования до <xref:System.Threading.WaitHandle> получения сигнала от другого потока, такие как формируется при завершении асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-617">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="3d6bf-618">Дополнительные сведения см. в разделе <xref:System.IAsyncResult> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-618">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="3d6bf-619">Переопределите этот метод для настройки поведения из производных классов.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-619">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="3d6bf-620">Вызов перегрузки этого метода равносилен вызову метода является <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> перегрузки и указав `false` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-620">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d6bf-621">В следующем примере кода показано, как использовать дескриптор ожидания, чтобы сохранить процесса завершения работы при ожидании фоновый поток для завершения выполнения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-621">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3d6bf-622">Текущий экземпляр уже был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-622">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d6bf-623">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-623">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-624">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-624">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-625">Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-625">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-626">Текущий экземпляр является прозрачным прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-626">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : TimeSpan -&gt; bool&#xA;override this.WaitOne : TimeSpan -&gt; bool" Usage="waitHandle.WaitOne timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="3d6bf-627">Объект <see cref="T:System.TimeSpan" />, представляющий время ожидания в миллисекундах, или объект <see cref="T:System.TimeSpan" />, представляющий -1 миллисекунду для неограниченного ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-627">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-628">Блокирует текущий поток до получения сигнала текущим экземпляром, используя значение типа <see cref="T:System.TimeSpan" /> для указания интервала времени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-628">Blocks the current thread until the current instance receives a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-629">Значение <see langword="true" /> при получении сигнала текущим экземпляром; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-629">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-630">Если `timeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-630">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="3d6bf-631">Он проверяет состояние дескриптора ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-631">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="3d6bf-632">Объект, вызывающий этот метод блокируется до получения текущим экземпляром сигнала или время ожидания имеет место.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-632">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="3d6bf-633">Этот метод используется для блокирования до <xref:System.Threading.WaitHandle> получения сигнала от другого потока, такие как формируется при завершении асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-633">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="3d6bf-634">Дополнительные сведения см. в разделе <xref:System.IAsyncResult> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-634">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="3d6bf-635">Переопределите этот метод для настройки поведения из производных классов.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-635">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="3d6bf-636">Максимальное значение для `timeout` является <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-636">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d6bf-637">Вызов перегрузки этого метода равносилен вызову метода является <xref:System.Threading.WaitHandle.WaitOne%28System.TimeSpan%2CSystem.Boolean%29> перегрузки и указав `false` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-637">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitOne%28System.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3d6bf-638">Текущий экземпляр уже был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-638">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d6bf-639">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-639">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="3d6bf-640">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-640">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-641">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-641">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-642">Ожидание завершено, поскольку поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-642">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-643">Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-643">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-644">Текущий экземпляр является прозрачным прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-644">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : int * bool -&gt; bool&#xA;override this.WaitOne : int * bool -&gt; bool" Usage="waitHandle.WaitOne (millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="3d6bf-645">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-645">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="3d6bf-646">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-646">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-647">Блокирует текущий поток до получения сигнала текущим объектом <see cref="T:System.Threading.WaitHandle" />, используя 32-разрядное знаковое целое число для указания периода времени и указания, нужно ли выходить из домена синхронизации до окончания ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-647">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal, using a 32-bit signed integer to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-648">Значение <see langword="true" /> при получении сигнала текущим экземпляром; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-648">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-649">Если `millisecondsTimeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-649">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="3d6bf-650">Он проверяет состояние дескриптора ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-650">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="3d6bf-651"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-651"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="3d6bf-652">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitOne%2A> возвращает метод `true` когда прерывается мьютекс.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-652">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="3d6bf-653">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-653">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="3d6bf-654">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-654">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="3d6bf-655">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-655">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="3d6bf-656">Объект, вызывающий этот метод блокируется до получения текущим экземпляром сигнала или время ожидания имеет место.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-656">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="3d6bf-657">Этот метод используется для блокирования до <xref:System.Threading.WaitHandle> получения сигнала от другого потока, такие как формируется при завершении асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-657">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="3d6bf-658">Дополнительные сведения см. в разделе <xref:System.IAsyncResult> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-658">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="3d6bf-659">Переопределите этот метод для настройки поведения из производных классов.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-659">Override this method to customize the behavior of derived classes.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="3d6bf-660">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="3d6bf-660">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="3d6bf-661">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.WaitOne%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-661">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitOne%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="3d6bf-662">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-662">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="3d6bf-663">Даже если в настоящее время выполняется метод в классе, который является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-663">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="3d6bf-664">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.WaitOne%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-664">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="3d6bf-665">Поток возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.WaitOne%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-665">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitOne%2A> method completes.</span></span>  
  
 <span data-ttu-id="3d6bf-666">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-666">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="3d6bf-667">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-667">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="3d6bf-668">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.WaitOne%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-668">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitOne%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="3d6bf-669">Когда <xref:System.Threading.WaitHandle.WaitOne%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-669">When the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d6bf-670">В следующем примере показан способ <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> перегруженный метод ведет себя при вызове в домен синхронизации.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-670">The following example shows how the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> method overload behaves when it is called within a synchronization domain.</span></span> <span data-ttu-id="3d6bf-671">Во-первых, поток ожидает открытия с `exitContext` присвоено `false` и блокируется, пока не истечет время ожидания ожидания.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-671">First, a thread waits with `exitContext` set to `false` and blocks until the wait timeout expires.</span></span> <span data-ttu-id="3d6bf-672">Второй поток выполняет после первый поток завершается и ожидает с `exitContext` присвоено `true`.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-672">A second thread executes after the first thread terminates and waits with `exitContext` set to `true`.</span></span> <span data-ttu-id="3d6bf-673">Вызов сигнал дескриптор ожидания для этой второй поток не заблокирован, и до истечения времени ожидания ожидания завершения потока.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-673">The call to signal the wait handle for this second thread is not blocked, and the thread completes before the wait timeout.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/cpp/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/cs/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3d6bf-674">Текущий экземпляр уже был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-674">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d6bf-675">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-675">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-676">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-676">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-677">Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-677">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-678">Текущий экземпляр является прозрачным прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-678">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : TimeSpan * bool -&gt; bool&#xA;override this.WaitOne : TimeSpan * bool -&gt; bool" Usage="waitHandle.WaitOne (timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="3d6bf-679">Объект <see cref="T:System.TimeSpan" />, представляющий время ожидания в миллисекундах, или объект <see cref="T:System.TimeSpan" />, представляющий -1 миллисекунду для неограниченного ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-679">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="3d6bf-680">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-680">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d6bf-681">Блокирует текущий поток до получения сигнала текущим экземпляром, используя значение типа <see cref="T:System.TimeSpan" /> для задания интервала времени и указания, следует ли выйти из домена синхронизации до начала ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-681">Blocks the current thread until the current instance receives a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d6bf-682">Значение <see langword="true" /> при получении сигнала текущим экземпляром; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-682">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-683">Если `timeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-683">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="3d6bf-684">Он проверяет состояние дескриптора ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-684">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="3d6bf-685"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-685"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="3d6bf-686">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitOne%2A> возвращает метод `true` когда прерывается мьютекс.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-686">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="3d6bf-687">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-687">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="3d6bf-688">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="3d6bf-688">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="3d6bf-689">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-689">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="3d6bf-690">Объект, вызывающий этот метод блокируется до получения текущим экземпляром сигнала или время ожидания имеет место.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-690">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="3d6bf-691">Этот метод используется для блокирования до <xref:System.Threading.WaitHandle> получения сигнала от другого потока, такие как формируется при завершении асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-691">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="3d6bf-692">Дополнительные сведения см. в разделе <xref:System.IAsyncResult> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-692">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="3d6bf-693">Переопределите этот метод для настройки поведения из производных классов.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-693">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="3d6bf-694">Максимальное значение для `timeout` является <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-694">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="3d6bf-695">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="3d6bf-695">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="3d6bf-696">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.WaitOne%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-696">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitOne%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="3d6bf-697">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-697">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="3d6bf-698">Даже если в настоящее время выполняется метод в классе, который является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-698">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="3d6bf-699">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.WaitOne%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-699">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="3d6bf-700">Поток возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.WaitOne%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-700">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitOne%2A> method completes.</span></span>  
  
 <span data-ttu-id="3d6bf-701">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-701">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="3d6bf-702">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-702">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="3d6bf-703">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.WaitOne%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-703">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitOne%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="3d6bf-704">Когда <xref:System.Threading.WaitHandle.WaitOne%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-704">When the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d6bf-705">В следующем примере кода показано, как использовать дескриптор ожидания, чтобы сохранить процесса завершения работы при ожидании фоновый поток для завершения выполнения.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-705">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3d6bf-706">Текущий экземпляр уже был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-706">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d6bf-707">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-707">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="3d6bf-708">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-708">-or-</span>
          </span>
          <span data-ttu-id="3d6bf-709">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-709">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="3d6bf-710">Ожидание завершено, поскольку поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-710">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="3d6bf-711">Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-711">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d6bf-712">Текущий экземпляр является прозрачным прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-712">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitTimeout">
      <MemberSignature Language="C#" Value="public const int WaitTimeout = 258;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 WaitTimeout = (258)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.WaitHandle.WaitTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Const WaitTimeout As Integer  = 258" />
      <MemberSignature Language="C++ CLI" Value="public: int WaitTimeout = 258;" />
      <MemberSignature Language="F#" Value="val mutable WaitTimeout : int" Usage="System.Threading.WaitHandle.WaitTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>258</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d6bf-713">Указывает, что время ожидания операции <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> истекло до получения сигнала каким-либо из дескрипторов ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-713">Indicates that a <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> operation timed out before any of the wait handles were signaled.</span>
          </span>
          <span data-ttu-id="3d6bf-714">Это поле является константой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d6bf-714">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d6bf-715">Это поле является одним из возможных возвращаемых значений `WaitAny`.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-715">This field is one of the possible return values of `WaitAny`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d6bf-716">В следующем примере кода показано, как использовать пул потоков для поиска файла на несколько дисков одновременно.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-716">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="3d6bf-717">Для краткости выполнялся поиск только в корневом каталоге каждого диска.</span><span class="sxs-lookup"><span data-stu-id="3d6bf-717">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>