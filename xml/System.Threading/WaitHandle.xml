<Type Name="WaitHandle" FullName="System.Threading.WaitHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b0743bee28025334f71604c9b2d0c45160aa6bc8" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52608552" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WaitHandle : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract beforefieldinit WaitHandle extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitHandle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WaitHandle&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WaitHandle abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type WaitHandle = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2ebeb-101">Инкапсулирует связанные с операционной системой объекты, ожидающие монопольного доступа к общим ресурсам.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ebeb-101">Encapsulates operating system–specific objects that wait for exclusive access to shared resources.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-102"><xref:System.Threading.WaitHandle> Класс, инкапсулирующий собственный дескриптор операционной системы синхронизации и используется для представления всех объектов синхронизации в среде выполнения, выполнять несколько операций ожидания.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-102">The <xref:System.Threading.WaitHandle> class encapsulates a native operating system synchronization handle and is used to represent all synchronization objects in the runtime that allow multiple wait operations.</span></span> <span data-ttu-id="2ebeb-103">Сравнение дескрипторов ожидания с другими объектами синхронизации, см. в разделе [Обзор примитивов синхронизации](~/docs/standard/threading/overview-of-synchronization-primitives.md).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-103">For a comparison of wait handles with other synchronization objects, see [Overview of Synchronization Primitives](~/docs/standard/threading/overview-of-synchronization-primitives.md).</span></span>  
  
 <span data-ttu-id="2ebeb-104"><xref:System.Threading.WaitHandle> Сам класс является абстрактным.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-104">The <xref:System.Threading.WaitHandle> class itself is abstract.</span></span> <span data-ttu-id="2ebeb-105">Классы, производные от <xref:System.Threading.WaitHandle> определяют механизм сигнализации о предоставлении или освобождение доступ к общему ресурсу, но они используют наследуемого <xref:System.Threading.WaitHandle> методы на время ожидания для доступа к общим ресурсам.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-105">Classes derived from <xref:System.Threading.WaitHandle> define a signaling mechanism to indicate taking or releasing access to a shared resource, but they use the inherited <xref:System.Threading.WaitHandle> methods to block while waiting for access to shared resources.</span></span> <span data-ttu-id="2ebeb-106">Классы, унаследованные от <xref:System.Threading.WaitHandle> включают:</span><span class="sxs-lookup"><span data-stu-id="2ebeb-106">The classes derived from <xref:System.Threading.WaitHandle> include:</span></span>  
  
-   <span data-ttu-id="2ebeb-107">класс <xref:System.Threading.Mutex>;</span><span class="sxs-lookup"><span data-stu-id="2ebeb-107">The <xref:System.Threading.Mutex> class.</span></span> <span data-ttu-id="2ebeb-108">См. в разделе [мьютексы](~/docs/standard/threading/mutexes.md).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-108">See [Mutexes](~/docs/standard/threading/mutexes.md).</span></span>  
  
-   <span data-ttu-id="2ebeb-109"><xref:System.Threading.EventWaitHandle> Класс и его производные классы <xref:System.Threading.AutoResetEvent> и <xref:System.Threading.ManualResetEvent>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-109">The <xref:System.Threading.EventWaitHandle> class and its derived classes, <xref:System.Threading.AutoResetEvent> and <xref:System.Threading.ManualResetEvent>.</span></span> <span data-ttu-id="2ebeb-110">См. дополнительные сведения об [EventWaitHandle, AutoResetEvent, CountdownEvent, ManualResetEvent](~/docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-110">See [EventWaitHandle, AutoResetEvent, CountdownEvent, ManualResetEvent](~/docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md).</span></span>  
  
-   <span data-ttu-id="2ebeb-111">класс <xref:System.Threading.Semaphore>;</span><span class="sxs-lookup"><span data-stu-id="2ebeb-111">The <xref:System.Threading.Semaphore> class.</span></span> <span data-ttu-id="2ebeb-112">См. в разделе [Semaphore и SemaphoreSlim](~/docs/standard/threading/semaphore-and-semaphoreslim.md).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-112">See [Semaphore and SemaphoreSlim](~/docs/standard/threading/semaphore-and-semaphoreslim.md).</span></span>  
  
 <span data-ttu-id="2ebeb-113">Потоки могут блокироваться по отдельному дескриптору ожидания путем вызова метода экземпляра <xref:System.Threading.WaitHandle.WaitOne%2A>, которая наследуется производными классами <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-113">Threads can block on an individual wait handle by calling the instance method <xref:System.Threading.WaitHandle.WaitOne%2A>, which is inherited by classes derived from <xref:System.Threading.WaitHandle>.</span></span>  
  
 <span data-ttu-id="2ebeb-114">Классов, производных от <xref:System.Threading.WaitHandle> их сходство потоков по-разному.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-114">The derived classes of <xref:System.Threading.WaitHandle> differ in their thread affinity.</span></span> <span data-ttu-id="2ebeb-115">Дескрипторы ожидания событий (<xref:System.Threading.EventWaitHandle>, <xref:System.Threading.AutoResetEvent>, и <xref:System.Threading.ManualResetEvent>) и семафоры не поддерживают сходство потоков; любой поток может подать сигнал дескриптор ожидания событий или семафора.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-115">Event wait handles (<xref:System.Threading.EventWaitHandle>, <xref:System.Threading.AutoResetEvent>, and <xref:System.Threading.ManualResetEvent>) and semaphores do not have thread affinity; any thread can signal an event wait handle or semaphore.</span></span> <span data-ttu-id="2ebeb-116">Мьютексы, с другой стороны, поддерживают сходство потоков; поток, который является владельцем мьютекса необходимо освободить его, и исключение возникает в том случае, если поток вызывает <xref:System.Threading.Mutex.ReleaseMutex%2A> метод, который не является владельцем мьютекса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-116">Mutexes, on the other hand, do have thread affinity; the thread that owns a mutex must release it, and an exception is thrown if a thread calls the <xref:System.Threading.Mutex.ReleaseMutex%2A> method on a mutex that it does not own.</span></span>  
  
 <span data-ttu-id="2ebeb-117">Так как <xref:System.Threading.WaitHandle> класс является производным от <xref:System.MarshalByRefObject>, эти классы можно использовать для синхронизации действий потоков за границами домена приложения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-117">Because the <xref:System.Threading.WaitHandle> class derives from <xref:System.MarshalByRefObject>, these classes can be used to synchronize the activities of threads across application domain boundaries.</span></span>  
  
 <span data-ttu-id="2ebeb-118">В дополнение к его производные классы <xref:System.Threading.WaitHandle> класс содержит несколько статических методов, которые блокируют поток, пока один или несколько объектов синхронизации получения сигнала.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-118">In addition to its derived classes, the <xref:System.Threading.WaitHandle> class has a number of static methods that block a thread until one or more synchronization objects receive a signal.</span></span> <span data-ttu-id="2ebeb-119">Сюда входит следующее.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-119">These include:</span></span>  
  
-   <span data-ttu-id="2ebeb-120"><xref:System.Threading.WaitHandle.SignalAndWait%2A>, что позволяет потоку сигнал одному дескриптору ожидания и немедленно ожидать на другом.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-120"><xref:System.Threading.WaitHandle.SignalAndWait%2A>, which allows a thread to signal one wait handle and immediately wait on another.</span></span>  
  
-   <span data-ttu-id="2ebeb-121"><xref:System.Threading.WaitHandle.WaitAll%2A>, что позволяет потоку ожидать все дескрипторы ожидания в массиве получения сигнала.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-121"><xref:System.Threading.WaitHandle.WaitAll%2A>, which allows a thread to wait until all the wait handles in an array receive a signal.</span></span>  
  
-   <span data-ttu-id="2ebeb-122"><xref:System.Threading.WaitHandle.WaitAny%2A>, который позволяет потоку ожидать, пока не будет выдан сигнал любого из указанного набора дескрипторов ожидания.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-122"><xref:System.Threading.WaitHandle.WaitAny%2A>, which allows a thread to wait until any one of a specified set of wait handles has been signaled .</span></span>  
  
 <span data-ttu-id="2ebeb-123">Перегрузки этих методов предоставляют интервалы времени ожидания для прерывания ожидания, а также возможность выхода из контекста синхронизации до начала ожидания, что позволяет другим потокам использовать контекст синхронизации.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-123">The overloads of these methods provide timeout intervals for abandoning the wait, and the opportunity to exit a synchronization context before entering the wait, allowing other threads to use the synchronization context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2ebeb-124">Этот тип реализует <xref:System.IDisposable> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-124">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="2ebeb-125">Когда вы закончите, используя тип или тип, производный от него, следует освободить его прямо или косвенно.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-125">When you have finished using the type or a type derived from it, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="2ebeb-126">Чтобы удалить тип напрямую, вызовите его <xref:System.Threading.WaitHandle.Close%2A> метод в `try` / `catch` блока.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-126">To dispose of the type directly, call its <xref:System.Threading.WaitHandle.Close%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="2ebeb-127">Чтобы избавиться от его косвенно, используйте языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-127">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="2ebeb-128">Дополнительные сведения см. в разделе «С помощью объекта, реализует IDisposable» <xref:System.IDisposable> разделу интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-128">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="2ebeb-129"><xref:System.Threading.WaitHandle> реализует <xref:System.IDisposable.Dispose%2A> шаблон.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-129"><xref:System.Threading.WaitHandle> implements the <xref:System.IDisposable.Dispose%2A> pattern.</span></span> <span data-ttu-id="2ebeb-130">См. в разделе [шаблон удаления](~/docs/standard/design-guidelines/dispose-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-130">See [Dispose Pattern](~/docs/standard/design-guidelines/dispose-pattern.md).</span></span> <span data-ttu-id="2ebeb-131">При наследовании от <xref:System.Threading.WaitHandle>, используйте <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> свойство, чтобы сохранять ваш собственный дескриптор операционной системы.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-131">When you derive from <xref:System.Threading.WaitHandle>, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property to store your native operating system handle.</span></span> <span data-ttu-id="2ebeb-132">Необходимо переопределить защищенный <xref:System.Threading.WaitHandle.Dispose%2A> метод только при использовании дополнительных неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-132">You do not need to override the protected <xref:System.Threading.WaitHandle.Dispose%2A> method unless you use additional unmanaged resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ebeb-133">В следующем примере кода показано как два потока могут сделать фоновых задач при основной поток ожидает завершения с помощью статического задач <xref:System.Threading.WaitHandle.WaitAny%2A> и <xref:System.Threading.WaitHandle.WaitAll%2A> методы <xref:System.Threading.WaitHandle> класса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-133">The following code example shows how two threads can do background tasks while the Main thread waits for the tasks to complete using the static <xref:System.Threading.WaitHandle.WaitAny%2A> and <xref:System.Threading.WaitHandle.WaitAll%2A> methods of the <xref:System.Threading.WaitHandle> class.</span></span>  
  
 [!code-cpp[WaitHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/WaitHandle/cpp/WaitHandle.cpp#1)]
 [!code-csharp[WaitHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/WaitHandle/CS/WaitHandle.cs#1)]
 [!code-vb[WaitHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WaitHandle/VB/WaitHandle.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="2ebeb-134">Данный тип потокобезопасен.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ebeb-134">This type is thread safe.</span>
      </span>
    </threadsafe>
    <related type="Article" href="~/docs/standard/threading/index.md">
      <span data-ttu-id="2ebeb-135">Потоки</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ebeb-135">Threading</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/threading/threading-objects-and-features.md">
      <span data-ttu-id="2ebeb-136">Объекты и функциональные возможности работы с потоками</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ebeb-136">Threading Objects and Features</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/threading/mutexes.md">
      <span data-ttu-id="2ebeb-137">Mutexes</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ebeb-137">Mutexes</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/cd94fc34-ac15-427f-b723-a1240a4fab7d">
      <span data-ttu-id="2ebeb-138">EventWaitHandle, AutoResetEvent и ManualResetEvent</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ebeb-138">EventWaitHandle, AutoResetEvent, and ManualResetEvent</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md">
      <span data-ttu-id="2ebeb-139">Семафоры</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ebeb-139">Semaphores</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WaitHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ebeb-140">Инициализирует новый экземпляр класса <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-140">Initializes a new instance of the <see cref="T:System.Threading.WaitHandle" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="waitHandle.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ebeb-141">Освобождает все ресурсы, удерживаемые текущим объектом <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-141">Releases all resources held by the current <see cref="T:System.Threading.WaitHandle" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-142">Этот метод является открытую реализацию <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> метод <xref:System.Threading.WaitHandle> класса и его производных классов.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-142">This method is the public implementation of the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method for the <xref:System.Threading.WaitHandle> class and its derived classes.</span></span> <span data-ttu-id="2ebeb-143">Он предоставляет стандартную реализацию, которая вызывает `Dispose(Boolean)` перегрузка с `true` аргумент, а затем вызывает <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-143">It provides a standard implementation that calls the `Dispose(Boolean)` overload with a `true` argument and then calls the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2ebeb-144">Вызовите этот метод, чтобы освободить все ресурсы, удерживаемые экземпляром `WaitHandle` или производного класса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-144">Call this method to release all resources held by an instance of `WaitHandle` or a derived class.</span></span>  
  
 <span data-ttu-id="2ebeb-145">Когда этот метод вызывается, ссылки на текущий экземпляр привести к неопределенному поведению.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-145">Once this method is called, references to the current instance cause undefined behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ebeb-146">Всегда вызывайте метод <xref:System.Threading.WaitHandle.Close%2A> или <xref:System.Threading.WaitHandle.Dispose> перед освобождением последней ссылки на <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-146">Always call <xref:System.Threading.WaitHandle.Close%2A> or <xref:System.Threading.WaitHandle.Dispose> before you release your last reference to the <xref:System.Threading.WaitHandle>.</span></span> <span data-ttu-id="2ebeb-147">В противном случае им ресурсы не будут освобождены.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-147">Otherwise, the resources it is using will not be freed.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2ebeb-148">Необходимо переопределить <see langword="Dispose(Boolean)" /> метод для освобождения ресурсов, выделенных в производных классах.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2ebeb-148">You should override the <see langword="Dispose(Boolean)" /> method to release resources allocated in derived classes.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md">
          <span data-ttu-id="2ebeb-149">Реализация метода Dispose</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-149">Implementing a Dispose Method</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ebeb-150">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-150">Releases all resources used by the current instance of the <see cref="T:System.Threading.WaitHandle" /> class</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="waitHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ebeb-151">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-151">Releases all resources used by the current instance of the <see cref="T:System.Threading.WaitHandle" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-152">Этот метод эквивалентен <xref:System.Threading.WaitHandle.Close%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-152">This method is equivalent to the <xref:System.Threading.WaitHandle.Close%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ebeb-153">Всегда вызывайте метод <xref:System.Threading.WaitHandle.Close%2A> или <xref:System.Threading.WaitHandle.Dispose> перед освобождением последней ссылки на <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-153">Always call <xref:System.Threading.WaitHandle.Close%2A> or <xref:System.Threading.WaitHandle.Dispose> before you release your last reference to the <xref:System.Threading.WaitHandle>.</span></span> <span data-ttu-id="2ebeb-154">В противном случае им ресурсы не будут освобождены.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-154">Otherwise, the resources it is using will not be freed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md">
          <span data-ttu-id="2ebeb-155">Очистка неуправляемых ресурсов</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-155">Cleaning Up Unmanaged Resources</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool explicitDisposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool explicitDisposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (explicitDisposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool explicitDisposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="waitHandle.Dispose explicitDisposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="explicitDisposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="explicitDisposing">
          <span data-ttu-id="2ebeb-156">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-156">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-157">При переопределении в производном классе освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Threading.WaitHandle" />, и при необходимости освобождает управляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-157">When overridden in a derived class, releases the unmanaged resources used by the <see cref="T:System.Threading.WaitHandle" />, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-158">Этот метод вызывается <xref:System.Threading.WaitHandle.Close%2A> и <xref:System.Threading.WaitHandle.Dispose> методы с `explicitDisposing` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-158">This method is called by the <xref:System.Threading.WaitHandle.Close%2A> and the <xref:System.Threading.WaitHandle.Dispose> methods with the `explicitDisposing` parameter set to `true`.</span></span>  <span data-ttu-id="2ebeb-159">Когда `explicitDisposing` параметр `true`, этот метод освобождает все ресурсы, занятые любыми управляемыми объектами, <xref:System.Threading.WaitHandle> ссылки на объекты.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-159">When the `explicitDisposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Threading.WaitHandle> object references.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2ebeb-160">Необходимо переопределить <see cref="M:System.Threading.WaitHandle.Dispose(System.Boolean)" /> метод для освобождения ресурсов, выделенных в производных классах.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2ebeb-160">You should override the <see cref="M:System.Threading.WaitHandle.Dispose(System.Boolean)" /> method to release resources allocated in derived classes.</span>
            </span>
            <span data-ttu-id="2ebeb-161">
              <see cref="M:System.Threading.WaitHandle.Close" /> Или <see cref="M:System.Threading.WaitHandle.Dispose" /> метод может вызываться несколько раз другими объектами.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2ebeb-161">The <see cref="M:System.Threading.WaitHandle.Close" /> or <see cref="M:System.Threading.WaitHandle.Dispose" /> method can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="2ebeb-162">При переопределении этого метода нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами <see langword="Dispose" /> или <see langword="Close" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2ebeb-162">When overriding this method, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" /> or <see langword="Close" />.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md">
          <span data-ttu-id="2ebeb-163">Реализация метода Dispose</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-163">Implementing a Dispose Method</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WaitHandle ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="waitHandle.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ebeb-164">Освобождает ресурсы, удерживаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-164">Releases the resources held by the current instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="2ebeb-165">Этот элемент был удален из .NET Framework версии 2.0 и последующие версии.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-165">This member has been removed from the .NET Framework version 2.0 and subsequent versions.</span></span> <span data-ttu-id="2ebeb-166">Этот раздел относится только к версий, перечисленных в «Сведения о версии» далее в этом разделе.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-166">This topic applies only to the versions listed in "Version Information" later in this topic.</span></span>


<span data-ttu-id="2ebeb-167">Код приложения не вызывает этот метод; он автоматически вызывается во время сборки мусора, если завершение работы сборщика мусора была отключена.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-167">Application code does not call this method; it is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled.</span></span> <span data-ttu-id="2ebeb-168">Дополнительные сведения см. в разделах <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> и <xref:System.Object.Finalize>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-168">For more information, see <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> and <xref:System.Object.Finalize>.</span></span> <span data-ttu-id="2ebeb-169">Этот метод переопределяет метод <xref:System.Object.Finalize>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-169">This method overrides <xref:System.Object.Finalize>.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public virtual IntPtr Handle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.WaitHandle.Handle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Handle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint with get, set" Usage="System.Threading.WaitHandle.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Use the SafeWaitHandle property instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ebeb-170">Возвращает или задает собственный дескриптор операционной системы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-170">Gets or sets the native operating system handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ebeb-171">Объект <see langword="IntPtr" />, представляющий собственный дескриптор операционной системы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-171">An <see langword="IntPtr" /> representing the native operating system handle.</span>
          </span>
          <span data-ttu-id="2ebeb-172">Значением по умолчанию является значение поля <see cref="F:System.Threading.WaitHandle.InvalidHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-172">The default is the value of the <see cref="F:System.Threading.WaitHandle.InvalidHandle" /> field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-173">Назначение нового значения для <xref:System.Threading.WaitHandle.Handle%2A> свойства не закрывает дескриптор предыдущего.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-173">Assigning a new value to the <xref:System.Threading.WaitHandle.Handle%2A> property does not close the previous handle.</span></span> <span data-ttu-id="2ebeb-174">Это может привести утечка дескриптора.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-174">This can result in a leaked handle.</span></span>  
  
 <span data-ttu-id="2ebeb-175">Не используйте это свойство в .NET Framework версии 2.0 или более поздней версии; Используйте <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> свойство вместо этого.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-175">Do not use this property in the .NET Framework version 2.0 or later; use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property instead.</span></span> <span data-ttu-id="2ebeb-176">Этому свойству присвоить допустимый дескриптор также наборы <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> свойство, но задание значения <xref:System.Threading.WaitHandle.InvalidHandle> может привести к утечка дескриптора.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-176">Setting this property to a valid handle also sets the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property, but setting it to <xref:System.Threading.WaitHandle.InvalidHandle> can result in a leaked handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2ebeb-177">Требует полного доверия для непосредственного вызывающего объекта задать значение свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-177">Requires full trust for the immediate caller to set the property value.</span>
          </span>
          <span data-ttu-id="2ebeb-178">Этот член не может задать частично доверенном или прозрачном коде.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-178">This member cannot be set by partially trusted or transparent code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="2ebeb-179">Производные типы должны иметь <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> для задания значения свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-179">Derived types must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> to set the property value.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InvalidHandle">
      <MemberSignature Language="C#" Value="protected static readonly IntPtr InvalidHandle;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly native int InvalidHandle" />
      <MemberSignature Language="DocId" Value="F:System.Threading.WaitHandle.InvalidHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly InvalidHandle As IntPtr " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly IntPtr InvalidHandle;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvalidHandle : nativeint" Usage="System.Threading.WaitHandle.InvalidHandle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ebeb-180">Представляет недопустимый собственный дескриптор операционной системы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-180">Represents an invalid native operating system handle.</span>
          </span>
          <span data-ttu-id="2ebeb-181">Это поле доступно только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-181">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-182">Используется внутренним образом для инициализации <xref:System.Threading.WaitHandle.Handle%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-182">Used internally to initialize the <xref:System.Threading.WaitHandle.Handle%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2ebeb-183">Это значение можно использовать, чтобы определить, является ли <see cref="P:System.Threading.WaitHandle.Handle" /> свойство содержит допустимый собственный дескриптор операционной системы.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2ebeb-183">You can use this value to determine whether the <see cref="P:System.Threading.WaitHandle.Handle" /> property contains a valid native operating system handle.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SafeWaitHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeWaitHandle SafeWaitHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeWaitHandle SafeWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.WaitHandle.SafeWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property SafeWaitHandle As SafeWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeWaitHandle ^ SafeWaitHandle { Microsoft::Win32::SafeHandles::SafeWaitHandle ^ get(); void set(Microsoft::Win32::SafeHandles::SafeWaitHandle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SafeWaitHandle : Microsoft.Win32.SafeHandles.SafeWaitHandle with get, set" Usage="System.Threading.WaitHandle.SafeWaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>set: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeWaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ebeb-184">Возвращает или задает собственный дескриптор операционной системы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-184">Gets or sets the native operating system handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ebeb-185">Объект <see cref="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" />, представляющий собственный дескриптор операционной системы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-185">A <see cref="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" /> representing the native operating system handle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-186">При назначении нового значения для <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> свойство, предыдущих дескриптор закрывается при предыдущем <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> объект собран.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-186">When you assign a new value to the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property, the previous handle will be closed when the previous <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> object is collected.</span></span> <span data-ttu-id="2ebeb-187">Не следует вручную закрывать дескриптор, так как это приводит к <xref:System.ObjectDisposedException> при <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> предпринимается попытка закрыть дескриптор.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-187">Do not manually close the handle, because this results in an <xref:System.ObjectDisposedException> when the <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> attempts to close the handle.</span></span>  
  
 <span data-ttu-id="2ebeb-188"><xref:System.Threading.WaitHandle> реализует <xref:System.IDisposable.Dispose%2A> шаблон.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-188"><xref:System.Threading.WaitHandle> implements the <xref:System.IDisposable.Dispose%2A> pattern.</span></span> <span data-ttu-id="2ebeb-189">См. в разделе [шаблон удаления](~/docs/standard/design-guidelines/dispose-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-189">See [Dispose Pattern](~/docs/standard/design-guidelines/dispose-pattern.md).</span></span> <span data-ttu-id="2ebeb-190">При наследовании от <xref:System.Threading.WaitHandle>, используйте <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> свойство, чтобы сохранять маркер собственный дескриптор операционной системы.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-190">When you derive from <xref:System.Threading.WaitHandle>, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property to store your native handle operating system handle.</span></span> <span data-ttu-id="2ebeb-191">Необходимо переопределить защищенный <xref:System.Threading.WaitHandle.Dispose%2A> метод только при использовании дополнительных неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-191">You do not need to override the protected <xref:System.Threading.WaitHandle.Dispose%2A> method unless you use additional unmanaged resources.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2ebeb-192">Требует полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-192">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2ebeb-193">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-193">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="2ebeb-194">Производные типы должны иметь <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> для вызова этого члена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-194">Derived types must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> to call this member.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignalAndWait">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ebeb-195">Подает сигнал одному объекту <see cref="T:System.Threading.WaitHandle" /> и ожидает другого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-195">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="toSignal">
          <span data-ttu-id="2ebeb-196">Объект <see cref="T:System.Threading.WaitHandle" />, который получает сигнал.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-196">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span>
          </span>
        </param>
        <param name="toWaitOn">
          <span data-ttu-id="2ebeb-197">Объект <see cref="T:System.Threading.WaitHandle" />, сигнализация которого ожидается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-197">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-198">Подает сигнал одному объекту <see cref="T:System.Threading.WaitHandle" /> и ожидает другого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-198">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-199">Значение <see langword="true" />, если и сигнал, и ожидание завершаются удачно; если операция ожидания не завершается, то возврат из метода не происходит.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-199">
              <see langword="true" /> if both the signal and the wait complete successfully; if the wait does not complete, the method does not return.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-200">Эта операция не обязательно быть атомарными.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-200">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="2ebeb-201">После текущего потока сигналы `toSignal` , но до его ожидает `toWaitOn`, поток, на котором выполняется на другом процессоре может сигнализировать `toWaitOn` или ждать ее завершения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-201">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ebeb-202">В следующем примере кода используется <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> перегруженный метод, чтобы разрешить основному потоку сигнала заблокированный поток и затем подождите, пока поток завершает задачу.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-202">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="2ebeb-203">Пример начинается пять потоков, позволяет им блокировать на <xref:System.Threading.EventWaitHandle> созданные с помощью <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> флага, а затем времени одним потоком выпусков, пользователь нажимает клавишу ВВОД.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-203">The example starts five threads, allows them to block on an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag, and then releases one thread each time the user presses the ENTER key.</span></span> <span data-ttu-id="2ebeb-204">Затем ставит в очередь другой пять потоков и освобождает их все с помощью <xref:System.Threading.EventWaitHandle> созданные с помощью <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-204">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ebeb-205">Свойство <paramref name="toSignal" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-205">
              <paramref name="toSignal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-206">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-206">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-207">Свойство <paramref name="toWaitOn" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-207">
              <paramref name="toWaitOn" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2ebeb-208">Метод был вызван в потоке с атрибутом <see cref="T:System.STAThreadAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-208">The method was called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="2ebeb-209">Этот метод не поддерживается в Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-209">This method is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-210">Параметр <paramref name="toSignal" /> является семафором и его счетчик уже достиг максимального значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-210">
              <paramref name="toSignal" /> is a semaphore, and it already has a full count.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-211">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-211">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-212">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-212">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle, millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle * int * bool -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="toSignal">
          <span data-ttu-id="2ebeb-213">Объект <see cref="T:System.Threading.WaitHandle" />, который получает сигнал.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-213">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span>
          </span>
        </param>
        <param name="toWaitOn">
          <span data-ttu-id="2ebeb-214">Объект <see cref="T:System.Threading.WaitHandle" />, сигнализация которого ожидается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-214">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="2ebeb-215">Целое число, представляющее интервал ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-215">An integer that represents the interval to wait.</span>
          </span>
          <span data-ttu-id="2ebeb-216">Если значение равно <see cref="F:System.Threading.Timeout.Infinite" />, то есть -1, то ожидание длится неограниченное время.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-216">If the value is <see cref="F:System.Threading.Timeout.Infinite" />, that is, -1, the wait is infinite.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="2ebeb-217">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-217">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-218">Передает сигнал одному объекту <see cref="T:System.Threading.WaitHandle" /> и ожидает сигнализации другого, задавая время ожидания в виде 32-разрядного целого числа со знаком и указывая, следует ли выйти из домена синхронизации контекста до начала ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-218">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another, specifying a time-out interval as a 32-bit signed integer and specifying whether to exit the synchronization domain for the context before entering the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-219">Значение <see langword="true" />, если и передача сигнала, и ожидание завершились успешно; значение <see langword="false" />, если передача сигнала была выполнена, но время ожидания истекло.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-219">
              <see langword="true" /> if both the signal and the wait completed successfully, or <see langword="false" /> if the signal completed but the wait timed out.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-220">Эта операция не обязательно быть атомарными.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-220">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="2ebeb-221">После текущего потока сигналы `toSignal` , но до его ожидает `toWaitOn`, поток, на котором выполняется на другом процессоре может сигнализировать `toWaitOn` или ждать ее завершения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-221">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
 <span data-ttu-id="2ebeb-222">Если `millisecondsTimeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-222">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="2ebeb-223">Он проверяет состояние `toWaitOn` и сразу же.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-223">It tests the state of the `toWaitOn` and returns immediately.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="2ebeb-224">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="2ebeb-224">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="2ebeb-225">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.SignalAndWait%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-225">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="2ebeb-226">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-226">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="2ebeb-227">Даже если в настоящее время выполняется метод в классе, который является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-227">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="2ebeb-228">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.SignalAndWait%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-228">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method.</span></span> <span data-ttu-id="2ebeb-229">Поток возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.SignalAndWait%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-229">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method completes.</span></span>  
  
 <span data-ttu-id="2ebeb-230">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-230">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="2ebeb-231">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-231">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="2ebeb-232">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.SignalAndWait%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-232">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="2ebeb-233">Когда <xref:System.Threading.WaitHandle.SignalAndWait%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-233">When the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ebeb-234">Свойство <paramref name="toSignal" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-234">
              <paramref name="toSignal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-235">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-235">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-236">Свойство <paramref name="toWaitOn" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-236">
              <paramref name="toWaitOn" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2ebeb-237">Метод вызывается в потоке с атрибутом <see cref="T:System.STAThreadAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-237">The method is called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="2ebeb-238">Этот метод не поддерживается в Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-238">This method is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-239">Невозможно передать сигнал объекту <see cref="T:System.Threading.WaitHandle" />, поскольку его счетчик превысит максимальное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-239">The <see cref="T:System.Threading.WaitHandle" /> cannot be signaled because it would exceed its maximum count.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ebeb-240">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от –1, что означает бесконечное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-240">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-241">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-241">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-242">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-242">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle, timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle * TimeSpan * bool -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="toSignal">
          <span data-ttu-id="2ebeb-243">Объект <see cref="T:System.Threading.WaitHandle" />, который получает сигнал.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-243">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span>
          </span>
        </param>
        <param name="toWaitOn">
          <span data-ttu-id="2ebeb-244">Объект <see cref="T:System.Threading.WaitHandle" />, сигнализация которого ожидается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-244">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="2ebeb-245">Объект <see cref="T:System.TimeSpan" />, представляющий период ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-245">A <see cref="T:System.TimeSpan" /> that represents the interval to wait.</span>
          </span>
          <span data-ttu-id="2ebeb-246">Если значение равно -1, то ожидание выполняется неограниченное время.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-246">If the value is -1, the wait is infinite.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="2ebeb-247">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-247">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-248">Передает сигнал одному объекту <see cref="T:System.Threading.WaitHandle" /> и ожидает сигнализации другого, задавая время ожидания в виде <see cref="T:System.TimeSpan" /> и указывая, следует ли выйти из домена синхронизации контекста до начала ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-248">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another, specifying the time-out interval as a <see cref="T:System.TimeSpan" /> and specifying whether to exit the synchronization domain for the context before entering the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-249">Значение <see langword="true" />, если и передача сигнала, и ожидание завершились успешно; значение <see langword="false" />, если передача сигнала была выполнена, но время ожидания истекло.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-249">
              <see langword="true" /> if both the signal and the wait completed successfully, or <see langword="false" /> if the signal completed but the wait timed out.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-250">Эта операция не обязательно быть атомарными.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-250">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="2ebeb-251">После текущего потока сигналы `toSignal` , но до его ожидает `toWaitOn`, поток, на котором выполняется на другом процессоре может сигнализировать `toWaitOn` или ждать ее завершения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-251">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
 <span data-ttu-id="2ebeb-252">Максимальное значение для `timeout` является <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-252">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2ebeb-253">Если `timeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-253">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="2ebeb-254">Он проверяет состояние `toWaitOn` и сразу же.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-254">It tests the state of the `toWaitOn` and returns immediately.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="2ebeb-255">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="2ebeb-255">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="2ebeb-256">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.SignalAndWait%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-256">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="2ebeb-257">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-257">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="2ebeb-258">Даже если в настоящее время выполняется метод в классе, который является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-258">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="2ebeb-259">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.SignalAndWait%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-259">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method.</span></span> <span data-ttu-id="2ebeb-260">Поток возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.SignalAndWait%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-260">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method completes.</span></span>  
  
 <span data-ttu-id="2ebeb-261">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-261">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="2ebeb-262">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-262">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="2ebeb-263">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.SignalAndWait%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-263">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="2ebeb-264">Когда <xref:System.Threading.WaitHandle.SignalAndWait%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-264">When the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ebeb-265">Свойство <paramref name="toSignal" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-265">
              <paramref name="toSignal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-266">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-266">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-267">Свойство <paramref name="toWaitOn" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-267">
              <paramref name="toWaitOn" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2ebeb-268">Метод был вызван в потоке с атрибутом <see cref="T:System.STAThreadAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-268">The method was called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="2ebeb-269">Этот метод не поддерживается в Windows 98 и Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-269">This method is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-270">Параметр <paramref name="toSignal" /> является семафором и его счетчик уже достиг максимального значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-270">
              <paramref name="toSignal" /> is a semaphore, and it already has a full count.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ebeb-271">Значение параметра <paramref name="timeout" /> соответствует отрицательному числу, отличному от -1 миллисекунды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-271">
              <paramref name="timeout" /> evaluates to a negative number of milliseconds other than -1.</span>
          </span>
          <span data-ttu-id="2ebeb-272">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-272">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-273">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-273">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-274">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-274">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-275">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-275">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ebeb-276">Освобождает все ресурсы, занятые модулем <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-276">Releases all resources used by the <see cref="T:System.Threading.WaitHandle" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="2ebeb-277">Вызов `Dispose` позволяет ресурсы, используемые <xref:System.Threading.WaitHandle> перераспределить для других целей.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-277">Calling `Dispose` allows the resources used by the <xref:System.Threading.WaitHandle> to be reallocated for other purposes.</span></span> <span data-ttu-id="2ebeb-278">Дополнительные сведения о `Dispose`, см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-278">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitAll">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ebeb-279">Ожидает получения сигнала всеми элементами заданного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-279">Waits for all the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll waitHandles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="2ebeb-280">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-280">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="2ebeb-281">Этот массив не может содержать несколько ссылок на один и тот же объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-281">This array cannot contain multiple references to the same object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-282">Ожидает получения сигнала всеми элементами заданного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-282">Waits for all the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-283">
            <see langword="true" />, когда каждый элемент <paramref name="waitHandles" /> получил сигнал. В противном случае возврат из метода не происходит.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-283">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise the method never returns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-284"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-284"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2ebeb-285">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitAll%2A> возвращает метод `true` когда прерывается мьютекс.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-285">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="2ebeb-286">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-286">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="2ebeb-287">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-287">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="2ebeb-288">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-288">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="2ebeb-289"><xref:System.Threading.WaitHandle.WaitAll%2A> Метод возвращает при получении сигнала всех дескрипторов.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-289">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when all the handles are signaled.</span></span> <span data-ttu-id="2ebeb-290">В некоторых реализациях, если передано более 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-290">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="2ebeb-291">Если массив содержит дубликаты, вызов завершится сбоем с <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-291">If the array contains duplicates, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ebeb-292"><xref:System.Threading.WaitHandle.WaitAll%2A> Метод не поддерживается в потоках, которые имеют <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-292">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="2ebeb-293">Вызов перегрузки этого метода эквивалентен вызову <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> перегрузку метода и указав значение -1 (или <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) для `millisecondsTimeout` и `true` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-293">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> method overload and specifying -1 (or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) for `millisecondsTimeout` and `true` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ebeb-294">В следующем примере кода показано, как использовать пул потоков для асинхронного создания и записи для группы файлов.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-294">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="2ebeb-295">Каждой операции записи помещается в очередь рабочий элемент и сигналов, при его завершении.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-295">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="2ebeb-296">Основной поток ожидает сигнала все элементы, а затем завершается.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-296">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/CPP/source1.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/CS/source1.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/VB/source1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ebeb-297">Параметр <paramref name="waitHandles" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-297">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-298">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-298">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-299">Один или несколько объектов массива <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-299">One or more of the objects in the <paramref name="waitHandles" /> array are <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-300">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-300">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-301">Массив <paramref name="waitHandles" /> не содержит элементов, и используется платформа .NET Framework версии 2.0 или более поздней.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-301">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="2ebeb-302">Вместо этого в <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET для приложений Магазина Windows</see> или в <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">переносимой библиотеке классов</see> перехватите исключение базового класса <see cref="T:System.ArgumentException" />.</span>
              <span class="sxs-lookup">
                <span data-stu-id="2ebeb-302">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="2ebeb-303">Массив <paramref name="waitHandles" /> содержит повторяющиеся элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-303">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2ebeb-304">Массив <paramref name="waitHandles" /> содержит больше объектов, чем разрешено системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-304">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="2ebeb-305">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-305">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-306">Атрибут <see cref="T:System.STAThreadAttribute" /> применяется к процедуре потока для текущего потока, а массив <paramref name="waitHandles" /> содержит более одного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-306">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="2ebeb-307">Массив <paramref name="waitHandles" /> не содержит элементов, и используется платформа .NET Framework версии 1.0 или 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-307">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-308">Ожидание прервано, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-308">The wait terminated because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-309">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-309">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-310">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для элемента <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-310">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * int -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="2ebeb-311">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-311">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="2ebeb-312">Данный массив не может содержать несколько ссылок на один и тот же объект (дубликатов).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-312">This array cannot contain multiple references to the same object (duplicates).</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="2ebeb-313">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-313">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-314">Ожидает получения сигнала всеми элементами заданного массива, используя значение <see cref="T:System.Int32" /> для указания интервала времени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-314">Waits for all the elements in the specified array to receive a signal, using an <see cref="T:System.Int32" /> value to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-315">Значение <see langword="true" />, если каждый элемент массива <paramref name="waitHandles" /> получил сигнал; в противном случае значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-315">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-316">Если `millisecondsTimeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-316">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="2ebeb-317">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-317">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="2ebeb-318"><xref:System.Threading.WaitHandle.WaitAll%2A> Возвращает метод, если ожидание завершается, что означает либо при получении сигнала всех дескрипторов ожидания.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-318">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either when all the handles are signaled or when time-out occurs.</span></span> <span data-ttu-id="2ebeb-319">В некоторых реализациях, если передано более 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-319">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="2ebeb-320">Если есть повторяющиеся значения в массиве, вызов завершится сбоем с <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-320">If there are duplicates in the array, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ebeb-321"><xref:System.Threading.WaitHandle.WaitAll%2A> Метод не поддерживается в потоках, которые имеют <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-321">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="2ebeb-322">Вызов перегрузки этого метода равносилен вызову метода является <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> перегрузки и указав `false` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-322">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ebeb-323">Параметр <paramref name="waitHandles" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-323">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-324">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-324">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-325">Один или несколько объектов массива <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-325">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-326">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-326">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-327">В массиве <paramref name="waitHandles" /> отсутствуют элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-327">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="2ebeb-328">Вместо этого в <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET для приложений Магазина Windows</see> или в <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">переносимой библиотеке классов</see> перехватите исключение базового класса <see cref="T:System.ArgumentException" />.</span>
              <span class="sxs-lookup">
                <span data-stu-id="2ebeb-328">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="2ebeb-329">Массив <paramref name="waitHandles" /> содержит повторяющиеся элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-329">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2ebeb-330">Массив <paramref name="waitHandles" /> содержит больше объектов, чем разрешено системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-330">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="2ebeb-331">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-331">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-332">Атрибут <see cref="T:System.STAThreadAttribute" /> применяется к процедуре потока для текущего потока, а массив <paramref name="waitHandles" /> содержит более одного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-332">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ebeb-333">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от –1, что означает бесконечное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-333">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-334">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-334">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-335">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-335">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-336">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для элемента <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-336">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * TimeSpan -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="2ebeb-337">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-337">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="2ebeb-338">Этот массив не может содержать несколько ссылок на один и тот же объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-338">This array cannot contain multiple references to the same object.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="2ebeb-339">Объект <see cref="T:System.TimeSpan" />, представляющий время ожидания в миллисекундах, или объект <see cref="T:System.TimeSpan" />, представляющий -1 миллисекунду для неограниченного ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-339">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds, to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-340">Ожидает получения сигнала всеми элементами заданного массива, используя значение <see cref="T:System.TimeSpan" /> для указания интервала времени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-340">Waits for all the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> value to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-341">Значение <see langword="true" />, если каждый элемент массива <paramref name="waitHandles" /> получил сигнал; в противном случае значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-341">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-342">Если `timeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-342">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="2ebeb-343">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-343">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="2ebeb-344"><xref:System.Threading.WaitHandle.WaitAll%2A> Возвращает метод, если ожидание завершается, что означает, что или все дескрипторы получили сигнал или истечения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-344">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either all the handles are signaled or a time-out occurs.</span></span> <span data-ttu-id="2ebeb-345">В некоторых реализациях, если передано более 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-345">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="2ebeb-346">Если массив содержит дубликаты, вызов завершится ошибкой.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-346">If the array contains duplicates, the call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ebeb-347"><xref:System.Threading.WaitHandle.WaitAll%2A> Метод не поддерживается в потоках, которые имеют <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-347">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="2ebeb-348">Максимальное значение для `timeout` является <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-348">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2ebeb-349">Вызов перегрузки этого метода равносилен вызову метода является <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> перегрузки и указав `false` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-349">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ebeb-350">Параметр <paramref name="waitHandles" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-350">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-351">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-351">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-352">Один или несколько объектов массива <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-352">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-353">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-353">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-354">В массиве <paramref name="waitHandles" /> отсутствуют элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-354">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="2ebeb-355">Вместо этого в <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET для приложений Магазина Windows</see> или в <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">переносимой библиотеке классов</see> перехватите исключение базового класса <see cref="T:System.ArgumentException" />.</span>
              <span class="sxs-lookup">
                <span data-stu-id="2ebeb-355">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="2ebeb-356">Массив <paramref name="waitHandles" /> содержит повторяющиеся элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-356">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2ebeb-357">Массив <paramref name="waitHandles" /> содержит больше объектов, чем разрешено системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-357">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="2ebeb-358">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-358">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-359">Атрибут <see cref="T:System.STAThreadAttribute" /> применяется к процедуре потока для текущего потока, а массив <paramref name="waitHandles" /> содержит более одного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-359">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ebeb-360">
            <paramref name="timeout" /> является отрицательным числом, отличным от -1 миллисекунды, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-360">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="2ebeb-361">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-361">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-362">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-362">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-363">Ожидание прервано, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-363">The wait terminated because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-364">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-364">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-365">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для элемента <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-365">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * int * bool -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="2ebeb-366">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-366">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="2ebeb-367">Данный массив не может содержать несколько ссылок на один и тот же объект (дубликатов).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-367">This array cannot contain multiple references to the same object (duplicates).</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="2ebeb-368">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-368">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="2ebeb-369">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-369">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-370">Ожидает получения сигнала всеми элементами заданного массива, используя значение типа <see cref="T:System.Int32" /> для задания интервала времени и указывая, следует ли выйти из домена синхронизации до начала ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-370">Waits for all the elements in the specified array to receive a signal, using an <see cref="T:System.Int32" /> value to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-371">Значение <see langword="true" />, если каждый элемент массива <paramref name="waitHandles" /> получил сигнал; в противном случае значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-371">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-372">Если `millisecondsTimeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-372">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="2ebeb-373">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-373">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="2ebeb-374"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-374"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2ebeb-375">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitAll%2A> возвращает метод `true` когда прерывается мьютекс.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-375">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="2ebeb-376">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-376">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="2ebeb-377">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-377">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="2ebeb-378">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-378">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="2ebeb-379"><xref:System.Threading.WaitHandle.WaitAll%2A> Возвращает метод, если ожидание завершается, что означает либо при получении сигнала всех дескрипторов ожидания.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-379">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either when all the handles are signaled or when time-out occurs.</span></span> <span data-ttu-id="2ebeb-380">В некоторых реализациях, если передано более 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-380">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="2ebeb-381">Если есть повторяющиеся значения в массиве, вызов завершится сбоем с <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-381">If there are duplicates in the array, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ebeb-382"><xref:System.Threading.WaitHandle.WaitAll%2A> Метод не поддерживается в потоках, которые имеют <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-382">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="2ebeb-383">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="2ebeb-383">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="2ebeb-384">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.WaitAll%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-384">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAll%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="2ebeb-385">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-385">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="2ebeb-386">Даже если в настоящее время выполняется метод в классе, который не является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-386">Even if you are currently executing a method on a class that is not derived from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="2ebeb-387">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.WaitAll%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-387">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAll%2A> method.</span></span> <span data-ttu-id="2ebeb-388">Поток возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.WaitAll%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-388">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAll%2A> method completes.</span></span>  
  
 <span data-ttu-id="2ebeb-389">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute> атрибута.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-389">This can be useful when the context-bound class has the <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute> attribute.</span></span> <span data-ttu-id="2ebeb-390">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-390">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="2ebeb-391">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.WaitAll%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-391">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAll%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="2ebeb-392">Когда <xref:System.Threading.WaitHandle.WaitAll%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-392">When the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ebeb-393">В следующем примере кода показано, как использовать пул потоков для асинхронного создания и записи для группы файлов.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-393">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="2ebeb-394">Каждой операции записи помещается в очередь рабочий элемент и сигналов, при его завершении.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-394">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="2ebeb-395">Основной поток ожидает сигнала все элементы, а затем завершается.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-395">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ebeb-396">Параметр <paramref name="waitHandles" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-396">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-397">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-397">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-398">Один или несколько объектов массива <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-398">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-399">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-399">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-400">Массив <paramref name="waitHandles" /> не содержит элементов, и используется платформа .NET Framework версии 2.0 или более поздней.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-400">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="2ebeb-401">Массив <paramref name="waitHandles" /> содержит повторяющиеся элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-401">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2ebeb-402">Массив <paramref name="waitHandles" /> содержит больше объектов, чем разрешено системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-402">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="2ebeb-403">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-403">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-404">Атрибут <see cref="T:System.STAThreadAttribute" /> применяется к процедуре потока для текущего потока, а массив <paramref name="waitHandles" /> содержит более одного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-404">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="2ebeb-405">Массив <paramref name="waitHandles" /> не содержит элементов, и используется платформа .NET Framework версии 1.0 или 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-405">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ebeb-406">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от –1, что означает бесконечное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-406">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-407">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-407">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-408">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-408">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-409">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для элемента <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-409">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * TimeSpan * bool -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="2ebeb-410">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-410">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
          <span data-ttu-id="2ebeb-411">Этот массив не может содержать несколько ссылок на один и тот же объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-411">This array cannot contain multiple references to the same object.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="2ebeb-412">Объект <see cref="T:System.TimeSpan" />, представляющий время ожидания в миллисекундах, или объект <see cref="T:System.TimeSpan" />, представляющий -1 миллисекунду для неограниченного ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-412">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds, to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="2ebeb-413">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-413">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-414">Ожидает получения сигнала всеми элементами заданного массива, используя значение типа <see cref="T:System.TimeSpan" /> для задания интервала времени и указывая, следует ли выйти из домена синхронизации до начала ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-414">Waits for all the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> value to specify the time interval, and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-415">Значение <see langword="true" />, когда каждый элемент массива <paramref name="waitHandles" /> получил сигнал; иначе — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-415">
              <see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-416">Если `timeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-416">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="2ebeb-417">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-417">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="2ebeb-418"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-418"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2ebeb-419">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitAll%2A> возвращает метод `true` когда прерывается мьютекс.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-419">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="2ebeb-420">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-420">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="2ebeb-421">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-421">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="2ebeb-422">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-422">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="2ebeb-423"><xref:System.Threading.WaitHandle.WaitAll%2A> Возвращает метод, если ожидание завершается, что означает, что или все дескрипторы получили сигнал или истечения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-423">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either all the handles are signaled or a time-out occurs.</span></span> <span data-ttu-id="2ebeb-424">В некоторых реализациях, если передано более 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-424">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="2ebeb-425">Если массив содержит дубликаты, вызов завершится ошибкой.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-425">If the array contains duplicates, the call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ebeb-426"><xref:System.Threading.WaitHandle.WaitAll%2A> Метод не поддерживается в потоках, которые имеют <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-426">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="2ebeb-427">Максимальное значение для `timeout` является <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-427">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="2ebeb-428">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="2ebeb-428">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="2ebeb-429">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.WaitAll%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-429">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAll%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="2ebeb-430">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-430">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="2ebeb-431">Даже если в настоящее время выполняется метод в классе, который не является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-431">Even if you are currently executing a method on a class that is not derived from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="2ebeb-432">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.WaitAll%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-432">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAll%2A> method.</span></span> <span data-ttu-id="2ebeb-433">Возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.WaitAll%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-433">It returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAll%2A> method completes.</span></span>  
  
 <span data-ttu-id="2ebeb-434">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-434">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="2ebeb-435">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-435">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="2ebeb-436">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.WaitAll%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-436">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAll%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="2ebeb-437">Когда <xref:System.Threading.WaitHandle.WaitAll%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-437">When the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ebeb-438">В следующем примере кода показано, как использовать пул потоков для асинхронного создания и записи для группы файлов.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-438">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="2ebeb-439">Каждой операции записи помещается в очередь рабочий элемент и сигналов, при его завершении.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-439">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="2ebeb-440">Основной поток ожидает сигнала все элементы, а затем завершается.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-440">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ebeb-441">Параметр <paramref name="waitHandles" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-441">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-442">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-442">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-443">Один или несколько объектов массива <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-443">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-444">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-444">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-445">Массив <paramref name="waitHandles" /> не содержит элементов, и используется платформа .NET Framework версии 2.0 или более поздней.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-445">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.DuplicateWaitObjectException">
          <span data-ttu-id="2ebeb-446">Массив <paramref name="waitHandles" /> содержит повторяющиеся элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-446">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2ebeb-447">Массив <paramref name="waitHandles" /> содержит больше объектов, чем разрешено системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-447">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
          <span data-ttu-id="2ebeb-448">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-448">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-449">Атрибут <see cref="T:System.STAThreadAttribute" /> применяется к процедуре потока для текущего потока, а массив <paramref name="waitHandles" /> содержит более одного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-449">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="2ebeb-450">Массив <paramref name="waitHandles" /> не содержит элементов, и используется платформа .NET Framework версии 1.0 или 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-450">
              <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ebeb-451">
            <paramref name="timeout" /> является отрицательным числом, отличным от -1 миллисекунды, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-451">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="2ebeb-452">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-452">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-453">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-453">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-454">Ожидание прервано, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-454">The wait terminated because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-455">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-455">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-456">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для элемента <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-456">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitAny">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ebeb-457">Ожидает получения сигнала какими-либо элементами заданного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-457">Waits for any of the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] -&gt; int" Usage="System.Threading.WaitHandle.WaitAny waitHandles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="2ebeb-458">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-458">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-459">Ожидает получения сигнала какими-либо элементами заданного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-459">Waits for any of the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-460">Индекс объекта, удовлетворившего операцию ожидания, в массиве.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-460">The array index of the object that satisfied the wait.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-461"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-461"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2ebeb-462">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitAny%2A> возвращает метод `true` Если ожидание завершается, так как мьютекс завершается.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-462">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="2ebeb-463">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-463">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="2ebeb-464">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-464">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="2ebeb-465">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-465">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="2ebeb-466"><xref:System.Threading.WaitHandle.WaitAny%2A> Вызывает метод <xref:System.Threading.AbandonedMutexException> только тогда, когда ожидание завершается из-за брошенного мьютекса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-466">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="2ebeb-467">Если `waitHandles` содержит выпущенные мьютекс с меньшим количеством индекса, чем Брошенный мьютекс, <xref:System.Threading.WaitHandle.WaitAny%2A> метод завершается нормально, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-467">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ebeb-468">В версиях .NET Framework до версии 2.0, если поток завершает работу или прерывает без явно освобождая <xref:System.Threading.Mutex>и что `Mutex` имеет индекс 0 (ноль) в `WaitAny` массива в другом потоке, индекс, возвращенный `WaitAny` — 128 вместо 0.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-468">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="2ebeb-469">Этот метод возвращает при любой дескриптор получает сигнал.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-469">This method returns when any handle is signaled.</span></span> <span data-ttu-id="2ebeb-470">Если во время вызова оповещенным более одного объекта, возвращается индекс массива объект получил сигнал с наименьшим значением индекса сигнальное объектов.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-470">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="2ebeb-471">В некоторых реализациях, если сведения, которые передаются 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-471">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="2ebeb-472">Вызов перегрузки этого метода эквивалентен вызову <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> перегрузку метода и указав значение -1 (или <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) для `millisecondsTimeout` и `true` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-472">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> method overload and specifying -1 (or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) for `millisecondsTimeout` and `true` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ebeb-473">В следующем примере кода показан вызов <xref:System.Threading.WaitHandle.WaitAny%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-473">The following code example demonstrates calling the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span>  
  
 [!code-cpp[WaitHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/WaitHandle/cpp/WaitHandle.cpp#1)]
 [!code-csharp[WaitHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/WaitHandle/CS/WaitHandle.cs#1)]
 [!code-vb[WaitHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WaitHandle/VB/WaitHandle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ebeb-474">Параметр <paramref name="waitHandles" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-474">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-475">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-475">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-476">Один или несколько объектов массива <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-476">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2ebeb-477">Массив <paramref name="waitHandles" /> содержит больше объектов, чем разрешено системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-477">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="2ebeb-478">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 1.0 или 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-478">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-479">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-479">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-480">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-480">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ebeb-481">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 2.0 или выше.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-481">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-482">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для элемента <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-482">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * int -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="2ebeb-483">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-483">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="2ebeb-484">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-484">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-485">Ожидает получения сигнала любыми элементами указанного массива, используя 32-разрядное целое число со знаком для задания интервала времени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-485">Waits for any of the elements in the specified array to receive a signal, using a 32-bit signed integer to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-486">Индекс объекта в массиве, удовлетворившего условиям ожидания, или значение <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, если ни один из объектов не удовлетворил условиям ожидания и истек интервал времени, равный <paramref name="millisecondsTimeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-486">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="millisecondsTimeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-487">Если `millisecondsTimeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-487">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="2ebeb-488">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-488">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="2ebeb-489"><xref:System.Threading.WaitHandle.WaitAny%2A> Вызывает метод <xref:System.Threading.AbandonedMutexException> только тогда, когда ожидание завершается из-за брошенного мьютекса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-489">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="2ebeb-490">Если `waitHandles` содержит выпущенные мьютекс с меньшим количеством индекса, чем Брошенный мьютекс, <xref:System.Threading.WaitHandle.WaitAny%2A> метод завершается нормально, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-490">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
 <span data-ttu-id="2ebeb-491">Этот метод возвращает, если ожидание завершается, когда все дескрипторы получили сигнал или истечении времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-491">This method returns when the wait terminates, either when any of the handles are signaled or when a timeout occurs.</span></span> <span data-ttu-id="2ebeb-492">Если во время вызова оповещенным более одного объекта, возвращается индекс массива объект получил сигнал с наименьшим значением индекса сигнальное объектов.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-492">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="2ebeb-493">В некоторых реализациях, если сведения, которые передаются 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-493">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="2ebeb-494">Вызов перегрузки этого метода равносилен вызову метода является <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> перегрузки и указав `false` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-494">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ebeb-495">Параметр <paramref name="waitHandles" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-495">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-496">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-496">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-497">Один или несколько объектов массива <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-497">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2ebeb-498">Массив <paramref name="waitHandles" /> содержит больше объектов, чем разрешено системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-498">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ebeb-499">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от –1, что означает бесконечное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-499">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-500">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-500">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-501">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-501">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ebeb-502">В массиве <paramref name="waitHandles" /> отсутствуют элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-502">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-503">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для элемента <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-503">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), timeout As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * TimeSpan -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="2ebeb-504">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-504">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="2ebeb-505">Период <see cref="T:System.TimeSpan" />, представляющий время ожидания в миллисекундах, или период <see cref="T:System.TimeSpan" />, представляющий -1 миллисекунду для неограниченного ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-505">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-506">Ожидает получения сигнала любыми элементами заданного массива, используя значение типа <see cref="T:System.TimeSpan" /> для указания интервала времени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-506">Waits for any of the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-507">Индекс объекта в массиве, удовлетворившего условиям ожидания, или значение <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, если ни один из объектов не удовлетворил условиям ожидания и истек интервал времени, равный <paramref name="timeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-507">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="timeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-508">Если `timeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-508">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="2ebeb-509">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-509">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="2ebeb-510"><xref:System.Threading.WaitHandle.WaitAny%2A> Вызывает метод <xref:System.Threading.AbandonedMutexException> только тогда, когда ожидание завершается из-за брошенного мьютекса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-510">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="2ebeb-511">Если `waitHandles` содержит выпущенные мьютекс с меньшим количеством индекса, чем Брошенный мьютекс, <xref:System.Threading.WaitHandle.WaitAny%2A> метод завершается нормально, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-511">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
 <span data-ttu-id="2ebeb-512">Этот метод возвращает, если ожидание завершается, когда все дескрипторы получили сигнал или при возникновении тайм-аута.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-512">This method returns when the wait terminates, either when any of the handles are signaled or when a time-out occurs.</span></span> <span data-ttu-id="2ebeb-513">Если во время вызова оповещенным более одного объекта, возвращается индекс массива объект получил сигнал с наименьшим значением индекса сигнальное объектов.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-513">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="2ebeb-514">В некоторых реализациях, если сведения, которые передаются 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-514">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="2ebeb-515">Максимальное значение для `timeout` является <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-515">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2ebeb-516">Вызов перегрузки этого метода равносилен вызову метода является <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> перегрузки и указав `false` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-516">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ebeb-517">Параметр <paramref name="waitHandles" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-517">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-518">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-518">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-519">Один или несколько объектов массива <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-519">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2ebeb-520">Массив <paramref name="waitHandles" /> содержит больше объектов, чем разрешено системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-520">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ebeb-521">
            <paramref name="timeout" /> является отрицательным числом, отличным от -1 миллисекунды, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-521">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="2ebeb-522">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-522">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-523">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-523">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-524">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-524">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-525">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-525">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ebeb-526">В массиве <paramref name="waitHandles" /> отсутствуют элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-526">
              <paramref name="waitHandles" /> is an array with no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-527">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для элемента <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-527">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), millisecondsTimeout As Integer, exitContext As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * int * bool -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="2ebeb-528">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-528">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="2ebeb-529">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-529">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="2ebeb-530">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-530">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-531">Ожидает, пока какой-либо из элементов заданного массива не получит сигнал, используя 32-разрядное целое число со знаком для задания интервала времени и определения, нужно ли осуществить выход из домена синхронизации до окончания ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-531">Waits for any of the elements in the specified array to receive a signal, using a 32-bit signed integer to specify the time interval, and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-532">Индекс объекта в массиве, удовлетворившего условиям ожидания, или значение <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, если ни один из объектов не удовлетворил условиям ожидания и истек интервал времени, равный <paramref name="millisecondsTimeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-532">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="millisecondsTimeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-533">Если `millisecondsTimeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-533">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="2ebeb-534">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-534">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="2ebeb-535"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-535"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2ebeb-536">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitAny%2A> возвращает метод `true` Если ожидание завершается, так как мьютекс завершается.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-536">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="2ebeb-537">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-537">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="2ebeb-538">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-538">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="2ebeb-539">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-539">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="2ebeb-540"><xref:System.Threading.WaitHandle.WaitAny%2A> Вызывает метод <xref:System.Threading.AbandonedMutexException> только тогда, когда ожидание завершается из-за брошенного мьютекса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-540">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="2ebeb-541">Если `waitHandles` содержит выпущенные мьютекс с меньшим количеством индекса, чем Брошенный мьютекс, <xref:System.Threading.WaitHandle.WaitAny%2A> метод завершается нормально, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-541">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ebeb-542">В версиях .NET Framework до версии 2.0, если поток завершает работу или прерывает без явно освобождая <xref:System.Threading.Mutex>и что `Mutex` имеет индекс 0 (ноль) в `WaitAny` массива в другом потоке, индекс, возвращенный `WaitAny` — 128 вместо 0.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-542">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="2ebeb-543">Этот метод возвращает, если ожидание завершается, когда все дескрипторы получили сигнал или истечении времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-543">This method returns when the wait terminates, either when any of the handles are signaled or when a timeout occurs.</span></span> <span data-ttu-id="2ebeb-544">Если во время вызова оповещенным более одного объекта, возвращается индекс массива объект получил сигнал с наименьшим значением индекса сигнальное объектов.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-544">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="2ebeb-545">В некоторых реализациях, если сведения, которые передаются 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-545">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="2ebeb-546">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="2ebeb-546">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="2ebeb-547">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.WaitAny%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-547">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAny%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="2ebeb-548">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-548">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="2ebeb-549">Даже если в настоящее время выполняется метод в классе, который является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-549">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="2ebeb-550">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.WaitAny%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-550">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span> <span data-ttu-id="2ebeb-551">Поток возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.WaitAny%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-551">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes.</span></span>  
  
 <span data-ttu-id="2ebeb-552">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-552">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="2ebeb-553">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-553">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="2ebeb-554">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.WaitAny%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-554">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAny%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="2ebeb-555">Когда <xref:System.Threading.WaitHandle.WaitAny%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-555">When the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ebeb-556">В следующем примере кода показано, как использовать пул потоков для поиска файла на несколько дисков одновременно.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-556">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="2ebeb-557">Для краткости выполнялся поиск только в корневом каталоге каждого диска.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-557">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ebeb-558">Параметр <paramref name="waitHandles" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-558">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-559">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-559">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-560">Один или несколько объектов массива <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-560">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2ebeb-561">Массив <paramref name="waitHandles" /> содержит больше объектов, чем разрешено системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-561">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="2ebeb-562">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 1.0 или 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-562">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ebeb-563">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от –1, что означает бесконечное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-563">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-564">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-564">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-565">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-565">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ebeb-566">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 2.0 или выше.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-566">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-567">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для элемента <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-567">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), timeout As TimeSpan, exitContext As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * TimeSpan * bool -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="2ebeb-568">Массив <see langword="WaitHandle" />, содержащий объекты, ожидаемые текущим экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-568">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="2ebeb-569">Период <see cref="T:System.TimeSpan" />, представляющий время ожидания в миллисекундах, или период <see cref="T:System.TimeSpan" />, представляющий -1 миллисекунду для неограниченного ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-569">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="2ebeb-570">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-570">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-571">Ожидает получения сигнала какими-либо элементами заданного массива, используя <see cref="T:System.TimeSpan" /> для задания интервала времени и указывая, следует ли выйти из домена синхронизации до начала ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-571">Waits for any of the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-572">Индекс объекта в массиве, удовлетворившего условиям ожидания, или значение <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, если ни один из объектов не удовлетворил условиям ожидания и истек интервал времени, равный <paramref name="timeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-572">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="timeout" /> has passed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-573">Если `timeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-573">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="2ebeb-574">Он проверяет состояние дескрипторов ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-574">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="2ebeb-575"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-575"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2ebeb-576">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitAny%2A> возвращает метод `true` Если ожидание завершается, так как мьютекс завершается.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-576">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="2ebeb-577">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-577">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="2ebeb-578">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-578">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="2ebeb-579">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-579">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="2ebeb-580"><xref:System.Threading.WaitHandle.WaitAny%2A> Вызывает метод <xref:System.Threading.AbandonedMutexException> только тогда, когда ожидание завершается из-за брошенного мьютекса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-580">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="2ebeb-581">Если `waitHandles` содержит выпущенные мьютекс с меньшим количеством индекса, чем Брошенный мьютекс, <xref:System.Threading.WaitHandle.WaitAny%2A> метод завершается нормально, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-581">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ebeb-582">В версиях .NET Framework до версии 2.0, если поток завершает работу или прерывает без явно освобождая <xref:System.Threading.Mutex>и что `Mutex` имеет индекс 0 (ноль) в `WaitAny` массива в другом потоке, индекс, возвращенный `WaitAny` — 128 вместо 0.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-582">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="2ebeb-583">Этот метод возвращает, если ожидание завершается, когда все дескрипторы получили сигнал или при возникновении тайм-аута.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-583">This method returns when the wait terminates, either when any of the handles are signaled or when a time-out occurs.</span></span> <span data-ttu-id="2ebeb-584">Если во время вызова оповещенным более одного объекта, возвращается индекс массива объект получил сигнал с наименьшим значением индекса сигнальное объектов.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-584">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="2ebeb-585">В некоторых реализациях, если сведения, которые передаются 64 дескрипторов <xref:System.NotSupportedException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-585">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="2ebeb-586">Максимальное значение для `timeout` является <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-586">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="2ebeb-587">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="2ebeb-587">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="2ebeb-588">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.WaitAny%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-588">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAny%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="2ebeb-589">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-589">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="2ebeb-590">Даже если в настоящее время выполняется метод в классе, который является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-590">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="2ebeb-591">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.WaitAny%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-591">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span> <span data-ttu-id="2ebeb-592">Поток возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.WaitAny%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-592">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes.</span></span>  
  
 <span data-ttu-id="2ebeb-593">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-593">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="2ebeb-594">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-594">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="2ebeb-595">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.WaitAny%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-595">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAny%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="2ebeb-596">Когда <xref:System.Threading.WaitHandle.WaitAny%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-596">When the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ebeb-597">В следующем примере кода показано, как использовать пул потоков для поиска файла на несколько дисков одновременно.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-597">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="2ebeb-598">Для краткости выполнялся поиск только в корневом каталоге каждого диска.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-598">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ebeb-599">Параметр <paramref name="waitHandles" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-599">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ebeb-600">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-600">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-601">Один или несколько объектов массива <paramref name="waitHandles" /> имеют значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-601">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2ebeb-602">Массив <paramref name="waitHandles" /> содержит больше объектов, чем разрешено системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-602">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="2ebeb-603">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 1.0 или 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-603">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ebeb-604">
            <paramref name="timeout" /> является отрицательным числом, отличным от -1 миллисекунды, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-604">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="2ebeb-605">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-605">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-606">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-606">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-607">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-607">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-608">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-608">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ebeb-609">
            <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 2.0 или выше.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-609">
              <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-610">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для элемента <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-610">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitOne">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ebeb-611">Блокирует текущий поток до получения сигнала объектом <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-611">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne();" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : unit -&gt; bool&#xA;override this.WaitOne : unit -&gt; bool" Usage="waitHandle.WaitOne " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ebeb-612">Блокирует текущий поток до получения сигнала объектом <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-612">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-613">Значение <see langword="true" />, если текущий экземпляр получает сигнал.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-613">
              <see langword="true" /> if the current instance receives a signal.</span>
          </span>
          <span data-ttu-id="2ebeb-614">Пока текущий экземпляр не сигнализирует, метод <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> не возвращает управление.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-614">If the current instance is never signaled, <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> never returns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-615"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-615"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2ebeb-616">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitOne%2A> возвращает метод `true` когда прерывается мьютекс.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-616">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="2ebeb-617">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-617">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="2ebeb-618">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-618">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="2ebeb-619">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-619">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="2ebeb-620">Объект, вызывающий этот метод блокируется неограниченное время до получения сигнала текущим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-620">The caller of this method blocks indefinitely until the current instance receives a signal.</span></span> <span data-ttu-id="2ebeb-621">Этот метод используется для блокирования до <xref:System.Threading.WaitHandle> получения сигнала от другого потока, такие как формируется при завершении асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-621">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="2ebeb-622">Дополнительные сведения см. в разделе <xref:System.IAsyncResult> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-622">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="2ebeb-623">Вызов перегрузки этого метода эквивалентен вызову <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> перегрузку метода и указав значение -1 или <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> для первого параметра и `false` для второго параметра.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-623">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> method overload and specifying -1 or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> for the first parameter and `false` for the second parameter.</span></span>  
  
 <span data-ttu-id="2ebeb-624">Переопределите этот метод для настройки поведения из производных классов.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-624">Override this method to customize the behavior of derived classes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ebeb-625">В следующем примере кода показано, как использовать дескриптор ожидания, чтобы сохранить процесса завершения работы при ожидании фоновый поток для завершения выполнения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-625">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/CPP/source1.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/CS/source1.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/VB/source1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2ebeb-626">Текущий экземпляр уже удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-626">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-627">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-627">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-628">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-628">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-629">Текущий экземпляр является прозрачным прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-629">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : int -&gt; bool&#xA;override this.WaitOne : int -&gt; bool" Usage="waitHandle.WaitOne millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="2ebeb-630">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-630">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-631">Блокирует текущий поток до получения текущим дескриптором <see cref="T:System.Threading.WaitHandle" /> сигнала, используя 32-разрядное целое число со знаком для указания интервала времени в миллисекундах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-631">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal, using a 32-bit signed integer to specify the time interval in milliseconds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-632">Значение <see langword="true" /> при получении сигнала текущим экземпляром; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-632">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-633">Если `millisecondsTimeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-633">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="2ebeb-634">Он проверяет состояние дескриптора ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-634">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="2ebeb-635">Объект, вызывающий этот метод блокируется до получения текущим экземпляром сигнала или время ожидания имеет место.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-635">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="2ebeb-636">Этот метод используется для блокирования до <xref:System.Threading.WaitHandle> получения сигнала от другого потока, такие как формируется при завершении асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-636">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="2ebeb-637">Дополнительные сведения см. в разделе <xref:System.IAsyncResult> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-637">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="2ebeb-638">Переопределите этот метод для настройки поведения из производных классов.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-638">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="2ebeb-639">Вызов перегрузки этого метода равносилен вызову метода является <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> перегрузки и указав `false` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-639">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ebeb-640">В следующем примере кода показано, как использовать дескриптор ожидания, чтобы сохранить процесса завершения работы при ожидании фоновый поток для завершения выполнения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-640">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2ebeb-641">Текущий экземпляр уже удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-641">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ebeb-642">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от –1, что означает бесконечное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-642">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-643">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-643">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-644">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-644">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-645">Текущий экземпляр является прозрачным прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-645">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : TimeSpan -&gt; bool&#xA;override this.WaitOne : TimeSpan -&gt; bool" Usage="waitHandle.WaitOne timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="2ebeb-646">Период <see cref="T:System.TimeSpan" />, представляющий время ожидания в миллисекундах, или период <see cref="T:System.TimeSpan" />, представляющий -1 миллисекунду для неограниченного ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-646">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-647">Блокирует текущий поток до получения сигнала текущим экземпляром, используя значение типа <see cref="T:System.TimeSpan" /> для указания интервала времени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-647">Blocks the current thread until the current instance receives a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-648">Значение <see langword="true" /> при получении сигнала текущим экземпляром; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-648">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-649">Если `timeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-649">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="2ebeb-650">Он проверяет состояние дескриптора ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-650">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="2ebeb-651">Объект, вызывающий этот метод блокируется до получения текущим экземпляром сигнала или время ожидания имеет место.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-651">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="2ebeb-652">Этот метод используется для блокирования до <xref:System.Threading.WaitHandle> получения сигнала от другого потока, такие как формируется при завершении асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-652">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="2ebeb-653">Дополнительные сведения см. в разделе <xref:System.IAsyncResult> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-653">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="2ebeb-654">Переопределите этот метод для настройки поведения из производных классов.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-654">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="2ebeb-655">Максимальное значение для `timeout` является <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-655">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2ebeb-656">Вызов перегрузки этого метода равносилен вызову метода является <xref:System.Threading.WaitHandle.WaitOne%28System.TimeSpan%2CSystem.Boolean%29> перегрузки и указав `false` для `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-656">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitOne%28System.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2ebeb-657">Текущий экземпляр уже удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-657">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ebeb-658">
            <paramref name="timeout" /> является отрицательным числом, отличным от -1 миллисекунды, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-658">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="2ebeb-659">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-659">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-660">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-660">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-661">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-661">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-662">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-662">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-663">Текущий экземпляр является прозрачным прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-663">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : int * bool -&gt; bool&#xA;override this.WaitOne : int * bool -&gt; bool" Usage="waitHandle.WaitOne (millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="2ebeb-664">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-664">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="2ebeb-665">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-665">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-666">Блокирует текущий поток до получения сигнала текущим объектом <see cref="T:System.Threading.WaitHandle" />, используя 32-разрядное целое число со знаком для задания периода времени и указывая, следует ли выйти из домена синхронизации до начала ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-666">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal, using a 32-bit signed integer to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-667">Значение <see langword="true" /> при получении сигнала текущим экземпляром; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-667">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-668">Если `millisecondsTimeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-668">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="2ebeb-669">Он проверяет состояние дескриптора ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-669">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="2ebeb-670"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-670"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2ebeb-671">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitOne%2A> возвращает метод `true` когда прерывается мьютекс.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-671">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="2ebeb-672">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-672">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="2ebeb-673">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-673">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="2ebeb-674">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-674">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="2ebeb-675">Объект, вызывающий этот метод блокируется до получения текущим экземпляром сигнала или время ожидания имеет место.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-675">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="2ebeb-676">Этот метод используется для блокирования до <xref:System.Threading.WaitHandle> получения сигнала от другого потока, такие как формируется при завершении асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-676">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="2ebeb-677">Дополнительные сведения см. в разделе <xref:System.IAsyncResult> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-677">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="2ebeb-678">Переопределите этот метод для настройки поведения из производных классов.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-678">Override this method to customize the behavior of derived classes.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="2ebeb-679">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="2ebeb-679">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="2ebeb-680">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.WaitOne%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-680">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitOne%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="2ebeb-681">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-681">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="2ebeb-682">Даже если в настоящее время выполняется метод в классе, который является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-682">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="2ebeb-683">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.WaitOne%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-683">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="2ebeb-684">Поток возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.WaitOne%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-684">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitOne%2A> method completes.</span></span>  
  
 <span data-ttu-id="2ebeb-685">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-685">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="2ebeb-686">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-686">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="2ebeb-687">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.WaitOne%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-687">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitOne%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="2ebeb-688">Когда <xref:System.Threading.WaitHandle.WaitOne%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-688">When the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ebeb-689">В следующем примере показан способ <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> перегруженный метод ведет себя при вызове в домен синхронизации.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-689">The following example shows how the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> method overload behaves when it is called within a synchronization domain.</span></span> <span data-ttu-id="2ebeb-690">Во-первых, поток ожидает открытия с `exitContext` присвоено `false` и блокируется, пока не истечет время ожидания ожидания.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-690">First, a thread waits with `exitContext` set to `false` and blocks until the wait timeout expires.</span></span> <span data-ttu-id="2ebeb-691">Второй поток выполняет после первый поток завершается и ожидает с `exitContext` присвоено `true`.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-691">A second thread executes after the first thread terminates and waits with `exitContext` set to `true`.</span></span> <span data-ttu-id="2ebeb-692">Вызов сигнал дескриптор ожидания для этой второй поток не заблокирован, и до истечения времени ожидания ожидания завершения потока.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-692">The call to signal the wait handle for this second thread is not blocked, and the thread completes before the wait timeout.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/cpp/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/cs/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2ebeb-693">Текущий экземпляр уже удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-693">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ebeb-694">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от –1, что означает бесконечное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-694">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-695">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-695">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-696">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-696">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-697">Текущий экземпляр является прозрачным прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-697">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : TimeSpan * bool -&gt; bool&#xA;override this.WaitOne : TimeSpan * bool -&gt; bool" Usage="waitHandle.WaitOne (timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="2ebeb-698">Период <see cref="T:System.TimeSpan" />, представляющий время ожидания в миллисекундах, или период <see cref="T:System.TimeSpan" />, представляющий -1 миллисекунду для неограниченного ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-698">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="exitContext">
          <span data-ttu-id="2ebeb-699">Значение <see langword="true" /> для выхода из домена синхронизации в текущем контексте перед ожиданием (в синхронизированном контексте) с его последующим повторным получением; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-699">
              <see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ebeb-700">Блокирует текущий поток до получения сигнала текущим экземпляром, используя значение типа <see cref="T:System.TimeSpan" /> для задания интервала времени и указывая, следует ли выйти из домена синхронизации до начала ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-700">Blocks the current thread until the current instance receives a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ebeb-701">Значение <see langword="true" /> при получении сигнала текущим экземпляром; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-701">
              <see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-702">Если `timeout` равно нулю, метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-702">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="2ebeb-703">Он проверяет состояние дескриптора ожидания и немедленно возвращает.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-703">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="2ebeb-704"><xref:System.Threading.AbandonedMutexException> является новым в .NET Framework версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-704"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2ebeb-705">В предыдущих версиях <xref:System.Threading.WaitHandle.WaitOne%2A> возвращает метод `true` когда прерывается мьютекс.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-705">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="2ebeb-706">Брошенный мьютекс часто признаком серьезной ошибки в коде.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-706">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="2ebeb-707">В случае мьютекс всей системы это может означать, что приложения была внезапно прекращена (например, с помощью диспетчера задач Windows).</span><span class="sxs-lookup"><span data-stu-id="2ebeb-707">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="2ebeb-708">Исключение содержит сведения, полезные для отладки.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-708">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="2ebeb-709">Объект, вызывающий этот метод блокируется до получения текущим экземпляром сигнала или время ожидания имеет место.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-709">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="2ebeb-710">Этот метод используется для блокирования до <xref:System.Threading.WaitHandle> получения сигнала от другого потока, такие как формируется при завершении асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-710">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="2ebeb-711">Дополнительные сведения см. в разделе <xref:System.IAsyncResult> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-711">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="2ebeb-712">Переопределите этот метод для настройки поведения из производных классов.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-712">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="2ebeb-713">Максимальное значение для `timeout` является <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-713">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="2ebeb-714">Примечания о выходе из контекста</span><span class="sxs-lookup"><span data-stu-id="2ebeb-714">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="2ebeb-715">`exitContext` Параметр действует только <xref:System.Threading.WaitHandle.WaitOne%2A> метод вызывается из внутри управляемого контекста не по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-715">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitOne%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="2ebeb-716">Это может произойти, если ваш поток находится внутри вызова к экземпляру класса, производного от <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-716">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="2ebeb-717">Даже если в настоящее время выполняется метод в классе, который является производным от <xref:System.ContextBoundObject>, например <xref:System.String>, может быть в контексте не по умолчанию если <xref:System.ContextBoundObject> стеке в текущем домене приложения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-717">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="2ebeb-718">Когда ваш код выполняется в контексте не по умолчанию, указав `true` для `exitContext` вызывающий поток выйти из управляемого контекста не по умолчанию (то есть для перехода в контекст по умолчанию) перед выполнением <xref:System.Threading.WaitHandle.WaitOne%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-718">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="2ebeb-719">Поток возвращается к исходному контексту не по умолчанию после вызова <xref:System.Threading.WaitHandle.WaitOne%2A> завершения метода.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-719">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitOne%2A> method completes.</span></span>  
  
 <span data-ttu-id="2ebeb-720">Это может быть полезно, если класс контекстно привязанные имеет <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-720">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="2ebeb-721">В этом случае все вызовы к членам класса автоматически синхронизируются и области синхронизации находится в теле код для класса.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-721">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="2ebeb-722">Если в стеке вызовов элемента вызывается <xref:System.Threading.WaitHandle.WaitOne%2A> метода с указанием `true` для `exitContext`, поток выходит из области синхронизации, позволяя потоку, который блокируется во время вызова любого члена объекта для продолжения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-722">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitOne%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="2ebeb-723">Когда <xref:System.Threading.WaitHandle.WaitOne%2A> метод возвращает поток, которой был сделан вызов должен ожидать повторный ввод области синхронизации.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-723">When the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ebeb-724">В следующем примере кода показано, как использовать дескриптор ожидания, чтобы сохранить процесса завершения работы при ожидании фоновый поток для завершения выполнения.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-724">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2ebeb-725">Текущий экземпляр уже удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-725">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ebeb-726">
            <paramref name="timeout" /> является отрицательным числом, отличным от -1 миллисекунды, которое представляет неограниченное время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-726">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="2ebeb-727">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-727">-or-</span>
          </span>
          <span data-ttu-id="2ebeb-728">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-728">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.AbandonedMutexException">
          <span data-ttu-id="2ebeb-729">Ожидание закончилось, так как поток завершил работу, не освободив мьютекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-729">The wait completed because a thread exited without releasing a mutex.</span>
          </span>
          <span data-ttu-id="2ebeb-730">Это исключение не вызывается в ОС Windows 98 или Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-730">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ebeb-731">Текущий экземпляр является прозрачным прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-731">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitTimeout">
      <MemberSignature Language="C#" Value="public const int WaitTimeout = 258;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 WaitTimeout = (258)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.WaitHandle.WaitTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Const WaitTimeout As Integer  = 258" />
      <MemberSignature Language="C++ CLI" Value="public: int WaitTimeout = 258;" />
      <MemberSignature Language="F#" Value="val mutable WaitTimeout : int" Usage="System.Threading.WaitHandle.WaitTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>258</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ebeb-732">Указывает, что время ожидания операции <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> истекло до получения сигнала каким-либо из дескрипторов ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-732">Indicates that a <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> operation timed out before any of the wait handles were signaled.</span>
          </span>
          <span data-ttu-id="2ebeb-733">Это поле является константой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ebeb-733">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ebeb-734">Это поле является одним из возможных возвращаемых значений `WaitAny`.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-734">This field is one of the possible return values of `WaitAny`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ebeb-735">В следующем примере кода показано, как использовать пул потоков для поиска файла на несколько дисков одновременно.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-735">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="2ebeb-736">Для краткости выполнялся поиск только в корневом каталоге каждого диска.</span><span class="sxs-lookup"><span data-stu-id="2ebeb-736">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>