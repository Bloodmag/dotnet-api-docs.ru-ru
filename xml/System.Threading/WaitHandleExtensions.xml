<Type Name="WaitHandleExtensions" FullName="System.Threading.WaitHandleExtensions">
  <TypeSignature Language="C#" Value="public static class WaitHandleExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WaitHandleExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitHandleExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WaitHandleExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class WaitHandleExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Handles</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="019ce-101">Предоставляет удобные методы для работы с безопасным дескриптором для дескриптора ожидания.</span><span class="sxs-lookup"><span data-stu-id="019ce-101">Provides convenience methods to for working with a safe handle for a wait handle.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="019ce-102"><xref:System.Threading.WaitHandleExtensions> Класс содержит два метода расширения, которые позволяют создать безопасный дескриптор для дескриптора ожидания и получить собственный дескриптор операционной системы из безопасного дескриптора.</span><span class="sxs-lookup"><span data-stu-id="019ce-102">The <xref:System.Threading.WaitHandleExtensions> class includes two extension methods that allow you to create a safe handle for a wait handle and to retrieve the native operating system handle from a safe handle.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetSafeWaitHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeWaitHandle GetSafeWaitHandle (this System.Threading.WaitHandle waitHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeWaitHandle GetSafeWaitHandle(class System.Threading.WaitHandle waitHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Win32::SafeHandles::SafeWaitHandle ^ GetSafeWaitHandle(System::Threading::WaitHandle ^ waitHandle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeWaitHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandle" Type="System.Threading.WaitHandle" RefType="this" />
      </Parameters>
      <Docs>
        <param name="waitHandle"><span data-ttu-id="019ce-103">Собственный дескриптор операционной системы.</span><span class="sxs-lookup"><span data-stu-id="019ce-103">A native operating system handle.</span></span></param>
        <summary><span data-ttu-id="019ce-104">Возвращает безопасный дескриптор для собственного дескриптора ожидания операционной системы.</span><span class="sxs-lookup"><span data-stu-id="019ce-104">Gets the safe handle for a native operating system wait handle.</span></span></summary>
        <returns><span data-ttu-id="019ce-105">Безопасный дескриптор ожидания, инкапсулирующий собственный дескриптор ожидания операционной системы.</span><span class="sxs-lookup"><span data-stu-id="019ce-105">The safe wait handle that wraps the native operating system wait handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="019ce-106"><xref:System.Threading.WaitHandleExtensions.GetSafeWaitHandle%2A> является методом расширения, которое эквивалентно значению получение значения <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="019ce-106"><xref:System.Threading.WaitHandleExtensions.GetSafeWaitHandle%2A> is an extension method that is equivalent to retrieving the value of the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="019ce-107">Свойство <paramref name="waitHandle" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="019ce-107"><paramref name="waitHandle" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetSafeWaitHandle">
      <MemberSignature Language="C#" Value="public static void SetSafeWaitHandle (this System.Threading.WaitHandle waitHandle, Microsoft.Win32.SafeHandles.SafeWaitHandle value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSafeWaitHandle(class System.Threading.WaitHandle waitHandle, class Microsoft.Win32.SafeHandles.SafeWaitHandle value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetSafeWaitHandle(System::Threading::WaitHandle ^ waitHandle, Microsoft::Win32::SafeHandles::SafeWaitHandle ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandle" Type="System.Threading.WaitHandle" RefType="this" />
        <Parameter Name="value" Type="Microsoft.Win32.SafeHandles.SafeWaitHandle" />
      </Parameters>
      <Docs>
        <param name="waitHandle"><span data-ttu-id="019ce-108">Дескриптор ожидания, который инкапсулирует связанный с операционной системой объект, ожидающий монопольного доступа к общему ресурсу.</span><span class="sxs-lookup"><span data-stu-id="019ce-108">A wait handle that encapsulates an operating system-specific object that waits for exclusive access to a shared resource.</span></span></param>
        <param name="value"><span data-ttu-id="019ce-109">Безопасный дескриптор, инкапсулирующий дескриптор операционной системы.</span><span class="sxs-lookup"><span data-stu-id="019ce-109">The safe handle to wrap the operating system handle.</span></span></param>
        <summary><span data-ttu-id="019ce-110">Задает безопасный дескриптор для собственного дескриптора ожидания операционной системы.</span><span class="sxs-lookup"><span data-stu-id="019ce-110">Sets a safe handle for a native operating system wait handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="019ce-111"><xref:System.Threading.WaitHandleExtensions.SetSafeWaitHandle%2A> является методом расширения, которое эквивалентно значению присвоения значения <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="019ce-111"><xref:System.Threading.WaitHandleExtensions.SetSafeWaitHandle%2A> is an extension method that is equivalent to assigning a value to the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="019ce-112">Свойство <paramref name="waitHandle" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="019ce-112"><paramref name="waitHandle" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>