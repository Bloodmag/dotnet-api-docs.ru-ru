<Type Name="ElapsedEventHandler" FullName="System.Timers.ElapsedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c50b9d0cb18d7cd1f03fcee1c53293055e65495" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36605494" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ElapsedEventHandler(object sender, ElapsedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ElapsedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Timers.ElapsedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ElapsedEventHandler(sender As Object, e As ElapsedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ElapsedEventHandler(System::Object ^ sender, ElapsedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ElapsedEventHandler = delegate of obj * ElapsedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Timers.ElapsedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="84a6c-101">Источник события.</span>
      <span class="sxs-lookup">
        <span data-stu-id="84a6c-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="84a6c-102">Объект <see cref="T:System.Timers.ElapsedEventArgs" />, содержащий данные о событии.</span>
      <span class="sxs-lookup">
        <span data-stu-id="84a6c-102">An <see cref="T:System.Timers.ElapsedEventArgs" /> object that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="84a6c-103">Представляет метод, обрабатывающий событие <see cref="E:System.Timers.Timer.Elapsed" /> объекта <see cref="T:System.Timers.Timer" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="84a6c-103">Represents the method that will handle the <see cref="E:System.Timers.Timer.Elapsed" /> event of a <see cref="T:System.Timers.Timer" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84a6c-104">При создании <xref:System.Timers.ElapsedEventHandler> делегат, необходимо указать метод, обрабатывающий <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> событий.</span><span class="sxs-lookup"><span data-stu-id="84a6c-104">When you create an <xref:System.Timers.ElapsedEventHandler> delegate, you identify the method that will handle the <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="84a6c-105">Чтобы связать событие с обработчиком событий, нужно добавить в событие экземпляр делегата.</span><span class="sxs-lookup"><span data-stu-id="84a6c-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="84a6c-106">Обработчик событий вызывается всякий раз, когда происходит событие, если делегат не удален.</span><span class="sxs-lookup"><span data-stu-id="84a6c-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="84a6c-107">Дополнительные сведения о делегатах обработчиков событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="84a6c-107">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84a6c-108">В следующем примере кода задает обработчик события для <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> события, создает таймер и запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="84a6c-108">The following code example sets up an event handler for the <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event, creates a timer, and starts the timer.</span></span> <span data-ttu-id="84a6c-109">Обработчик событий имеет такую же сигнатуру как <xref:System.Timers.ElapsedEventHandler> делегата.</span><span class="sxs-lookup"><span data-stu-id="84a6c-109">The event handler has the same signature as the <xref:System.Timers.ElapsedEventHandler> delegate.</span></span> <span data-ttu-id="84a6c-110">Обработчик событий отображает <xref:System.Timers.ElapsedEventArgs.SignalTime%2A> свойство каждый раз, оно создается.</span><span class="sxs-lookup"><span data-stu-id="84a6c-110">The event handler displays the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A> property each time it is raised.</span></span>  
  
 [!code-cpp[Classic Timer Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Timer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Timer Example/CS/source.cs#1)]
 [!code-vb[Classic Timer Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Timer Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Timers.Timer.Elapsed" />
    <altmember cref="T:System.Timers.ElapsedEventArgs" />
  </Docs>
</Type>