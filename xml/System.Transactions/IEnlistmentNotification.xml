<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8cc94d2e8fdf95496872362fe50ab41f553e0db5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529308" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Описывает интерфейс, который должен реализовать диспетчер ресурсов, чтобы предоставить обратные вызовы уведомлений о двухфазной фиксации диспетчеру транзакций при внесении в список для участия.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы диспетчер ресурсов принять участие в транзакции его необходимо включить в транзакцию посредством диспетчера транзакций. Класс <xref:System.Transactions.Transaction> определяет набор методов, имена которых начинаются с `Enlist`, обеспечивающий данную функциональную возможность. Разные `Enlist` методы соответствуют перечислением, которые ресурсов могут использоваться различные типы.  
  
 Этот класс описывает интерфейс, который должен быть реализован диспетчером ресурсов для предоставления две фазы фиксации обратных вызовов для уведомлений для диспетчера транзакций при присоединении к участию. Для реализации каждый диспетчер ресурсов <xref:System.Transactions.IEnlistmentNotification> интерфейса, вам следует прикрепить его с помощью <xref:System.Transactions.Transaction.EnlistVolatile%2A> метода или <xref:System.Transactions.Transaction.EnlistDurable%2A> метод <xref:System.Transactions.Transaction> класса, в зависимости от того, является ли ресурс неустойчивые и устойчивые. Дополнительные сведения о присоединении и 2PC см. в разделе [прикрепление ресурсов в качестве участников в транзакции](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md) и [Фиксация транзакции в однофазной и двухфазной](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md) соответственно.  
  
 Диспетчер транзакций уведомляет присоединенный объект на различных этапах протокола двухфазной фиксации следующими методами.  
  
|Метод|Описание:|  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|Этот метод присоединенного объекта используется как обратный вызов диспетчером транзакций во время первой фазы транзакции, когда диспетчер транзакций опрашивает участников, могут ли они зафиксировать транзакцию.|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|Этот метод присоединенного объекта используется как обратный вызов диспетчером транзакций на втором этапе транзакции, если транзакция была зафиксирована.|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|Этот метод присоединенного объекта используется как обратный вызов диспетчером транзакций на втором этапе транзакции, если транзакция прерывается, (откат которой).|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|Этот метод присоединенного объекта используется как обратный вызов диспетчером транзакций на втором этапе транзакции, если транзакция сомнительна.|  
  
> [!NOTE]
>  Следует иметь в виду, что уведомления не могут быть отправлены, последовательно или в определенном порядке.  
  
   
  
## Examples  
 Приведенный ниже показана реализация этого интерфейса, а также прикрепление объекта в качестве участника в транзакцию с помощью <xref:System.Transactions.Transaction.EnlistVolatile%2A> метод.  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Объект <see cref="T:System.Transactions.Enlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
        <summary>Уведомляет включенный в список объект о том, что транзакция фиксируется.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Диспетчер транзакций вызывает этот метод присоединенного объекта во время второй фазы фиксации, когда он указывает, что все участники зафиксировать транзакцию.  
  
 Диспетчер ресурсов должен выполнить любые действия, необходимые для завершения транзакции и затем проинформировать диспетчер будет завершена путем вызова <xref:System.Transactions.Enlistment.Done%2A> метод `enlistment` параметра.  
  
 Если диспетчер ресурсов включен в список, но не отвечает, вызвав <xref:System.Transactions.Enlistment.Done%2A> , диспетчер транзакций сомнения в том, что диспетчер ресурсов получил <xref:System.Transactions.IEnlistmentNotification.Commit%2A> вызова. Таким образом диспетчер транзакций отслеживает Ожидание ответа и хранит сведения, относящиеся к этой транзакции.  Если <xref:System.Transactions.Enlistment.Done%2A> — никогда не вызывается, этот фрагмент данных хранятся бессрочно в памяти или системных ресурсов. Это приводит к ресурсам, не может быть освобождена. В случае распределенных транзакций это со временем заполнения журнала MSDTC, которое останавливает процесс MSDTC. В случае транзакции, управляемой <xref:System.Transactions>, это приводит к постепенному увеличению потребления памяти процессом диспетчера ресурсов. Таким образом, очень важно, вызвать <xref:System.Transactions.Enlistment.Done%2A> метод после завершения диспетчер ресурсов вашей Подготовка работы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Объект <see cref="T:System.Transactions.Enlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
        <summary>Уведомляет включенный в список объект о сомнительном состоянии транзакции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается для непостоянных ресурсов, после вызова операции фиксации однофазного одному ресурсу устойчивых диспетчера транзакций, а затем потеряно подключение к долговременный ресурс до получения результата транзакции. На этом этапе результат транзакции не удается определить безопасно.  
  
 Как <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> — рассматриваются как конечное состояние для транзакции, не следует вызывать <xref:System.Transactions.IEnlistmentNotification.Commit%2A> или <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> после вызова <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>.  
  
> [!NOTE]
>  Реализация этого метода для непостоянных ресурсов должна выполнять любые операции восстановления или проверки, он понимает для соответствующих данных.  Он также должен вызвать <xref:System.Transactions.Enlistment.Done%2A> метода на `enlistment` параметра после завершения его работы.  
  
 Если диспетчер ресурсов включен в список, но не отвечает, вызвав <xref:System.Transactions.Enlistment.Done%2A> , диспетчер транзакций сомнения в том, что диспетчер ресурсов получил <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> вызова. Таким образом диспетчер транзакций отслеживает Ожидание ответа и хранит сведения, относящиеся к этой транзакции.  Если <xref:System.Transactions.Enlistment.Done%2A> — никогда не вызывается, этот фрагмент данных хранятся бессрочно в памяти или системных ресурсов. Это приводит к ресурсам, не может быть освобождена. В случае распределенных транзакций это со временем заполнения журнала MSDTC, которое останавливает процесс MSDTC. В случае транзакции, управляемой <xref:System.Transactions>, это приводит к постепенному увеличению потребления памяти процессом диспетчера ресурсов. Таким образом, очень важно, вызвать <xref:System.Transactions.Enlistment.Done%2A> метод после завершения диспетчер ресурсов вашей Подготовка работы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment">Объект <see cref="T:System.Transactions.PreparingEnlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
        <summary>Уведомляет включенный в список объект о том, что транзакция подготавливается для фиксации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Диспетчер транзакций вызывает этот метод прикрепленная ресурса manager во время первой фазы фиксации, когда он опрашивает участников, могут ли они зафиксировать транзакцию.  
  
 При реализации диспетчер долгосрочных ресурсов, необходимо войти в вашей Подготовка записи во время этого этапа. В записи должны содержаться все необходимые сведения для выполнения восстановления. Сюда входят <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> свойства, которые передаются в диспетчер транзакций в <xref:System.Transactions.TransactionManager.Reenlist%2A> метод во время восстановления. Дополнительные сведения о восстановлении см. в разделе [выполнение восстановления](http://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).  
  
 Диспетчер ресурсов необходимо выполнить все действия, которые необходимо завершить перед вызовом <xref:System.Transactions.PreparingEnlistment.Prepared%2A> метод `preparingEnlistment` параметр, чтобы указать его голоса для обязательств. Следует убедиться в том, что это достигается до получения никаких уведомлений второй фазы таких фиксации, отката или вы сомневаетесь. Это обусловлено уведомлений второго этапа может произойти, встроенные в том же потоке, который вызвал <xref:System.Transactions.PreparingEnlistment.Prepared%2A> метод на этапе 1. Таким образом, после вызова метода <xref:System.Transactions.PreparingEnlistment.Prepared%2A> не нужно выполнять никаких действий (например, снимать блокировки), которые должны были быть выполнены перед получением уведомлений второго этапа.  
  
 Можно также вызвать метод `preparingEnlistment` параметр, чтобы указать голос для отката.  
  
 Если необходимо, чтобы объект просто наблюдать и реагирования на ход выполнения транзакции, без участия в его реализации этого метода следует вызвать <xref:System.Transactions.Enlistment.Done%2A> метод `preparingEnlistment` параметра после завершения его работы. Таким образом, диспетчер ресурсов не будет получать никаких уведомлений второй фазы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Объект <see cref="T:System.Transactions.Enlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
        <summary>Уведомляет включенный в список объект о том, что выполняется откат транзакции (ее прерывание).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Диспетчер транзакций вызывает этот метод присоединенного объекта, если транзакция выполняет откат (прервано) из-за неспособности одного или нескольких участников транзакции зафиксировать транзакцию.  
  
 Диспетчер ресурсов должен выполнить любые действия, необходимые для завершения транзакции и затем проинформировать диспетчер будет завершена путем вызова <xref:System.Transactions.Enlistment.Done%2A> метод `enlistment` параметра.  
  
 Если диспетчер ресурсов включен в список, но не отвечает, вызвав <xref:System.Transactions.Enlistment.Done%2A> , диспетчер транзакций сомнения в том, что диспетчер ресурсов получил <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> вызова. Таким образом диспетчер транзакций отслеживает Ожидание ответа и хранит сведения, относящиеся к этой транзакции.  Если <xref:System.Transactions.Enlistment.Done%2A> — никогда не вызывается, этот фрагмент данных хранятся бессрочно в памяти или системных ресурсов. Это приводит к ресурсам, не может быть освобождена. В случае распределенных транзакций это со временем заполнения журнала MSDTC, которое останавливает процесс MSDTC. В случае транзакции, управляемой <xref:System.Transactions>, это приводит к постепенному увеличению потребления памяти процессом диспетчера ресурсов. Таким образом, очень важно, вызвать <xref:System.Transactions.Enlistment.Done%2A> метод после завершения диспетчер ресурсов вашей Подготовка работы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>