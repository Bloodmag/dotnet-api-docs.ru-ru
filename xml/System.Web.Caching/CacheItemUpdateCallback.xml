<Type Name="CacheItemUpdateCallback" FullName="System.Web.Caching.CacheItemUpdateCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="45b66a0f48958e137b483fb940986268f4a81022" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30527558" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void CacheItemUpdateCallback(string key, CacheItemUpdateReason reason, out object expensiveObject, out CacheDependency dependency, out DateTime absoluteExpiration, out TimeSpan slidingExpiration);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CacheItemUpdateCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.CacheItemUpdateCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub CacheItemUpdateCallback(key As String, reason As CacheItemUpdateReason, ByRef expensiveObject As Object, ByRef dependency As CacheDependency, ByRef absoluteExpiration As DateTime, ByRef slidingExpiration As TimeSpan)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void CacheItemUpdateCallback(System::String ^ key, CacheItemUpdateReason reason, [Runtime::InteropServices::Out] System::Object ^ % expensiveObject, [Runtime::InteropServices::Out] CacheDependency ^ % dependency, [Runtime::InteropServices::Out] DateTime % absoluteExpiration, [Runtime::InteropServices::Out] TimeSpan % slidingExpiration);" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="System.String" />
    <Parameter Name="reason" Type="System.Web.Caching.CacheItemUpdateReason" />
    <Parameter Name="expensiveObject" Type="System.Object&amp;" RefType="out" />
    <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency&amp;" RefType="out" />
    <Parameter Name="absoluteExpiration" Type="System.DateTime&amp;" RefType="out" />
    <Parameter Name="slidingExpiration" Type="System.TimeSpan&amp;" RefType="out" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key">Идентификатор элемента, удаляемого из кэша.</param>
    <param name="reason">Причина удаления элемента из кэша.</param>
    <param name="expensiveObject">После выполнения возврата этим методом содержит кэшированный объект элемента с обновлениями.</param>
    <param name="dependency">После выполнения возврата этим методом содержит объект, определяющий зависимость между объектом элемента и файлом, ключом кэша, массивом или другим объектом <see cref="T:System.Web.Caching.CacheDependency" />.</param>
    <param name="absoluteExpiration">После выполнения возврата этим методом содержит значение времени истечения срока действия объекта.</param>
    <param name="slidingExpiration">После выполнения возврата этим методом содержит интервал между временем последнего доступа к объекту и временем истечения срока действия объекта.</param>
    <summary>Определяет метод обратного вызова для уведомления приложений перед удалением кэшированного элемента из кэша.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По истечении срока действия объекта в кэше ASP.NET вызывает <xref:System.Web.Caching.CacheItemUpdateCallback> метод с помощью ключа элемента кэша и причины, может потребоваться обновить элемент. Остальные параметры этого метода — выходные параметры. Указывается новый кэшированный элемент и необязательные истечение срока действия и значения зависимостей для использования при обновлении кэшированного элемента.  
  
 Обновление обратного вызова не вызывается, если кэшируемый элемент явно удаляется с помощью вызова <xref:System.Web.Caching.Cache.Remove%2A>.  
  
 Если требуется кэшированного элемента, удаляемого из кэша, необходимо вернуть `null` в `expensiveObject` параметра. В противном случае возвращает ссылку на новые кэшированные данные с помощью `expensiveObject` параметра. Если не указать срок действия или значения зависимостей, элемент будет удален из кэша, только в том случае, если требуется память.  
  
 Если метод обратного вызова вызывает исключение, ASP.NET подавляет это исключение и удаляет кэшированное значение.  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>