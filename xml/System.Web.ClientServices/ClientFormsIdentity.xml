<Type Name="ClientFormsIdentity" FullName="System.Web.ClientServices.ClientFormsIdentity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54f7d5829c77d68988cff1dcb760367182714829" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30530318" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientFormsIdentity extends System.Object implements class System.IDisposable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.ClientFormsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientFormsIdentity&#xA;Implements IDisposable, IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientFormsIdentity : IDisposable, System::Security::Principal::IIdentity" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Представляет идентификацию пользователя, прошедшего проверку подлинности для служб клиентского приложения путем проверки подлинности форм.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Функциональность служб клиентских приложений использует этот класс для представления прошедшего проверку подлинности пользователя. При настройке приложения для использования проверки подлинности службы и формы приложения клиента, вы можете проверять подлинность пользователя путем вызова `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=nameWithType> метод. После проверки подлинности, можно получить ссылку на текущий <xref:System.Web.ClientServices.ClientFormsIdentity> экземпляра <xref:System.Security.Principal.IPrincipal.Identity%2A> свойство <xref:System.Security.Principal.IPrincipal> извлечь с помощью `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> свойство. Дополнительные сведения см. в разделе [Службы клиентских приложений](~/docs/framework/common-client-technologies/client-application-services.md).  
  
 Обычно доступ к <xref:System.Web.ClientServices.ClientFormsIdentity> объекта в виде <xref:System.Security.Principal.IIdentity> ссылку, чтобы исключить прямой зависимости от этого класса. Можно определить, является ли пользователь проверку подлинности, проверив <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> свойство удостоверения. Тем не менее пользователь может пройти проверку подлинности для Windows, но не для служб клиентских приложений. Чтобы определить, является ли пользователь проверку подлинности для служб клиентских приложений, вы должны также убедитесь, что <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> свойство имеет значение «ClientForms».  
  
 Необходимо использовать явную <xref:System.Web.ClientServices.ClientFormsIdentity> ссылки для вызова <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> метод, который не был задан с <xref:System.Security.Principal.IIdentity> интерфейса.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать этот класс для автоматической повторной проверки пользователя при выходе приложения из состояния автономной работы. В этом примере <xref:System.Windows.Forms.CheckBox.CheckedChanged> обработчик событий обновляет автономное состояние, в соответствии со значением "флажок". Если пользователь устанавливает приложение в оперативный режим, обработчик событий пытается повторно проверить подлинность пользователя, путем вызова <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> метод. Тем не менее если сервер проверки подлинности недоступен, обработчик события возвращает приложение в автономный режим.  
  
> [!NOTE]
>  Метод <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> предназначен исключительно для удобства. Поскольку у него отсутствуют возвращаемые значения, с его помощью нельзя выявлять ошибки при повторных проверках подлинности. Ошибка проверки подлинности может возникнуть, например, при изменении учетных данных пользователя на сервере. В этом случае вы можете использовать код, с помощью которого после ошибок вызова служб будет выполняться явная проверка подлинности пользователей. Дополнительные сведения см. в разделе веб-доступ к параметрам раздела [Пошаговое руководство: использование служб клиентских приложений](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
    <altmember cref="T:System.Security.Principal.IIdentity" />
    <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Logout" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string password, class System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, class System.Net.CookieContainer authenticationCookies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, password As String, provider As MembershipProvider, authenticationType As String, isAuthenticated As Boolean, authenticationCookies As CookieContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientFormsIdentity(System::String ^ name, System::String ^ password, System::Web::Security::MembershipProvider ^ provider, System::String ^ authenticationType, bool isAuthenticated, System::Net::CookieContainer ^ authenticationCookies);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="provider" Type="System.Web.Security.MembershipProvider" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
        <Parameter Name="authenticationCookies" Type="System.Net.CookieContainer" />
      </Parameters>
      <Docs>
        <param name="name">Имя пользователя, прошедшего проверку подлинности.</param>
        <param name="password">Пароль пользователя, прошедшего проверку подлинности.</param>
        <param name="provider">Поставщик членства, используемый для проверки подлинности пользователя.</param>
        <param name="authenticationType">Применяемый тип проверки подлинности.</param>
        <param name="isAuthenticated">
          Если пользователь прошел проверку подлинности, значение <see langword="true" />, если нет, значение <see langword="false" />.</param>
        <param name="authenticationCookies">Файлы Cookie, предоставленные службой проверки подлинности.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationCookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer AuthenticationCookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer AuthenticationCookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationCookies As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ AuthenticationCookies { System::Net::CookieContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает набор файлов Cookie, предоставленных службой проверки подлинности.</summary>
        <value>Файлы Cookie, предоставленные службой проверки подлинности.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство не предназначено для использования в коде приложения. Вы не можете изменить осмысленно куки-файлы, полученные через это свойство, и они содержат не полезную информацию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип проверки подлинности, который используется для проверки подлинности пользователя.</summary>
        <value>Тип проверки подлинности, который используется для проверки подлинности пользователя.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно доступ к <xref:System.Web.ClientServices.ClientFormsIdentity> объекта в виде <xref:System.Security.Principal.IIdentity> ссылку, чтобы исключить прямой зависимости от этого класса. Можно определить, является ли пользователь проверку подлинности, проверив <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> свойство удостоверения. Тем не менее пользователь может пройти проверку подлинности для Windows, но не для служб клиентских приложений. Чтобы определить, является ли пользователь проверку подлинности для служб клиентских приложений, вы должны также убедитесь, что <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> свойство имеет значение «ClientForms». Дополнительные сведения см. в разделе <xref:System.Web.ClientServices.ClientFormsIdentity> Общие сведения о классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать это свойство через <xref:System.Security.Principal.IIdentity> ссылкой, чтобы определить ли в настоящее время проверки подлинности пользователя для служб клиентских приложений. В этом примере предполагается, что приложение находится в конфигурации по умолчанию, где пользователи не требуется выполнить вход еще раз файла cookie проверки подлинности истечения срока действия. В противном случае <xref:System.Net.WebException> может означать, что имя входа пользователя истек. Дополнительные сведения см. в разделе [Практическое руководство. Настройка служб клиентских приложений](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Освобождает ресурсы, используемые объектом <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите метод <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> по окончании использования класса <xref:System.Web.ClientServices.ClientFormsIdentity>. Метод <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> оставляет класс <xref:System.Web.ClientServices.ClientFormsIdentity> в непригодном для использования состоянии. После вызова метода <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Web.ClientServices.ClientFormsIdentity> , сборщик мусора мог освободить память, <xref:System.Web.ClientServices.ClientFormsIdentity> занимаемую. Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [метода](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Всегда вызывайте метод <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.Web.ClientServices.ClientFormsIdentity>. В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Web.ClientServices.ClientFormsIdentity> метод `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />, а при необходимости освобождает также управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом открытые `Dispose()` метод и <xref:System.Object.Finalize%2A> метод. `Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`. <xref:System.Object.Finalize%2A> вызывает `Dispose` с `disposing` значение `false`.  
  
 При `disposing` параметр имеет значение true, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.Web.ClientServices.ClientFormsIdentity> ссылки. Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            Метод <see langword="Dispose" /> может вызываться несколько раз другими объектами. При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />. Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />, в разделе [метода](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 Дополнительные сведения о <see langword="Dispose" /> и <see cref="M:System.Object.Finalize" />, в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [переопределение метода Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, позволяющее определить, прошел ли пользователь проверку подлинности.</summary>
        <value>
          Если пользователь прошел проверку подлинности, значение <see langword="true" />, если нет, значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно доступ к <xref:System.Web.ClientServices.ClientFormsIdentity> объекта в виде <xref:System.Security.Principal.IIdentity> ссылку, чтобы исключить прямой зависимости от этого класса. Можно определить, является ли пользователь проверку подлинности, проверив <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> свойство удостоверения. Тем не менее пользователь может пройти проверку подлинности для Windows, но не для служб клиентских приложений. Чтобы определить, является ли пользователь проверку подлинности для служб клиентских приложений, вы должны также убедитесь, что <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> свойство имеет значение «ClientForms». Дополнительные сведения см. в разделе <xref:System.Web.ClientServices.ClientFormsIdentity> Общие сведения о классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать это свойство через <xref:System.Security.Principal.IIdentity> ссылкой, чтобы определить ли в настоящее время проверки подлинности пользователя для служб клиентских приложений. В этом примере предполагается, что приложение находится в конфигурации по умолчанию, где пользователи не требуется выполнить вход еще раз файла cookie проверки подлинности истечения срока действия. В противном случае <xref:System.Net.WebException> может означать, что имя входа пользователя истек. Дополнительные сведения см. в разделе [Практическое руководство. Настройка служб клиентских приложений](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя пользователя.</summary>
        <value>Имя пользователя.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает поставщика участия, используемого для проверки подлинности пользователя.</summary>
        <value>Поставщик членства, используемый для проверки подлинности пользователя.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevalidateUser">
      <MemberSignature Language="C#" Value="public void RevalidateUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevalidateUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevalidateUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevalidateUser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет проверку подлинности пользователя без уведомления, используя кэшированные учетные данные.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При использовании проверки подлинности форм для проверки текущего пользователя, <xref:System.Web.ClientServices.ClientFormsIdentity> класс хранит учетные данные пользователя при условии, что приложение запущено. Однако только проверку подлинности пользователя, до истечения срока действия файла cookie проверки подлинности. После истечения срока действия файла cookie, пользователь должен повторно проверить, для доступа к удаленным ролям или службам веб-параметров. Можно использовать **Дополнительные параметры служб** диалоговое окно «», чтобы настроить приложение на автоматическую повторную проверку подлинности пользователя, как описано в [как: Настройка служб клиентских приложений](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md). Тем не менее, при настройке приложения соблюдать срок действия файла cookie, вы можно программным путем повторной проверки пользователя путем вызова <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> метод. Этот метод полезен также при переключении из автономного режима в оперативный режим, так как приложение было завершение вниз время вне сети.  
  
> [!NOTE]
>  Метод <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> предназначен исключительно для удобства. Поскольку у него отсутствуют возвращаемые значения, с его помощью нельзя выявлять ошибки при повторных проверках подлинности. Ошибка проверки подлинности может возникнуть, например, при изменении учетных данных пользователя на сервере. В этом случае вы можете использовать код, с помощью которого после ошибок вызова служб будет выполняться явная проверка подлинности пользователей. Дополнительные сведения см. в разделе веб-доступ к параметрам раздела [Пошаговое руководство: использование служб клиентских приложений](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование этого метода для повторной проверки пользователя без вмешательства пользователя при выходе приложения из состояния автономной работы. В этом примере <xref:System.Windows.Forms.CheckBox.CheckedChanged> обработчик событий обновляет автономное состояние, в соответствии со значением "флажок". Если пользователь устанавливает приложение в оперативный режим, обработчик событий попыток для повторной проверки пользователя. Тем не менее если сервер проверки подлинности недоступен, обработчик события возвращает приложение в автономный режим.  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.ConnectivityStatus" />
        <altmember cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" />
      </Docs>
    </Member>
  </Members>
</Type>