<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37a3148889c3b14f07bc04c2fad9bdab14236993" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36404979" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <TypeSignature Language="F#" Value="type BuildProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8a4c5-101">Определяет набор свойств и методов для создания исходного кода в среде построения ASP.NET.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a4c5-101">Defines a set of properties and methods for generating source code within the ASP.NET build environment.</span>
      </span>
      <span data-ttu-id="8a4c5-102">Это абстрактный класс.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a4c5-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-103">Используется в среде построения ASP.NET <xref:System.Web.Compilation.BuildProvider> объектов для создания исходного кода для различных типов файлов в приложении.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-103">The ASP.NET build environment uses <xref:System.Web.Compilation.BuildProvider> objects to generate source code for different file types within an application.</span></span> <span data-ttu-id="8a4c5-104">Классы, производные от <xref:System.Web.Compilation.BuildProvider> преимущественно предоставляется исходный код для файлов, веб-страниц, ресурсов и других настраиваемых элементов.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-104">Classes derived from <xref:System.Web.Compilation.BuildProvider> predominantly provide source code for files, Web pages, resources, and other custom items.</span></span>  
  
 <span data-ttu-id="8a4c5-105">Как правило, не следует создавать экземпляр <xref:System.Web.Compilation.BuildProvider> напрямую.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-105">Typically, you do not create an instance of the <xref:System.Web.Compilation.BuildProvider> class directly.</span></span> <span data-ttu-id="8a4c5-106">Вместо этого при реализации класса, производного от <xref:System.Web.Compilation.BuildProvider>и настройте <xref:System.Web.Compilation.BuildProvider> среду сборки реализации для использования в ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-106">Instead, you implement a class that derives from <xref:System.Web.Compilation.BuildProvider>, and configure the <xref:System.Web.Compilation.BuildProvider> implementation for use within the ASP.NET build environment.</span></span>  
  
 <span data-ttu-id="8a4c5-107">Экземпляры <xref:System.Web.Compilation.BuildProvider> класса используются с <xref:System.Web.Compilation.AssemblyBuilder> объектов для построения одного или нескольких файлов в скомпилированной сборке.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-107">Instances of the <xref:System.Web.Compilation.BuildProvider> class are used with <xref:System.Web.Compilation.AssemblyBuilder> objects to build one or more files into a compiled assembly.</span></span> <span data-ttu-id="8a4c5-108">Объект <xref:System.Web.Compilation.BuildProvider> экземпляр создает исходный код на соответствующем языке для отдельных файлов и <xref:System.Web.Compilation.AssemblyBuilder> объекта объединяет источника, внесенные каждым <xref:System.Web.Compilation.BuildProvider> экземпляра в одну сборку.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-108">A <xref:System.Web.Compilation.BuildProvider> instance generates source code in the appropriate language for individual files, and the <xref:System.Web.Compilation.AssemblyBuilder> object combines the source contributed by each <xref:System.Web.Compilation.BuildProvider> instance into a single assembly.</span></span>  
  
 <span data-ttu-id="8a4c5-109">В среде построения ASP.NET используется экземпляров <xref:System.Web.Compilation.BuildProvider> класс, чтобы создать файлы в приложении.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-109">The ASP.NET build environment uses instances of the <xref:System.Web.Compilation.BuildProvider> class to build files within an application.</span></span> <span data-ttu-id="8a4c5-110"><xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> Свойство <xref:System.Web.Compilation.BuildProvider> класс указывает путь к файлу для сборки.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-110">The <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property of the <xref:System.Web.Compilation.BuildProvider> class indicates the path of the file to be built.</span></span> <span data-ttu-id="8a4c5-111">Расширение файла для каждого файла в приложении сопоставляется соответствующему поставщику построения.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-111">The file extension of each file within an application is mapped to a corresponding build provider.</span></span> <span data-ttu-id="8a4c5-112">Среда построения ASP.NET инициализирует <xref:System.Web.Compilation.BuildProvider> экземпляра для каждого файла на основании расширение файла и использует <xref:System.Web.Compilation.BuildProvider> методы для создания исходного кода для файла.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-112">The ASP.NET build environment initializes a <xref:System.Web.Compilation.BuildProvider> instance for each file based on the file extension, and uses the <xref:System.Web.Compilation.BuildProvider> methods to generate source code for the file.</span></span> <span data-ttu-id="8a4c5-113">Передает в среде построения ASP.NET <xref:System.Web.Compilation.AssemblyBuilder> объекта на основе компилятора предпочтительный язык и контекст файла для <xref:System.Web.Compilation.BuildProvider> методов при построении сборки из одного или нескольких файлов, чтобы <xref:System.Web.Compilation.BuildProvider> могут способствовать экземпляра исходный код для своего файла для общей сборки.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-113">The ASP.NET build environment passes an <xref:System.Web.Compilation.AssemblyBuilder> object based on the preferred compiler language and the context of the file to the <xref:System.Web.Compilation.BuildProvider> methods when building an assembly from one or more files, so that the <xref:System.Web.Compilation.BuildProvider> instance can contribute source code for its file to the overall assembly.</span></span>  
  
 <span data-ttu-id="8a4c5-114">Для определения настраиваемого построения действий для типа файлов в приложении ASP.NET, должен быть производным от класса <xref:System.Web.Compilation.BuildProvider>, реализовать члены в производном классе для создания типа файла и настроить поставщика построения для соответствующего расширения файла в файле конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-114">To define custom build actions for a file type within an ASP.NET application, you must derive a class from <xref:System.Web.Compilation.BuildProvider>, implement members within the derived class for building the file type, and configure the build provider for the corresponding file extension within the application configuration file.</span></span>  
  
 <span data-ttu-id="8a4c5-115">Указывает расширение файла для поддерживаемых файлов и поддерживает ли поставщик компоновки файлов кода, веб-файлы, файлы ресурсов или все файлы.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-115">The  specifies the file extension for supported files, and whether the build provider supports code files, Web files, resource files or all files.</span></span> <span data-ttu-id="8a4c5-116">Используйте `type` атрибут, чтобы указать полное имя типа реализации поставщика построения.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-116">Use the `type` attribute to specify the fully qualified type name of the build provider implementation.</span></span> <span data-ttu-id="8a4c5-117">Используйте <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> класс, чтобы указать, применяется ли поставщик построения для файлов в каталоге App_Code, файлы в каталоге веб-содержимого, на глобальные или локальные ресурсы или ко всем файлам.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-117">Use the <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> class to specify whether the build provider applies to files in the App_Code directory, to files in a Web content directory, to global or local resources, or to all files.</span></span> <span data-ttu-id="8a4c5-118">Используйте `extension` атрибут, чтобы указать расширение файла, используемое для идентификации файлов, в которой <xref:System.Web.Compilation.BuildProvider> поддерживает класс.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-118">Use the `extension` attribute to specify the file extension used to identify files that the <xref:System.Web.Compilation.BuildProvider> class supports.</span></span> <span data-ttu-id="8a4c5-119">Используйте <xref:System.Web.Configuration.BuildProviderCollection> классе, чтобы проверять построения поставщиков в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-119">Use the <xref:System.Web.Configuration.BuildProviderCollection> class to examine build providers in a configuration file.</span></span> <span data-ttu-id="8a4c5-120">Дополнительные сведения о настройке поставщика построения см. в разделе [buildProviders элемент для компиляции (схема параметров ASP.NET)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span><span class="sxs-lookup"><span data-stu-id="8a4c5-120">For more information about configuring a build provider, see [buildProviders Element for compilation (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 <span data-ttu-id="8a4c5-121">Для реализации поставщика построения, который создает исходный код для пользовательского типа файлов, создайте класс, производный от <xref:System.Web.Compilation.BuildProvider>и Переопределите <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> метод для создания исходного кода для поддерживаемый тип файлов.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-121">To implement a build provider that generates source code for a custom file type, derive a class from <xref:System.Web.Compilation.BuildProvider>, and override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the supported file type.</span></span> <span data-ttu-id="8a4c5-122">Созданный источник добавляется <xref:System.Web.Compilation.AssemblyBuilder> объекта в форме графа CodeDOM или как содержимое, которое представляет файл физического исходного кода.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-122">The generated source is added to the <xref:System.Web.Compilation.AssemblyBuilder> object in the form of a CodeDOM graph, or as content that represents a physical source code file.</span></span> <span data-ttu-id="8a4c5-123">Если поставщик построения требует конкретного языка программирования, переопределите <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> возвращаемое свойство <xref:System.Web.Compilation.CompilerType> объекта для поддерживаемого языка программирования.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-123">If the build provider requires a specific programming language, override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to return a <xref:System.Web.Compilation.CompilerType> object for the supported programming language.</span></span> <span data-ttu-id="8a4c5-124">Если поставщик построения не требует конкретного языка программирования, не переопределяйте <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> свойство; используйте реализацию базового класса, который указывает, что поставщик построения может использовать любой язык платформы .NET Framework, например Visual Basic или C#.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-124">If the build provider does not require a specific programming language, do not override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property; use the base class implementation, which indicates that the build provider can use any .NET Framework language, such as Visual Basic or C#.</span></span>  
  
 <span data-ttu-id="8a4c5-125">Для реализации поставщика построения, который создает исходный код для веб-содержимого, создайте класс, производный от <xref:System.Web.Compilation.BuildProvider> и Переопределите <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> метод для возврата <xref:System.Type> для класс, созданный программой <xref:System.Web.Compilation.BuildProvider>.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-125">To implement a build provider that generates source code for Web content, derive a class from <xref:System.Web.Compilation.BuildProvider> and override the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method to return the <xref:System.Type> for the class generated by <xref:System.Web.Compilation.BuildProvider>.</span></span> <span data-ttu-id="8a4c5-126">Переопределить <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> метод для создания исходного кода для типа, указанный в файле поддерживаемых.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-126">Override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the type provided by the supported file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a4c5-127">Добавление настраиваемый <xref:System.Web.Compilation.BuildProvider> класс в файл Web.config работает в веб-узла ASP.NET, но не работает в проекте приложения ASP.NET Web.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-127">Adding a customized <xref:System.Web.Compilation.BuildProvider> class to the Web.config file works in an ASP.NET Web site but does not work in an ASP.NET Web application project.</span></span> <span data-ttu-id="8a4c5-128">В проект веб-приложения, код, созданный <xref:System.Web.Compilation.BuildProvider> класс не может быть включен в приложении.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-128">In a Web application project, the code that is generated by the <xref:System.Web.Compilation.BuildProvider> class cannot be included in the application.</span></span> <span data-ttu-id="8a4c5-129">Дополнительные сведения см. в разделе [Обзор предварительной компиляции веб-приложения ASP.NET проектов](http://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).</span><span class="sxs-lookup"><span data-stu-id="8a4c5-129">For more information, see [ASP.NET Web Application Project Precompilation Overview](http://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a4c5-130">В следующем примере кода показан простой построения реализации поставщика, наследующий от абстрактного <xref:System.Web.Compilation.BuildProvider> базового класса.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-130">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="8a4c5-131">Поставщик построения переопределяет <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, и <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> членов базового класса.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-131">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span> <span data-ttu-id="8a4c5-132">Пример не включает реализацию `SampleClassGenerator` класса.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-132">The example does not include the implementation of the `SampleClassGenerator` class.</span></span> <span data-ttu-id="8a4c5-133">Дополнительные сведения см. в разделе <xref:System.CodeDom.CodeCompileUnit> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-133">For more information, see the <xref:System.CodeDom.CodeCompileUnit> class overview.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a4c5-134">Инициализирует новый экземпляр класса <see cref="T:System.Web.Compilation.BuildProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-134">Initializes a new instance of the <see cref="T:System.Web.Compilation.BuildProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-135">Поскольку <xref:System.Web.Compilation.BuildProvider> класс является абстрактным, не удается создать экземпляр <xref:System.Web.Compilation.BuildProvider> напрямую с помощью конструктора.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-135">Because the <xref:System.Web.Compilation.BuildProvider> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.BuildProvider> directly using the constructor.</span></span>  
  
 <span data-ttu-id="8a4c5-136">При наследовании от <xref:System.Web.Compilation.BuildProvider> класса и переопределить методы конструктор, чтобы реализовать настраиваемые операции инициализации для реализации поставщика построения.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-136">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, override the constructor to implement custom initialization actions for your build provider implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeCompilerType : System.Web.Compilation.CompilerType" Usage="System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a4c5-137">Представляет тип компилятора, используемый поставщиком построения для создания исходного кода для пользовательского типа файлов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-137">Represents the compiler type used by a build provider to generate source code for a custom file type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a4c5-138">Доступный только для чтения объект <see cref="T:System.Web.Compilation.CompilerType" />, представляющий генератор кода, компилятор кода и параметры компилятора, с помощью которых осуществляется построение исходного кода для виртуального пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-138">A read-only <see cref="T:System.Web.Compilation.CompilerType" /> representing the code generator, code compiler, and compiler settings used to build source code for the virtual path.</span>
          </span>
          <span data-ttu-id="8a4c5-139">Базовый класс возвращает значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-139">The base class returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-140">Используйте <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> свойство, чтобы предоставить параметры для компиляции исходного кода для реализации <xref:System.Web.Compilation.BuildProvider>.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-140">Use the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to provide the settings for compiling source code for an implementation of <xref:System.Web.Compilation.BuildProvider>.</span></span> <span data-ttu-id="8a4c5-141"><xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> Свойство `null` Если поставщик построения не требуется определенный код языка для создания и компиляции исходного кода.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-141">The <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property is `null` if the build provider does not require a specific code language for generating and compiling source code.</span></span>  
  
 <span data-ttu-id="8a4c5-142">Чтобы задать значение для <xref:System.Web.Compilation.CompilerType> объекта в реализации поставщика сборки, используйте <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> или <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-142">To set the value for a <xref:System.Web.Compilation.CompilerType> object within a build provider implementation, use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> or <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method.</span></span>  
  
 <span data-ttu-id="8a4c5-143"><xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> Свойство указывает <xref:System.CodeDom.Compiler.CodeDomProvider> реализацию, которая используется для создания и компиляции исходного кода для поставщика компоновки.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-143">The <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> property specifies the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation that is used to generate and compile source code for a build provider.</span></span> <span data-ttu-id="8a4c5-144"><xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> Свойство определяет параметры, которые используются для компиляции исходного кода в сборку.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-144">The <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> property defines the settings that are used to compile the source code into an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a4c5-145">В следующем примере кода показан простой построения реализации поставщика, наследующий от абстрактного <xref:System.Web.Compilation.BuildProvider> базового класса.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-145">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="8a4c5-146">Поставщик построения переопределяет <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, и <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> членов базового класса.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-146">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit&#xA;override this.GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit" Usage="buildProvider.GenerateCode assemblyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder">
          <span data-ttu-id="8a4c5-147">Построитель сборок, который ссылается на исходный код, созданный поставщиком компоновки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-147">The assembly builder that references the source code generated by the build provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a4c5-148">Формирует исходный код для виртуального пути поставщика компоновки и добавляет исходный код в заданный построитель сборок.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-148">Generates source code for the virtual path of the build provider, and adds the source code to a specified assembly builder.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-149">Для реализации поставщика построения, который создает исходный код для пользовательского типа файлов, создайте класс, производный от <xref:System.Web.Compilation.BuildProvider> класса и переопределить <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> метод для создания исходного кода для поддерживаемый тип файлов.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-149">To implement a build provider that generates source code for a custom file type, derive a class from the <xref:System.Web.Compilation.BuildProvider> class, and override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the supported file type.</span></span>  
  
 <span data-ttu-id="8a4c5-150">Как правило, сборки поставщика <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> реализацию операции чтения <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> , анализирует содержимое и добавляет созданный исходный код в заданный <xref:System.Web.Compilation.AssemblyBuilder> объекта.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-150">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object.</span></span> <span data-ttu-id="8a4c5-151">Исходный код может влиять на сборки в виде <xref:System.IO.TextWriter> объект или граф CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-151">You can contribute source code to the assembly in the form of a <xref:System.IO.TextWriter> object or a CodeDOM graph.</span></span> <span data-ttu-id="8a4c5-152">Добавление исходного кода для сборки с помощью <xref:System.IO.TextWriter> , используйте <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-152">To add source code to the assembly through a <xref:System.IO.TextWriter> object, use the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span> <span data-ttu-id="8a4c5-153">Добавление исходного кода из графа CodeDOM в сборку, используйте <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-153">To add source code in a CodeDOM graph to the assembly, use the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method.</span></span>  
  
 <span data-ttu-id="8a4c5-154">Если поставщик построения создает исходный код на конкретном языке программирования, необходимо переопределить <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> возвращаемое свойство <xref:System.Web.Compilation.CompilerType> объекта для поддерживаемого языка программирования.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-154">If the build provider generates source code in a specific programming language, you must override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to return a <xref:System.Web.Compilation.CompilerType> object for the supported programming language.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a4c5-155">В следующем примере кода показан простой построения реализации поставщика, наследующий от абстрактного <xref:System.Web.Compilation.BuildProvider> базового класса.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-155">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="8a4c5-156">Поставщик построения переопределяет <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, и <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> членов базового класса.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-156">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit" Usage="buildProvider.GetCodeCompileUnit linePragmasTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable">
          <span data-ttu-id="8a4c5-157">При возвращении этого метода в нем содержится словарь, в котором перечислены все соответствующие номера и директивы pragma строк исходного кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-157">When this method returns, contains a dictionary that contains all associated line numbers and line pragmas of the source code.</span>
          </span>
          <span data-ttu-id="8a4c5-158">Этот параметр передается неинициализированным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-158">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a4c5-159">Представляет контейнер для созданного графа CodeDOM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-159">Represents the container for the generated CodeDOM graph.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a4c5-160">Контейнер для графа CodeDOM, созданного экземпляром <see cref="T:System.Web.Compilation.BuildProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-160">The container for the CodeDOM graph that is generated by the <see cref="T:System.Web.Compilation.BuildProvider" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-161">Этот метод можно использовать через <xref:System.Web.Compilation.ClientBuildManager> класса конструктор и выделение синтаксиса поддерживается в Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-161">This method can be used through the <xref:System.Web.Compilation.ClientBuildManager> class for syntax highlighting and designer support in Visual Studio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string&#xA;override this.GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string" Usage="buildProvider.GetCustomString results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="8a4c5-162">Результат компиляции для виртуального пути поставщика компоновки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-162">The compilation results for the build provider's virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a4c5-163">Создает строку, которая должна быть сохранена в скомпилированной сборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-163">Generates a string to be persisted in the compiled assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a4c5-164">Строка, которую необходимо сохранить в среде построения, или значение <see langword="null" />, если в экземпляре <see cref="T:System.Web.Compilation.BuildProvider" /> не реализуется метод <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-164">A string to be persisted in the build environment, or <see langword="null" /> if the <see cref="T:System.Web.Compilation.BuildProvider" /> instance does not implement <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-165"><xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> Метод <xref:System.Web.Compilation.BuildManager> создает экземпляр поставщика построения для виртуального входного пути и вызовы <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> метод <xref:System.Web.Compilation.BuildProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-165">The <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> method of a <xref:System.Web.Compilation.BuildManager> object creates an instance of a build provider for an input virtual path, and calls the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method on the <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="8a4c5-166">Базовый <xref:System.Web.Compilation.BuildProvider> возвращает `null` для <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> метода, указывает, что <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> не реализован.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-166">The base <xref:System.Web.Compilation.BuildProvider> class returns `null` for the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method, indicating that <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> is not implemented.</span></span>  
  
 <span data-ttu-id="8a4c5-167">Некоторые особенности реализации поставщика построения можно реализовать <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> вместо <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-167">Certain build provider implementations can implement <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> in place of the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method.</span></span> <span data-ttu-id="8a4c5-168">Объект <xref:System.Web.Compilation.BuildProvider> объект обычно использует <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> для возврата <xref:System.Type> объекта для виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-168">A <xref:System.Web.Compilation.BuildProvider> object typically uses <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> to return a <xref:System.Type> object for a virtual path.</span></span> <span data-ttu-id="8a4c5-169">Тем не менее <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> метод может использоваться для указания того, что <xref:System.Web.Compilation.BuildProvider> объект можно создать несколько типов из виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-169">However, the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method can be used to indicate that a <xref:System.Web.Compilation.BuildProvider> object can generate multiple types from a virtual path.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerType : unit -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a4c5-170">Возвращает параметры компилятора для языка приложения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-170">Returns the compiler settings for the default language in the application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a4c5-171">Класс <see cref="T:System.Web.Compilation.CompilerType" />, который представляет параметры компилятора для языка приложения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-171">A <see cref="T:System.Web.Compilation.CompilerType" /> that represents the compiler settings for the default language in the application.</span>
          </span>
          <span data-ttu-id="8a4c5-172">Базовый класс возвращает компилятор по умолчанию, исходя из файла конфигурации приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-172">The base class returns the default compiler based on the application configuration file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-173">Используйте <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> метод для проверки типа компилятор по умолчанию для поставщика компоновки.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-173">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> method to examine the default compiler type for a build provider.</span></span> <span data-ttu-id="8a4c5-174">Используйте <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> метод выяснить тип компилятора, настроенные в поставщик построения для имени конкретного языка.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-174">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method to examine the compiler type configured in a build provider for a specific language name.</span></span>  
  
 <span data-ttu-id="8a4c5-175">Базовый <xref:System.Web.Compilation.BuildProvider> класс определяет тип компилятора по умолчанию с помощью `defaultLanguage` атрибута значение в разделе файла конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-175">The base <xref:System.Web.Compilation.BuildProvider> class determines the default compiler type using the `defaultLanguage` attribute value in the  section of the application configuration file.</span></span> <span data-ttu-id="8a4c5-176">Если параметр языка по умолчанию в разделе компиляции отсутствует, тип компилятора по умолчанию задается с помощью <xref:Microsoft.VisualBasic.VBCodeProvider> поставщика языка.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-176">If there is no default language setting in the compilation section, the default compiler type is set using the <xref:Microsoft.VisualBasic.VBCodeProvider> language provider.</span></span>  
  
 <span data-ttu-id="8a4c5-177">При наследовании от <xref:System.Web.Compilation.BuildProvider> , можно использовать <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> для задания <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> свойство в вашей реализации.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-177">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, you can use <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> to set the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property within your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerTypeForLanguage : string -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerTypeForLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="8a4c5-178">Имя языка кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-178">A code language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a4c5-179">Возвращает параметры компилятора для поставщика построения, исходя из заданного языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-179">Returns the compiler settings for the build provider based on the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a4c5-180">Класс <see cref="T:System.Web.Compilation.CompilerType" />, который представляет параметры компилятора для поставщика построения, исходя из заданного языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-180">A <see cref="T:System.Web.Compilation.CompilerType" /> that represents the compiler settings for the build provider based on the specified language.</span>
          </span>
          <span data-ttu-id="8a4c5-181">Базовый класс возвращает для языка параметры компилятор по умолчанию, исходя из файла конфигурации приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-181">The base class returns the default compiler settings for the language based on the application configuration file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-182">Используйте <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> метод выяснить тип компилятора, настроенные в поставщик построения для имени конкретного языка.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-182">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method to examine the compiler type configured in the build provider for a specific language name.</span></span> <span data-ttu-id="8a4c5-183">Используйте <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> метод для проверки типа компилятор по умолчанию для поставщика компоновки.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-183">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> method to examine the default compiler type for a build provider.</span></span>  
  
 <span data-ttu-id="8a4c5-184">Базовый <xref:System.Web.Compilation.BuildProvider> класс определяет тип компилятора по умолчанию с помощью <xref:System.Web.Configuration.Compiler> элементов в <xref:System.Web.Configuration.CompilationSection.Compilers%2A> свойство <xref:System.Web.Configuration.CompilationSection> объекта для файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-184">The base <xref:System.Web.Compilation.BuildProvider> class determines the default compiler type using the <xref:System.Web.Configuration.Compiler> elements in the <xref:System.Web.Configuration.CompilationSection.Compilers%2A> property of the <xref:System.Web.Configuration.CompilationSection> object for the configuration file.</span></span> <span data-ttu-id="8a4c5-185">Это эквивалентно проверки элементов и элементов в разделы файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-185">This is equivalent to examining the  elements in the  and the  elements in the  sections of the configuration file.</span></span> <span data-ttu-id="8a4c5-186">Например, для `language` значение VB, метод базового класса возвращает <xref:System.Web.Compilation.CompilerType> объект, соответствующий настроенных параметров для экземпляра <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-186">For example, for the `language` value VB, the base class method returns a <xref:System.Web.Compilation.CompilerType> object that corresponds to the configured settings for an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8a4c5-187">При наследовании от <xref:System.Web.Compilation.BuildProvider> , можно использовать <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> присвоить <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> значение свойства для языка, поддерживаемого реализацией.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-187">When you derive from the <xref:System.Web.Compilation.BuildProvider> class, you can use <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> to set the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property value for the language supported by your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a4c5-188">Свойство <paramref name="language" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-188">
              <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="8a4c5-189">Параметр <paramref name="language" /> не соответствует компилятору, настроенному для данного поставщика построения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-189">
              <paramref name="language" /> does not match a configured compiler for the build provider.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type&#xA;override this.GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type" Usage="buildProvider.GetGeneratedType results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="8a4c5-190">Результат компиляции для виртуального пути поставщика компоновки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-190">The compilation results for the build provider's virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a4c5-191">Возвращает тип, сформированный поставщиком построения на основе виртуального пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-191">Returns a type generated by the build provider from the virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a4c5-192">Тип, сформированный поставщиком построения для виртуального пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-192">The type that is generated by the build provider for the virtual path.</span>
          </span>
          <span data-ttu-id="8a4c5-193">Базовый класс возвращает значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-193">The base class returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-194">Для реализации поставщика построения, который создает исходный код для веб-содержимого, например ASPX-файлы, создайте класс, производный от <xref:System.Web.Compilation.BuildProvider> класса и переопределить <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> метод возвращать тип, сформированный поставщиком построения.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-194">To implement a build provider that generates source code for Web content such as .aspx files, derive a class from the <xref:System.Web.Compilation.BuildProvider> class and override the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method to return the type generated by the build provider.</span></span>  
  
 <span data-ttu-id="8a4c5-195">Системе построения ASP.NET компилирует файлы для каждого поставщика компоновки и приводит к возникновению ошибки <xref:System.CodeDom.Compiler.CompilerResults> объекта, который передается <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-195">The ASP.NET build system compiles files for each build provider, and generates a <xref:System.CodeDom.Compiler.CompilerResults> object, which is passed to the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method.</span></span> <span data-ttu-id="8a4c5-196">Как правило, сборки поставщика <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> реализация использует <xref:System.Reflection.Assembly.GetType%2A> метод <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> входных данных `results` предоставленный тип возвращаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-196">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> implementation uses the <xref:System.Reflection.Assembly.GetType%2A> method on the <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> property of the input `results` object to return the provided type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags&#xA;override this.GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags" Usage="buildProvider.GetResultFlags results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="8a4c5-197">Результат компиляции для виртуального пути поставщика компоновки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-197">The compilation results for the build provider's virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a4c5-198">Возвращает значение, определяющее действия, которые необходимо выполнить после построения виртуального пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-198">Returns a value indicating actions required when a virtual path is built.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a4c5-199">Значение <see cref="T:System.Web.Compilation.BuildProviderResultFlags" />, указывающее, какие действия необходимо выполнить после построения виртуального пути в среде построения ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-199">A <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> value indicating actions required after the virtual path is built within the ASP.NET build environment.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-200"><xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> Метод используется в среде построения ASP.NET при использовании экземпляров <xref:System.Web.Compilation.BuildProvider> класс для построения файлов и загрузки скомпилированных сборках.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-200">The <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method is used by the ASP.NET build environment when using instances of the <xref:System.Web.Compilation.BuildProvider> class to build files and load the compiled assemblies.</span></span>  
  
 <span data-ttu-id="8a4c5-201">Базовый <xref:System.Web.Compilation.BuildProvider> возвращает метод <xref:System.Web.Compilation.BuildProviderResultFlags.Default> поле значение, указывающее, что никаких специальных действий построения виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-201">The base <xref:System.Web.Compilation.BuildProvider> class method returns the <xref:System.Web.Compilation.BuildProviderResultFlags.Default> field value, indicating that no special action is required when the virtual path is built.</span></span>  
  
 <span data-ttu-id="8a4c5-202">При наследовании от <xref:System.Web.Compilation.BuildProvider> , можно реализовать <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> метода для возвращения другого <xref:System.Web.Compilation.BuildProviderResultFlags> значение для пользовательского типа файлов или виртуальный путь.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-202">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, you can implement the <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method to return a different <xref:System.Web.Compilation.BuildProviderResultFlags> value for your custom file type or virtual path.</span></span> <span data-ttu-id="8a4c5-203">Например, если повторное создание виртуального пути требует содержащий <xref:System.AppDomain> объекта перезагрузки, можно вернуть <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> значение перечисления из вашего <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-203">For example, if a rebuild of your virtual path requires the containing <xref:System.AppDomain> object to be reloaded, you can return the <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> enumeration value from your <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a4c5-204">Открывает средство чтения текста для считывания данных из виртуального пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-204">Opens a text reader for reading from a virtual path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberSignature Language="F#" Value="member this.OpenReader : unit -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a4c5-205">Открывает средство чтения текста для считывания данных из виртуального пути к текущему объекту поставщика построения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-205">Opens a text reader for reading from the virtual path of the current build provider object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a4c5-206">Открытый объект <see cref="T:System.IO.TextReader" />, с помощью которого можно считать содержимое свойства <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-206">An open <see cref="T:System.IO.TextReader" /> that can be used to read the contents of the <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-207">Используйте <xref:System.IO.TextReader.Read%2A> метод в возвращенном <xref:System.IO.TextReader> объекта для чтения содержимого <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> свойство <xref:System.Web.Compilation.BuildProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-207">Use the <xref:System.IO.TextReader.Read%2A> method on the returned <xref:System.IO.TextReader> object to read the contents of the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property for a <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="8a4c5-208">После вызова метода <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> метода, необходимо использовать <xref:System.IO.TextReader.Close%2A> метод закрытия <xref:System.IO.TextReader> объекта и освободить ресурсы системы.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-208">After calling the <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> method, you must use the <xref:System.IO.TextReader.Close%2A> method to close the <xref:System.IO.TextReader> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenReader : string -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="8a4c5-209">Виртуальный путь для считывания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-209">The virtual path to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a4c5-210">Открывает средство чтения текста для считывания данных из заданного виртуального пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-210">Opens a text reader for reading from a specified virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a4c5-211">Открытый объект <see cref="T:System.IO.TextReader" />, который можно использовать для считывания содержимого заданного виртуального пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-211">An open <see cref="T:System.IO.TextReader" /> that can be used to read the contents of the specified virtual path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-212">Используйте <xref:System.IO.TextReader.Read%2A> метод в возвращенном <xref:System.IO.TextReader> объект для чтения содержимого виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-212">Use the <xref:System.IO.TextReader.Read%2A> method on the returned <xref:System.IO.TextReader> object to read the contents of the virtual path.</span></span>  
  
 <span data-ttu-id="8a4c5-213">После вызова метода <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> метода, необходимо использовать <xref:System.IO.TextReader.Close%2A> метод закрытия <xref:System.IO.TextReader> объекта и освободить ресурсы системы.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-213">After calling the <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> method, you must use the <xref:System.IO.TextReader.Close%2A> method to close the <xref:System.IO.TextReader> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a4c5-214">Открывает поток для считывания данных из виртуального пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-214">Opens a stream for reading from a virtual path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberSignature Language="F#" Value="member this.OpenStream : unit -&gt; System.IO.Stream" Usage="buildProvider.OpenStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a4c5-215">Открывает поток для считывания данных из виртуального пути к текущему объекту поставщика построения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-215">Opens a stream for reading the virtual path of the current build provider object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a4c5-216">Открытый объект <see cref="T:System.IO.Stream" />, с помощью которого можно считать содержимое свойства <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-216">An open <see cref="T:System.IO.Stream" /> that can be used to read the contents of the <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-217">Используйте <xref:System.IO.Stream.Read%2A> метод в возвращенном <xref:System.IO.Stream> объект для чтения содержимого виртуальный путь для <xref:System.Web.Compilation.BuildProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-217">Use the <xref:System.IO.Stream.Read%2A> method on the returned <xref:System.IO.Stream> object to read the contents of the virtual path for the <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="8a4c5-218">После вызова метода <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> метода, необходимо использовать <xref:System.IO.Stream.Close%2A> метод закрытия <xref:System.IO.Stream> объекта и освободить ресурсы системы.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-218">After calling the <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> method, you must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenStream : string -&gt; System.IO.Stream" Usage="buildProvider.OpenStream virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="8a4c5-219">Виртуальный путь для считывания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-219">The virtual path to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a4c5-220">Открывает поток для считывания данных из заданного виртуального пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-220">Opens a stream for reading from a specified virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a4c5-221">Открытый объект <see cref="T:System.IO.Stream" />, который можно использовать для считывания содержимого заданного виртуального пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-221">An open <see cref="T:System.IO.Stream" /> that can be used to read the contents of the specified virtual path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-222">Используйте <xref:System.IO.Stream.Read%2A> метод в возвращенном <xref:System.IO.Stream> объект для чтения содержимого виртуального пути.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-222">Use the <xref:System.IO.Stream.Read%2A> method on the returned <xref:System.IO.Stream> object to read the contents of the virtual path.</span></span>  
  
 <span data-ttu-id="8a4c5-223">После вызова метода <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> метода, необходимо использовать <xref:System.IO.Stream.Close%2A> метод закрытия <xref:System.IO.Stream> объекта и освободить ресурсы системы.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-223">After calling the <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> method, you must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit&#xA;override this.ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit" Usage="buildProvider.ProcessCompileErrors results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="8a4c5-224">Результаты компилятора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-224">Compiler results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a4c5-225">При переопределении в производном классе позволяет просматривать сообщения об ошибках компилятора, чтобы их можно было изменить для предоставления более подробной информации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-225">When overridden in a derived class, enables you to review compiler error messages so that you can modify them to provide more information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-226">Обычно Переопределите этот метод, чтобы ошибки компилятора можно изменить перед их отображением чтобы сделать ее более полезными для пользователя.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-226">You typically override this method so that you can modify compiler errors before they are displayed in order to make the error text more helpful to the user.</span></span> <span data-ttu-id="8a4c5-227">Это полезно в сценариях, где известно контекст определенных ошибок, можно предоставлять сведения пользователя о способах их устранения.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-227">This is useful in scenarios where you know the context of certain errors and can provide information to the user about how to fix them.</span></span> <span data-ttu-id="8a4c5-228">Исходное сообщение об ошибке компилятора обычно относятся к определенной языковой конструкции и может не предоставить фактическую причину или решения очевидные для пользователя.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-228">The original compiler error message is usually specific to a particular language construct and might not make the real cause or solution obvious to the user.</span></span>  
  
 <span data-ttu-id="8a4c5-229">Ошибки доступны с помощью <xref:System.CodeDom.Compiler.CompilerResults> объект, передаваемый в метод.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-229">You can access the errors by using the <xref:System.CodeDom.Compiler.CompilerResults> object that is passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a4c5-230">Представляет сборки для компиляции с исходным кодом, созданным поставщиком построения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-230">Represents the assemblies to compile with the source generated by the build provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a4c5-231">Доступный только для чтения набор сборок, на которые может ссылаться исходный код, созданный с помощью поставщика построения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-231">A read-only collection of assemblies that can be referenced by the source code generated by the build provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-232">Среда построения ASP.NET инициализирует коллекцию сборок, которые доступны для ссылки на поставщик построения.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-232">The ASP.NET build environment initializes the collection of assemblies that are available for reference by the build provider.</span></span> <span data-ttu-id="8a4c5-233">Исходный код, созданный поставщиком построения можно использовать открытые типы в сборках, на которую указывает ссылка.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-233">The source code generated by a build provider can use public types in the referenced assemblies.</span></span> <span data-ttu-id="8a4c5-234">Коллекция сборка состоит из других сборок, созданных в приложении ASP.NET и сборки, перечисленные в элементе файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-234">The referenced assembly collection consists of other assemblies built in the ASP.NET application, and assemblies listed in the  element in the configuration file.</span></span>  
  
 <span data-ttu-id="8a4c5-235">Если поставщик построения создает исходный код, который ссылается на дополнительные сборки, поставщик построения добавляет дополнительные сборки с помощью <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-235">If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span> <span data-ttu-id="8a4c5-236">Внешние типы во время компиляции сборки, используя указанные сборки, добавленные поставщиками построения и коллекцию сборок, доступных для использования по умолчанию устраняет среде построения ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-236">The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.</span></span>  
  
 <span data-ttu-id="8a4c5-237"><xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> Коллекция не включает сборки, которые были добавлены для ссылки с других поставщиков построения через <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-237">The <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> collection does not include assemblies that are added for reference by other build providers through the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberSignature Language="F#" Value="static member RegisterBuildProvider : string * Type -&gt; unit" Usage="System.Web.Compilation.BuildProvider.RegisterBuildProvider (extension, providerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
        <Parameter Name="providerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="8a4c5-238">Расширение имени файла, для которого предназначен поставщик построения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-238">The file-name extension that the build provider is for.</span>
          </span>
        </param>
        <param name="providerType">
          <span data-ttu-id="8a4c5-239">Класс поставщика построения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-239">The build provider class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a4c5-240">Регистрирует поставщик построения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-240">Registers a build provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-241">Этот метод можно использовать для регистрации поставщиков построения вместо определения их в файле Web.config.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-241">You can use this method to register build providers instead of defining them in the Web.config file.</span></span> <span data-ttu-id="8a4c5-242">Дополнительные сведения о поставщиках сборки см. в разделе <xref:System.Web.Compilation.BuildProvider> класса и [buildProviders элемент для компиляции (схема параметров ASP.NET)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span><span class="sxs-lookup"><span data-stu-id="8a4c5-242">For more information about build providers, see the <xref:System.Web.Compilation.BuildProvider> class and [buildProviders Element for compilation (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a4c5-243">Представляет файл, который необходимо построить с помощью данной реализации поставщика построения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-243">Represents the file to be built by this build provider implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a4c5-244">Доступная только для чтения строка, в которой задан виртуальный путь к файлу, подлежащему компиляции с помощью данного поставщика построения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-244">A read-only string that specifies the virtual path of a file to be compiled by this build provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-245">Виртуальный путь <xref:System.Web.Compilation.BuildProvider> объект — это путь к файлу, который компилируется с помощью поставщика построения.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-245">The virtual path of a <xref:System.Web.Compilation.BuildProvider> object is the path to the file that is being compiled by the build provider.</span></span> <span data-ttu-id="8a4c5-246">Например, если вы настроили пользовательский <xref:System.Web.Compilation.BuildProvider> класс для построения всех файлов в веб-сайта с помощью пользовательского расширения .abc, если веб-сайт называется WebSite1 и веб-сайт содержит файл с именем Example.abc, <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> свойство содержит значение `/WebSite1/Example.abc`.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-246">For example, if you have configured a custom <xref:System.Web.Compilation.BuildProvider> class to build all files in the Web site with the custom extension of .abc, if your Web site is named WebSite1, and the Web site contains a file named Example.abc, the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property contains the value `/WebSite1/Example.abc`.</span></span>  
  
 <span data-ttu-id="8a4c5-247">Расширение имени файла для каждого файла в приложение определяет тип файла и соответствующий поставщик построения для типа файлов.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-247">The file extension of each file within the application determines the file type, and the corresponding build provider for the file type.</span></span> <span data-ttu-id="8a4c5-248">Среда построения ASP.NET инициализирует <xref:System.Web.Compilation.BuildProvider> объекта для каждого файла на основании типа файла и использует <xref:System.Web.Compilation.BuildProvider> методы для создания источника для каждого файла.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-248">The ASP.NET build environment initializes a <xref:System.Web.Compilation.BuildProvider> object for each file based on the file type, and uses the <xref:System.Web.Compilation.BuildProvider> methods to generate source for each file.</span></span>  
  
 <span data-ttu-id="8a4c5-249">Дополнительные сведения о настройке поставщика построения см. в разделе [buildProviders элемент для компиляции (схема параметров ASP.NET)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span><span class="sxs-lookup"><span data-stu-id="8a4c5-249">For more information about configuring a build provider, see [buildProviders Element for compilation (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathDependencies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a4c5-250">Представляет коллекцию виртуальных путей, которые должны быть построены перед тем, как поставщик построения сможет создать код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-250">Represents a collection of virtual paths that must be built before the build provider generates code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a4c5-251">Доступная только для чтения коллекция строк, представляющих виртуальные пути, от которых зависит данный экземпляр поставщика построения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a4c5-251">A read-only collection of strings, representing the virtual paths that this instance of the build provider is dependent on.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a4c5-252"><xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> Свойство представляет собой коллекцию виртуальных путей, которые необходимо скомпилировать перед <xref:System.Web.Compilation.BuildProvider> экземпляр создает исходный код.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-252">The <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> property is a collection of virtual paths that must be compiled before the <xref:System.Web.Compilation.BuildProvider> instance generates source code.</span></span> <span data-ttu-id="8a4c5-253">Сборки из виртуального пути в <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> добавляются в качестве ссылки на компиляцию для <xref:System.Web.Compilation.BuildProvider> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="8a4c5-253">The assemblies from the virtual paths in <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> are added as references to the compilation for the <xref:System.Web.Compilation.BuildProvider> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>