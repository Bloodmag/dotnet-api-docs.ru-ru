<Type Name="ClientBuildManager" FullName="System.Web.Compilation.ClientBuildManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0cd137cd815791e0a41351f1d0a823bbedf0b46c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30530798" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientBuildManager : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientBuildManager extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientBuildManager&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManager sealed : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Предоставляет услуги служб компиляции для приложений ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ClientBuildManager> Класс предоставляет методы и свойства для компиляции веб-приложений ASP.NET и получения созданные сборки или созданного исходного кода. Экземпляры класса, устанавливаются в домене приложения клиента и обеспечивают доступ к системе построения ASP.NET вне Microsoft Internet Information Services (IIS). Класс может использоваться для разработки настроенных средств компиляции веб-приложений.  
  
 Средство командной строки `aspnet_compiler` использует <xref:System.Web.Compilation.ClientBuildManager> класса.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Compilation.ClientBuildManager" />.</summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">Виртуальный путь к корню приложения.</param>
        <param name="appPhysicalSourceDir">Физический путь к корню приложения.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Compilation.ClientBuildManager" /> без указанного целевого каталога или флагов предварительной компиляции.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">Виртуальный путь к корню приложения.</param>
        <param name="appPhysicalSourceDir">Физический путь к корню приложения.</param>
        <param name="appPhysicalTargetDir">Целевой каталог для предварительной компиляции.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Compilation.ClientBuildManager" /> с указанными целевым каталогом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта форма конструктора обычно используется с предварительной компиляции, как в ней задается каталог назначения предварительной компиляции.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String, parameter As ClientBuildManagerParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">Виртуальный путь к корню приложения.</param>
        <param name="appPhysicalSourceDir">Физический путь к корню приложения.</param>
        <param name="appPhysicalTargetDir">Целевой каталог для предварительной компиляции.</param>
        <param name="parameter">Значения, которыми определяется порядок предварительной компиляции.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Compilation.ClientBuildManager" /> с указанным целевым каталогом и параметром компиляции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта форма конструктора обычно используется с предварительной компиляции, как в ней задается целевой каталог и флаги такой компиляции.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter, System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter, class System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter, System::ComponentModel::TypeDescriptionProvider ^ typeDescriptionProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" />
        <Parameter Name="typeDescriptionProvider" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">Виртуальный путь к корневому каталогу приложения.</param>
        <param name="appPhysicalSourceDir">Физический путь к корневому каталогу приложения.</param>
        <param name="appPhysicalTargetDir">Целевой каталог для предварительной компиляции.</param>
        <param name="parameter">Значения, которыми определяется порядок предварительной компиляции.</param>
        <param name="typeDescriptionProvider">Используемый поставщик описания типа. Этот параметр используется, в основном, для поддержки инфраструктуры настройки для различных версий в Visual Studio. Он используется, чтобы извлекать метаданные о типах, фильтруемые на основании версии платформы .NET Framework.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Compilation.ClientBuildManager" />, используя заданный виртуальный каталог, исходный каталог, целевой каталог, параметр компиляции и поставщик описания типа.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomainShutdown">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainShutdown As BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainShutdown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении работы домена приложения.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainStarted">
      <MemberSignature Language="C#" Value="public event EventHandler AppDomainStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AppDomainStarted" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AppDomainStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при запуске домена приложения.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainUnloaded">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainUnloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainUnloaded As BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainUnloaded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при выгрузке домена приложения.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CodeGenDir">
      <MemberSignature Language="C#" Value="public string CodeGenDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeGenDir" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.CodeGenDir" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeGenDir As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeGenDir { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает физический путь к каталогу, используемому для создания кода.</summary>
        <value>В объекте <see cref="T:System.String" /> содержится путь к каталогу, используемому для создания кода.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каталог для создания кода обычно находится в каталоге временных файлов ASP.NET.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CompileApplicationDependencies">
      <MemberSignature Language="C#" Value="public void CompileApplicationDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileApplicationDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileApplicationDependencies ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileApplicationDependencies();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Компилирует связанные с приложением файлы, например файлы в каталоге App_Code, файл Global.asax, файлы ресурсов и веб-ссылки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A> Метод гарантирует компиляции ресурсов, ссылки на Web, файлы в каталоге App_Code, файлы с расширением BROWSER в каталоге App_Browsers и файл Global.asax.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompileFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Компилирует файл, представленный виртуальным путем.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Путь к файлу, который необходимо скомпилировать.</param>
        <summary>Компилирует файл, представленный виртуальным путем.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath, System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath, class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String, callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath, System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Путь к файлу, который необходимо скомпилировать.</param>
        <param name="callback">Объект для получения сведений о состоянии при компиляции.</param>
        <summary>Компилирует файл, представленный виртуальным путем и предоставляет класс обратного вызова для получения сведений о построении, связанных с состоянием.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="virtualPath" /> имеет значение null.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (Type type, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Type type, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(Type ^ type, bool failIfExists);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">Тип создаваемого объекта.</param>
        <param name="failIfExists">
          Чтобы в случае наличия в домене приложения для компиляции веб-приложений ASP.NET уже созданного объекта возникало исключение, значение <see langword="true" />; чтобы этого не происходило, значение <see langword="false" />.</param>
        <summary>Создает объект в домене приложения среды выполнения ASP.NET.</summary>
        <returns>Объект в домене приложения среды выполнения ASP.NET.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="type" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Объект в домене приложения уже существует, и значение параметра <paramref name="failIfExists" /> равно <see langword="true" />.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public string GenerateCode (string virtualPath, string virtualFileString, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GenerateCode(string virtualPath, string virtualFileString, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (virtualPath As String, virtualFileString As String, ByRef linePragmasTable As IDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateCode(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь к файлу.</param>
        <param name="virtualFileString">Содержимое файла.</param>
        <param name="linePragmasTable">Когда этот метод возвращает значение, оно содержит словарь директив стоки pragma.</param>
        <summary>Создает код на основе содержимого файла.</summary>
        <returns>Объект <see cref="T:System.String" />, содержащий созданный код.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="virtualPath" /> имеет значение null.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateCodeCompileUnit">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает дерево codeDOM, тип компилятора и параметры компилятора для файла, представленного виртуальным путем.</summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь к файлу.</param>
        <param name="codeDomProviderType">Когда этот метод возвращает значение, в нем содержится тип поставщика codeDOM, используемый для создания и компиляции кода.</param>
        <param name="compilerParameters">Когда этот метод возвращает значение, в нем содержатся свойства, которыми определяется способ компиляции файла.</param>
        <param name="linePragmasTable">Когда этот метод возвращает значение, оно содержит словарь директив стоки pragma.</param>
        <summary>Возвращает дерево codeDOM, тип компилятора и параметры компилятора для файла, представленного виртуальным путем.</summary>
        <returns>Объект <see cref="T:System.CodeDom.CodeCompileUnit" /> для заданного файла.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> Метод извлекает сведения, необходимые для компиляции файла. В дополнение к <xref:System.CodeDom.CodeCompileUnit> объекта как возвращаемое значение, он возвращает три `out` параметров. `codeDomProviderType` Параметр Возвращает тип поставщика для создания и компиляции файла. `compilerParameters` Параметр содержит свойства, которые определяют поведение компиляции. `linePragmasTable` Параметр содержит словарь директивы pragma.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, string virtualFileString, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, string virtualFileString, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, virtualFileString As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь к файлу.</param>
        <param name="virtualFileString">Содержимое файла, представленное параметром <c>virtualPath</c>.</param>
        <param name="codeDomProviderType">Когда этот метод возвращает значение, в нем содержится тип поставщика codeDOM, используемый для создания и компиляции кода.</param>
        <param name="compilerParameters">Когда этот метод возвращает управление, в нем содержатся свойства, которыми определяется способ компиляции файла, представленного параметром <c>virtualPath</c>.</param>
        <param name="linePragmasTable">Когда этот метод возвращает значение, оно содержит словарь директив стоки pragma.</param>
        <summary>Возвращает содержимое, дерево codeDOM, тип компилятора и параметры компилятора для файла, представленного виртуальным путем.</summary>
        <returns>Объект <see cref="T:System.CodeDom.CodeCompileUnit" /> для заданного файла.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> Метод извлекает сведения, необходимые для компиляции файла. В дополнение к <xref:System.CodeDom.CodeCompileUnit> объекта как возвращаемое значение, он возвращает три `out` параметров. `codeDomProviderType` Параметр Возвращает тип поставщика для создания и компиляции файла. `compilerParameters` Параметр содержит свойства, которые определяют поведение компиляции. `linePragmasTable` Параметр содержит словарь директивы pragma.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="virtualPath" /> имеет значение null.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetAppDomainShutdownDirectories">
      <MemberSignature Language="C#" Value="public string[] GetAppDomainShutdownDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAppDomainShutdownDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomainShutdownDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAppDomainShutdownDirectories();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает каталоги с файлами, которые в случае их изменения инициируют завершение работы домена приложения.</summary>
        <returns>Массив <see cref="T:System.String" />, содержащий имена каталогов верхнего уровня.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Изменения в файлах в каталогах верхнего уровня привести к завершению работы домена приложения. Файлы в ячейки, App_Code, Global_Resources, веб-ссылки и каталоги App_Browsers ведется наблюдение, чтобы обнаружить все изменения. При обнаружении изменений выполняется завершение работы домена приложения.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetBrowserDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary GetBrowserDefinitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary GetBrowserDefinitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBrowserDefinitions () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ GetBrowserDefinitions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает набор элементов браузера.</summary>
        <returns>Список <see cref="T:System.Collections.IDictionary" />, содержащий элементы браузера.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.IDictionary> Объект содержит имена браузера для ключей и <xref:System.Web.UI.Triplet> объектов для значения. <xref:System.Web.UI.Triplet> Объектов, каждый содержит имя родительского элемента браузера, описание и глубина элемента в дереве.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.BrowserCapabilitiesFactory" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeDirectoryInformation">
      <MemberSignature Language="C#" Value="public void GetCodeDirectoryInformation (string virtualCodeDir, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out string generatedFilesDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCodeDirectoryInformation(string virtualCodeDir, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] string&amp; generatedFilesDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCodeDirectoryInformation (virtualCodeDir As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef generatedFilesDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCodeDirectoryInformation(System::String ^ virtualCodeDir, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::String ^ % generatedFilesDir);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualCodeDir" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="generatedFilesDir" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualCodeDir">Каталог, сведения о котором необходимо извлечь.</param>
        <param name="codeDomProviderType">Когда этот метод возвращает значение, в нем содержится тип поставщика, используемый для создания и компиляции кода.</param>
        <param name="compilerParameters">Когда этот метод возвращает значение, в нем содержатся свойства, которыми определяется способ компиляции файла.</param>
        <param name="generatedFilesDir">Когда этот метод возвращает значение, в нем содержится каталог для файлов, созданных на основе файлов, не являющихся файлами кода.</param>
        <summary>Возвращает сведения о типе компилятора, его параметрах и каталоге, в котором должны храниться файлы кода, созданные на основе не являющихся файлами кода файлов, например .wsdl.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A> Метод извлекает сведения, необходимые для построения каталога кода. Он возвращает эту информацию посредством трех `out` параметров. `codeDomProviderType` Параметр Возвращает тип поставщика для создания и компиляции файлов в каталоге кода. `compilerParameters` Параметр содержит свойства, которые определяют поведение компиляции. `generatedFilesDir` Параметр сохраняет путь к каталогу, содержащая все файлы кода, созданному из файлов не кода в каталоге кода, например WSDL-файлы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="virtualCodeDir" /> имеет значение null.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCompiledType">
      <MemberSignature Language="C#" Value="public Type GetCompiledType (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetCompiledType(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompiledType (virtualPath As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetCompiledType(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь к файлу для компиляции.</param>
        <summary>Компилирует файл, представленный виртуальным путем, и возвращает скомпилированный тип.</summary>
        <returns>Значение объекта <see cref="T:System.Type" /> скомпилированного файла.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="virtualPath" /> имеет значение null.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCompilerParameters">
      <MemberSignature Language="C#" Value="public void GetCompilerParameters (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCompilerParameters(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCompilerParameters (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCompilerParameters(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь к файлу.</param>
        <param name="codeDomProviderType">Когда этот метод возвращает значение, в нем содержится тип поставщика, используемый для создания и компиляции кода.</param>
        <param name="compilerParameters">Когда этот метод возвращает значение, в нем содержатся свойства, которыми определяется способ компиляции файла.</param>
        <summary>Возвращает тип и параметры компилятора, используемые для построения файла, представленного виртуальным путем.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="virtualPath" /> имеет значение null.</exception>
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedFileVirtualPath">
      <MemberSignature Language="C#" Value="public string GetGeneratedFileVirtualPath (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedFileVirtualPath(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedFileVirtualPath (filePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedFileVirtualPath(System::String ^ filePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">Полный физический путь к созданному файлу.</param>
        <summary>Возвращает виртуальный путь к созданному файлу.</summary>
        <returns>Объект <see cref="T:System.String" />, содержащий виртуальный путь для параметра <paramref name="filePath" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="filePath" /> имеет значение null.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedSourceFile">
      <MemberSignature Language="C#" Value="public string GetGeneratedSourceFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedSourceFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedSourceFile (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedSourceFile(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь к файлу, который необходимо извлечь.</param>
        <summary>Возвращает для виртуального пути физический путь к созданному файлу.</summary>
        <returns>Объект <see cref="T:System.String" />, в котором для виртуального пути содержится физический путь к созданному файлу.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="virtualPath" /> имеет значение null.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetTopLevelAssemblyReferences">
      <MemberSignature Language="C#" Value="public string[] GetTopLevelAssemblyReferences (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetTopLevelAssemblyReferences(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTopLevelAssemblyReferences (virtualPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetTopLevelAssemblyReferences(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Имя и путь к конфигурации.</param>
        <summary>Возвращает массив сборок, заданных в каталоге Bin и раздел <see langword="&lt;assembly&gt;" /> файла веб-конфигурации.</summary>
        <returns>Массив <see cref="T:System.String" />, в котором содержатся пути к базам кода в каталоге Bin и раздел <see langword="&lt;assembly&gt;" /> файла веб-конфигурации.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="virtualPath" /> имеет значение null.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetVirtualCodeDirectories">
      <MemberSignature Language="C#" Value="public string[] GetVirtualCodeDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetVirtualCodeDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVirtualCodeDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetVirtualCodeDirectories();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает виртуальные пути к каталогу App_Code и его вложенным каталогам в приложении ASP.NET.</summary>
        <returns>Массив <see cref="T:System.String" />, в котором содержатся все виртуальные пути к каталогам кода приложения.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Предоставляет домену приложения бесконечное время существования, предотвращая создание аренды.</summary>
        <returns>Всегда <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> метод в базовом классе. Всегда возвращает `null` , предотвращая создание аренды, ограничивающей время существования домена приложения.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="IsCodeAssembly">
      <MemberSignature Language="C#" Value="public bool IsCodeAssembly (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsCodeAssembly(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCodeAssembly (assemblyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCodeAssembly(System::String ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">Имя сборки, которая была идентифицирована как сборка кода.</param>
        <summary>Указывает, является ли сборка сборкой кода.</summary>
        <returns>
          Если параметр <paramref name="assemblyName" /> соответствует одной из созданных сборок кода, значение <see langword="true" />, если нет, значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="assemblyName" /> имеет значение null.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="IsHostCreated">
      <MemberSignature Language="C#" Value="public bool IsHostCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHostCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.IsHostCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHostCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHostCreated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, позволяющее определить, был ли создан домен приложения для компиляции веб-приложений ASP.NET.</summary>
        <value>
          Если домен приложения для компиляции веб-приложений ASP.NET создан, значение <see langword="true" />, если нет, значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PrecompileApplication">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Осуществляет предварительную компиляцию приложения ASP.NET.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET поддерживает три формы предварительной компиляции. Одна форма позволяет компиляция приложения ASP.NET. В этой форме сайт развертывается в рабочей среде и затем предварительно компилируется, что избавляет от необходимости динамически компиляцию узла при первом посещении пользователем. Первый пользователь сайта не возникнут задержки, обычно возникает на сайте, который компилируется динамически.  
  
 Две другие формы предварительной компиляции используются для развертывания. В любой форме создается макет узла, можно развернуть на производственном компьютере. Одна из этих форм содержатся страницы разметки, поэтому некоторое количество обновления могут быть выполнены на сайте скомпилированных. Другая форма не содержит разметки страницы и, следовательно, невозможно обновить без повторной компиляции исходного узла. Нет исходного кода развертывается в целевой среде, в любом из этих форм предварительной компиляции.  
  
 Для предварительной компиляции приложения определяется через <xref:System.Web.Compilation.ClientBuildManager> конструктор. <xref:System.Web.Compilation.ClientBuildManagerParameter> Объекта <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> конструктор определяет, какой из трех форм предварительной компиляции для выполнения.  
  
 Разработчик может предварительной компиляции веб-сайта с `aspnet_compiler` средство командной строки или путем вызова <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Осуществляет предварительную компиляцию приложения ASP.NET.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET поддерживает три формы предварительной компиляции. Одна форма позволяет компиляция приложения ASP.NET. В этой форме сайт развертывается в рабочей среде и затем предварительно компилируется, что избавляет от необходимости динамически компиляцию узла при первом посещении пользователем. Первый пользователь сайта не возникнут задержки, обычно возникает на сайте, который компилируется динамически.  
  
 Две другие формы предварительной компиляции используются для развертывания. В любой форме создается макет узла, можно развернуть на производственном компьютере. Одна из этих форм содержатся страницы разметки, поэтому некоторое количество обновления могут быть выполнены на сайте скомпилированных. Другая форма не содержит разметки страницы и, следовательно, невозможно обновить без повторной компиляции исходного узла. Нет исходного кода развертывается в целевой среде, в любом из этих форм предварительной компиляции.  
  
 Для предварительной компиляции приложения определяется через <xref:System.Web.Compilation.ClientBuildManager> конструктор. <xref:System.Web.Compilation.ClientBuildManagerParameter> Объекта <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> конструктор определяет, какой из трех форм предварительной компиляции для выполнения.  
  
 Разработчик может предварительной компиляции веб-сайта с `aspnet_compiler` средство командной строки или путем вызова <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Класс <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" />, содержащий метод, который вызывается при сообщении о результате компиляции.</param>
        <summary>Выполняет предварительную компиляцию приложения ASP.NET и предоставляет метод обратного вызова для получения сведений о построении, связанных с состоянием.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET поддерживает три формы предварительной компиляции. Одна форма позволяет компиляция приложения ASP.NET. В этой форме сайт развертывается в рабочей среде и затем предварительно компилируется, что избавляет от необходимости динамически компиляцию узла при первом посещении пользователем. Первый пользователь сайта не возникнут задержки, обычно возникает на сайте, который компилируется динамически. `callback` Параметр содержит метод, вызываемый при сообщении о результате компиляции.  
  
 Две другие формы предварительной компиляции используются для развертывания. В любой форме создается макет узла, можно развернуть на производственном компьютере. Одна из этих форм содержатся страницы разметки, поэтому некоторое количество обновления могут быть выполнены на сайте скомпилированных. Другая форма не содержит разметки страницы и, следовательно, невозможно обновить без повторной компиляции исходного узла. Нет исходного кода развертывается в целевой среде, в любом из этих форм предварительной компиляции.  
  
 Для предварительной компиляции приложения определяется через <xref:System.Web.Compilation.ClientBuildManager> конструктор. <xref:System.Web.Compilation.ClientBuildManagerParameter> Объекта <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> конструктор определяет, какой из трех форм предварительной компиляции для выполнения.  
  
 Разработчик может предварительной компиляции веб-сайта с `aspnet_compiler` средство командной строки или путем вызова <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback, forceCleanBuild As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback, bool forceCleanBuild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
        <Parameter Name="forceCleanBuild" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callback">Класс <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" />, содержащий метод, который вызывается при сообщении о результате компиляции.</param>
        <param name="forceCleanBuild">
          Значение <see langword="true" /> для выполнения построения с нуля, при котором сначала удаляются все объекты и промежуточные файлы; значение <see langword="false" /> для повторного построения только тех файлов, которые были изменены. Значение true следует устанавливать, если существует возможность того, что среда построения не сможет получить зависимость</param>
        <summary>Выполняет предварительную компиляцию приложения ASP.NET, предоставляет метод обратного вызова для получения связанных с построением сведений о состоянии и указывает, нужно ли создавать построение с нуля.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET поддерживает три формы предварительной компиляции. Одна форма позволяет компиляция приложения ASP.NET. В этой форме сайт развертывается в рабочей среде и затем предварительно компилируется, что избавляет от необходимости динамически компиляцию узла при первом посещении пользователем. Первый пользователь сайта не возникнут задержки, обычно возникает на сайте, который компилируется динамически. `callback` Параметр содержит метод, вызываемый при сообщении о результате компиляции.  
  
 Две другие формы предварительной компиляции используются для развертывания. В любой форме создается макет узла, можно развернуть на производственном компьютере. Одна из этих форм содержатся страницы разметки, поэтому некоторое количество обновления могут быть выполнены на сайте скомпилированных. Другая форма не содержит разметки страницы и, следовательно, невозможно обновить без повторной компиляции исходного узла. Нет исходного кода развертывается в целевой среде, в любом из этих форм предварительной компиляции.  
  
 Для предварительной компиляции приложения определяется через <xref:System.Web.Compilation.ClientBuildManager> конструктор. <xref:System.Web.Compilation.ClientBuildManagerParameter> Объекта <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> конструктор определяет, какой из трех форм предварительной компиляции для выполнения.  
  
 Разработчик может предварительной компиляции веб-сайта с `aspnet_compiler` средство командной строки или путем вызова <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Завершает работу текущего приложения ASP.NET.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public bool Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Function Unload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Unload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выгружает домен приложения для компиляции веб-приложений ASP.NET.</summary>
        <returns>
          Если домен приложения выгружен, значение <see langword="true" />, если нет, значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>