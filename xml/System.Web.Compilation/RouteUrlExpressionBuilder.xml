<Type Name="RouteUrlExpressionBuilder" FullName="System.Web.Compilation.RouteUrlExpressionBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6b0262479054e8f9f8af899eecbd88dd6da966ae" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529218" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RouteUrlExpressionBuilder : System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteUrlExpressionBuilder extends System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.RouteUrlExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteUrlExpressionBuilder&#xA;Inherits ExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteUrlExpressionBuilder : System::Web::Compilation::ExpressionBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Compilation.ExpressionBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.RouteUrlExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.Compilation.ExpressionPrefix("Routes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Создает URL-адрес, соответствующий заданным значениям параметров URL-адреса.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.RouteUrlExpressionBuilder> Класс дает возможность задать свойства серверного элемента управления URL-адрес маршрута, предоставляя список значений параметров URL-адрес.  
  
   
  
## Examples  
 Приведенный ниже показано, как создать разметку, формирующую гиперссылку с URL-адрес, отформатированном для маршрута. Маршрут определяется с помощью `http://www.contoso.com/search/{searchterm}` как шаблон URL-адреса.  
  
```  
<asp:HyperLink ID="HyperLink1" runat="server"  
               NavigateUrl="<%$ RouteUrl:searchterm=Bicycles %>">  
  Search for Bicycles  
</asp:HyperLink>  
```  
  
 URL-адрес, созданный для данной гиперссылки будет `http://www.contoso.com/search/Bicycles`.  
  
 Если параметры URL-адреса для `RouteUrl` выражения не являются достаточными для уникальной идентификации маршрута, должны включать имя маршрута. Например, если веб-приложения имеется два `searchterm` как единственного параметра URL-адрес, маршруты бы должны быть определены с помощью имена маршрутов и разметки гиперссылка будет выглядеть примерно так:  
  
```  
<asp:HyperLink ID="HyperLink1" runat="server"  
               NavigateUrl="<%$ RouteUrl:searchterm=Bicycles,  
               routename=BasicSearchRoute %>">  
  Search for Bicycles  
</asp:HyperLink>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteUrlExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteUrlExpressionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Compilation.RouteUrlExpressionBuilder" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (target As Object, entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::Object ^ target, System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target">В данной реализации не используется.</param>
        <param name="entry">Свойство, к которому привязано выражение.</param>
        <param name="parsedData">В данной реализации не используется.</param>
        <param name="context">Свойства для элемента управления или страницы.</param>
        <summary>Создает URL-адрес, соответствующий заданным значениям параметров URL-адреса и формату URL-адреса маршрута.</summary>
        <returns>URL-адрес, соответствующий заданным значениям параметров URL-адреса и выбранному маршруту. Маршрут выбирается путем сравнения шаблонов URL маршрутов с заданным списком параметров. Если заданному списку параметров соответствует несколько маршрутов, можно также задать имя маршрута, чтобы указать маршрут для выбора.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET вызывает этот метод при обнаружении разметки выражения следующего вида:  
  
 `<%$ RouteUrl: urlparameter=value %>`  
  
 Этот метод создает соответствующий URL-адрес для указанных значений ключей маршрута для текущего <xref:System.Web.Routing.Route> объекта. Этот метод переопределяет <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> метод. Он получает от `entry` параметр ссылку на элемент управления, к которой он связан, он получает от `context` вычисляемое выражение, который вызывает <xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A> метод для создания URL-адрес.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCodeExpression (entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::CodeExpression ^ GetCodeExpression(System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry">Свойство, к которому привязано выражение.</param>
        <param name="parsedData">Объект, представляющий проанализированные данные, возвращенные методом <see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />.</param>
        <param name="context">Свойства для элемента управления или страницы.</param>
        <summary>Возвращает выражение кода, используемое для присвоения свойства в созданном классе страницы.</summary>
        <returns>Экземпляр класса <see cref="T:System.CodeDom.CodeExpression" />, используемый при присвоении значения свойству.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается при создании CodeDOM для страницы или элемента управления. <xref:System.CodeDom.CodeExpression> Возвращаемый объект представляет выражения кода, чтобы добавить назначение свойства в созданном классе страницы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public static string GetRouteUrl (System.Web.UI.Control control, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRouteUrl(class System.Web.UI.Control control, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRouteUrl(System::Web::UI::Control ^ control, System::String ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, к которому привязано выражение.</param>
        <param name="expression">Выражение, заданное в разметке.</param>
        <summary>Создает URL-адрес, соответствующий заданным ключам маршрута для формата URL-адреса маршрута.</summary>
        <returns>URL-адрес, соответствующий формату URL-адреса маршрута текущего объекта <see cref="T:System.Web.Routing.Route" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод создает соответствующее значение URL-адреса путем вызова <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> метод <xref:System.Web.Routing.RouteCollection> объекта. Он возвращает <xref:System.Web.Routing.RequestContext> объекта из `control` , который выполняет синтаксический анализ параметров имени и маршрута маршрута из `expression` параметра.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="control" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Методу не удалось проанализировать заданное в разметке выражение. Дополнительные сведения см. в разделе <see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public override bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsEvaluate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEvaluate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, можно ли вычислить выражение на не подлежащей компиляции странице.</summary>
        <value>Всегда <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A> Свойство указывает, является ли <xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A> метод реализован в классе и может возвращать значение для выражения, на странице, не компилируется. <xref:System.Web.Compilation.RouteUrlExpressionBuilder> Класса можно вычислить выражение на странице, не компилируется. Таким образом <xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A> свойство всегда возвращает `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseRouteExpression">
      <MemberSignature Language="C#" Value="public static bool TryParseRouteExpression (string expression, System.Web.Routing.RouteValueDictionary routeValues, out string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseRouteExpression(string expression, class System.Web.Routing.RouteValueDictionary routeValues, [out] string&amp; routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseRouteExpression (expression As String, routeValues As RouteValueDictionary, ByRef routeName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseRouteExpression(System::String ^ expression, System::Web::Routing::RouteValueDictionary ^ routeValues, [Runtime::InteropServices::Out] System::String ^ % routeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="expression">Выражение, заданное в разметке.</param>
        <param name="routeValues">Коллекция ключей маршрута и связанных с ними значений.</param>
        <param name="routeName">При возвращении управления из этого метода содержит строку, представляющую имя маршрута, если параметр <c>expression</c> содержит ключ маршрута с именем <c>RouteName</c>. Этот параметр передается неинициализированным.</param>
        <summary>Анализирует выражение для получения коллекции ключей маршрута и значений, а также (необязательно) имени маршрута.</summary>
        <returns>
          Значение <see langword="true" />, если анализ выполнен успешно; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A> Метод удаляет начальные и конечные пробелы из выражения и разделяет их в пары "ключ значение", используя запятые в качестве разделителей. Если ключ маршрута с именем `RouteName` обнаруживается, что значение передается обратно в `routeName` параметр и не в `routeValues`. В противном случае `null` возвращается для `routeName`. Также начальные и конечные пробелы удаляются из отдельных ключей и значений.  
  
 <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A> Возвращает `false` Если выражение не состоит из пары по крайней мере один ключ значение в формате *ключ*`=`*значение*, и в котором используются запятые для Разделите несколько пар.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>