<Type Name="ClientTarget" FullName="System.Web.Configuration.ClientTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e8c6cb0260d99d3e1f9fe9839090f548701bcd78" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30536378" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientTarget : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ClientTarget extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.ClientTarget" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientTarget&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientTarget sealed : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Определяет псевдоним, ассоциированный с целевым агентом пользователя, для которого элементы управления сервера ASP.NET должны выполнить прорисовку содержимого. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.ClientTarget> Класс относится к элементам, которые добавляются в `clientTarget` раздел файла конфигурации.  
  
 <xref:System.Web.Configuration.ClientTarget> Класс принадлежит к группе, включающей <xref:System.Web.Configuration.ClientTargetCollection> класса и <xref:System.Web.Configuration.ClientTargetSection> класса.  
  
 <xref:System.Web.Configuration.ClientTarget> Класс содержит два свойства идентификации браузер клиента, также имеющий имя агента пользователя. Одно свойство является псевдонимом, связанные с браузером клиента, указанное в свойстве второй. ASP.NET использует эти сведения для отображения серверных элементов управления на странице.  
  
 Сведения об использовании агента пользователя или его псевдоним программными средствами см. в разделе <xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=nameWithType> свойство. Сведения об использовании агента пользователя или его псевдоним декларативно см. в разделе [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4).  
  
 Если <xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=nameWithType> свойство не задано, <xref:System.Web.HttpBrowserCapabilities> объекта, с которым связан <xref:System.Web.UI.Page.Request%2A?displayProperty=nameWithType> свойство отражает возможности клиентского браузера. (Отображает возможности тип браузера, но не обязательно параметры в конкретном экземпляре браузера.) Если свойство задано, определение браузера клиента отключено, а страница использует возможности браузера, которые связаны с заданной строкой агента пользователя. Это свойство можно задать любую строку агента пользователя.  
  
   
  
## Examples  
 В этом разделе приводятся два примера кода. В первом случае показано как определять значения для нескольких свойств <xref:System.Web.Configuration.ClientTarget> класса. Второй показано получение <xref:System.Web.Configuration.ClientTargetCollection> объекта из файла конфигурации. Этот объект используется для доступа к <xref:System.Web.Configuration.ClientTarget> ее объектов.  
  
 В следующем примере кода показано, как декларативно указать значения для нескольких свойств <xref:System.Web.Configuration.ClientTarget> класса.  
  
```  
<clientTarget>  
  <add alias=  
    "uplevel"   
    userAgent="Mozilla/5.0 (compatible;MSIE 6.0;Windows NT 5.1)"/>  
  <add alias="downlevel" userAgent="Generic Downlevel"/>  
</clientTarget>  
```  
  
 В следующем примере кода демонстрируется получение <xref:System.Web.Configuration.ClientTargetCollection> объекта из файла конфигурации.  
  
 [!code-csharp[System.Web.Configuration.ClientTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ClientTarget/CS/clienttarget.cs#1)]
 [!code-vb[System.Web.Configuration.ClientTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ClientTarget/VB/clienttarget.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ClientTargetSection" />
    <altmember cref="T:System.Web.Configuration.ClientTargetCollection" />
    <altmember cref="P:System.Web.UI.Page.ClientTarget" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientTarget (string alias, string userAgent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string alias, string userAgent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.ClientTarget.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alias As String, userAgent As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientTarget(System::String ^ alias, System::String ^ userAgent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
        <Parameter Name="userAgent" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="alias">Имя, используемое для ссылки на определенный агент пользователя.</param>
        <param name="userAgent">Идентификационное имя агента пользователя.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Configuration.ClientTarget" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alias">
      <MemberSignature Language="C#" Value="public string Alias { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Alias" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ClientTarget.Alias" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Alias As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Alias { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("alias", IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает псевдоним агента пользователя.</summary>
        <value>Имя, используемое для ссылки на определенный агент пользователя.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.ClientTarget.Alias%2A> Свойство ссылается на `alias` атрибут `add` элемент в `clientTarget` раздел файла конфигурации.  
  
 По умолчанию конфигурация ASP.NET содержит следующие псевдонимы:  
  
-   `uplevel`, который сообщает ASP.NET для отправки HTML и ECMAScript, поддерживаемый Internet Explorer 6.0 и более поздних версиях.  
  
-   `downlevel`, который сообщает ASP.NET, чтобы ограничить HTML и скрипт для версии, которые поддерживаются в браузерах, предшествующих Internet Explorer 6.0.  
  
   
  
## Examples  
 В следующем примере кода показано, как получить <xref:System.Web.Configuration.ClientTarget.Alias%2A> из файла конфигурации существующего веб-приложения.  
  
 [!code-csharp[System.Web.Configuration.ClientTarget#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ClientTarget/CS/clienttarget.cs#3)]
 [!code-vb[System.Web.Configuration.ClientTarget#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ClientTarget/VB/clienttarget.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.ClientTargetSection" />
        <altmember cref="T:System.Web.Configuration.ClientTargetCollection" />
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ClientTarget.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ClientTarget.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("userAgent", IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает идентификационное имя агента пользователя.</summary>
        <value>Идентификационное имя агента пользователя.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.ClientTarget.UserAgent%2A> Свойство ссылается на `userAgent` атрибут `add` элемент в `clientTarget` раздел файла конфигурации.  
  
 По умолчанию конфигурация ASP.NET позволяют настройка страниц для различных версий Microsoft Internet Explorer. Среди них найти псевдоним `uplevel`, который сообщает ASP.NET для отправки клиента HTML и Internet Explorer 4.0 и более поздней версии, поддерживают ECMAScript и `downlevel`, который сообщает ASP.NET, чтобы ограничить HTML и сценарий, поддерживаемые браузеры более ранних, чем Internet Explorer 4.0.  
  
   
  
## Examples  
 В следующем примере кода показано, как получить <xref:System.Web.Configuration.ClientTarget.UserAgent%2A> из файла конфигурации существующего веб-приложения.  
  
 [!code-csharp[System.Web.Configuration.ClientTarget#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ClientTarget/CS/clienttarget.cs#4)]
 [!code-vb[System.Web.Configuration.ClientTarget#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ClientTarget/VB/clienttarget.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.ClientTargetSection" />
        <altmember cref="T:System.Web.Configuration.ClientTargetCollection" />
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
      </Docs>
    </Member>
  </Members>
</Type>