<Type Name="HttpRuntimeSection" FullName="System.Web.Configuration.HttpRuntimeSection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="30cc509d191a9e3ff38a5f1d1486d60051be7cb4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540378" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpRuntimeSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpRuntimeSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpRuntimeSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRuntimeSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRuntimeSection sealed : System::Configuration::ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Настраивает среду выполнения HTTP ASP.NET. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection> Позволяет обрабатывать эти параметры, влияющие на поведение среды выполнения ASP.NET.  
  
 Он ссылается на узел в файле конфигурации указывается с помощью элемента, можно использовать на любом уровне в иерархии конфигурации.  
  
 <xref:System.Web.Configuration.HttpRuntimeSection> Раздел содержит директивы, которые управляют следующие:  
  
-   Время ожидания выполнения запроса.  
  
-   Директивы для планирования потока на уровне приложения.  
  
-   Директивы, управляющие ограничениями очереди приложения.  
  
-   Длина запроса.  
  
 При выполнении нескольких приложений в одном процессе, следует блокировать данный раздел, чтобы приложения не может повышать уровень своих относительный приоритет друг с другом.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRuntimeSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpRuntimeSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRuntimeSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> значениями по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как создать <xref:System.Web.Configuration.HttpRuntimeSection> объекта.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#2)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationAllowDefinition" />
      </Docs>
    </Member>
    <Member MemberName="AllowDynamicModuleRegistration">
      <MemberSignature Language="C#" Value="public bool AllowDynamicModuleRegistration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDynamicModuleRegistration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.AllowDynamicModuleRegistration" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDynamicModuleRegistration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDynamicModuleRegistration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("allowDynamicModuleRegistration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, показывающее, разрешены ли вызовы метода <see cref="M:System.Web.HttpApplication.RegisterModule(System.Type)" />. Значение по умолчанию: <see langword="true" />.</summary>
        <value>
          Значение <see langword="true" />, если разрешены вызовы метода <see cref="M:System.Web.HttpApplication.RegisterModule(System.Type)" />; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApartmentThreading">
      <MemberSignature Language="C#" Value="public bool ApartmentThreading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApartmentThreading" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.ApartmentThreading" />
      <MemberSignature Language="VB.NET" Value="Public Property ApartmentThreading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApartmentThreading { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("apartmentThreading", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее включена ли потоковая модель «Подразделение» приложения.</summary>
        <value>
          <see langword="true" />, если потоковая модель «Подразделение» включена, в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение по умолчанию — `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppRequestQueueLimit">
      <MemberSignature Language="C#" Value="public int AppRequestQueueLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppRequestQueueLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property AppRequestQueueLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AppRequestQueueLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("appRequestQueueLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее максимальное количество запросов, которые ASP.NET отправляет в очередь, для приложения.</summary>
        <value>Максимально допустимое число запросов в очереди.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET в очередь запросы при не недостаточно свободных потоков для их обработки.  
  
> [!NOTE]
>  Если количество запросов в очереди превышает ограничение, указанное этим параметром, входящие запросы будут отклонены с «503 — Сервер занят» ошибка.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#16)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncPreloadMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPreloadMode As AsyncPreloadModeFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::AsyncPreloadModeFlags AsyncPreloadMode { System::Web::Configuration::AsyncPreloadModeFlags get(); void set(System::Web::Configuration::AsyncPreloadModeFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("asyncPreloadMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AsyncPreloadModeFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает режим сущности запроса с предварительной асинхронной загрузкой.</summary>
        <value>Режим сущности запроса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство необходимо задать перед <xref:System.Web.RequestNotification.ExecuteRequestHandler> задается в конвейере ASP.NET.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRegexMatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan DefaultRegexMatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultRegexMatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.DefaultRegexMatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultRegexMatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DefaultRegexMatchTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("defaultRegexMatchTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает время, отводимое регулярному выражению на выполнение сравнения.</summary>
        <value>Время, разрешенное для сопоставления регулярных выражений.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelayNotificationTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan DelayNotificationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DelayNotificationTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property DelayNotificationTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DelayNotificationTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("delayNotificationTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает задержку уведомления об изменении.</summary>
        <value>Время, указанное в секундах и определяющее задержку уведомления об изменении.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно решить проблемы, вызванной некоторые антивирусные приложения при записи сведений об обратно на отсканированных файлов, задав <xref:System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout%2A> свойство.  
  
> [!NOTE]
>  Проблема возникает из-за изменения файла, вызванные антивирусное сканирование невозможно отличить от пользователя. Конечным результатом является перезапуска приложения, чьи файлы проверяются.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#11)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enable">
      <MemberSignature Language="C#" Value="public bool Enable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.Enable" />
      <MemberSignature Language="VB.NET" Value="Public Property Enable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enable", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, включен ли домен приложения.</summary>
        <value>
          <see langword="true" />, если домен приложения включен, в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот параметр влияет на домен или домены приложения на текущем уровне узла и ниже.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.Configuration.HttpRuntimeSection.Enable%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#14)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableHeaderChecking">
      <MemberSignature Language="C#" Value="public bool EnableHeaderChecking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableHeaderChecking" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableHeaderChecking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableHeaderChecking { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableHeaderChecking", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, включена ли проверка заголовка.</summary>
        <value>
          <see langword="true" />, если проверка заголовка включена, в противном случае <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство предназначено для включения кодировку символы возврата каретки и перевода строки символов, `\r` и `\n`, обнаруженных в заголовки ответа.  
  
 В заголовки исходящих ответов, символы, которые представлены кодами 0x1F и ниже кодируются, а также символ 0x7F (символ delete). Единственное исключение — неизмененного символ 0x09 (символ табуляции).  
  
 Эта кодировка может помочь избежать атак, использующих приложения, повторяющих ненадежные данные, содержащиеся в заголовке.  
  
> [!NOTE]
>  Это свойство не применяется к строке состояния самого (код состояния и описание состояния), но должно применяться к другим заголовкам. Хотя может быть установлен на любом уровне, это свойство применимо только на уровне компьютера и приложения.  
  
 Если этому свойству присвоено `true`, используемого по умолчанию `\r` или `\n` кодируются символы, найденному в заголовке ответа для `%0d` и `%0a`. Это нарушает атаки заголовков, делая введенного материала частью той же строки заголовка. Это может привести к сбою ответа, но не следует открывать атак с клиентом. Обратный возврат ненадежных данных не является хорошим решением в любой ситуации, хотя.  
  
> [!IMPORTANT]
>  Продолжения заголовков HTTP, основанных на заголовках несколько строк и требуются новые строки. Если вам нужно использовать заголовок продолжения, необходимо задать <xref:System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking%2A> свойства `false`. Так как к снижению производительности, полученных при просмотре заголовков, если вы уверены, что верная проверка уже выполняется, отключение этой функции может улучшить производительность приложения. Прежде чем отключить эту функцию, убедитесь, что в этой области уже предпринимаются верные меры предосторожности.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#20)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableKernelOutputCache">
      <MemberSignature Language="C#" Value="public bool EnableKernelOutputCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableKernelOutputCache" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableKernelOutputCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableKernelOutputCache { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableKernelOutputCache", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, включено ли кэширование вывода.</summary>
        <value>
          <see langword="true" />, если кэширование вывода включено, в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для кэширования ответа следует соблюдать следующие условия:  
  
-   Кэширование должно быть явно включено с помощью директивы страницы или API кэширования.  
  
-   Кэширование должен иметь политику истечения срока действия, чтобы ядро знал, когда необходимо отменить изменения.  
  
-   Кэширование не могут иметь переменные заголовки или параметры.  
  
-   Запрос не должен требовать проверку подлинности.  
  
> [!NOTE]
>  Это свойство применимо только в том случае, если установлены службы Internet Information Services (IIS) версии 6.0 или более поздней версии.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#3)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableVersionHeader">
      <MemberSignature Language="C#" Value="public bool EnableVersionHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableVersionHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableVersionHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableVersionHeader { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableVersionHeader", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее должна ли ASP.NET выводить заголовок версии.</summary>
        <value>
          <see langword="true" />, если включен вывод заголовка версии, в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы определить, какая версия ASP.NET используется этот атрибут используется в Visual Studio. Он не является обязательным для рабочих веб-узлов и могут быть отключены.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#17)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncoderType">
      <MemberSignature Language="C#" Value="public string EncoderType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncoderType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EncoderType" />
      <MemberSignature Language="VB.NET" Value="Public Property EncoderType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncoderType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("encoderType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя пользовательского типа, который можно использоваться для обработки кодировки HTML и URL.</summary>
        <value>Имя типа, который можно использоваться для обработки кодировок HTML и URL-адресов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET использует <xref:System.Web.Util.HttpEncoder> типа, что обработчик по умолчанию для задачи кодирования HTML и URL-адрес.  
  
 Для настройки поведения кодирования, можно создать класс, наследующий от <xref:System.Web.Util.HttpEncoder> типа. В файле конфигурации приложения, затем установите <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> атрибут `httpRuntime` элемента, который требуется полное строковое имя для пользовательского типа. Дополнительные сведения см. в разделе [httpRuntime (схема параметров ASP.NET) элемент](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ExecutionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ExecutionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ExecutionTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ExecutionTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("executionTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает допустимое время выполнения для запроса.</summary>
        <value>Значение <see cref="T:System.TimeSpan" />, указывающее допустимое время выполнения для запроса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> Указывает максимальное число секунд, запрос может выполняться до автоматического завершения работы с ASP.NET. Значение по умолчанию — 110 секунд. Это время ожидания применяется только в том случае, если имеет значение атрибута отладки в элементе `false`.  
  
 Исключение возникает, если тайм-аут. Связанные сведения можно записать в папке приложений журнала событий. Это делается путем включения в элементе конфигурации мониторинга работоспособности приложения.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#10)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Время выполнения запроса превысило значение времени ожидания выполнения.</exception>
      </Docs>
    </Member>
    <Member MemberName="FcnMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.FcnMode FcnMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.FcnMode FcnMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.FcnMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FcnMode As FcnMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::FcnMode FcnMode { System::Web::Configuration::FcnMode get(); void set(System::Web::Configuration::FcnMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("fcnMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.FcnMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение перечисления, определяющее режим уведомлений об изменении файлов.</summary>
        <value>Значение перечисления <see cref="T:System.Web.Configuration.FcnMode" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxQueryStringLength">
      <MemberSignature Language="C#" Value="public int MaxQueryStringLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxQueryStringLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxQueryStringLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxQueryStringLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxQueryStringLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает максимально допустимую длину (в символах) строки запроса в HTTP-запросе.</summary>
        <value>Максимально допустимая длина строки запроса (в символах). Значение по умолчанию — 2048.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength%2A> свойство может быть любое целое число, нуля или больше. Если длина строки запроса превышает предельный размер, ASP.NET возвращает `HTTP 400` код состояния (Неверный запрос).  
  
> [!NOTE]
>  Очень малые значения могут привести к невозможности использования веб-сайта.  
  
 Это значение можно задать в файле конфигурации, задав `maxQueryStringLength` атрибут `httpRuntime` элемента. Дополнительные сведения см. в разделе [httpRuntime (схема параметров ASP.NET) элемент](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369).  
  
> [!NOTE]
>  Также есть параметр IIS, которое определяет длину строки запроса. В разделе `maxQueryString` атрибута в [ограничения запросов \<requestLimits >](http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/requestLimits).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRequestLength">
      <MemberSignature Language="C#" Value="public int MaxRequestLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRequestLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRequestLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxRequestLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxRequestLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает максимальный размер запроса.</summary>
        <value>Максимальный размер запроса в килобайтах. По умолчанию используется размер 4096 КБ (4 МБ).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> Свойство предельное число порог буферизации входного потока. Например это ограничение может использоваться для предотвращения атак отказа в обслуживании, вызванных пользователями, отправляющими больших файлов на сервер.  
  
 Этому свойству присвоено значение должно быть больше или равно значению, назначенный <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> свойство.  
  
   
  
## Examples  
 В следующем примере показано, как получить текущее <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> значение свойства.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#19)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Выбранное значение меньше <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxUrlLength">
      <MemberSignature Language="C#" Value="public int MaxUrlLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxUrlLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxUrlLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxUrlLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxUrlLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxUrlLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает максимально допустимую длину (в символах) URL-адреса в HTTP-запросе.</summary>
        <value>Длина URL-адреса в символах. Значение по умолчанию — 260.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Web.Configuration.HttpRuntimeSection.MaxUrlLength%2A> свойство может быть любое целое число, нуля или больше.  
  
> [!NOTE]
>  Очень малые значения могут привести к невозможности использования веб-сайта.  
  
 Если длина URL-АДРЕСЕ запроса (это значение <xref:System.Web.HttpRequest.Path%2A> свойства) превышает заданный размер, ASP.NET возвращает код состояния HTTP 400 (неправильный запрос)  
  
 Это значение можно задать в файле конфигурации, задав <xref:System.Web.Configuration.HttpRuntimeSection.MaxUrlLength%2A> атрибут `httpRuntime` элемента. Дополнительные сведения см. в разделе [httpRuntime (схема параметров ASP.NET) элемент](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWaitChangeNotification">
      <MemberSignature Language="C#" Value="public int MaxWaitChangeNotification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxWaitChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxWaitChangeNotification As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxWaitChangeNotification { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxWaitChangeNotification", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает временной интервал между первым уведомлением об изменении и моментом перезапуска домена приложения.</summary>
        <value>Максимальный временной интервал в секундах с момента первого уведомления об изменении и до момента перезапуска домена приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предлагаемое значение <xref:System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification%2A> свойства превысит время для завершения копии во время развертывания.  
  
> [!NOTE]
>  Содержимое может быть кэшированным, если его просмотр непосредственно после процесса копирования и развертывания. Это нормальное поведение. Изменения вступают в силу по истечении указанного периода ожидания.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#4)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinFreeThreads">
      <MemberSignature Language="C#" Value="public int MinFreeThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinFreeThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MinFreeThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinFreeThreads { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("minFreeThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает минимальное количество потоков, которые должны быть свободны до обработки запроса ресурсов в данной области конфигурации.</summary>
        <value>Минимальное количество свободных потоков в пуле потоков среды CLR до обработки запроса ресурсов в данной области конфигурации. Значение по умолчанию — <c>8</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A> Свойство определяет минимальное количество свободных потоков для выполнения запроса. Если достаточное количество потоков, не доступны, то запрос останется в очереди и периодические проверки доступности потоков будет продолжена, пока присутствуют необходимого количества потоков. Значение по умолчанию — `8`.  
  
> [!NOTE]
>  ASP.NET отслеживает это количество потоков освобождается для запросов, требующих дополнительных потоков для завершения обработки.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#8)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLocalRequestFreeThreads">
      <MemberSignature Language="C#" Value="public int MinLocalRequestFreeThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLocalRequestFreeThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLocalRequestFreeThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLocalRequestFreeThreads { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("minLocalRequestFreeThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает минимальное количество свободных потоков, необходимых для обслуживания локального запроса.</summary>
        <value>Минимальное количество свободных потоков, присвоенных локальным запросам. Значение по умолчанию — 4.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads%2A> Свойство определяет количество свободных потоков, которые ASP.NET остаются доступными для выполнения новых локальных запросов. Цель — избежать возможных взаимоблокировок рекурсивного перезапуска веб-сервера.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#5)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelaxedUrlToFileSystemMapping">
      <MemberSignature Language="C#" Value="public bool RelaxedUrlToFileSystemMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RelaxedUrlToFileSystemMapping" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping" />
      <MemberSignature Language="VB.NET" Value="Public Property RelaxedUrlToFileSystemMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RelaxedUrlToFileSystemMapping { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("relaxedUrlToFileSystemMapping", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, определяющее, необходимо ли, чтобы URL-адрес в HTTP-запросе был допустимым путем к файлу Windows.</summary>
        <value>
          Значение <see langword="true" />, если URL-адрес не обязательно должен соответствовать правилам путей к файлам Windows; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping%2A> Свойство определяет, как будет проверяться во входящем запросе HTTP URL-адрес. Если это свойство имеет `false`, URL-адрес проверяется с использованием тех же правил, которые определяют, допустим ли путь файловой системы Windows.  
  
 Это значение можно задать в файле конфигурации, задав <xref:System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping%2A> атрибут `httpRuntime` элемента. Дополнительные сведения см. в разделе [httpRuntime (схема параметров ASP.NET) элемент](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestLengthDiskThreshold">
      <MemberSignature Language="C#" Value="public int RequestLengthDiskThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestLengthDiskThreshold" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestLengthDiskThreshold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RequestLengthDiskThreshold { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requestLengthDiskThreshold", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает порог буферизации входящего потока.</summary>
        <value>Количество байт, указывающее порог буферизации входящего потока. Значение по умолчанию — 80 килобайт.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> Свойство указывает ограничение порог буферизации входящего потока в байтах. Его значение не должно превышать <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> значение свойства. После запроса превышает этот порог, ее буферизация прозрачно на диск.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#12)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Выбранное значение больше <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestPathInvalidCharacters">
      <MemberSignature Language="C#" Value="public string RequestPathInvalidCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPathInvalidCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestPathInvalidCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPathInvalidCharacters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPathInvalidCharacters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requestPathInvalidCharacters", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает список символов, заданных как недопустимые в пути, являющемся частью HTTP-запроса.</summary>
        <value>Разделенный запятыми список недопустимых символов. Следующий список содержит набор недопустимых символов по умолчанию.  
  
 <c>&lt;,&gt;,*,%,&amp;,:,\\</c></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это значение задано в файле конфигурации, можно назначить строку символов, разделенных запятыми `requestPathInvalidCharacters` атрибут `httpRuntime` элемента. Дополнительные сведения см. в разделе [httpRuntime (схема параметров ASP.NET) элемент](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestValidationMode">
      <MemberSignature Language="C#" Value="public Version RequestValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version RequestValidationMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestValidationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestValidationMode As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ RequestValidationMode { Version ^ get(); void set(Version ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.Configuration.VersionConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requestValidationMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает номер версии, указывающий, какой подход к проверке в зависимости от версии ASP.NET будет использоваться.</summary>
        <value>Значение, указывающее, какой подход к проверке в зависимости от версии ASP.NET будет использоваться. Значение по умолчанию — <c>4.5</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationMode%2A> Свойство указывает, какой подход к проверке в ASP.NET будет использоваться. Это может быть алгоритм, используемый в версиях ASP.NET, предшествующих версии 4 или версии, который используется в [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. Свойство можно задать следующие значения:  
  
-   `4.5 (the default).` В этом режиме отложенной загрузки значения, то есть они не считываются до их запроса.  
  
-   `4.0` <xref:System.Web.HttpRequest> Объект внутренне устанавливает флаг, указывающий, выполнять запуск проверки запроса при доступе к любой данные HTTP-запроса. Это гарантирует, что проверка запроса инициируется перед данными, такие как файлы cookie и URL-адресов осуществляется при выполнении запроса. Параметры проверки запроса элемента (если таковые имеются) в файле конфигурации или в директиве в отдельной страницы учитываются.  
  
-   `2.0`. Проверка запросов включена только для страниц, а не для всех HTTP-запросов. Кроме того параметры проверки запроса элемента (если таковые имеются) в файле конфигурации или в директиве в отдельной страницы используются для определения того, какую страницу запрашивает для проверки.  
  
 Значение, которое можно присвоить этому свойству не проверяется в соответствии с конкретной версией ASP.NET. Любое числовое значение меньше, чем `4.0` (например, `3.7`, `2.9`, или `2.0`), интерпретируется как `2.0`. Любое число больше, чем `4.5` интерпретируется как `4.5`.  
  
 Чтобы задать это значение в файле конфигурации, можно присвоить значение `requestValidationMode` атрибут `httpRuntime` элемента. Дополнительные сведения см. в разделе [httpRuntime (схема параметров ASP.NET) элемент](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestValidationType">
      <MemberSignature Language="C#" Value="public string RequestValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestValidationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestValidationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requestValidationType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя типа, используемого для проверки HTTP-запросов.</summary>
        <value>Имя типа, обрабатывающее задачи на проверку запросов. По умолчанию используется полное имя типа <see cref="T:System.Web.Util.RequestValidator" />, используемого ASP.NET для проверки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для настройки поведения проверки запроса ASP.NET, можно создать класс, наследующий от <xref:System.Web.Util.RequestValidator> типа. В файле конфигурации приложения, затем установите `requestValidationType` атрибут `httpRuntime` элемента, который требуется полное строковое имя для пользовательского типа. Дополнительные сведения см. в разделе [httpRuntime (схема параметров ASP.NET) элемент](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireRootedSaveAsPath">
      <MemberSignature Language="C#" Value="public bool RequireRootedSaveAsPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireRootedSaveAsPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireRootedSaveAsPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireRootedSaveAsPath { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requireRootedSaveAsPath", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, которое указывает, должно ли имя файла быть полным физическим путем файла.</summary>
        <value>
          <see langword="true" />, если имя файла должно быть полным физическим путем файла, в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath%2A> Свойство указывает, содержит ли файл имя аргумента `SaveAs` методы должны быть корневым путем. Процесс ASP.NET должен иметь разрешение на создание файлов в указанном расположении.  
  
 Дополнительные сведения см. в разделе сохранения методы, определенные в <xref:System.Configuration.Configuration> класса.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#7)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCacheControlHeader">
      <MemberSignature Language="C#" Value="public bool SendCacheControlHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SendCacheControlHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SendCacheControlHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SendCacheControlHeader { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("sendCacheControlHeader", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, отправляется ли заголовок <c>cache-control:private</c> в качестве части ответа HTTP.</summary>
        <value>
          <see langword="true" /> Если <c>кэш-элемент управления: private</c> заголовок должен быть отправлен; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpResponse> Класс проверяет оба <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A?displayProperty=nameWithType> свойство и <xref:System.Web.Configuration.OutputCacheSection.SendCacheControlHeader%2A?displayProperty=nameWithType> свойства, чтобы определить, следует ли отправлять `cache-control:private` заголовок HTTP-ответе. Если одно из свойств равно `false`, заголовок не будет отправлено. Если значение заголовка cache-control `private`, то клиент не будет кэшировать ответ в общем кэше.  
  
 Поддержка <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A> свойства <xref:System.Web.Configuration.HttpRuntimeSection> класс предоставляется для обеспечения совместимости с существующими приложениями; это свойство является устаревшим в .NET Framework версии 2.0. Дополнительные сведения см. в описании класса <xref:System.Web.Configuration.OutputCacheSection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpRuntimeSection.SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ShutdownTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ShutdownTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ShutdownTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ShutdownTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("shutdownTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает продолжительность допустимого простоя приложения до его отключения.</summary>
        <value>Значение <see cref="T:System.TimeSpan" />, указывающее продолжительность простоя приложения до его отключения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout%2A> Свойство указывает интервал времени до верного завершения работы приложения. Значение по умолчанию — 90 секунд.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#6)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetFramework">
      <MemberSignature Language="C#" Value="public string TargetFramework { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetFramework" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.TargetFramework" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetFramework As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetFramework { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("targetFramework", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает целевую платформу .NET Framework.</summary>
        <value>Целевая платформа .NET Framework.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseFullyQualifiedRedirectUrl">
      <MemberSignature Language="C#" Value="public bool UseFullyQualifiedRedirectUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseFullyQualifiedRedirectUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property UseFullyQualifiedRedirectUrl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseFullyQualifiedRedirectUrl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useFullyQualifiedRedirectUrl", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, являются ли перенаправления на стороне клиента полными.</summary>
        <value>
          <see langword="true" />, если перенаправления на стороне клиента полные, в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl%2A> Свойство указывает, являются ли перенаправления на стороне клиента полными (в форме http://server/path) или ли относительных перенаправлений вместо этого отправляются клиенту.  
  
> [!NOTE]
>  Некоторые браузеры могут возникнуть проблемы при загрузке страницы в сеансах без файлов cookie, если это значение равно `false`.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#15)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitChangeNotification">
      <MemberSignature Language="C#" Value="public int WaitChangeNotification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WaitChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Property WaitChangeNotification As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WaitChangeNotification { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("waitChangeNotification", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает время ожидания до следующего уведомления об изменении.</summary>
        <value>Время ожидания в секундах до следующего уведомления об изменении, которое приводит к перезапуску домена приложения. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предлагаемое значение <xref:System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification%2A> превысит время для завершения копии во время развертывания.  
  
> [!NOTE]
>  Содержимое может быть кэшированным, если просмотреть его сразу же после копирования и процесса развертывания. Это нормальное поведение. Изменения вступают в силу по истечении указанного периода ожидания.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#18)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>