<Type Name="OutputCacheProfile" FullName="System.Web.Configuration.OutputCacheProfile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f2c3fd7fe0a5f8a1e5fe4f643ef1a6810e80deb4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36403503" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OutputCacheProfile : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OutputCacheProfile extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.OutputCacheProfile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OutputCacheProfile&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutputCacheProfile sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type OutputCacheProfile = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Configures the output cache profile that can be used by the application pages. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile> Класс предоставляет способ получить программный доступ и изменение `add` элемент `outputCacheProfiles` раздела `caching` раздел файла конфигурации.  
  
 <xref:System.Web.Configuration.OutputCacheProfile> Объект централизует часто используемые настройки конфигурации, такие как зависимости, расположение кэша и время истечения срока действия кэша, устраняя необходимость указывать их на каждой странице.  
  
 <xref:System.Web.Configuration.OutputCacheProfile> Может применяться к странице с помощью `CacheProfile` атрибута директивы.  
  
> [!NOTE]
>  Директива можно переопределить параметры, содержащиеся в <xref:System.Web.Configuration.OutputCacheProfile> объекта, за исключением <xref:System.Web.Configuration.OutputCacheProfile.Enabled%2A> атрибута. Это позволяет включить или отключить <xref:System.Web.Configuration.OutputCacheProfile> без необходимости изменения директив все страницы, которые возможно он был переопределен.  
  
 <xref:System.Web.Caching.CacheDependency> Класс Отслеживание зависимостей, чтобы после любого изменения элемента в кэше, кэшированного элемента будут автоматически удалены.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.Configuration.OutputCacheSettingsSection.OutputCacheProfiles%2A> коллекции для доступа к его <xref:System.Web.Configuration.OutputCacheProfile> объектов.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#1)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.OutputCacheProfileCollection" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutputCacheProfile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.OutputCacheProfile.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutputCacheProfile(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.Configuration.OutputCacheProfile : string -&gt; System.Web.Configuration.OutputCacheProfile" Usage="new System.Web.Configuration.OutputCacheProfile name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name value to use.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.OutputCacheProfile" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public int Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Duration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Duration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : int with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("duration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the time duration during which the page or control is cached.</summary>
        <value>Продолжительность времени в секундах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile.Duration%2A> Представляет время в секундах, которые кэшированы или элементов управления. При задании этого свойства устанавливается политики срока действия ответов HTTP со страницы или элемента управления, к которому он применяется и автоматически приводит к кэшированию их вывода.  
  
> [!NOTE]
>  <xref:System.Web.Configuration.OutputCacheProfile.Duration%2A> Должен быть определен в профиле или директиве страницы, с помощью профиля.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.Duration%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#10)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether caching is enabled.</summary>
        <value>
          <see langword="true" /> Если включено кэширование; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile.Enabled%2A> Свойство позволяет включить или выключить механизм кэширования только в одном месте. Он влияет на все страницы или элементов управления, которые используют <xref:System.Web.Configuration.OutputCacheProfile>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.Enabled%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#12)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Web.UI.OutputCacheLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.OutputCacheLocation Location" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As OutputCacheLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::OutputCacheLocation Location { System::Web::UI::OutputCacheLocation get(); void set(System::Web::UI::OutputCacheLocation value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Web.UI.OutputCacheLocation with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("location")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.OutputCacheLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the output cache location.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.OutputCacheLocation" />. Значение по умолчанию — <see langword="Any" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.Configuration.OutputCacheProfile.Location%2A> равно `Any`, кэш вывода может располагаться на клиенте браузера, где был сформирован запрос; на прокси-сервер или любой другой сервер, участвующих в запросе, или на сервере, где обрабатывался запрос.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.Location%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#5)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.OutputCacheLocation" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Web.Configuration.OutputCacheProfile" /> name.</summary>
        <value>
          <see cref="T:System.Web.Configuration.OutputCacheProfile" /> Имя.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы используете <xref:System.Web.Configuration.OutputCacheProfile.Name%2A> для присвоения значения для `CacheProfile` атрибута директивы, если вы хотите применить <xref:System.Web.Configuration.OutputCacheProfile> значений для страницы или элемента управления.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.Name%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#11)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoStore">
      <MemberSignature Language="C#" Value="public bool NoStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoStore" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.NoStore" />
      <MemberSignature Language="VB.NET" Value="Public Property NoStore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoStore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoStore : bool with get, set" Usage="System.Web.Configuration.OutputCacheProfile.NoStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("noStore", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether secondary storage is enabled.</summary>
        <value>
          <see langword="true" /> Если включена вторичного хранилища. в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Страницы, для которого <xref:System.Web.Configuration.OutputCacheProfile.NoStore%2A?displayProperty=nameWithType> свойство `true` выдает ответ, указав в ее заголовке предотвращаться вторичное хранение конфиденциальных сведений.  
  
 Задав этому атрибуту значение `true` эквивалентен вызов <xref:System.Web.HttpCachePolicy.SetNoStore%2A?displayProperty=nameWithType> метод во время веб-запроса.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.NoStore%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#4)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.OutputCacheProfile.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlDependency">
      <MemberSignature Language="C#" Value="public string SqlDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SqlDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlDependency : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.SqlDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("sqlDependency")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" /> property.</summary>
        <value>Значение <see cref="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile.SqlDependency%2A> Определяет связь между веб-приложение и экземпляр SQL Server, позволяя обнаружения изменений в данных на сервере. <xref:System.Web.Configuration.OutputCacheProfile.SqlDependency%2A> Гарантирует, что изменяется выходные данные, кэшированные страницы удаляются из кэша каждый раз, когда в таблице SQL, от которого они зависят.  
  
> [!NOTE]
>  <xref:System.Web.Caching.SqlCacheDependency> Класс проверяет таблицу, чтобы при изменении таблицы, элемент автоматически удаляется из кэша. Этот класс не наследуется.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.SqlDependency%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#7)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="VaryByContentEncoding">
      <MemberSignature Language="C#" Value="public string VaryByContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByContentEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByContentEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByContentEncoding : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByContentEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the semicolon-delimited set of content encodings to be cached.</summary>
        <value>Список кодировки содержимого.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding%2A> Параметры совпадают с используемыми `VaryByContentEncoding` атрибута директивы.  
  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding%2A> впервые появился в платформе .NET Framework версии 3.5.  Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.OutputCacheParameters.VaryByContentEncoding" />
      </Docs>
    </Member>
    <Member MemberName="VaryByControl">
      <MemberSignature Language="C#" Value="public string VaryByControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByControl : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByControl")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" /> property.</summary>
        <value>Значение <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByControl%2A> Представляет собой разделенный точками с запятой набор идентификаторов элементов управления для кэширования.  
  
 Дополнительные сведения см. в разделе [кэширование нескольких версий из вывода пользовательского элемента управления](http://msdn.microsoft.com/library/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad).  
  
> [!NOTE]
>  <xref:System.Web.Configuration.OutputCacheProfile.VaryByControl%2A> Параметры совпадают с используемыми `VaryByControls` атрибута директивы.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.VaryByControl%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#3)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByCustom">
      <MemberSignature Language="C#" Value="public string VaryByCustom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByCustom" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByCustom As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByCustom { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByCustom : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByCustom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByCustom")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" /> property.</summary>
        <value>Значение <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByCustom%2A> Может быть любой текст, представляющий пользовательские требования кэширования выходных данных. Если введена пользовательская строка, необходимо переопределить <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> метод в файле Global.asax приложения.  
  
> [!NOTE]
>  <xref:System.Web.Configuration.OutputCacheProfile.VaryByCustom%2A> Параметры совпадают с используемыми `VaryByCustom` атрибута директивы.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.VaryByCustom%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#9)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="VaryByHeader">
      <MemberSignature Language="C#" Value="public string VaryByHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByHeader As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByHeader { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByHeader : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByHeader")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" /> property.</summary>
        <value>Значение <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByHeader%2A> Представляет собой разделенный точками с запятой набор заголовков, используемых для выходных данных кэша. Это заголовки HTTP, связанные с запросом. Дополнительные сведения см. в разделе [кэширование нескольких версий страницы](http://msdn.microsoft.com/library/c60284a9-9899-4fdc-a97c-020766b7572e).  
  
> [!NOTE]
>  <xref:System.Web.Configuration.OutputCacheProfile.VaryByHeader%2A> Параметры совпадают с используемыми `VaryByHeader` атрибут. Различение по всем заголовкам, задав значение «*» не рекомендуется. Это может привести к переполнению кэша или отказ в обслуживании на веб-сервере.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.VaryByHeader%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#2)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByParam">
      <MemberSignature Language="C#" Value="public string VaryByParam { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByParam" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByParam As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByParam { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByParam : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByParam" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByParam")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" /> property.</summary>
        <value>Значение <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A> Представляет собой разделенный точками с запятой набор параметров, используемых для выходных данных кэша. Допускает различие кэшированного вывода по GET строку запроса или параметрам формы POST. Например можно изменять выходные данные пользовательского элемента управления в кэш, указав имя пользовательского элемента управления вместе со строкой запроса или параметров отправки формы. Дополнительные сведения см. в разделе [кэширование нескольких версий из вывода пользовательского элемента управления](http://msdn.microsoft.com/library/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad).  
  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A> Параметр должен быть определен в профиле или директиве страницы, с помощью профиля.  
  
> [!NOTE]
>  <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A?displayProperty=nameWithType> Параметры совпадают с используемыми `VaryByParam` атрибут. Различение по всем параметрам, задав значение «*» не рекомендуется. Это может привести к переполнению кэша или отказ в обслуживании на веб-сервере.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A>.  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#8)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
      </Docs>
    </Member>
  </Members>
</Type>