<Type Name="DynamicFilterExpression" FullName="System.Web.DynamicData.DynamicFilterExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd6f13f32551502e31c15e2a801cf62772d07320" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30537508" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicFilterExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicFilterExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicFilterExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicFilterExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Изменяет запрос к базе данных с помощью значения из указанного элемента управления фильтра.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicFilterExpression> Позволяет изменить запрос к базе данных, используя значения, назначенные в <xref:System.Web.DynamicData.DynamicFilter> элемента управления. Этот элемент управления делегирует задачу построения <xref:System.Linq.IQueryable> запрос специализированного элемента управления, такие как <xref:System.Web.DynamicData.QueryableFilterRepeater> управления или <xref:System.Web.DynamicData.DynamicFilter> элемента управления.  
  
 В свою очередь фильтрующие элементы управления делегируют построение запроса шаблон фильтра, который они ссылаются. Затем выполняется запрос элемента управления источником данных, на который ссылается <xref:System.Web.UI.WebControls.QueryExtender> элемента управления.  
  
 Для использования <xref:System.Web.DynamicData.DynamicFilterExpression> класса на странице выполните следующие действия:  
  
-   Добавить <xref:System.Web.UI.WebControls.QueryExtender> на страницу элемент управления.  
  
-   Задать `TargetControlID` свойства <xref:System.Web.UI.WebControls.QueryExtender> элемента управления ссылки на элемент управления источника данных.  
  
-   Добавить <xref:System.Web.DynamicData.DynamicFilterExpression> объект в качестве дочернего элемента <xref:System.Web.UI.WebControls.QueryExtender> элемента управления.  
  
-   Задать `ControlID` свойство <xref:System.Web.DynamicData.DynamicFilterExpression> объект ссылки на элемент фильтра.  
  
 В предыдущих шагах предполагается определенные связанные фильтрующие элементы управления, элементов управления с привязкой к данным и управления источником данных на странице.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Web.DynamicData.DynamicFilterExpression> управления, чтобы выбрать шаблон фильтра на странице. Выбран шаблон фильтра по <xref:System.Web.DynamicData.DynamicFilter> элемента управления, который определяется параметром <xref:System.Web.DynamicData.DynamicFilterExpression> управление с помощью его `ControID` свойство.  
  
```  
<asp:QueryExtender ID="QueryExtender1"   
    TargetControlID="GridDataSource" runat="server">  
    <asp:DynamicFilterExpression ControlID="CategoryFilterID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicFilterExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicFilterExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilterExpression.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает идентификатор фильтра элемента управления.</summary>
        <value>Идентификатор фильтра элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот идентификатор элемента управления используется <xref:System.Web.DynamicData.DynamicFilterExpression> класс для выбора фильтра элемента управления, на который он делегирует задачу построения запроса, который в свою очередь выполняется элементом управления источником данных.  
  
 Элемент управления фильтра делегирует задачу построения запроса, чтобы шаблон фильтра его ссылки. Затем выполняется запрос элемента управления источником данных, на который ссылается <xref:System.Web.UI.WebControls.QueryExtender> элемента управления.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Web.DynamicData.DynamicFilterExpression> класса, чтобы выбрать элемент управления фильтра на странице.  
  
```  
<asp:QueryExtender ID="QueryExtender1"   
    TargetControlID="GridDataSource" runat="server">  
    <asp:DynamicFilterExpression ControlID="CategoryFilterID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
        <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Изменяемый запрос к источнику данных.</param>
        <summary>Получает измененный запрос с помощью текущего значения фильтра.</summary>
        <returns>Запрос к источнику данных, измененный с использованием текущего значения, содержащегося в экземпляре <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicFilterExpression.GetQueryable%2A> Метод делегирует задачу построения запроса, чтобы ссылаться на элемент управления фильтром, который задается параметром шаблона фильтра <xref:System.Web.DynamicData.DynamicFilterExpression.ControlID%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetContext(class System.Web.UI.Control owner, class System.Web.HttpContext context, class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetContext (owner As Control, context As HttpContext, dataSource As IQueryableDataSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetContext(System::Web::UI::Control ^ owner, System::Web::HttpContext ^ context, System::Web::UI::WebControls::IQueryableDataSource ^ dataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="owner">Элемент управления, содержащий экземпляр <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />, например элемент управления <see cref="T:System.Web.UI.WebControls.QueryExtender" />.</param>
        <param name="context">Текущий объект <see cref="T:System.Web.HttpContext" />.</param>
        <param name="dataSource">Целевой источник данных для экземпляра <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />.</param>
        <summary>Инициализирует выражение сведениями об источнике данных.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>