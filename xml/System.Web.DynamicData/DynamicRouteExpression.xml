<Type Name="DynamicRouteExpression" FullName="System.Web.DynamicData.DynamicRouteExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f090017249e6d6e6320040d5243aa564d1dcc4ca" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36402158" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicRouteExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicRouteExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicRouteExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicRouteExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicRouteExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <TypeSignature Language="F#" Value="type DynamicRouteExpression = class&#xA;    inherit DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Получает первичный ключ из сведений маршрутизации, чтобы выполнить фильтрацию данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicRouteExpression> Класс используется с <xref:System.Web.UI.WebControls.QueryExtender> элемента управления в разметке страницы. <xref:System.Web.DynamicData.DynamicRouteExpression> Класс получает первичный ключ из сведений маршрутизации, содержащегося в веб-запроса. <xref:System.Web.UI.WebControls.QueryExtender> Управления затем использует этот ключ в `Where` предложения. Изменяет запрос для источника данных, который возвращает строки таблицы, отфильтрованные по ключу.  
  
 Можно также фильтровать данные с помощью внешнего ключа, который можно указать с помощью <xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A> свойство.  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:DynamicRouteExpression  
  ColumnName="Name of the foreign key column"/>  
```  
  
   
  
## Examples  
 Проект Visual Studio с исходным кодом доступен по следующему адресу: [формирование шаблонов динамических данных](http://go.microsoft.com/fwlink/?LinkId=168914).  
  
 В следующем примере настраиваемый шаблон страницы List.aspx для таблицы Products. Она использует <xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A> свойство для определения внешнего ключа ProductCategory для фильтрации строк продуктов.  
  
 Настраиваемая страница List.aspx отображает столбец, содержащий ссылки на категории, содержащиеся в столбце внешнего ключа ProductCategory. Когда пользователь нажимает одну из этих ссылок, страница List.aspx отображает только строки, содержащие выбранной категории.  
  
 В примере требуется следующее:  
  
-   Динамические данные веб-сайта. Дополнительные сведения см. в разделе [Пошаговое руководство: Создание нового динамического веб-сайта с помощью формирования шаблонов данных](http://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).  
  
-   Образец базы данных AdventureWorksLT. Дополнительные сведения см. в разделе [как: подключение к базе данных AdventureWorksLT. MDF-файл](http://msdn.microsoft.com/library/d34ffbac-607d-40f1-b088-0a3304ea032b).  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicRouteExpression#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicrouteexpression/cs/list.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicRouteExpression#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicrouteexpression/vb/list.aspx#1)]  
  
 [!code-csharp[System.Web.DynamicData.DynamicRouteExpression#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicrouteexpression/cs/list.aspx.cs#3)]
 [!code-vb[System.Web.DynamicData.DynamicRouteExpression#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicrouteexpression/vb/list.aspx.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicRouteExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicRouteExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicRouteExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicRouteExpression" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно не нужно вызывать <xref:System.Web.DynamicData.DynamicRouteExpression.%23ctor%2A> конструктор. Вместо этого использовать <xref:System.Web.DynamicData.DynamicRouteExpression> в разметке страницы и класс инициализируется при загрузке страницы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicRouteExpression.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnName : string with get, set" Usage="System.Web.DynamicData.DynamicRouteExpression.ColumnName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя столбца, который содержит внешний ключ, используемый для запросов к источнику данных.</summary>
        <value>Имя столбца внешнего ключа.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A> Свойство представляет внешний ключ. Этот ключ используется для изменения запроса для источника данных.  
  
   
  
## Examples  
 Приведенный ниже показано, как указать столбец внешнего ключа ProductCategory для фильтрации отображаемых продуктов. Данный пример является частью большего примера, приведенного для <xref:System.Web.DynamicData.DynamicRouteExpression> класса.  
  
```  
<asp:QueryExtender TargetControlID="GridDataSource"   
    ID="GridQueryExtender" runat="server">  
  <asp:DynamicRouteExpression ColumnName="ProductCategory" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicRouteExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="dynamicRouteExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Изменяемый запрос.</param>
        <summary>Получает запрос от источника данных.</summary>
        <returns>Экземпляр измененного запроса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Запрос из источника данных, представленного `source` параметр, изменяется путем применения первичного или внешнего ключа, который является текущая информация о маршруте.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetContext(class System.Web.UI.Control owner, class System.Web.HttpContext context, class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicRouteExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetContext (owner As Control, context As HttpContext, dataSource As IQueryableDataSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetContext(System::Web::UI::Control ^ owner, System::Web::HttpContext ^ context, System::Web::UI::WebControls::IQueryableDataSource ^ dataSource);" />
      <MemberSignature Language="F#" Value="override this.SetContext : System.Web.UI.Control * System.Web.HttpContext * System.Web.UI.WebControls.IQueryableDataSource -&gt; unit" Usage="dynamicRouteExpression.SetContext (owner, context, dataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="owner">Элемент управления, содержащий экземпляр <see cref="T:System.Web.DynamicData.DynamicRouteExpression" />. Это элемент управления <see cref="T:System.Web.UI.WebControls.QueryExtender" />.</param>
        <param name="context">Контекст веб-запроса.</param>
        <param name="dataSource">Целевой источник данных для экземпляра <see cref="T:System.Web.DynamicData.DynamicRouteExpression" />.</param>
        <summary>Задает HTTP-контекст объекта <see cref="T:System.Web.DynamicData.DynamicRouteExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>