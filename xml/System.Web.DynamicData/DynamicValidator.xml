<Type Name="DynamicValidator" FullName="System.Web.DynamicData.DynamicValidator">
  <TypeSignature Language="C#" Value="public class DynamicValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicValidator : System::Web::UI::WebControls::BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicValidator), "DynamicValidator.bmp")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0d2e8-101">Принудительно применяет и перехватывает исключения, возникающие в модели данных, и выводит сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-101">Enforces and catches exceptions that are thrown in a data model and displays the error.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d2e8-102"><xref:System.Web.DynamicData.DynamicValidator> Элемент управления может использоваться с полями данных или сущностями данных.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-102">The <xref:System.Web.DynamicData.DynamicValidator> control can be used with data fields or data entities.</span></span> <span data-ttu-id="0d2e8-103">Он перехватывает исключения, возникающие в классах LINQ to SQL или сущности в методах расширения в модели данных.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-103">It catches exceptions that are thrown in LINQ-to-SQL classes or entity in extensibility methods in the data model.</span></span> <span data-ttu-id="0d2e8-104"><xref:System.Web.DynamicData.DynamicValidator> Элемента управления связано с элементами управления, которые принимают пользовательский ввод.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-104">The <xref:System.Web.DynamicData.DynamicValidator> control is associated with the controls that accept user input.</span></span> <span data-ttu-id="0d2e8-105">Например <xref:System.Web.DynamicData.DynamicValidator> элемента управления, связанного с текстовое поле, принимающее вводимые пользователем данные для поля UnitsInStock в таблице Products перехватывает и отображает исключение, которое выдается, если входные данные — больше или меньше, чем допустимо в модели данных.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-105">For example, a <xref:System.Web.DynamicData.DynamicValidator> control that is associated with a text box that accepts user input for a UnitsInStock field in a Products table catches and displays the exception that is thrown if the input is greater or less than the allowable units in the data model.</span></span>  
  
 <span data-ttu-id="0d2e8-106">По умолчанию динамических данных ASP.NET не отображаются все исключения из модели данных на странице, так как некоторые исключения базы данных могут содержать конфиденциальные сведения.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-106">By default, ASP.NET Dynamic Data does not display all exceptions from the data model in the page, because some database exceptions might contain confidential information.</span></span> <span data-ttu-id="0d2e8-107">Отображение динамических данных <xref:System.Web.DynamicData.DynamicValidator.ValidationException%2A> только значения.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-107">Dynamic Data displays <xref:System.Web.DynamicData.DynamicValidator.ValidationException%2A> values only.</span></span> <span data-ttu-id="0d2e8-108">Если требуется, чтобы приложения, чтобы отобразить другие исключения, можно создать <xref:System.Web.DynamicData.DynamicValidator> управления, предоставляют исключения, которые должны отображаться и вложите исключения для <xref:System.Web.DynamicData.DynamicValidator> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-108">If you want your application to display other exceptions, you can create a <xref:System.Web.DynamicData.DynamicValidator> control, provide the exceptions that you want to display, and attach the exceptions to the <xref:System.Web.DynamicData.DynamicValidator> control.</span></span> <span data-ttu-id="0d2e8-109">Исключения, возникающие в модели данных будет отображаться на всех страницах приложения.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-109">The exceptions that are thrown in the data model will be displayed in all pages in the application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d2e8-110">В следующем примере показано, как создать <xref:System.Web.DynamicData.DynamicValidator> управлять классом, который отображает другие исключения на всех страницах.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-110">The following example shows how to create a <xref:System.Web.DynamicData.DynamicValidator> control class that displays other exceptions in all pages.</span></span>  
  
```vb  
''' <summary>   
''' Display other exceptions in all pages.   
''' </summary>   
Public Class MyDynamicValidator   
    Inherits DynamicValidator   
  
    Protected Overloads Overrides Sub ValidateException(ByVal exception As Exception)   
        ' If it's not an exception that DynamicValidator displays find   
        ' the innermost exception.   
        If Not (TypeOf exception Is IDynamicValidatorException) AndAlso _  
                Not (TypeOf exception Is ValidationException) Then   
            While exception.InnerException IsNot Nothing   
                exception = exception.InnerException   
            End While   
  
            ' Wrap it in a ValidationException so that the base code   
            ' does not ignore it.   
            If ExceptionShouldBeDisplayedInPage(exception) Then   
                exception = New ValidationException(Nothing, exception)   
            End If   
        End If   
  
        ' Call the base class for the exception that is modified.  
        MyBase.ValidateException(exception)   
    End Sub   
  
    Private Function ExceptionShouldBeDisplayedInPage(ByVal e As Exception) _  
            As Boolean   
        ' Add code to find the exception and   
        ' decide whether it should be shown in the page.  
  
        Return True   
    End Function   
End Class  
```  
  
```csharp  
/// <summary>  
/// Display other exceptions in all pages.   
/// </summary>  
public class MyDynamicValidator : DynamicValidator {  
  
    protected override void ValidateException(Exception exception) {  
        // If it's not an exception that DynamicValidator displays find   
        // the innermost exception.  
        if (!(exception is IDynamicValidatorException) && !(exception   
              is ValidationException)) {  
            while (exception.InnerException != null) {  
                exception = exception.InnerException;  
            }  
  
            // Wrap it in a ValidationException so that the base code   
            // does not ignore it.  
            if (ExceptionShouldBeDisplayedInPage(exception)) {  
                exception = new ValidationException(null, exception);  
            }  
        }  
  
        // Call the base class on the exception that is modified.  
        base.ValidateException(exception);  
    }  
  
    private bool ExceptionShouldBeDisplayedInPage(Exception e) {  
        // Add your code to find the exception and  
        // decides whether it should be shown in the page.  
  
           return true;  
    }  
}  
```  
  
 <span data-ttu-id="0d2e8-111">В следующем примере показано, как использовать сопоставления тегов в файле web.config для отображения исключения в веб-страницах.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-111">The following example shows how to use tag remapping in the web.config file to display the exception in all the Web pages.</span></span>  
  
```xml  
<pages>  
  <tagMapping>  
    <add tagType="System.Web.DynamicData.DynamicValidator"   
        mappedTagType="MyDynamicValidator"/>  
  </tagMapping>  
</pages>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d2e8-112">Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.DynamicValidator" />.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-112">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicValidator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn Column { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidator.Column" />
      <MemberSignature Language="VB.NET" Value="Public Property Column As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaColumn ^ Column { System::Web::DynamicData::MetaColumn ^ get(); void set(System::Web::DynamicData::MetaColumn ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d2e8-113">Возвращает или задает проверяемый столбец.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-113">Gets or sets the column to validate.</span></span></summary>
        <value><span data-ttu-id="0d2e8-114">Проверяемый столбец или значение <see langword="null" />, если проверяется сущность данных.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-114">The column to validate, or <see langword="null" /> if a data entity is validated.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidator.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d2e8-115">Возвращает имя проверяемого столбца.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-115">Gets the name of the column to validate.</span></span></summary>
        <value><span data-ttu-id="0d2e8-116">Имя проверяемого столбца или значение <see langword="null" />, если проверяется сущность данных.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-116">The name of the column to validate, or <see langword="null" /> if a data entity is validated.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlPropertiesValid">
      <MemberSignature Language="C#" Value="protected override bool ControlPropertiesValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ControlPropertiesValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicValidator.ControlPropertiesValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ControlPropertiesValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ControlPropertiesValid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d2e8-117">Указывает, допустимы ли свойства заданного элемента управления <see cref="T:System.Web.DynamicData.DynamicValidator" />.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-117">Indicates whether the properties of the specified <see cref="T:System.Web.DynamicData.DynamicValidator" /> control are valid.</span></span></summary>
        <returns>
          <span data-ttu-id="0d2e8-118"><see langword="true" />, если свойства заданного проверяющего элемента управления допустимы; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-118"><see langword="true" />, if the properties of the specified validation control are valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d2e8-119">Этот метод переопределяется из базового класса.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-119">This method is overridden from the base class.</span></span> <span data-ttu-id="0d2e8-120">Вызов базового класса завершается неудачей, если элемент управления, который вы пытаетесь проверить не имеет свойства проверки.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-120">The call to the base class fails if the control you try to validate does not have a validation property.</span></span> <span data-ttu-id="0d2e8-121">Например, если элемент управления является <xref:System.Web.UI.WebControls.GridView>, произойдет сбой базового класса.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-121">For example if the control is a <xref:System.Web.UI.WebControls.GridView>, the base class will fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d2e8-122">Определяет, допустимо ли значение элемента управления для ввода.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-122">Determines whether the value in the input control to validate is valid.</span></span></summary>
        <returns>
          <span data-ttu-id="0d2e8-123"><see langword="true" />, если оцениваемый проверяющий элемент управления допустим; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-123"><see langword="true" /> if the validation control that is evaluated is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicValidator.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0d2e8-124">Данные события.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-124">The event data.</span></span></param>
        <summary><span data-ttu-id="0d2e8-125">Создает событие <see langword="Init" /> для инициализации элемента управления <see cref="T:System.Web.DynamicData.DynamicValidator" />.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-125">Raises the <see langword="Init" /> event to initialize the <see cref="T:System.Web.DynamicData.DynamicValidator" /> control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateException">
      <MemberSignature Language="C#" Value="protected virtual void ValidateException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicValidator.ValidateException(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateException(Exception ^ exception);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="0d2e8-126">Выбрасываемое исключение.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-126">The exception that is thrown.</span></span></param>
        <summary><span data-ttu-id="0d2e8-127">Выбрасывает исключение проверки, если в модели данных происходит исключение.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-127">Sets up a validation exception if an exception occurs in the data model.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d2e8-128">Этот метод вызывается, когда возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-128">This method is called when an exception is thrown.</span></span> <span data-ttu-id="0d2e8-129">Проверяющий элемент управления для конкретного столбца завершается неудачно, если исключение проверки содержит связанное внутреннее исключение, но глобальный проверяющий элемент управления ошибкой, когда происходит исключение без проверки.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-129">A column-specific validator fails when a validation exception contains an associated inner exception, but a global validator fail when a non-validation exception occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d2e8-130">Используйте этот метод, только если исключение <xref:System.Web.DynamicData.DynamicValidator.ValidationException%2A>.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-130">Only use this method if the exception is a <xref:System.Web.DynamicData.DynamicValidator.ValidationException%2A>.</span></span> <span data-ttu-id="0d2e8-131">Если исключение вызывается ошибка базы данных, с помощью этого метода можно отобразить серьезную ошибку базы данных</span><span class="sxs-lookup"><span data-stu-id="0d2e8-131">If the exception is caused by a database error, using this method can display a sensitive database error</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationException">
      <MemberSignature Language="C#" Value="protected virtual Exception ValidationException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ValidationException" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidator.ValidationException" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property ValidationException As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Exception ^ ValidationException { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d2e8-132">Возвращает или задает исключение проверки, происходящее во время проверки.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-132">Gets or sets validation exception that occurs during validation.</span></span></summary>
        <value><span data-ttu-id="0d2e8-133">Выбрасываемое исключение проверки.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-133">The validation exception that is thrown.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d2e8-134">Это свойство представляет исключение проверки, которое выдается при возникновении ошибки при редактировании значение или при вставке нового значения в модели данных.</span><span class="sxs-lookup"><span data-stu-id="0d2e8-134">This property represents the validation exception that is thrown if an error occurs when a value is edited or when a new value is inserted into the data model.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>