<Type Name="MetaChildrenColumn" FullName="System.Web.DynamicData.MetaChildrenColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="01c818f5cfdcf4e630ca986037e1dcef2e004797" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36401797" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MetaChildrenColumn : System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaChildrenColumn extends System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaChildrenColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaChildrenColumn&#xA;Inherits MetaColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaChildrenColumn : System::Web::DynamicData::MetaColumn" />
  <TypeSignature Language="F#" Value="type MetaChildrenColumn = class&#xA;    inherit MetaColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.DynamicData.MetaColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f4d3a-101">Представляет поле базы данных, задающее отношение "один-ко-многим".</span>
      <span class="sxs-lookup">
        <span data-stu-id="f4d3a-101">Represents a database field that indicates a one-to-many relationship.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d3a-102">В приложениях платформы динамических данных ASP.NET <xref:System.Web.DynamicData.MetaChildrenColumn> класс представляет поле базы данных, указывающее один ко многим "или" родители-потомки.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-102">In ASP.NET Dynamic Data applications, the <xref:System.Web.DynamicData.MetaChildrenColumn> class represents a database field that indicates a one-to-many relationship or a parent-child relationship.</span></span>  
  
 <span data-ttu-id="f4d3a-103"><xref:System.Web.DynamicData.MetaChildrenColumn> Класс представляет поле в родительской таблице связи "один ко многим".</span><span class="sxs-lookup"><span data-stu-id="f4d3a-103">The <xref:System.Web.DynamicData.MetaChildrenColumn> class represents the field in the parent table of the one-to-many relationship.</span></span> <span data-ttu-id="f4d3a-104">Тем не менее, можно получить доступ к дочерний объект таблицы с помощью <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-104">However, you can access the child table object by using the <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> property.</span></span> <span data-ttu-id="f4d3a-105">Можно также получить поле внешнего ключа в дочерней таблице с помощью <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-105">You can also retrieve the foreign-key field in the child table by using the <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.MetaColumn" />
    <altmember cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaChildrenColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider entityMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaTable table, class System.Web.DynamicData.ModelProviders.ColumnProvider entityMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (table As MetaTable, entityMember As ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaChildrenColumn(System::Web::DynamicData::MetaTable ^ table, System::Web::DynamicData::ModelProviders::ColumnProvider ^ entityMember);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.MetaChildrenColumn : System.Web.DynamicData.MetaTable * System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaChildrenColumn" Usage="new System.Web.DynamicData.MetaChildrenColumn (table, entityMember)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="entityMember" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="f4d3a-106">Метатаблица.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-106">The meta table.</span>
          </span>
        </param>
        <param name="entityMember">
          <span data-ttu-id="f4d3a-107">Поставщик столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-107">The column provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4d3a-108">Инициализирует новый экземпляр класса <see cref="T:System.Web.DynamicData.MetaChildrenColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-108">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable ChildTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable ChildTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.ChildTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildTable As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaTable ^ ChildTable { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildTable : System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaChildrenColumn.ChildTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f4d3a-109">Возвращает объект, представляющий дочернюю таблицу в отношении "один-ко-многим".</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-109">Gets an object that represents the child table of the one-to-many relationship.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f4d3a-110">Объект, представляющий дочернюю таблицу в отношении "один-ко-многим".</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-110">An object that represents the child table of the one-to-many relationship.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d3a-111">Используйте <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> свойство, чтобы получить объект, представляющий дочернюю таблицу в связи "один ко многим".</span><span class="sxs-lookup"><span data-stu-id="f4d3a-111">Use the <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> property to get an object that represents the child table of the one-to-many relationship.</span></span> <span data-ttu-id="f4d3a-112">Доступ к родительской таблице с помощью <xref:System.Web.DynamicData.MetaColumn.Table%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-112">You can access the parent table by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Table" />
      </Docs>
    </Member>
    <Member MemberName="ColumnInOtherTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn ColumnInOtherTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn ColumnInOtherTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnInOtherTable As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaColumn ^ ColumnInOtherTable { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnInOtherTable : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f4d3a-113">Возвращает объект, представляющий поле внешнего ключа в дочерней таблице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-113">Gets an object that represents the foreign-key field in the child table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f4d3a-114">Объект, представляющий поле внешнего ключа в дочерней таблице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-114">An object that represents the foreign-key field in the child table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d3a-115"><xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> Свойство позволяет получить ссылку на поле в дочерней таблице.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-115">The <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> property enables you to get a reference to the field in the child table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildrenListPath">
      <MemberSignature Language="C#" Value="public string GetChildrenListPath (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenListPath(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenListPath (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenListPath(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetChildrenListPath : obj -&gt; string&#xA;override this.GetChildrenListPath : obj -&gt; string" Usage="metaChildrenColumn.GetChildrenListPath row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenListPath(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">
          <span data-ttu-id="f4d3a-116">Строка, содержащая поле внешнего ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-116">The row that contains the foreign-key field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4d3a-117">Получает путь к странице действия списка для дочерней таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-117">Gets the path of the list-action page for the child table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4d3a-118">Путь к странице действия списка для дочерней таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-118">The path of the list-action page for the child table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d3a-119">Используйте <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> метод, если вы хотите получить странице действия списка для дочерней таблицы, с использованием заданной строки является родительским.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-119">Use the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> method when you want to retrieve the list-action page for the child table using the specified row as a parent.</span></span> <span data-ttu-id="f4d3a-120">Получение пути осуществляется путем добавления значения строки запроса URL-адрес, содержащий значение поля внешнего ключа, указанного в `row` параметра.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-120">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="f4d3a-121">С помощью <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> метод является таким же, как вызов <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> метода и передача <xref:System.Web.DynamicData.PageAction.List%2A> действие в качестве первого параметра.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-121">Using the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> method is the same as invoking the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> method and passing the <xref:System.Web.DynamicData.PageAction.List%2A> action as the first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.PageAction.List" />
        <altmember cref="Overload:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildrenPath">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4d3a-122">Возвращает путь к заданной странице действия для дочерней таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-122">Gets the path for the specified action page of the child table.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildrenPath">
      <MemberSignature Language="C#" Value="public string GetChildrenPath (string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenPath(string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenPath (action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenPath(System::String ^ action, System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetChildrenPath : string * obj -&gt; string&#xA;override this.GetChildrenPath : string * obj -&gt; string" Usage="metaChildrenColumn.GetChildrenPath (action, row)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenPath(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="f4d3a-123">Целевое действие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-123">The target action.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="f4d3a-124">Строка, содержащая поле внешнего ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-124">The row that contains the foreign-key field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4d3a-125">Получает путь к заданной странице действия для дочерней таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-125">Gets the path of the specified action page of the child table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4d3a-126">Путь к заданной странице действия для дочерней таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-126">The path of the specified action page of the child table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d3a-127"><xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> Возвращает путь к заданной странице действия для дочерней таблицы.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-127">The <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> method returns the path of the specified action page for the child table.</span></span> <span data-ttu-id="f4d3a-128">Возвращаемый путь основан на маршрутах, определенных для приложения платформы динамических данных ASP.NET и является указанной строки в качестве родительского.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-128">The path returned is based on the routes that are defined for the ASP.NET Dynamic Data application and has the specified row as a parent.</span></span> <span data-ttu-id="f4d3a-129">Получение пути осуществляется путем добавления значения строки запроса URL-адрес, содержащий значение поля внешнего ключа, указанного в `row` параметра.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-129">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="f4d3a-130">Если `row` — `null`, данный метод возвращает пустую строку.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-130">If `row` is `null`, his method returns an empty string.</span></span>  
  
 <span data-ttu-id="f4d3a-131">Можно использовать значения, заданные в <xref:System.Web.DynamicData.PageAction> класса для `action` параметра.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-131">You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.PageAction" />
      </Docs>
    </Member>
    <Member MemberName="GetChildrenPath">
      <MemberSignature Language="C#" Value="public string GetChildrenPath (string action, object row, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenPath(string action, object row, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenPath (action As String, row As Object, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenPath(System::String ^ action, System::Object ^ row, System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member GetChildrenPath : string * obj * string -&gt; string&#xA;override this.GetChildrenPath : string * obj * string -&gt; string" Usage="metaChildrenColumn.GetChildrenPath (action, row, path)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="f4d3a-132">Целевое действие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-132">The target action.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="f4d3a-133">Строка, содержащая поле внешнего ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-133">The row that contains the foreign-key field.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="f4d3a-134">Целевая страница.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-134">The target page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4d3a-135">Возвращает путь к заданной странице действия для дочерней таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-135">Gets the path for the specified action page of the child table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4d3a-136">Путь к заданной странице действия для дочерней таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-136">The path of the specified action page of the child table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d3a-137"><xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> Возвращает путь к заданной странице действия для дочерней таблицы.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-137">The <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> method returns the path of the specified action page for the child table.</span></span> <span data-ttu-id="f4d3a-138">Путь основан на в заданном пути с заданной строки является родительским.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-138">The path is based on the specified path with the specified row as a parent.</span></span> <span data-ttu-id="f4d3a-139">Получение пути осуществляется путем добавления значения строки запроса URL-адрес, содержащий значение поля внешнего ключа, указанного в `row` параметра.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-139">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="f4d3a-140">Если `row` — `null`, этот метод возвращает пустую строку.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-140">If `row` is `null`, this method returns an empty string.</span></span> <span data-ttu-id="f4d3a-141">Если `path` — `null`, <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> метод возвращает путь на основе маршрутов, определенных для приложения платформы динамических данных ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-141">If `path` is `null`, the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> method returns the path based on the routes defined for the ASP.NET Dynamic Data application.</span></span>  
  
 <span data-ttu-id="f4d3a-142">Можно использовать значения, заданные в <xref:System.Web.DynamicData.PageAction> класса для `action` параметра.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-142">You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.PageAction" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="metaChildrenColumn.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f4d3a-143">Инициализирует данные, которые могут быть недоступны на момент вызова конструктора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-143">Initializes data that might not be available when the constructor is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d3a-144">Этот метод не может вызываться напрямую.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-144">This method cannot be called directly.</span></span> <span data-ttu-id="f4d3a-145">Чтобы настроить инициализацию, можно наследовать от этого класса и переопределить `Initialize` метод.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-145">To customize initialization, you can derive from this class and override the `Initialize` method.</span></span> <span data-ttu-id="f4d3a-146">При переопределении этого метода следует вызвать базовый элемент управления `Initialize` метод.</span><span class="sxs-lookup"><span data-stu-id="f4d3a-146">If you override this method, call the base control's `Initialize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManyToMany">
      <MemberSignature Language="C#" Value="public bool IsManyToMany { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManyToMany" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.IsManyToMany" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsManyToMany As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManyToMany { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsManyToMany : bool" Usage="System.Web.DynamicData.MetaChildrenColumn.IsManyToMany" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaChildrenColumn.IsManyToMany</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f4d3a-147">Получает значение, указывающее, является ли столбец частью отношения "многие-ко-многим".</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-147">Gets a value that indicates the many-to-many relationship status of the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f4d3a-148">Значение <see langword="true" />, если столбец является частью отношения "многие-ко-многим"; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d3a-148">
              <see langword="true" /> if the column relationship is many-to-many; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>