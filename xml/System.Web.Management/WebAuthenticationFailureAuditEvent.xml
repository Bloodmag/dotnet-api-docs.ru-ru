<Type Name="WebAuthenticationFailureAuditEvent" FullName="System.Web.Management.WebAuthenticationFailureAuditEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="20f2b2f2f2b60fc8ab17f4aeebb341646158bfcf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36599943" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebAuthenticationFailureAuditEvent : System.Web.Management.WebFailureAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebAuthenticationFailureAuditEvent extends System.Web.Management.WebFailureAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebAuthenticationFailureAuditEvent&#xA;Inherits WebFailureAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebAuthenticationFailureAuditEvent : System::Web::Management::WebFailureAuditEvent" />
  <TypeSignature Language="F#" Value="type WebAuthenticationFailureAuditEvent = class&#xA;    inherit WebFailureAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebFailureAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет сведения о сбоях проверки подлинности ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже перечислены функции, для которого <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> событий по умолчанию с помощью ASP.NET.  
  
> [!NOTE]
>  По умолчанию ASP.NET настроена для условий сбоя аудита входа успех только, поскольку ведение журнала условий может значительно загрузить системные ресурсы. Всегда можно настроить систему на запись условий успеха.  
  
-   Проверка подлинности форм. Когда аудит успехов содержит имя пользователя, прошедшее проверку подлинности; Аудит отказов не включают имя пользователя, поскольку они обычно являются результатом билета, не удалось выполнить дешифрование или проверки. Оба содержат IP-адрес клиента. Код связанные события аудита — <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>.  
  
-   Членство. Успешные и неуспешные аудиты содержат имя пользователя, попытки. Ни одна из форм аудита будет содержать пароль, попытки, так как это создавало бы риск допустимый пароль в журнале. Код связанные события аудита — <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>.  
  
 Когда <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> происходит событие, по умолчанию он обновляет счетчик производительности проверки подлинности событий аудита отказов. Для просмотра этого счетчика производительности в системном мониторе (PerfMon) в **добавить счетчики** выберите `ASP.NET` в **производительности** объекта раскрывающегося списка, выберите ** Событий проверки подлинности отказов** счетчик производительности и нажмите кнопку **добавить** кнопки. Дополнительные сведения см. в разделе [с помощью системного монитора (PerfMon) с приложениями ASP.NET](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) на сайте MSDN.  
  
> [!NOTE]
>  В большинстве случаев можно будет использовать типы мониторинга состояния ASP.NET как реализованные и управлять системой мониторинга состояния, указав значения в `healthMonitoring` раздел конфигурации. Также можно наследовать от типов наблюдение за работоспособностью, чтобы создавать собственные пользовательские события и поставщиков. Например, производные от <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> см. в описании примера, приведенного в этом разделе.  
  
   
  
## Examples  
 Приведенный ниже пример кода показывает, как использовать класс <xref:System.Web.Management.WebAuthenticationFailureAuditEvent>.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#1)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationFailureAuditEvent (string message, object eventSource, int eventCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, System::String ^ nameToAuthenticate);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuthenticationFailureAuditEvent : string * obj * int * string -&gt; System.Web.Management.WebAuthenticationFailureAuditEvent" Usage="new System.Web.Management.WebAuthenticationFailureAuditEvent (message, eventSource, eventCode, nameToAuthenticate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Описание события.</param>
        <param name="eventSource">Объект, являющийся источником события.</param>
        <param name="eventCode">Связанное с событием значение <see cref="T:System.Web.Management.WebEventCodes" />.</param>
        <param name="nameToAuthenticate">Имя пользователя, который должен пройти проверку подлинности.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" /> с указанными параметрами события.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> Конструктор не предназначен для использования непосредственно из программного кода. Вызывается ASP.NET. Можно вызвать <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> конструктор при создании производной от <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> класса.  
  
   
  
## Examples  
 В следующем примере кода показано, как настроить этот конструктор.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#2)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode, System::String ^ nameToAuthenticate);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuthenticationFailureAuditEvent : string * obj * int * int * string -&gt; System.Web.Management.WebAuthenticationFailureAuditEvent" Usage="new System.Web.Management.WebAuthenticationFailureAuditEvent (message, eventSource, eventCode, eventDetailCode, nameToAuthenticate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Описание события.</param>
        <param name="eventSource">Объект, являющийся источником события.</param>
        <param name="eventCode">Код, связанный с событием. При реализации пользовательского события код события должен превышать <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Значение <see cref="T:System.Web.Management.WebEventCodes" />, указывающее подробный идентификатор для события.</param>
        <param name="nameToAuthenticate">Имя пользователя, который должен пройти проверку подлинности.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" /> с указанными параметрами события.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> Конструктор не предназначен для использования непосредственно из программного кода. Вызывается ASP.NET. Можно вызвать <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> конструктор при создании производной от <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> класса.  
  
   
  
## Examples  
 В следующем примере кода показано, как настроить этот конструктор.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameToAuthenticate">
      <MemberSignature Language="C#" Value="public string NameToAuthenticate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameToAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameToAuthenticate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameToAuthenticate { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameToAuthenticate : string" Usage="System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя пользователя для проверки подлинности.</summary>
        <value>Имя пользователя, который должен пройти проверку подлинности.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Только аудит успехов должен включать имя пользователя, прошедшего проверку подлинности. Аудит отказов не должен включают имя пользователя, поскольку они обычно являются результатом неудавшейся расшифровки или проверки.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate%2A> свойства.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
  </Members>
</Type>