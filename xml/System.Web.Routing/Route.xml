<Type Name="Route" FullName="System.Web.Routing.Route">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d3f0cc42d0b710e90cb52188d8d38bb8e88a3a7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540218" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Route : System.Web.Routing.RouteBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Route extends System.Web.Routing.RouteBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.Route" />
  <TypeSignature Language="VB.NET" Value="Public Class Route&#xA;Inherits RouteBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Route : System::Web::Routing::RouteBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Routing.RouteBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет свойства и методы для определения маршрута и получения сведений о маршруте.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Routing.Route> Позволяет указать способ обработки маршрутизации в приложении ASP.NET. Вы создаете <xref:System.Web.Routing.Route> объекта для каждого шаблона URL-адрес, необходимо сопоставить классу, который может обрабатывать запросы, соответствующие этому шаблону. Затем добавьте маршрут к <xref:System.Web.Routing.RouteTable.Routes%2A> коллекции. Когда приложение получает запрос, маршрутизация ASP.NET проходит по маршруты в <xref:System.Web.Routing.RouteTable.Routes%2A> коллекции, чтобы найти первый маршрут, соответствующий шаблону URL-адреса.  
  
 Задать <xref:System.Web.Routing.Route.Url%2A> свойства для шаблона URL-адреса. Шаблон URL-адрес состоит из сегментов, полученные после имени приложения в HTTP-запроса. Например, в URL-адрес `http://www.contoso.com/products/show/beverages`, шаблон применяется к `products/show/beverages`. Шаблон с тремя сегменты, такие как `{controller}/{action}/{id}`, соответствующий URL-адрес `http://www.contoso.com/products/show/beverages`. Каждый сегмент отделяется `/` символов. Когда сегмент заключен в фигурные скобки (`{` и `}`), сегмент ссылается на параметр URL-адреса. Маршрутизация ASP.NET извлекает значение из запроса и присваивает его параметру URL-адреса. В предыдущем примере, параметр URL-адреса `action` присваивается значение `show`. Если сегмент не заключен в фигурные скобки, значение обрабатывается как буквенное значение.  
  
 Задать <xref:System.Web.Routing.Route.Defaults%2A> свойства <xref:System.Web.Routing.RouteValueDictionary> объекта, который содержит значения, которые будут использоваться, если отсутствует параметр из URL-адрес или задать дополнительные значения, которые не параметризуются в URL-АДРЕСЕ. Задать <xref:System.Web.Routing.Route.Constraints%2A> свойства <xref:System.Web.Routing.RouteValueDictionary> объект, содержащий значения, которые являются либо регулярных выражений или <xref:System.Web.Routing.IRouteConstraint> объектов. Эти значения используются для определения, является ли допустимым значение параметра.  
  
   
  
## Examples  
 В следующем примере показано, как создать <xref:System.Web.Routing.Route> объекта и добавить его в <xref:System.Web.Routing.RouteTable.Routes%2A> свойство.  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Routing.Route" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">Шаблон URL-адреса для маршрута.</param>
        <param name="routeHandler">Объект, обрабатывающий запросы маршрута.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Routing.Route" />, используя заданный шаблон URL-адреса и класс-обработчик.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как создать <xref:System.Web.Routing.Route> объекта и добавить его в <xref:System.Web.Routing.RouteTable.Routes%2A> свойство.  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, defaults As RouteValueDictionary, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">Шаблон URL-адреса для маршрута.</param>
        <param name="defaults">Значения, которые необходимо использовать для параметров, отсутствующих в URL-адресе.</param>
        <param name="routeHandler">Объект, обрабатывающий запросы маршрута.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Routing.Route" />, используя заданный шаблон URL-адреса, значения параметров по умолчанию и класс-обработчик.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.Routing.Route.Defaults" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, defaults As RouteValueDictionary, constraints As RouteValueDictionary, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">Шаблон URL-адреса для маршрута.</param>
        <param name="defaults">Значения, используемые в случае, если URL-адрес не содержит всех параметров.</param>
        <param name="constraints">Регулярное выражение, задающее допустимые значения для параметра URL-адреса.</param>
        <param name="routeHandler">Объект, обрабатывающий запросы маршрута.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Routing.Route" />, используя заданный шаблон URL-адреса, значения параметров по умолчанию, ограничения и класс-обработчик.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.Routing.Route.Constraints" />
        <altmember cref="P:System.Web.Routing.Route.Defaults" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.RouteValueDictionary dataTokens, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.RouteValueDictionary dataTokens, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, defaults As RouteValueDictionary, constraints As RouteValueDictionary, dataTokens As RouteValueDictionary, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::RouteValueDictionary ^ dataTokens, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="dataTokens" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">Шаблон URL-адреса для маршрута.</param>
        <param name="defaults">Значения, используемые в случае, если URL-адрес не содержит всех параметров.</param>
        <param name="constraints">Регулярное выражение, задающее допустимые значения для параметра URL-адреса.</param>
        <param name="dataTokens">Пользовательские значения, передаваемые обработчику маршрута, но не используемые для определения соответствия маршрута заданному шаблону URL-адреса. Эти значения передаются обработчику маршрута, где они могут использоваться для обработки запроса.</param>
        <param name="routeHandler">Объект, обрабатывающий запросы маршрута.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Routing.Route" />, используя заданный шаблон URL-адреса, значения параметров по умолчанию, ограничения, пользовательские значения и класс-обработчик.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.Routing.Route.Constraints" />
        <altmember cref="P:System.Web.Routing.Route.DataTokens" />
        <altmember cref="P:System.Web.Routing.Route.Defaults" />
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteValueDictionary Constraints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteValueDictionary Constraints" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public Property Constraints As RouteValueDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteValueDictionary ^ Constraints { System::Web::Routing::RouteValueDictionary ^ get(); void set(System::Web::Routing::RouteValueDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает словарь выражений, задающих допустимые значения для параметра URL-адреса.</summary>
        <value>Объект, содержащий имена параметров и выражения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Routing.Route.Constraints%2A> Позволяет ограничить допустимые значения параметра URL-адрес, который обрабатывается средствами маршрут. Можно назначить <xref:System.Web.Routing.RouteValueDictionary> объект <xref:System.Web.Routing.Route.Constraints%2A> свойство. Каждый элемент в <xref:System.Web.Routing.RouteValueDictionary> объекта содержит имя параметра и одно из следующих:  
  
-   Строка, определяющая регулярное выражение. Регулярное выражение не учитывается регистр.  
  
-   Объект, реализующий интерфейс <xref:System.Web.Routing.IRouteConstraint> интерфейс и что включает в себя <xref:System.Web.Routing.IRouteConstraint.Match%2A> метод.  
  
 Класс <xref:System.Web.Routing.HttpMethodConstraint> реализует интерфейс <xref:System.Web.Routing.IRouteConstraint>. Можно включить экземпляр <xref:System.Web.Routing.HttpMethodConstraint> класс как ограничение, чтобы указать HTTP-команды, допустимые для маршрута.  
  
   
  
## Examples  
 В следующем примере показано, как создать <xref:System.Web.Routing.Route> и задайте <xref:System.Web.Routing.Route.Constraints%2A>, <xref:System.Web.Routing.Route.DataTokens%2A>, и <xref:System.Web.Routing.Route.Defaults%2A> свойства.  
  
 [!code-csharp[System.Web.Routing.Route.ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/VB/Global.asax#1)]  
  
 В следующем примере показан <xref:System.Web.Routing.Route> которого <xref:System.Web.Routing.Route.Constraints%2A> свойство содержит параметр с именем `httpMethod` с экземпляром <xref:System.Web.Routing.HttpMethodConstraint> класса для значения.  
  
 [!code-csharp[System.Web.Routing.Route.Constraints#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.Constraints/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.Constraints#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.Constraints/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTokens">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteValueDictionary DataTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteValueDictionary DataTokens" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.DataTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property DataTokens As RouteValueDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteValueDictionary ^ DataTokens { System::Web::Routing::RouteValueDictionary ^ get(); void set(System::Web::Routing::RouteValueDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает пользовательские значения, передаваемые обработчику маршрута, но не используемые для определения соответствия маршрута шаблону URL-адреса.</summary>
        <value>Объект, содержащий пользовательские значения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы используете <xref:System.Web.Routing.RouteData.DataTokens%2A> свойство для получения или назначить значения, связанные с маршрутом, не используемые для определения соответствия маршрута шаблону URL-адрес. Эти значения передаются обработчику маршрута, где они могут использоваться для обработки запроса.  
  
   
  
## Examples  
 В следующем примере показано, как создать <xref:System.Web.Routing.Route> и задайте <xref:System.Web.Routing.Route.Constraints%2A>, <xref:System.Web.Routing.Route.DataTokens%2A>, и <xref:System.Web.Routing.Route.Defaults%2A> свойства.  
  
 [!code-csharp[System.Web.Routing.Route.ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/VB/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Defaults">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteValueDictionary Defaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteValueDictionary Defaults" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.Defaults" />
      <MemberSignature Language="VB.NET" Value="Public Property Defaults As RouteValueDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteValueDictionary ^ Defaults { System::Web::Routing::RouteValueDictionary ^ get(); void set(System::Web::Routing::RouteValueDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значения, используемые в случае, если URL-адрес не содержит все параметры.</summary>
        <value>Объект, содержащий имена параметров и значения по умолчанию.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Routing.Route.Defaults%2A> Свойство позволяет задать значение для параметра URL-адреса, если URL-адрес не содержит сегмент для этого параметра. Можно назначить <xref:System.Web.Routing.RouteValueDictionary> объект <xref:System.Web.Routing.Route.Defaults%2A> свойство. Каждый элемент в <xref:System.Web.Routing.RouteValueDictionary> объекта содержит имя параметра и значение, используемое, если отсутствует параметр.  
  
 Могут включать значение по умолчанию для параметра, который не определен в <xref:System.Web.Routing.Route.Url%2A> свойство как сегмент. Когда маршрутизация ASP.NET обрабатывает запрос, это значение по умолчанию всегда передается обработчику маршрута. При создании URL-адреса и включении значение параметра по умолчанию, который не определен как сегмент, маршрут будет считаться только соответствие Если значением, которое вы указали совпадает со значением по умолчанию для маршрута.  
  
   
  
## Examples  
 В следующем примере показано, как создать <xref:System.Web.Routing.Route> и задайте <xref:System.Web.Routing.Route.Constraints%2A>, <xref:System.Web.Routing.Route.DataTokens%2A>, и <xref:System.Web.Routing.Route.Defaults%2A> свойства.  
  
 [!code-csharp[System.Web.Routing.Route.ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/VB/Global.asax#1)]  
  
 В следующем примере показан <xref:System.Web.Routing.Route> которого <xref:System.Web.Routing.Route.Defaults%2A> свойство содержит параметр, который не является частью шаблона в <xref:System.Web.Routing.Route.Url%2A> свойство.  
  
 [!code-csharp[System.Web.Routing.Route.Defaults#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.Defaults/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.Defaults#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.Defaults/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext">Объект, инкапсулирующий сведения об HTTP-запросе.</param>
        <summary>Возвращает информацию о запрошенном маршруте.</summary>
        <returns>Объект, содержащий значения из определения маршрута.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">Объект, инкапсулирующий сведения о запрошенном маршруте.</param>
        <param name="values">Объект, содержащий параметры для маршрута.</param>
        <summary>Возвращает сведения о URL-адресе, связанном с маршрутом.</summary>
        <returns>Объект, который содержит сведения о URL-адресе, связанном с маршрутом.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessConstraint">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessConstraint (System.Web.HttpContextBase httpContext, object constraint, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessConstraint(class System.Web.HttpContextBase httpContext, object constraint, string parameterName, class System.Web.Routing.RouteValueDictionary values, valuetype System.Web.Routing.RouteDirection routeDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.ProcessConstraint(System.Web.HttpContextBase,System.Object,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessConstraint(System::Web::HttpContextBase ^ httpContext, System::Object ^ constraint, System::String ^ parameterName, System::Web::Routing::RouteValueDictionary ^ values, System::Web::Routing::RouteDirection routeDirection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
        <Parameter Name="constraint" Type="System.Object" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeDirection" Type="System.Web.Routing.RouteDirection" />
      </Parameters>
      <Docs>
        <param name="httpContext">Объект, инкапсулирующий сведения об HTTP-запросе.</param>
        <param name="constraint">Регулярное выражение или объект, которые следует использовать для проверки параметра <c>parameterName</c>.</param>
        <param name="parameterName">Имя проверяемого параметра.</param>
        <param name="values">Проверяемые значения.</param>
        <param name="routeDirection">Значение, указывающее, обрабатывает ли маршрутизация URL-адресов входящий запрос или составляет URL-адрес.</param>
        <summary>Определяет, соответствует ли значение параметра заданному для этого параметра ограничению.</summary>
        <returns>
          <see langword="true" />, если значение параметра соответствует ограничению; в противном случае — <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="constraint" /> не является строкой, содержащей регулярное выражение.</exception>
      </Docs>
    </Member>
    <Member MemberName="RouteHandler">
      <MemberSignature Language="C#" Value="public System.Web.Routing.IRouteHandler RouteHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.IRouteHandler RouteHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.RouteHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteHandler As IRouteHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::IRouteHandler ^ RouteHandler { System::Web::Routing::IRouteHandler ^ get(); void set(System::Web::Routing::IRouteHandler ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.IRouteHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект, обрабатывающий запросы для маршрута.</summary>
        <value>Объект, который обрабатывает запрос.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает шаблон URL-адреса для маршрута.</summary>
        <value>Шаблон для сопоставления маршрута и URL-адреса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если присвоить значение <xref:System.Web.Routing.Route.Url%2A> свойства `/` символ интерпретируется как разделитель при анализе URL-адрес. Используйте фигурные скобки (`{}`) для определения переменной, которая называется *параметр URL-адреса*. Значение из соответствующего сегмента в URL-адрес назначается параметр URL-адреса. Все значения в <xref:System.Web.Routing.Route.Url%2A> свойство, не заключенный в фигурные скобки, обрабатываются как литеральные константы.  
  
 `?` Символ не допускается в <xref:System.Web.Routing.Route.Url%2A> свойство. Каждый сегмент URL-адреса должны быть разделены разделителем или литеральной константой. Можно использовать `{{` или `}}` как escape-символы для символа фигурной скобки.  
  
   
  
## Examples  
 Следующий пример показывает, как задать <xref:System.Web.Routing.Route.Url%2A> свойства в конструкторе класса. Шаблон содержит литеральное значение «Категория» для первого сегмента и параметры URL-адреса для следующих двух сегментов.  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Любое из следующих:  
  
-   Значение начинается с символа <c>~</c> или <c>/</c>.  
  
-   Значение содержит символ <c>?</c> .  
  
-   Параметр catch-all не является последним.</exception>
        <exception cref="T:System.Exception">Сегменты URL-адреса не разделены разделителем или литеральной константой.</exception>
      </Docs>
    </Member>
  </Members>
</Type>