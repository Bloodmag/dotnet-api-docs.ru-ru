<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fed067b68018bdab0ef4b4da047a750da000af7e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36398212" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="94a3f-101">Предоставляет абстрактный базовый класс для пользовательского преобразователя типов.</span>
      <span class="sxs-lookup">
        <span data-stu-id="94a3f-101">Provides an abstract base class for a custom type converter.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a3f-102"><xref:System.Web.Script.Serialization.JavaScriptConverter> Класс позволяет реализовать сериализации и десериализации процессы для управляемых типов, которые не поддерживаются изначально <xref:System.Web.Script.Serialization.JavaScriptSerializer> класса.</span><span class="sxs-lookup"><span data-stu-id="94a3f-102">The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="94a3f-103">Можно также использовать <xref:System.Web.Script.Serialization.JavaScriptConverter> при необходимости больший контроль над процессом сериализации и десериализации.</span><span class="sxs-lookup"><span data-stu-id="94a3f-103">You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.</span></span>  
  
 <span data-ttu-id="94a3f-104"><xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> Свойство указывает, для которых пользовательский преобразователь предоставляет службы преобразователя типов.</span><span class="sxs-lookup"><span data-stu-id="94a3f-104">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.</span></span>  
  
 <span data-ttu-id="94a3f-105">Чтобы указать, что должен использовать пользовательский преобразователь <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляра, необходимо зарегистрировать преобразователь в экземпляре.</span><span class="sxs-lookup"><span data-stu-id="94a3f-105">To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance.</span></span> <span data-ttu-id="94a3f-106">Если вы используете <xref:System.Web.Script.Serialization.JavaScriptSerializer> напрямую, следует использовать <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> метода для регистрации преобразователь.</span><span class="sxs-lookup"><span data-stu-id="94a3f-106">If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter.</span></span> <span data-ttu-id="94a3f-107">В противном случае, если вы вызываете веб-методов из ECMAScript (JavaScript), и вы хотите использовать пользовательский преобразователь, можно зарегистрировать его, добавив `converters` элемент в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="94a3f-107">Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file.</span></span> <span data-ttu-id="94a3f-108">Дополнительные сведения см. в разделе [как: Настройка служб ASP.NET в Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span><span class="sxs-lookup"><span data-stu-id="94a3f-108">For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span></span>  
  
 <span data-ttu-id="94a3f-109">Когда <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляра сериализации типа пользовательского преобразователя зарегистрирован, для которого имеется вызывает сериализатор <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="94a3f-109">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span> <span data-ttu-id="94a3f-110">Аналогичным образом, когда <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляра десериализации строки JavaScript Object Notation (JSON) и распознает, что тип внутри строки JSON имеет пользовательский преобразователь, связанные с ним вызывает сериализатор <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="94a3f-110">Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a3f-111">В следующем примере показано, как создать пользовательский преобразователь для <xref:System.Web.UI.WebControls.ListItemCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="94a3f-111">The following example shows how to create a custom converter for the <xref:System.Web.UI.WebControls.ListItemCollection> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="94a3f-112">
        <para>При наследовании от <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, необходимо переопределить следующие члены:- <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />   
  
-    <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />   
  
-    <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> предоставляет <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> метод, который будет использоваться в реализации <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />. Код преобразователя должен иметь возможность принимать значения, содержащегося в словарь, который передает сериализатор и затем преобразовать это значение в объект типа <paramref name="T" />. Вместо того чтобы каждый раз реализовывать код пользовательского преобразования для выполнения этой задачи можно вызвать <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> метод.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="94a3f-112">
          <para>When you inherit from <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, you must override the following members:  -   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> provides the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method that will be used by implementers of <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />. Converter code must be able to take a value that is contained in the dictionary that the serializer passes to it, and then convert that value into an object of type <paramref name="T" />. Rather than re-implementing the custom conversion code to accomplish this, you can call the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.Configuration.Converter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94a3f-113">Инициализирует новый экземпляр класса <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94a3f-113">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Type * System.Web.Script.Serialization.JavaScriptSerializer -&gt; obj" Usage="javaScriptConverter.Deserialize (dictionary, type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="94a3f-114">Экземпляр <see cref="T:System.Collections.Generic.IDictionary`2" /> для данных свойства, сохраненных в виде пары имя/значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94a3f-114">An <see cref="T:System.Collections.Generic.IDictionary`2" /> instance of property data stored as name/value pairs.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="94a3f-115">Тип результирующего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94a3f-115">The type of the resulting object.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="94a3f-116">Экземпляр класса <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94a3f-116">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94a3f-117">При переопределении в производном классе преобразовывает предоставленный словарь в объект указанного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94a3f-117">When overridden in a derived class, converts the provided dictionary into an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94a3f-118">Десериализованный объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94a3f-118">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="94a3f-119">
            <para>
              <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> Метод выполняет итерацию по всем значениям в <paramref name="dictionary" /> параметр, чтобы создать экземпляр типа запрашиваемого в <paramref name="type" /> параметра. Несмотря на то, что преобразователь может непосредственно использовать значения из <paramref name="dictionary" />, мы рекомендуем использовать преобразователь исполнитель <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> метод вместо него. Преобразователь, который должен вызывать этот метод <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> из доступного экземпляра <paramref name="serializer" /> параметра.  <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> Метод, который позволяет преобразователь для передачи значения из свойства <paramref name="dictionary" />и возвращают значение ожидаемого типа. В некоторых случаях преобразователя для пользовательского типа может работать со свойствами, которые сами зарегистрирована преобразователи (например, введите значение имеет свойство типа б и типа B также связан с пользовательским преобразователем). В этом случае вызов <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> гарантирует, что пользовательские преобразователи для свойства данных, содержащихся в словаре вызывается рекурсивно. После выполнения преобразователем итерации по всем записям в словаре, возвращается созданного экземпляра типа целевого объекта.  Если преобразователь сталкивается с проблемой во время десериализации, он должен вызывать <see cref="T:System.InvalidOperationException" /> ошибки, описывающее проблему.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="94a3f-119">
              <para>The <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> method iterates through the values in the <paramref name="dictionary" /> parameter to construct an instance of the type requested in the <paramref name="type" /> parameter. Although a converter can directly use values from <paramref name="dictionary" />, we recommend that the converter implementer use the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method instead. The converter should call this method of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance available from the <paramref name="serializer" /> parameter.  The <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method enables converter to pass a property value from <paramref name="dictionary" />, and then return a value of the expected type. In some cases, a converter for a custom type might be working with properties that themselves have registered converters (for example, type A has a property of type B, and type B is also associated with a custom converter). In that case, invoking <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> makes sure that custom converters will be recursively invoked for property data that is contained in the dictionary. When the converter has iterated through all entries in the dictionary, it returns a constructed instance of the target type.  If the converter encounters a problem during deserialization, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Web.Script.Serialization.JavaScriptSerializer -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="javaScriptConverter.Serialize (obj, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="94a3f-120">Объект для сериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94a3f-120">The object to serialize.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="94a3f-121">Объект, отвечающий за сериализацию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94a3f-121">The object that is responsible for the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94a3f-122">При переопределении в производном классе составляет словарь из пар имя/значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94a3f-122">When overridden in a derived class, builds a dictionary of name/value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94a3f-123">Объект, содержащий пары ключ/значение, представляющие данные объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94a3f-123">An object that contains key/value pairs that represent the object’s data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a3f-124">При сериализации типа, для которого регистрируется пользовательский преобразователь, <xref:System.Web.Script.Serialization.JavaScriptSerializer> вызывает экземпляр <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="94a3f-124">When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="94a3f-125">
            <para>Возвращаемое значение <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> должно быть <see cref="T:System.Collections.Generic.IDictionary`2" /> экземпляр с нуля или более пары имя значение, представляющие данных объекта для преобразования в JSON. Сам по себе преобразователь не выполняет сериализацию данных в формате JSON. Вместо этого он строит словарь пар "имя значение", содержащих имена свойств (строковый ключ для словаря) и соответствующего свойства (значение объекта в словаре) значений. <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> Экземпляр впоследствии преобразует их в JSON.  Если преобразователь возникает исключение, он должен вызывать <see cref="T:System.InvalidOperationException" /> ошибки, описывающее проблему.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="94a3f-125">
              <para>The return value of <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> must be an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance with zero or more name/value pairs that represent an object’s data to be converted to JSON. The converter itself does not serialize data as JSON. Instead, the converter builds a dictionary of name/value pairs that contain the property names (the string key for the dictionary) and corresponding property values (the object value in the dictionary). The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance subsequently converts these to JSON.  If the converter encounters an exception, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedTypes : seq&lt;Type&gt;" Usage="System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94a3f-126">При переопределении в производном классе возвращает набор поддерживаемых типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94a3f-126">When overridden in a derived class, gets a collection of the supported types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94a3f-127">Объект, реализующий интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, представляющий поддерживаемые преобразователем типы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94a3f-127">An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> that represents the types supported by the converter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94a3f-128"><xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> Свойства перечислены типы, поддерживаемые преобразователь.</span><span class="sxs-lookup"><span data-stu-id="94a3f-128">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter.</span></span> <span data-ttu-id="94a3f-129">Во время выполнения <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляр использует это свойство для определения соответствия управляемых их соответствующие пользовательские преобразователи типов.</span><span class="sxs-lookup"><span data-stu-id="94a3f-129">At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94a3f-130">В следующем примере показан способ переопределения <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> свойство в производном классе.</span><span class="sxs-lookup"><span data-stu-id="94a3f-130">The following example shows how to override the <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property in a derived class.</span></span> <span data-ttu-id="94a3f-131">В этом примере преобразователь, который поддерживает только <xref:System.Web.UI.WebControls.ListItemCollection> типа.</span><span class="sxs-lookup"><span data-stu-id="94a3f-131">In this example, the converter supports only the <xref:System.Web.UI.WebControls.ListItemCollection> type.</span></span> <span data-ttu-id="94a3f-132">Данный пример кода является частью большего примера, приведенного для <xref:System.Web.Script.Serialization.JavaScriptConverter> класса.</span><span class="sxs-lookup"><span data-stu-id="94a3f-132">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="94a3f-133">
            <para>
              <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> всегда должны возвращать коллекцию и коллекции должен содержать по крайней мере одну запись.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="94a3f-133">
              <para>
                <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> must always return a collection, and the collection must contain at least one entry.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>