<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1e7934d8d1587adff38812ec02ac2e9499101eb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30539738" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4d103-101">Предоставляет абстрактный базовый класс для пользовательского преобразователя типов.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4d103-101">Provides an abstract base class for a custom type converter.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d103-102"><xref:System.Web.Script.Serialization.JavaScriptConverter> Класс позволяет реализовать сериализации и десериализации процессы для управляемых типов, которые не поддерживаются изначально <xref:System.Web.Script.Serialization.JavaScriptSerializer> класса.</span><span class="sxs-lookup"><span data-stu-id="4d103-102">The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="4d103-103">Можно также использовать <xref:System.Web.Script.Serialization.JavaScriptConverter> при необходимости больший контроль над процессом сериализации и десериализации.</span><span class="sxs-lookup"><span data-stu-id="4d103-103">You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.</span></span>  
  
 <span data-ttu-id="4d103-104"><xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> Свойство указывает, для которых пользовательский преобразователь предоставляет службы преобразователя типов.</span><span class="sxs-lookup"><span data-stu-id="4d103-104">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.</span></span>  
  
 <span data-ttu-id="4d103-105">Чтобы указать, что должен использовать пользовательский преобразователь <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляра, необходимо зарегистрировать преобразователь в экземпляре.</span><span class="sxs-lookup"><span data-stu-id="4d103-105">To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance.</span></span> <span data-ttu-id="4d103-106">Если вы используете <xref:System.Web.Script.Serialization.JavaScriptSerializer> напрямую, следует использовать <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> метода для регистрации преобразователь.</span><span class="sxs-lookup"><span data-stu-id="4d103-106">If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter.</span></span> <span data-ttu-id="4d103-107">В противном случае, если вы вызываете веб-методов из ECMAScript (JavaScript), и вы хотите использовать пользовательский преобразователь, можно зарегистрировать его, добавив `converters` элемент в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="4d103-107">Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file.</span></span> <span data-ttu-id="4d103-108">Дополнительные сведения см. в разделе [как: Настройка служб ASP.NET в Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span><span class="sxs-lookup"><span data-stu-id="4d103-108">For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span></span>  
  
 <span data-ttu-id="4d103-109">Когда <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляра сериализации типа пользовательского преобразователя зарегистрирован, для которого имеется вызывает сериализатор <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4d103-109">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span> <span data-ttu-id="4d103-110">Аналогичным образом, когда <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляра десериализации строки JavaScript Object Notation (JSON) и распознает, что тип внутри строки JSON имеет пользовательский преобразователь, связанные с ним вызывает сериализатор <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4d103-110">Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d103-111">В следующем примере показано, как создать пользовательский преобразователь для <xref:System.Web.UI.WebControls.ListItemCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="4d103-111">The following example shows how to create a custom converter for the <xref:System.Web.UI.WebControls.ListItemCollection> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="4d103-112">При наследовании от <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, необходимо переопределить следующие члены:</span>
        <span class="sxs-lookup">
          <span data-stu-id="4d103-112">When you inherit from <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, you must override the following members:</span>
        </span>  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <span data-ttu-id="4d103-113"><see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> предоставляет <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> метод, который будет использоваться реализациями <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</span><span class="sxs-lookup"><span data-stu-id="4d103-113"><see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> provides the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method that will be used by implementers of <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</span></span><span data-ttu-id="4d103-114">Код преобразователя должен иметь возможность принимать значения, содержащегося в словарь, который передает сериализатор и затем преобразовать это значение в объект типа <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="4d103-114">Converter code must be able to take a value that is contained in the dictionary that the serializer passes to it, and then convert that value into an object of type <paramref name="T" />.</span></span><span data-ttu-id="4d103-115">Вместо того чтобы каждый раз реализовывать код пользовательского преобразования для выполнения этой задачи можно вызвать <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> метод.</span><span class="sxs-lookup"><span data-stu-id="4d103-115">Rather than re-implementing the custom conversion code to accomplish this, you can call the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method.</span></span></para>
    </block>
    <altmember cref="T:System.Web.Configuration.Converter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4d103-116">Инициализирует новый экземпляр класса <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d103-116">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="4d103-117">Экземпляр <see cref="T:System.Collections.Generic.IDictionary`2" /> для данных свойства, сохраненных в виде пары имя/значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d103-117">An <see cref="T:System.Collections.Generic.IDictionary`2" /> instance of property data stored as name/value pairs.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="4d103-118">Тип результирующего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d103-118">The type of the resulting object.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="4d103-119">Экземпляр класса <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d103-119">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4d103-120">При переопределении в производном классе преобразовывает предоставленный словарь в объект указанного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d103-120">When overridden in a derived class, converts the provided dictionary into an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4d103-121">Десериализованный объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d103-121">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4d103-122">
              <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> Метод выполняет итерацию по всем значениям в <paramref name="dictionary" /> параметр, чтобы создать экземпляр типа запрашиваемого в <paramref name="type" /> параметра.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d103-122">The <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> method iterates through the values in the <paramref name="dictionary" /> parameter to construct an instance of the type requested in the <paramref name="type" /> parameter.</span>
            </span>
            <span data-ttu-id="4d103-123">Несмотря на то, что преобразователь может непосредственно использовать значения из <paramref name="dictionary" />, мы рекомендуем использовать преобразователь исполнитель <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> метод вместо него.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d103-123">Although a converter can directly use values from <paramref name="dictionary" />, we recommend that the converter implementer use the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method instead.</span>
            </span>
            <span data-ttu-id="4d103-124">Преобразователь, который должен вызывать этот метод <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> из доступного экземпляра <paramref name="serializer" /> параметра.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d103-124">The converter should call this method of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance available from the <paramref name="serializer" /> parameter.</span>
            </span>
            <span data-ttu-id="4d103-125">
              <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> Метод, который позволяет преобразователь для передачи значения из свойства <paramref name="dictionary" />и возвращают значение ожидаемого типа.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d103-125">The <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method enables converter to pass a property value from <paramref name="dictionary" />, and then return a value of the expected type.</span>
            </span>
            <span data-ttu-id="4d103-126">В некоторых случаях преобразователя для пользовательского типа может работать со свойствами, которые сами зарегистрирована преобразователи (например, введите значение имеет свойство типа б и типа B также связан с пользовательским преобразователем).</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d103-126">In some cases, a converter for a custom type might be working with properties that themselves have registered converters (for example, type A has a property of type B, and type B is also associated with a custom converter).</span>
            </span>
            <span data-ttu-id="4d103-127">В этом случае вызов <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> гарантирует, что пользовательские преобразователи для свойства данных, содержащихся в словаре вызывается рекурсивно.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d103-127">In that case, invoking <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> makes sure that custom converters will be recursively invoked for property data that is contained in the dictionary.</span>
            </span>
            <span data-ttu-id="4d103-128">После выполнения преобразователем итерации по всем записям в словаре, возвращается созданного экземпляра типа целевого объекта.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d103-128">When the converter has iterated through all entries in the dictionary, it returns a constructed instance of the target type.</span>
            </span>
            <span data-ttu-id="4d103-129">Если преобразователь сталкивается с проблемой во время десериализации, он должен вызывать <see cref="T:System.InvalidOperationException" /> ошибки, описывающее проблему.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d103-129">If the converter encounters a problem during deserialization, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="4d103-130">Объект для сериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d103-130">The object to serialize.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="4d103-131">Объект, отвечающий за сериализацию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d103-131">The object that is responsible for the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4d103-132">При переопределении в производном классе составляет словарь из пар имя/значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d103-132">When overridden in a derived class, builds a dictionary of name/value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4d103-133">Объект, содержащий пары ключ/значение, представляющие данные объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d103-133">An object that contains key/value pairs that represent the object’s data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d103-134">При сериализации типа, для которого регистрируется пользовательский преобразователь, <xref:System.Web.Script.Serialization.JavaScriptSerializer> вызывает экземпляр <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4d103-134">When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4d103-135">Возвращаемое значение <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> должно быть <see cref="T:System.Collections.Generic.IDictionary`2" /> экземпляр с нуля или более пары имя значение, представляющие данных объекта для преобразования в JSON.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d103-135">The return value of <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> must be an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance with zero or more name/value pairs that represent an object’s data to be converted to JSON.</span>
            </span>
            <span data-ttu-id="4d103-136">Сам по себе преобразователь не выполняет сериализацию данных в формате JSON.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d103-136">The converter itself does not serialize data as JSON.</span>
            </span>
            <span data-ttu-id="4d103-137">Вместо этого он строит словарь пар "имя значение", содержащих имена свойств (строковый ключ для словаря) и соответствующего свойства (значение объекта в словаре) значений.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d103-137">Instead, the converter builds a dictionary of name/value pairs that contain the property names (the string key for the dictionary) and corresponding property values (the object value in the dictionary).</span>
            </span>
            <span data-ttu-id="4d103-138">
              <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> Экземпляр впоследствии преобразует их в JSON.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d103-138">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance subsequently converts these to JSON.</span>
            </span>
            <span data-ttu-id="4d103-139">Если преобразователь возникает исключение, он должен вызывать <see cref="T:System.InvalidOperationException" /> ошибки, описывающее проблему.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d103-139">If the converter encounters an exception, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d103-140">При переопределении в производном классе возвращает набор поддерживаемых типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d103-140">When overridden in a derived class, gets a collection of the supported types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d103-141">Объект, реализующий интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, представляющий поддерживаемые преобразователем типы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d103-141">An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> that represents the types supported by the converter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d103-142"><xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> Свойства перечислены типы, поддерживаемые преобразователь.</span><span class="sxs-lookup"><span data-stu-id="4d103-142">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter.</span></span> <span data-ttu-id="4d103-143">Во время выполнения <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляр использует это свойство для определения соответствия управляемых их соответствующие пользовательские преобразователи типов.</span><span class="sxs-lookup"><span data-stu-id="4d103-143">At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d103-144">В следующем примере показан способ переопределения <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> свойство в производном классе.</span><span class="sxs-lookup"><span data-stu-id="4d103-144">The following example shows how to override the <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property in a derived class.</span></span> <span data-ttu-id="4d103-145">В этом примере преобразователь, который поддерживает только <xref:System.Web.UI.WebControls.ListItemCollection> типа.</span><span class="sxs-lookup"><span data-stu-id="4d103-145">In this example, the converter supports only the <xref:System.Web.UI.WebControls.ListItemCollection> type.</span></span> <span data-ttu-id="4d103-146">Данный пример кода является частью большего примера, приведенного для <xref:System.Web.Script.Serialization.JavaScriptConverter> класса.</span><span class="sxs-lookup"><span data-stu-id="4d103-146">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4d103-147">
              <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> всегда должны возвращать коллекцию и коллекции должен содержать по крайней мере одну запись.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d103-147">
                <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> must always return a collection, and the collection must contain at least one entry.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>