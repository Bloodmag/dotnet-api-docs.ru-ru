<Type Name="JavaScriptTypeResolver" FullName="System.Web.Script.Serialization.JavaScriptTypeResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68b087218bcadcaee01e29ca84f4ae48fafa54b8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36398271" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptTypeResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptTypeResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptTypeResolver abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptTypeResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет абстрактный базовый класс для реализации распознавателя пользовательских типов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> Класс предоставляет службы для:  
  
-   Преобразования управляемых сведения о типе для строковое значение через <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> метод.  
  
-   Для разрешения строковое значение обратно в соответствующий управляемый тип с помощью <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> метод.  
  
 Если <xref:System.Web.Script.Serialization.JavaScriptSerializer> объект сериализует пользовательских типов, он может также включать в сериализованной строки JavaScript Object Notation (JSON) значение, содержащее сведения о типе. Во время десериализации <xref:System.Web.Script.Serialization.JavaScriptSerializer> это строковое значение для определения подходящих управляемые ссылки затем можно ввести на который будет преобразован в строку JSON.  
  
 При указании распознаватель для <xref:System.Web.Script.Serialization.JavaScriptSerializer> будет использовать экземпляр, сериализатор <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> и <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> методы для сопоставления управляемый тип и значение строки в процессе сериализации и десериализации соответственно.  
  
 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> Класс является базовым классом для <xref:System.Web.Script.Serialization.SimpleTypeResolver> класс, предоставляющий реализацию сопоставителя типов, который использует имя управляемого типа с указанием сборки.  
  
   
  
## Examples  
 Ниже приведен пример, как создать пользовательский распознаватель типов.  
  
 [!code-csharp[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/App_Code/TypeResolver.cs#2)]
 [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/App_Code/TypeResolver.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>При реализации распознавателя типов, строка, возвращаемый <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> необходимо сопоставить метод обратно на тот же управляемый тип при передаче строковое значение <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> метод.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptTypeResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public abstract Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveType (id As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ ResolveType(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResolveType : string -&gt; Type" Usage="javaScriptTypeResolver.ResolveType id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Имя управляемого типа.</param>
        <summary>При переопределении в производном классе возвращает объект <see cref="T:System.Type" />, связанный с указанным именем типа.</summary>
        <returns>Объект <see cref="T:System.Type" />, связанный с указанным именем типа.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если Сопоставитель типов, связанные с <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляра, сериализатор использует <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> метод, если он проходит по строку JSON для определения конкретный управляемый тип, к которому должны быть преобразованы в тип JSON.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Получает строковое значение, распознаватель типов должен возвращать <see cref="T:System.Type" /> , представляющий соответствующий управляемый тип.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public abstract string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResolveTypeId(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ResolveTypeId : Type -&gt; string" Usage="javaScriptTypeResolver.ResolveTypeId type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Подлежащий распознаванию управляемый тип.</param>
        <summary>При переопределении в производном классе возвращает имя типа для указанного объекта <see cref="T:System.Type" />.</summary>
        <returns>Имя указанного управляемого типа.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> метод возвращает либо `null` или <xref:System.String.Empty>, а затем Сопоставитель типов не поддерживает тип.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>