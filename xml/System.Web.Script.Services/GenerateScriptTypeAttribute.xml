<Type Name="GenerateScriptTypeAttribute" FullName="System.Web.Script.Services.GenerateScriptTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa19649e936a95856b3128564201a720e72b762f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37544796" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class GenerateScriptTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GenerateScriptTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Services.GenerateScriptTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GenerateScriptTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenerateScriptTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type GenerateScriptTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает, что тип сервера должен создаваться в прокси-объекте. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 С поддержкой AJAX веб-сайтов ASP.NET ASP.NET может автоматически создавать прокси-объекты для методов класса веб-службы. Это делается для большинства типов верхнего уровня для входных параметров и возвращаемых значений любого веб-методов, которые помечены атрибутом <xref:System.Web.Script.Services.ScriptServiceAttribute>.  
  
 В других случаях, если прокси-объектов создан для типов сервера, необходимо применить <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> вручную. Можно применить <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> к веб-службы или к любому веб-метода службы или `static` страницы метод помечен атрибутом <xref:System.Web.Services.WebMethodAttribute>.  
  
 В некоторых случаях даже если тип соответствует входной параметр или возвращаемое значение метода веб-службы, прокси-сервер не создается автоматически. В этом случае необходимо использовать <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> атрибутов для создания объекта прокси-сервера для типа. Эта операция выполняется для универсальных типов и массивов, содержащих более одного аргумента, таких как `Dictionary<string,<T>>`.  
  
 Один или несколько экземпляров <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> могут применяться к классу веб-службы или методу. ASP.NET создаст класс прокси ECMAScript (JavaScript) для каждого типа верхнего уровня, на который ссылается каждого объявления <xref:System.Web.Script.Services.GenerateScriptTypeAttribute>.  
  
> [!NOTE]
>  Если вы хотите создавать прокси-объектов для вложенных типов, необходимо вручную применить <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> на каждый вложенный тип. ASP.NET создает прокси, только типы верхнего уровня и не автоматически рекурсивно применяется атрибут к вложенные типы.  
  
 Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 В следующем примере показано, как применить <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> класс веб-службы и веб-метода. В результате `ColorObject` типа и его вложенный тип `FavoriteColors` включаются в прокси-объект.  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GenerateScriptTypeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GenerateScriptTypeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Services.GenerateScriptTypeAttribute : Type -&gt; System.Web.Script.Services.GenerateScriptTypeAttribute" Usage="new System.Web.Script.Services.GenerateScriptTypeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Тип, который нужно включить в прокси-класс.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Script.Services.GenerateScriptTypeAttribute" /> для указанного типа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> Свойство следует необязательный именованный параметр для данного конструктора.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> для создания прокси-объект для указанного типа, который использует идентификатор определенного типа для метки метаданных.  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptTypeId">
      <MemberSignature Language="C#" Value="public string ScriptTypeId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptTypeId" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptTypeId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScriptTypeId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptTypeId : string with get, set" Usage="System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает идентификатор типа для метки метаданных типа.</summary>
        <value>Идентификатор типа для метки метаданных типа в сериализованной строке формата JSON. По умолчанию значением является имя типа с указанием сборки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство является необязательным. Если указано, значение <xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> используется для метки метаданных типа («__type») в сериализованной строки JSON вместо имени типа с указанием сборки. Во время десериализации, распознавателю типов, связан с <xref:System.Web.Script.Serialization.JavaScriptSerializer> объект будет использовать значение маркера метаданных типа для сопоставления обратно в соответствующий управляемый тип.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.GenerateScriptTypeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Web.Script.Services.GenerateScriptTypeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип, включенный в прокси-объект.</summary>
        <value>Объект типа, включенный в созданный прокси-объект.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>