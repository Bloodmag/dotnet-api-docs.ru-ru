<Type Name="Membership" FullName="System.Web.Security.Membership">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="154b580fad2f113d6f9ace11e7f2e904f5c253df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30551218" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Membership" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Membership extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.Membership" />
  <TypeSignature Language="VB.NET" Value="Public Class Membership" />
  <TypeSignature Language="C++ CLI" Value="public ref class Membership abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Проверяет учетные данные пользователя и управляет параметрами пользователей. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership> Класс используется в приложениях ASP.NET для проверки учетных данных пользователя и управление параметрами пользователя, такие как пароли и адреса электронной почты. <xref:System.Web.Security.Membership> Класс может использоваться сам по себе или в сочетании с <xref:System.Web.Security.FormsAuthentication> для создания всей системы для проверки подлинности пользователей веб-приложения или сайта. <xref:System.Web.UI.WebControls.Login> Управления инкапсулирует <xref:System.Web.Security.Membership> класса представляют собой удобный механизм для проверки пользователей.  
  
> [!NOTE]
>  Если вы не знакомы с функциями членства в ASP.NET, см. раздел [Знакомство с членством](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980) перед продолжением. Список других разделов, связанных с членством в группах см. в разделе [Управление пользователями с помощью членства](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 <xref:System.Web.Security.Membership> Класс предоставляет средства для:  
  
-   Создание новых пользователей.  
  
-   Хранение сведений о членстве (имена пользователей, пароли, адреса электронной почты и данные поддержки) в Microsoft SQL Server или в альтернативном хранилище данных.  
  
-   Проверки подлинности пользователей, посетите веб-узла. Вы можете проверять подлинность пользователей программным образом или использовать <xref:System.Web.UI.WebControls.Login> управления, чтобы создать полную систему проверки подлинности требуется почти или совсем не код.  
  
-   Управления паролями, который включает в себя создание, изменение, извлечение и сброс паролей и так далее. При необходимости можно настроить членства в ASP.NET требуется контрольный вопрос и ответ на проверку подлинности запросы сброса или извлечения пароля для пользователей, которым забыл свой пароль.  
  
 Несмотря на то, что членства в ASP.NET является самостоятельная функция в ASP.NET для проверки подлинности, их можно интегрировать с управлением ролями ASP.NET, чтобы обеспечить службы авторизации для веб-узла. Членство можно интегрировать с пользователем ASP.NET <xref:System.Web.Profile> чтобы обеспечить настройку конкретного приложения, которую можно адаптировать к отдельным пользователям. Дополнительные сведения см. в разделе [основные сведения о роли управления](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6) и [Общие сведения о свойствах профиля ASP.NET](http://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d).  
  
 <xref:System.Web.Security.Membership> Класс зависит от поставщиков членства для связи с источником данных. Платформа .NET Framework включает <xref:System.Web.Security.SqlMembershipProvider>, который сохраняет сведения о пользователе в базе данных Microsoft SQL Server и <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, позволяет хранить информацию о пользователе на сервере служб Active Directory или Active Directory Application Mode (ADAM). Также можно реализовать настраиваемый поставщик членства для взаимодействия с источником данных альтернативных, который может использоваться с <xref:System.Web.Security.Membership> класса. Пользовательские поставщики участия наследовать <xref:System.Web.Security.MembershipProvider> абстрактного класса. Дополнительные сведения см. в разделе [реализация поставщика членства](http://msdn.microsoft.com/library/d8658b8e-c962-4f64-95e1-4acce35e4582).  
  
 По умолчанию для всех приложений ASP.NET включена членства ASP.NET. Поставщик членства по умолчанию <xref:System.Web.Security.SqlMembershipProvider> и указан в конфигурации компьютера с именем `AspNetSqlProvider`. Экземпляр по умолчанию <xref:System.Web.Security.SqlMembershipProvider> настроен на подключение к локальному экземпляру Microsoft SQL Server.  
  
 Можно изменить параметры по умолчанию, чтобы указать <xref:System.Web.Security.SqlMembershipProvider> отличный от `AspNetSqlProvider` экземпляра поставщика по умолчанию, или указать экземпляр настраиваемого поставщика в качестве поставщика по умолчанию для приложения ASP.NET с помощью файла Web.config. Можно указать конфигурацию членства ASP.NET для веб-приложения с помощью раздела конфигурации в файле Web.config. Можно использовать `providers` подразделе раздела, чтобы указать поставщика членства, отличные от одного из поставщиков по умолчанию. Например, в следующем разделе удаляет поставщиков членства по умолчанию из текущей конфигурации приложения и добавляет новый поставщик с именем `SqlProvider` , подключается к экземпляру SQL Server с именем `AspSqlServer`.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 В следующем примере кода показано, на страницу входа для приложения ASP.NET, настроен на использование проверки подлинности и членства в ASP.NET. Если учетные данные пользователя являются недопустимыми, сообщение отображается для пользователя. В противном случае пользователь перенаправляется на первоначально запрошенный URL-адрес с помощью <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> метод.  
  
> [!NOTE]
>  Элементы управления ASP.NET (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, и <xref:System.Web.UI.WebControls.PasswordRecovery>) инкапсулируют практически всю логику, необходимую для запроса учетных данных пользователей и проверки учетных данных в системе членства и может быть использовать вместо программный проверки <xref:System.Web.Security.Membership> класса.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя приложения.</summary>
        <value>Имя приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ApplicationName%2A> Используется для идентификации пользователей конкретного приложения. То есть то же имя пользователя может существовать в базе данных для нескольких приложений ASP.NET, укажите другое <xref:System.Web.Security.Membership.ApplicationName%2A>. Это позволяет нескольким приложениям использовать ту же базу данных для хранения сведений о пользователе без конфликтов имя повторяющегося пользователя. Кроме того, несколько приложений ASP.NET можно использовать одну и ту же базу данных пользователя, указав же <xref:System.Web.Security.Membership.ApplicationName%2A>. <xref:System.Web.Security.Membership.ApplicationName%2A> Можно задать программным образом или декларативно в конфигурации для веб-приложения.  
  
> [!CAUTION]
>  Так как экземпляр по умолчанию один используется для всех запросов, обслуживаемых <xref:System.Web.HttpApplication> объекта может быть несколько запросов, параллельном выполнении и выполняется настройка <xref:System.Web.Security.Membership.ApplicationName%2A> значение свойства. <xref:System.Web.Security.Membership.ApplicationName%2A> Свойство не является потокобезопасным для нескольких операций записи и изменение <xref:System.Web.Security.Membership.ApplicationName%2A> значение свойства может привести к непредвиденному поведению для нескольких пользователей приложения. Рекомендуется, чтобы избежать написания кода, который позволяет пользователям задавать <xref:System.Web.Security.Membership.ApplicationName%2A> свойства, если необходимо. Пример приложения там, где параметр <xref:System.Web.Security.Membership.ApplicationName%2A> свойства, может потребоваться является административные приложения, в котором данные о членстве для нескольких приложений. Такое приложение должно быть Однопользовательское приложение и не веб-приложения.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Он указывает, что приложение использует <xref:System.Web.Security.SqlMembershipProvider> экземпляра и наборы <xref:System.Web.Security.Membership.ApplicationName%2A> для `MyApplication`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет нового пользователя в хранилище данных.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Имя пользователя для нового пользователя.</param>
        <param name="password">Пароль для нового пользователя.</param>
        <summary>Добавляет нового пользователя в хранилище данных.</summary>
        <returns>Объект <see cref="T:System.Web.Security.MembershipUser" /> для вновь созданного пользователя.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Добавляет нового пользователя в хранилище данных и возвращает <xref:System.Web.Security.MembershipUser> объект для только что созданного пользователя. Если не удается создать пользователя, <xref:System.Web.Security.MembershipCreateUserException> возникает исключение. Вы можете получить <xref:System.Web.Security.MembershipCreateStatus> значение из <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> свойство <xref:System.Web.Security.MembershipCreateUserException> , указывающее, почему не удалось создать пользователя.  
  
 После авторизованного пользователя будет создана и иметь ссылку на <xref:System.Web.Security.MembershipUser> объекта для этого пользователя, можно изменить параметры для этого пользователя с <xref:System.Web.Security.MembershipUser> открытых методов, таких как <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> для приложений, где <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> — `true`, или установив значение свойства <xref:System.Web.Security.MembershipUser> объекта и передачи их <xref:System.Web.Security.Membership.UpdateUser%2A> метод.  
  
 Если пользователь уже существует в источнике данных для приложения, можно получить <xref:System.Web.Security.MembershipUser> для существующего пользователя с <xref:System.Web.Security.Membership.GetUser%2A> метод.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Предоставляет возможность требуется уникальный адрес для каждого пользователя. Если <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> свойство `true`, необходимо использовать один из <xref:System.Web.Security.Membership.CreateUser%2A> перегрузки, которые можно указать адрес электронной почты для пользователя, в процессе создания. В противном случае <xref:System.Web.Security.MembershipCreateUserException> будет создано.  
  
 Начальные и конечные пробелы удаляются из значений всех параметров.  
  
   
  
## Examples  
 В следующем примере кода создает нового пользователя для приложения ASP.NET, настроен на использование проверки подлинности и членства в ASP.NET. Если пользователь не создан успешно, отображается сообщение для пользователя. В противном случае пользователь перенаправляется на страницу входа для приложения.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.Membership#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">Пользователь не был создан. Проверьте свойство <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> для значения <see cref="T:System.Web.Security.MembershipCreateStatus" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Имя пользователя для нового пользователя.</param>
        <param name="password">Пароль для нового пользователя.</param>
        <param name="email">Адрес электронной почты для нового пользователя.</param>
        <summary>Добавляет в хранилище данных нового пользователя с указанным адресом электронной почты.</summary>
        <returns>Объект <see cref="T:System.Web.Security.MembershipUser" /> для вновь созданного пользователя.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Добавляет нового пользователя в хранилище данных и возвращает <xref:System.Web.Security.MembershipUser> объект для только что созданного пользователя. Если не удается создать пользователя, <xref:System.Web.Security.MembershipCreateUserException> возникает исключение. Вы можете получить <xref:System.Web.Security.MembershipCreateStatus> значение из <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> свойство <xref:System.Web.Security.MembershipCreateUserException> , указывающее, почему не удалось создать пользователя.  
  
 После авторизованного пользователя будет создана и иметь ссылку на <xref:System.Web.Security.MembershipUser> объекта для этого пользователя, можно изменить параметры для этого пользователя с <xref:System.Web.Security.MembershipUser> открытых методов, таких как <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> для приложений, где <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> — `true`, или установив значение свойства <xref:System.Web.Security.MembershipUser> объекта и передачи их <xref:System.Web.Security.Membership.UpdateUser%2A> метод.  
  
 Если пользователь уже существует в источнике данных для приложения, можно получить <xref:System.Web.Security.MembershipUser> для существующего пользователя с <xref:System.Web.Security.Membership.GetUser%2A> метод.  
  
 Начальные и конечные пробелы удаляются из значений всех параметров.  
  
   
  
## Examples  
 В следующем примере кода создает нового пользователя для приложения ASP.NET, настроен на использование проверки подлинности и членства в ASP.NET. Если пользователь не создан успешно, отображается сообщение для пользователя. В противном случае пользователь перенаправляется на страницу входа для приложения.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser1cs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.Membership#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">Пользователь не был создан. Проверьте свойство <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> для значения <see cref="T:System.Web.Security.MembershipCreateStatus" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Имя пользователя для нового пользователя.</param>
        <param name="password">Пароль для нового пользователя.</param>
        <param name="email">Адрес электронной почты для нового пользователя.</param>
        <param name="passwordQuestion">Значение контрольного вопроса для пользователя членства.</param>
        <param name="passwordAnswer">Значение ответа на контрольный вопрос для пользователя членства.</param>
        <param name="isApproved">Логическое значение, указывающее одобрен ли вход пользователя в систему.</param>
        <param name="status">Класс <see cref="T:System.Web.Security.MembershipCreateStatus" />, который сообщает об успешном создании пользователя или содержит причину, по которой не удалось создать пользователя.</param>
        <summary>Добавляет в хранилище данных нового пользователя со значениями указанного свойства и возвращает параметр состояния, который сообщает об успешном создании пользователя или содержит причину, по которой не удалось создать пользователя.</summary>
        <returns>Объект <see cref="T:System.Web.Security.MembershipUser" /> для вновь созданного пользователя. Если пользователь не был создан, метод возвращает значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Добавляет нового пользователя в хранилище данных и возвращает <xref:System.Web.Security.MembershipUser> объект для только что созданного пользователя. Если не удается создать пользователя, можно получить <xref:System.Web.Security.MembershipCreateStatus> значение из `status` выходной параметр, который указывает, почему не удалось создать пользователя.  
  
 <xref:System.Web.Security.Membership.CreateUser%2A> Метод будет возвращать `null` Если `password` является пустой строкой или `null`, `username` является пустой строкой или `null` или содержит запятую (,), `passwordQuestion` не `null` и является пустой строкой, или `passwordAnswer` не `null` и содержит пустую строку.  
  
 После создания пользователя членства и иметь ссылку на <xref:System.Web.Security.MembershipUser> объекта для этого пользователя, можно изменить параметры для этого пользователя с <xref:System.Web.Security.MembershipUser> открытых методов и задавая значения свойств из <xref:System.Web.Security.MembershipUser> объекта и затем передачу <xref:System.Web.Security.MembershipUser> объект <xref:System.Web.Security.Membership.UpdateUser%2A> метод.  
  
 Если пользователь уже существует в источнике данных для приложения, можно получить <xref:System.Web.Security.MembershipUser> для существующего пользователя с <xref:System.Web.Security.Membership.GetUser%2A> метод.  
  
 Начальные и конечные пробелы удаляются из значений всех строковых параметров.  
  
   
  
## Examples  
 В следующем примере кода создает нового пользователя для приложения ASP.NET, настроен на использование проверки подлинности и членства в ASP.NET. Если пользователь не создан успешно, отображается сообщение для пользователя. В противном случае пользователь перенаправляется на страницу входа для приложения.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Имя пользователя для нового пользователя.</param>
        <param name="password">Пароль для нового пользователя.</param>
        <param name="email">Адрес электронной почты для нового пользователя.</param>
        <param name="passwordQuestion">Значение контрольного вопроса для пользователя членства.</param>
        <param name="passwordAnswer">Значение ответа на контрольный вопрос для пользователя членства.</param>
        <param name="isApproved">Логическое значение, указывающее одобрен ли вход пользователя в систему.</param>
        <param name="providerUserKey">Идентификатор пользователя для пользователя, который должен быть сохранен в хранилище данных участия.</param>
        <param name="status">Класс <see cref="T:System.Web.Security.MembershipCreateStatus" />, который сообщает об успешном создании пользователя или содержит причину, по которой не удалось создать пользователя.</param>
        <summary>Добавляет в хранилище данных нового пользователя со значениями указанного свойства и уникальным идентификатором, и возвращает параметр состояния, который сообщает об успешном создании пользователя или содержит причину, по которой не удалось создать пользователя.</summary>
        <returns>Объект <see cref="T:System.Web.Security.MembershipUser" /> для вновь созданного пользователя. Если пользователь не был создан, метод возвращает значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Добавляет нового пользователя в хранилище данных и возвращает <xref:System.Web.Security.MembershipUser> объект для только что созданного пользователя. Если не удается создать пользователя, можно получить <xref:System.Web.Security.MembershipCreateStatus> значение из `status` выходной параметр, который указывает, почему не удалось создать пользователя. Уникальный идентификатор для пользователя, такие как значение первичного ключа для базы данных, можно указать с помощью `providerUserKey` параметра.  
  
 <xref:System.Web.Security.Membership.CreateUser%2A> Метод будет возвращать `null` Если `password` является пустой строкой или `null`, `username` является пустой строкой или `null` или содержит запятую (,), `passwordQuestion` не `null` и содержит пустой Строка, или `passwordAnswer` не `null` и содержит пустую строку.  
  
 После создания пользователя членства и иметь ссылку на <xref:System.Web.Security.MembershipUser> объекта для этого пользователя, можно изменить параметры для этого пользователя с <xref:System.Web.Security.MembershipUser> открытых методов и задавая значения свойств из <xref:System.Web.Security.MembershipUser> объекта и затем передачу <xref:System.Web.Security.MembershipUser> объект <xref:System.Web.Security.Membership.UpdateUser%2A> метод.  
  
 Если пользователь уже существует в источнике данных для приложения, можно получить <xref:System.Web.Security.MembershipUser> для существующего пользователя с <xref:System.Web.Security.Membership.GetUser%2A> метод.  
  
 Начальные и конечные пробелы удаляются из значений всех строковых параметров.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Удаляет пользователя из базы данных.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Имя удаляемого пользователя.</param>
        <summary>Удаляет пользователя и любые связанные с ним данные из базы данных.</summary>
        <returns>
          Значение <see langword="true" />, если пользователь был удален; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пользовательские данные, хранящиеся в базе данных для <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, или <xref:System.Web.UI.WebControls.WebParts.WebPart> персонализации также удаляется при использовании <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, и <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> объекты для хранения данных.  
  
   
  
## Examples  
 В следующем примере кода удаляет текущего пользователя, и все связанные данные.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/DeleteUsercs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.Membership#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/DeleteUservb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="username" /> равен пустой строке или содержит запятую (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> равно <see langword="null." /></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Имя удаляемого пользователя.</param>
        <param name="deleteAllRelatedData">
          Значение <see langword="true" /> для удаления данных, связанных с пользователем, из базы данных; значение <see langword="false" /> для сохранения данных, связанных с пользователем, в базе данных.</param>
        <summary>Удаляет пользователя из базы данных.</summary>
        <returns>
          Значение <see langword="true" />, если пользователь был удален; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пользователи, удаленные из базы данных удаляется только из настроенного `applicationName`.  
  
 Если `deleteAllRelatedData` — `true`, пользовательские данные, хранящиеся в базе данных для <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, или <xref:System.Web.UI.WebControls.WebParts.WebPart> персонализации также удаляется при использовании <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, и <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> объектов хранилище данных.  
  
   
  
## Examples  
 В следующем примере кода удаляет текущего пользователя, и все связанные данные.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="username" /> равен пустой строке или содержит запятую (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="username" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordReset { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, настроена ли в текущем поставщике участия возможность сброса пользователями собственных паролей.</summary>
        <value>
          Значение <see langword="true" />, если поставщик членства поддерживает сброс паролей; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пароль сброса — это возможность членства ASP.NET заменить текущий пароль для имени пользователя с новым, формируется случайным образом пароль, когда пользователь забыл свой пароль, или текущий пароль недействителен. Это особенно полезно, если используется формат пароля <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, как пользователи не смогут получить значения хэшированный пароль.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> и позволяет сброс пароля.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 В следующем примере кода сначала проверяет, что <xref:System.Web.Security.Membership.EnablePasswordReset%2A> — `true`, а затем сбрасывает пароль пользователя и возвращает новый, автоматически сгенерированный пароль.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, настроена ли в текущем поставщике участия возможность извлечения пользователями собственных паролей.</summary>
        <value>
          Значение <see langword="true" />, если поставщик участия поддерживает извлечение пароля; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> — `false`, могут вызывать базовый поставщик членства <xref:System.Web.HttpException>.  
  
 Поставщики, которые входят в состав .NET Framework поддерживают несколько форматов паролей для повышения безопасности пароля. Если формат пароля задано значение <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, то пользователи не смогут получить свой текущий пароль из базы данных. <xref:System.Web.Security.MembershipPasswordFormat.Hashed> Формат пароля обеспечивает одностороннего кодирование значений паролей. Пароли «хэшированы» и сравниваются со значениями, сохраненными в базе данных для проверки подлинности. «Хэшированное» значения не могут быть некодированной для получения исходное значение пароля. Дополнительные сведения см. в разделе <xref:System.Web.Security.MembershipPasswordFormat>.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> и разрешает получение пароля.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 В следующем примере кода сначала проверяет, что <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> — `true`, а затем извлекает пароль для указанного имени пользователя и отправляет его на адрес электронной почты для указанного пользователя.  
  
> [!IMPORTANT]
>  Возврат паролей в виде открытого текста с помощью электронной почты для сайтов, требующих высокого уровня безопасности не рекомендуется. Для узлов с высоким уровнем безопасности рекомендуется возвращать пароль с использованием шифрования, например SSL.  
>   
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByEmail">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает коллекцию авторизованных пользователей, адреса электронной почты которых соответствуют указанному адресу электронной почты.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Адрес электронной почты для поиска.</param>
        <summary>Возвращает коллекцию авторизованных пользователей, адреса электронной почты которых соответствуют указанному адресу электронной почты.</summary>
        <returns>Коллекция <see cref="T:System.Web.Security.MembershipUserCollection" />, содержащая всех пользователей, которые соответствуют параметру <paramref name="emailToMatch" />.  
  
 Начальные и конечные пробелы удаляются из значения параметра <paramref name="emailToMatch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> Возвращает список авторизованных пользователей, где адрес электронной почты соответствует предоставленному `emailToMatch` для настроенного `applicationName`.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Выполняет поиск с помощью предложения LIKE к `emailToMatch` параметра. Все шаблоны, которые поддерживаются сервером SQL Server в, как можно использовать в предложениях `emailToMatch` значение параметра.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.Membership.FindUsersByEmail%2A> метод для извлечения сведений о членстве пользователя из базы данных членства на основе ввода пользователя и отображение результатов на страницах данных.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByEmailcs.aspx#9)]
 [!code-aspx-vb[System.Web.Security.Membership#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByEmailvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Адрес электронной почты для поиска.</param>
        <param name="pageIndex">Индекс страницы возвращаемых результатов. <c>pageIndex</c> отсчитывается от нуля.</param>
        <param name="pageSize">Размер страницы возвращаемых результатов.</param>
        <param name="totalRecords">Общее число соответствующих пользователей.</param>
        <summary>Возвращает коллекцию пользователей членства на странице данных, где адрес электронной почты содержит часть, совпадающую с указанным значением.</summary>
        <returns>Коллекция <see cref="T:System.Web.Security.MembershipUserCollection" />, содержащая страницу, которая включает определяемое параметром <paramref name="pageSize" /> количество объектов <see cref="T:System.Web.Security.MembershipUser" />, начиная со страницы, заданной параметром <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> Возвращает список авторизованных пользователей, где адрес электронной почты соответствует предоставленному `emailToMatch` для настроенного `applicationName`.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Выполняет поиск с помощью предложения LIKE к `emailToMatch` параметра. Все шаблоны, которые поддерживаются сервером SQL Server в, как можно использовать в предложениях `emailToMatch` значение параметра.  
  
 Результаты, возвращенные <xref:System.Web.Security.Membership.FindUsersByEmail%2A> , ограничиваются `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Security.MembershipUser> объектов, включаемых в <xref:System.Web.Security.MembershipUserCollection>. `pageIndex` Определяет страницу результатов, где 0 означает первую страницу. `totalRecords` Параметр `out` задается общее число пользователей, соответствующих `emailToMatch` значение. Например, если найдено where 13 пользователей `emailToMatch` соответствует часть или адрес электронной почты всей и `pageIndex` присвоено значение 1 `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection> возвращается будет содержать с шестого до десятого пользователей. `totalRecords` будет иметь значение 13.  
  
 Начальные и конечные пробелы удаляются из значения параметра `emailToMatch`.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.Membership.FindUsersByEmail%2A> метод для извлечения сведений о членстве пользователя из базы данных членства на основе ввода пользователя и отображение результатов на страницах данных.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Значение параметра <paramref name="pageIndex" /> меньше нуля.  
  
 - или -  
  
 Значение параметра <paramref name="pageSize" /> меньше 1.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает коллекцию авторизованных пользователей, имена которых соответствуют указанному имени.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">Имя пользователя для поиска.</param>
        <summary>Возвращает коллекцию авторизованных пользователей, имена которых соответствуют указанному имени.</summary>
        <returns>Коллекция <see cref="T:System.Web.Security.MembershipUserCollection" />, содержащая всех пользователей, которые соответствуют параметру <paramref name="usernameToMatch" />.  
  
 Начальные и конечные пробелы удаляются из значения параметра <paramref name="usernameToMatch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> Возвращает список авторизованных пользователей, где имя пользователя соответствует предоставленному `usernameToMatch` для настроенного `applicationName`.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Выполняет поиск с помощью предложения LIKE к `usernameToMatch` параметра. Все шаблоны, которые поддерживаются сервером SQL Server в, как можно использовать в предложениях `usernameToMatch` значение параметра.  
  
 Начальные и конечные пробелы удаляются из значений всех параметров.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.Membership.FindUsersByName%2A> метод для извлечения сведений о членстве пользователя из базы данных членства на основе ввода пользователя и отображение результатов на страницах данных.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByNamecs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.Membership#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByNamevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="usernameToMatch" /> равен пустой строке.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="usernameToMatch" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">Имя пользователя для поиска.</param>
        <param name="pageIndex">Индекс страницы возвращаемых результатов. <c>pageIndex</c> отсчитывается от нуля.</param>
        <param name="pageSize">Размер страницы возвращаемых результатов.</param>
        <param name="totalRecords">Общее число соответствующих пользователей.</param>
        <summary>Возвращает коллекцию пользователей членства на странице данных, где имя пользователя совпадает с указанным значением.</summary>
        <returns>Коллекция <see cref="T:System.Web.Security.MembershipUserCollection" />, содержащая страницу, которая включает определяемое параметром <paramref name="pageSize" /> количество объектов <see cref="T:System.Web.Security.MembershipUser" />, начиная со страницы, заданной параметром <paramref name="pageIndex" />.  
  
 Начальные и конечные пробелы удаляются из значения параметра <paramref name="usernameToMatch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> Возвращает список авторизованных пользователей, где имя пользователя соответствует предоставленному `usernameToMatch` для настроенного `applicationName`.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Выполняет поиск с помощью предложения LIKE к `usernameToMatch` параметра. Все шаблоны, которые поддерживаются сервером SQL Server в, как можно использовать в предложениях `usernameToMatch` значение параметра.  
  
 Результаты, возвращенные <xref:System.Web.Security.Membership.FindUsersByName%2A> , ограничиваются `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Security.MembershipUser> объектов, включаемых в <xref:System.Web.Security.MembershipUserCollection>. `pageIndex` Определяет страницу результатов, где 0 означает первую страницу. `totalRecords` Параметр `out` задается общее число пользователей, соответствующих `usernameToMatch` значение. Например, если найдено where 13 пользователей `usernameToMatch` соответствует часть или имя пользователя полностью и `pageIndex` присвоено значение 1 `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection> возвращается будет содержать с шестого до десятого пользователей. `totalRecords` будет иметь значение 13.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.Membership.FindUsersByName%2A> метод для извлечения сведений о членстве пользователя из базы данных членства на основе ввода пользователя и отображение результатов на страницах данных.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="usernameToMatch" /> равен пустой строке.  
  
 - или -  
  
 Значение параметра <paramref name="pageIndex" /> меньше нуля.  
  
 - или -  
  
 Значение параметра <paramref name="pageSize" /> меньше 1.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="usernameToMatch" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GeneratePassword(int32 length, int32 numberOfNonAlphanumericCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeneratePassword (length As Integer, numberOfNonAlphanumericCharacters As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GeneratePassword(int length, int numberOfNonAlphanumericCharacters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="numberOfNonAlphanumericCharacters" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">Число символов в сформированном пароле. Длина должна находиться в диапазоне от 1 до 128 символов.</param>
        <param name="numberOfNonAlphanumericCharacters">Минимальное число не буквенно-цифровых символов (например, @, #, !, %, &amp; и т. д.) в создаваемом пароле.</param>
        <summary>Формирует случайный пароль указанной длины.</summary>
        <returns>Случайный пароль указанной длины.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GeneratePassword%2A> Метод используется для создания случайного пароля и наиболее часто используемые <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> метод, реализованный поставщик членства для сброса пароля для пользователя на новый временный пароль.  
  
 Созданный пароль должен содержать только буквы, цифры и следующие знаки пунктуации: `!@#$%^&*()_-+=[{]};:<>|./?`. Не управления скрытые или непечатаемые символы, включенные в созданном пароле.  
  
> [!NOTE]
>  Случайный пароль, созданные <xref:System.Web.Security.Membership.GeneratePassword%2A> метода не обязательно передать регулярное выражение в <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> свойство. Однако случайный пароль будет соответствовать условиям, заданным <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> свойство и `numberOfNonAlphanumericCharacters` параметра.  
  
   
  
## Examples  
 В следующем примере кода создается новый пользователь членства и использует <xref:System.Web.Security.Membership.GeneratePassword%2A> метод для инициализации пароль для нового пользователя в случайное значение, которое отображается для пользователя.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/GeneratePasswordcs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.Membership#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/GeneratePasswordvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Значение параметра <paramref name="length" /> меньше 1 либо более 128 -или-  
  
 Параметр <paramref name="numberOfNonAlphanumericCharacters" /> имеет значение меньше 0 или больше <paramref name="length" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllUsers">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает коллекцию пользователей в базе данных.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers () As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию всех пользователей в базе данных.</summary>
        <returns>Коллекция <see cref="T:System.Web.Security.MembershipUserCollection" /> объектов <see cref="T:System.Web.Security.MembershipUser" /> представляет всех пользователей в базе данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetAllUsers%2A> Возвращает информацию для всех пользователей членства для приложения как коллекция <xref:System.Web.Security.MembershipUser> объектов. Будьте внимательны при использовании <xref:System.Web.Security.Membership.GetAllUsers%2A> метод с очень больших пользовательских баз данных, как полученный <xref:System.Web.Security.MembershipUserCollection> в ASP.NET страницы может привести к снижению производительности приложения.  
  
   
  
## Examples  
 В следующем примере кода возвращает список пользователей с подсчетом числа пользователей в интерактивном режиме.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">Индекс страницы возвращаемых результатов. Для указания первой страницы используйте 0.</param>
        <param name="pageSize">Размер страницы возвращаемых результатов. <c>pageIndex</c> отсчитывается от нуля.</param>
        <param name="totalRecords">Общее количество пользователей.</param>
        <summary>Возвращает коллекцию всех пользователей в базе данных на странице данных.</summary>
        <returns>Коллекция <see cref="T:System.Web.Security.MembershipUserCollection" /> объектов <see cref="T:System.Web.Security.MembershipUser" /> представляет всех пользователей в базе данных для настроенного приложения <see langword="applicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Результаты, возвращенные <xref:System.Web.Security.Membership.GetAllUsers%2A> , ограничиваются `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Security.MembershipUser> объектов, включаемых в <xref:System.Web.Security.MembershipUserCollection>. `pageIndex` Определяет страницу результатов, где 0 означает первую страницу. `totalRecords` Параметр `out` задается общее число авторизованных пользователей для настроенного `applicationName`. Например, если имеется 13 пользователей для настроенного `applicationName`и `pageIndex` присвоено значение 1 `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection> возвращается будет содержать с шестого до десятого пользователей. `totalRecords` будет иметь значение 13.  
  
   
  
## Examples  
 В следующем примере кода возвращает список пользователей на страницах данных с указанием числа пользователей в интерактивном режиме.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Значение параметра <paramref name="pageIndex" /> меньше нуля.  
  
 - или -  
  
 Значение параметра <paramref name="pageSize" /> меньше 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public static int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfUsersOnline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает количество пользователей, осуществляющих текущий доступ к приложению.</summary>
        <returns>Количество пользователей, осуществляющих текущий доступ к приложению.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Возвращает число пользователей для текущего <xref:System.Web.Security.Membership.ApplicationName%2A> где дату последней операции больше, чем текущее время меньше <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>. Последней операции метки даты и времени обновляется до текущей датой и временем, когда учетные данные пользователя проверяются посредством <xref:System.Web.Security.Membership.ValidateUser%2A> или <xref:System.Web.Security.Membership.UpdateUser%2A> метода или при вызове <xref:System.Web.Security.Membership.GetUser%2A> перегрузку, принимающую без параметров или использование `userIsOnline`для указания, что метки даты и времени должны быть обновлены.  
  
   
  
## Examples  
 В следующем примере кода возвращает список пользователей с подсчетом числа пользователей в интерактивном режиме.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает информацию из источника данных для пользователя членства.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser () As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает информацию из источника данных и обновляет отметку о времени и дате последней операции для текущего пользователя членства, вошедшего в систему.</summary>
        <returns>Объект <see cref="T:System.Web.Security.MembershipUser" />, представляющий текущего пользователя, вошедшего в систему.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser> Получение сведений о пользователе из источника данных и создание <xref:System.Web.Security.MembershipUser> заполненный возвращаемых данных. Если вы используете одну из <xref:System.Web.Security.Membership.GetUser%2A> перегрузок, которые не принимают `username` параметр <xref:System.Web.Security.Membership.GetUser%2A> возвращает сведения для текущего вошедшего пользователя. Текущего вошедшего пользователя определяется <xref:System.Security.Principal.IIdentity.Name%2A> пользователя в текущем <xref:System.Web.HttpContext>.  
  
 Можно также указать, следует ли <xref:System.Web.Security.Membership.GetUser%2A> для последней операции обновления метки даты и времени для пользователя полученные при помощи `userIsOnline` параметра. Из <xref:System.Web.Security.Membership.GetUser%2A> перегрузок, которые не принимают `userIsOnline` параметр `GetUser()` последней операции обновления метки даты и времени в пользователя неявно. `GetUser(System.String)` и `GetUser(System.Object)` — нет.  
  
   
  
## Examples  
 Следующий пример обновляет код последней операции метки для текущего вошедшего пользователя и выводится имя пользователя на странице ASP.NET даты и времени.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default1cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.Membership#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default1vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">В настоящее время в системе не работает ни один авторизованный пользователь.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userIsOnline">Если <see langword="true" />, обновляет отметку о дате и времени последней операции для указанного пользователя.</param>
        <summary>Возвращает информацию из источника данных для текущего вошедшего пользователя членства. Обновляет отметку о времени и дате последней активности для текущего вошедшего пользователя, если это указано.</summary>
        <returns>Объект <see cref="T:System.Web.Security.MembershipUser" />, представляющий текущего пользователя, вошедшего в систему.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Метод извлекает сведения о пользователе из источника данных и создает <xref:System.Web.Security.MembershipUser> заполненный возвращаемых данных. Если вы используете одну из <xref:System.Web.Security.Membership.GetUser%2A> перегрузок, которые не принимают `username` параметр <xref:System.Web.Security.Membership.GetUser%2A> возвращает сведения для текущего вошедшего пользователя. Текущего вошедшего пользователя определяется <xref:System.Security.Principal.IIdentity.Name%2A> пользователя в текущем <xref:System.Web.HttpContext>.  
  
 Можно также указать, следует ли <xref:System.Web.Security.Membership.GetUser%2A> для последней операции обновления метки даты и времени для пользователя полученные при помощи `userIsOnline` параметра. Из <xref:System.Web.Security.Membership.GetUser%2A> перегрузок, которые не принимают `userIsOnline` параметр `GetUser()` последней операции обновления метки даты и времени в пользователя неявно. `GetUser(System.String)` и `GetUser(System.Object)` — нет.  
  
   
  
## Examples  
 В следующем примере отображаются код, имя пользователя для текущего вошедшего пользователя на странице ASP.NET без обновления последней операции для пользователя даты и времени.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default2cs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.Membership#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default2vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">В настоящее время в системе не работает ни один авторизованный пользователь.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">Уникальный идентификатор пользователя из источника данных членства для пользователя.</param>
        <summary>Возвращает информацию из источника данных для пользователя членства, связанного с определенным уникальным идентификатором.</summary>
        <returns>Объект <see cref="T:System.Web.Security.MembershipUser" />, представляющий пользователя, связанного с уникальным идентификатором.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Метод извлекает сведения о пользователе из источника данных и создает <xref:System.Web.Security.MembershipUser> заполненный возвращаемых данных. Пользователь идентифицируется с помощью уникального идентификатора из источника данных, указанного с помощью `providerUserKey` параметра.  
  
 Можно также указать, следует ли <xref:System.Web.Security.Membership.GetUser%2A> для последней операции обновления метки даты и времени для пользователя, извлекаемых с `userIsOnline` параметра. Из <xref:System.Web.Security.Membership.GetUser%2A> перегрузок, которые не принимают `userIsOnline` параметр `GetUser()` последней операции обновления метки даты и времени в пользователя неявно. `GetUser(System.String)` и `GetUser(System.Object)` — нет  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="providerUserKey" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Имя извлекаемого пользователя.</param>
        <summary>Возвращает из источника данных информацию для указанного пользователя членства.</summary>
        <returns>Объект <see cref="T:System.Web.Security.MembershipUser" />, представляющий указанного пользователя. Если параметр <paramref name="username" /> не соответствует существующему пользователю, этот метод возвращает <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Метод извлекает сведения о пользователе из источника данных и создает <xref:System.Web.Security.MembershipUser> заполненный возвращаемых данных. Если вы используете одну из <xref:System.Web.Security.Membership.GetUser%2A> перегрузок, которые не принимают `username` параметр <xref:System.Web.Security.Membership.GetUser%2A> возвращает сведения для текущего вошедшего пользователя. Текущего вошедшего пользователя определяется <xref:System.Security.Principal.IIdentity.Name%2A> пользователя в текущем <xref:System.Web.HttpContext>.  
  
 Можно также указать, следует ли <xref:System.Web.Security.Membership.GetUser%2A> для последней операции обновления метки даты и времени для пользователя, извлекаемых с `userIsOnline` параметра. Из <xref:System.Web.Security.Membership.GetUser%2A> перегрузок, которые не принимают `userIsOnline` параметр <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> последней операции обновления метки даты и времени в пользователя неявно. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> и <xref:System.Web.Security.Membership.GetUser%2A> — нет.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.Membership.GetUser%2A> метод для возврата <xref:System.Web.Security.MembershipUser> объект для текущего вошедшего в систему пользователя и обновления, с адресом электронной почты для пользователя.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> содержит запятую (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="username" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">Уникальный идентификатор пользователя из источника данных членства для пользователя.</param>
        <param name="userIsOnline">Если <see langword="true" />, обновляет отметку о дате и времени последней операции для указанного пользователя.</param>
        <summary>Возвращает информацию из источника данных для пользователя членства, связанного с определенным уникальным идентификатором. Обновляет отметку о дате и времени последней операции пользователя, если это указано.</summary>
        <returns>Объект <see cref="T:System.Web.Security.MembershipUser" />, представляющий пользователя, связанного с уникальным идентификатором.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Метод извлекает сведения о пользователе из источника данных и создает <xref:System.Web.Security.MembershipUser> заполненный возвращаемых данных. Пользователь обозначена уникальный идентификатор из источника данных, указанного в `providerUserKey` параметра.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="providerUserKey" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Имя извлекаемого пользователя.</param>
        <param name="userIsOnline">Если <see langword="true" />, обновляет отметку о дате и времени последней операции для указанного пользователя.</param>
        <summary>Возвращает из источника данных информацию для указанного пользователя членства. Обновляет отметку о дате и времени последней операции пользователя, если это указано.</summary>
        <returns>Объект <see cref="T:System.Web.Security.MembershipUser" />, представляющий указанного пользователя. Если параметр <paramref name="username" /> не соответствует существующему пользователю, этот метод возвращает <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Метод извлекает сведения о пользователе из источника данных и создает <xref:System.Web.Security.MembershipUser> заполненный возвращаемых данных.  
  
 Если вы используете одну из <xref:System.Web.Security.Membership.GetUser%2A> перегрузок, которые не принимают `username` параметр <xref:System.Web.Security.Membership.GetUser%2A> возвращает сведения для текущего вошедшего пользователя. Текущего вошедшего пользователя определяется <xref:System.Security.Principal.IIdentity.Name%2A> пользователя в текущем <xref:System.Web.HttpContext>.  
  
 Можно также указать, следует ли <xref:System.Web.Security.Membership.GetUser%2A> для последней операции обновления метки даты и времени для пользователя, извлекаемых с `userIsOnline` параметра. Из <xref:System.Web.Security.Membership.GetUser%2A> перегрузок, которые не принимают `userIsOnline` параметр <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> последней операции обновления метки даты и времени в пользователя неявно. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> и <xref:System.Web.Security.Membership.GetUser%2A> — нет.  
  
   
  
## Examples  
 В следующем примере кода извлекается пароль для указанного имени пользователя и отправляет его на адрес электронной почты для указанного пользователя. Вызов <xref:System.Web.Security.Membership.GetUser%2A> указывает, что последней операции метки даты и времени для пользователя не будут обновлены.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> содержит запятую (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="username" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public static string GetUserNameByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUserNameByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUserNameByEmail (emailToMatch As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetUserNameByEmail(System::String ^ emailToMatch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Адрес электронной почты для поиска.</param>
        <summary>Возвращает имя пользователя, для которого адрес электронной почты совпадает с указанным адресом электронной почты.</summary>
        <returns>Имя пользователя, для которого адрес электронной почты совпадает с указанным адресом электронной почты. Если совпадения не найдены, то возвращается значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUserNameByEmail%2A> можно использовать для получения имени пользователя для авторизованного пользователя в случае, где пользователь не имеет имени пользователя, но знать свой адрес электронной почты. Если более одного пользователя в хранилище данных имеют один и тот же адрес электронной почты, возвращается первое обнаруженное имя пользователя.  
  
 Начальные и конечные пробелы удаляются из значений всех параметров.  
  
   
  
## Examples  
 В следующем примере кода извлекается имя пользователя для указанный адрес электронной почты.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithmType">
      <MemberSignature Language="C#" Value="public static string HashAlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string HashAlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.HashAlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HashAlgorithmType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ HashAlgorithmType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентификатор алгоритма, использующийся для хэширования паролей.</summary>
        <value>Идентификатор алгоритма, используемого для хэширования паролей или пустое место, чтобы использовать алгоритм хэширования по умолчанию.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.HashAlgorithmType%2A> Свойство определяет пользовательские хэш-алгоритм, используемый <xref:System.Web.Security.Membership> класса. Задать <xref:System.Web.Security.Membership.HashAlgorithmType%2A> свойства с помощью `hashAlgorithmType` атрибута элемента.  
  
 Платформа .NET Framework позволяет настроить пользовательские криптографических классов, используя раздел элемента конфигурации. <xref:System.Web.Security.Membership.HashAlgorithmType%2A> Свойство должно соответствовать `name` атрибута элемента в элементе. Дополнительные сведения см. в разделе [сопоставление имен алгоритмов на криптографические классы](~/docs/framework/configure-apps/map-algorithm-names-to-cryptography-classes.md).  
  
 Если <xref:System.Web.Security.Membership.HashAlgorithmType%2A> свойство не задано, <xref:System.Web.Security.Membership> класс использует алгоритм хэширования в `validation` атрибута элемента.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public static int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает количество попыток ввода недействительного пароля или контрольного ответа, по достижении которого авторизованный пользователь блокируется.</summary>
        <value>Количество попыток ввода недействительного пароля или контрольного ответа, по достижении которого авторизованный пользователь блокируется.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Свойство работает совместно с <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> свойство для защиты от нежелательных источника с помощью многократных попыток его угадывание пароля или контрольного ответа для авторизованного пользователя.  
  
 Если введенное число ввода недействительных пароля или контрольного ответа для авторизованного пользователя больше или равно значению <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> свойство в пределах количества минут, определенном параметром <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> свойство, то пользователь заблокирован доступ к веб-сайта по Установка <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> свойства `true` пока пользователь разблокируется с помощью вызова <xref:System.Web.Security.MembershipUser.UnlockUser%2A> метод.  
  
 Если действительный пароль или контрольный ответ предоставляется до значения <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> свойство достигается, счетчик, который отслеживает число попыток ввода неправильного присваивается нулевое значение.  
  
 Недопустимый пароль и попытки ввода пароля, отслеживаются отдельно. Например если <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> имеет значение 5, у пользователя есть до пяти попыток ввести правильный пароль и до пяти попыток ввести правильный ответ без блокировки.  
  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Значение свойства задается в конфигурации приложения с помощью `maxInvalidPasswordAttempts` атрибута элемента конфигурации.  
  
 Если <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> свойство `false`, попыток ввода пароля не отслеживаются.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config приложения. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> класс для реализации службы членства и наборы `maxInvalidPasswordAttempts` равным пяти попыток и `passwordAttemptWindow` до 30 минут.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public static int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает минимальное количество специальных символов, которые должны присутствовать в допустимом пароле.</summary>
        <value>Минимальное количество специальных символов, которые должны присутствовать в допустимом пароле.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> Свойство возвращает минимальное количество специальных, отличные от буквенно-цифровых символов, которые должны вводиться Создание пароля для поставщика членства, указанного в <xref:System.Web.Security.Membership.Provider%2A> свойство.  
  
 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> Значение свойства задается в конфигурации приложения с помощью `minRequiredNonAlphanumericCharacters` атрибута элемента конфигурации.  
  
 Не алфавитно-цифровой символ является символ, для которого <xref:System.Char.IsLetterOrDigit%2A> возвращает `false`.  
  
   
  
## Examples  
 В следующем примере кода показан элемент конфигурации в `system.web` раздел файла Web.config приложения. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> класс для реализации службы членства и наборы `minRequiredNonAlphanumericCharacters` равным 1 символ.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonAlphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public static int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredPasswordLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает минимальную длину пароля.</summary>
        <value>Минимальная длина пароля.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> Свойство возвращает минимальное число символов, которые должны вводиться Создание пароля для поставщика членства, указанного в <xref:System.Web.Security.Membership.Provider%2A> свойство.  
  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> Значение свойства задается в конфигурации приложения с помощью `minRequiredPasswordLength` атрибута элемента конфигурации.  
  
   
  
## Examples  
 В следующем примере кода показан элемент конфигурации в `system.web` раздел файла Web.config приложения. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> класс для реализации службы членства и наборы `minRequiredPasswordLength` атрибут семь символов.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredPasswordLength="7"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public static int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int PasswordAttemptWindow { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает интервал времени, которое должно пройти между отслеживанием последовательных попыток ввода недействительного пароля или контрольного ответа.</summary>
        <value>Интервал времени в минутах, в течение которого отслеживаются последовательные попытки ввода пароля или контрольного ответа. Значение по умолчанию — 10 минут. Если интервал между текущей и последней неудачной попыткой больше чем, заданный свойством <see cref="P:System.Web.Security.Membership.PasswordAttemptWindow" />, каждая неудачная попытка рассматривается как первая неудачная попытка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Свойство работает совместно с <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> защиту от нежелательного источника подбора пароля или контрольного ответа для авторизованного пользователя посредством свойства повторных попыток. Если пользователь пытается войти в систему, изменить или сбросить свой пароль, только определенные число последовательных попыток допустимы в течение указанного интервала времени. Длина этого временного окна, указана в <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> свойство, которое определяет количество минут между попытками недопустимый.  
  
 Если количество последовательных неудачных попыток, которые пользователь вносит в сбросить его или ее пароль имеет значение, хранящееся в <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> свойство и время, истекшее с момента последней попытки недопустимый меньше, чем время в минутах, указанный в <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> свойства, а затем авторизованный пользователь блокируется. Пользователь заблокирован, задав <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> свойства `true` пока пользователь разблокируется с помощью вызова <xref:System.Web.Security.MembershipUser.UnlockUser%2A> метод.  
  
 Если интервал между текущей неудачной попытки и последней неудачной попытки больше <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> задания, свойств, текущего Недопустимая попытка считается первый. Если ответ правильный пароль предоставляется достигнуто максимальное количество разрешенных попыток, количество попыток ввода пароля имеет значение 0 (ноль). Если указан неверный пароль до максимальное количество разрешенных попыток достигается, количество попыток ввода неверного пароля и контрольного ответа, присваивается значение 0 (ноль).  
  
 Неправильные попытки ввода пароля и контрольного ответа накапливаются независимо друг от друга. Например если <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> равен 5 и три недопустимый пароль попыток следовали две, могут быть сделаны две попытки ввода неверного пароля (или еще три попытки ввода пароля) в пределах <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> для авторизованного пользователя будет заблокирован.  
  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Значение свойства задается в конфигурации приложения с помощью `passwordAttemptWindow` атрибута раздела элемента конфигурации.  
  
 Если <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> свойству `false`, попыток ввода пароля не отслеживаются.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> и задает `maxInvalidPasswordAttempts` равным пяти попыток и `passwordAttemptWindow` до 30 минут.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public static string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает регулярное выражение, используемое для обработки пароля.</summary>
        <value>Регулярное выражение, используемое для обработки пароля.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Свойство получает регулярное выражение, используемое для оценки сложности пароля из поставщика, указанного в <xref:System.Web.Security.Membership.Provider%2A> свойство.  
  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Свойство задается в конфигурации приложения с помощью `passwordStrengthRegularExpression` атрибута элемента конфигурации.  
  
 Дополнительные сведения о регулярных выражениях см. в разделе [регулярные выражения .NET Framework](~/docs/standard/base-types/regular-expressions.md).  
  
   
  
## Examples  
 В следующем примере кода показан элемент конфигурации в `system.web` раздел файла Web.config приложения. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> класс для реализации службы членства и наборы `passwordStrengthRegularExpression` атрибут регулярное выражение, которое проверяет пароль, отвечающий следующим условиям:  
  
-   Больше семи знаков.  
  
-   Содержит по крайней мере одну цифру.  
  
-   Содержит по крайней мере один специальный символ (не алфавитно-цифрового).  
  
 Если пароль не удовлетворяют этим критериям, пароль не принимается поставщиком членства.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression=" @\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
   </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на поставщика участия по умолчанию для приложения.</summary>
        <value>Поставщика участия по умолчанию для приложения представляется с помощью абстрактного базового класса <see cref="T:System.Web.Security.MembershipProvider" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Provider%2A> Позволяет напрямую ссылаться поставщика членства по умолчанию для приложения. Обычно это используется для доступа к пользовательским элементам поставщика членства, которые не являются частью <xref:System.Web.Security.MembershipProvider> абстрактного базового класса.  
  
   
  
## Examples  
 В следующем примере кода обращается к значение по умолчанию <xref:System.Web.Security.SqlMembershipProvider> включена для приложения с помощью <xref:System.Web.Security.Membership.Provider%2A> свойство, чтобы определить значение пользовательской <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> свойство.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.Membership#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providervb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As MembershipProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProviderCollection ^ Providers { System::Web::Security::MembershipProviderCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию поставщиков участия для приложения ASP.NET.</summary>
        <value>Коллекция поставщиков участия <see cref="T:System.Web.Security.MembershipProviderCollection" />, настроенных для приложения ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Providers%2A> Свойство ссылается на все поставщики членства, доступные для приложения, включая поставщиков, добавленные в файл Web.config для приложения и файла Machine.config для всех приложений. Можно управлять поставщиками участия, доступных для приложения с помощью `providers` элемент для раздела конфигурации для приложения. Например, ниже приведен пример раздела в файле Web.config для приложения, которое удаляет <xref:System.Web.Security.SqlMembershipProvider> экземпляра (`AspNetSqlProvider`), указанных в файле конфигурации компьютера и добавляет <xref:System.Web.Security.SqlMembershipProvider> экземпляр с именем `SqlProvider` как Поставщик членства по умолчанию для приложения.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
          <add name="SqlProvider"  
            type="System.Web.Security.SqlMembershipProvider"  
            connectionStringName="SqlServices"  
            enablePasswordRetrieval="false"  
            enablePasswordReset="true"  
            requiresQuestionAndAnswer="true"  
            passwordFormat="Hashed"  
            applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 При указании [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) раздела, необходимо указать `defaultProvider` атрибута. Если вы не укажете [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) раздел в файл Web.config значения из конфигурации машины используются и <xref:System.Web.Security.SqlMembershipProvider> экземпляр с именем `AspNetSqlProvider` устанавливается как `defaultProvider`.  
  
 Можно получить строго типизированную ссылку на поставщик из <xref:System.Web.Security.Membership.Providers%2A> коллекции с помощью индексирования поставщика членства по имени и его привязки в качестве требуемого типа.  
  
   
  
## Examples  
 В следующем примере кода перечислены поставщики, доступные для приложения и их соответствующие типы.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providerscs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.Membership#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providersvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public static bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, настроен ли поставщик участия по умолчанию, чтобы запрашивать у пользователя ответ на контрольный вопрос для изменения или извлечения пароля.</summary>
        <value>
          Значение <see langword="true" />, если требуется ответ на контрольный вопрос для изменения или извлечения пароля; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Требование контрольного вопроса и ответа обеспечивает дополнительный уровень безопасности при извлечении или сбросе пароля пользователя. Пользователи могут вводить вопрос и ответ при создании имени пользователя, что впоследствии можно использовать для извлечения или сброса забытого пароля.  
  
 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> когда проверяется <xref:System.Web.Security.MembershipUser.ResetPassword%2A> или <xref:System.Web.Security.MembershipUser.GetPassword%2A> вызывается. Поставщик, доступных в .NET Framework создает <xref:System.NotSupportedException> Если <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> — `true` и ответ предоставленный пароль является `null`.  
  
 Если <xref:System.Web.Security.Membership.EnablePasswordReset%2A> и <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> оба `false`, <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> по-прежнему можно использовать для принудительного создания вопросов и ответов, при создании новых пользователей, однако вопрос и ответ использоваться не будет. Можно получить с помощью вопроса <xref:System.Web.Security.MembershipUser> класса.  
  
 Дополнительные сведения см. в разделах <xref:System.Web.Security.MembershipUser.ResetPassword%2A> и <xref:System.Web.Security.MembershipUser.GetPassword%2A>.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider>, позволяет сбросить пароль и требуется ввод пароля при выполнении сброса.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 В следующем образце кода проверяется значение <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> и добавляет необходимые элементы управления для запроса и ответа пароля должно быть предоставлено при создании пользователя.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public static void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">Объект <see cref="T:System.Web.Security.MembershipUser" />, который представляет пользователя для обновления и обновленную информацию для пользователя.</param>
        <summary>Обновляет базу данных данными для указанного пользователя.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UpdateUser%2A> принимает в качестве входных данных, <xref:System.Web.Security.MembershipUser> объект заполняется текущие сведения для авторизованного пользователя и обновляет значения свойств источника данных <xref:System.Web.Security.MembershipUser> объекта. Можно создать новый <xref:System.Web.Security.MembershipUser>, или получить <xref:System.Web.Security.MembershipUser> заполненный текущих значений в источнике данных с помощью <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, или <xref:System.Web.Security.Membership.FindUsersByEmail%2A> методы.  
  
   
  
## Examples  
 В следующем примере кода обновляется адрес электронной почты для текущего вошедшего пользователя.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="user" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UserIsOnlineTimeWindow">
      <MemberSignature Language="C#" Value="public static int UserIsOnlineTimeWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 UserIsOnlineTimeWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserIsOnlineTimeWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int UserIsOnlineTimeWindow { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает время в минутах после отметки с датой и временем последних действий для учетной записи пользователя, в течение которых считается, что пользователь находится в оперативном режиме.</summary>
        <value>Время в минутах после отметки о дате и времени последней операции пользователя, в течение которых считается, что пользователь находится в режиме online.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> Во время вызова проверяется значение свойства <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>. Если <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> для пользователя больше, чем текущая дата и время минус <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> значение в минутах, то он считается online. Чтобы выяснить, считается ли авторизованного пользователя в оперативном режиме <xref:System.Web.Security.MembershipUser.IsOnline%2A> свойство <xref:System.Web.Security.MembershipUser> класса.  
  
 <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Для пользователя обновляется, когда учетные данные пользователя проверяются успешно <xref:System.Web.Security.Membership.ValidateUser%2A> метод. Можно также обновить <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> для пользователя членства, при вызове одного из <xref:System.Web.Security.Membership.GetUser%2A> перегрузки. При вызове метода <xref:System.Web.Security.Membership.GetUser%2A> перегрузку, принимающую `userIsOnline` параметр, укажите значение `true` обновление <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> для пользователя.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> и задает `userIsOnlineTimeWindow` равным 20 минут.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public static bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Возвращает имя пользователя для проверки.</param>
        <param name="password">Пароль заданного пользователя.</param>
        <summary>Проверяет допустимость предоставленного имени пользователя и пароля.</summary>
        <returns>
          Значение <see langword="true" />, если предоставленное имя пользователя и пароль допустимы; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ValidateUser%2A> предоставляет простой способ проверить имя пользователя и пароль из источника данных. Обратите внимание, что если `username` параметр пуст или `null`, <xref:System.Web.HttpException> возникает исключение.  
  
   
  
## Examples  
 В следующем примере кода показано, на страницу входа для приложения ASP.NET, настроен на использование проверки подлинности форм и <xref:System.Web.Security.Membership> класса. Если учетные данные пользователя являются недопустимыми, сообщение отображается для пользователя. В противном случае пользователь перенаправляется на первоначально запрошенный URL-адрес с <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> метод.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatingPassword">
      <MemberSignature Language="C#" Value="public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.Membership.ValidatingPassword" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ValidatingPassword As MembershipValidatePasswordEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Web::Security::MembershipValidatePasswordEventHandler ^ ValidatingPassword;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipValidatePasswordEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при создании пользователя, изменении пароля или сбросе пароля.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> Событие возникает при <xref:System.Web.Security.MembershipProvider.CreateUser%2A> метода <xref:System.Web.Security.MembershipProvider.ChangePassword%2A> метод, или <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> вызывается метод поставщика членства.  
  
 Можно использовать <xref:System.Web.Security.MembershipProvider.ValidatingPassword> событий для проверки пароля форматы и значения для авторизованных пользователей.  
  
 Вы можете отменить текущий <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, или <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> , установив <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> предоставляемого <xref:System.Web.Security.ValidatePasswordEventArgs> для `true` во время <xref:System.Web.Security.MembershipProvider.ValidatingPassword> событий.  
  
 Если отменить текущее действие, задав <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> свойства `true`, можно задать <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> предоставляемого <xref:System.Web.Security.ValidatePasswordEventArgs> на исключение, которое описывает причину сбоя проверки пароля. Вызывающий метод вызовет исключение, которое <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> свойству. Если <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> свойство `null`, вызывающий объект вызывает исключение универсальное исключение неверного пароля проверки.  
  
   
  
## Examples  
 В следующем примере кода показан <xref:System.Web.Security.MembershipProvider.ValidatingPassword> событие, которое проверяет формат пароля для пользователя и отменяет действие, если пароль не соответствует требуемому формату.  
  
 [!code-csharp[System.Web.Security.Membership#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/CreateUser3cs.aspx#11)]
 [!code-vb[System.Web.Security.Membership#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/CreateUser3vb.aspx#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>