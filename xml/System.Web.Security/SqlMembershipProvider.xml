<Type Name="SqlMembershipProvider" FullName="System.Web.Security.SqlMembershipProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6b7b1cb4960fef8b1463c70904078cb547429fb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30552058" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlMembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlMembershipProvider&#xA;Inherits MembershipProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMembershipProvider : System::Web::Security::MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Управляет хранилищем сведений членства для приложения ASP.NET в базе данных SQL Server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс используется <xref:System.Web.Security.Membership> и <xref:System.Web.Security.MembershipUser> классов, чтобы предоставлять службы членства для приложения ASP.NET с помощью базы данных SQL Server. Нельзя использовать <xref:System.Web.Security.SqlMembershipProvider> без SQL Server. Если на компьютере установлен SQL Server Express с именем экземпляра по умолчанию установлен и включен, экземпляров пользователя <xref:System.Web.Security.SqlMembershipProvider> объекта создаст базу данных с именем `aspnetdb` в приложении `App_Data` directory первый время приложения При запуске.  
  
 Чтобы создать базу данных вручную, запустите `Aspnet_regsql.exe` найти исполняемый файл в `%systemroot%\Microsoft.NET\Framework\ versionNumber` папку и укажите `-A m` параметр (например `aspnet_regsql.exe -A m`). База данных, созданная называется Aspnetdb. Кроме того, запустите `Aspnet_regsql.exe` режим конфигурации графического интерфейса пользователя и выбрать настройку всех функций ASP.NET.  
  
 Если поставщик членства настроен со строкой соединения, которая использует встроенную безопасность, учетная запись процесса приложения ASP.NET должна иметь права на подключение к базе данных SQL Server.  
  
 Значение по умолчанию определяется в файле Machine.config <xref:System.Web.Security.SqlMembershipProvider> экземпляр с именем `AspNetSqlMembershipProvider` , подключается к экземпляру SQL Server Express по умолчанию на локальном компьютере. Если установлен экспресс-выпуска SQL Server с именем экземпляра по умолчанию или можно определить собственный экземпляр в файле Web.config для приложения ASP.NET, можно использовать этот экземпляр поставщика.  
  
 Если задать `passwordCompatMode` атрибут <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework40>, приложение может использовать хеширования и шифрования членства параметры, которые были добавлены в ASP.NET 4. Однако если `passwordCompatMode` атрибута задано значение <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>, параметры только хеширования и шифрования членства ASP.NET 2.0, ASP.NET 3.5 и используется ASP.NET 3.5 SP1. Значение по умолчанию — <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>. Дополнительные сведения см. в разделе <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>.  
  
   
  
## Examples  
 В следующем примере кода показан файл Web.config для приложения ASP.NET, настроен на использование <xref:System.Web.Security.SqlMembershipProvider>.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"  
      userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          maxInvalidPasswordAttempts="5"  
          passwordAttemptWindow="10" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Security.SqlMembershipProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.%23ctor%2A> Конструктор вызывается ASP.NET, чтобы создать экземпляр <xref:System.Web.Security.SqlMembershipProvider> класса, указанное в конфигурации для приложения. Этот конструктор не предназначен для использования в коде.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя приложения, для которого сохраняется и извлекается информации членства.</summary>
        <value>Имя приложения, для которого будет сохраняться и извлекаться информация членства. По умолчанию установлено значение свойства <see cref="P:System.Web.HttpRequest.ApplicationPath" /> для текущего свойства <see cref="P:System.Web.HttpContext.Request" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> Используется <xref:System.Web.Security.SqlMembershipProvider> для группирования сведений пользователя. Уточнение информации пользователя с именем приложения, можно хранить информацию для нескольких приложений в одной базе данных без конфликтов между идентичными именами пользователей. Кроме того, несколько приложений ASP.NET могут использовать одну и ту же базу данных пользователя, указав то же значение в <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> свойство. <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> Свойства могут устанавливаться программными средствами, или он может быть задано декларативно в файле конфигурации для веб-приложения с `applicationName` атрибута.  
  
 Если значение не указано для `applicationName` атрибут в файле конфигурации для веб-приложения, то <xref:System.Web.HttpRequest.ApplicationPath%2A> используется значение свойства для первого запроса приложения.  
  
> [!CAUTION]
>  Так как экземпляр по умолчанию один используется для всех запросов, обслуживаемых <xref:System.Web.HttpApplication> объекта может быть несколько запросов, параллельном выполнении и выполняется настройка <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> значение свойства. <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> Свойство не является потокобезопасным для нескольких операций записи и изменение <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> значение свойства может привести к непредвиденному поведению для нескольких пользователей приложения. Рекомендуется, чтобы избежать написания кода, чтобы пользователи могли установить <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> свойство без крайней необходимости. Пример приложения там, где параметр <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> свойства, может потребоваться является административные приложения, в котором данные о членстве для нескольких приложений. Такое приложение должно быть Однопользовательское приложение и не веб-приложения.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Он указывает возвращаемое приложение <xref:System.Web.Security.SqlMembershipProvider> экземпляра и наборы <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> для `MyApplication`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Предпринята попытка присвоить свойству <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> пустую строку или значение <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Была предпринята попытка задать свойству <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> значение строки, длина которой более 256 символов.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Пользователь, чей пароль требуется обновить.</param>
        <param name="oldPassword">Текущий пароль для указанного пользователя.</param>
        <param name="newPassword">Новый пароль для указанного пользователя.</param>
        <summary>Изменяет пароль пользователя.</summary>
        <returns>
          Значение <see langword="true" />, если пароль был успешно обновлен. Значение <see langword="false" />, если предоставлен недействительный старый пароль, пользователь заблокирован или пользователь отсутствует в базе данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса, чтобы обновить пароль для пользователя в базе данных SQL Server, указанную в файле конфигурации приложения ASP.NET (Web.config).  
  
 Максимальная длина пароля составляет 128 символов.  
  
 Если передается неверный пароль <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> метод, то внутренний счетчик, отслеживает попыток ввода неверного пароля увеличивается на единицу. Это может привести к пользователю блокируемого и недоступен для войти в систему, пока не будет очищен состояние блокировки путем вызова <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> метод. Если предоставляется правильный пароль и пользователь является не заблокирован, то внутренние счетчики неправильный пароль, отслеживания и пытается контрольный ответ сбрасываются в нуль. Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> и <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> свойства.  
  
 Можно вызвать <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> метод непосредственно, получив ссылку на <xref:System.Web.Security.SqlMembershipProvider> экземпляра <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. <xref:System.Web.Security.Membership.Provider%2A> Предоставляет свойство `defaultProvider` указан в файле Web.config для приложения. Настроенные поставщики, которые не являются поставщика по умолчанию, связанные с помощью <xref:System.Web.Security.Membership.Providers%2A> свойство.  
  
 Можно также изменить пароли пользователей с помощью <xref:System.Web.Security.MembershipUser.ChangePassword%2A> метод.  
  
 Начальные и конечные пробелы удаляются из значений всех параметров.  
  
   
  
## Examples  
 В следующем примере кода изменяется пароль для указанного пользователя.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordcs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="username" /> равен пустой строке (""), содержит запятую или длиннее 256 символов.  
  
 \- или -  
  
 Параметр <paramref name="oldPassword" /> равен пустой строке или длиннее 128 символов.  
  
 \- или -  
  
 Параметр <paramref name="newPassword" /> равен пустой строке или длиннее 128 символов.  
  
 \- или -  
  
 Закодированная версия параметра <paramref name="newPassword" /> длиннее 128 символов.  
  
 \- или -  
  
 Действие по изменению пароля было прервано подписчиком на событие <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> и свойство <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> имело значение <see langword="null" />.  
  
 \- или -  
  
 Длина параметра <paramref name="newPassword" /> меньше минимальной длины, указанной в свойстве <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />.  
  
 \- или -  
  
 Количество неалфавитных символов в параметре <paramref name="newPassword" /> меньше значения, указанного в свойстве <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />.  
  
 \- или -  
  
 Параметр <paramref name="newPassword" /> не соответствует регулярному выражению, описанному в свойстве <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="username" /> имеет значение <see langword="null" />.  
  
 \- или -  
  
 Свойство <paramref name="oldPassword" /> имеет значение <see langword="null" />.  
  
 \- или -  
  
 Свойство <paramref name="newPassword" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          Параметр <paramref name="username" /> не был найден в базе данных.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Ошибка возникает при размещении нового пароля в базе данных.</exception>
        <exception cref="T:System.Exception">Произошло необработанное исключение.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Пользователь, для которого изменяется проверочный вопрос и ответ.</param>
        <param name="password">Пароль заданного пользователя.</param>
        <param name="newPasswordQuestion">Новый проверочный вопрос для указанного пользователя.</param>
        <param name="newPasswordAnswer">Новый проверочный ответ для указанного пользователя.</param>
        <summary>Обновляет контрольный вопрос и ответ для пароля пользователя в базе данных членства SQL Server.</summary>
        <returns>
          Значение <see langword="true" />, если обновление выполнено успешно; в противном случае значение <see langword="false" />. Значение <see langword="false" /> также возвращается, если предоставлен неверный параметр <paramref name="password" />, пользователь заблокирован или пользователь отсутствует в базе данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.MembershipUser> класса, чтобы обновить контрольный вопрос и ответ пользователя в базе данных SQL Server, который указан в файле конфигурации приложения ASP.NET (Web.config). Ответ пароля шифруется с использованием формата, который указан в <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> свойство.  
  
 Требование контрольного вопроса и ответа обеспечивает дополнительный уровень безопасности при извлечении или сбросе пароля пользователя. При создании имени пользователя, пользователи могут вводить вопрос и ответ, который позже может использоваться для извлечения или сброса забытого пароля. <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> Метод обновляет вопрос и ответ на вопрос для авторизованного пользователя.  
  
 Если передается неверный пароль <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> метод, внутренних счетчиков, что отслеживание попыток ввода неверного пароля увеличивается на единицу. Это может привести к пользователю блокируемого и недоступен для войти в систему, пока не будет очищен состояние блокировки путем вызова <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> метод. Если предоставляется правильный пароль и пользователь является не заблокирован, то внутренние счетчики неправильный пароль, отслеживания и пытается контрольный ответ сбрасываются в нуль. Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> и <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> свойства.  
  
 Максимальная длина контрольного вопроса пароля составляет 256 символов. Максимальная длина ответа пароля составляет 128 символов.  
  
 Дополнительные сведения см. в разделах <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>, <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> и <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  
  
 Начальные и конечные пробелы удаляются из значений всех параметров.  
  
   
  
## Examples  
 В следующем примере кода обновлений контрольный вопрос и ответ для пользователя.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordQuestioncs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordQuestionvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="username" /> равен пустой строке (""), содержит запятую или длиннее 256 символов.  
  
 \- или -  
  
 Параметр <paramref name="password" /> равен пустой строке ("") или длиннее 128 символов.  
  
 \- или -  
  
 Параметр <paramref name="newPasswordQuestion" /> равен пустой строке ("") или длиннее 256 символов.  
  
 \- или -  
  
 Параметр <paramref name="newPasswordAnswer" /> равен пустой строке ("") или длиннее 128 символов.  
  
 \- или -  
  
 Закодированная версия параметра <paramref name="newPasswordAnswer" /> длиннее 128 символов.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="username" /> имеет значение <see langword="null" />.  
  
 \- или -  
  
 Свойство <paramref name="password" /> имеет значение <see langword="null" />.  
  
 \- или -  
  
 Свойство <paramref name="newPasswordQuestion" /> имеет значение <see langword="null" />; свойство <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> имеет значение <see langword="true" />.  
  
 \- или -  
  
 Свойство <paramref name="newPasswordAnswer" /> имеет значение <see langword="null" />; свойство <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> имеет значение <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Ошибка возникает при изменении контрольного вопроса и ответа для пароля в базе данных.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Имя пользователя для нового пользователя.</param>
        <param name="password">Пароль для нового пользователя.</param>
        <param name="email">Адрес электронной почты для нового пользователя.</param>
        <param name="passwordQuestion">Вопрос пароля для нового пользователя.</param>
        <param name="passwordAnswer">Контрольный ответ для пароля нового пользователя.</param>
        <param name="isApproved">Утвержден ли новый пользователь для проверки.</param>
        <param name="providerUserKey">
          <see cref="T:System.Guid" />, где задано значение для уникальной идентификации пользователя членства в базе данных SQL Server.</param>
        <param name="status">Одно из значений перечисления <see cref="T:System.Web.Security.MembershipCreateStatus" />, показывающее, успешно ли создан пользователь.</param>
        <summary>Добавляет нового пользователя в базу данных членства SQL Server.</summary>
        <returns>Объект <see cref="T:System.Web.Security.MembershipUser" /> для вновь созданного пользователя. Если пользователь не был создан, метод возвращает значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса, чтобы создать нового пользователя в базе данных SQL Server, указанной в файле конфигурации приложения ASP.NET.  
  
 Новые пользователи идентифицируются с помощью настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Если <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> свойству `true`, и `null` или пустая строка ("») указан для `email` параметра, не удастся создать пользователя. Создание пользователя также завершится ошибкой, если <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> свойству `true` и значения, указанного для `email` параметр является дубликатом адреса электронной почты для существующего пользователя в базе данных для настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Максимальная длина имени пользователя составляет 256 символов. Максимальная длина адреса электронной почты составляет 256 символов. Максимальная длина пароля открытым текстом или после хэширования или шифрования, составляет 128 символов.  
  
 Другие условия, которые приводят к сбою при создании пользователя:  
  
-   `password` Параметр `null`, или пустую строку после усечения.  
  
-   Длина `password` параметра меньше значения, указанного в <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> свойство.  
  
-   Число-неалфавитные символы в `password` параметра меньше значения, указанного в <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> свойство.  
  
-   `password` Параметра не проходит регулярное выражение в <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> свойство.  
  
-   Создание пользователя во время отмены кода пользовательской проверки пароля <xref:System.Web.Security.MembershipProvider.ValidatingPassword> событий.  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> Свойство `true` и `passwordAnswer` имеет значение `null` или пустую строку после усечения.  
  
-   Параметром `passwordAnswer` является пустая строка.  
  
-   `passwordAnswer` Параметр имеет длину более 128 символов.  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> Свойство `true` и контрольный вопрос `null` или пустую строку после усечения.  
  
-   Параметром `passwordQuestion` является пустая строка.  
  
-   `passwordQuestion` Параметр имеет длину более 256 символов.  
  
-   `providerUserKey` Параметр заданы для объекта типа, отличный от <xref:System.Guid?displayProperty=nameWithType>.  
  
-   `providerUserKey` Параметр является дубликатом существующего ключа пользователя.  
  
-   `username` Параметр является дубликатом существующего имени пользователя.  
  
 Начальные и конечные пробелы удаляются из значений всех строковых параметров.  
  
   
  
## Examples  
 В следующем примере кода создает нового пользователя для приложения ASP.NET, настроен на использование проверки подлинности форм и <xref:System.Web.Security.SqlMembershipProvider>. Если пользователь не создан успешно, отображается сообщение для пользователя. В противном случае пользователь перенаправляется на страницу входа для приложения.  
  
> [!NOTE]
>  В этом примере вызываются <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config с помощью <xref:System.Web.Security.Membership> класса. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Имя удаляемого пользователя.</param>
        <param name="deleteAllRelatedData">
          Значение <see langword="true" /> для удаления данных, связанных с пользователем, из базы данных; значение <see langword="false" /> для сохранения данных, связанных с пользователем, в базе данных.</param>
        <summary>Удаляет информацию членства пользователя из базы данных членства SQL Server.</summary>
        <returns>
          Значение <see langword="true" />, если пользователь был удален; в противном случае — <see langword="false" />. Значение <see langword="false" /> также возвращается, если пользователь не существует в базе данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса, чтобы удалить пользователя из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET.  
  
 Удаленные пользователи удаляется только из настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Если `deleteAllRelatedData` равно `true`, затем все данные пользователя хранятся в базе данных для <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, или <xref:System.Web.UI.WebControls.WebParts.WebPart> возможность индивидуальной настройки также удаляется для настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Если авторизованный пользователь не существует в базе данных, и `deleteAllRelatedData` — `true`, затем связанные данные и данные пользователя, сохраненные для <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, или <xref:System.Web.UI.WebControls.WebParts.WebPart> функции персонализации по-прежнему могут быть удалены для приложение, указанное в <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> свойство. В результате <xref:System.Web.Security.SqlMembershipProvider.DeleteUser%2A> метод можно использовать для быстрого удаления сведений, связанных с пользователем, даже если <xref:System.Web.Security.SqlMembershipProvider> объект не используется для хранения сведений о прошедших проверку подлинности пользователя.  
  
 Начальные и конечные пробелы удаляются из значения параметра `username`.  
  
   
  
## Examples  
 В следующем примере кода удаляет пользователя, выполнившего вход.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.SqlMembershipProvider> для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="username" /> равен пустой строке (""), содержит запятую или длиннее 256 символов.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="username" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordReset { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, настроена ли в поставщике участия SQL Server возможность сброса пользователями собственных паролей.</summary>
        <value>
          Значение <see langword="true" />, если поставщик членства поддерживает сброс паролей; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сброс пароля позволяет поставщику членства заменить текущий пароль пароль для имени пользователя с новым, формируется случайным образом. Это особенно полезно при <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> свойству <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, как пользователи не смогут получить значения хэшированный пароль.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Он указывает возвращаемое приложение <xref:System.Web.Security.SqlMembershipProvider> сброса пароля экземпляра и позволяет.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, настроена ли в поставщике участия SQL Server возможность извлечения пользователями собственных паролей.</summary>
        <value>
          Значение <see langword="true" />, если поставщик участия поддерживает извлечение пароля; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> свойству <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, пользователь не сможет получить свой существующий пароль из базы данных. <xref:System.Web.Security.MembershipPasswordFormat.Hashed> Формат пароля обеспечивает одностороннего кодирование значений паролей. Пароли хэшируются с произвольно создаваемого случайного значения и сравниваются со значениями, сохраненными в базе данных для проверки подлинности. Хэшированные значения не может быть без кодировки для получения исходное значение пароля.  
  
 Если <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> свойству <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, и <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> равно `true`, <xref:System.Configuration.Provider.ProviderException> вызывается при инициализации поставщика.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Он указывает возвращаемое приложение <xref:System.Web.Security.SqlMembershipProvider> экземпляра и разрешает получение пароля.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Адрес электронной почты для поиска.</param>
        <param name="pageIndex">Индекс страницы возвращаемых результатов. <c>pageIndex</c> отсчитывается от нуля.</param>
        <param name="pageSize">Размер страницы возвращаемых результатов.</param>
        <param name="totalRecords">Общее число соответствующих пользователей.</param>
        <summary>Возвращает коллекцию пользователей членства, поле адреса электронной почты которых совпадает с указанным значением.</summary>
        <returns>Коллекция <see cref="T:System.Web.Security.MembershipUserCollection" />, содержащая страницу, которая включает определяемое параметром <paramref name="pageSize" /> количество объектов <see cref="T:System.Web.Security.MembershipUser" />, начиная со страницы, заданной параметром <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> Возвращает список авторизованных пользователей, в которых адрес электронной почты содержит совпадают с указанным `emailToMatch` для настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Ищет имя пользователя, которое соответствует `emailToMatch` значение параметра, используя предложения LIKE. Подстановочные знаки SQL Server могут быть включены в значении параметра. Например если `emailToMatch` параметр имеет значение «address@example.com», затем сведения для пользователей с адресом электронной почты "address@example.com" возвращается, если он существует. Если `emailToMatch` параметр имеет значение «%@example.com», затем сведения для пользователей с адресом электронной почты "address@example.com«,»address2@example.com«,»admin@example.com» и так далее возвращается.  
  
 Результаты, возвращенные <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> , ограничиваются `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Security.MembershipUser> объектов, включаемых в <xref:System.Web.Security.MembershipUserCollection>. `pageIndex` Определяет страницу результатов, причем нуль указывает первую страницу. `totalRecords` Параметр `out` задается общее число авторизованных пользователей для настроенного `applicationName`. Например, если имеется 13 пользователей для настроенного `applicationName`и `pageIndex` присвоено значение 1 `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection> возвращается будет содержать с шестого до десятого пользователей. `totalRecords` Параметр должен быть установлен до 13.  
  
 Начальные и конечные пробелы удаляются из значения параметра `emailToMatch`.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> метод для извлечения сведений о членстве пользователя и отображает результаты в страницах данных.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Длина значения параметра <paramref name="emailToMatch" /> превышает 256 символов.  
  
 \- или -  
  
 Значение параметра <paramref name="pageIndex" /> меньше нуля.  
  
 \- или -  
  
 Значение параметра <paramref name="pageSize" /> меньше единицы.  
  
 \- или -  
  
 Произведение параметров <paramref name="pageIndex" /> и <paramref name="pageSize" />, к которому прибавлен параметр <paramref name="pageSize" />, уменьшенный на единицу, превышает значение <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">Имя пользователя для поиска.</param>
        <param name="pageIndex">Индекс страницы возвращаемых результатов. <c>pageIndex</c> отсчитывается от нуля.</param>
        <param name="pageSize">Размер страницы возвращаемых результатов.</param>
        <param name="totalRecords">В данном параметре метод возвращает общее количество пользователей, для которых выявлены совпадения.</param>
        <summary>Возвращает коллекцию авторизованных пользователей, имена которых соответствуют указанному имени.</summary>
        <returns>Коллекция <see cref="T:System.Web.Security.MembershipUserCollection" />, содержащая страницу, которая включает определяемое параметром <paramref name="pageSize" /> количество объектов <see cref="T:System.Web.Security.MembershipUser" />, начиная со страницы, заданной параметром <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> Возвращает список авторизованных пользователей, для которых имя пользователя содержит сопоставление с предоставленной `usernameToMatch` для настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Ищет имя пользователя, которое соответствует `usernameToMatch` значение параметра, используя предложения LIKE. Подстановочные знаки SQL Server могут быть включены со значением параметра. Например если `usernameToMatch` параметр имеет значение «user1», то возвращаются сведения о пользователе для пользователя с именем пользователя «user1», если он существует. Если `usernameToMatch` параметр имеет значение «user %», а затем сведения для пользователей с именем пользователя «user1», «user2», «user_admin» и возвращаются т. д.  
  
 Результаты, возвращенные <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> , ограничиваются `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Security.MembershipUser> объектов, включаемых в <xref:System.Web.Security.MembershipUserCollection>. `pageIndex` Определяет страницу результатов, причем нуль указывает первую страницу. `totalRecords` Параметр `out` задается общее число авторизованных пользователей для настроенного `applicationName`. Например, если имеется 13 пользователей для настроенного `applicationName`и `pageIndex` присвоено значение 1 `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection> возвращается будет содержать с шестого до десятого пользователей. `totalRecords` Параметр должен быть установлен до 13.  
  
 Начальные и конечные пробелы удаляются из значения параметра `usernameToMatch`.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> метод для извлечения сведений о членстве пользователя и отображает результаты в страницах данных.  
  
> [!NOTE]
>  Этот пример использует System.Web.Security.SqlMembershipProvider для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="usernameToMatch" /> равен пустой строке ("") или длиннее 256 символов.  
  
 \- или -  
  
 Значение параметра <paramref name="pageIndex" /> меньше нуля.  
  
 \- или -  
  
 Значение параметра <paramref name="pageSize" /> меньше 1.  
  
 \- или -  
  
 Произведение параметров <paramref name="pageIndex" /> и <paramref name="pageSize" />, к которому прибавлен параметр <paramref name="pageSize" />, уменьшенный на единицу, превышает значение <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="usernameToMatch" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GeneratePassword" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GeneratePassword () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GeneratePassword();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Случайным образом формирует пароль длиной не менее 14 символов.</summary>
        <returns>Случайным образом сформированный пароль длиной не менее 14 символов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership> Класс предоставляет <xref:System.Web.Security.Membership.GeneratePassword%2A> метод, который создает пароль указанного размера с по крайней мере указанное количество небуквенных символов. <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> Метод <xref:System.Web.Security.SqlMembershipProvider> вызовы <xref:System.Web.Security.Membership.GeneratePassword%2A> метод <xref:System.Web.Security.Membership> класса для извлечения случайный пароль длиной не менее 14 символов. Если <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> больше, чем 14, возвращаемый пароль будет использоваться длина, указанная в <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> свойство.  
  
 В частности, можно вызвать <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> метод с помощью ссылки на <xref:System.Web.Security.SqlMembershipProvider> класса непосредственно из <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса.  
  
 Созданный пароль должен содержать только буквы, цифры и следующие знаки пунктуации: `!@#$%^&*()_-+=[{]};:<>|./?`. Не управления скрытые или непечатаемые символы, включенные в созданном пароле.  
  
> [!NOTE]
>  Случайный пароль, созданные <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> метода не обязательно передать регулярное выражение в <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> свойство. Однако случайный пароль будет соответствовать условиям, заданным <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> и <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> свойства.  
  
   
  
## Examples  
 В следующем примере кода создает случайный пароль 10 символов.  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GeneratePasswordcs.aspx#9)]
 [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GeneratePasswordvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">Индекс страницы возвращаемых результатов. <c>pageIndex</c> отсчитывается от нуля.</param>
        <param name="pageSize">Размер страницы возвращаемых результатов.</param>
        <param name="totalRecords">Общее количество пользователей.</param>
        <summary>Возвращает коллекцию всех пользователей в базе данных членства SQL Server.</summary>
        <returns>Коллекция <see cref="T:System.Web.Security.MembershipUserCollection" /> объектов <see cref="T:System.Web.Security.MembershipUser" /> представляет всех пользователей в базе данных для настроенного приложения <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса для получения сведений о пользователе из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
 Результаты, возвращенные <xref:System.Web.Security.SqlMembershipProvider.GetAllUsers%2A> , ограничиваются `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Security.MembershipUser> объектов, включаемых в <xref:System.Web.Security.MembershipUserCollection>. `pageIndex` Определяет страницу результатов, причем нуль указывает первую страницу. `totalRecords` Параметр `out` задается общее число авторизованных пользователей для настроенного `applicationName`. Например, если имеется 13 пользователей для настроенного `applicationName`и `pageIndex` присвоено значение 1 `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection> возвращается будет содержать с шестого до десятого пользователей. `totalRecords` Параметр должен быть установлен до 13.  
  
   
  
## Examples  
 В следующем примере кода возвращает список пользователей на страницах данных с указанием числа пользователей в интерактивном режиме.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Значение параметра <paramref name="pageIndex" /> меньше нуля.  
  
 \- или -  
  
 Значение параметра <paramref name="pageSize" /> меньше единицы.  
  
 \- или -  
  
 Произведение параметров <paramref name="pageIndex" /> и <paramref name="pageSize" />, к которому прибавлен параметр <paramref name="pageSize" />, уменьшенный на единицу, превышает значение <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfUsersOnline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает количество пользователей, осуществляющих текущий доступ к приложению.</summary>
        <returns>Число пользователей, которые в настоящее время имеют доступ к приложению.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса для извлечения количество пользователей, считается в оперативном режиме, из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Возвращает число пользователей, которых действие Дата и время последнего больше, чем текущая дата и время меньше значения текущего приложения <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> свойство в минутах.  
  
 Только пользователи, связанные с настроенным <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> учитываются.  
  
   
  
## Examples  
 Следующий пример кода возвращает список пользователей и число пользователей в интерактивном режиме.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Пользователь, чей пароль требуется получить.</param>
        <param name="passwordAnswer">Ответ на проверочный вопрос для этого пользователя.</param>
        <summary>Возвращает пароль для указанного пользователя из базы данных членства SQL Server.</summary>
        <returns>Пароль для указанного имени пользователя.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.MembershipUser> класса для извлечения пароля для пользователя из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
 Если ответ неправильный пароль, предоставленный для <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> метод, то внутренний счетчик, отслеживает попыток ввода пароля увеличивается на единицу. Это может привести к пользователю блокируемого и недоступен для войти в систему, пока не будет очищен состояние блокировки путем вызова <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> метод. Если ответ правильный пароль, а пользователь имеет не заблокирован, то внутренний счетчик, который отслеживает попытки ввода пароля будет сброшено в ноль. Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> и <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> свойства.  
  
 Можно вызвать <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> метод непосредственно, получив ссылку на <xref:System.Web.Security.SqlMembershipProvider> экземпляра <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса.  
  
 Если <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> свойству <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> метод не может получить пароль. Хэшированные пароли шифруются однонаправленно и не может быть расшифрован. Если <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> свойству <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, и <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> равно `true`, <xref:System.Configuration.Provider.ProviderException> вызывается при инициализации поставщика.  
  
 Начальные и конечные пробелы удаляются из значений всех параметров.  
  
   
  
## Examples  
 В следующем примере кода извлекается пароль для указанного имени пользователя и отправляет его пользователю в сообщении электронной почты.  
  
> [!NOTE]
>  Возврат паролей в виде открытого текста с помощью электронной почты для сайтов, требующих высокого уровня безопасности не рекомендуется. Для узлов с высоким уровнем безопасности рекомендуется возвращать пароль с использованием шифрования, например SSL.  
  
> [!NOTE]
>  В этом примере вызываются <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config с помощью <xref:System.Web.Security.Membership> класса. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> недопустим.  
  
 \- или -  
  
 Пользователь членства, определяемый параметром <paramref name="username" />, заблокирован.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметру <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" /> задается значение <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          Параметр <paramref name="username" /> не найден в базе данных членства.  
  
 \- или -  
  
 Произошла ошибка при получении пароля из базы данных.</exception>
        <exception cref="T:System.ArgumentException">Один из параметров имеет длину больше допустимой.  
  
 \- или -  
  
 Параметр <paramref name="username" /> равен пустой строке (""), содержит запятую или длиннее 256 символов.  
  
 \- или -  
  
 Параметр <paramref name="passwordAnswer" /> представлен пустой строкой и свойству <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> задано значение <see langword="true" />.  
  
 \- или -  
  
 Длина значения параметра <paramref name="passwordAnswer" /> более 128 символов.  
  
 \- или -  
  
 Закодированная версия параметра <paramref name="passwordAnswer" /> длиннее 128 символов.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="username" /> имеет значение <see langword="null" />.  
  
 \- или -  
  
 Свойство <paramref name="passwordAnswer" /> имеет значение <see langword="null" />; свойство <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> имеет значение <see langword="true" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает информацию из источника данных для пользователя членства.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">Уникальный идентификатор для пользователя.</param>
        <param name="userIsOnline">
          Значение <see langword="true" />, чтобы обновлять отметку о дате и времени последней операции для указанного пользователя, в противном случае — значение <see langword="false" />.</param>
        <summary>Возвращает информацию из источника данных для пользователя членства, связанного с указанным уникальным идентификатором, и обновляет отметку даты и времени последнего действия пользователя, если указывается.</summary>
        <returns>Объект <see cref="T:System.Web.Security.MembershipUser" />, представляющий пользователя, связанного с уникальным идентификатором. Если для указанного значения <paramref name="providerUserKey" /> в базе данных не найден пользователь, возвращается значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Получение сведений о пользователе из источника данных и создание <xref:System.Web.Security.MembershipUser> заполненный возвращаемых данных. Пользователь идентифицируется с помощью уникального идентификатора, указанного с помощью `providerUserKey` параметра.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="providerUserKey" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="providerUserKey" /> не является параметром типа <see cref="T:System.Guid" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Имя пользователя для получения данных.</param>
        <param name="userIsOnline">
          Значение <see langword="true" />, чтобы обновить метку даты и времени последней операции пользователя. Значение <see langword="false" />, чтобы вернуть информацию пользователя без обновления метки даты и времени последней операции пользователя.</param>
        <summary>Возвращает информацию из базы данных членства SQL Server для пользователя и предоставляет параметр для обновления отметки даты и времени последнего действия пользователя.</summary>
        <returns>Объект <see cref="T:System.Web.Security.MembershipUser" />, представляющий указанного пользователя. Если для указанного значения <paramref name="username" /> в базе данных не найден пользователь, возвращается значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса для получения сведений о пользователе из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
 Если `userIsOnline` — `true`, отметка даты и времени последнего действия пользователя обновляется до текущей даты и времени. Это отражено в <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> и <xref:System.Web.Security.MembershipUser.IsOnline%2A> свойства и значения, возвращенного <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>.  
  
 Начальные и конечные пробелы удаляются из значения параметра `username`.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.SqlMembershipProvider.GetUser%2A> метод, чтобы определить, существует ли пользователь, прежде чем получить пароль для пользователя.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Длина параметра <paramref name="username" /> превышает 256 символов.  
  
 \- или -  
  
 Параметр <paramref name="username" /> содержит запятую.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="username" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">Адрес электронной почты для поиска.</param>
        <summary>Возвращает имя пользователя, связанное с указанным адресом электронной почты.</summary>
        <returns>Имя пользователя, связанное с указанным адресом электронной почты. Если такой адрес не найден, метод возвращает значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса с адресом электронной почты, который используется для получения связанного имени пользователя из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
 Если более одного пользователя в базе данных членства имеют один и тот же адрес электронной почты, возвращается первое обнаруженное имя пользователя. Можно задать `requiresUniqueEmail` атрибут `true` в файле конфигурации приложения, чтобы убедиться, что все сообщения электронной почты адрес базы данных является уникальным.  
  
 Начальные и конечные пробелы удаляются из значения параметра `email`.  
  
   
  
## Examples  
 В следующем примере кода извлекается имя пользователя для указанный адрес электронной почты.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Длина параметра <paramref name="email" /> превышает 256 символов.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">В базе данных существует несколько пользователей с одинаковым адресом электронной почты, и свойству <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> присвоено значение <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Имя экземпляра <see cref="T:System.Web.Security.SqlMembershipProvider" /> для инициализации.</param>
        <param name="config">Коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" />, которая содержит имена и значения параметров конфигурации для поставщика участия.</param>
        <summary>Инициализирует поставщика участия SQL Server значениями свойства, указанными в файле конфигурации приложения ASP.NET. Этот метод не предназначен для непосредственного использования в коде.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод инициализирует <xref:System.Web.Security.SqlMembershipProvider> со свойством значения, указанные в файле конфигурации приложения ASP.NET (Web.config) и не предназначен для использования непосредственно из программного кода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="config" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Атрибуту <see langword="enablePasswordRetrieval" />, <see langword="enablePasswordReset" />, <see langword="requiresQuestionAndAnswer" /> или <see langword="requiresUniqueEmail" /> задано значение, тип которого отличается от <see langword="Boolean" />.  
  
 \- или -  
  
 Атрибуту <see langword="maxInvalidPasswordAttempts" /> или <see langword="passwordAttemptWindow" /> задано значение, не являющееся положительным целым числом.  
  
 \- или -  
  
 Атрибут <see langword="minRequiredPasswordLength" /> не является положительным целым числом, или значение числа больше 128.  
  
 \- или -  
  
 Атрибут <see langword="minRequiredNonalphanumericCharacters" /> не является нулем или положительным целым числом, или значение числа больше 128.  
  
 \- или -  
  
 Значение атрибута <see langword="passwordStrengthRegularExpression" /> представляет собой недопустимое регулярное выражение.  
  
 \- или -  
  
 Длина значения атрибута <see langword="applicationName" /> превышает 256 знаков.  
  
 \- или -  
  
 Атрибут <see langword="passwordFormat" />, указанный в файле конфигурации приложения, является недопустимым перечислением <see cref="T:System.Web.Security.MembershipPasswordFormat" />.  
  
 \- или -  
  
 В конфигурации приложения атрибуту <see langword="passwordFormat" /> задано значение <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" /> и атрибуту <see langword="enablePasswordRetrieval" /> задано значение <see langword="true" />.  
  
 \- или -  
  
 Атрибуту <see langword="passwordFormat" /> присвоено значение <see langword="Encrypted" />, а элемент конфигурации задает значение <see langword="AutoGenerate" /> для атрибута <see langword="decryptionKey" />.  
  
 \- или -  
  
 Атрибут <see langword="connectionStringName" /> пуст или отсутствует в конфигурации приложения.  
  
 \- или -  
  
 Атрибуту <see langword="connectionStringName" /> задана пустая строка подключения или указанное значение <see langword="connectionStringName" /> не существует в файле конфигурации приложения.  
  
 \- или -  
  
 Атрибуту <see langword="commandTimeout" /> задано значение, не являющееся нулем или положительным целым числом.  
  
 \- или -  
  
 Файл конфигурации приложения для этого экземпляра <see cref="T:System.Web.Security.SqlMembershipProvider" /> содержит нераспознанный атрибут.</exception>
        <exception cref="T:System.Web.HttpException">Текущий уровень доверия меньше значения <see langword="Low" />.</exception>
        <exception cref="T:System.InvalidOperationException">Поставщик уже инициализирован перед текущим вызовом метода <see cref="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает количество попыток ввода недействительного пароля или контрольного ответа, по достижении которого авторизованный пользователь блокируется.</summary>
        <value>Количество попыток ввода недействительного пароля или контрольного ответа, по достижении которого авторизованный пользователь блокируется.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Работает в сочетании с <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> защититься от нежелательного источника подбора пароля или контрольного ответа для авторизованного пользователя посредством повторяющихся попыток. Если количество ввода недействительных пароля или контрольного ответа для авторизованного пользователя больше или равно значению <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> свойство в пределах количества минут, определяемого значением <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> свойства, а затем авторизованного пользователя блокируется, задав <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> свойства `true` пока пользователь разблокируется с <xref:System.Web.Security.MembershipUser.UnlockUser%2A> метод. Если указан неверный пароль перед <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> при достижении значения, счетчики, отслеживающие число попыток ввода неправильного пароля и контрольного ответа, сбрасываются в нуль. Если ответ правильный пароль для пароля до <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> при достижении значения, счетчик, который отслеживает количество попыток ввода пароля будет сброшено в ноль.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Отслеживает количество попыток ввода неверного пароля и контрольного ответа попыток отдельно. Недопустимый пароль попыток результат в только значения счетчика попытки ввода пароля. Контрольного ответа попыток результат в только значения счетчика ответ пароль.  
  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Значение свойства задается в конфигурации приложения с помощью `maxInvalidPasswordAttempts` атрибут раздела конфигурации.  
  
 Если <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> свойству `false`, попыток ввода пароля не отслеживаются.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> и задает `maxInvalidPasswordAttempts` равным пяти попыток и `passwordAttemptWindow` до 30 минут.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает минимальное количество специальных символов, которые должны присутствовать в допустимом пароле.</summary>
        <value>Минимальное количество специальных символов, которые должны присутствовать в допустимом пароле.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> Свойство возвращает минимальное число специальных, неалфавитных символов, которое необходимо ввести правильный пароль для создания <xref:System.Web.Security.SqlMembershipProvider> объекта.  
  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> Значение свойства задается в конфигурации приложения с помощью `minRequiredNonalphanumericCharacters` атрибут [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации.  
  
 Не алфавитно-цифровой символ является символ, для которого <xref:System.Char.IsLetterOrDigit%2A> возвращает `false`.  
  
   
  
## Examples  
 В следующем примере показан [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации в `system.web` раздел файла Web.config приложения. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> класс для реализации службы членства и наборы `minRequiredNonalphanumericCharacters` атрибут один символ.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonalphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredPasswordLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает минимальную длину пароля.</summary>
        <value>Минимальная длина пароля.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> Получает минимальное количество символов, которое необходимо ввести правильный пароль для создания <xref:System.Web.Security.SqlMembershipProvider> объекта.  
  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> Значение свойства задается в конфигурации приложения с помощью `minRequiredPasswordLength` атрибут [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации.  
  
   
  
## Examples  
 В следующем примере показан [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации в `system.web` раздел файла Web.config приложения. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> класс для реализации службы членства и наборы `minRequiredPasswordLength` атрибут семь символов.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
    <providers>  
      <add  
        name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        minRequiredPasswordLength="7"  
        />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PasswordAttemptWindow { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает интервал времени, в пределах которого отслеживаются последовательные попытки ввода недействительного пароля или контрольного ответа.</summary>
        <value>Интервал времени в минутах, в течение которого отслеживаются последовательные попытки ввода пароля или контрольных ответов. Значение по умолчанию — 10 минут. Если интервал между текущей и последней неудачной попыткой больше чем, заданный свойством <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />, каждая неудачная попытка рассматривается как первая неудачная попытка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> Свойство работает совместно с <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> защиту от нежелательного источника подбора пароля или контрольного ответа для авторизованного пользователя через свойства повторных попыток. Если пользователей пытаются вход, изменить свой пароль или сброса пароля, только определенные число последовательных попыток допустимы в течение указанного интервала времени. Продолжительность периода времени задается <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> свойство, которое определяет количество минут между попытками недопустимый. Если количество последовательных неудачных попыток, которые пользователь вносит в сбросить его или ее пароль имеет значение, хранящееся в <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> свойство и время, истекшее с момента последней попытки недопустимый меньше, чем время в минутах, указанный для <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> свойства, а затем авторизованный пользователь блокируется, задав <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> свойства `true`. Можно разблокировать пользователя путем вызова <xref:System.Web.Security.MembershipUser.UnlockUser%2A> метод. Если интервал между текущей неудачной попытки и последней неудачной попытки больше <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> задания, свойств, текущего Недопустимая попытка считается первый. Если ответ правильный пароль предоставляется достигнуто максимальное количество разрешенных попыток, количество попыток ввода пароля равно нулю. Если указан неверный пароль до максимальное количество разрешенных попыток достигается, количество попыток ввода неверного пароля и контрольного ответа, присваивается значение ноль.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Отслеживает число попыток ввода неверного пароля и контрольного ответа попыток отдельно. Недопустимый пароль попыток результат в только значения счетчика попытки ввода пароля. Контрольного ответа попыток результат в только значения счетчика ответ пароль.  
  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Значение свойства задается в конфигурации приложения с помощью `passwordAttemptWindow` атрибут раздела конфигурации.  
  
 Если <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> свойству `false`, попыток ввода пароля не отслеживаются.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> и задает `maxInvalidPasswordAttempts` равным пяти попыток и `passwordAttemptWindow` до 30 минут.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее формат хранения паролей в базе данных членства SQL Server.</summary>
        <value>Одно из значений <see cref="T:System.Web.Security.MembershipPasswordFormat" />, указывающее формат хранения паролей в базе данных SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте `Hashed` только `Clear` и `Encrypted` не являются безопасными. `Hashed` пароли хэшируются с помощью одностороннего алгоритма хеширования и произвольно создаваемого случайного значения при сохранении в базе данных. Когда проверяется пароль, он хэшируется с начальным значением в базе данных для проверки. Хешированные пароли нельзя восстановить. `Encrypted` пароли не считаются безопасными, как нарушения безопасности, отображающую содержимое вашего базы данных может предоставить ключ шифрования. Это означает, что зашифрованные пароли может быть расшифрован и представлены.  
  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> Значение указано в разделе файла Web.config для приложения ASP.NET.  
  
 `Encrypted` и `Hashed` хэшируются по умолчанию на основе сведений, предоставленных в элемент в конфигурации или зашифрованные пароли. Обратите внимание, что если указать значение `3DES` для `validation` атрибут, или если значение не указано, хэшированные пароли хэшируется с помощью <xref:System.Security.Cryptography.SHA1> алгоритма.  
  
 Пользовательские хэш-алгоритм, можно определить при помощи `hashAlgorithmType` атрибут [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации. При выборе шифрования используется по умолчанию пароль шифрования AES. Можно изменить алгоритм шифрования, задав `decryption` атрибута элемента конфигурации. При шифровании паролей, необходимо указать явное значение `decryptionKey` атрибута в элементе. Значение по умолчанию `AutoGenerate` для `decryptionKey` атрибут не поддерживается, если с помощью зашифрованных паролей с помощью членства ASP.NET.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Он указывает возвращаемое приложение <xref:System.Web.Security.SqlMembershipProvider> экземпляра и присваивает его формат пароля `Hashed`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает регулярное выражение, используемое для обработки пароля.</summary>
        <value>Регулярное выражение, используемое для обработки пароля.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> Свойство получает регулярное выражение, используемое для оценки сложности пароля для <xref:System.Web.Security.SqlMembershipProvider> объекта.  
  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Свойство задается в конфигурации приложения с помощью `passwordStrengthRegularExpression` атрибут [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации.  
  
   
  
## Examples  
 В следующем примере показан [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации в `system.web` раздел файла Web.config приложения. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> класс для реализации службы членства и наборы `passwordStrengthRegularExpression` атрибут регулярное выражение, которое проверяет, что пароль отвечает следующим требованиям:  
  
-   Составляет по крайней мере 8 символов.  
  
-   Содержит по крайней мере одну цифру.  
  
-   Содержит по крайней мере один специальный символ (не алфавитно-цифрового).  
  
 Если пароль не удовлетворяют этим критериям, пароль не принимается поставщиком членства.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, настроен ли поставщик участия SQL Server, чтобы запрашивать у пользователя ответ на контрольный вопрос для изменения или извлечения пароля.</summary>
        <value>
          Значение <see langword="true" />, если требуется ответ на контрольный вопрос для изменения или извлечения пароля; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Требование контрольного вопроса и ответа обеспечивает дополнительный уровень безопасности при извлечении или сбросе пароля пользователя. При создании имени пользователя, пользователи могут вводить вопрос и ответ, который позже может использоваться для извлечения или сброса забытого пароля. Если <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A> свойство и <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> свойство находятся `false`, значение <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> свойства имеют значения.  
  
 Дополнительные сведения см. в разделах <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> и <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Он указывает возвращаемое приложение <xref:System.Web.Security.SqlMembershipProvider> экземпляра и настраивает его требуется ответ-пароль для сброса пароля или получение.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueEmail { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, настроен ли поставщик участия SQL Server, чтобы требовать уникальный адрес электронной почты для каждого имени пользователя.</summary>
        <value>
          <see langword="true" /> Если поставщик членства требует уникальный адрес. в противном случае <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Он указывает <xref:System.Web.Security.SqlMembershipProvider> экземпляра и настраивает его требуется уникальный адрес для каждого имени пользователя.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      requiresUniqueEmail="true"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Пользователь, чей пароль требуется сбросить.</param>
        <param name="passwordAnswer">Ответ на проверочный вопрос для указанного пользователя.</param>
        <summary>Сбрасывает пароль пользователя и устанавливает новый, автоматически сгенерированный пароль.</summary>
        <returns>Новый пароль для указанного пользователя.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса для сброса пароля для пользователя в базе данных SQL Server, указанный в файле конфигурации приложения ASP.NET (Web.config) в новый формируется случайным образом значение. Возвращается новый пароль.  
  
> [!NOTE]
>  Случайный пароль, созданные <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> метода не обязательно передать регулярное выражение в <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> свойство. Однако случайный пароль будет соответствовать условиям, заданным <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> и <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> свойства.  
  
 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> Метод большинства часто используемых при <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> свойству `Hashed`. Если пользователь забыл пароль, который хэшируется, невозможно извлечь пароль. Однако поставщик можно сбросить пароль на новый, автоматически сгенерированный пароль, если пользователь предоставляет ответ правильный пароль.  
  
 Если ответ неправильный пароль, предоставленный для <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> метод, то внутренний счетчик, отслеживает попыток ввода неверного пароля увеличивается на единицу. Это может привести к пользователю блокируемого и недоступен для войти в систему, пока не будет очищен состояние блокировки путем вызова <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> метод. Если ответ правильный пароль, а пользователь имеет не заблокирован, то внутренний счетчик, который отслеживает попытки ввода пароля будет сброшено в ноль. Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> и <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> свойства.  
  
 Можно вызвать <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> метод непосредственно, получив ссылку на <xref:System.Web.Security.SqlMembershipProvider> экземпляра из <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Созданный пароль будет менее 14 символов или длина указанного в <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> свойство и будет содержать число не буквенно-цифровых символов, указанных в <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> свойство. Пароль не обязательно передать регулярное выражение, содержащееся в <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> свойства, если он указан.  
  
 Начальные и конечные пробелы удаляются из значений всех параметров.  
  
   
  
## Examples  
 В следующем примере кода сбрасывает пароль пользователя и возвращает новый, автоматически сгенерированный пароль.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> недопустим.  
  
 \- или -  
  
 Учетная запись пользователя в данный момент заблокирована.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметру <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" /> задается значение <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          Параметр <paramref name="username" /> не найден в базе данных членства.  
  
 \- или -  
  
 Действие по изменению пароля было прервано подписчиком на событие <see cref="E:System.Web.Security.Membership.ValidatingPassword" />, и свойство <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> имело значение <see langword="null" />.  
  
 \- или -  
  
 Произошла ошибка при получении пароля из базы данных.</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="username" /> равен пустой строке (""), содержит запятую или длиннее 256 символов.  
  
 \- или -  
  
 Параметр <paramref name="passwordAnswer" /> равен пустой строке или длиннее 128 символов, а свойству <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> присвоено значение <see langword="true" />.  
  
 \- или -  
  
 Параметр <paramref name="passwordAnswer" /> длиннее 128 символов после кодирования.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="username" /> имеет значение <see langword="null" />.  
  
 \- или -  
  
 Свойство <paramref name="passwordAnswer" /> имеет значение <see langword="null" />; свойство <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> имеет значение <see langword="true" />.</exception>
        <exception cref="T:System.Exception">Произошло необработанное исключение.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnlockUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool UnlockUser(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Имя пользователя членства, для которого снимается блокировка.</param>
        <summary>Снимает блокировку пользователя, так что пользователь членства может быть проверен.</summary>
        <returns>
          Значение <see langword="true" />, если пользователь членства успешно разблокирован; в противном случае — значение <see langword="false" />. Значение <see langword="false" /> также возвращается, если пользователь не существует в базе данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пользователи чаще всего заблокирован и не могут быть проверены <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> метод при <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> превышено в <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>.  
  
 Начальные и конечные пробелы удаляются из значения параметра `username`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="username" /> равен пустой строке (""), содержит запятую или длиннее 256 символов.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="username" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">Объект <see cref="T:System.Web.Security.MembershipUser" />, который представляет пользователя для обновления и обновленную информацию для пользователя.</param>
        <summary>Обновляет информацию о пользователе в базе данных членства SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса, чтобы обновить информацию для пользователя в базе данных SQL Server, указанную в файле конфигурации приложения ASP.NET (Web.config). <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, <xref:System.Web.Security.MembershipUser.IsApproved%2A>, <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>, И <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> обновляются значения свойств для указанного пользователя членства.  
  
 Максимальная длина <xref:System.Web.Security.MembershipUser.UserName%2A> свойства составляет 256 символов. Максимальная длина <xref:System.Web.Security.MembershipUser.Email%2A> свойства составляет 256 символов.  
  
 Невозможно обновить пароль для авторизованного пользователя с помощью <xref:System.Web.Security.SqlMembershipProvider.UpdateUser%2A> метод. Чтобы обновить пароль для пользователя членства, используйте <xref:System.Web.Security.MembershipUser.ChangePassword%2A> метод <xref:System.Web.Security.MembershipUser> класса.  
  
   
  
## Examples  
 В следующем примере кода обновляется адрес электронной почты для пользователя.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="user" /> имеет значение <see langword="null" />.  
  
 \- или -  
  
 Свойство <see cref="P:System.Web.Security.MembershipUser.UserName" /> параметра <paramref name="user" /> равно <see langword="null" />.  
  
 \- или -  
  
 Свойству <see cref="P:System.Web.Security.MembershipUser.Email" /> объекта <paramref name="user" /> задано значение <see langword="null" />, и свойству <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> задано значение <see langword="true" />.</exception>
        <exception cref="T:System.ArgumentException">Свойство <see cref="P:System.Web.Security.MembershipUser.UserName" /> объекта <paramref name="user" /> представляет собой пустую строку (""), содержит запятую или длиннее 256 символов.  
  
 \- или -  
  
 Строка свойства <see cref="P:System.Web.Security.MembershipUser.Email" /> объекта <paramref name="user" /> длиннее 256 знаков.  
  
 \- или -  
  
 Свойство <see cref="P:System.Web.Security.MembershipUser.Email" /> объекта <paramref name="user" /> содержит пустую строку и свойству <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> задано значение <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Значение свойства <see cref="P:System.Web.Security.MembershipUser.UserName" /> объекта <paramref name="user" /> не найдено в базе данных.  
  
 \- или -  
  
 Свойство <see cref="P:System.Web.Security.MembershipUser.Email" /> объекта <paramref name="user" /> было равно существующему адресу электронной почты в базе данных, и свойству <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> задано значение "истина".  
  
 \- или -  
  
 Сбой обновления пользователя.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Имя пользователя для проверки.</param>
        <param name="password">Пароль заданного пользователя.</param>
        <summary>Проверяет существование указанных имени пользователя и пароля в базе данных членства SQL Server.</summary>
        <returns>
          Значение <see langword="true" />, если указанные имя пользователя и пароль действительны; в противном случае — значение <see langword="false" />. Значение <see langword="false" /> также возвращается, если пользователь не существует в базе данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса, чтобы проверить пользовательскую информацию для пользователя в базе данных SQL Server, указанную в файле конфигурации приложения ASP.NET (Web.config).  
  
 После успешной проверки пользователя, Дата последнего действия и последнего значения даты вход обновляются текущей даты и времени в базе данных.  
  
 Если передается неверный пароль <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> метод, то внутренний счетчик, отслеживает попыток ввода неверного пароля увеличивается на единицу. Это может привести к пользователю блокируемого и недоступен для войти в систему, пока не будет очищен состояние блокировки путем вызова <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> метод. Если предоставляется правильный пароль и пользователь является не заблокирован, то внутренние счетчики неправильный пароль, отслеживания и пытается контрольный ответ сбрасываются в нуль. Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> и <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> свойства.  
  
 Начальные и конечные пробелы удаляются из значений всех параметров.  
  
   
  
## Examples  
 В следующем примере кода показана страница входа в систему для приложения ASP.NET, настроен на использование проверки подлинности форм и <xref:System.Web.Security.SqlMembershipProvider>. Если учетные данные пользователя являются недопустимыми, сообщение отображается для пользователя. В противном случае пользователь перенаправляется на первоначально запрошенный URL-адрес с помощью <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> метод.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>