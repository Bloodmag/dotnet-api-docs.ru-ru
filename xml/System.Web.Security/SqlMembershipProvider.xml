<Type Name="SqlMembershipProvider" FullName="System.Web.Security.SqlMembershipProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c653fcd735b425b1a29ff05b8e411e9f2c59cc5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36397780" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlMembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlMembershipProvider&#xA;Inherits MembershipProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMembershipProvider : System::Web::Security::MembershipProvider" />
  <TypeSignature Language="F#" Value="type SqlMembershipProvider = class&#xA;    inherit MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages storage of membership information for an ASP.NET application in a SQL Server database.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс используется <xref:System.Web.Security.Membership> и <xref:System.Web.Security.MembershipUser> классов, чтобы предоставлять службы членства для приложения ASP.NET с помощью базы данных SQL Server. Нельзя использовать <xref:System.Web.Security.SqlMembershipProvider> без SQL Server. Если на компьютере установлен SQL Server Express с именем экземпляра по умолчанию установлен и включен, экземпляров пользователя <xref:System.Web.Security.SqlMembershipProvider> объекта создаст базу данных с именем `aspnetdb` в приложении `App_Data` directory первый время приложения При запуске.  
  
 Чтобы создать базу данных вручную, запустите `Aspnet_regsql.exe` найти исполняемый файл в `%systemroot%\Microsoft.NET\Framework\ versionNumber` папку и укажите `-A m` параметр (например `aspnet_regsql.exe -A m`). База данных, созданная называется Aspnetdb. Кроме того, запустите `Aspnet_regsql.exe` режим конфигурации графического интерфейса пользователя и выбрать настройку всех функций ASP.NET.  
  
 Если поставщик членства настроен со строкой соединения, которая использует встроенную безопасность, учетная запись процесса приложения ASP.NET должна иметь права на подключение к базе данных SQL Server.  
  
 Значение по умолчанию определяется в файле Machine.config <xref:System.Web.Security.SqlMembershipProvider> экземпляр с именем `AspNetSqlMembershipProvider` , подключается к экземпляру SQL Server Express по умолчанию на локальном компьютере. Если установлен экспресс-выпуска SQL Server с именем экземпляра по умолчанию или можно определить собственный экземпляр в файле Web.config для приложения ASP.NET, можно использовать этот экземпляр поставщика.  
  
 Если задать `passwordCompatMode` атрибут <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework40>, приложение может использовать хеширования и шифрования членства параметры, которые были добавлены в ASP.NET 4. Однако если `passwordCompatMode` атрибута задано значение <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>, параметры только хеширования и шифрования членства ASP.NET 2.0, ASP.NET 3.5 и используется ASP.NET 3.5 SP1. Значение по умолчанию — <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>. Дополнительные сведения см. в разделе <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>.  
  
   
  
## Examples  
 В следующем примере кода показан файл Web.config для приложения ASP.NET, настроен на использование <xref:System.Web.Security.SqlMembershipProvider>.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"  
      userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          maxInvalidPasswordAttempts="5"  
          passwordAttemptWindow="10" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Security.SqlMembershipProvider" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.%23ctor%2A> Конструктор вызывается ASP.NET, чтобы создать экземпляр <xref:System.Web.Security.SqlMembershipProvider> класса, указанное в конфигурации для приложения. Этот конструктор не предназначен для использования в коде.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application to store and retrieve membership information for.</summary>
        <value>Имя приложения, которые будут сохраняться и извлекаться сведения о членстве. Значение по умолчанию — <see cref="P:System.Web.HttpRequest.ApplicationPath" /> значение свойства для текущего <see cref="P:System.Web.HttpContext.Request" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> Используется <xref:System.Web.Security.SqlMembershipProvider> для группирования сведений пользователя. Уточнение информации пользователя с именем приложения, можно хранить информацию для нескольких приложений в одной базе данных без конфликтов между идентичными именами пользователей. Кроме того, несколько приложений ASP.NET могут использовать одну и ту же базу данных пользователя, указав то же значение в <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> свойство. <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> Свойства могут устанавливаться программными средствами, или он может быть задано декларативно в файле конфигурации для веб-приложения с `applicationName` атрибута.  
  
 Если значение не указано для `applicationName` атрибут в файле конфигурации для веб-приложения, то <xref:System.Web.HttpRequest.ApplicationPath%2A> используется значение свойства для первого запроса приложения.  
  
> [!CAUTION]
>  Так как экземпляр по умолчанию один используется для всех запросов, обслуживаемых <xref:System.Web.HttpApplication> объекта может быть несколько запросов, параллельном выполнении и выполняется настройка <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> значение свойства. <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> Свойство не является потокобезопасным для нескольких операций записи и изменение <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> значение свойства может привести к непредвиденному поведению для нескольких пользователей приложения. Рекомендуется, чтобы избежать написания кода, чтобы пользователи могли установить <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> свойство без крайней необходимости. Пример приложения там, где параметр <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> свойства, может потребоваться является административные приложения, в котором данные о членстве для нескольких приложений. Такое приложение должно быть Однопользовательское приложение и не веб-приложения.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Он указывает возвращаемое приложение <xref:System.Web.Security.SqlMembershipProvider> экземпляра и наборы <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> для `MyApplication`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> property to an empty string or <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> property to a string that is longer than 256 characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="override this.ChangePassword : string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePassword (username, oldPassword, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to update the password for.</param>
        <param name="oldPassword">The current password for the specified user.</param>
        <param name="newPassword">The new password for the specified user.</param>
        <summary>Modifies a user's password.</summary>
        <returns>
          <see langword="true" /> if the password was updated successfully. <see langword="false" /> if the supplied old password is invalid, the user is locked out, or the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса, чтобы обновить пароль для пользователя в базе данных SQL Server, указанную в файле конфигурации приложения ASP.NET (Web.config).  
  
 Максимальная длина пароля составляет 128 символов.  
  
 Если передается неверный пароль <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> метод, то внутренний счетчик, отслеживает попыток ввода неверного пароля увеличивается на единицу. Это может привести к пользователю блокируемого и недоступен для войти в систему, пока не будет очищен состояние блокировки путем вызова <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> метод. Если предоставляется правильный пароль и пользователь является не заблокирован, то внутренние счетчики неправильный пароль, отслеживания и пытается контрольный ответ сбрасываются в нуль. Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> и <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> свойства.  
  
 Можно вызвать <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> метод непосредственно, получив ссылку на <xref:System.Web.Security.SqlMembershipProvider> экземпляра <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. <xref:System.Web.Security.Membership.Provider%2A> Предоставляет свойство `defaultProvider` указан в файле Web.config для приложения. Настроенные поставщики, которые не являются поставщика по умолчанию, связанные с помощью <xref:System.Web.Security.Membership.Providers%2A> свойство.  
  
 Можно также изменить пароли пользователей с помощью <xref:System.Web.Security.MembershipUser.ChangePassword%2A> метод.  
  
 Начальные и конечные пробелы удаляются из значений всех параметров.  
  
   
  
## Examples  
 В следующем примере кода изменяется пароль для указанного пользователя.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordcs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="oldPassword" /> is an empty string or longer than 128 characters.  \- or -  <paramref name="newPassword" /> is an empty string or longer than 128 characters.  \- or -  The encoded version of <paramref name="newPassword" /> is greater than 128 characters.  \- or -  The change-password action was canceled by a subscriber to the <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> event, and the <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> property was <see langword="null" />.  \- or -  The length of <paramref name="newPassword" /> is less than the minimum length specified in the <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" /> property.  \- or -  The number of non-alphabetic characters in <paramref name="newPassword" /> is less than the required number of non-alphabetic characters specified in the <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" /> property.  \- or -  <paramref name="newPassword" /> does not pass the regular expression defined in the <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" /> property.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="oldPassword" /> is <see langword="null" />.  \- or -  <paramref name="newPassword" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="username" /> was not found in the database.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An error occurred while setting the new password value at the database.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ChangePasswordQuestionAndAnswer : string * string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePasswordQuestionAndAnswer (username, password, newPasswordQuestion, newPasswordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to change the password question and answer for.</param>
        <param name="password">The password for the specified user.</param>
        <param name="newPasswordQuestion">The new password question for the specified user.</param>
        <param name="newPasswordAnswer">The new password answer for the specified user.</param>
        <summary>Updates the password question and answer for a user in the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the update was successful; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the <paramref name="password" /> is incorrect, the user is locked out, or the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.MembershipUser> класса, чтобы обновить контрольный вопрос и ответ пользователя в базе данных SQL Server, который указан в файле конфигурации приложения ASP.NET (Web.config). Ответ пароля шифруется с использованием формата, который указан в <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> свойство.  
  
 Требование контрольного вопроса и ответа обеспечивает дополнительный уровень безопасности при извлечении или сбросе пароля пользователя. При создании имени пользователя, пользователи могут вводить вопрос и ответ, который позже может использоваться для извлечения или сброса забытого пароля. <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> Метод обновляет вопрос и ответ на вопрос для авторизованного пользователя.  
  
 Если передается неверный пароль <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> метод, внутренних счетчиков, что отслеживание попыток ввода неверного пароля увеличивается на единицу. Это может привести к пользователю блокируемого и недоступен для войти в систему, пока не будет очищен состояние блокировки путем вызова <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> метод. Если предоставляется правильный пароль и пользователь является не заблокирован, то внутренние счетчики неправильный пароль, отслеживания и пытается контрольный ответ сбрасываются в нуль. Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> и <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> свойства.  
  
 Максимальная длина контрольного вопроса пароля составляет 256 символов. Максимальная длина ответа пароля составляет 128 символов.  
  
 Дополнительные сведения см. в разделах <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>, <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> и <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  
  
 Начальные и конечные пробелы удаляются из значений всех параметров.  
  
   
  
## Examples  
 В следующем примере кода обновлений контрольный вопрос и ответ для пользователя.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordQuestioncs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordQuestionvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="password" /> is an empty string or is longer than 128 characters.  \- or -  <paramref name="newPasswordQuestion" /> is an empty string or is longer than 256 characters.  \- or -  <paramref name="newPasswordAnswer" /> is an empty string or is longer than 128 characters.  \- or -  The encoded version of <paramref name="newPasswordAnswer" /> is longer than 128 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="password" /> is <see langword="null" />.  \- or -  <paramref name="newPasswordQuestion" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="newPasswordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An error occurred when changing the password question and answer in the database.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="override this.CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <param name="email">The email address for the new user.</param>
        <param name="passwordQuestion">The password question for the new user.</param>
        <param name="passwordAnswer">The password answer for the new user.</param>
        <param name="isApproved">Whether or not the new user is approved to be validated.</param>
        <param name="providerUserKey">A <see cref="T:System.Guid" /> that uniquely identifies the membership user in the SQL Server database.</param>
        <param name="status">One of the <see cref="T:System.Web.Security.MembershipCreateStatus" /> values, indicating whether the user was created successfully.</param>
        <summary>Adds a new user to the SQL Server membership database.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user. If no user was created, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса, чтобы создать нового пользователя в базе данных SQL Server, указанной в файле конфигурации приложения ASP.NET.  
  
 Новые пользователи идентифицируются с помощью настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Если <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> свойству `true`, и `null` или пустая строка ("») указан для `email` параметра, не удастся создать пользователя. Создание пользователя также завершится ошибкой, если <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> свойству `true` и значения, указанного для `email` параметр является дубликатом адреса электронной почты для существующего пользователя в базе данных для настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Максимальная длина имени пользователя составляет 256 символов. Максимальная длина адреса электронной почты составляет 256 символов. Максимальная длина пароля открытым текстом или после хэширования или шифрования, составляет 128 символов.  
  
 Другие условия, которые приводят к сбою при создании пользователя:  
  
-   `password` Параметр `null`, или пустую строку после усечения.  
  
-   Длина `password` параметра меньше значения, указанного в <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> свойство.  
  
-   Число-неалфавитные символы в `password` параметра меньше значения, указанного в <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> свойство.  
  
-   `password` Параметра не проходит регулярное выражение в <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> свойство.  
  
-   Создание пользователя во время отмены кода пользовательской проверки пароля <xref:System.Web.Security.MembershipProvider.ValidatingPassword> событий.  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> Свойство `true` и `passwordAnswer` имеет значение `null` или пустую строку после усечения.  
  
-   `passwordAnswer` Параметра является пустая строка.  
  
-   `passwordAnswer` Параметр имеет длину более 128 символов.  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> Свойство `true` и контрольный вопрос `null` или пустую строку после усечения.  
  
-   `passwordQuestion` Параметра является пустая строка.  
  
-   `passwordQuestion` Параметр имеет длину более 256 символов.  
  
-   `providerUserKey` Параметр заданы для объекта типа, отличный от <xref:System.Guid?displayProperty=nameWithType>.  
  
-   `providerUserKey` Параметр является дубликатом существующего ключа пользователя.  
  
-   `username` Параметр является дубликатом существующего имени пользователя.  
  
 Начальные и конечные пробелы удаляются из значений всех строковых параметров.  
  
   
  
## Examples  
 В следующем примере кода создает нового пользователя для приложения ASP.NET, настроен на использование проверки подлинности форм и <xref:System.Web.Security.SqlMembershipProvider>. Если пользователь не создан успешно, отображается сообщение для пользователя. В противном случае пользователь перенаправляется на страницу входа для приложения.  
  
> [!NOTE]
>  В этом примере вызываются <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config с помощью <xref:System.Web.Security.Membership> класса. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="override this.DeleteUser : string * bool -&gt; bool" Usage="sqlMembershipProvider.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to delete.</param>
        <param name="deleteAllRelatedData">
          <see langword="true" /> to delete data related to the user from the database; <see langword="false" /> to leave data related to the user in the database.</param>
        <summary>Removes a user's membership information from the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the user was deleted; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса, чтобы удалить пользователя из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET.  
  
 Удаленные пользователи удаляется только из настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Если `deleteAllRelatedData` равно `true`, затем все данные пользователя хранятся в базе данных для <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, или <xref:System.Web.UI.WebControls.WebParts.WebPart> возможность индивидуальной настройки также удаляется для настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Если авторизованный пользователь не существует в базе данных, и `deleteAllRelatedData` — `true`, затем связанные данные и данные пользователя, сохраненные для <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, или <xref:System.Web.UI.WebControls.WebParts.WebPart> функции персонализации по-прежнему могут быть удалены для приложение, указанное в <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> свойство. В результате <xref:System.Web.Security.SqlMembershipProvider.DeleteUser%2A> метод можно использовать для быстрого удаления сведений, связанных с пользователем, даже если <xref:System.Web.Security.SqlMembershipProvider> объект не используется для хранения сведений о прошедших проверку подлинности пользователя.  
  
 Начальные и конечные пробелы удаляются из `username` значение параметра.  
  
   
  
## Examples  
 В следующем примере кода удаляет пользователя, выполнившего вход.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.SqlMembershipProvider> для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to allow users to reset their passwords.</summary>
        <value>Значение <see langword="true" />, если поставщик членства поддерживает сброс паролей; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сброс пароля позволяет поставщику членства заменить текущий пароль пароль для имени пользователя с новым, формируется случайным образом. Это особенно полезно при <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> свойству <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, как пользователи не смогут получить значения хэшированный пароль.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Он указывает возвращаемое приложение <xref:System.Web.Security.SqlMembershipProvider> сброса пароля экземпляра и позволяет.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to allow users to retrieve their passwords.</summary>
        <value>
          <see langword="true" /> Если поставщик членства поддерживает восстановление паролей. в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> свойству <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, пользователь не сможет получить свой существующий пароль из базы данных. <xref:System.Web.Security.MembershipPasswordFormat.Hashed> Формат пароля обеспечивает одностороннего кодирование значений паролей. Пароли хэшируются с произвольно создаваемого случайного значения и сравниваются со значениями, сохраненными в базе данных для проверки подлинности. Хэшированные значения не может быть без кодировки для получения исходное значение пароля.  
  
 Если <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> свойству <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, и <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> равно `true`, <xref:System.Configuration.Provider.ProviderException> вызывается при инициализации поставщика.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Он указывает возвращаемое приложение <xref:System.Web.Security.SqlMembershipProvider> экземпляра и разрешает получение пароля.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">The email address to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of matched users.</param>
        <summary>Returns a collection of membership users for which the email address field contains the specified email address.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> Возвращает список авторизованных пользователей, в которых адрес электронной почты содержит совпадают с указанным `emailToMatch` для настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Ищет имя пользователя, которое соответствует `emailToMatch` значение параметра, используя предложения LIKE. Подстановочные знаки SQL Server могут быть включены в значении параметра. Например если `emailToMatch` параметр имеет значение «address@example.com», затем сведения для пользователей с адресом электронной почты "address@example.com" возвращается, если он существует. Если `emailToMatch` параметр имеет значение «%@example.com», затем сведения для пользователей с адресом электронной почты "address@example.com«,»address2@example.com«,»admin@example.com» и так далее возвращается.  
  
 Результаты, возвращенные <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> , ограничиваются `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Security.MembershipUser> объектов, включаемых в <xref:System.Web.Security.MembershipUserCollection>. `pageIndex` Определяет страницу результатов, причем нуль указывает первую страницу. `totalRecords` Параметр `out` задается общее число авторизованных пользователей для настроенного `applicationName`. Например, если имеется 13 пользователей для настроенного `applicationName`и `pageIndex` присвоено значение 1 `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection> возвращается будет содержать с шестого до десятого пользователей. `totalRecords` Параметр должен быть установлен до 13.  
  
 Начальные и конечные пробелы удаляются из `emailToMatch` значение параметра.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> метод для извлечения сведений о членстве пользователя и отображает результаты в страницах данных.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emailToMatch" /> is longer than 256 characters.  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">The user name to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains the total number of matched users.</param>
        <summary>Gets a collection of membership users where the user name contains the specified user name to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> Возвращает список авторизованных пользователей, для которых имя пользователя содержит сопоставление с предоставленной `usernameToMatch` для настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Ищет имя пользователя, которое соответствует `usernameToMatch` значение параметра, используя предложения LIKE. Подстановочные знаки SQL Server могут быть включены со значением параметра. Например если `usernameToMatch` параметр имеет значение «user1», то возвращаются сведения о пользователе для пользователя с именем пользователя «user1», если он существует. Если `usernameToMatch` параметр имеет значение «user %», а затем сведения для пользователей с именем пользователя «user1», «user2», «user_admin» и возвращаются т. д.  
  
 Результаты, возвращенные <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> , ограничиваются `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Security.MembershipUser> объектов, включаемых в <xref:System.Web.Security.MembershipUserCollection>. `pageIndex` Определяет страницу результатов, причем нуль указывает первую страницу. `totalRecords` Параметр `out` задается общее число авторизованных пользователей для настроенного `applicationName`. Например, если имеется 13 пользователей для настроенного `applicationName`и `pageIndex` присвоено значение 1 `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection> возвращается будет содержать с шестого до десятого пользователей. `totalRecords` Параметр должен быть установлен до 13.  
  
 Начальные и конечные пробелы удаляются из `usernameToMatch` значение параметра.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> метод для извлечения сведений о членстве пользователя и отображает результаты в страницах данных.  
  
> [!NOTE]
>  Этот пример использует System.Web.Security.SqlMembershipProvider для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("") or is longer than 256 characters.  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GeneratePassword" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GeneratePassword () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GeneratePassword();" />
      <MemberSignature Language="F#" Value="abstract member GeneratePassword : unit -&gt; string&#xA;override this.GeneratePassword : unit -&gt; string" Usage="sqlMembershipProvider.GeneratePassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates a random password that is at least 14 characters long.</summary>
        <returns>A random password that is at least 14 characters long.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership> Класс предоставляет <xref:System.Web.Security.Membership.GeneratePassword%2A> метод, который создает пароль указанного размера с по крайней мере указанное количество небуквенных символов. <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> Метод <xref:System.Web.Security.SqlMembershipProvider> вызовы <xref:System.Web.Security.Membership.GeneratePassword%2A> метод <xref:System.Web.Security.Membership> класса для извлечения случайный пароль длиной не менее 14 символов. Если <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> больше, чем 14, возвращаемый пароль будет использоваться длина, указанная в <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> свойство.  
  
 В частности, можно вызвать <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> метод с помощью ссылки на <xref:System.Web.Security.SqlMembershipProvider> класса непосредственно из <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса.  
  
 Созданный пароль должен содержать только буквы, цифры и следующие знаки пунктуации: `!@#$%^&*()_-+=[{]};:<>|./?`. Не управления скрытые или непечатаемые символы, включенные в созданном пароле.  
  
> [!NOTE]
>  Случайный пароль, созданные <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> метода не обязательно передать регулярное выражение в <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> свойство. Однако случайный пароль будет соответствовать условиям, заданным <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> и <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> свойства.  
  
   
  
## Examples  
 В следующем примере кода создает случайный пароль 10 символов.  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GeneratePasswordcs.aspx#9)]
 [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GeneratePasswordvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of users.</param>
        <summary>Gets a collection of all the users in the SQL Server membership database.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> of <see cref="T:System.Web.Security.MembershipUser" /> objects representing all the users in the database for the configured <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса для получения сведений о пользователе из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
 Результаты, возвращенные <xref:System.Web.Security.SqlMembershipProvider.GetAllUsers%2A> , ограничиваются `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Security.MembershipUser> объектов, включаемых в <xref:System.Web.Security.MembershipUserCollection>. `pageIndex` Определяет страницу результатов, причем нуль указывает первую страницу. `totalRecords` Параметр `out` задается общее число авторизованных пользователей для настроенного `applicationName`. Например, если имеется 13 пользователей для настроенного `applicationName`и `pageIndex` присвоено значение 1 `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection> возвращается будет содержать с шестого до десятого пользователей. `totalRecords` Параметр должен быть установлен до 13.  
  
   
  
## Examples  
 В следующем примере кода возвращает список пользователей на страницах данных с указанием числа пользователей в интерактивном режиме.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="override this.GetNumberOfUsersOnline : unit -&gt; int" Usage="sqlMembershipProvider.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of users currently accessing the application.</summary>
        <returns>The number of users currently accessing the application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса для извлечения количество пользователей, считается в оперативном режиме, из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Возвращает число пользователей, которых действие Дата и время последнего больше, чем текущая дата и время меньше значения текущего приложения <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> свойство в минутах.  
  
 Только пользователи, связанные с настроенным <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> учитываются.  
  
   
  
## Examples  
 Следующий пример кода возвращает список пользователей и число пользователей в интерактивном режиме.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.GetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.GetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to retrieve the password for.</param>
        <param name="passwordAnswer">The password answer for the user.</param>
        <summary>Returns the password for the specified user name from the SQL Server membership database.</summary>
        <returns>The password for the specified user name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.MembershipUser> класса для извлечения пароля для пользователя из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
 Если ответ неправильный пароль, предоставленный для <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> метод, то внутренний счетчик, отслеживает попыток ввода пароля увеличивается на единицу. Это может привести к пользователю блокируемого и недоступен для войти в систему, пока не будет очищен состояние блокировки путем вызова <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> метод. Если ответ правильный пароль, а пользователь имеет не заблокирован, то внутренний счетчик, который отслеживает попытки ввода пароля будет сброшено в ноль. Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> и <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> свойства.  
  
 Можно вызвать <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> метод непосредственно, получив ссылку на <xref:System.Web.Security.SqlMembershipProvider> экземпляра <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса.  
  
 Если <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> свойству <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> метод не может получить пароль. Хэшированные пароли шифруются однонаправленно и не может быть расшифрован. Если <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> свойству <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, и <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> равно `true`, <xref:System.Configuration.Provider.ProviderException> вызывается при инициализации поставщика.  
  
 Начальные и конечные пробелы удаляются из значений всех параметров.  
  
   
  
## Examples  
 В следующем примере кода извлекается пароль для указанного имени пользователя и отправляет его пользователю в сообщении электронной почты.  
  
> [!NOTE]
>  Возврат паролей в виде открытого текста с помощью электронной почты для сайтов, требующих высокого уровня безопасности не рекомендуется. Для узлов с высоким уровнем безопасности рекомендуется возвращать пароль с использованием шифрования, например SSL.  
  
> [!NOTE]
>  В этом примере вызываются <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config с помощью <xref:System.Web.Security.Membership> класса. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> is invalid.  \- or -  The membership user identified by <paramref name="username" /> is locked out.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" /> is set to <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> is not found in the membership database.  \- or -  An error occurred while retrieving the password from the database.</exception>
        <exception cref="T:System.ArgumentException">One of the parameter values exceeds the maximum allowed length.  \- or -  <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="passwordAnswer" /> is an empty string and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="passwordAnswer" /> is greater than 128 characters.  \- or -  The encoded version of <paramref name="passwordAnswer" /> is greater than 128 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="passwordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the information for a membership user from the data source.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">The unique identifier for the user.</param>
        <param name="userIsOnline">
          <see langword="true" /> to update the last-activity date/time stamp for the specified user; otherwise, <see langword="false" />.</param>
        <summary>Gets the information from the data source for the membership user associated with the specified unique identifier and updates the last activity date/time stamp for the user, if specified.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the user associated with the specified unique identifier. If no user is found in the database for the specified <paramref name="providerUserKey" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Получение сведений о пользователе из источника данных и создание <xref:System.Web.Security.MembershipUser> заполненный возвращаемых данных. Пользователь идентифицируется с помощью уникального идентификатора, указанного с помощью `providerUserKey` параметра.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerUserKey" /> is not of type <see cref="T:System.Guid" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to get information for.</param>
        <param name="userIsOnline">
          <see langword="true" /> to update the last activity date/time stamp for the user; <see langword="false" /> to return user information without updating the last activity date/time stamp for the user.</param>
        <summary>Returns information from the SQL Server membership database for a user and provides an option to update the last activity date/time stamp for the user.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the specified user. If no user is found in the database for the specified <paramref name="username" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса для получения сведений о пользователе из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
 Если `userIsOnline` — `true`, отметка даты и времени последнего действия пользователя обновляется до текущей даты и времени. Это отражено в <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> и <xref:System.Web.Security.MembershipUser.IsOnline%2A> свойства и значения, возвращенного <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>.  
  
 Начальные и конечные пробелы удаляются из `username` значение параметра.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.SqlMembershipProvider.GetUser%2A> метод, чтобы определить, существует ли пользователь, прежде чем получить пароль для пользователя.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> exceeds 256 characters.  \- or -  <paramref name="username" /> contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberSignature Language="F#" Value="override this.GetUserNameByEmail : string -&gt; string" Usage="sqlMembershipProvider.GetUserNameByEmail email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">The email address to search for.</param>
        <summary>Gets the user name associated with the specified email address.</summary>
        <returns>The user name associated with the specified email address. If no match is found, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса с адресом электронной почты, который используется для получения связанного имени пользователя из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
 Если более одного пользователя в базе данных членства имеют один и тот же адрес электронной почты, возвращается первое обнаруженное имя пользователя. Можно задать `requiresUniqueEmail` атрибут `true` в файле конфигурации приложения, чтобы убедиться, что все сообщения электронной почты адрес базы данных является уникальным.  
  
 Начальные и конечные пробелы удаляются из `email` значение параметра.  
  
   
  
## Examples  
 В следующем примере кода извлекается имя пользователя для указанный адрес электронной почты.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> exceeds 256 characters.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">More than one user with the same email address exists in the database and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlMembershipProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Security.SqlMembershipProvider" /> instance to initialize.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the names and values of configuration options for the membership provider.</param>
        <summary>Initializes the SQL Server membership provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод инициализирует <xref:System.Web.Security.SqlMembershipProvider> со свойством значения, указанные в файле конфигурации приложения ASP.NET (Web.config) и не предназначен для использования непосредственно из программного кода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="enablePasswordRetrieval" />, <see langword="enablePasswordReset" />, <see langword="requiresQuestionAndAnswer" />, or <see langword="requiresUniqueEmail" /> attribute is set to a value other than a <see langword="Boolean" />.  \- or -  The <see langword="maxInvalidPasswordAttempts" /> or the <see langword="passwordAttemptWindow" /> attribute is set to a value other than a positive integer.  \- or -  The <see langword="minRequiredPasswordLength" /> attribute is set to a value other than a positive integer, or the value is greater than 128.  \- or -  The <see langword="minRequiredNonalphanumericCharacters" /> attribute is set to a value other than zero or a positive integer, or the value is greater than 128.  \- or -  The value for the <see langword="passwordStrengthRegularExpression" /> attribute is not a valid regular expression.  \- or -  The <see langword="applicationName" /> attribute is set to a value that is greater than 256 characters.  \- or -  The <see langword="passwordFormat" /> attribute specified in the application configuration file is an invalid <see cref="T:System.Web.Security.MembershipPasswordFormat" /> enumeration.  \- or -  The <see langword="passwordFormat" /> attribute is set to <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" /> and the <see langword="enablePasswordRetrieval" /> attribute is set to <see langword="true" /> in the application configuration.  \- or -  The <see langword="passwordFormat" /> attribute is set to <see langword="Encrypted" /> and the  configuration element specifies <see langword="AutoGenerate" /> for the <see langword="decryptionKey" /> attribute.  \- or -  The <see langword="connectionStringName" /> attribute is empty or does not exist in the application configuration.  \- or -  The value of the connection string for the <see langword="connectionStringName" /> attribute value is empty, or the specified <see langword="connectionStringName" /> does not exist in the application configuration file.  \- or -  The value for the <see langword="commandTimeout" /> attribute is set to a value other than zero or a positive integer.  \- or -  The application configuration file for this <see cref="T:System.Web.Security.SqlMembershipProvider" /> instance contains an unrecognized attribute.</exception>
        <exception cref="T:System.Web.HttpException">The current trust level is less than <see langword="Low" />.</exception>
        <exception cref="T:System.InvalidOperationException">The provider has already been initialized prior to the current call to the <see cref="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> method.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.</summary>
        <value>Количество попыток ввода недействительного пароля или контрольного ответа, по достижении которого авторизованный пользователь блокируется.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Работает в сочетании с <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> защититься от нежелательного источника подбора пароля или контрольного ответа для авторизованного пользователя посредством повторяющихся попыток. Если количество ввода недействительных пароля или контрольного ответа для авторизованного пользователя больше или равно значению <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> свойство в пределах количества минут, определяемого значением <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> свойства, а затем авторизованного пользователя блокируется, задав <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> свойства `true` пока пользователь разблокируется с <xref:System.Web.Security.MembershipUser.UnlockUser%2A> метод. Если указан неверный пароль перед <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> при достижении значения, счетчики, отслеживающие число попыток ввода неправильного пароля и контрольного ответа, сбрасываются в нуль. Если ответ правильный пароль для пароля до <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> при достижении значения, счетчик, который отслеживает количество попыток ввода пароля будет сброшено в ноль.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Отслеживает количество попыток ввода неверного пароля и контрольного ответа попыток отдельно. Недопустимый пароль попыток результат в только значения счетчика попытки ввода пароля. Контрольного ответа попыток результат в только значения счетчика ответ пароль.  
  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Значение свойства задается в конфигурации приложения с помощью `maxInvalidPasswordAttempts` атрибут раздела конфигурации.  
  
 Если <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> свойству `false`, попыток ввода пароля не отслеживаются.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> и задает `maxInvalidPasswordAttempts` равным пяти попыток и `passwordAttemptWindow` до 30 минут.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum number of special characters that must be present in a valid password.</summary>
        <value>Минимальное количество специальных символов, которые должны присутствовать в допустимом пароле.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> Свойство возвращает минимальное число специальных, неалфавитных символов, которое необходимо ввести правильный пароль для создания <xref:System.Web.Security.SqlMembershipProvider> объекта.  
  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> Значение свойства задается в конфигурации приложения с помощью `minRequiredNonalphanumericCharacters` атрибут [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации.  
  
 Не алфавитно-цифровой символ является символ, для которого <xref:System.Char.IsLetterOrDigit%2A> возвращает `false`.  
  
   
  
## Examples  
 В следующем примере показан [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации в `system.web` раздел файла Web.config приложения. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> класс для реализации службы членства и наборы `minRequiredNonalphanumericCharacters` атрибут один символ.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonalphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum length required for a password.</summary>
        <value>Минимальная длина пароля.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> Получает минимальное количество символов, которое необходимо ввести правильный пароль для создания <xref:System.Web.Security.SqlMembershipProvider> объекта.  
  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> Значение свойства задается в конфигурации приложения с помощью `minRequiredPasswordLength` атрибут [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации.  
  
   
  
## Examples  
 В следующем примере показан [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации в `system.web` раздел файла Web.config приложения. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> класс для реализации службы членства и наборы `minRequiredPasswordLength` атрибут семь символов.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
    <providers>  
      <add  
        name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        minRequiredPasswordLength="7"  
        />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time window between which consecutive failed attempts to provide a valid password or password answers are tracked.</summary>
        <value>Интервал времени в минутах, в течение которого последовательных неудачных попыток ввода пароля или контрольного ответа отслеживаются. Значение по умолчанию — 10 минут. Если интервал между текущей неудачной попытки и последней неудачной попытки больше <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" /> установка, свойства каждой неудачной попытки рассматривается, как если бы это был первый неудачной попытки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> Свойство работает совместно с <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> защиту от нежелательного источника подбора пароля или контрольного ответа для авторизованного пользователя через свойства повторных попыток. Если пользователей пытаются вход, изменить свой пароль или сброса пароля, только определенные число последовательных попыток допустимы в течение указанного интервала времени. Продолжительность периода времени задается <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> свойство, которое определяет количество минут между попытками недопустимый. Если количество последовательных неудачных попыток, которые пользователь вносит в сбросить его или ее пароль имеет значение, хранящееся в <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> свойство и время, истекшее с момента последней попытки недопустимый меньше, чем время в минутах, указанный для <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> свойства, а затем авторизованный пользователь блокируется, задав <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> свойства `true`. Можно разблокировать пользователя путем вызова <xref:System.Web.Security.MembershipUser.UnlockUser%2A> метод. Если интервал между текущей неудачной попытки и последней неудачной попытки больше <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> задания, свойств, текущего Недопустимая попытка считается первый. Если ответ правильный пароль предоставляется достигнуто максимальное количество разрешенных попыток, количество попыток ввода пароля равно нулю. Если указан неверный пароль до максимальное количество разрешенных попыток достигается, количество попыток ввода неверного пароля и контрольного ответа, присваивается значение ноль.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Отслеживает число попыток ввода неверного пароля и контрольного ответа попыток отдельно. Недопустимый пароль попыток результат в только значения счетчика попытки ввода пароля. Контрольного ответа попыток результат в только значения счетчика ответ пароль.  
  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Значение свойства задается в конфигурации приложения с помощью `passwordAttemptWindow` атрибут раздела конфигурации.  
  
 Если <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> свойству `false`, попыток ввода пароля не отслеживаются.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> и задает `maxInvalidPasswordAttempts` равным пяти попыток и `passwordAttemptWindow` до 30 минут.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordFormat : System.Web.Security.MembershipPasswordFormat" Usage="System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating the format for storing passwords in the SQL Server membership database.</summary>
        <value>Одно из значений <see cref="T:System.Web.Security.MembershipPasswordFormat" />, указывающее формат хранения паролей в базе данных SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте `Hashed` только `Clear` и `Encrypted` не являются безопасными. `Hashed` пароли хэшируются с помощью одностороннего алгоритма хеширования и произвольно создаваемого случайного значения при сохранении в базе данных. Когда проверяется пароль, он хэшируется с начальным значением в базе данных для проверки. Хешированные пароли нельзя восстановить. `Encrypted` пароли не считаются безопасными, как нарушения безопасности, отображающую содержимое вашего базы данных может предоставить ключ шифрования. Это означает, что зашифрованные пароли может быть расшифрован и представлены.  
  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> Значение указано в разделе файла Web.config для приложения ASP.NET.  
  
 `Encrypted` и `Hashed` хэшируются по умолчанию на основе сведений, предоставленных в элемент в конфигурации или зашифрованные пароли. Обратите внимание, что если указать значение `3DES` для `validation` атрибут, или если значение не указано, хэшированные пароли хэшируется с помощью <xref:System.Security.Cryptography.SHA1> алгоритма.  
  
 Пользовательские хэш-алгоритм, можно определить при помощи `hashAlgorithmType` атрибут [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации. При выборе шифрования используется по умолчанию пароль шифрования AES. Можно изменить алгоритм шифрования, задав `decryption` атрибута элемента конфигурации. При шифровании паролей, необходимо указать явное значение `decryptionKey` атрибута в элементе. Значение по умолчанию `AutoGenerate` для `decryptionKey` атрибут не поддерживается, если с помощью зашифрованных паролей с помощью членства ASP.NET.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Он указывает возвращаемое приложение <xref:System.Web.Security.SqlMembershipProvider> экземпляра и присваивает его формат пароля `Hashed`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the regular expression used to evaluate a password.</summary>
        <value>Регулярное выражение, используемое для обработки пароля.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> Свойство получает регулярное выражение, используемое для оценки сложности пароля для <xref:System.Web.Security.SqlMembershipProvider> объекта.  
  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Свойство задается в конфигурации приложения с помощью `passwordStrengthRegularExpression` атрибут [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации.  
  
   
  
## Examples  
 В следующем примере показан [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации в `system.web` раздел файла Web.config приложения. Указывает, что приложение будет использовать экземпляр <xref:System.Web.Security.SqlMembershipProvider> класс для реализации службы членства и наборы `passwordStrengthRegularExpression` атрибут регулярное выражение, которое проверяет, что пароль отвечает следующим требованиям:  
  
-   Составляет по крайней мере 8 символов.  
  
-   Содержит по крайней мере одну цифру.  
  
-   Содержит по крайней мере один специальный символ (не алфавитно-цифрового).  
  
 Если пароль не удовлетворяют этим критериям, пароль не принимается поставщиком членства.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to require the user to answer a password question for password reset and retrieval.</summary>
        <value>
          <see langword="true" /> Если ответ-пароль необходим для сброса и извлечения; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Требование контрольного вопроса и ответа обеспечивает дополнительный уровень безопасности при извлечении или сбросе пароля пользователя. При создании имени пользователя, пользователи могут вводить вопрос и ответ, который позже может использоваться для извлечения или сброса забытого пароля. Если <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A> свойство и <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> свойство находятся `false`, значение <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> свойства имеют значения.  
  
 Дополнительные сведения см. в разделах <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> и <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  
  
   
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Он указывает возвращаемое приложение <xref:System.Web.Security.SqlMembershipProvider> экземпляра и настраивает его требуется ответ-пароль для сброса пароля или получение.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueEmail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueEmail : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to require a unique email address for each user name.</summary>
        <value>
          <see langword="true" /> Если поставщик членства требует уникальный адрес. в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показан элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Он указывает <xref:System.Web.Security.SqlMembershipProvider> экземпляра и настраивает его требуется уникальный адрес для каждого имени пользователя.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      requiresUniqueEmail="true"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ResetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.ResetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to reset the password for.</param>
        <param name="passwordAnswer">The password answer for the specified user.</param>
        <summary>Resets a user's password to a new, automatically generated password.</summary>
        <returns>The new password for the specified user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса для сброса пароля для пользователя в базе данных SQL Server, указанный в файле конфигурации приложения ASP.NET (Web.config) в новый формируется случайным образом значение. Возвращается новый пароль.  
  
> [!NOTE]
>  Случайный пароль, созданные <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> метода не обязательно передать регулярное выражение в <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> свойство. Однако случайный пароль будет соответствовать условиям, заданным <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> и <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> свойства.  
  
 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> Метод большинства часто используемых при <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> свойству `Hashed`. Если пользователь забыл пароль, который хэшируется, невозможно извлечь пароль. Однако поставщик можно сбросить пароль на новый, автоматически сгенерированный пароль, если пользователь предоставляет ответ правильный пароль.  
  
 Если ответ неправильный пароль, предоставленный для <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> метод, то внутренний счетчик, отслеживает попыток ввода неверного пароля увеличивается на единицу. Это может привести к пользователю блокируемого и недоступен для войти в систему, пока не будет очищен состояние блокировки путем вызова <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> метод. Если ответ правильный пароль, а пользователь имеет не заблокирован, то внутренний счетчик, который отслеживает попытки ввода пароля будет сброшено в ноль. Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> и <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> свойства.  
  
 Можно вызвать <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> метод непосредственно, получив ссылку на <xref:System.Web.Security.SqlMembershipProvider> экземпляра из <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Созданный пароль будет менее 14 символов или длина указанного в <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> свойство и будет содержать число не буквенно-цифровых символов, указанных в <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> свойство. Пароль не обязательно передать регулярное выражение, содержащееся в <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> свойства, если он указан.  
  
 Начальные и конечные пробелы удаляются из значений всех параметров.  
  
   
  
## Examples  
 В следующем примере кода сбрасывает пароль пользователя и возвращает новый, автоматически сгенерированный пароль.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> is invalid.  \- or -  The user account is currently locked.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" /> is set to <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> is not found in the membership database.  \- or -  The change password action was canceled by a subscriber to the <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> event and the <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> property was <see langword="null" />.  \- or -  An error occurred while retrieving the password from the database.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="passwordAnswer" /> is an empty string, or is longer than 128 characters, and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="passwordAnswer" /> is longer than 128 characters after encoding.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="passwordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnlockUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool UnlockUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.UnlockUser : string -&gt; bool" Usage="sqlMembershipProvider.UnlockUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the membership user to clear the locked-out status for.</param>
        <summary>Clears the user's locked-out status so that the membership user can be validated.</summary>
        <returns>
          <see langword="true" /> if the membership user was successfully unlocked; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пользователи чаще всего заблокирован и не могут быть проверены <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> метод при <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> превышено в <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>.  
  
 Начальные и конечные пробелы удаляются из `username` значение параметра.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string, is longer than 256 characters, or contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="override this.UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="sqlMembershipProvider.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> object that represents the user to update and the updated information for the user.</param>
        <summary>Updates information about a user in the SQL Server membership database.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса, чтобы обновить информацию для пользователя в базе данных SQL Server, указанную в файле конфигурации приложения ASP.NET (Web.config). <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, <xref:System.Web.Security.MembershipUser.IsApproved%2A>, <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>, И <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> обновляются значения свойств для указанного пользователя членства.  
  
 Максимальная длина <xref:System.Web.Security.MembershipUser.UserName%2A> свойства составляет 256 символов. Максимальная длина <xref:System.Web.Security.MembershipUser.Email%2A> свойства составляет 256 символов.  
  
 Невозможно обновить пароль для авторизованного пользователя с помощью <xref:System.Web.Security.SqlMembershipProvider.UpdateUser%2A> метод. Чтобы обновить пароль для пользователя членства, используйте <xref:System.Web.Security.MembershipUser.ChangePassword%2A> метод <xref:System.Web.Security.MembershipUser> класса.  
  
   
  
## Examples  
 В следующем примере кода обновляется адрес электронной почты для пользователя.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> is <see langword="null" />.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> is <see langword="null" />.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to <see langword="true" />.</exception>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is longer than 256 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is an empty string and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> was not found in the database.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> was equal to an existing email address in the database and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to true.  \- or -  The user update failed.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.ValidateUser : string * string -&gt; bool" Usage="sqlMembershipProvider.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to validate.</param>
        <param name="password">The password for the specified user.</param>
        <summary>Verifies that the specified user name and password exist in the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the specified username and password are valid; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом <xref:System.Web.Security.Membership> класса, чтобы проверить пользовательскую информацию для пользователя в базе данных SQL Server, указанную в файле конфигурации приложения ASP.NET (Web.config).  
  
 После успешной проверки пользователя, Дата последнего действия и последнего значения даты вход обновляются текущей даты и времени в базе данных.  
  
 Если передается неверный пароль <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> метод, то внутренний счетчик, отслеживает попыток ввода неверного пароля увеличивается на единицу. Это может привести к пользователю блокируемого и недоступен для войти в систему, пока не будет очищен состояние блокировки путем вызова <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> метод. Если предоставляется правильный пароль и пользователь является не заблокирован, то внутренние счетчики неправильный пароль, отслеживания и пытается контрольный ответ сбрасываются в нуль. Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> и <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> свойства.  
  
 Начальные и конечные пробелы удаляются из значений всех параметров.  
  
   
  
## Examples  
 В следующем примере кода показана страница входа в систему для приложения ASP.NET, настроен на использование проверки подлинности форм и <xref:System.Web.Security.SqlMembershipProvider>. Если учетные данные пользователя являются недопустимыми, сообщение отображается для пользователя. В противном случае пользователь перенаправляется на первоначально запрошенный URL-адрес с помощью <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> метод.  
  
> [!NOTE]
>  В этом примере используется <xref:System.Web.Security.Membership> класса для вызова <xref:System.Web.Security.SqlMembershipProvider> указанный в виде `defaultProvider` в файле Web.config. Если необходимо получить доступ к поставщику по умолчанию в качестве типа <xref:System.Web.Security.SqlMembershipProvider>, можно привести <xref:System.Web.Security.Membership.Provider%2A> свойство <xref:System.Web.Security.Membership> класса. Для доступа к другой настроенные поставщики как тип конкретного поставщика, могли обращаться к ним по имени, настроенных с <xref:System.Web.Security.Membership.Providers%2A> свойство <xref:System.Web.Security.Membership> класса и преобразовать их в тип конкретного поставщика.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>