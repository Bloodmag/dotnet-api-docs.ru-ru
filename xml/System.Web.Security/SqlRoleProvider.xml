<Type Name="SqlRoleProvider" FullName="System.Web.Security.SqlRoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="942210b309e564a76951dc1e28382e481877d7b2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550328" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlRoleProvider : System::Web::Security::RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Управляет хранилищем сведений о членстве роли для приложения ASP.NET в базе данных SQL Server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс используется <xref:System.Web.Security.Roles> и <xref:System.Web.Security.RolePrincipal> классы, обеспечивающие управление ролями служб для приложения ASP.NET с помощью базы данных SQL Server. Управление ролями можно использовать для определения различных уровней авторизации для приложения.  
  
 Для использования <xref:System.Web.Security.SqlRoleProvider> класса, необходимо сначала создать базы данных SQL Server, используемой <xref:System.Web.Security.SqlRoleProvider>. Для создания базы данных, используемой <xref:System.Web.Security.SqlRoleProvider> выполнения класса `aspnet_regsql.exe` найти исполняемый файл в C:\WINDOWS\Microsoft.NET\Framework\ `versionNumber` папку и укажите `-Ar` параметр (например, `aspnet_regsql.exe -Ar`). База данных, созданная называется Aspnetdb. Кроме того запустите aspnet_regsql.exe запрашивать режим конфигурации графического пользовательского интерфейса и выберите настройку всех функций ASP.NET.  
  
 Если поставщик роли настроен со строкой соединения, которая использует встроенную безопасность, учетная запись процесса приложения ASP.NET необходимо иметь права на подключение к базе данных SQL Server.  
  
 В файле Machine.config настраивается с <xref:System.Web.Security.SqlRoleProvider> экземпляр с именем AspNetSqlProvider, который подключается к SQL Server на локальном компьютере. Можно использовать этот экземпляр поставщика или указать собственный в файле Web.config для приложения ASP.NET. Чтобы использовать экземпляр AspNetSqlProvider, укажите AspNetSqlProvider как `defaultProvider` в конфигурации.  
  
 Можно настроить <xref:System.Web.Security.SqlRoleProvider> использовать те же сведения базы данных и пользователя, как <xref:System.Web.Security.SqlMembershipProvider> для использования одной базы данных сведения проверки подлинности и авторизации. Чтобы использовать ту же базу данных для членства и сведения о ролях, запустите программу aspnet_regsql.exe и установите функцию членства. Укажите ту же строку подключения в конфигурации как для вашего <xref:System.Web.Security.SqlRoleProvider> и <xref:System.Web.Security.SqlMembershipProvider> экземпляры. Также убедитесь, что оба экземпляра поставщика настроено с тем же <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>.  
  
   
  
## Examples  
 В следующем примере показано файл Web.config для приложения ASP.NET, настроен на использование <xref:System.Web.Security.SqlRoleProvider> объекта и <xref:System.Web.Security.SqlMembershipProvider>. Элемент настраивается к разрешил доступ только к прошедшим проверку пользователям в роли "Администраторы".  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="logincs.aspx"  
      name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
         <allow roles="Administrators" />  
         <deny users="*" />  
    </authorization>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="false"  
          requiresQuestionAndAnswer="false"   
          passwordFormat="Hashed"   
          applicationName="SampleApplication" />  
      </providers>  
    </membership>  
    <roleManager defaultProvider="SqlProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="true"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <add  
          name="SqlProvider"  
          type="System.Web.Security.SqlRoleProvider"  
          connectionStringName="SqlServices"   
          applicationName="SampleApplication" />  
      </providers>  
    </roleManager>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Создает экземпляр класса <see cref="T:System.Web.Security.SqlRoleProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.%23ctor%2A> Конструктор вызывается ASP.NET, чтобы создать экземпляр <xref:System.Web.Security.SqlRoleProvider> класса, указанное в конфигурации для приложения. Этот конструктор не предназначен для использования в коде.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Массив строк имен пользователей для добавления в указанные роли.</param>
        <param name="roleNames">Массив строк имен ролей, в который добавляются указанные имена пользователей.</param>
        <summary>Добавляет указанные имена пользователей в каждую из указанных ролей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> Метод вызывается методом <xref:System.Web.Security.Roles> класса для связывания одного или нескольких пользователей с одной или нескольких ролей в базе данных SQL Server, указанную в файле конфигурации приложения ASP.NET (Web.config). Этот метод вызывается методом <xref:System.Web.Security.Roles.AddUserToRole%2A>, <xref:System.Web.Security.Roles.AddUserToRoles%2A>, <xref:System.Web.Security.Roles.AddUsersToRole%2A>, и <xref:System.Web.Security.Roles.AddUsersToRoles%2A> методы <xref:System.Web.Security.Roles> класса.  
  
 Обновления базы данных, которые выполняются при вызове <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> метод выполняются в рамках транзакции. Если возникает ошибка, например имя пользователя, который уже находится в указанной роли, транзакция откатывается и обновления не выполняются.  
  
 Если <xref:System.Web.Security.SqlRoleProvider> используется с <xref:System.Web.Security.SqlMembershipProvider>и указанные имена пользователей не существуют в базе данных, имя пользователя будет автоматически добавлено в базу данных.  
  
 Имена пользователей и роли не может содержать запятые.  
  
   
  
## Examples  
 Следующий пример кода добавляет одного или нескольких пользователей в роль или удаляет пользователя из роли. Пример файла Web.config, который включает управление ролями см. в разделе <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Одна из ролей в массиве <paramref name="roleNames" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Один из пользователей в массиве <paramref name="usernames" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Одна из ролей в массиве <paramref name="roleNames" /> равна пустой строке или содержит запятую.  
  
 - или -  
  
 Один из пользователей в массиве <paramref name="usernames" /> равен пустой строке или содержит запятую.  
  
 - или -  
  
 Одна из ролей в массиве <paramref name="roleNames" /> имеет длину более 256 символов.  
  
 - или -  
  
 Одно из имен пользователей в массиве <paramref name="usernames" /> имеет длину более 256 символов.  
  
 - или -  
  
 Параметр <paramref name="roleNames" /> содержит повторяющийся элемент.  
  
 - или -  
  
 Параметр <paramref name="usernames" /> содержит повторяющийся элемент.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Одно или несколько указанных имен ролей не были найдены.  
  
 - или -  
  
 Одно или несколько указанных имен пользователя не были найдены.  
  
 - или -  
  
 Одно или несколько указанных имен пользователя уже связаны с одним или несколькими указанными именами ролей.  
  
 - или -  
  
 При взаимодействии с базой данных произошла неизвестная ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя приложения, для которого будут сохраняться и извлекаться сведения о роли.</summary>
        <value>Имя приложения, для которого будут сохраняться и извлекаться сведения о роли. По умолчанию установлено значение свойства <see cref="P:System.Web.HttpRequest.ApplicationPath" /> для текущего свойства <see cref="P:System.Web.HttpContext.Request" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> Используется <xref:System.Web.Security.SqlRoleProvider> для связи с различными приложениями пользователей и ролей. Это позволяет нескольким приложениям использовать ту же базу данных для хранения без конфликтов между повторяющимися именами пользователей и имена ролей пользователей и сведения о роли. Несколько приложений ASP.NET могут использовать ту же базу данных, указав то же значение в <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> свойство. <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> Свойства могут устанавливаться программными средствами, или он может быть задано декларативно в файле конфигурации для веб-приложения с использованием `applicationName` атрибута.  
  
 Если значение не указано для `applicationName` атрибут в файле конфигурации для веб-приложения, а затем <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> значение свойства для текущего <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> объект используется.  
  
> [!CAUTION]
>  Поскольку по умолчанию один экземпляр поставщика ролей используется для всех запросов, обслуживаемых <xref:System.Web.HttpApplication> объекта может быть несколько запросов, параллельном выполнении и выполняется настройка <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> значение свойства. <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> Свойство не является потокобезопасным для нескольких операций записи и изменение <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> значение свойства может привести к непредвиденному поведению для нескольких пользователей приложения. Рекомендуется избегать написания кода, который позволяет пользователям задавать <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> свойство без крайней необходимости. Пример приложения там, где параметр <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> свойства, может потребоваться является административное приложение, управляющее данными ролей для нескольких приложений. Такое приложение должно быть Однопользовательское приложение и не веб-приложения.  
  
   
  
## Examples  
 В следующем примере показано элемент в `system.web` раздел файла Web.config для приложения ASP.NET. Он указывает возвращаемое приложение <xref:System.Web.Security.SqlRoleProvider> экземпляра и наборы <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> свойства `MyApplication`.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Была предпринята попытка установить свойство <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> вызывающим объектом, который не имеет разрешения <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> среды ASP.NET.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Была предпринята попытка задать свойству <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> значение строки, длина которой более 256 символов.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Имя создаваемой роли.</param>
        <summary>Добавляет новую роль в базу данных ролей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.CreateRole%2A> Метод вызывается методом <xref:System.Web.Security.Roles> класса, чтобы создать роль базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
 Максимальная длина имени роли составляет 256 символов. Имена ролей не учитывают регистр. Запятые не разрешены в именах ролей.  
  
   
  
## Examples  
 В следующем примере кода создается новая роль в базе данных. Пример файла Web.config, который включает управление ролями см. в разделе <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="roleName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="roleName" /> равен пустой строке или содержит запятую.  
  
 - или -  
  
 Длина значения параметра <paramref name="roleName" /> превышает 256 символов.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          Параметр <paramref name="roleName" /> уже существует в базе данных.  
  
 - или -  
  
 При взаимодействии с базой данных произошла неизвестная ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Имя удаляемой роли.</param>
        <param name="throwOnPopulatedRole">При значении <see langword="true" /> вызывается исключение, если <c>roleName</c> имеет один или несколько членов.</param>
        <summary>Удаляет роль из базы данных ролей.</summary>
        <returns>
          Значение <see langword="true" />, если роль была успешно удалена; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.DeleteRole%2A> Метод вызывается методом <xref:System.Web.Security.Roles> класса, чтобы удалить роль из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config). При удалении роли список пользователей, связанных с этой ролью, также удаляется из базы данных. Сведения о пользователе в базе данных не затрагивается.  
  
 Если `throwOnPopulatedRole` — `true`, затем будет создано исключение, и роль не будет удалена, если роль идентифицировано `roleName` параметр имеет один или несколько членов. Если `throwOnPopulatedRole` — `false`, то роль будет удален, является ли она пустой или нет.  
  
   
  
## Examples  
 В следующем примере удаляется роль из базы данных. Пример файла Web.config, который включает управление ролями см. в разделе <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Значение параметра <paramref name="roleName" /> — <see langword="null" /> (<see langword="Nothing" /> в Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="roleName" /> равен пустой строке или содержит запятую.  
  
 - или -  
  
 Длина значения параметра <paramref name="roleName" /> превышает 256 символов.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          Параметр <paramref name="roleName" /> имеет один или несколько членов, и параметр <paramref name="throwOnPopulatedRole" /> имеет значение <see langword="true" />.  
  
 - или -  
  
 При взаимодействии с базой данных произошла неизвестная ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Роль, в которой следует выполнить поиск.</param>
        <param name="usernameToMatch">Имя пользователя для поиска.</param>
        <summary>Получает массив имен пользователей в роли, соответствующих указанному имени пользователя.</summary>
        <returns>Массив строк, содержащий имена всех пользователей, имена которых совпадают с <paramref name="usernameToMatch" />, и которые являются членами указанной роли.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.FindUsersInRole%2A> Метод вызывается методом <xref:System.Web.Security.Roles> и возвращает список пользователей в роли, где имя пользователя содержит совпадения с предоставленным `usernameToMatch` для настроенного `applicationName`. <xref:System.Web.Security.SqlRoleProvider> Ищет имя пользователя, которое соответствует `usernameToMatch` значение параметра с помощью LIKE ключевое слово и поддерживает подстановочные знаки SQL Server. Например если `usernameToMatch` параметр имеет значение «user1», то возвращаются сведения о членстве для пользователя с именем пользователя «user1», если он существует. Если `usernameToMatch` параметр имеет значение «user %», а затем возвращаются сведений о членстве для пользователей с именем пользователя «user1», «user2», «user_admin» и т. д.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.Roles.FindUsersInRole%2A> метод, чтобы отобразить членство в роли на основе ввода пользователя. Пример файла Web.config, который включает управление ролями см. в разделе <xref:System.Web.Security.Roles>.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Roles#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/FindUsersInRolecs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.Roles#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/FindUsersInRolevb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Значение параметра <paramref name="roleName" /> — <see langword="null" /> (<see langword="Nothing" /> в Visual Basic).  
  
 - или -  
  
 Свойство <paramref name="usernameToMatch" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="roleName" /> равен пустой строке или содержит запятую.  
  
 - или -  
  
 Параметр <paramref name="usernameToMatch" /> равен пустой строке.  
  
 - или -  
  
 Длина значения параметра <paramref name="roleName" /> превышает 256 символов.  
  
 - или -  
  
 Длина значения параметра <paramref name="usernameToMatch" /> превышает 256 символов.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          Параметр <paramref name="roleName" /> не был найден в базе данных.  
  
 - или -  
  
 При взаимодействии с базой данных произошла неизвестная ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает список всех ролей для приложения.</summary>
        <returns>Массив строк, содержащий имена всех ролей, сохраненных в базе данных для определенного приложения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.GetAllRoles%2A> Метод вызывается методом <xref:System.Web.Security.Roles> класса, чтобы получить список всех ролей базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.Roles.GetAllRoles%2A> метод, чтобы получить список ролей для приложения и привязку результатов к <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> элемента управления. Пример файла Web.config, который включает управление ролями см. в разделе <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">При взаимодействии с базой данных произошла неизвестная ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Имя пользователя, для которого нужно вернуть список ролей.</param>
        <summary>Возвращает список ролей, в которых состоит пользователь.</summary>
        <returns>Массив строк, содержащий имена всех ролей, с которыми входит указанный пользователь.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.GetRolesForUser%2A> Метод вызывается методом <xref:System.Web.Security.Roles> класса, чтобы получить список ролей для указанного пользователя из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.Roles.GetRolesForUser%2A> метод, чтобы получить список ролей для указанного пользователя и привязывает их к <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> элемента управления. Пример файла Web.config, который включает управление ролями см. в разделе <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="username" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="username" /> содержит запятую.  
  
 - или -  
  
 Длина значения параметра <paramref name="username" /> превышает 256 символов.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">При взаимодействии с базой данных произошла неизвестная ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Имя роли, для которой возвращается список пользователей.</param>
        <summary>Возвращает список пользователей в указанной роли.</summary>
        <returns>Массив строк, содержащий имена всех пользователей, которые являются членами указанной роли.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.GetUsersInRole%2A> Метод вызывается методом <xref:System.Web.Security.Roles> класса, чтобы получить список пользователей, связанных с указанной ролью базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.Roles.GetUsersInRole%2A> метод, чтобы получить список пользователей в определенной роли и привязку результатов к <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> элемента управления. Пример файла Web.config, который включает управление ролями см. в разделе <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="roleName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="roleName" /> равен пустой строке или содержит запятую.  
  
 - или -  
  
 Длина значения параметра <paramref name="roleName" /> превышает 256 символов.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          Параметр <paramref name="rolename" /> не был найден в базе данных.  
  
 - или -  
  
 При взаимодействии с базой данных произошла неизвестная ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Имя экземпляра <see cref="T:System.Web.Security.SqlRoleProvider" /> для инициализации.</param>
        <param name="config">Коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" />, которая содержит имена и значения опций конфигурации для поставщика ролей.</param>
        <summary>Инициализирует поставщика ролей SQL Server значениями свойства, указанными в файле конфигурации приложения ASP.NET. Этот метод не предназначен для непосредственного использования в коде.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод инициализирует <xref:System.Web.Security.SqlRoleProvider> со свойством значения, указанные в файле конфигурации приложения ASP.NET (Web.config) и не предназначен для использования непосредственно из программного кода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Приложение ASP.NET не выполняется с уровнем безопасности <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> или выше.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="config" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Атрибут <see langword="connectionStringName" /> пуст или не существует в файле конфигурации приложения для экземпляра <see cref="T:System.Web.Security.SqlRoleProvider" />.  
  
 - или -  
  
 Длина атрибута превышает <see langword="applicationName" /> 256 знаков.  
  
 - или -  
  
 Файл конфигурации приложения для этого экземпляра <see cref="T:System.Web.Security.SqlRoleProvider" /> содержит нераспознанный атрибут.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Имя пользователя для поиска.</param>
        <param name="roleName">Роль, в которой следует выполнить поиск.</param>
        <summary>Возвращает значение, позволяющее определить, может ли заданный пользователь выполнять указанную роль.</summary>
        <returns>
          <see langword="true" />, если имя указанного пользователя входит в указанную роль, в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.IsUserInRole%2A> Метод вызывается методом <xref:System.Web.Security.Roles> класса и <xref:System.Security.Principal.IPrincipal.IsInRole%2A> метод <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> свойства, чтобы определить, является ли пользователь связан с ролью базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
   
  
## Examples  
 В следующем примере кода программным образом проверяет ли пользователь вошел в роли "Администраторы" перед предоставлением пользователю просмотр ролей пользователя. Пример файла Web.config, который включает управление ролями см. в разделе <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="roleName" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="username" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="roleName" /> равен пустой строке или содержит запятую.  
  
 - или -  
  
 Параметр <paramref name="username" /> содержит запятую.  
  
 - или -  
  
 Длина значения параметра <paramref name="roleName" /> превышает 256 символов.  
  
 - или -  
  
 Длина значения параметра <paramref name="username" /> превышает 256 символов.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">При взаимодействии с базой данных произошла неизвестная ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Строковый массив имен пользователей, которых необходимо удалить из указанных ролей.</param>
        <param name="roleNames">Строковый массив имен ролей, из которых необходимо удалить указанных пользователей.</param>
        <summary>Удаляет указанные имена пользователей из указанных ролей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> Метод вызывается методом <xref:System.Web.Security.Roles> класса для удаления одного или нескольких пользователей из одной или нескольких ролей в базе данных SQL Server, указанную в файле конфигурации приложения ASP.NET (Web.config). Этот метод вызывается методом <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, и <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> методы <xref:System.Web.Security.Roles> класса.  
  
 Обновления базы данных, которые выполняются при вызове <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> выполняются в рамках транзакции. Если возникает ошибка, например имя пользователя, который не существует или имя пользователя, который уже находится в указанной роли, транзакция откатывается и обновления не выполняются.  
  
 Имена пользователей и роли не может содержать запятые.  
  
   
  
## Examples  
 Следующий пример кода добавляет одного или нескольких пользователей в роль или удаляет пользователя из роли. Пример файла Web.config, который включает управление ролями см. в разделе <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Одна из ролей в массиве <paramref name="roleNames" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Один из пользователей в массиве <paramref name="usernames" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Одна из ролей в массиве <paramref name="roleNames" /> равна пустой строке или содержит запятую.  
  
 - или -  
  
 Один из пользователей в массиве <paramref name="usernames" /> равен пустой строке или содержит запятую.  
  
 - или -  
  
 Одна из ролей в массиве <paramref name="roleNames" /> имеет длину более 256 символов.  
  
 - или -  
  
 Одно из имен пользователей в массиве <paramref name="usernames" /> имеет длину более 256 символов.  
  
 - или -  
  
 Параметр <paramref name="roleNames" /> содержит повторяющийся элемент.  
  
 - или -  
  
 Параметр <paramref name="usernames" /> содержит повторяющийся элемент.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Одно или несколько указанных имен пользователя не были найдены.  
  
 - или -  
  
 Одно или несколько указанных имен ролей не были найдены.  
  
 - или -  
  
 Одно или несколько указанных имен пользователя не связаны с одним или несколькими указанными именами ролей.  
  
 - или -  
  
 При взаимодействии с базой данных произошла неизвестная ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Имя роли, которую необходимо найти в базе данных.</param>
        <summary>Возвращает значение, указывающее, существует ли указанная роль в базе данных ролей.</summary>
        <returns>
          <see langword="true" />, если имя роли уже существует в базе данных; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.RoleExists%2A> Метод вызывается методом <xref:System.Web.Security.Roles> класс, чтобы определить, существует ли имя роли базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Web.Security.Roles.RoleExists%2A> метод, чтобы определить, существует ли уже имя роли, прежде чем создавать роли. Пример файла Web.config, который включает управление ролями см. в разделе <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="roleName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="roleName" /> равен пустой строке или содержит запятую.  
  
 - или -  
  
 Длина значения параметра <paramref name="roleName" /> превышает 256 символов.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">При взаимодействии с базой данных произошла неизвестная ошибка.</exception>
      </Docs>
    </Member>
  </Members>
</Type>