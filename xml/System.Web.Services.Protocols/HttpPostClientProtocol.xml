<Type Name="HttpPostClientProtocol" FullName="System.Web.Services.Protocols.HttpPostClientProtocol">
  <TypeSignature Language="C#" Value="public class HttpPostClientProtocol : System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpPostClientProtocol extends System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpPostClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpPostClientProtocol&#xA;Inherits HttpSimpleClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpPostClientProtocol : System::Web::Services::Protocols::HttpSimpleClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpSimpleClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8dc90-101">Базовый класс для прокси клиентов веб-служб XML, использующих протокол HTTP-POST.</span><span class="sxs-lookup"><span data-stu-id="8dc90-101">The base class for XML Web service client proxies that use the HTTP-POST protocol.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dc90-102">Когда XML-веб-службы клиент использует протокол HTTP POST, по умолчанию параметры передаются внутри текста сообщения HTTP с использованием правил кодирования URL-адрес и использует обычный XML для ответа.</span><span class="sxs-lookup"><span data-stu-id="8dc90-102">When an XML Web service client uses the HTTP-POST protocol, by default parameters are encoded within the HTTP body using URL encoding rules and uses plain XML for the response.</span></span> <span data-ttu-id="8dc90-103">Этот протокол использует классы, производные от <xref:System.Web.Services.Protocols.MimeFormatter> для кодировки параметров и возвращаемых значений в стандартных MIME форматах.</span><span class="sxs-lookup"><span data-stu-id="8dc90-103">This protocol uses classes that derive from <xref:System.Web.Services.Protocols.MimeFormatter> to encode parameters and return values into standard MIME formats.</span></span> <span data-ttu-id="8dc90-104">Используемые кодировщики указываются в описании службы.</span><span class="sxs-lookup"><span data-stu-id="8dc90-104">The encoders to use are specified in the service description.</span></span>  
  
 <span data-ttu-id="8dc90-105">При создании клиента XML-веб-службы, затем с помощью ASP.NET, косвенно производного класса-посредника или непосредственно из <xref:System.Web.Services.Protocols.WebClientProtocol> должна быть создана для XML-веб-службы, необходимо вызвать.</span><span class="sxs-lookup"><span data-stu-id="8dc90-105">If you are building an XML Web service client using ASP.NET, then a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> needs to be created for the XML Web service you want to call.</span></span> <span data-ttu-id="8dc90-106">При вызывает клиент XML-веб-службы с помощью протокола HTTP, являются производными класса-посредника <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, который в свою очередь является производным от <xref:System.Web.Services.Protocols.WebClientProtocol>.</span><span class="sxs-lookup"><span data-stu-id="8dc90-106">When the XML Web service client is calling using HTTP, derive the proxy class <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, which in turn derives from <xref:System.Web.Services.Protocols.WebClientProtocol>.</span></span>  
  
 <span data-ttu-id="8dc90-107"><xref:System.Web.Services.Protocols.HttpGetClientProtocol> и <xref:System.Web.Services.Protocols.HttpPostClientProtocol> являются производными от <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, предоставляя поддержку вызовов метода XML-веб-службы, с помощью HTTP-GET и HTTP POST.</span><span class="sxs-lookup"><span data-stu-id="8dc90-107"><xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, providing the support for calling an XML Web service method using HTTP-GET and HTTP-POST respectively.</span></span> <span data-ttu-id="8dc90-108">Клиенты, вызывающие веб-служб XML с использованием SOAP должен быть производным от <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>.</span><span class="sxs-lookup"><span data-stu-id="8dc90-108">Clients calling an XML Web service using SOAP should derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>.</span></span>  
  
 <span data-ttu-id="8dc90-109">Дополнительные сведения о построении класса прокси-сервера см. в разделе [ &#91; \<topic://cpconcreatingwebserviceproxy >&#93;](http://msdn.microsoft.com/library/142d91f5-3249-4cfc-a431-1f3acb76d756).</span><span class="sxs-lookup"><span data-stu-id="8dc90-109">For details on building a proxy class, see [&#91;\<topic://cpconcreatingwebserviceproxy>&#93;](http://msdn.microsoft.com/library/142d91f5-3249-4cfc-a431-1f3acb76d756).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dc90-110">Следующий пример является прокси-класс, создаваемый программой Wsdl.exe для `Math` веб-службы XML ниже.</span><span class="sxs-lookup"><span data-stu-id="8dc90-110">The following example is a proxy class generated by the Wsdl.exe utility for the `Math` XML Web service below.</span></span> <span data-ttu-id="8dc90-111">Прокси-класса, производного от <xref:System.Web.Services.Protocols.HttpPostClientProtocol>, который является производным от абстрактного <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> класса.</span><span class="sxs-lookup"><span data-stu-id="8dc90-111">The proxy class derives from <xref:System.Web.Services.Protocols.HttpPostClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> class.</span></span>  
  
 [!code-cpp[Classic HttpPostClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpPostClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/VB/source.vb#1)]  
  
 <span data-ttu-id="8dc90-112">Ниже приведен пример `Math` веб-службы XML, из которого был создан предыдущей прокси-класса.</span><span class="sxs-lookup"><span data-stu-id="8dc90-112">The following example is the `Math` XML Web service, from which the previous proxy class was created.</span></span>  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpPostClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpPostClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpPostClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dc90-113">Инициализирует новый экземпляр класса <see cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" />.</span><span class="sxs-lookup"><span data-stu-id="8dc90-113">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[HttpPostClientProtocol_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/CPP/httppostclientprotocol_constructor.cpp#1)]
 [!code-csharp[HttpPostClientProtocol_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/CS/httppostclientprotocol_constructor.cs#1)]
 [!code-vb[HttpPostClientProtocol_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/VB/httppostclientprotocol_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpPostClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="8dc90-114">Идентификатор <see cref="T:System.Uri" /> для использования при создании объекта <see cref="T:System.Net.WebRequest" />.</span><span class="sxs-lookup"><span data-stu-id="8dc90-114">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <summary><span data-ttu-id="8dc90-115">Создает экземпляр класса <see cref="T:System.Net.WebRequest" /> для указанного URI-кода.</span><span class="sxs-lookup"><span data-stu-id="8dc90-115">Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified URI.</span></span></summary>
        <returns><span data-ttu-id="8dc90-116">Экземпляр класса <see cref="T:System.Net.WebRequest" />.</span><span class="sxs-lookup"><span data-stu-id="8dc90-116">The <see cref="T:System.Net.WebRequest" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dc90-117">Этот метод переопределяет базовую версию <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> для указания, что запрос HTTP для веб-службу XML с использованием HTTP POST.</span><span class="sxs-lookup"><span data-stu-id="8dc90-117">This method overrides the base version of <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> to specify that the HTTP request to the XML Web service is made using HTTP-POST.</span></span> <span data-ttu-id="8dc90-118">Путем переопределения этого метода, можно настроить <xref:System.Net.WebRequest> объекта перед выполнением запроса XML-веб-службы.</span><span class="sxs-lookup"><span data-stu-id="8dc90-118">By overriding this method, you can customize the <xref:System.Net.WebRequest> object before the XML Web service request is made.</span></span> <span data-ttu-id="8dc90-119">Например можно добавить пользовательский заголовок к запросу.</span><span class="sxs-lookup"><span data-stu-id="8dc90-119">For example, you can add a custom header to the request.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8dc90-120">Параметр <paramref name="uri" /> равен null или имеет нулевую длину.</span><span class="sxs-lookup"><span data-stu-id="8dc90-120">The <paramref name="uri" /> parameter is null or has a length of zero.</span></span></exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>