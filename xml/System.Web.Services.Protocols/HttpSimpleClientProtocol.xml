<Type Name="HttpSimpleClientProtocol" FullName="System.Web.Services.Protocols.HttpSimpleClientProtocol">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="24110eb1ffa47f6267659a07e83cab2de1a0dfeb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550248" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpSimpleClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpSimpleClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpSimpleClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSimpleClientProtocol abstract : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="19d77-101">Представляет базовый класс для взаимодействия с веб-службой XML, используя простые привязки протоколов HTTP-GET и HTTP-POST.</span>
      <span class="sxs-lookup">
        <span data-stu-id="19d77-101">Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d77-102">Этот класс задает большую часть реализации для связи с веб-служб XML по протоколу HTTP, используя кодировщики для кодировки параметров и возвращаемых значений в стандартных форматах MIME.</span><span class="sxs-lookup"><span data-stu-id="19d77-102">This class specifies most of the implementation for communicating with an XML Web service over HTTP using encoders to encode the parameters and return values into common MIME formats.</span></span> <span data-ttu-id="19d77-103">Эти кодировщики производные от <xref:System.Web.Services.Protocols.MimeFormatter> класса.</span><span class="sxs-lookup"><span data-stu-id="19d77-103">These encoders derive from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="19d77-104">По умолчанию, прокси-класс, производный от <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> кодирует параметров с помощью application/x-www-формы-urlencoded тип MIME и ответ в виде XML.</span><span class="sxs-lookup"><span data-stu-id="19d77-104">By default, a proxy class deriving from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> encodes parameters using the application/x-www-form-urlencoded MIME type and the response in plain XML.</span></span> <span data-ttu-id="19d77-105">Модули форматирования пользовательских mime можно задать с помощью <xref:System.Web.Services.Protocols.HttpMethodAttribute> атрибута, однако не поддерживается для интеграции это в создании описание и прокси-службы.</span><span class="sxs-lookup"><span data-stu-id="19d77-105">Custom mime formatters can be specified using the <xref:System.Web.Services.Protocols.HttpMethodAttribute> attribute, however, there is no support for integrating this into a service description and proxy generation.</span></span>  
  
 <span data-ttu-id="19d77-106">`Notes to Inheritors:` При переопределении этого класса можно ввести методы в производном классе, характерные для определенного типа веб-служб XML.</span><span class="sxs-lookup"><span data-stu-id="19d77-106">`Notes to Inheritors:` When you override this class, you can introduce methods in the derived class that are specific to a particular type of an XML Web service.</span></span> <span data-ttu-id="19d77-107">Методы просто получают параметры и вызывают базовый класс для взаимодействия с сайтом.</span><span class="sxs-lookup"><span data-stu-id="19d77-107">The methods simply capture the parameters, and call the base class to do the work of communicating with the site.</span></span> <span data-ttu-id="19d77-108">Если введенные методы работают асинхронно, вызовите <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> и <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="19d77-108">If the introduced methods are asynchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> and <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> methods.</span></span> <span data-ttu-id="19d77-109">Если введенные методы являются синхронными, вызовите <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19d77-109">If the introduced methods are synchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method.</span></span> <span data-ttu-id="19d77-110">Переопределенный конструктор обычно присваивает <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> свойство URI-адрес метода XML-веб-службы.</span><span class="sxs-lookup"><span data-stu-id="19d77-110">The overridden constructor typically sets the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to the URI of the XML Web service method.</span></span>  
  
 <span data-ttu-id="19d77-111">Инструмент для языка описания веб-служб (Wsdl.exe) создает классы, наследующие <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> описание данной службы.</span><span class="sxs-lookup"><span data-stu-id="19d77-111">The Web Services Description Language tool (Wsdl.exe) generates derived classes of <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> for a given Service Description.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19d77-112">В следующем примере кода является прокси-класс, создаваемый программой Wsdl.exe для `Math` веб-службы XML ниже.</span><span class="sxs-lookup"><span data-stu-id="19d77-112">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service below.</span></span> <span data-ttu-id="19d77-113">Прокси-класса, производного от <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, который является производным от абстрактного <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> класса.</span><span class="sxs-lookup"><span data-stu-id="19d77-113">The proxy class derives from <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> class.</span></span>  
  
 [!code-cpp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpGetClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/source.vb#1)]  
  
 <span data-ttu-id="19d77-114">Следующий пример кода является `Math` веб-службы XML, из которой был создан вышеуказанный прокси-класс.</span><span class="sxs-lookup"><span data-stu-id="19d77-114">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="19d77-115">Данный тип потокобезопасен.</span>
      <span class="sxs-lookup">
        <span data-stu-id="19d77-115">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpSimpleClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpSimpleClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19d77-116">Инициализирует новый экземпляр класса <see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-116">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, string requestUrl, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, string requestUrl, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, requestUrl As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="19d77-117">Имя метода веб-службы XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-117">The name of the XML Web service method.</span>
          </span>
        </param>
        <param name="requestUrl">
          <span data-ttu-id="19d77-118">URL-адрес, используемый при создании <see cref="T:System.Net.WebRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-118">The URL to use when creating the <see cref="T:System.Net.WebRequest" />.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="19d77-119">Массив объектов, содержащий параметры для передачи методу веб-службы XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-119">An array of objects containing the parameters to pass to the XML Web service method.</span>
          </span>
          <span data-ttu-id="19d77-120">Порядок значений в массиве соответствует порядку параметров в вызывающем методе производного класса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-120">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19d77-121">Делегат, который вызывается после завершения асинхронного вызова метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-121">The delegate to call when the asynchronous method call is complete.</span>
          </span>
          <span data-ttu-id="19d77-122">Если значение параметра <c>callback</c> равно <see langword="null" />, делегат не вызывается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-122">If <c>callback</c> is <see langword="null" />, the delegate is not called.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="19d77-123">Дополнительная информация, предоставляемая клиентом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-123">The additional information supplied by a client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19d77-124">Начинает асинхронный вызов метода веб-службы XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-124">Starts an asynchronous invocation of a method of an XML Web service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19d77-125">Объект <see cref="T:System.IAsyncResult" />, который может передаваться методу <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /> для получения возвращаемых значений из метода веб-службы XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-125">An <see cref="T:System.IAsyncResult" /> that can be passed to the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /> method to obtain the return values from the XML Web service method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d77-126">`methodName` Параметр используется для обнаружения типов параметров и возвращаемых значений метода, который вызывает <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19d77-126">The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="19d77-127">Он также используется для обнаружения настраиваемых атрибутов, которые могут быть добавлены к методу.</span><span class="sxs-lookup"><span data-stu-id="19d77-127">It is also used to find custom attributes that may have been added to the method.</span></span> <span data-ttu-id="19d77-128"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, и <xref:System.Xml.Serialization.XmlElementAttribute> предоставляют дополнительные сведения о производного метода, который требуется для протокола HTTP.</span><span class="sxs-lookup"><span data-stu-id="19d77-128"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the HTTP protocol.</span></span>  
  
 <span data-ttu-id="19d77-129">`asyncState` передается в `callback` и включается в <xref:System.IAsyncResult> возвращенный <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19d77-129">`asyncState` is passed into `callback` and is included in the <xref:System.IAsyncResult> that is returned from the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="19d77-130">Это полезно для передачи информации из контекста асинхронного вызова в обработку асинхронного результата в `callback`.</span><span class="sxs-lookup"><span data-stu-id="19d77-130">It is useful for passing information from the context of the asynchronous call to the handling of the asynchronous result in `callback`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19d77-131">В следующем примере кода является веб-форма ASP.NET, который вызывает веб-служб XML с именем `Math`.</span><span class="sxs-lookup"><span data-stu-id="19d77-131">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="19d77-132">В пределах `EnterBtn_Click` функции веб-форму начинается и заканчивается в асинхронный вызов `Add` метода XML-веб-службы.</span><span class="sxs-lookup"><span data-stu-id="19d77-132">Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="19d77-133">В следующем примере кода — это класс прокси, созданный средством языка описания веб-служб (Wsdl.exe) для `Math` веб-службы XML ниже.</span><span class="sxs-lookup"><span data-stu-id="19d77-133">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="19d77-134">В пределах `BeginAdd` метод прокси-класса <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> метод начинает асинхронный вызов `Add` метода XML-веб-службы.</span><span class="sxs-lookup"><span data-stu-id="19d77-134">Within the `BeginAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 <span data-ttu-id="19d77-135">Следующий пример кода является `Math` веб-службы XML, из которой был создан вышеуказанный прокси-класс.</span><span class="sxs-lookup"><span data-stu-id="19d77-135">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="19d77-136">Запрос достиг сервера, но не обработан успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-136">The request reached the server computer, but was not processed successfully.</span>
          </span>
        </exception>
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="19d77-137">Объект <see cref="T:System.IAsyncResult" />, возвращенный из метода <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-137">The <see cref="T:System.IAsyncResult" /> returned from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19d77-138">Завершает асинхронный вызов метода веб-службы XML с использованием HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-138">Completes asynchronous invocation of an XML Web service method using HTTP.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19d77-139">Массив объектов, содержащий возвращаемое значение и все параметры, передаваемые по ссылке, и параметры <paramref name="out" /> для метода веб-службы XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-139">An array of objects containing the return value and any by reference or <paramref name="out" /> parameters for the XML Web service method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19d77-140">В следующем примере кода является веб-форма ASP.NET, который вызывает веб-служб XML с именем `Math`.</span><span class="sxs-lookup"><span data-stu-id="19d77-140">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="19d77-141">В пределах `EnterBtn_Click` функции веб-форму начинается и заканчивается в асинхронный вызов `Add` метода XML-веб-службы.</span><span class="sxs-lookup"><span data-stu-id="19d77-141">Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="19d77-142">В следующем примере кода — это класс прокси, созданный средством языка описания веб-служб (Wsdl.exe) для `Math` веб-службы XML ниже.</span><span class="sxs-lookup"><span data-stu-id="19d77-142">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="19d77-143">В пределах `EndAdd` метод прокси-класса <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> метод начинает асинхронный вызов `Add` метода XML-веб-службы.</span><span class="sxs-lookup"><span data-stu-id="19d77-143">Within the `EndAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 <span data-ttu-id="19d77-144">Следующий пример кода является `Math` веб-службы XML, из которого был создан вышеуказанный прокси-класс.</span><span class="sxs-lookup"><span data-stu-id="19d77-144">The following code example is the `Math` XML Web service, from which the above proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19d77-145">
            <paramref name="asyncResult" /> не является значением, возвращаемым из метода <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-145">
              <paramref name="asyncResult" /> is not the return value from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object Invoke (string methodName, string requestUrl, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object Invoke(string methodName, string requestUrl, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, requestUrl As String, parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ Invoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="19d77-146">Имя метода веб-службы XML в производном классе, вызывающем метод <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-146">The name of the XML Web service method in the derived class that is invoking the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /> method.</span>
          </span>
        </param>
        <param name="requestUrl">
          <span data-ttu-id="19d77-147">URL-адрес метода веб-службы XML, запрошенного клиентом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-147">The URL of the XML Web service method that the client is requesting.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="19d77-148">Массив объектов, содержащий параметры для передачи удаленной веб-службе XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-148">An array of objects containing the parameters to pass to the remote XML Web service.</span>
          </span>
          <span data-ttu-id="19d77-149">Порядок значений в массиве соответствует порядку параметров в вызывающем методе производного класса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-149">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19d77-150">Вызывает метод веб-службы XML с использованием HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-150">Invokes an XML Web service method using HTTP.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19d77-151">Массив объектов, содержащий возвращаемое значение и все параметры <paramref name="out" /> или параметры, передаваемые по ссылке, метода производного класса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-151">An array of objects containing the return value and any by-reference or <paramref name="out" /> parameters of the derived class method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d77-152">`methodName` Параметр используется для обнаружения типов параметров и возвращаемых значений метода, который вызывает <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19d77-152">The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method.</span></span> <span data-ttu-id="19d77-153">Он также используется для обнаружения настраиваемых атрибутов, которые могут быть добавлены к методу.</span><span class="sxs-lookup"><span data-stu-id="19d77-153">It is also used to find custom attributes which may have been added to the method.</span></span> <span data-ttu-id="19d77-154"><xref:System.Web.Services.Protocols.HttpMethodAttribute> и <xref:System.Xml.Serialization.XmlElementAttribute> предоставляют дополнительные сведения о производного метода, который требуется для протокола SOAP.</span><span class="sxs-lookup"><span data-stu-id="19d77-154"><xref:System.Web.Services.Protocols.HttpMethodAttribute> and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the SOAP protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19d77-155">В следующем примере кода является веб-форма ASP.NET, который вызывает веб-служб XML с именем `Math`.</span><span class="sxs-lookup"><span data-stu-id="19d77-155">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="19d77-156">В пределах `EnterBtn_Click` синхронно вызывается функция, веб-формы `Add` метода XML-веб-службы.</span><span class="sxs-lookup"><span data-stu-id="19d77-156">Within the `EnterBtn_Click` function, the Web Form synchronously invokes the `Add` XML Web service method.</span></span>  
  
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/sourcecs.aspx#2)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/sourcevb.aspx#2)]  
  
 <span data-ttu-id="19d77-157">В следующем примере кода — это класс прокси, созданный средством языка описания веб-служб (Wsdl.exe) для `Math` веб-службы XML ниже.</span><span class="sxs-lookup"><span data-stu-id="19d77-157">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="19d77-158">В пределах `Add` метод прокси-класса <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> синхронно вызывает метод `Add` метод веб-службы.</span><span class="sxs-lookup"><span data-stu-id="19d77-158">Within the `Add` method of the proxy class, the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method synchronously invokes the `Add` Web Service method.</span></span>  
  
 [!code-cpp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/source.vb#1)]  
  
 <span data-ttu-id="19d77-159">Следующий пример кода является `Math` веб-службы XML, из которого был создан вышеуказанный прокси-класс.</span><span class="sxs-lookup"><span data-stu-id="19d77-159">The following code example is the `Math` XML Web service, from which the above proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="19d77-160">Запрос достиг сервера, но не обработан успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-160">The request reached the server computer, but was not processed successfully.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19d77-161">Асинхронно вызывает указанный метод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-161">Invokes the specified method asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="19d77-162">Имя вызываемого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-162">The name of the method to invoke.</span>
          </span>
        </param>
        <param name="requestUrl">
          <span data-ttu-id="19d77-163">URL-адрес запроса вызываемой веб-службы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-163">The request URL of the invoked web service.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="19d77-164">Параметры для передачи методу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-164">The parameters to pass to the method.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19d77-165">Делегат, вызываемый при завершении вызова метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-165">The delegate called when the method invocation has completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19d77-166">Асинхронно вызывает указанный метод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-166">Invokes the specified method asynchronously.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="19d77-167">Имя вызываемого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-167">The name of the method to invoke.</span>
          </span>
        </param>
        <param name="requestUrl">
          <span data-ttu-id="19d77-168">URL-адрес запроса вызываемой веб-службы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-168">The request URL of the invoked web service.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="19d77-169">Параметры для передачи методу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-169">The parameters to pass to the method.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19d77-170">Делегат, вызываемый при завершении вызова метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-170">The delegate called when the method invocation has completed.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="19d77-171">Объект, содержащий информацию сопоставленного состояния, передается делегату <c>callback</c> по завершении выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-171">An object containing associated state information that is passed to the <c>callback</c> delegate when the method has completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19d77-172">Асинхронно вызывает указанный метод, сохраняя сопоставленное состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d77-172">Invokes the specified method asynchronously while maintaining an associated state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>