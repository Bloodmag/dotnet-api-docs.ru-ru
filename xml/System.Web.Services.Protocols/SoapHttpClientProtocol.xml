<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SoapHttpClientProtocol.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae0584552aa1387c99dd8edc36ffe0708a22518888b226fd1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa1387c99dd8edc36ffe0708a22518888b226fd1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>Specifies the class client that proxies derive from when using SOAP.</source>
          <target state="translated">Указывает класс, из которого получают клиентские прокси-классы при использовании SOAP.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>If you are building an XML Web service client, then a proxy class that derives indirectly or directly from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> must be created for the XML Web service.</source>
          <target state="translated">При создании клиента XML-веб-службы, затем прокси-класс, производный прямо или косвенно от <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> должны быть созданы для веб-службу XML.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>When the XML Web service client calls using SOAP, the proxy class must derive from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, which derives from <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>.</source>
          <target state="translated">Когда клиент XML-веб-службы вызывает метод с использованием SOAP, прокси-класс должен быть производным от <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, который является производным от <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>, in turn, derives from <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>, в свою очередь, является производным от <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>To communicate with an XML Web service, create a proxy class that derives indirectly or directly from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> for the XML Web service you want to call.</source>
          <target state="translated">Взаимодействие с веб-служб XML, создание прокси-класс, производный прямо или косвенно от <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> для XML-веб-службы, необходимо вызвать.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>Instead of creating the proxy class manually, use the Web Services Description Language tool (Wsdl.exe) to create a proxy class for a given XML Web service's service description.</source>
          <target state="translated">Вместо создания прокси-класса вручную, используйте средство языка описания веб-служб (Wsdl.exe) для создания прокси-класса для описания данного XML-веб-службы.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>When a proxy class is generated for the SOAP protocol, synchronous calls to XML Web service methods are made via the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> method, whereas asynchronous calls are made using the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;</ph> method.</source>
          <target state="translated">Класс-посредник, созданный для протокола SOAP, синхронные вызовы методов выполняются через <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> метода, в то время как асинхронные вызовы выполняются с использованием <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> метод и <ph id="ph3">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The following code example is a proxy class generated by Wsdl.exe for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">В следующем примере кода является прокси-класс, создаваемый программой Wsdl.exe для <ph id="ph1">`Math`</ph> веб-службы XML.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The proxy class derives from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, which derives from the abstract <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> class.</source>
          <target state="translated">Прокси-класса, производного от <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, который является производным от абстрактного <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was generated.</source>
          <target state="translated">Следующий пример кода является <ph id="ph1">`Math`</ph> веб-службы XML, из которой был создан вышеуказанный прокси-класс.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Общие сведения об использовании сценариев<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>This type is thread safe.</source>
          <target state="translated">Данный тип потокобезопасен.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>When you override this class, you can introduce methods in the derived class which are specific to a particular type of XML Web service.</source>
          <target state="translated">При переопределении этого класса можно ввести методы в производном классе, специфичные для определенного типа веб-службы XML.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The methods capture the parameters and call the base class to do the work of communicating with the XML Web service.</source>
          <target state="translated">Методы получают параметры и вызывают базовый класс для взаимодействия с веб-службу XML.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>If the introduced methods are asynchronous, call the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method and the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> method.</source>
          <target state="translated">Если введенные методы работают асинхронно, вызовите <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> метод и <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>If the introduced methods are synchronous, call the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">Если введенные методы являются синхронными, вызовите <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The overridden constructor typically sets the <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph> property to the URL of the XML Web service method.</source>
          <target state="translated">Переопределенный конструктор обычно присваивает <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph> URL-адрес метода XML-веб-службы.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The name of the XML Web service method in the derived class that is invoking the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Имя метода веб-службы XML в производном классе, вызывающем метод <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An array of objects containing the parameters to pass to the XML Web service.</source>
          <target state="translated">Массив объектов, содержащий параметры для передачи веб-службе XML.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">Порядок значений в массиве соответствует порядку параметров в вызывающем методе производного класса.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The delegate to call when the asynchronous invoke is complete.</source>
          <target state="translated">Делегат, который вызывается после завершения асинхронного вызова метода.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the delegate is not called.</source>
          <target state="translated">Если значение параметра <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> равно <ph id="ph1">&lt;see langword="null" /&gt;</ph>, делегат не вызывается.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Extra information supplied by the caller.</source>
          <target state="translated">Дополнительные данные, предоставляемые вызывающим объектом.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Starts an asynchronous invocation of an XML Web service method using SOAP.</source>
          <target state="translated">Начинает асинхронный вызов метода веб-службы XML с использованием SOAP.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is passed to the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> method to obtain the return values from the remote method call.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, передаваемый в метод <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> для получения возвращаемых значений из удаленного вызова метода.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Typically, you would not call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method directly, unless you were building your own proxy class for an XML Web service.</source>
          <target state="translated">Как правило, не вызывается <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> метод напрямую, если выполнялось построение собственного класса прокси-сервера для веб-служб XML.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) from a Service Description exposes the XML Web service methods as names derived from the proxy class to call the XML Web service methods synchronously.</source>
          <target state="translated">Прокси-класс, созданный средством языка описания веб-служб (Wsdl.exe) из описания службы предоставляет методы XML-веб-службы, как имена, производный от класса прокси-сервера для синхронно вызывать методы XML-веб-службы.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>To call the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the <ph id="ph1">`Begin`</ph> prefix added to the name of the XML Web service method and one with the <ph id="ph2">`End`</ph> prefix added.</source>
          <target state="translated">Асинхронный вызов методов XML-веб-службы, добавляются два дополнительных метода в прокси-класс для каждого метода XML-веб-службы, с <ph id="ph1">`Begin`</ph> префикс, добавляемый к имени метода XML-веб-службы, и одна с <ph id="ph2">`End`</ph> префиксом.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The proxy class calls the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method to start an asynchronous invocation call to the XML Web service method.</source>
          <target state="translated">Прокси-класс вызывает <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> метода для запуска асинхронного вызова метода XML-веб-службы.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class contains a method named <ph id="ph2">`BeginAdd`</ph>, for starting an invocation to the XML Web service method.</source>
          <target state="translated">Например, если веб-служба XML предоставляет метод XML-веб-службы с именем <ph id="ph1">`Add`</ph>, прокси-класс содержит метод с именем <ph id="ph2">`BeginAdd`</ph>, для начала асинхронного вызова для XML-веб-метода службы.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Within the code for the <ph id="ph1">`BeginAdd`</ph>, a call is made to the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method and the results are placed into the expected return type for <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">Внутри кода для <ph id="ph1">`BeginAdd`</ph>, выполняется вызов <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> метод и результаты помещаются в ожидаемый тип возвращаемого значения для <ph id="ph3">`Add`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`methodName`</ph> is used to find the custom attributes which may have been added to the method, such as <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`methodName`</ph> Используется для обнаружения настраиваемых атрибутов, которые могут быть добавлены к методу, например <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> provides additional information about the derived method that is required for the SOAP protocol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> Дополнительные сведения о производном методе, который требуется для протокола SOAP.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source><ph id="ph1">`asyncState`</ph> is passed into <ph id="ph2">`callback`</ph> and is included in the <ph id="ph3">&lt;xref:System.IAsyncResult&gt;</ph> that is returned from the <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`asyncState`</ph> передается в <ph id="ph2">`callback`</ph> и включается в <ph id="ph3">&lt;xref:System.IAsyncResult&gt;</ph> возвращенный <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`asyncState`</ph> parameter can be used to pass information about the context of the asynchronous call, specified in the <ph id="ph2">`callback`</ph> parameter, to the delegate that handles the result.</source>
          <target state="translated"><ph id="ph1">`asyncState`</ph> Используется для передачи сведений о контексте асинхронного вызова, указанного в <ph id="ph2">`callback`</ph> параметра в делегат, обрабатывающий результат.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">В следующем примере кода — это класс прокси, созданный средством языка описания веб-служб (Wsdl.exe) для <ph id="ph1">`Math`</ph> веб-службы XML.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Within the <ph id="ph1">`BeginAdd`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method is starting an asynchronous invocation to the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">В пределах <ph id="ph1">`BeginAdd`</ph> метод прокси-класса <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> начинает асинхронный вызов в метод <ph id="ph3">`Add`</ph> метода XML-веб-службы.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">Следующий пример кода является <ph id="ph1">`Math`</ph> веб-службы XML, из которой был создан вышеуказанный прокси-класс.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">Запрос достиг сервера, но не обработан успешно.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">Запрос оказался недействительным для текущего состояния объекта.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">Произошла ошибка при обращении к сети.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Dynamically binds to an XML Web service described in the discovery document at <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph>.</source>
          <target state="translated">Динамически создает привязку к веб-службе XML, описанной в документе обнаружения по адресу <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>An XML Web service client can dynamically bind to an XML Web service other than the one referenced in the proxy class using the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method.</source>
          <target state="translated">Клиент XML-веб-службы можно динамически привязать к XML-веб-службы, отличной от той, на которые ссылается класс прокси-сервера с помощью <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property refers to the base address of the XML Web service.</source>
          <target state="translated">Как правило <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> свойство ссылается на базовый адрес веб-службу XML.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>However, before invoking the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method, set the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property to a URL of a discovery document.</source>
          <target state="translated">Тем не менее, перед вызовом <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> задать метод, <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> свойство на URL-адрес документа обнаружения.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method attempts to find a match in the discovery document to the binding defined in the proxy class and then dynamically bind to it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> Метод пытается найти совпадение в документе обнаружения по привязке, определенной в прокси-класса, а затем динамически привязать к нему.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>If successful, subsequent method calls are directed to the XML Web service described in the discovery document.</source>
          <target state="translated">В случае успешного выполнения, дальнейшие вызовы метода направляются XML-веб-службы, описанной в документе обнаружения.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>If the proxy class is built using the Web Services Description Language tool (Wsdl.exe), the proxy class defines the binding implemented by the XML Web service methods it invokes using the <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph>.</source>
          <target state="translated">Если прокси-класс создается с помощью средства языка описания веб-служб (Wsdl.exe), прокси-класс определяет привязку, реализуемую методами XML-веб-службы, он вызывает, с помощью <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>When an XML Web service implements multiple bindings, Wsdl.exe creates a proxy class for each binding.</source>
          <target state="translated">Если веб-служб XML реализует несколько привязок, Wsdl.exe создает класс-посредник для каждой привязки.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Applied to each proxy class is a <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> that defines the name of the binding and its namespace.</source>
          <target state="translated">Применяется к каждому прокси-класс — <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> , определяющий имя привязки и его пространство имен.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The discovery document you set the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property to must contain a reference to an XML Web service that implements the same binding name and namespace, or an exception is thrown.</source>
          <target state="translated">Документ обнаружения, задать <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> свойства должен содержать ссылку на веб-служб XML, реализующий одно и то же имя привязки и пространство имен, или выдается исключение.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The following code example is a proxy class generated using the Wsdl.exe utility for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">В следующем примере кода является прокси-класса, созданного с помощью программы Wsdl.exe для <ph id="ph1">`Math`</ph> веб-службы XML.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>A <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> is applied to the <ph id="ph2">`Math`</ph> proxy class setting the binding name to <ph id="ph3">`MathSoap`</ph> and its namespace to <ph id="ph4">`http://tempuri.org/`</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> применяется к <ph id="ph2">`Math`</ph> класс-посредник, имя привязки параметра <ph id="ph3">`MathSoap`</ph> и его имен <ph id="ph4">`http://tempuri.org/`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The following code example is a Web Service client using the preceding proxy class.</source>
          <target state="translated">В следующем примере кода — это клиент веб-службы, с помощью описанного класса прокси-сервера.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> event of the Web Form, the XML Web service client calls the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method attempting to dynamically bind to the URL supplied by the user.</source>
          <target state="translated">В пределах <ph id="ph1">`EnterBtn_Click`</ph> событий веб-формы, клиент вызывает метод XML-веб-службы <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> метод попытке динамически привязки к URL-адрес, предоставленные пользователем.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Общие сведения об использовании сценариев<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The proxy class does not have a binding defined.</source>
          <target state="translated">Прокси-класс не имеет определенной привязки.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned from the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, возвращенный из метода <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Ends an asynchronous invocation of an XML Web service method using SOAP.</source>
          <target state="translated">Завершает асинхронный вызов метода веб-службы XML с использованием SOAP.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>An array of objects that contains the return value and any by-reference or <ph id="ph1">&lt;see langword="out" /&gt;</ph> parameters of the derived class method.</source>
          <target state="translated">Массив объектов, содержащий возвращаемое значение и любые параметры, передаваемые по ссылке, или параметры <ph id="ph1">&lt;see langword="out" /&gt;</ph> метода производного класса.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Typically, you would not call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method directly, unless you were building your own proxy class for an XML Web service.</source>
          <target state="translated">Как правило, не вызывается <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> метод напрямую, если выполнялось построение собственного класса прокси-сервера для веб-служб XML.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class for calling the XML Web service methods synchronously.</source>
          <target state="translated">Методы XML-веб-службы предоставляет прокси-класс, созданный средством языка описания веб-служб (Wsdl.exe) веб-служб XML как имена за пределами прокси-класса для синхронного вызова методов XML-веб-службы.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>For calling the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the <ph id="ph1">`Begin`</ph> prefix added to the name of the XML Web service method and one with the <ph id="ph2">`End`</ph> prefix added.</source>
          <target state="translated">Для асинхронного вызова методов XML-веб-службы, добавляются два дополнительных метода в прокси-класс для каждого метода XML-веб-службы, с <ph id="ph1">`Begin`</ph> префикс, добавляемый к имени метода XML-веб-службы, и одна с <ph id="ph2">`End`</ph> префиксом.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The proxy class calls the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method to complete an asynchronous invocation call to the XML Web service method.</source>
          <target state="translated">Прокси-класс вызывает <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> метод для завершения асинхронного вызова метода XML-веб-службы.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class contains a method named <ph id="ph2">`EndAdd`</ph>, for completing an asynchronous invocation of an XML Web service method.</source>
          <target state="translated">Например, если веб-служба XML предоставляет метод XML-веб-службы с именем <ph id="ph1">`Add`</ph>, прокси-класс содержит метод с именем <ph id="ph2">`EndAdd`</ph>, метод для завершения асинхронного вызова XML-веб-службы.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Within the code for the <ph id="ph1">`EndAdd`</ph> a call is made to the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method and then the results are placed into the expected return type for <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">Внутри кода для <ph id="ph1">`EndAdd`</ph> выполняется вызов <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> метода, а затем результаты помещаются в ожидаемый тип возвращаемого значения для <ph id="ph3">`Add`</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is a proxy class generated by Wsdl.exe for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">В следующем примере кода является прокси-класс, создаваемый программой Wsdl.exe для <ph id="ph1">`Math`</ph> веб-службы XML.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Within the <ph id="ph1">`EndAdd`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method completes the asynchronous invocation to the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">В пределах <ph id="ph1">`EndAdd`</ph> метод прокси-класса <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> завершения асинхронного вызова метода <ph id="ph3">`Add`</ph> метода XML-веб-службы.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">Следующий пример кода является <ph id="ph1">`Math`</ph> веб-службы XML, из которой был создан вышеуказанный прокси-класс.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is not the return value from the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> не является значением, возвращаемым из метода <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">Запрос достиг сервера, но не обработан успешно.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">Запрос оказался недействительным для текущего состояния объекта.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">Произошла ошибка при обращении к сети.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> that provides the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> to initialize the <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Сообщение <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph>, предоставляющее свойство <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> для инициализации объекта <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>The initial buffer size of the <ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph> used by the <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Размер исходного буфера для объекта <ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph>, используемого объектом <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> parameter.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, инициализированный с помощью свойства <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> параметра <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;paramref name="message" /&gt;</ph> parameter.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, инициализируемый с помощью свойства <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> параметра <ph id="ph3">&lt;paramref name="message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> to use when creating the <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated">Идентификатор <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> для использования при создании объекта <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> for the specified <ph id="ph2">&lt;paramref name="uri" /&gt;</ph>.</source>
          <target state="translated">Создает объект <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> для заданного объекта <ph id="ph2">&lt;paramref name="uri" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> for the specified URI.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> для указанного универсального кода ресурса (URI).</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>This method can be overridden to customize the <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> before the XML Web service request is made.</source>
          <target state="translated">Этот метод может быть переопределен для настройки <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> перед XML-веб-службы запрос.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>For example, you could add a custom header to the request.</source>
          <target state="translated">Например удалось добавить пользовательский заголовок к запросу.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="uri" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="uri" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> that provides the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> to initialize the <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Сообщение <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph>, предоставляющее свойство <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> для инициализации объекта <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>The initial buffer size of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> used by the <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Размер исходного буфера для объекта <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph>, используемого объектом <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> parameter.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, инициализированный с помощью свойства <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> параметра <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;paramref name="message" /&gt;</ph> parameter.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, инициализируемый с помощью свойства <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> параметра <ph id="ph3">&lt;paramref name="message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>An array of objects that contains the parameters to pass to the XML Web service.</source>
          <target state="translated">Массив объектов, содержащий параметры для передачи веб-службе XML.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">Порядок значений в массиве соответствует порядку параметров в вызывающем методе производного класса.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Invokes an XML Web service method synchronously using SOAP.</source>
          <target state="translated">Синхронно вызывает метод XML-веб-службы, используя протокол SOAP.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>An array of objects that contains the return value and any <ph id="ph1">&lt;see langword="reference" /&gt;</ph> or <ph id="ph2">&lt;see langword="out" /&gt;</ph> parameters of the derived class method.</source>
          <target state="translated">Массив объектов, содержащий возвращаемое значение и любые параметры <ph id="ph1">&lt;see langword="reference" /&gt;</ph> или <ph id="ph2">&lt;see langword="out" /&gt;</ph> метода производного класса.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Typically, you do not call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method directly, unless you are building your own proxy class for an XML Web service.</source>
          <target state="translated">Как правило, не следует вызывать <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> метод напрямую, если вы создаете свой собственный класс прокси-сервера для веб-служб XML.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class.</source>
          <target state="translated">Прокси-класс, созданный средством языка описания веб-служб (Wsdl.exe) веб-служб XML предоставляет методы XML-веб-службы, как имена за пределами класса прокси-сервера.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The proxy class calls the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method to invoke an XML Web service method call.</source>
          <target state="translated">Прокси-класс вызывает <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> метод для вызова метода XML-веб-службы.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class also contains a method named <ph id="ph2">`Add`</ph>.</source>
          <target state="translated">Например, если веб-служба XML предоставляет метод XML-веб-службы с именем <ph id="ph1">`Add`</ph>, прокси-класс также содержит метод с именем <ph id="ph2">`Add`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Within the code for the <ph id="ph1">`Add`</ph> method in the proxy class, a synchronous call is made to the XML Web service method through the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method and then the results are placed into the expected return type for <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">Внутри кода для <ph id="ph1">`Add`</ph> методу прокси-класса, выполняется синхронный вызов метода XML-веб-службы через <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> метода, а затем результаты помещаются в ожидаемый тип возвращаемого значения для <ph id="ph3">`Add`</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The <ph id="ph1">`methodName`</ph> parameter is used to find the custom attributes that may have been added to the method, such as <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`methodName`</ph> Параметр используется для обнаружения настраиваемых атрибутов, которые могут быть добавлены к методу, например <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> provides additional information on the derived method which is required for the SOAP protocol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> Дополнительные сведения об производного метода, который требуется для протокола SOAP.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The following code example is a proxy class generated by Wsdl.exe for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">В следующем примере кода является прокси-класс, создаваемый программой Wsdl.exe для <ph id="ph1">`Math`</ph> веб-службы XML.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Within the <ph id="ph1">`Add`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method is calling the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">В пределах <ph id="ph1">`Add`</ph> метод прокси-класса <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> вызов метода <ph id="ph3">`Add`</ph> метода XML-веб-службы.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">Следующий пример кода является <ph id="ph1">`Math`</ph> веб-службы XML, из которой был создан вышеуказанный прокси-класс.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">Запрос достиг сервера, но не обработан успешно.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">Запрос оказался недействительным для текущего состояния объекта.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">Произошла ошибка при обращении к сети.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">Асинхронно вызывает указанный метод.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The name of the method to invoke.</source>
          <target state="translated">Имя вызываемого метода.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The parameters to pass to the method.</source>
          <target state="translated">Параметры для передачи методу.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">Делегат, вызываемый при завершении вызова метода.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">Асинхронно вызывает указанный метод.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The name of the method to invoke.</source>
          <target state="translated">Имя вызываемого метода.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The parameters to pass to the method.</source>
          <target state="translated">Параметры для передачи методу.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">Делегат, вызываемый при завершении вызова метода.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>An object used to pass state information into the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> delegate.</source>
          <target state="translated">Объект, используемый для передачи сведений о состоянии в делегат <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">Асинхронно вызывает указанный метод.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>Gets or sets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</source>
          <target state="translated">Получает или задает версию протокола SOAP, используемого для запроса SOAP к веб-службе XML.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">&lt;see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> property is set in the proxy class generated by the Web Services Description Language tool (Wsdl.exe) to <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> by default when a WSDL document for an XML Web service supports SOAP version 1.1.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> Свойству прокси-класса, создаваемого средством языка описания веб-служб (Wsdl.exe) <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> по умолчанию, если документ WSDL для веб-служб XML поддерживает SOAP версии 1.1.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>However, when an XML Web service only supports SOAP 1.2, Wsdl.exe sets the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>.</source>
          <target state="translated">Тем не менее, если веб-служб XML поддерживает только SOAP 1.2, Wsdl.exe наборы <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> свойства <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>To choose the version of the SOAP protocol when generating the proxy class with Wsdl.exe, use the <ph id="ph1">`/protocol`</ph> switch with the <ph id="ph2">`SOAP`</ph> or <ph id="ph3">`SOAP12`</ph> settings to set the <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> property to <ph id="ph5">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> and <ph id="ph6">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>, respectively.</source>
          <target state="translated">Чтобы выбрать версию протокола SOAP, при создании класса прокси-сервера с помощью Wsdl.exe, используйте <ph id="ph1">`/protocol`</ph> переключиться с <ph id="ph2">`SOAP`</ph> или <ph id="ph3">`SOAP12`</ph> параметры, можно установить <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> свойства <ph id="ph5">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> и <ph id="ph6">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>соответственно .</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>The following code example sets the version of the protocol used to communicate with an XML Web service to SOAP 1.2.</source>
          <target state="translated">В следующем примере кода задает версию протокола, используемого для взаимодействия с веб-служб XML SOAP 1.2.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>