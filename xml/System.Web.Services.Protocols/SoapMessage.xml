<Type Name="SoapMessage" FullName="System.Web.Services.Protocols.SoapMessage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2cc4afe7a4e8a0a96f6d8e8e0def604b33093901" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30549908" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapMessage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapMessage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapMessage abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет данные в запросе или ответе SOAP на указанной стадии <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В основном используются <xref:System.Web.Services.Protocols.SoapMessage> класс предназначен для расширений SOAP, представляющих данные в SOAP-запроса или ответа SOAP. Когда <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> вызывается метод, <xref:System.Web.Services.Protocols.SoapExtension> получает <xref:System.Web.Services.Protocols.SoapMessage> на каждом <xref:System.Web.Services.Protocols.SoapMessageStage>. Именно определенного расширение SOAP для выбора способа обработки <xref:System.Web.Services.Protocols.SoapMessage>. Обычные расширения SOAP выполняют шифрование и сжатие.  
  
 Расширения SOAP могут быть применены к либо или оба метода XML-веб-службы создан с помощью ASP.NET или клиенту XML-веб-службы. Когда расширение SOAP применяется к методу XML-веб-службы, <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> метод принимает экземпляр <xref:System.Web.Services.Protocols.SoapServerMessage>, который является производным от <xref:System.Web.Services.Protocols.SoapMessage>. Аналогично, при применении расширения SOAP клиенту XML-веб-службы, <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> получает экземпляр <xref:System.Web.Services.Protocols.SoapClientMessage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#1)]
 [!code-csharp[SoapMessage#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#1)]
 [!code-vb[SoapMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public abstract string Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Action" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Action { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении в производном классе получает поле SOAPAction заголовка HTTP-запроса для запроса или ответа SOAP.</summary>
        <value>Поле SOAPAction заголовка HTTP-запроса для запроса или ответа SOAP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.Action%2A> Свойство может быть доступно во время выполнения любой <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#2)]
 [!code-csharp[SoapMessage#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#2)]
 [!code-vb[SoapMessage#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public string ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает содержимое HTTP-заголовка <see langword="Content-Encoding" />.</summary>
        <value>Содержимое HTTP-заголовка <see langword="Content-Encoding" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно задать расширение SOAP <xref:System.Web.Services.Protocols.SoapMessage.ContentEncoding%2A> свойства для предоставления дополнительной информации о кодировке сообщения SOAP без изменения типа данных, выраженные в `Content-Type` заголовка HTTP.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Текущая стадия <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> — <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" /> или <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" />.</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
        <altmember cref="P:System.Web.Services.Protocols.SoapMessage.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает HTTP-заголовок <see langword="Content-Type" /> для запроса или ответа SOAP.</summary>
        <value>HTTP-заголовок <see langword="Content-Type" /> для запроса или ответа SOAP. По умолчанию используется значение "text/xml".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.ContentType%2A> Свойств доступен только в <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> и <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> готовит; в противном случае <xref:System.InvalidOperationException> возникает исключение.  
  
 Используйте <xref:System.Web.Services.Protocols.SoapMessage.ContentEncoding%2A> свойство, а не <xref:System.Web.Services.Protocols.SoapMessage.ContentType%2A> свойства для предоставления дополнительной информации о кодировке сообщения SOAP.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#3](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#3)]
 [!code-csharp[SoapMessage#3](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#3)]
 [!code-vb[SoapMessage#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          Свойство <see cref="P:System.Web.Services.Protocols.SoapMessage.ContentType" /> доступно на стадии <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" /> или <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" />.</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
        <altmember cref="P:System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      </Docs>
    </Member>
    <Member MemberName="EnsureInStage">
      <MemberSignature Language="C#" Value="protected abstract void EnsureInStage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureInStage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureInStage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EnsureInStage ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EnsureInStage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При переопределении в производном классе удостоверяет, что текущая стадия <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> разрешает доступ к параметрам.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Проверяемый уровень отличается для клиентов XML-веб-службы и методы XML-веб-службы. XML-веб-службы входные параметры метода доступны после десериализации запроса SOAP в <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> рабочей области. Для клиента XML-веб-службы, входные параметры доступны до начала процесса сериализации запроса SOAP на <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> рабочей области.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureInStage%2A> может вызываться во время выполнения любой <xref:System.Web.Services.Protocols.SoapMessageStage>, но при этом <xref:System.InvalidOperationException> создается, когда параметры недоступны.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Входные параметры недоступны.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureOutStage">
      <MemberSignature Language="C#" Value="protected abstract void EnsureOutStage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureOutStage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureOutStage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EnsureOutStage ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EnsureOutStage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При переопределении в производном классе удостоверяется в том, что на текущей стадия <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> предоставляется доступ к выходным параметрам.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Проверяемый уровень отличается для клиентов XML-веб-службы и методы XML-веб-службы. XML-веб-службы выходные параметры метода доступны до начала процесса сериализации запроса SOAP на <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> рабочей области. В клиенте XML-веб-службы, выходные параметры доступны процесса десериализации запроса SOAP на <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> рабочей области.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureOutStage%2A> может вызываться во время выполнения любой <xref:System.Web.Services.Protocols.SoapMessageStage>, но при этом <xref:System.InvalidOperationException> вызывается, когда параметры недоступны.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Выходные параметры недоступны.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureStage">
      <MemberSignature Language="C#" Value="protected void EnsureStage (System.Web.Services.Protocols.SoapMessageStage stage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureStage(valuetype System.Web.Services.Protocols.SoapMessageStage stage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureStage(System.Web.Services.Protocols.SoapMessageStage)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureStage (stage As SoapMessageStage)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureStage(System::Web::Services::Protocols::SoapMessageStage stage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stage" Type="System.Web.Services.Protocols.SoapMessageStage" />
      </Parameters>
      <Docs>
        <param name="stage">Утвержденная стадия <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</param>
        <summary>Гарантирует, что этап <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> вызова метода веб-службы XML является этапом или этапами, переданными в виде параметра. Если текущий этап обработки не является одним из переданных этапов, выдается исключение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Несколько этапов можно утверждаемым выполнение побитовой операции OR для нескольких экземпляров <xref:System.Web.Services.Protocols.SoapMessageStage> класса.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureStage%2A> может вызываться во время выполнения любой <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 В следующем примере проверяется, текущий <xref:System.Web.Services.Protocols.SoapMessageStage> либо <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> или <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize>; Если нет, создается исключение.  
  
 [!code-cpp[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/CS/source.cs#1)]
 [!code-vb[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Текущий объект <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> не является утвержденной стадией или стадиями.</exception>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapException Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.SoapException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As SoapException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapException ^ Exception { System::Web::Services::Protocols::SoapException ^ get(); void set(System::Web::Services::Protocols::SoapException ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает <see cref="T:System.Web.Services.Protocols.SoapException" /> из вызова метода веб-службы XML.</summary>
        <value>Исключение <see cref="T:System.Web.Services.Protocols.SoapException" />, происшедшее при вызове метода веб-службы XML. Значение <see langword="null" />, если при вызове метода веб-службы не происходило исключений <see cref="T:System.Web.Services.Protocols.SoapException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.Exception%2A> Свойство может быть доступно во время выполнения любой <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapException" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
      </Docs>
    </Member>
    <Member MemberName="GetInParameterValue">
      <MemberSignature Language="C#" Value="public object GetInParameterValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetInParameterValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetInParameterValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInParameterValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInParameterValue(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Начинающийся с нуля индекс параметра в массиве параметров.</param>
        <summary>Получает параметр, передаваемый в метод веб-службы XML по указанному индексу.</summary>
        <returns>Объект <see cref="T:System.Object" />, представляющий параметр по заданному индексу.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.GetInParameterValue%2A> Свойство доступно, только если доступен в параметрах доступны. ASP.NET создает исключение <xref:System.InvalidOperationException> при доступе к <xref:System.Web.Services.Protocols.SoapMessage.GetInParameterValue%2A> свойства, если в параметрах недоступны.  
  
 В <xref:System.Web.Services.Protocols.SoapClientMessage> входные параметры доступны в <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>. В <xref:System.Web.Services.Protocols.SoapServerMessage> входные параметры доступны в <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#6](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#6)]
 [!code-csharp[SoapMessage#6](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#6)]
 [!code-vb[SoapMessage#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Параметр <paramref name="index" /> меньше нуля или больше размера массива параметров.</exception>
        <exception cref="T:System.InvalidOperationException">Доступ к свойству при недоступности входных параметров.</exception>
        <altmember cref="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)" />
        <altmember cref="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetOutParameterValue">
      <MemberSignature Language="C#" Value="public object GetOutParameterValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOutParameterValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutParameterValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOutParameterValue(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Начинающийся с нуля индекс параметра в массиве параметров.</param>
        <summary>Получает параметр, передаваемый в метод веб-службы XML по указанному индексу.</summary>
        <returns>Объект <see cref="T:System.Object" />, представляющий параметр по заданному индексу.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если выходные параметры недоступны, ASP.NET создает <xref:System.InvalidOperationException> при доступе к <xref:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue%2A> свойство.  
  
 В <xref:System.Web.Services.Protocols.SoapClientMessage> выходные параметры доступны в <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>. В <xref:System.Web.Services.Protocols.SoapServerMessage> выходные параметры доступны в <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> из <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#8](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#8)]
 [!code-csharp[SoapMessage#8](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#8)]
 [!code-vb[SoapMessage#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Параметр <paramref name="index" /> больше размера массива параметров.</exception>
        <exception cref="T:System.InvalidOperationException">Доступ к этому свойству при недоступности выходных параметров.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnValue">
      <MemberSignature Language="C#" Value="public object GetReturnValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetReturnValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReturnValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetReturnValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает возвращаемое значение метода веб-службы XML.</summary>
        <returns>Объект <see cref="T:System.Object" />, представляющий возвращаемое значение метода веб-службы XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если возвращаемое значение недоступно, ASP.NET создает исключение <xref:System.InvalidOperationException> при доступе к <xref:System.Web.Services.Protocols.SoapMessage.GetReturnValue%2A> свойство.  
  
 В <xref:System.Web.Services.Protocols.SoapClientMessage> возвращаемое значение доступен, если <xref:System.Web.Services.Protocols.SoapMessageStage> значение <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize>. В <xref:System.Web.Services.Protocols.SoapServerMessage> возвращаемое значение доступен, если <xref:System.Web.Services.Protocols.SoapMessageStage> значение <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#9](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#9)]
 [!code-csharp[SoapMessage#9](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#9)]
 [!code-vb[SoapMessage#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Метод веб-службы XML не имеет возвращаемого значения.  
  
 OR  
  
 Возвращаемое значение недоступно.</exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapHeaderCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.SoapHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As SoapHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapHeaderCollection ^ Headers { System::Web::Services::Protocols::SoapHeaderCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Коллекция заголовков SOAP, примененных к текущему запросу либо ответу SOAP.</summary>
        <value>Коллекция <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> заголовков SOAP, примененных к текущему запросу или ответу SOAP. Значение <see langword="null" />, если заголовки SOAP отсутствуют.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Заголовки SOAP являются дополнительную часть SOAP-запроса или ответа SOAP. Дополнительные сведения об использовании заголовков SOAP в веб-службах XML с помощью ASP.NET и их клиентов см. в разделе <xref:System.Web.Services.Protocols.SoapHeader> класса.  
  
 Несмотря на то что <xref:System.Web.Services.Protocols.SoapMessage.Headers%2A> свойство может быть доступно на любом этапе, заполняется только сведения о заголовке SOAP в <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> и <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> этапы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInfo">
      <MemberSignature Language="C#" Value="public abstract System.Web.Services.Protocols.LogicalMethodInfo MethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.LogicalMethodInfo MethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.MethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MethodInfo As LogicalMethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Web::Services::Protocols::LogicalMethodInfo ^ MethodInfo { System::Web::Services::Protocols::LogicalMethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.LogicalMethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении в производном классе получает представление прототипа метода веб-службы XML, для которого предназначен запрос SOAP.</summary>
        <value>Объект <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, представляющий метод веб-службы XML, для которого предназначен запрос SOAP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Несмотря на то что <xref:System.Web.Services.Protocols.SoapMessage.MethodInfo%2A> может осуществляться во время выполнения любой <xref:System.Web.Services.Protocols.SoapMessageStage>, имеет только данных во время <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> и <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#7](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#7)]
 [!code-csharp[SoapMessage#7](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#7)]
 [!code-vb[SoapMessage#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="OneWay">
      <MemberSignature Language="C#" Value="public abstract bool OneWay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OneWay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.OneWay" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool OneWay { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее значение свойства <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" /> атрибута <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> или атрибута <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />, примененного к методу веб-службы XML.</summary>
        <value>
          Значение <see langword="true" />, если свойство <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" /> атрибута <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> или атрибута <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />, примененного к методу XML-веб-службы, равно <see langword="true" />; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В разделе <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A?displayProperty=nameWithType> свойство <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> или <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> для получения сведений об односторонних методов XML-веб-службы.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.OneWay%2A> Свойство доступно на всех этапах <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#4](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#4)]
 [!code-csharp[SoapMessage#4](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#4)]
 [!code-vb[SoapMessage#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public virtual System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает версию протокола SOAP, используемого для взаимодействия с веб-службой XML.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />. Значение по умолчанию: <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для <xref:System.Web.Services.Protocols.SoapServerMessage>, <xref:System.Web.Services.Protocols.SoapServerMessage.SoapVersion%2A> свойство гарантированно действительными после <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> рабочей области. В <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> свойство доступно, но не были полностью обработать сообщение SOAP и расширения SOAP, которые могут изменять содержимое сообщения SOAP не запускалась рабочей области.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stage">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapMessageStage Stage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapMessageStage Stage" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Stage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stage As SoapMessageStage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapMessageStage Stage { System::Web::Services::Protocols::SoapMessageStage get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> объекта <see cref="T:System.Web.Services.Protocols.SoapMessage" />.</summary>
        <value>
          <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> выражения <see cref="T:System.Web.Services.Protocols.SoapMessage" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.Stage%2A> Доступ к свойству в любой <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 В следующем примере кода показано, как определить <xref:System.Web.Services.Protocols.SoapMessageStage> в <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A?displayProperty=nameWithType> метод.  
  
 [!code-cpp[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public System.IO.Stream Stream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Stream" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Stream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Stream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает данные, представляющие запрос или ответ SOAP в форме <see cref="T:System.IO.Stream" />.</summary>
        <value>Доступный только для чтения экземпляр класса <see cref="T:System.IO.Stream" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать расширения SOAP, которые проверяют данные, представляющие SOAP-запрос или ответ SOAP, например ведение журнала расширение SOAP `Stream` свойства для просмотра данных на каждом <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
 Расширения SOAP, которые изменяют данные, представляющие SOAP-запрос или ответ SOAP, такие как шифрование или сжатие расширения SOAP, делать это с <xref:System.IO.Stream> переданные <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> метод <xref:System.Web.Services.Protocols.SoapExtension>. <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> Свойство <xref:System.Web.Services.Protocols.SoapMessage> переданные <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> доступно только для чтения.  
  
 Дополнительные сведения об изменении данных, представляющих запрос или ответ SOAP см. в разделе <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage_Headers/CPP/SoapMessage_Headers.cpp#2)]
 [!code-csharp[SoapMessage_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage_Headers/CS/soapmessage_headers.cs#2)]
 [!code-vb[SoapMessage_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage_Headers/VB/soapmessage_headers.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public abstract string Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Url" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Url { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении в производном классе получает базовый URL-адрес веб-службы XML.</summary>
        <value>Базовый URL-адрес веб-службы XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.Url%2A> Свойство может быть доступно во время выполнения любой <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#5](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#5)]
 [!code-csharp[SoapMessage#5](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#5)]
 [!code-vb[SoapMessage#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>