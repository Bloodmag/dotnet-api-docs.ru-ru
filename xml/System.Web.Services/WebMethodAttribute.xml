<Type Name="WebMethodAttribute" FullName="System.Web.Services.WebMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1b4dfe6d1bc749d1515422099588657f4ef56e73" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30549848" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebMethodAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Добавление этого атрибута к методу в веб-службе XML, созданной с помощью ASP.NET, делает возможным вызов этого метода для удаленных веб-клиентов. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Методы внутри класса, имеющих этот атрибут, называются методами XML-веб-службы. Метод и класс должны быть открытыми и выполняться внутри веб-приложения ASP.NET.  
  
   
  
## Examples  
 В примере ниже метод `GetMachineName` можно удаленно вызвать через Интернет, так как он содержит <xref:System.Web.Services.WebMethodAttribute>. `GetUserName` Невозможно вызвать удаленно, так как он не имеет <xref:System.Web.Services.WebMethodAttribute>, даже если это `public`.  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EnterpriseServices.TransactionOption" />
    <altmember cref="T:System.Web.Services.WebService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">Инициализируется в зависимости от того, включено ли состояние сеанса для метода веб-службы XML.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">Инициализируется в зависимости от того, включено ли состояние сеанса для метода веб-службы XML.</param>
        <param name="transactionOption">Инициализирует поддержку транзакций для метода веб-службы XML.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов веб-службы может быть только корнем транзакции, из-за независимой природы протокола HTTP. Это означает, что два следующих параметра эквивалентны, при каждом вызове создается новая транзакция.  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 Это также означает, что все следующие параметры эквивалентны; то есть не поддержку транзакций:  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">Инициализируется в зависимости от того, включено ли состояние сеанса для метода веб-службы XML.</param>
        <param name="transactionOption">Инициализирует поддержку транзакций для метода веб-службы XML.</param>
        <param name="cacheDuration">Инициализирует число секунд хранения ответа в кэше.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов веб-службы может быть только корнем транзакции, из-за независимой природы протокола HTTP.  Это означает, что два следующих параметра эквивалентны, при каждом вызове создается новая транзакция.  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 Это также означает, что все следующие параметры эквивалентны; то есть не поддержку транзакций:  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">Инициализируется в зависимости от того, включено ли состояние сеанса для метода веб-службы XML.</param>
        <param name="transactionOption">Инициализирует поддержку транзакций для метода веб-службы XML.</param>
        <param name="cacheDuration">Инициализирует число секунд хранения ответа в кэше.</param>
        <param name="bufferResponse">Инициализируется в зависимости от того, следует ли записывать ответ на этот запрос в буфер.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов веб-службы может быть только корнем транзакции, из-за независимой природы протокола HTTP.  Это означает, что два следующих параметра эквивалентны, при каждом вызове создается новая транзакция.  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 Это также означает, что все следующие параметры эквивалентны; то есть не поддержку транзакций:  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <param name="bufferResponse">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferResponse">
      <MemberSignature Language="C#" Value="public bool BufferResponse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferResponse" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.BufferResponse" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferResponse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BufferResponse { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает сведения о том, следует ли записывать ответ на этот запрос в буфер.</summary>
        <value>
          Значение <see langword="true" /> означает, что да, значение <see langword="false" /> означает, что нет. Значение по умолчанию: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Установка <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> для `true`, сериализует ответа метода XML-веб-службы в буфер в памяти до полного завершения сериализации ответа или буфер заполнен. Как только ответ буфер, возвращается клиенту XML-веб-службы по сети. Когда <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> — `false`, ответ на метод XML-веб-службы отправляется обратно клиенту, как он сериализуется. Как правило, требуется только установить <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> для `false`, если известно, что метода XML-веб-службы возвращает клиенту большие объемы данных. Для небольших объемов данных, XML-веб-службы производительность повышается с <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> для `true`.  
  
 Когда <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> — `false`, расширения SOAP для метода XML-веб-службы отключены.  
  
   
  
## Examples  
 В следующем примере кода <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> свойства `false` и обрабатывает потоковой передачи текстовый файл обратно клиенту. В примере кода показано, как для потоковой передачи большого объема данных обратно клиенту с помощью класса, реализующего <xref:System.Collections.IEnumerable> интерфейса.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает число секунд, в течение которого ответ должен храниться в кэше.</summary>
        <value>Число секунд, в течение которого ответ должен храниться в кэше. Значением по умолчанию является 0, то есть ответ не кэшируется.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При включенном кэшировании запросы и ответы хранятся в памяти на сервере для по крайней мере длительность кэширования, необходимо соблюдать осторожность, если предполагается, что запросы или ответы будут очень больших или что запросы будут различаться в широких пределах.  
  
 Есть две причины, которые могут повлиять на кэширование вывода в приложении веб-службы ASP.NET 2.0.  
  
 В ASP.NET 2.0 метод HTTP тестовой страницы был изменен с GET на POST. Однако данные POST обычно не кэшируются. Если задать для тестовой страницы в приложении веб-службы ASP.NET 2.0 использование метода GET, кэширование будет работать должным образом.  
  
 Кроме того, протокол HTTP подразумевает, что агент пользователя (браузер или вызывающее приложение) должен иметь возможность переопределять кэширование на сервере путем указания значения "no-cache" для параметра управления кэшем "Cache-Control". Поэтому кэшированные результаты игнорируются приложениями ASP.NET при наличии заголовка "no-cache".  
  
   
  
## Examples  
 Следующий пример помещает результат вызова `ServiceUsage` метода XML-веб-службы в кэше 60 секунд. Каждый раз XML-веб-службы клиент выполняет `ServiceUsage` метода XML-веб-службы в течение этого времени, возвращается тот же результат.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описательное сообщение для метода веб-службы XML.</summary>
        <value>Описательное сообщение для метода веб-службы XML. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Описательное сообщение отображается для потенциальных пользователей веб-службу XML при создании документов описания веб-службы XML, таких как описания службы и справочной страницы службы.  
  
   
  
## Examples  
 В примере ниже строку `Obtains the Server Computer Name` используется для описания метода XML-веб-службы в описание службы и на странице справки службы для веб-службу XML.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EnableSession">
      <MemberSignature Language="C#" Value="public bool EnableSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.EnableSession" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSession { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает, включено ли состояние сеанса для метода веб-службы XML.</summary>
        <value>
          Значение <see langword="true" /> означает, что состояние сеанса для метода веб-службы XML включено. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для хранения состояния сеанса в ASP.NET <xref:System.Web.SessionState.HttpSessionState> объекта веб-службу XML должен наследовать от <xref:System.Web.Services.WebService> и <xref:System.Web.Services.WebMethodAttribute> метода XML-веб-службы, параметр <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> свойства `true`. Если для метода XML-веб-службы не требуется состояние сеанса, его отключение может повысить производительность.  
  
 Клиент XML-веб-службы однозначно идентифицируется файл cookie HTTP, возвращаемый веб-служб XML. Веб-служб XML для сохранения состояния сеанса для клиента, клиент должен сохранять файл cookie. Клиенты могут получать файл cookie HTTP, создав новый экземпляр <xref:System.Net.CookieContainer> и присвоив <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> свойства прокси-класса перед вызовом метода XML-веб-службы. Если необходимо сохранять состояние сеанса, когда экземпляр прокси-класса выходит за пределы области действия, клиент должен сохранять файл cookie HTTP между вызовами веб-службу XML. Для экземпляра клиента веб-форм может сохранить файл cookie HTTP, сохранив <xref:System.Net.CookieContainer> в состояние сеанса. Так как не все XML-веб-службы с помощью состояния сеанса, и таким образом клиенты не всегда требуется использовать <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> свойства прокси клиента, документация по веб-служба XML должна выглядеть следующим образом используется ли состояние сеанса.  
  
   
  
## Examples  
 Пример ниже использует состояние сеанса, чтобы определить, сколько раз конкретного сеанса обращается к метода XML-веб-службы `SessionHitCounter`.  
  
  
  
 В следующем примере кода — это клиент Web Forms веб-службы XML, использующий состояние сеанса. Клиент сохраняет файл cookie HTTP, уникально идентифицирующий сеанс, сохраняя их в состояние сеанса клиента.  
  
 [!code-aspx-csharp[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer" />
      </Docs>
    </Member>
    <Member MemberName="MessageName">
      <MemberSignature Language="C#" Value="public string MessageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.MessageName" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Имя, используемое для метода веб-службы XML в данных, передаваемых в метод веб-службы XML и возвращаемых им.</summary>
        <value>Имя, используемое для метода веб-службы XML в данных, передаваемых в метод веб-службы XML и возвращаемых им. По умолчанию это имя метода веб-службы XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> Свойство может использоваться для псевдонима имена метода или свойства. Чаще всего используют <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> свойство будет для однозначной идентификации полиморфных методов. По умолчанию <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> равно имени метода XML-веб-службы. Таким образом, если веб-служб XML содержит несколько методов с тем же именем, можно однозначно определить отдельные методы XML-веб-службы, задав <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> имя, уникальное в пределах веб-службу XML, не изменяя имя фактического имени метода в коде.  
  
 Данные передаются в веб-служб XML отправляется в запросе, и при возврате, передаются в ответе. В запрос и ответ, имя, используемое для метода XML-веб-службы является ее <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> свойство.  
  
 Имя сообщения, связанные с методом XML-веб-службы должно быть уникальным в пределах веб-службу XML.  
  
 Если после вызова исходного метода клиентами, добавляется новый метод XML-веб-службы с таким же именем, но другими параметрами, для нового метода следует указать другое имя сообщения, но имя исходного сообщения следует оставить, чтобы обеспечить совместимость с существующими клиентами.  
  
   
  
## Examples  
 В следующем примере <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> используется для устранения неоднозначности два `Add` методы.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOption">
      <MemberSignature Language="C#" Value="public System.EnterpriseServices.TransactionOption TransactionOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.EnterpriseServices.TransactionOption TransactionOption" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.TransactionOption" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionOption As TransactionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::EnterpriseServices::TransactionOption TransactionOption { System::EnterpriseServices::TransactionOption get(); void set(System::EnterpriseServices::TransactionOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Обозначает поддержку транзакций для метода веб-службы XML.</summary>
        <value>Поддержка транзакций метода веб-службы XML. Значение по умолчанию: <see cref="F:System.EnterpriseServices.TransactionOption.Disabled" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Методы XML-веб-службы может участвовать только как корневой объект в транзакции, из-за независимой природы протокола HTTP. Методы XML-веб-службы могут вызывать COM-объекты, которые участвуют в той же транзакции метода XML-веб-службы, если COM-объект помечен для работы в рамках транзакций в административном инструменте служб компонентов. Если метод XML-веб-службы с <xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A> свойство `Required` или `RequiresNew` вызывает другой метод XML-веб-службы с <xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A> свойство `Required` или `RequiresNew`, каждый метод XML-веб-службы участвует в отдельном транзакции, так как метод XML-веб-службы может действовать только как корневой объект в транзакции.  
  
|Элемент|Описание:|  
|----------|-----------------|  
|Отключено|Указывает, что метод XML-веб-службы выполняется в области транзакции. При обработке запроса метода XML-веб-службы выполняется без транзакции.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Disabled`)]|  
|NotSupported|Указывает, что метод XML-веб-службы выполняется в области транзакции. При обработке запроса метода XML-веб-службы выполняется без транзакции.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.NotSupported`)]|  
|Поддерживается|Указывает, что метод XML-веб-службы выполняется в области транзакций. При обработке запроса веб-службы XML создается без транзакции.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Supported`)]|  
|Обязательно|Указывает, что метод XML-веб-службы требуется транзакция. Поскольку методы XML-веб-службы может участвовать только как корневой объект в транзакции, для метода XML-веб-службы будет создана новая транзакция.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Required`)]|  
|RequiresNew|Указывает, что метод XML-веб-службы требуется новая транзакция. При обработке запроса веб-службы XML создается в новой транзакции.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.RequiresNew`)]|  
  
 Если исключение из или не перехватывается исключение методом XML-веб-службы, транзакция прерывается автоматически. Если исключения не происходят, транзакция завершается автоматически, если метод явно вызывает `SetAbort`.  
  
   
  
## Examples  
 В приведенном ниже примере начинает новую транзакцию после `Transfer` вызывается метод.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EnterpriseServices.TransactionOption" />
      </Docs>
    </Member>
  </Members>
</Type>