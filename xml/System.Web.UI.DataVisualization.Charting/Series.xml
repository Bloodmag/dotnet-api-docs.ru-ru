<Type Name="Series" FullName="System.Web.UI.DataVisualization.Charting.Series">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4eacfd19ba01a24b22e8c31c6568d6a48deed496" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36592556" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Series : System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Series extends System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.Series" />
  <TypeSignature Language="VB.NET" Value="Public Class Series&#xA;Inherits DataPointCustomProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class Series : System::Web::UI::DataVisualization::Charting::DataPointCustomProperties" />
  <TypeSignature Language="F#" Value="type Series = class&#xA;    inherit DataPointCustomProperties" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.DataPointCustomProperties</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Points")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Сохраняет точки данных и атрибуты ряда.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Web.UI.DataVisualization.Charting.Series> объект представляет ряд данных и хранится в <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> класса.  
  
 Объект <xref:System.Web.UI.DataVisualization.Charting.Series> хранит <xref:System.Web.UI.DataVisualization.Charting.DataPoint> объектов с помощью <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection> класса. Он также хранит атрибуты ряда данных. Например ряд данных имеет атрибут цвета, фонового изображения атрибут, атрибут градиента фона и т. д.  
  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint> Объекты, принадлежащие к ряду также содержать собственные атрибуты. Как правило если для точки данных и ряда, к которой он принадлежит установлен тот же атрибут, атрибут точки данных имеет приоритет.  
  
 Ряд не обязательно строится на диаграмме. он позволяет хранить значения точек данных, которые используются для выполнения вычислений, из которого создается и затем диаграмме другого ряда. Например серии A, который отображается, может быть результатом сложения точек данных ряда B и C, на то, что ни один из этих рядов отображается. Чтобы нарисовать <xref:System.Web.UI.DataVisualization.Charting.Series> объекта, <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> свойство должно быть присвоено имя <xref:System.Web.UI.DataVisualization.Charting.ChartArea> объект, используемый для построения ряда.  
  
 Когда создается последовательность, она автоматически назначается <xref:System.Web.UI.DataVisualization.Charting.ChartArea> объект с именем «Default» или первую доступную область диаграммы в коллекции областей диаграммы, если объект «Default» не существует.  
  
 Чтобы отключить отображение ряда, задайте его <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> строку нулевой длины.  
  
 <xref:System.Web.UI.DataVisualization.Charting.Series.ChartType%2A> Свойство определяет тип диаграммы, который будет использоваться для построения этого ряда, если он рисуется.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Series();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Series(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.Series : string -&gt; System.Web.UI.DataVisualization.Charting.Series" Usage="new System.Web.UI.DataVisualization.Charting.Series name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя создаваемого объекта <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />. Это имя должно быть уникальным, в противном случае создается исключение.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> указанным именем ряда.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для создания нового экземпляра <xref:System.Web.UI.DataVisualization.Charting.Series> класса.  
  
> [!NOTE]
>  Эта серия может хранить только в том случае <xref:System.Web.UI.DataVisualization.Charting.DataPoint> объекты, имеющие одно значение Y. Если для этого ряда добавляется точки данных, которая содержит несколько значений Y, будет вызвано исключение.  
  
 Чтобы создать последовательность во время выполнения, используйте <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection.Add%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series (string name, int yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, yValues As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Series(System::String ^ name, int yValues);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.Series : string * int -&gt; System.Web.UI.DataVisualization.Charting.Series" Usage="new System.Web.UI.DataVisualization.Charting.Series (name, yValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="yValues" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Имя создаваемого объекта <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />.</param>
        <param name="yValues">Максимальное число значений Y, разрешенное для объектов <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />, принадлежащих к данному ряду.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> указанными именем и максимальным числом значений Y.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для создания и инициализации нового экземпляра <xref:System.Web.UI.DataVisualization.Charting.Series> класса.  
  
> [!IMPORTANT]
>  Этот ряд будет только для хранения <xref:System.Web.UI.DataVisualization.Charting.DataPoint> объектов, которые не имеют несколько значений Y превышает максимально допустимое значение `yValues` параметра. При добавлении точки данных, которая содержит несколько значений Y превышает заданный максимум, будет вызвано исключение.  
  
 Для создания <xref:System.Web.UI.DataVisualization.Charting.Series> объекта во время выполнения `Add` и `Insert` также можно использовать методы свойства коллекции рядов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisLabel">
      <MemberSignature Language="C#" Value="public override string AxisLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AxisLabel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.AxisLabel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AxisLabel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AxisLabel { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AxisLabel : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.AxisLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текстовую подпись оси для ряда.</summary>
        <value>Значение <see langword="string" />. Значение по умолчанию — пустая строка.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartArea">
      <MemberSignature Language="C#" Value="public string ChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChartArea : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.ChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.SeriesAreaNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя объекта <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />, используемого для построения ряда данных, если такой объект имеется.</summary>
        <value>Значение типа <see langword="string" />, представляющее объект <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />, используемый для построения ряда.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если ряд добавляется во время разработки и во время выполнения, она автоматически назначается «Default» <xref:System.Web.UI.DataVisualization.Charting.ChartArea> объекта или первую доступную область диаграммы в <xref:System.Web.UI.DataVisualization.Charting.ChartAreaCollection> Если «Default» не существует.  
  
 Присвойте этому свойству значение строку нулевой длины, если ряд строить не требуется.  
  
   
  
## Examples  
  
```vb  
' Create a new legend and associate three series with the legend.  
Public Sub CreateSecondLegend()  
    ' Attach the first series to a chart area.  
    Chart1.Series["Series1"].ChartArea = "Chart Area 1";  
  
    ' Attach the second series to a chart area.  
    Chart1.Series["Series2"].ChartArea = "Chart Area 2";  
  
End Sub 'CreateSecondLegend  
```  
  
```csharp  
// Create a new legend and associate three series with the legend.  
public void CreateSecondLegend()  
{  
     // Attach the first series to a chart area.  
     Chart1.Series["Series1"].ChartArea = "Chart Area 1";  
  
     // Attach the second series to a chart area.  
     Chart1.Series["Series2"].ChartArea = "Chart Area 2";  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SeriesChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SeriesChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ChartType" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartType As SeriesChartType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SeriesChartType ChartType { System::Web::UI::DataVisualization::Charting::SeriesChartType get(); void set(System::Web::UI::DataVisualization::Charting::SeriesChartType value); };" />
      <MemberSignature Language="F#" Value="member this.ChartType : System.Web.UI.DataVisualization.Charting.SeriesChartType with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.ChartType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartTypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SeriesChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип диаграммы для ряда.</summary>
        <value>Значение перечисления <see cref="T:System.Web.UI.DataVisualization.Charting.SeriesChartType" />, указывающее тип диаграммы, используемой для представления ряда. Значение по умолчанию — <see cref="F:System.Web.UI.DataVisualization.Charting.SeriesChartType.Column" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство определяет тип диаграммы <xref:System.Web.UI.DataVisualization.Charting.Series> объекта; значение учитывает регистр. В разделе <xref:System.Web.UI.DataVisualization.Charting.SeriesChartType> перечисления список возможных типов диаграмм для ряда.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartTypeName">
      <MemberSignature Language="C#" Value="public string ChartTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChartTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ChartTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChartTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChartTypeName : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.ChartTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("Column")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartTypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ChartTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя типа диаграммы, используемой для рисования ряда.</summary>
        <value>Значение типа <see langword="string" />, представляющее имя типа диаграммы.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="series.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />, а при необходимости освобождает также управляемые ресурсы.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyPointStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPointCustomProperties EmptyPointStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.DataPointCustomProperties EmptyPointStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.EmptyPointStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property EmptyPointStyle As DataPointCustomProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::DataPointCustomProperties ^ EmptyPointStyle { System::Web::UI::DataVisualization::Charting::DataPointCustomProperties ^ get(); void set(System::Web::UI::DataVisualization::Charting::DataPointCustomProperties ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyPointStyle : System.Web.UI.DataVisualization.Charting.DataPointCustomProperties with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.EmptyPointStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPointCustomProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает стиль рисования точек, помеченных как пустые.</summary>
        <value>Объект <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Series.EmptyPointStyle%2A> Свойство определяет стиль рисования для точек, помеченных как пустые, например, в цвет границы, в изображения маркера, цвет фона или изображения и т. д.  
  
 Некоторые свойства применимы только для конкретного типа диаграммы. Например <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImage%2A> свойство не применяется к графиках и применить диаграмму с областями.  
  
 Чтобы отобразить изображение, которое указывает, пустой точки, используйте <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerImage%2A> и <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerStyle%2A> свойства, а не <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackImage%2A> свойство.  
  
 <xref:System.Web.UI.DataVisualization.Charting.Series.AxisLabel%2A> Свойство определяет метку оси для пустых точек. Обратите внимание, что для типов диаграмм с накоплением метки оси определяется <xref:System.Web.UI.DataVisualization.Charting.Series.AxisLabel%2A> первый ряд точек, это свойство имеет значение свойства.  
  
 Точки данных можно вручную пометить как пустой, задав <xref:System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty%2A> свойства `true`. Кроме того, один из `InsertEmptyPoints` методы в <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> класс может использоваться для проверки отсутствующих данных и вставить пустые точки, если точка данных отсутствует.  
  
> [!NOTE]
>  В случае диаграмм типа линии определяется цвет линии для строк, которые подключаются к пустой точки <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Color%2A> значение свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает флаг, указывающий, будет ли ряд отображаться на построенной диаграмме.</summary>
        <value>Значение <see langword="true" />, если ряд отображается на построенной диаграмме; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращает или задает значение, определяющее, будет ли ряд отображается в готовом для просмотра <xref:System.Web.UI.DataVisualization.Charting.ChartArea>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXValueIndexed">
      <MemberSignature Language="C#" Value="public bool IsXValueIndexed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXValueIndexed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsXValueIndexed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXValueIndexed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsXValueIndexed : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает флаг, указывающий, будут ли использоваться в качестве значений X индексы точек данных.</summary>
        <value>Значение <see langword="true" />, если в качестве значений X будут использоваться индексы точек данных, принадлежащих к ряду; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Все точки данных в ряду имеют последовательные индексы, и если это свойство имеет `true` то точки данных будут построены последовательно, независимо от их связанные значения X. Это означает, что будет существовать без «отсутствует» точек данных.  
  
 Например предположим, что существует три (3) точки данных, имеющие значения X 1, 2 и 4. Если этому свойству не `false`, бы точки данных, отсутствует в расположении по оси x, с меткой «3». Тем не менее если это свойство имеет значение `true`, три точки данных будут построены в точках 1, 2 и 4, последовательно и точки данных не будет. Позиция оси x с меткой «3» не будет отображаться на диаграмме.  
  
 Это полезно в том случае, если не хотите использовать пропущенные точки данных для интервалов, что вы знаете, что данные, такие как выходные дни не будет.  
  
> [!IMPORTANT]
>  Если отображаются несколько рядов и по крайней мере один из них используются индексированные значения X, то все ряды должны быть выровнены — то есть одинаковое количество точек данных, и соответствующие точки должен иметь те же значения X.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Legend">
      <MemberSignature Language="C#" Value="public string Legend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Legend" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Legend" />
      <MemberSignature Language="VB.NET" Value="Public Property Legend As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Legend { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Legend : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.Legend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.SeriesLegendNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя ряда, связанного с объектом <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" />.</summary>
        <value>Значение <see langword="string" />, представляющее имя объекта <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если ряд добавляется во время разработки и во время выполнения, он автоматически назначается значение по умолчанию <xref:System.Web.UI.DataVisualization.Charting.Legend> объекта.  
  
 Если не требуется ряд отображается в условных обозначениях, присвойте этому свойству значение строку нулевой длины, или задать <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.IsVisibleInLegend%2A> свойства `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerStep">
      <MemberSignature Language="C#" Value="public int MarkerStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerStep" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.MarkerStep" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerStep As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerStep { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MarkerStep : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.MarkerStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, определяющее частоту отображения маркеров точек данных.</summary>
        <value>Значение типа <see langword="integer" />, определяющее частоту отображения маркеров точек данных. Значением по умолчанию является единица (1).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Series.MarkerStep%2A> Свойство определяет частоту отображения маркеров. Например, если это свойство имеет значение два (2), все прочие точки данных будут использовать маркер.  
  
 Это свойство используется только в том случае, если включены маркеры с помощью <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerStyle%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает уникальное имя объекта <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />.</summary>
        <value>Значение типа <see langword="string" />, представляющее уникальное имя ряда данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имя ряда данных должно быть уникальным; в противном случае будет создано исключение.  
  
 Это свойство может использоваться как индексатор при извлечении <xref:System.Web.UI.DataVisualization.Charting.Series> объекта из <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> объекта.  
  
 Если это свойство имеет значение в строку нулевой длины, будет вызвано исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartColorPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartColorPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Property Palette As ChartColorPalette" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartColorPalette Palette { System::Web::UI::DataVisualization::Charting::ChartColorPalette get(); void set(System::Web::UI::DataVisualization::Charting::ChartColorPalette value); };" />
      <MemberSignature Language="F#" Value="member this.Palette : System.Web.UI.DataVisualization.Charting.ChartColorPalette with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.Palette" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ColorPaletteEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartColorPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает цветовую палитру для объекта <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />.</summary>
        <value>Значение перечисления <see cref="T:System.Web.UI.DataVisualization.Charting.ChartColorPalette" />, определяющее палитру для ряда данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Палитра используется для автоматического назначения цветов элементов данных, если сами точки данных не имеют назначенных цветов и если данные <xref:System.Web.UI.DataVisualization.Charting.Series> объектом, принадлежащим точек данных также не имеет назначенного цвета.  
  
 Если нет рядом или точкой данных явно заданы цвета, цвета, используемые зависят от типа диаграммы и палитры элемента управления Chart или Series, если он указан. В приведенной ниже таблице для получения дополнительных сведений:  
  
|Тип диаграммы|Используется палитра ряда?|Цвета, отображаемые точками данных|  
|----------------|--------------------------|-------------------------------------|  
|Любой фигурной диаграммы (например, круговые и кольцевые диаграммы)|Нет|Первый доступных цветов, используемых с <xref:System.Web.UI.DataVisualization.Charting.Chart> палитры элемента управления. Один цвет каждой точки данных.|  
|Все диаграммы, за исключением фигурных диаграмм|Нет|Первый доступные цвета из <xref:System.Web.UI.DataVisualization.Charting.Chart> палитры элемента управления. Один цвет каждого ряда данных.|  
|Любой фигурной диаграммы (например, круговые и кольцевые диаграммы)|Да|Первый доступных цветов, используемых с <xref:System.Web.UI.DataVisualization.Charting.Series> палитры. Один цвет каждой точки данных.|  
|Все диаграммы, за исключением фигурных диаграмм|Да|Первый доступных цветов, используемых с <xref:System.Web.UI.DataVisualization.Charting.Series> палитры. Один цвет каждого ряда данных.|  
  
 Это <xref:System.Web.UI.DataVisualization.Charting.Series.Palette%2A> свойство имеет приоритет над <xref:System.Web.UI.DataVisualization.Charting.Chart.Palette%2A> свойство корневого <xref:System.Web.UI.DataVisualization.Charting.Chart> объекта по отношению к отображения данных.  
  
 Примечание: Если `Palette` свойство для обоих <xref:System.Web.UI.DataVisualization.Charting.Chart> и <xref:System.Web.UI.DataVisualization.Charting.Series> объектов имеет значение None, а не цвет не назначается точкам рядов и данных соответствующие данные, палитра по умолчанию «BrightPastel» или <xref:System.Web.UI.DataVisualization.Charting.Chart.PaletteCustomColors%2A> используется.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Points">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPointCollection Points { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.DataPointCollection Points" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Points" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Points As DataPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::DataPointCollection ^ Points { System::Web::UI::DataVisualization::Charting::DataPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Points : System.Web.UI.DataVisualization.Charting.DataPointCollection" Usage="System.Web.UI.DataVisualization.Charting.Series.Points" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.DataPointCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" />, представляющий коллекцию объектов <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> Свойство коллекции дает возможность добавлять и удалять точки данных ряда. Это свойство также предоставляет методы и свойства, которые могут использоваться для управления этой коллекции, такие как поиск точек данных, выполнения привязки данных и т. д.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ShadowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ShadowColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ShadowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ShadowColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.ShadowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128,0,0,0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает цвет тени для ряда.</summary>
        <value>Значение <see cref="T:System.Drawing.Color" />. Цвет по умолчанию — <see cref="P:System.Drawing.Color.Black" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращает или задает цвет тени ряда, который может быть любое допустимое значение ARGB (альфа-канал, красный, зеленый, синий).  
  
 Значение альфа-канала может использоваться для создания эффекта реалистичные тени; Попробуйте использовать значение цвета «128,0,0,0» для.  
  
 Чтобы реализовать тени, установите <xref:System.Web.UI.DataVisualization.Charting.Series.ShadowOffset%2A> свойству значение, отличное от нуля (0).  
  
   
  
## Examples  
  
```  
' Set series shadow color and offset  
Public Sub SetSeriesShadow()  
     Chart1.Series("Default"}.ShadowColor = Color.Blue  
     Chart1.Series("Default"}.ShadowOffset = 2  
End Sub 'SetSeriesShadow  
```  
  
```csharp  
// Set series shadow color and offset   
public void SetSeriesShadow()  
{      
    Chart1.Series("Default"}.ShadowColor = Color.Blue;  
    Chart1.Series["Default"].ShadowOffset = 2;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowOffset">
      <MemberSignature Language="C#" Value="public int ShadowOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ShadowOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ShadowOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowOffset : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.ShadowOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает смещение тени для ряда (в пикселях).</summary>
        <value>Значение типа <see langword="integer" />, определяющее смещение тени для ряда (в пикселях).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы создать тень, используйте значение, отличное от нуля (0). Положительное значение приведет к тому, что тень, сдвигается вниз и вправо. Отрицательное значение приведет к тому, что тень, начинается вверх и влево.  
  
   
  
## Examples  
 В следующем примере кода задает visual атрибуты ряда.  
  
```vb  
' Set series shadow offset  
Public Sub SetSeriesShadowOffset()  
    Chart1.Series("Default"}.ShadowOffset = 2  
End Sub 'SetSeriesVisualAttributes  
```  
  
```csharp  
// Set series shadow offset   
public void SetSeriesShadowOffset ()  
{      
    Chart1.Series["Default"].ShadowOffset = 2;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartLabelStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SmartLabelStyle SmartLabelStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.SmartLabelStyle SmartLabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.SmartLabelStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property SmartLabelStyle As SmartLabelStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SmartLabelStyle ^ SmartLabelStyle { System::Web::UI::DataVisualization::Charting::SmartLabelStyle ^ get(); void set(System::Web::UI::DataVisualization::Charting::SmartLabelStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SmartLabelStyle : System.Web.UI.DataVisualization.Charting.SmartLabelStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.SmartLabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SmartLabelStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает стиль смарт-меток.</summary>
        <value>Значение перечисления <see cref="T:System.Web.UI.DataVisualization.Charting.SmartLabelStyle" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выполняет сортировку в объекте <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />. Обратите внимание, что в классе <see cref="T:System.Web.UI.DataVisualization.Charting.DataManipulator" /> представлены методы сортировки, которые обеспечивают более высокую гибкость, чем данные методы сортировки.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Sort(System.Collections.Generic.IComparer{System.Web.UI.DataVisualization.Charting.DataPoint})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of DataPoint))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Collections.Generic.IComparer&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; -&gt; unit" Usage="series.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">Интерфейс <see cref="T:System.Collections.IComparer" />.</param>
        <summary>Сортирует точки ряда с использованием интерфейса <see cref="T:System.Collections.IComparer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Web::UI::DataVisualization::Charting::PointSortOrder pointSortOrder);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Web.UI.DataVisualization.Charting.PointSortOrder -&gt; unit" Usage="series.Sort pointSortOrder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">Порядок сортировки.</param>
        <summary>Сортирует точки данных ряда в соответствии с указанным порядком сортировки.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Web::UI::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ sortBy);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Web.UI.DataVisualization.Charting.PointSortOrder * string -&gt; unit" Usage="series.Sort (pointSortOrder, sortBy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">Порядок сортировки.</param>
        <param name="sortBy">Значение, используемое для сортировки (X, Y, Y2...).</param>
        <summary>Сортирует точки ряда в соответствии с указанным порядком сортировки и значением, используемым для сортировки.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XAxisType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AxisType XAxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.AxisType XAxisType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.XAxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property XAxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::AxisType XAxisType { System::Web::UI::DataVisualization::Charting::AxisType get(); void set(System::Web::UI::DataVisualization::Charting::AxisType value); };" />
      <MemberSignature Language="F#" Value="member this.XAxisType : System.Web.UI.DataVisualization.Charting.AxisType with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.XAxisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип оси X для ряда.</summary>
        <value>Значение перечисления <see cref="P:System.Web.UI.DataVisualization.Charting.Series.XAxisType" />, определяющее, какая ось X используется для ряда: основная или вспомогательная.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для всех типов диаграмм, за исключением горизонтальных такие как панель и нормированные линейчатые диаграммы и фигурные диаграммы, например круговые, кольцевые, воронкообразных и пирамидальных диаграммах, основная ось x всегда нижней оси и вспомогательной оси — сверху. Для линейчатых и линейчатые диаграммы с накоплением, основная ось x — это левая ось, а дополнительная ось x — это правая ось.  
  
 При данных отображается с использованием вторичной оси x, необходимо использовать <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX2%2A> свойство для задания свойств оси, а не <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValueMember">
      <MemberSignature Language="C#" Value="public string XValueMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XValueMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.XValueMember" />
      <MemberSignature Language="VB.NET" Value="Public Property XValueMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XValueMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XValueMember : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.XValueMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldXConvertor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает столбец-член источника данных диаграммы, используемый для привязки данных к значению X ряда.</summary>
        <value>Значение <see langword="string" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство принимает имя столбца элемента либо порядковый номер столбца элемента.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValueType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartValueType XValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartValueType XValueType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.XValueType" />
      <MemberSignature Language="VB.NET" Value="Public Property XValueType As ChartValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartValueType XValueType { System::Web::UI::DataVisualization::Charting::ChartValueType get(); void set(System::Web::UI::DataVisualization::Charting::ChartValueType value); };" />
      <MemberSignature Language="F#" Value="member this.XValueType : System.Web.UI.DataVisualization.Charting.ChartValueType with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.XValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает типы значений, построение которых выполняется по оси Х.</summary>
        <value>Значение перечисления <see cref="T:System.Web.UI.DataVisualization.Charting.ChartValueType" />, определяющее тип данных значений X, хранящихся в ряде. Значение по умолчанию — <see cref="F:System.Web.UI.DataVisualization.Charting.ChartValueType.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Series.XValueType%2A> Свойство определяет тип данных, хранимых для ряда.  
  
 Присвойте этому свойству значение <xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime> разрешающее значение X должна вводиться как <xref:System.DateTime> значение, а не как <xref:System.Double>. Значения даты и времени хранятся внутренне платформой .NET Framework как <xref:System.Double> значения. То же самое верно для <xref:System.Web.UI.DataVisualization.Charting.CustomLabel.ToPosition%2A> и <xref:System.Web.UI.DataVisualization.Charting.CustomLabel.FromPosition%2A> свойства <xref:System.Web.UI.DataVisualization.Charting.CustomLabel> объектов.  
  
 `IntervalType` Свойство найдено в классы сетки, деления и метки оси определяет тип интервала.  
  
> [!NOTE]
>  Чтобы установить <xref:System.DateTime> формат для метки оси, которые создаются из данных X-запятой, с помощью <xref:System.Web.UI.DataVisualization.Charting.LabelStyle.Format%2A> свойством, это свойство должно быть присвоено <xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime>.  
  
 Это свойство также может использоваться для определения типа данных, с которыми связаны значения X.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YAxisType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AxisType YAxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.AxisType YAxisType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YAxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property YAxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::AxisType YAxisType { System::Web::UI::DataVisualization::Charting::AxisType get(); void set(System::Web::UI::DataVisualization::Charting::AxisType value); };" />
      <MemberSignature Language="F#" Value="member this.YAxisType : System.Web.UI.DataVisualization.Charting.AxisType with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.YAxisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип оси Y для ряда.</summary>
        <value>Значение перечисления <see cref="T:System.Web.UI.DataVisualization.Charting.AxisType" />, определяющее, какая ось Y используется для ряда: основная или вспомогательная.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Series.YAxisType%2A> Свойство определяет, если ряд отображается с использованием первичной или вторичной оси y.  
  
 Для всех типов, за исключением того, круговая, кольцевая, линейчатая диаграмма диапазонов диаграмм, линейчатых и с накоплением линейчатые диаграммы, основная ось y — это левая вертикальная ось, а дополнительная ось — это правая вертикальная ось. Для линейчатых и линейчатые диаграммы с накоплением, основная ось — это левая горизонтальная ось, а верхняя горизонтальная ось является вспомогательной оси y.  
  
 При данных отображается с использованием вспомогательной оси y, необходимо использовать <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY2%2A> свойство для задания свойств оси, а не <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValueMembers">
      <MemberSignature Language="C#" Value="public string YValueMembers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YValueMembers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YValueMembers" />
      <MemberSignature Language="VB.NET" Value="Public Property YValueMembers As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YValueMembers { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YValueMembers : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.YValueMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldValueAxisUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldYConvertor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает столбцы-члены источника данных диаграммы, используемые для привязки данных к значениям Y ряда.</summary>
        <value>Значение <see langword="string" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство принимает строку с разделителями-запятыми, содержащий имена или порядковые номера столбцов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValuesPerPoint">
      <MemberSignature Language="C#" Value="public int YValuesPerPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 YValuesPerPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YValuesPerPoint" />
      <MemberSignature Language="VB.NET" Value="Public Property YValuesPerPoint As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int YValuesPerPoint { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.YValuesPerPoint : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.YValuesPerPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает максимальное число значений Y, разрешенное для объектов <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> в объекте <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />.</summary>
        <value>Значение типа <see langword="integer" />, определяющее максимальное число значений Y, которое разрешено иметь точкам данных в ряде. Значение по умолчанию — единица (1).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При добавлении <xref:System.Web.UI.DataVisualization.Charting.DataPoint> объекта, имеющего несколько значений Y, чем это свойство указывает, лишние значения Y, будет игнорироваться.  
  
 Количество значений Y, которые необходимы для правильного отображения диаграммы зависит от выбранного типа диаграммы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValueType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartValueType YValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartValueType YValueType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YValueType" />
      <MemberSignature Language="VB.NET" Value="Public Property YValueType As ChartValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartValueType YValueType { System::Web::UI::DataVisualization::Charting::ChartValueType get(); void set(System::Web::UI::DataVisualization::Charting::ChartValueType value); };" />
      <MemberSignature Language="F#" Value="member this.YValueType : System.Web.UI.DataVisualization.Charting.ChartValueType with get, set" Usage="System.Web.UI.DataVisualization.Charting.Series.YValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.SeriesYValueTypeConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип данных значений Y в точках данных, хранящихся в ряде.</summary>
        <value>Значение перечисления <see cref="T:System.Web.UI.DataVisualization.Charting.ChartValueType" />, определяющее тип данных значений Y, хранящихся в ряде. Значение по умолчанию — <see cref="F:System.Web.UI.DataVisualization.Charting.ChartValueType.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Series.YValueType%2A> Свойство определяет тип данных, хранимых для ряда. Значение этого свойства обычно задается либо <xref:System.Web.UI.DataVisualization.Charting.ChartValueType.Auto> или <xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime>.  
  
 `IntervalType` Свойство найдено в классы сетки, деления и метки оси определяет тип интервала.  
  
 Это свойство также может использоваться для определения типа данных, с которыми связаны значения Y.  
  
 Это возможно для построения выражений даты как значения точек данных, хотя это делается редко. Если это свойство имеет значение <xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime>, может значение Y, введенная в качестве <xref:System.DateTime> значения, а не как <xref:System.Double>. Значения даты и времени хранятся внутренне платформой .NET Framework как <xref:System.Double> значения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>