<Type Name="ClientScriptItem" FullName="System.Web.UI.Design.ClientScriptItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d77ce97f07b5b60d6c56df547aed5b293f774843" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30589048" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientScriptItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ClientScriptItem" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptItem sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет элемент клиентского скрипта в веб-форме или пользовательском элементе управления во время разработки. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ClientScriptItem> Класса представляет `script` элемента, содержащегося в веб-документа во время разработки. Это реализация конструктора пользовательского элемента управления можно использовать <xref:System.Web.UI.Design.ClientScriptItem> объект для добавления элементы клиентского сценария веб-формы или пользовательского элемента управления.  
  
 Во время разработки используйте <xref:System.Web.UI.Design.WebFormsRootDesigner> класс, чтобы установить или проверить элементы клиентского сценария, содержащиеся в документе, например веб-формы, серверный элемент управления, странице содержимого или главной страницы, в области конструктора. Получить коллекцию элементов клиентского скрипта, содержащихся в веб-документа с помощью <xref:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument%2A> метод. Добавление веб-документа элемент клиентского скрипта с помощью <xref:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument%2A> метод.  
  
 Как правило `script` элемент содержит операторы скрипта, или определяет внешнее местонахождение для операторов скрипта. `script` Элемент при необходимости может определять язык операторов скрипта. Используйте <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> конструктор для инициализации свойства для нового объекта скрипта. Используйте <xref:System.Web.UI.Design.ClientScriptItem> свойства для изучения `script` объекта атрибуты и содержимое. <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> Представляет свойство `language` атрибут `script` элемента. <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> Представляет свойство `src` атрибута. <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> Свойство представляет скрипт инструкции для выполнения на стороне клиента, содержащихся в `script` элемент.  
  
 Используйте <xref:System.Web.UI.Design.ClientScriptItem> класса для управления сценариями, которые должны выполняться во время разработки.  
  
 Чтобы управлять элементы клиентского сценария во время выполнения, используйте <xref:System.Web.UI.ClientScriptManager> класса. Дополнительные сведения об использовании клиентских скриптов во время выполнения см. в разделе [клиентского скрипта в веб-страниц ASP.NET](http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa).  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ClientScriptItem> Класса представляет `script` элементов во время разработки, в конечном счете анализируются и запуск в браузере клиента. Поскольку `script` элементы, созданные для <xref:System.Web.UI.Design.ClientScriptItem> объектов не выполняются на сервере, не содержат элементов `runat="server"` атрибута.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ClientScriptItemCollection" />
    <altmember cref="M:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument(System.Web.UI.Design.ClientScriptItem)" />
    <altmember cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientScriptItem (string text, string source, string language, string type, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string source, string language, string type, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ClientScriptItem.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, source As String, language As String, type As String, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientScriptItem(System::String ^ text, System::String ^ source, System::String ^ language, System::String ^ type, System::String ^ id);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Содержимое элемента <see langword="script" /> — строка операторов скрипта, выполняемых на стороне клиента.</param>
        <param name="source">Значение атрибута <see langword="src" /> для элемента <see langword="script" />, определяющее местонахождение внешнего источника для содержимого клиентского скрипта.</param>
        <param name="language">Значение атрибута <see langword="language" /> для элемента <see langword="script" />, определяющее язык операторов скрипта.</param>
        <param name="type">Значение атрибут типа для элемента <see langword="script" />, показывающее тип MIME для связанного обработчика скрипта.</param>
        <param name="id">Идентификатор элемента <see langword="script" />. Этот аргумент обязателен требуется узелом разработки (например, [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]).</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.Design.ClientScriptItem" />, используя предоставленные параметры.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Инструкции для инициализации <xref:System.Web.UI.Design.ClientScriptItem> объектов с помощью `text` или `source` параметра (а не оба). Используйте `text` для инициализации скрипт, используя входную строку, которая содержит операторы. Кроме того, используйте `source` инициализировать сценарий с помощью пути, содержащего операторы скрипта.  
  
 Можно указать любой из входных параметров, как `null` или пустая строка (»»); соответствующее свойство задается с помощью входного значения и `script` элемент создается без этого свойства. С помощью `null` или пустая строка ("») приводит к следующим результатам:  
  
-   Для `text`, соответствующий `script` элемент не содержит операторов сценария.  
  
-   Для `source`, `src` атрибут не задан в `script` элемент.  
  
-   Для `language`, `language` атрибут не задан в `script` элемент.  
  
     Когда блок клиентского скрипта не определяет язык скрипта, язык определяется клиентского браузера.  
  
-   Для `type`, `type` атрибут не задан в элементе script.  
  
     Когда блок клиентского скрипта не определяет тип скрипта, браузер клиента определяет тип.  
  
-   Для `id`, узел разработки (например, [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]) вызовет <xref:System.ArgumentNullException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="id" /> имеет значение "null" (создаваемое узелом разработки).</exception>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение атрибута <see langword="ID" /> для элемента клиентского скрипта.</summary>
        <value>Значение <see langword="ID" /> элемента <see langword="script" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение атрибута <see langword="language" /> для элемента клиентского скрипта.</summary>
        <value>Имя языка, заданное для атрибута <see langword="language" /> в элементе <see langword="script" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> Свойство представляет язык, на котором написаны операторы скрипта. Если <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> свойство `null` или пустая строка ("»), `language` атрибут не задан в `script` элемент. Когда блок клиентского скрипта не определяет язык скрипта, язык определяется клиентского браузера.  
  
 <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> Свойство инициализируется программой <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> конструктор.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение атрибута <see langword="src" /> для элемента клиентского скрипта.</summary>
        <value>Путь к файлу источника, заданный для атрибута <see langword="src" /> в элементе <see langword="script" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> Свойство определяет местонахождение внешнего источника для содержимого клиентского скрипта. Как правило, операторы скрипта для `script` элемента задаются с помощью либо <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> или <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> свойства.  
  
 Если <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> свойство `null` или пустая строка ("»), `src` атрибут не задан в `script` элемент.  
  
 <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> Свойство инициализируется программой <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает операторы скрипта, содержащиеся в элементе клиентского скрипта.</summary>
        <value>Операторы скрипта, содержащиеся в элементе <see langword="script" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> Свойство представляет инструкции, содержащиеся в `script` элемент. Как правило, операторы скрипта для `script` элемента задаются с помощью либо <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> или <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> свойства.  
  
 Если <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> свойство `null` или пустая строка ("»), `script` элемент не содержит все инструкции скрипта.  
  
 <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> Свойство инициализируется программой <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> конструктор.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение атрибута <see langword="type" /> для элемента клиентского скрипта.</summary>
        <value>Имя типа MIME, связанного с элементом <see langword="script" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
  </Members>
</Type>